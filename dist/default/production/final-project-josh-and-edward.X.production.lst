

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 19:15:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Generated 06/04/2022 GMT
    94                           ; 
    95                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F67K40 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127   000000                     
   128                           	psect	idataBANK0
   129   004C4C                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _DataFlag
   133   004C4C  01                 	db	1
   134                           
   135                           	psect	idataBANK1
   136   004C42                     __pidataBANK1:
   137                           	callstack 0
   138                           
   139                           ;initializer for _high_threshold
   140   004C42  03E8               	dw	1000
   141                           
   142                           ;initializer for _Turn45Delay
   143   004C44  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   004C46  001E               	dw	30
   147   000000                     _TRISEbits	set	3973
   148   000000                     _TX4REG	set	3812
   149   000000                     _RC4STAbits	set	3815
   150   000000                     _SP4BRGH	set	3814
   151   000000                     _SSP2CON2bits	set	3802
   152   000000                     _RX4PPS	set	3605
   153   000000                     _SSP2CLKPPS	set	3612
   154   000000                     _SSP2DATPPS	set	3613
   155   000000                     _ANSELDbits	set	3751
   156   000000                     _SSP2ADD	set	3798
   157   000000                     _SSP2CON1bits	set	3801
   158   000000                     _LATAbits	set	3961
   159   000000                     _LATFbits	set	3966
   160   000000                     _LATGbits	set	3967
   161   000000                     _TRISAbits	set	3969
   162   000000                     _TRISGbits	set	3975
   163   000000                     _PORTFbits	set	3982
   164   000000                     _CCPR2H	set	4006
   165   000000                     _CCPR1H	set	4010
   166   000000                     _TRISCbits	set	3971
   167   000000                     _TRISDbits	set	3972
   168   000000                     _TRISFbits	set	3974
   169   000000                     _LATDbits	set	3964
   170   000000                     _RC4REG	set	3811
   171   000000                     _SP4BRGL	set	3813
   172   000000                     _TX4STAbits	set	3816
   173   000000                     _BAUD4CONbits	set	3817
   174   000000                     _SSP2CON2	set	3802
   175   000000                     _SSP2STAT	set	3800
   176   000000                     _ANSELFbits	set	3764
   177   000000                     _SSP2BUF	set	3797
   178   000000                     _PIE4bits	set	3629
   179   000000                     _PIR4bits	set	3639
   180   000000                     _RC0PPS	set	3682
   181   000000                     _RD5PPS	set	3695
   182   000000                     _RE2PPS	set	3700
   183   000000                     _RD6PPS	set	3696
   184   000000                     _RC7PPS	set	3689
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _CCP1CONbits	set	4011
   188   000000                     _CCPTMRS0bits	set	4013
   189   000000                     _T2PR	set	4028
   190   000000                     _T2CONbits	set	4029
   191   000000                     _TMR0L	set	4051
   192   000000                     _TMR0H	set	4052
   193   000000                     _CCP2CONbits	set	4007
   194   000000                     _CCP3CONbits	set	3878
   195   000000                     _CCP4CONbits	set	3874
   196   000000                     _T0CON1bits	set	4054
   197   000000                     _T0CON0bits	set	4053
   198   000000                     _RE4PPS	set	3702
   199   000000                     _RG6PPS	set	3720
   200   000000                     _T2CLKCONbits	set	4031
   201   000000                     _T2HLTbits	set	4030
   202                           
   203                           	psect	smallconst
   204   000E00                     __psmallconst:
   205                           	callstack 0
   206   000E00  00                 	db	0
   207   000E01                     STR_1:
   208   000E01  72                 	db	114	;'r'
   209   000E02  65                 	db	101	;'e'
   210   000E03  64                 	db	100	;'d'
   211   000E04  3D                 	db	61	;'='
   212   000E05  25                 	db	37
   213   000E06  64                 	db	100	;'d'
   214   000E07  20                 	db	32
   215   000E08  67                 	db	103	;'g'
   216   000E09  72                 	db	114	;'r'
   217   000E0A  65                 	db	101	;'e'
   218   000E0B  65                 	db	101	;'e'
   219   000E0C  6E                 	db	110	;'n'
   220   000E0D  3D                 	db	61	;'='
   221   000E0E  25                 	db	37
   222   000E0F  64                 	db	100	;'d'
   223   000E10  20                 	db	32
   224   000E11  62                 	db	98	;'b'
   225   000E12  6C                 	db	108	;'l'
   226   000E13  75                 	db	117	;'u'
   227   000E14  65                 	db	101	;'e'
   228   000E15  3D                 	db	61	;'='
   229   000E16  25                 	db	37
   230   000E17  64                 	db	100	;'d'
   231   000E18  20                 	db	32
   232   000E19  74                 	db	116	;'t'
   233   000E1A  69                 	db	105	;'i'
   234   000E1B  6D                 	db	109	;'m'
   235   000E1C  65                 	db	101	;'e'
   236   000E1D  72                 	db	114	;'r'
   237   000E1E  3D                 	db	61	;'='
   238   000E1F  25                 	db	37
   239   000E20  64                 	db	100	;'d'
   240   000E21  20                 	db	32
   241   000E22  0D                 	db	13
   242   000E23  0A                 	db	10
   243   000E24  00                 	db	0
   244   000E25  00                 	db	0	; dummy byte at the end
   245   000000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249   0041D2                     __pcinit:
   250                           	callstack 0
   251   0041D2                     start_initialization:
   252                           	callstack 0
   253   0041D2                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Initialize objects allocated to BANK1 (6 bytes)
   257                           ; load TBLPTR registers with __pidataBANK1
   258   0041D2  0E42               	movlw	low __pidataBANK1
   259   0041D4  6EF6               	movwf	tblptrl,c
   260   0041D6  0E4C               	movlw	high __pidataBANK1
   261   0041D8  6EF7               	movwf	tblptrh,c
   262   0041DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   263   0041DC  6EF8               	movwf	tblptru,c
   264   0041DE  EE01  F0CF         	lfsr	0,__pdataBANK1
   265   0041E2  EE10 F006          	lfsr	1,6
   266   0041E6                     copy_data0:
   267   0041E6  0009               	tblrd		*+
   268   0041E8  CFF5 FFEE          	movff	tablat,postinc0
   269   0041EC  50E5               	movf	postdec1,w,c
   270   0041EE  50E1               	movf	fsr1l,w,c
   271   0041F0  E1FA               	bnz	copy_data0
   272                           
   273                           ; Initialize objects allocated to BANK0 (1 bytes)
   274                           ; load TBLPTR registers with __pidataBANK0
   275   0041F2  0E4C               	movlw	low __pidataBANK0
   276   0041F4  6EF6               	movwf	tblptrl,c
   277   0041F6  0E4C               	movlw	high __pidataBANK0
   278   0041F8  6EF7               	movwf	tblptrh,c
   279   0041FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   280   0041FC  6EF8               	movwf	tblptru,c
   281   0041FE  0009               	tblrd		*+	;fetch initializer
   282   004200  CFF5 F0FE          	movff	tablat,__pdataBANK0
   283                           
   284                           ; Clear objects allocated to BANK2 (100 bytes)
   285   004204  EE02  F000         	lfsr	0,__pbssBANK2
   286   004208  0E64               	movlw	100
   287   00420A                     clear_0:
   288   00420A  6AEE               	clrf	postinc0,c
   289   00420C  06E8               	decf	wreg,f,c
   290   00420E  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK1 (207 bytes)
   293   004210  EE01  F000         	lfsr	0,__pbssBANK1
   294   004214  0ECF               	movlw	207
   295   004216                     clear_1:
   296   004216  6AEE               	clrf	postinc0,c
   297   004218  06E8               	decf	wreg,f,c
   298   00421A  E1FD               	bnz	clear_1
   299                           
   300                           ; Clear objects allocated to BANK0 (14 bytes)
   301   00421C  EE00  F0F0         	lfsr	0,__pbssBANK0
   302   004220  0E0E               	movlw	14
   303   004222                     clear_2:
   304   004222  6AEE               	clrf	postinc0,c
   305   004224  06E8               	decf	wreg,f,c
   306   004226  E1FD               	bnz	clear_2
   307                           
   308                           ; Clear objects allocated to COMRAM (4 bytes)
   309   004228  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   310   00422A  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311   00422C  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312   00422E  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   313   004230                     end_of_initialization:
   314                           	callstack 0
   315   004230                     __end_of__initialization:
   316                           	callstack 0
   317   004230  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318   004232  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319   004234  0E00               	movlw	low (__Lsmallconst shr (0+16))
   320   004236  6EF8               	movwf	tblptru,c
   321   004238  0E0E               	movlw	high __Lsmallconst
   322   00423A  6EF7               	movwf	tblptrh,c
   323   00423C  0100               	movlb	0
   324   00423E  EF81  F00C         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327   00005B                     __pbssCOMRAM:
   328                           	callstack 0
   329   00005B                     _TxBufReadCnt:
   330                           	callstack 0
   331   00005B                     	ds	1
   332   00005C                     _TxBufWriteCnt:
   333                           	callstack 0
   334   00005C                     	ds	1
   335   00005D                     _RxBufReadCnt:
   336                           	callstack 0
   337   00005D                     	ds	1
   338   00005E                     _RxBufWriteCnt:
   339                           	callstack 0
   340   00005E                     	ds	1
   341                           
   342                           	psect	bssBANK0
   343   0000F0                     __pbssBANK0:
   344                           	callstack 0
   345   0000F0                     _prec:
   346                           	callstack 0
   347   0000F0                     	ds	2
   348   0000F2                     _move_count:
   349                           	callstack 0
   350   0000F2                     	ds	2
   351   0000F4                     _flags:
   352                           	callstack 0
   353   0000F4                     	ds	1
   354   0000F5                     _motorL:
   355                           	callstack 0
   356   0000F5                     	ds	9
   357                           
   358                           	psect	dataBANK0
   359   0000FE                     __pdataBANK0:
   360                           	callstack 0
   361   0000FE                     _DataFlag:
   362                           	callstack 0
   363   0000FE                     	ds	1
   364                           
   365                           	psect	bssBANK1
   366   000100                     __pbssBANK1:
   367                           	callstack 0
   368   000100                     _EUSART4TXbuf:
   369                           	callstack 0
   370   000100                     	ds	60
   371   00013C                     _EUSART4RXbuf:
   372                           	callstack 0
   373   00013C                     	ds	20
   374   000150                     	ds	12
   375   00015C                     _width:
   376                           	callstack 0
   377   00015C                     	ds	2
   378   00015E                     _low_threshold:
   379                           	callstack 0
   380   00015E                     	ds	2
   381   000160                     _WayBack:
   382                           	callstack 0
   383   000160                     	ds	50
   384   000192                     _dbuf:
   385                           	callstack 0
   386   000192                     	ds	32
   387   0001B2                     _rel:
   388                           	callstack 0
   389   0001B2                     	ds	12
   390   0001BE                     _motorR:
   391                           	callstack 0
   392   0001BE                     	ds	9
   393   0001C7                     _vals:
   394                           	callstack 0
   395   0001C7                     	ds	8
   396                           
   397                           	psect	dataBANK1
   398   0001CF                     __pdataBANK1:
   399                           	callstack 0
   400   0001CF                     _high_threshold:
   401                           	callstack 0
   402   0001CF                     	ds	2
   403   0001D1                     _Turn45Delay:
   404                           	callstack 0
   405   0001D1                     	ds	2
   406   0001D3                     _power:
   407                           	callstack 0
   408   0001D3                     	ds	2
   409                           
   410                           	psect	bssBANK2
   411   000200                     __pbssBANK2:
   412                           	callstack 0
   413   000200                     _Time_forward:
   414                           	callstack 0
   415   000200                     	ds	100
   416                           
   417                           	psect	cstackBANK0
   418   000060                     __pcstackBANK0:
   419                           	callstack 0
   420   000060                     ?_sprintf:
   421                           	callstack 0
   422   000060                     sprintf@s:
   423                           	callstack 0
   424   000060                     _Colour_decider$2833:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x0
   428   000060                     	ds	2
   429   000062                     sprintf@fmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433   000062                     	ds	2
   434   000064                     Colour_decider@Cmax_i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438   000064                     	ds	2
   439   000066                     Colour_decider@RGB_col:
   440                           	callstack 0
   441                           
   442                           ; 12 bytes @ 0x6
   443   000066                     	ds	6
   444   00006C                     sprintf@ap:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xC
   448   00006C                     	ds	2
   449   00006E                     sprintf@f:
   450                           	callstack 0
   451                           
   452                           ; 11 bytes @ 0xE
   453   00006E                     	ds	4
   454   000072                     Colour_decider@Cmax:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x12
   458   000072                     	ds	4
   459   000076                     Colour_decider@Cmin:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x16
   463   000076                     	ds	4
   464   00007A                     Colour_decider@i:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1A
   468   00007A                     	ds	2
   469   00007C                     Colour_decider@Hue:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x1C
   473   00007C                     	ds	4
   474   000080                     main@buf:
   475                           	callstack 0
   476                           
   477                           ; 100 bytes @ 0x20
   478   000080                     	ds	100
   479   0000E4                     main@temp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x84
   483   0000E4                     	ds	2
   484   0000E6                     main@temp_1189:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x86
   488   0000E6                     	ds	2
   489   0000E8                     main@run_flag:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x88
   493   0000E8                     	ds	2
   494   0000EA                     main@consecuitive:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x8A
   498   0000EA                     	ds	2
   499   0000EC                     main@colour:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x8C
   503   0000EC                     	ds	2
   504   0000EE                     main@prev_colour:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x8E
   508   0000EE                     	ds	2
   509                           
   510                           	psect	cstackCOMRAM
   511   000001                     __pcstackCOMRAM:
   512                           	callstack 0
   513   000001                     ??_I2C_2_Master_Idle:
   514   000001                     ?___wmul:
   515                           	callstack 0
   516   000001                     ?___fladd:
   517                           	callstack 0
   518   000001                     ?___xxtofl:
   519                           	callstack 0
   520   000001                     ?___aodiv:
   521                           	callstack 0
   522   000001                     ?___aomod:
   523                           	callstack 0
   524   000001                     sendCharSerial4@charToSend:
   525                           	callstack 0
   526   000001                     initDCmotorsPWM@PWMperiod:
   527                           	callstack 0
   528   000001                     getTMR0val@moving:
   529                           	callstack 0
   530   000001                     delayed_ms@time:
   531                           	callstack 0
   532   000001                     ___wmul@multiplier:
   533                           	callstack 0
   534   000001                     fputc@c:
   535                           	callstack 0
   536   000001                     ___flge@ff1:
   537                           	callstack 0
   538   000001                     ___fladd@b:
   539                           	callstack 0
   540   000001                     ___xxtofl@val:
   541                           	callstack 0
   542   000001                     ___aodiv@dividend:
   543                           	callstack 0
   544   000001                     ___aomod@dividend:
   545                           	callstack 0
   546                           
   547                           ; 8 bytes @ 0x0
   548   000001                     	ds	1
   549   000002                     ??_I2C_2_Master_Read:
   550   000002                     I2C_2_Master_Write@data_byte:
   551                           	callstack 0
   552   000002                     sendStringSerial4@string:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1
   556   000002                     	ds	1
   557   000003                     ??_delayed_ms:
   558   000003                     color_writetoaddr@value:
   559                           	callstack 0
   560   000003                     I2C_2_Master_Read@ack:
   561                           	callstack 0
   562   000003                     ___wmul@multiplicand:
   563                           	callstack 0
   564   000003                     fputc@fp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x2
   568   000003                     	ds	1
   569   000004                     color_writetoaddr@address:
   570                           	callstack 0
   571   000004                     I2C_2_Master_Read@tmp:
   572                           	callstack 0
   573   000004                     delayed_ms@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x3
   577   000004                     	ds	1
   578   000005                     ??_fputc:
   579   000005                     ??_color_click_init:
   580   000005                     ??___xxtofl:
   581   000005                     ?_color_read_lum:
   582                           	callstack 0
   583   000005                     ?_color_read_Red:
   584                           	callstack 0
   585   000005                     ?_color_read_Green:
   586                           	callstack 0
   587   000005                     ?_color_read_Blue:
   588                           	callstack 0
   589   000005                     ___wmul@product:
   590                           	callstack 0
   591   000005                     ___flge@ff2:
   592                           	callstack 0
   593   000005                     ___fladd@a:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x4
   597   000005                     	ds	2
   598   000007                     ??_color_read_lum:
   599   000007                     ??_color_read_Red:
   600   000007                     ??_color_read_Green:
   601   000007                     ??_color_read_Blue:
   602   000007                     ?___lwdiv:
   603                           	callstack 0
   604   000007                     ___lwdiv@dividend:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x6
   608   000007                     	ds	2
   609   000009                     ??___fladd:
   610   000009                     ??___flge:
   611   000009                     ___xxtofl@sign:
   612                           	callstack 0
   613   000009                     ___lwdiv@divisor:
   614                           	callstack 0
   615   000009                     ___aodiv@divisor:
   616                           	callstack 0
   617   000009                     ___aomod@divisor:
   618                           	callstack 0
   619                           
   620                           ; 8 bytes @ 0x8
   621   000009                     	ds	1
   622   00000A                     ___xxtofl@exp:
   623                           	callstack 0
   624   00000A                     color_read_lum@tmp:
   625                           	callstack 0
   626   00000A                     color_read_Red@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Green@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Blue@tmp:
   631                           	callstack 0
   632   00000A                     fputs@s:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636   00000A                     	ds	1
   637   00000B                     ___lwdiv@quotient:
   638                           	callstack 0
   639   00000B                     ___xxtofl@arg:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xA
   643   00000B                     	ds	1
   644   00000C                     readColours@vals:
   645                           	callstack 0
   646   00000C                     fputs@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0xB
   650   00000C                     	ds	1
   651   00000D                     ___lwdiv@counter:
   652                           	callstack 0
   653   00000D                     ___fladd@signs:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0xC
   657   00000D                     	ds	1
   658   00000E                     ___fladd@aexp:
   659                           	callstack 0
   660   00000E                     fputs@c:
   661                           	callstack 0
   662   00000E                     setMotorPWM@m:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xD
   666   00000E                     	ds	1
   667   00000F                     ___fladd@bexp:
   668                           	callstack 0
   669   00000F                     fputs@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0xE
   673   00000F                     	ds	1
   674   000010                     ??_setMotorPWM:
   675   000010                     ___fladd@grs:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0xF
   679   000010                     	ds	1
   680   000011                     ?___flsub:
   681                           	callstack 0
   682   000011                     ___aodiv@counter:
   683                           	callstack 0
   684   000011                     ___aomod@counter:
   685                           	callstack 0
   686   000011                     pad@fp:
   687                           	callstack 0
   688   000011                     ___flsub@b:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x10
   692   000011                     	ds	1
   693   000012                     setMotorPWM@posDuty:
   694                           	callstack 0
   695   000012                     ___aodiv@sign:
   696                           	callstack 0
   697   000012                     ___aomod@sign:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x11
   701   000012                     	ds	1
   702   000013                     ?_abs:
   703                           	callstack 0
   704   000013                     setMotorPWM@negDuty:
   705                           	callstack 0
   706   000013                     pad@buf:
   707                           	callstack 0
   708   000013                     abs@a:
   709                           	callstack 0
   710   000013                     ___aodiv@quotient:
   711                           	callstack 0
   712                           
   713                           ; 8 bytes @ 0x12
   714   000013                     	ds	1
   715   000014                     stop@mL:
   716                           	callstack 0
   717   000014                     turnLeft@mL:
   718                           	callstack 0
   719   000014                     turnRight@mL:
   720                           	callstack 0
   721   000014                     fullSpeedAhead@mL:
   722                           	callstack 0
   723   000014                     timed_forward@mL:
   724                           	callstack 0
   725   000014                     fullSpeedBack@mL:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x13
   729   000014                     	ds	1
   730   000015                     ??_abs:
   731   000015                     pad@p:
   732                           	callstack 0
   733   000015                     ___flsub@a:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x14
   737   000015                     	ds	1
   738   000016                     stop@mR:
   739                           	callstack 0
   740   000016                     turnLeft@mR:
   741                           	callstack 0
   742   000016                     turnRight@mR:
   743                           	callstack 0
   744   000016                     fullSpeedAhead@mR:
   745                           	callstack 0
   746   000016                     timed_forward@mR:
   747                           	callstack 0
   748   000016                     fullSpeedBack@mR:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x15
   752   000016                     	ds	1
   753   000017                     ??_pad:
   754                           
   755                           ; 1 bytes @ 0x16
   756   000017                     	ds	1
   757   000018                     ??_fullSpeedAhead:
   758   000018                     ??_stop:
   759   000018                     ??_turnLeft:
   760   000018                     ??_turnRight:
   761   000018                     ??_fullSpeedBack:
   762   000018                     timed_forward@time:
   763                           	callstack 0
   764   000018                     pad@i:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x17
   768   000018                     	ds	1
   769   000019                     ?___fldiv:
   770                           	callstack 0
   771   000019                     ___fleq@ff1:
   772                           	callstack 0
   773   000019                     ___fldiv@b:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x18
   777   000019                     	ds	1
   778   00001A                     ??_timed_forward:
   779   00001A                     turnRight45@mL:
   780                           	callstack 0
   781   00001A                     turnLeft45@mL:
   782                           	callstack 0
   783   00001A                     reverseDetect@mL:
   784                           	callstack 0
   785   00001A                     reverseOneBlock@mL:
   786                           	callstack 0
   787   00001A                     ForwardOneBlock@mL:
   788                           	callstack 0
   789   00001A                     Forwardhalfblock@mL:
   790                           	callstack 0
   791   00001A                     RetryMove@mL:
   792                           	callstack 0
   793   00001A                     pad@w:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x19
   797   00001A                     	ds	2
   798   00001C                     turnRight45@mR:
   799                           	callstack 0
   800   00001C                     turnLeft45@mR:
   801                           	callstack 0
   802   00001C                     reverseDetect@mR:
   803                           	callstack 0
   804   00001C                     reverseOneBlock@mR:
   805                           	callstack 0
   806   00001C                     ForwardOneBlock@mR:
   807                           	callstack 0
   808   00001C                     Forwardhalfblock@mR:
   809                           	callstack 0
   810   00001C                     RetryMove@mR:
   811                           	callstack 0
   812   00001C                     dtoa@fp:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x1B
   816   00001C                     	ds	1
   817   00001D                     ___fleq@ff2:
   818                           	callstack 0
   819   00001D                     ___fldiv@a:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x1C
   823   00001D                     	ds	1
   824   00001E                     ??_Forwardhalfblock:
   825   00001E                     ??_RetryMove:
   826   00001E                     ??_turnRight45:
   827   00001E                     ??_turnLeft45:
   828   00001E                     ??_reverseDetect:
   829   00001E                     ??_reverseOneBlock:
   830   00001E                     ??_ForwardOneBlock:
   831   00001E                     dtoa@d:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x1D
   835   00001E                     	ds	2
   836   000020                     RedMove@mL:
   837                           	callstack 0
   838   000020                     GreenMove@mL:
   839                           	callstack 0
   840   000020                     BlueMove@mL:
   841                           	callstack 0
   842   000020                     YellowMove@mL:
   843                           	callstack 0
   844   000020                     PinkMove@mL:
   845                           	callstack 0
   846   000020                     OrangeMove@mL:
   847                           	callstack 0
   848   000020                     LightBlueMove@mL:
   849                           	callstack 0
   850   000020                     ReverseYellow@mL:
   851                           	callstack 0
   852   000020                     ReversePink@mL:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x1F
   856   000020                     	ds	1
   857   000021                     ??___fldiv:
   858   000021                     ??___fleq:
   859                           
   860                           ; 1 bytes @ 0x20
   861   000021                     	ds	1
   862   000022                     RedMove@mR:
   863                           	callstack 0
   864   000022                     GreenMove@mR:
   865                           	callstack 0
   866   000022                     BlueMove@mR:
   867                           	callstack 0
   868   000022                     YellowMove@mR:
   869                           	callstack 0
   870   000022                     PinkMove@mR:
   871                           	callstack 0
   872   000022                     OrangeMove@mR:
   873                           	callstack 0
   874   000022                     LightBlueMove@mR:
   875                           	callstack 0
   876   000022                     ReverseYellow@mR:
   877                           	callstack 0
   878   000022                     ReversePink@mR:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x21
   882   000022                     	ds	2
   883   000024                     go_Home@WayBack:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x23
   887   000024                     	ds	1
   888   000025                     ___fldiv@rem:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x24
   892   000025                     	ds	1
   893   000026                     ??_dtoa:
   894   000026                     go_Home@Time_forward:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x25
   898   000026                     	ds	2
   899   000028                     ??_go_Home:
   900                           
   901                           ; 1 bytes @ 0x27
   902   000028                     	ds	1
   903   000029                     ___fldiv@sign:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x28
   907   000029                     	ds	1
   908   00002A                     ___fldiv@new_exp:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x29
   912   00002A                     	ds	1
   913   00002B                     go_Home@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2A
   917   00002B                     	ds	1
   918   00002C                     ___fldiv@grs:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x2B
   922   00002C                     	ds	2
   923   00002E                     _dtoa$2509:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x2D
   927   00002E                     	ds	2
   928   000030                     ___fldiv@bexp:
   929                           	callstack 0
   930   000030                     dtoa@p:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x2F
   934   000030                     	ds	1
   935   000031                     ___fldiv@aexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x30
   939   000031                     	ds	1
   940   000032                     ?___flmul:
   941                           	callstack 0
   942   000032                     colour_rel@vals:
   943                           	callstack 0
   944   000032                     dtoa@w:
   945                           	callstack 0
   946   000032                     ___flmul@b:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x31
   950   000032                     	ds	2
   951   000034                     colour_rel@rel:
   952                           	callstack 0
   953   000034                     dtoa@n:
   954                           	callstack 0
   955                           
   956                           ; 8 bytes @ 0x33
   957   000034                     	ds	2
   958   000036                     colour_rel@L:
   959                           	callstack 0
   960   000036                     ___flmul@a:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x35
   964   000036                     	ds	4
   965   00003A                     ??___flmul:
   966   00003A                     _colour_rel$2831:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x39
   970   00003A                     	ds	2
   971   00003C                     dtoa@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x3B
   975   00003C                     	ds	2
   976   00003E                     ___flmul@sign:
   977                           	callstack 0
   978   00003E                     dtoa@s:
   979                           	callstack 0
   980   00003E                     _colour_rel$2832:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x3D
   984   00003E                     	ds	1
   985   00003F                     vfpfcnvrt@fp:
   986                           	callstack 0
   987   00003F                     ___flmul@grs:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x3E
   991   00003F                     	ds	2
   992   000041                     vfpfcnvrt@fmt:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x40
   996   000041                     	ds	1
   997   000042                     colour_rel@R:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x41
  1001   000042                     	ds	1
  1002   000043                     ___flmul@aexp:
  1003                           	callstack 0
  1004   000043                     vfpfcnvrt@ap:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x42
  1008   000043                     	ds	1
  1009   000044                     ___flmul@bexp:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x43
  1013   000044                     	ds	1
  1014   000045                     ??_vfpfcnvrt:
  1015   000045                     ___flmul@prod:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x44
  1019   000045                     	ds	1
  1020   000046                     colour_rel@G:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x45
  1024   000046                     	ds	1
  1025   000047                     vfpfcnvrt@convarg:
  1026                           	callstack 0
  1027                           
  1028                           ; 8 bytes @ 0x46
  1029   000047                     	ds	2
  1030   000049                     ___flmul@temp:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x48
  1034   000049                     	ds	1
  1035   00004A                     colour_rel@B:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x49
  1039   00004A                     	ds	1
  1040   00004B                     ?_Colour_decider:
  1041                           	callstack 0
  1042   00004B                     Colour_decider@vals:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x4A
  1046   00004B                     	ds	2
  1047   00004D                     Colour_decider@rel:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x4C
  1051   00004D                     	ds	2
  1052   00004F                     ??_Colour_decider:
  1053   00004F                     vfpfcnvrt@cp:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4E
  1057   00004F                     	ds	2
  1058   000051                     ?_vfprintf:
  1059                           	callstack 0
  1060   000051                     vfprintf@fp:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x50
  1064   000051                     	ds	2
  1065   000053                     vfprintf@fmt:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x52
  1069   000053                     	ds	2
  1070   000055                     vfprintf@ap:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x54
  1074   000055                     	ds	2
  1075   000057                     vfprintf@cfmt:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x56
  1079   000057                     	ds	2
  1080   000059                     ??_main:
  1081                           
  1082                           ; 1 bytes @ 0x58
  1083   000059                     	ds	2
  1084                           
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 30 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  colour          2  140[BANK0 ] int 
  1095 ;;  temp            2  134[BANK0 ] int 
  1096 ;;  temp            2  132[BANK0 ] int 
  1097 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1098 ;;  prev_colour     2  142[BANK0 ] int 
  1099 ;;  consecuitive    2  138[BANK0 ] int 
  1100 ;;  run_flag        2  136[BANK0 ] int 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1114 ;;Total ram usage:      114 bytes
  1115 ;; Hardware stack levels required when called: 9
  1116 ;; This function calls:
  1117 ;;		_BlueMove
  1118 ;;		_Colour_decider
  1119 ;;		_Forwardhalfblock
  1120 ;;		_GreenMove
  1121 ;;		_I2C_2_Master_Init
  1122 ;;		_Interrupts_init
  1123 ;;		_LightBlueMove
  1124 ;;		_OrangeMove
  1125 ;;		_PinkMove
  1126 ;;		_RedMove
  1127 ;;		_RetryMove
  1128 ;;		_Timer0_init
  1129 ;;		_YellowMove
  1130 ;;		_color_click_init
  1131 ;;		_colour_rel
  1132 ;;		_fullSpeedAhead
  1133 ;;		_getTMR0val
  1134 ;;		_go_Home
  1135 ;;		_initDCmotorsPWM
  1136 ;;		_initUSART4
  1137 ;;		_readColours
  1138 ;;		_sendStringSerial4
  1139 ;;		_sprintf
  1140 ;;		_stop
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text0
  1147   001902                     __ptext0:
  1148                           	callstack 0
  1149   001902                     _main:
  1150                           	callstack 22
  1151   001902                     
  1152                           ;main.c: 31:     initUSART4();
  1153   001902  ECF1  F025         	call	_initUSART4	;wreg free
  1154   001906                     
  1155                           ;main.c: 32:     Interrupts_init();
  1156   001906  EC25  F026         	call	_Interrupts_init	;wreg free
  1157   00190A                     
  1158                           ;main.c: 33:     color_click_init();
  1159   00190A  EC0A  F023         	call	_color_click_init	;wreg free
  1160   00190E                     
  1161                           ;main.c: 34:     I2C_2_Master_Init();
  1162   00190E  EC82  F025         	call	_I2C_2_Master_Init	;wreg free
  1163   001912                     
  1164                           ;main.c: 35:     Timer0_init();
  1165   001912  ECE1  F025         	call	_Timer0_init	;wreg free
  1166   001916                     
  1167                           ;main.c: 36:     initDCmotorsPWM(200);
  1168   001916  0E00               	movlw	0
  1169   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1170   00191A  0EC8               	movlw	200
  1171   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1172   00191E  ECAE  F01F         	call	_initDCmotorsPWM	;wreg free
  1173   001922                     
  1174                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1175   001922  9287               	bcf	135,1,c	;volatile
  1176   001924                     
  1177                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1178   001924  9881               	bcf	129,4,c	;volatile
  1179   001926                     
  1180                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1181   001926  9E86               	bcf	134,7,c	;volatile
  1182   001928                     
  1183                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1184   001928  8486               	bsf	134,2,c	;volatile
  1185   00192A                     
  1186                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1187   00192A  010E               	movlb	14	; () banked
  1188   00192C  95B4               	bcf	180,2,b	;volatile
  1189   00192E                     
  1190                           ; BSR set to: 14
  1191                           ;main.c: 43:     LATGbits.LATG1=1;
  1192   00192E  827F               	bsf	127,1,c	;volatile
  1193   001930                     
  1194                           ; BSR set to: 14
  1195                           ;main.c: 44:     LATAbits.LATA4=1;
  1196   001930  8879               	bsf	121,4,c	;volatile
  1197   001932                     
  1198                           ; BSR set to: 14
  1199                           ;main.c: 45:     LATFbits.LATF7=1;
  1200   001932  8E7E               	bsf	126,7,c	;volatile
  1201   001934                     
  1202                           ; BSR set to: 14
  1203                           ;main.c: 49:     motorL.power=0;
  1204   001934  0E00               	movlw	0
  1205   001936  0100               	movlb	0	; () banked
  1206   001938  6FF5               	movwf	_motorL& (0+255),b
  1207   00193A                     
  1208                           ; BSR set to: 0
  1209                           ;main.c: 50:     motorL.direction=1;
  1210   00193A  0E01               	movlw	1
  1211   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1212   00193E                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 51:     motorL.brakemode=1;
  1215   00193E  0E01               	movlw	1
  1216   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1217   001942                     
  1218                           ; BSR set to: 0
  1219                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1220   001942  0EAA               	movlw	170
  1221   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1222   001946  0E0F               	movlw	15
  1223   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1224   00194A                     
  1225                           ; BSR set to: 0
  1226                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1227   00194A  0EA6               	movlw	166
  1228   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1229   00194E  0E0F               	movlw	15
  1230   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1231   001952                     
  1232                           ; BSR set to: 0
  1233                           ;main.c: 54:     motorL.PWMperiod=200;
  1234   001952  0E00               	movlw	0
  1235   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1236   001956  0EC8               	movlw	200
  1237   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1238   00195A                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 55:     motorR.power=0;
  1241   00195A  0E00               	movlw	0
  1242   00195C  0101               	movlb	1	; () banked
  1243   00195E  6FBE               	movwf	_motorR& (0+255),b
  1244   001960                     
  1245                           ; BSR set to: 1
  1246                           ;main.c: 56:     motorR.direction=1;
  1247   001960  0E01               	movlw	1
  1248   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1249   001964                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 57:     motorR.brakemode=1;
  1252   001964  0E01               	movlw	1
  1253   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1254   001968                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1257   001968  0E25               	movlw	37
  1258   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1259   00196C  0E0F               	movlw	15
  1260   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1261   001970                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1264   001970  0E21               	movlw	33
  1265   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1266   001974  0E0F               	movlw	15
  1267   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1268   001978                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 60:     motorR.PWMperiod=200;
  1271   001978  0E00               	movlw	0
  1272   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1273   00197C  0EC8               	movlw	200
  1274   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1275   001980                     
  1276                           ; BSR set to: 1
  1277                           ;main.c: 61:     int consecuitive=0;
  1278   001980  0E00               	movlw	0
  1279   001982  0100               	movlb	0	; () banked
  1280   001984  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1281   001986  0E00               	movlw	0
  1282   001988  6FEA               	movwf	main@consecuitive& (0+255),b
  1283   00198A                     
  1284                           ; BSR set to: 0
  1285                           ;main.c: 62:     int prev_colour =0;
  1286   00198A  0E00               	movlw	0
  1287   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1288   00198E  0E00               	movlw	0
  1289   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1290   001992                     
  1291                           ; BSR set to: 0
  1292                           ;main.c: 63:     int run_flag=1;
  1293   001992  0E00               	movlw	0
  1294   001994  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1295   001996  0E01               	movlw	1
  1296   001998  6FE8               	movwf	main@run_flag& (0+255),b
  1297   00199A                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 64:     move_count=-1;
  1300   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1301   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1302   00199E                     l396:
  1303   00199E  B48E               	btfsc	142,2,c	;volatile
  1304   0019A0  EFD4  F00C         	goto	u4371
  1305   0019A4  EFD6  F00C         	goto	u4370
  1306   0019A8                     u4371:
  1307   0019A8  EFCF  F00C         	goto	l396
  1308   0019AC                     u4370:
  1309   0019AC                     
  1310                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1311   0019AC  0E52               	movlw	82
  1312   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1313   0019B0  0E2B               	movlw	43
  1314   0019B2  6E59               	movwf	??_main^0,c
  1315   0019B4  0E00               	movlw	0
  1316   0019B6                     u4587:
  1317   0019B6  2EE8               	decfsz	wreg,f,c
  1318   0019B8  D7FE               	bra	u4587
  1319   0019BA  2E59               	decfsz	??_main^0,f,c
  1320   0019BC  D7FC               	bra	u4587
  1321   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1322   0019C0  D7FA               	bra	u4587
  1323   0019C2  D000               	nop2	
  1324   0019C4                     
  1325                           ;main.c: 67:     TMR0H=0;
  1326   0019C4  0E00               	movlw	0
  1327   0019C6  6ED4               	movwf	212,c	;volatile
  1328   0019C8                     
  1329                           ;main.c: 68:     TMR0L=0;
  1330   0019C8  0E00               	movlw	0
  1331   0019CA  6ED3               	movwf	211,c	;volatile
  1332                           
  1333                           ;main.c: 69:     while (run_flag)
  1334   0019CC  EFFF  F00E         	goto	l4784
  1335   0019D0                     l4658:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1339   0019D0  0EF5               	movlw	low _motorL
  1340   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1341   0019D4  0E00               	movlw	high _motorL
  1342   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1343   0019D8  0EBE               	movlw	low _motorR
  1344   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1345   0019DC  0E01               	movlw	high _motorR
  1346   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1347   0019E0  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  1348   0019E4                     
  1349                           ;main.c: 77:         readColours(&vals);
  1350   0019E4  0EC7               	movlw	low _vals
  1351   0019E6  6E0C               	movwf	readColours@vals^0,c
  1352   0019E8  0E01               	movlw	high _vals
  1353   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1354   0019EC  EC54  F021         	call	_readColours	;wreg free
  1355   0019F0                     
  1356                           ;main.c: 80:         colour_rel(&vals, &rel);
  1357   0019F0  0EC7               	movlw	low _vals
  1358   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1359   0019F4  0E01               	movlw	high _vals
  1360   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1361   0019F8  0EB2               	movlw	low _rel
  1362   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1363   0019FC  0E01               	movlw	high _rel
  1364   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1365   001A00  EC4D  F015         	call	_colour_rel	;wreg free
  1366   001A04                     
  1367                           ;main.c: 83:         if (vals.L>=500){
  1368   001A04  0101               	movlb	1	; () banked
  1369   001A06  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1370   001A08  EF0F  F00D         	goto	u4381
  1371   001A0C  0EF4               	movlw	244
  1372   001A0E  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1373   001A10  0E01               	movlw	1
  1374   001A12  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1375   001A14  A0D8               	btfss	status,0,c
  1376   001A16  EF0F  F00D         	goto	u4381
  1377   001A1A  EF11  F00D         	goto	u4380
  1378   001A1E                     u4381:
  1379   001A1E  EFDC  F00E         	goto	l401
  1380   001A22                     u4380:
  1381   001A22                     
  1382                           ; BSR set to: 1
  1383                           ;main.c: 84:             move_count++;
  1384   001A22  0100               	movlb	0	; () banked
  1385   001A24  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1386   001A26  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1387   001A28                     
  1388                           ; BSR set to: 0
  1389                           ;main.c: 85:             getTMR0val();
  1390   001A28  ECAB  F025         	call	_getTMR0val	;wreg free
  1391   001A2C                     
  1392                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1393   001A2C  0EF5               	movlw	low _motorL
  1394   001A2E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1395   001A30  0E00               	movlw	high _motorL
  1396   001A32  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1397   001A34  0EBE               	movlw	low _motorR
  1398   001A36  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1399   001A38  0E01               	movlw	high _motorR
  1400   001A3A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1401   001A3C  EC0A  F022         	call	_Forwardhalfblock	;wreg free
  1402   001A40                     
  1403                           ;main.c: 89:             stop(&motorL, &motorR);
  1404   001A40  0EF5               	movlw	low _motorL
  1405   001A42  6E14               	movwf	stop@mL^0,c
  1406   001A44  0E00               	movlw	high _motorL
  1407   001A46  6E15               	movwf	(stop@mL+1)^0,c
  1408   001A48  0EBE               	movlw	low _motorR
  1409   001A4A  6E16               	movwf	stop@mR^0,c
  1410   001A4C  0E01               	movlw	high _motorR
  1411   001A4E  6E17               	movwf	(stop@mR+1)^0,c
  1412   001A50  EC33  F020         	call	_stop	;wreg free
  1413   001A54                     
  1414                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1415   001A54  0E11               	movlw	17
  1416   001A56  6E5A               	movwf	(??_main+1)^0,c
  1417   001A58  0E3C               	movlw	60
  1418   001A5A  6E59               	movwf	??_main^0,c
  1419   001A5C  0ECB               	movlw	203
  1420   001A5E                     u4597:
  1421   001A5E  2EE8               	decfsz	wreg,f,c
  1422   001A60  D7FE               	bra	u4597
  1423   001A62  2E59               	decfsz	??_main^0,f,c
  1424   001A64  D7FC               	bra	u4597
  1425   001A66  2E5A               	decfsz	(??_main+1)^0,f,c
  1426   001A68  D7FA               	bra	u4597
  1427   001A6A  F000               	nop	
  1428                           
  1429                           ;main.c: 97:             while (consecuitive<20){
  1430   001A6C  EF6B  F00D         	goto	l4688
  1431   001A70                     l4676:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1435   001A70  0EC7               	movlw	low _vals
  1436   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1437   001A74  0E01               	movlw	high _vals
  1438   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1439   001A78  0EB2               	movlw	low _rel
  1440   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1441   001A7C  0E01               	movlw	high _rel
  1442   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1443   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1444   001A84  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1445   001A88  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1446   001A8C                     
  1447                           ;main.c: 99:                 if (colour==prev_colour){
  1448   001A8C  0100               	movlb	0	; () banked
  1449   001A8E  51EE               	movf	main@prev_colour& (0+255),w,b
  1450   001A90  19EC               	xorwf	main@colour& (0+255),w,b
  1451   001A92  E107               	bnz	u4391
  1452   001A94  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1453   001A96  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1454   001A98  A4D8               	btfss	status,2,c
  1455   001A9A  EF51  F00D         	goto	u4391
  1456   001A9E  EF53  F00D         	goto	u4390
  1457   001AA2                     u4391:
  1458   001AA2  EF57  F00D         	goto	l4682
  1459   001AA6                     u4390:
  1460   001AA6                     
  1461                           ; BSR set to: 0
  1462                           ;main.c: 100:                     consecuitive++;
  1463   001AA6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1464   001AA8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1465                           
  1466                           ;main.c: 101:                 }
  1467   001AAA  EF5B  F00D         	goto	l4684
  1468   001AAE                     l4682:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;main.c: 103:                     consecuitive=0;
  1472   001AAE  0E00               	movlw	0
  1473   001AB0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1474   001AB2  0E00               	movlw	0
  1475   001AB4  6FEA               	movwf	main@consecuitive& (0+255),b
  1476   001AB6                     l4684:
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;main.c: 105:                 prev_colour=colour;
  1480   001AB6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1481   001ABA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1482   001ABE                     
  1483                           ; BSR set to: 0
  1484                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1485   001ABE  0E05               	movlw	5
  1486   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1487   001AC2  0E0F               	movlw	15
  1488   001AC4  6E59               	movwf	??_main^0,c
  1489   001AC6  0EF1               	movlw	241
  1490   001AC8                     u4607:
  1491   001AC8  2EE8               	decfsz	wreg,f,c
  1492   001ACA  D7FE               	bra	u4607
  1493   001ACC  2E59               	decfsz	??_main^0,f,c
  1494   001ACE  D7FC               	bra	u4607
  1495   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1496   001AD2  D7FA               	bra	u4607
  1497   001AD4  F000               	nop	
  1498   001AD6                     l4688:
  1499                           
  1500                           ;main.c: 97:             while (consecuitive<20){
  1501   001AD6  0100               	movlb	0	; () banked
  1502   001AD8  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1503   001ADA  EF78  F00D         	goto	u4401
  1504   001ADE  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1505   001AE0  E109               	bnz	u4400
  1506   001AE2  0E14               	movlw	20
  1507   001AE4  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1508   001AE6  A0D8               	btfss	status,0,c
  1509   001AE8  EF78  F00D         	goto	u4401
  1510   001AEC  EF7A  F00D         	goto	u4400
  1511   001AF0                     u4401:
  1512   001AF0  EF38  F00D         	goto	l4676
  1513   001AF4                     u4400:
  1514   001AF4                     
  1515                           ; BSR set to: 0
  1516                           ;main.c: 108:             consecuitive=0;
  1517   001AF4  0E00               	movlw	0
  1518   001AF6  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1519   001AF8  0E00               	movlw	0
  1520   001AFA  6FEA               	movwf	main@consecuitive& (0+255),b
  1521   001AFC                     
  1522                           ; BSR set to: 0
  1523                           ;main.c: 109:             int temp=TMR0L;
  1524   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1525   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1526   001B02                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1529   001B02  0E80               	movlw	low main@buf
  1530   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1531   001B06  0E00               	movlw	high main@buf
  1532   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1533   001B0A  0E01               	movlw	low STR_1
  1534   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1535   001B0E  0E0E               	movlw	high STR_1
  1536   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1537   001B12  C1C7  F064         	movff	_vals,?_sprintf+4
  1538   001B16  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1539   001B1A  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1540   001B1E  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1541   001B22  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1542   001B26  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1543   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1544   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1545   001B30  EC8F  F022         	call	_sprintf	;wreg free
  1546   001B34                     
  1547                           ;main.c: 113:             sendStringSerial4(buf);
  1548   001B34  0E80               	movlw	low main@buf
  1549   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1550   001B38  0E00               	movlw	high main@buf
  1551   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1552   001B3C  EC6A  F025         	call	_sendStringSerial4	;wreg free
  1553   001B40                     
  1554                           ;main.c: 115:             if (prev_colour==1){
  1555   001B40  0100               	movlb	0	; () banked
  1556   001B42  05EE               	decf	main@prev_colour& (0+255),w,b
  1557   001B44  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1558   001B46  A4D8               	btfss	status,2,c
  1559   001B48  EFA8  F00D         	goto	u4411
  1560   001B4C  EFAA  F00D         	goto	u4410
  1561   001B50                     u4411:
  1562   001B50  EFC3  F00D         	goto	l4708
  1563   001B54                     u4410:
  1564   001B54                     
  1565                           ; BSR set to: 0
  1566                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1567   001B54  0EF5               	movlw	low _motorL
  1568   001B56  6E20               	movwf	RedMove@mL^0,c
  1569   001B58  0E00               	movlw	high _motorL
  1570   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1571   001B5C  0EBE               	movlw	low _motorR
  1572   001B5E  6E22               	movwf	RedMove@mR^0,c
  1573   001B60  0E01               	movlw	high _motorR
  1574   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1575   001B64  EC10  F025         	call	_RedMove	;wreg free
  1576   001B68                     
  1577                           ;main.c: 117:                 TMR0H=0;
  1578   001B68  0E00               	movlw	0
  1579   001B6A  6ED4               	movwf	212,c	;volatile
  1580   001B6C                     
  1581                           ;main.c: 118:                 TMR0L=0;
  1582   001B6C  0E00               	movlw	0
  1583   001B6E  6ED3               	movwf	211,c	;volatile
  1584   001B70                     
  1585                           ;main.c: 119:                 WayBack[move_count]=1;
  1586   001B70  0E60               	movlw	low _WayBack
  1587   001B72  0100               	movlb	0	; () banked
  1588   001B74  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1589   001B76  6ED9               	movwf	fsr2l,c
  1590   001B78  0E01               	movlw	high _WayBack
  1591   001B7A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1592   001B7C  6EDA               	movwf	fsr2h,c
  1593   001B7E  0E01               	movlw	1
  1594   001B80  6EDF               	movwf	indf2,c
  1595                           
  1596                           ;main.c: 120:             }
  1597   001B82  EFFF  F00E         	goto	l4784
  1598   001B86                     l4708:
  1599                           
  1600                           ; BSR set to: 0
  1601   001B86  0E02               	movlw	2
  1602   001B88  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1603   001B8A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1604   001B8C  A4D8               	btfss	status,2,c
  1605   001B8E  EFCB  F00D         	goto	u4421
  1606   001B92  EFCD  F00D         	goto	u4420
  1607   001B96                     u4421:
  1608   001B96  EFE6  F00D         	goto	l4718
  1609   001B9A                     u4420:
  1610   001B9A                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1613   001B9A  0EF5               	movlw	low _motorL
  1614   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1615   001B9E  0E00               	movlw	high _motorL
  1616   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1617   001BA2  0EBE               	movlw	low _motorR
  1618   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1619   001BA6  0E01               	movlw	high _motorR
  1620   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1621   001BAA  ECB8  F022         	call	_OrangeMove	;wreg free
  1622   001BAE                     
  1623                           ;main.c: 123:                 TMR0H=0;
  1624   001BAE  0E00               	movlw	0
  1625   001BB0  6ED4               	movwf	212,c	;volatile
  1626   001BB2                     
  1627                           ;main.c: 124:                 TMR0L=0;
  1628   001BB2  0E00               	movlw	0
  1629   001BB4  6ED3               	movwf	211,c	;volatile
  1630   001BB6                     
  1631                           ;main.c: 125:                 WayBack[move_count]=2;
  1632   001BB6  0E60               	movlw	low _WayBack
  1633   001BB8  0100               	movlb	0	; () banked
  1634   001BBA  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1635   001BBC  6ED9               	movwf	fsr2l,c
  1636   001BBE  0E01               	movlw	high _WayBack
  1637   001BC0  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1638   001BC2  6EDA               	movwf	fsr2h,c
  1639   001BC4  0E02               	movlw	2
  1640   001BC6  6EDF               	movwf	indf2,c
  1641                           
  1642                           ;main.c: 126:             }
  1643   001BC8  EFFF  F00E         	goto	l4784
  1644   001BCC                     l4718:
  1645                           
  1646                           ; BSR set to: 0
  1647   001BCC  0E03               	movlw	3
  1648   001BCE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1649   001BD0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1650   001BD2  A4D8               	btfss	status,2,c
  1651   001BD4  EFEE  F00D         	goto	u4431
  1652   001BD8  EFF0  F00D         	goto	u4430
  1653   001BDC                     u4431:
  1654   001BDC  EF09  F00E         	goto	l4728
  1655   001BE0                     u4430:
  1656   001BE0                     
  1657                           ; BSR set to: 0
  1658                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1659   001BE0  0EF5               	movlw	low _motorL
  1660   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1661   001BE4  0E00               	movlw	high _motorL
  1662   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1663   001BE8  0EBE               	movlw	low _motorR
  1664   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1665   001BEC  0E01               	movlw	high _motorR
  1666   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1667   001BF0  EC33  F023         	call	_YellowMove	;wreg free
  1668   001BF4                     
  1669                           ;main.c: 129:                 TMR0H=0;
  1670   001BF4  0E00               	movlw	0
  1671   001BF6  6ED4               	movwf	212,c	;volatile
  1672   001BF8                     
  1673                           ;main.c: 130:                 TMR0L=0;
  1674   001BF8  0E00               	movlw	0
  1675   001BFA  6ED3               	movwf	211,c	;volatile
  1676   001BFC                     
  1677                           ;main.c: 131:                 WayBack[move_count]=3;
  1678   001BFC  0E60               	movlw	low _WayBack
  1679   001BFE  0100               	movlb	0	; () banked
  1680   001C00  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1681   001C02  6ED9               	movwf	fsr2l,c
  1682   001C04  0E01               	movlw	high _WayBack
  1683   001C06  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1684   001C08  6EDA               	movwf	fsr2h,c
  1685   001C0A  0E03               	movlw	3
  1686   001C0C  6EDF               	movwf	indf2,c
  1687                           
  1688                           ;main.c: 132:             }
  1689   001C0E  EFFF  F00E         	goto	l4784
  1690   001C12                     l4728:
  1691                           
  1692                           ; BSR set to: 0
  1693   001C12  0E04               	movlw	4
  1694   001C14  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1695   001C16  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1696   001C18  A4D8               	btfss	status,2,c
  1697   001C1A  EF11  F00E         	goto	u4441
  1698   001C1E  EF13  F00E         	goto	u4440
  1699   001C22                     u4441:
  1700   001C22  EF2C  F00E         	goto	l4738
  1701   001C26                     u4440:
  1702   001C26                     
  1703                           ; BSR set to: 0
  1704                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1705   001C26  0EF5               	movlw	low _motorL
  1706   001C28  6E20               	movwf	BlueMove@mL^0,c
  1707   001C2A  0E00               	movlw	high _motorL
  1708   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1709   001C2E  0EBE               	movlw	low _motorR
  1710   001C30  6E22               	movwf	BlueMove@mR^0,c
  1711   001C32  0E01               	movlw	high _motorR
  1712   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1713   001C36  EC21  F021         	call	_BlueMove	;wreg free
  1714   001C3A                     
  1715                           ;main.c: 135:                 TMR0H=0;
  1716   001C3A  0E00               	movlw	0
  1717   001C3C  6ED4               	movwf	212,c	;volatile
  1718   001C3E                     
  1719                           ;main.c: 136:                 TMR0L=0;
  1720   001C3E  0E00               	movlw	0
  1721   001C40  6ED3               	movwf	211,c	;volatile
  1722   001C42                     
  1723                           ;main.c: 137:                 WayBack[move_count]=4;
  1724   001C42  0E60               	movlw	low _WayBack
  1725   001C44  0100               	movlb	0	; () banked
  1726   001C46  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1727   001C48  6ED9               	movwf	fsr2l,c
  1728   001C4A  0E01               	movlw	high _WayBack
  1729   001C4C  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1730   001C4E  6EDA               	movwf	fsr2h,c
  1731   001C50  0E04               	movlw	4
  1732   001C52  6EDF               	movwf	indf2,c
  1733                           
  1734                           ;main.c: 138:             }
  1735   001C54  EFFF  F00E         	goto	l4784
  1736   001C58                     l4738:
  1737                           
  1738                           ; BSR set to: 0
  1739   001C58  0E05               	movlw	5
  1740   001C5A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1741   001C5C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1742   001C5E  A4D8               	btfss	status,2,c
  1743   001C60  EF34  F00E         	goto	u4451
  1744   001C64  EF36  F00E         	goto	u4450
  1745   001C68                     u4451:
  1746   001C68  EF4F  F00E         	goto	l4748
  1747   001C6C                     u4450:
  1748   001C6C                     
  1749                           ; BSR set to: 0
  1750                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1751   001C6C  0EF5               	movlw	low _motorL
  1752   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1753   001C70  0E00               	movlw	high _motorL
  1754   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1755   001C74  0EBE               	movlw	low _motorR
  1756   001C76  6E22               	movwf	GreenMove@mR^0,c
  1757   001C78  0E01               	movlw	high _motorR
  1758   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1759   001C7C  EC2F  F025         	call	_GreenMove	;wreg free
  1760   001C80                     
  1761                           ;main.c: 141:                 TMR0H=0;
  1762   001C80  0E00               	movlw	0
  1763   001C82  6ED4               	movwf	212,c	;volatile
  1764   001C84                     
  1765                           ;main.c: 142:                 TMR0L=0;
  1766   001C84  0E00               	movlw	0
  1767   001C86  6ED3               	movwf	211,c	;volatile
  1768   001C88                     
  1769                           ;main.c: 143:                 WayBack[move_count]=5;
  1770   001C88  0E60               	movlw	low _WayBack
  1771   001C8A  0100               	movlb	0	; () banked
  1772   001C8C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1773   001C8E  6ED9               	movwf	fsr2l,c
  1774   001C90  0E01               	movlw	high _WayBack
  1775   001C92  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1776   001C94  6EDA               	movwf	fsr2h,c
  1777   001C96  0E05               	movlw	5
  1778   001C98  6EDF               	movwf	indf2,c
  1779                           
  1780                           ;main.c: 144:             }
  1781   001C9A  EFFF  F00E         	goto	l4784
  1782   001C9E                     l4748:
  1783                           
  1784                           ; BSR set to: 0
  1785   001C9E  0E06               	movlw	6
  1786   001CA0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1787   001CA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1788   001CA4  A4D8               	btfss	status,2,c
  1789   001CA6  EF57  F00E         	goto	u4461
  1790   001CAA  EF59  F00E         	goto	u4460
  1791   001CAE                     u4461:
  1792   001CAE  EF72  F00E         	goto	l4758
  1793   001CB2                     u4460:
  1794   001CB2                     
  1795                           ; BSR set to: 0
  1796                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1797   001CB2  0EF5               	movlw	low _motorL
  1798   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1799   001CB6  0E00               	movlw	high _motorL
  1800   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1801   001CBA  0EBE               	movlw	low _motorR
  1802   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1803   001CBE  0E01               	movlw	high _motorR
  1804   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1805   001CC2  ECE1  F022         	call	_LightBlueMove	;wreg free
  1806   001CC6                     
  1807                           ;main.c: 147:                 TMR0H=0;
  1808   001CC6  0E00               	movlw	0
  1809   001CC8  6ED4               	movwf	212,c	;volatile
  1810   001CCA                     
  1811                           ;main.c: 148:                 TMR0L=0;
  1812   001CCA  0E00               	movlw	0
  1813   001CCC  6ED3               	movwf	211,c	;volatile
  1814   001CCE                     
  1815                           ;main.c: 149:                 WayBack[move_count]=6;
  1816   001CCE  0E60               	movlw	low _WayBack
  1817   001CD0  0100               	movlb	0	; () banked
  1818   001CD2  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1819   001CD4  6ED9               	movwf	fsr2l,c
  1820   001CD6  0E01               	movlw	high _WayBack
  1821   001CD8  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1822   001CDA  6EDA               	movwf	fsr2h,c
  1823   001CDC  0E06               	movlw	6
  1824   001CDE  6EDF               	movwf	indf2,c
  1825                           
  1826                           ;main.c: 150:             }
  1827   001CE0  EFFF  F00E         	goto	l4784
  1828   001CE4                     l4758:
  1829                           
  1830                           ; BSR set to: 0
  1831   001CE4  0E07               	movlw	7
  1832   001CE6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1833   001CE8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1834   001CEA  A4D8               	btfss	status,2,c
  1835   001CEC  EF7A  F00E         	goto	u4471
  1836   001CF0  EF7C  F00E         	goto	u4470
  1837   001CF4                     u4471:
  1838   001CF4  EF95  F00E         	goto	l4768
  1839   001CF8                     u4470:
  1840   001CF8                     
  1841                           ; BSR set to: 0
  1842                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  1843   001CF8  0EF5               	movlw	low _motorL
  1844   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1845   001CFC  0E00               	movlw	high _motorL
  1846   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1847   001D00  0EBE               	movlw	low _motorR
  1848   001D02  6E22               	movwf	PinkMove@mR^0,c
  1849   001D04  0E01               	movlw	high _motorR
  1850   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1851   001D08  EC5C  F023         	call	_PinkMove	;wreg free
  1852   001D0C                     
  1853                           ;main.c: 153:                 TMR0H=0;
  1854   001D0C  0E00               	movlw	0
  1855   001D0E  6ED4               	movwf	212,c	;volatile
  1856   001D10                     
  1857                           ;main.c: 154:                 TMR0L=0;
  1858   001D10  0E00               	movlw	0
  1859   001D12  6ED3               	movwf	211,c	;volatile
  1860   001D14                     
  1861                           ;main.c: 155:                 WayBack[move_count]=7;
  1862   001D14  0E60               	movlw	low _WayBack
  1863   001D16  0100               	movlb	0	; () banked
  1864   001D18  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1865   001D1A  6ED9               	movwf	fsr2l,c
  1866   001D1C  0E01               	movlw	high _WayBack
  1867   001D1E  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1868   001D20  6EDA               	movwf	fsr2h,c
  1869   001D22  0E07               	movlw	7
  1870   001D24  6EDF               	movwf	indf2,c
  1871                           
  1872                           ;main.c: 156:             }
  1873   001D26  EFFF  F00E         	goto	l4784
  1874   001D2A                     l4768:
  1875                           
  1876                           ; BSR set to: 0
  1877   001D2A  0E0A               	movlw	10
  1878   001D2C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1879   001D2E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1880   001D30  A4D8               	btfss	status,2,c
  1881   001D32  EF9D  F00E         	goto	u4481
  1882   001D36  EF9F  F00E         	goto	u4480
  1883   001D3A                     u4481:
  1884   001D3A  EFAB  F00E         	goto	l4772
  1885   001D3E                     u4480:
  1886   001D3E                     
  1887                           ; BSR set to: 0
  1888                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  1889   001D3E  0EF5               	movlw	low _motorL
  1890   001D40  6E1A               	movwf	RetryMove@mL^0,c
  1891   001D42  0E00               	movlw	high _motorL
  1892   001D44  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1893   001D46  0EBE               	movlw	low _motorR
  1894   001D48  6E1C               	movwf	RetryMove@mR^0,c
  1895   001D4A  0E01               	movlw	high _motorR
  1896   001D4C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1897   001D4E  ECF2  F01F         	call	_RetryMove	;wreg free
  1898                           
  1899                           ;main.c: 159:             }
  1900   001D52  EFFF  F00E         	goto	l4784
  1901   001D56                     l4772:
  1902                           
  1903                           ; BSR set to: 0
  1904   001D56  51EE               	movf	main@prev_colour& (0+255),w,b
  1905   001D58  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1906   001D5A  A4D8               	btfss	status,2,c
  1907   001D5C  EFB2  F00E         	goto	u4491
  1908   001D60  EFB4  F00E         	goto	u4490
  1909   001D64                     u4491:
  1910   001D64  EFDA  F00E         	goto	l418
  1911   001D68                     u4490:
  1912   001D68                     
  1913                           ; BSR set to: 0
  1914                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  1915   001D68  0EF5               	movlw	low _motorL
  1916   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1917   001D6C  0E00               	movlw	high _motorL
  1918   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1919   001D70  0EBE               	movlw	low _motorR
  1920   001D72  6E22               	movwf	BlueMove@mR^0,c
  1921   001D74  0E01               	movlw	high _motorR
  1922   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1923   001D78  EC21  F021         	call	_BlueMove	;wreg free
  1924   001D7C                     
  1925                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  1926   001D7C  9ED5               	bcf	213,7,c	;volatile
  1927                           
  1928                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  1929   001D7E  0E60               	movlw	low _WayBack
  1930   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1931   001D82  0E01               	movlw	high _WayBack
  1932   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1933   001D86  0E00               	movlw	low _Time_forward
  1934   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1935   001D8A  0E02               	movlw	high _Time_forward
  1936   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1937   001D8E  EC23  F018         	call	_go_Home	;wreg free
  1938                           
  1939                           ;main.c: 164:                 stop(&motorL, &motorR);
  1940   001D92  0EF5               	movlw	low _motorL
  1941   001D94  6E14               	movwf	stop@mL^0,c
  1942   001D96  0E00               	movlw	high _motorL
  1943   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1944   001D9A  0EBE               	movlw	low _motorR
  1945   001D9C  6E16               	movwf	stop@mR^0,c
  1946   001D9E  0E01               	movlw	high _motorR
  1947   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1948   001DA2  EC33  F020         	call	_stop	;wreg free
  1949   001DA6                     
  1950                           ;main.c: 165:                 run_flag=0;
  1951   001DA6  0E00               	movlw	0
  1952   001DA8  0100               	movlb	0	; () banked
  1953   001DAA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1954   001DAC  0E00               	movlw	0
  1955   001DAE  6FE8               	movwf	main@run_flag& (0+255),b
  1956   001DB0  EFFF  F00E         	goto	l4784
  1957   001DB4                     l418:
  1958                           
  1959                           ; BSR set to: 0
  1960   001DB4  EFFF  F00E         	goto	l4784
  1961   001DB8                     l401:
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;main.c: 171:             int temp=TMR0L;
  1965   001DB8  CFD3 F0E6          	movff	4051,main@temp_1189	;volatile
  1966   001DBC  0100               	movlb	0	; () banked
  1967   001DBE  6BE7               	clrf	(main@temp_1189+1)& (0+255),b
  1968   001DC0                     
  1969                           ; BSR set to: 0
  1970                           ;main.c: 172:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1971   001DC0  0E80               	movlw	low main@buf
  1972   001DC2  6F60               	movwf	sprintf@s& (0+255),b
  1973   001DC4  0E00               	movlw	high main@buf
  1974   001DC6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1975   001DC8  0E01               	movlw	low STR_1
  1976   001DCA  6F62               	movwf	sprintf@fmt& (0+255),b
  1977   001DCC  0E0E               	movlw	high STR_1
  1978   001DCE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1979   001DD0  C1C7  F064         	movff	_vals,?_sprintf+4
  1980   001DD4  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1981   001DD8  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1982   001DDC  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1983   001DE0  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1984   001DE4  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1985   001DE8  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1986   001DEC  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1987   001DEE  EC8F  F022         	call	_sprintf	;wreg free
  1988   001DF2                     
  1989                           ;main.c: 173:             sendStringSerial4(buf);
  1990   001DF2  0E80               	movlw	low main@buf
  1991   001DF4  6E02               	movwf	sendStringSerial4@string^0,c
  1992   001DF6  0E00               	movlw	high main@buf
  1993   001DF8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1994   001DFA  EC6A  F025         	call	_sendStringSerial4	;wreg free
  1995   001DFE                     l4784:
  1996                           
  1997                           ;main.c: 69:     while (run_flag)
  1998   001DFE  0100               	movlb	0	; () banked
  1999   001E00  51E8               	movf	main@run_flag& (0+255),w,b
  2000   001E02  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2001   001E04  A4D8               	btfss	status,2,c
  2002   001E06  EF07  F00F         	goto	u4501
  2003   001E0A  EF09  F00F         	goto	u4500
  2004   001E0E                     u4501:
  2005   001E0E  EFE8  F00C         	goto	l4658
  2006   001E12                     u4500:
  2007   001E12                     
  2008                           ; BSR set to: 0
  2009   001E12  EF07  F000         	goto	start
  2010   001E16                     __end_of_main:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _sprintf *****************
  2014 ;; Defined at:
  2015 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2018 ;;		 -> main@buf(100), 
  2019 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2020 ;;		 -> STR_2(36), STR_1(36), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2023 ;;  ap              2   12[BANK0 ] PTR void [1]
  2024 ;;		 -> ?_sprintf(2), 
  2025 ;;  ret             2    0        int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    0[BANK0 ] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2035 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;Total ram usage:       25 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; Hardware stack levels required when called: 8
  2042 ;; This function calls:
  2043 ;;		_vfprintf
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text1
  2050   00451E                     __ptext1:
  2051                           	callstack 0
  2052   00451E                     _sprintf:
  2053                           	callstack 22
  2054   00451E  0E64               	movlw	low (?_sprintf+4)
  2055   004520  0100               	movlb	0	; () banked
  2056   004522  6F6C               	movwf	sprintf@ap& (0+255),b
  2057   004524  0E00               	movlw	high (?_sprintf+4)
  2058   004526  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2059   004528  C060  F06E         	movff	sprintf@s,sprintf@f
  2060   00452C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2061   004530                     
  2062                           ; BSR set to: 0
  2063   004530  0E00               	movlw	0
  2064   004532  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2065   004534  0E00               	movlw	0
  2066   004536  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2067   004538                     
  2068                           ; BSR set to: 0
  2069   004538  0E00               	movlw	0
  2070   00453A  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2071   00453C  0E00               	movlw	0
  2072   00453E  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2073   004540                     
  2074                           ; BSR set to: 0
  2075   004540  0E6E               	movlw	low sprintf@f
  2076   004542  6E51               	movwf	vfprintf@fp^0,c
  2077   004544  0E00               	movlw	high sprintf@f
  2078   004546  6E52               	movwf	(vfprintf@fp+1)^0,c
  2079   004548  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2080   00454C  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2081   004550  0E6C               	movlw	low sprintf@ap
  2082   004552  6E55               	movwf	vfprintf@ap^0,c
  2083   004554  0E00               	movlw	high sprintf@ap
  2084   004556  6E56               	movwf	(vfprintf@ap+1)^0,c
  2085   004558  EC25  F024         	call	_vfprintf	;wreg free
  2086   00455C  0100               	movlb	0	; () banked
  2087   00455E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2088   004560  2560               	addwf	sprintf@s& (0+255),w,b
  2089   004562  6ED9               	movwf	fsr2l,c
  2090   004564  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2091   004566  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2092   004568  6EDA               	movwf	fsr2h,c
  2093   00456A  0E00               	movlw	0
  2094   00456C  6EDF               	movwf	indf2,c
  2095   00456E                     
  2096                           ; BSR set to: 0
  2097   00456E  0012               	return		;funcret
  2098   004570                     __end_of_sprintf:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _vfprintf *****************
  2102 ;; Defined at:
  2103 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2106 ;;		 -> sprintf@f(11), 
  2107 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2108 ;;		 -> STR_2(36), STR_1(36), 
  2109 ;;  ap              2   84[COMRAM] PTR PTR void 
  2110 ;;		 -> sprintf@ap(2), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2113 ;;		 -> STR_2(36), STR_1(36), 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2   80[COMRAM] int 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 7
  2130 ;; This function calls:
  2131 ;;		_vfpfcnvrt
  2132 ;; This function is called by:
  2133 ;;		_sprintf
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text2
  2138   00484A                     __ptext2:
  2139                           	callstack 0
  2140   00484A                     _vfprintf:
  2141                           	callstack 22
  2142   00484A                     
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2144   00484A  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2145   00484E  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2148   004852  EF39  F024         	goto	l4162
  2149   004856                     l4160:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2152   004856  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2153   00485A  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2154   00485E  0E57               	movlw	low vfprintf@cfmt
  2155   004860  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2156   004862  0E00               	movlw	high vfprintf@cfmt
  2157   004864  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2158   004866  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2159   00486A  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2160   00486E  EC39  F01C         	call	_vfpfcnvrt	;wreg free
  2161   004872                     l4162:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2164   004872  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2165   004876  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2166   00487A                     	if	0	;tblptru may be non-zero
  2167   00487A                     	endif
  2168   00487A                     	if	0	;tblptru may be non-zero
  2169   00487A                     	endif
  2170   00487A  0008               	tblrd		*
  2171   00487C  50F5               	movf	tablat,w,c
  2172   00487E  0900               	iorlw	0
  2173   004880  A4D8               	btfss	status,2,c
  2174   004882  EF45  F024         	goto	u3861
  2175   004886  EF47  F024         	goto	u3860
  2176   00488A                     u3861:
  2177   00488A  EF2B  F024         	goto	l4160
  2178   00488E                     u3860:
  2179   00488E                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2181   00488E  0E00               	movlw	0
  2182   004890  6E52               	movwf	(?_vfprintf+1)^0,c
  2183   004892  0E00               	movlw	0
  2184   004894  6E51               	movwf	?_vfprintf^0,c
  2185   004896  0012               	return		;funcret
  2186   004898                     __end_of_vfprintf:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _vfpfcnvrt *****************
  2190 ;; Defined at:
  2191 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2194 ;;		 -> sprintf@f(11), 
  2195 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2196 ;;		 -> vfprintf@cfmt(2), 
  2197 ;;  ap              2   66[COMRAM] PTR PTR void 
  2198 ;;		 -> sprintf@ap(2), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  convarg         8   70[COMRAM] struct .
  2201 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2202 ;;		 -> STR_2(36), STR_1(36), 
  2203 ;;  i               2    0        int 
  2204 ;;  done            2    0        int 
  2205 ;;  c               1    0        unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;Total ram usage:       18 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 6
  2222 ;; This function calls:
  2223 ;;		_dtoa
  2224 ;;		_fputc
  2225 ;; This function is called by:
  2226 ;;		_vfprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text3
  2231   003872                     __ptext3:
  2232                           	callstack 0
  2233   003872                     _vfpfcnvrt:
  2234                           	callstack 22
  2235   003872                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2237   003872  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238   003876  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239   00387A  CFDE FFF6          	movff	postinc2,tblptrl
  2240   00387E  CFDD FFF7          	movff	postdec2,tblptrh
  2241   003882                     	if	0	;tblptru may be non-zero
  2242   003882                     	endif
  2243   003882                     	if	0	;tblptru may be non-zero
  2244   003882                     	endif
  2245   003882  0008               	tblrd		*
  2246   003884  50F5               	movf	tablat,w,c
  2247   003886  0A25               	xorlw	37
  2248   003888  A4D8               	btfss	status,2,c
  2249   00388A  EF49  F01C         	goto	u3201
  2250   00388E  EF4B  F01C         	goto	u3200
  2251   003892                     u3201:
  2252   003892  EFCC  F01C         	goto	l3716
  2253   003896                     u3200:
  2254   003896                     
  2255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2256   003896  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2257   00389A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2258   00389E  2ADE               	incf	postinc2,f,c
  2259   0038A0  0E00               	movlw	0
  2260   0038A2  22DD               	addwfc	postdec2,f,c
  2261   0038A4                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2263   0038A4  0E00               	movlw	0
  2264   0038A6  0101               	movlb	1	; () banked
  2265   0038A8  6F5D               	movwf	(_width+1)& (0+255),b
  2266   0038AA  0E00               	movlw	0
  2267   0038AC  6F5C               	movwf	_width& (0+255),b
  2268   0038AE  C15C  F0F4         	movff	_width,_flags
  2269   0038B2                     
  2270                           ; BSR set to: 1
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2272   0038B2  0100               	movlb	0	; () banked
  2273   0038B4  69F0               	setf	_prec& (0+255),b
  2274   0038B6  69F1               	setf	(_prec+1)& (0+255),b
  2275   0038B8                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2278   0038B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2279   0038BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2280   0038C0  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2281   0038C4  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2282   0038C8                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2285   0038C8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2286   0038CC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2287   0038D0                     	if	0	;tblptru may be non-zero
  2288   0038D0                     	endif
  2289   0038D0                     	if	0	;tblptru may be non-zero
  2290   0038D0                     	endif
  2291   0038D0  0008               	tblrd		*
  2292   0038D2  50F5               	movf	tablat,w,c
  2293   0038D4  0A64               	xorlw	100
  2294   0038D6  B4D8               	btfsc	status,2,c
  2295   0038D8  EF70  F01C         	goto	u3211
  2296   0038DC  EF72  F01C         	goto	u3210
  2297   0038E0                     u3211:
  2298   0038E0  EF80  F01C         	goto	l3706
  2299   0038E4                     u3210:
  2300   0038E4                     
  2301                           ; BSR set to: 0
  2302   0038E4  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2303   0038E8  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2304   0038EC                     	if	0	;tblptru may be non-zero
  2305   0038EC                     	endif
  2306   0038EC                     	if	0	;tblptru may be non-zero
  2307   0038EC                     	endif
  2308   0038EC  0008               	tblrd		*
  2309   0038EE  50F5               	movf	tablat,w,c
  2310   0038F0  0A69               	xorlw	105
  2311   0038F2  A4D8               	btfss	status,2,c
  2312   0038F4  EF7E  F01C         	goto	u3221
  2313   0038F8  EF80  F01C         	goto	u3220
  2314   0038FC                     u3221:
  2315   0038FC  EFC3  F01C         	goto	l3712
  2316   003900                     u3220:
  2317   003900                     l3706:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2321   003900  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2322   003904  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2323   003908  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2324   00390C  0E02               	movlw	2
  2325   00390E  26DE               	addwf	postinc2,f,c
  2326   003910  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2327   003914  0E00               	movlw	0
  2328   003916  22DD               	addwfc	postdec2,f,c
  2329   003918  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2330   00391C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2331   003920  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2332   003924  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2333   003928  0E00               	movlw	0
  2334   00392A  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2335   00392C  0EFF               	movlw	-1
  2336   00392E  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2337   003930  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2338   003932  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2339   003934  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2340   003936  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2341   003938  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2344   00393A  0E01               	movlw	1
  2345   00393C  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2346   00393E  6E45               	movwf	??_vfpfcnvrt^0,c
  2347   003940  0E00               	movlw	0
  2348   003942  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2349   003944  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2350   003946  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351   00394A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352   00394E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2353   003952  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2354   003956                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2357   003956  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2358   00395A  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2359   00395E  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2360   003962  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2361   003966  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2362   00396A  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2363   00396E  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2364   003972  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2365   003976  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2366   00397A  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2367   00397E  ECE4  F016         	call	_dtoa	;wreg free
  2368   003982  EFE0  F01C         	goto	l1398
  2369   003986                     l3712:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2372   003986  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373   00398A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374   00398E  2ADE               	incf	postinc2,f,c
  2375   003990  0E00               	movlw	0
  2376   003992  22DD               	addwfc	postdec2,f,c
  2377   003994  EFE0  F01C         	goto	l1398
  2378   003998                     l3716:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2381   003998  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382   00399C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383   0039A0  CFDE FFF6          	movff	postinc2,tblptrl
  2384   0039A4  CFDD FFF7          	movff	postdec2,tblptrh
  2385   0039A8                     	if	0	;tblptru may be non-zero
  2386   0039A8                     	endif
  2387   0039A8                     	if	0	;tblptru may be non-zero
  2388   0039A8                     	endif
  2389   0039A8  0008               	tblrd		*
  2390   0039AA  50F5               	movf	tablat,w,c
  2391   0039AC  6E01               	movwf	fputc@c^0,c
  2392   0039AE  6A02               	clrf	(fputc@c+1)^0,c
  2393   0039B0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2394   0039B4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2395   0039B8  EC63  F01D         	call	_fputc	;wreg free
  2396   0039BC  EFC3  F01C         	goto	l3712
  2397   0039C0                     l1398:
  2398   0039C0  0012               	return		;funcret
  2399   0039C2                     __end_of_vfpfcnvrt:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _dtoa *****************
  2403 ;; Defined at:
  2404 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2407 ;;		 -> sprintf@f(11), 
  2408 ;;  d               8   29[COMRAM] long long 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  n               8   51[COMRAM] long long 
  2411 ;;  i               2   59[COMRAM] int 
  2412 ;;  w               2   49[COMRAM] int 
  2413 ;;  p               2   47[COMRAM] int 
  2414 ;;  s               1   61[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2424 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;Total ram usage:       35 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 5
  2431 ;; This function calls:
  2432 ;;		___aodiv
  2433 ;;		___aomod
  2434 ;;		_abs
  2435 ;;		_pad
  2436 ;; This function is called by:
  2437 ;;		_vfpfcnvrt
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text4
  2442   002DC8                     __ptext4:
  2443                           	callstack 0
  2444   002DC8                     _dtoa:
  2445                           	callstack 22
  2446   002DC8                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2448   002DC8  C01E  F034         	movff	dtoa@d,dtoa@n
  2449   002DCC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2450   002DD0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2451   002DD4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2452   002DD8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2453   002DDC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2454   002DE0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2455   002DE4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2456   002DE8                     
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2458   002DE8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2459   002DEA  EFF9  F016         	goto	u2681
  2460   002DEE  EFFC  F016         	goto	u2680
  2461   002DF2                     u2681:
  2462   002DF2  0E01               	movlw	1
  2463   002DF4  EFFD  F016         	goto	u2690
  2464   002DF8                     u2680:
  2465   002DF8  0E00               	movlw	0
  2466   002DFA                     u2690:
  2467   002DFA  6E3E               	movwf	dtoa@s^0,c
  2468   002DFC                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2470   002DFC  503E               	movf	dtoa@s^0,w,c
  2471   002DFE  B4D8               	btfsc	status,2,c
  2472   002E00  EF04  F017         	goto	u2701
  2473   002E04  EF06  F017         	goto	u2700
  2474   002E08                     u2701:
  2475   002E08  EF16  F017         	goto	l3386
  2476   002E0C                     u2700:
  2477   002E0C                     
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2479   002E0C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2480   002E0E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2481   002E10  1E39               	comf	(dtoa@n+5)^0,f,c
  2482   002E12  1E38               	comf	(dtoa@n+4)^0,f,c
  2483   002E14  1E37               	comf	(dtoa@n+3)^0,f,c
  2484   002E16  1E36               	comf	(dtoa@n+2)^0,f,c
  2485   002E18  1E35               	comf	(dtoa@n+1)^0,f,c
  2486   002E1A  6C34               	negf	dtoa@n^0,c
  2487   002E1C  0E00               	movlw	0
  2488   002E1E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2489   002E20  2236               	addwfc	(dtoa@n+2)^0,f,c
  2490   002E22  2237               	addwfc	(dtoa@n+3)^0,f,c
  2491   002E24  2238               	addwfc	(dtoa@n+4)^0,f,c
  2492   002E26  2239               	addwfc	(dtoa@n+5)^0,f,c
  2493   002E28  223A               	addwfc	(dtoa@n+6)^0,f,c
  2494   002E2A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2495   002E2C                     l3386:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2498   002E2C  0100               	movlb	0	; () banked
  2499   002E2E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2500   002E30  EF24  F017         	goto	u2710
  2501   002E34  51F1               	movf	(_prec+1)& (0+255),w,b
  2502   002E36  E106               	bnz	u2711
  2503   002E38  05F0               	decf	_prec& (0+255),w,b
  2504   002E3A  B0D8               	btfsc	status,0,c
  2505   002E3C  EF22  F017         	goto	u2711
  2506   002E40  EF24  F017         	goto	u2710
  2507   002E44                     u2711:
  2508   002E44  EF2A  F017         	goto	l1377
  2509   002E48                     u2710:
  2510   002E48                     
  2511                           ; BSR set to: 0
  2512   002E48  0E00               	movlw	0
  2513   002E4A  6E31               	movwf	(dtoa@p+1)^0,c
  2514   002E4C  0E01               	movlw	1
  2515   002E4E  6E30               	movwf	dtoa@p^0,c
  2516   002E50  EF2E  F017         	goto	l1379
  2517   002E54                     l1377:
  2518                           
  2519                           ; BSR set to: 0
  2520   002E54  C0F0  F030         	movff	_prec,dtoa@p
  2521   002E58  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2522   002E5C                     l1379:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2526   002E5C  C15C  F032         	movff	_width,dtoa@w
  2527   002E60  C15D  F033         	movff	_width+1,dtoa@w+1
  2528   002E64                     
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2531   002E64  503E               	movf	dtoa@s^0,w,c
  2532   002E66  B4D8               	btfsc	status,2,c
  2533   002E68  EF38  F017         	goto	u2721
  2534   002E6C  EF3A  F017         	goto	u2720
  2535   002E70                     u2721:
  2536   002E70  EF51  F017         	goto	l1380
  2537   002E74                     u2720:
  2538   002E74                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2541   002E74  0632               	decf	dtoa@w^0,f,c
  2542   002E76  A0D8               	btfss	status,0,c
  2543   002E78  0633               	decf	(dtoa@w+1)^0,f,c
  2544   002E7A                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2547   002E7A  503E               	movf	dtoa@s^0,w,c
  2548   002E7C  A4D8               	btfss	status,2,c
  2549   002E7E  EF43  F017         	goto	u2731
  2550   002E82  EF45  F017         	goto	u2730
  2551   002E86                     u2731:
  2552   002E86  EF4B  F017         	goto	l3398
  2553   002E8A                     u2730:
  2554   002E8A                     
  2555                           ; BSR set to: 0
  2556   002E8A  0E00               	movlw	0
  2557   002E8C  6E2F               	movwf	(_dtoa$2509+1)^0,c
  2558   002E8E  0E2B               	movlw	43
  2559   002E90  6E2E               	movwf	_dtoa$2509^0,c
  2560   002E92  EF4F  F017         	goto	l3400
  2561   002E96                     l3398:
  2562                           
  2563                           ; BSR set to: 0
  2564   002E96  0E00               	movlw	0
  2565   002E98  6E2F               	movwf	(_dtoa$2509+1)^0,c
  2566   002E9A  0E2D               	movlw	45
  2567   002E9C  6E2E               	movwf	_dtoa$2509^0,c
  2568   002E9E                     l3400:
  2569                           
  2570                           ; BSR set to: 0
  2571   002E9E  C02E  F03E         	movff	_dtoa$2509,dtoa@s
  2572   002EA2                     l1380:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2576   002EA2  0E00               	movlw	0
  2577   002EA4  6E3D               	movwf	(dtoa@i+1)^0,c
  2578   002EA6  0E1F               	movlw	31
  2579   002EA8  6E3C               	movwf	dtoa@i^0,c
  2580   002EAA                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2583   002EAA  0E00               	movlw	0
  2584   002EAC  0101               	movlb	1	; () banked
  2585   002EAE  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2588   002EB0  EFD6  F017         	goto	l3414
  2589   002EB4                     l3404:
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2592   002EB4  063C               	decf	dtoa@i^0,f,c
  2593   002EB6  A0D8               	btfss	status,0,c
  2594   002EB8  063D               	decf	(dtoa@i+1)^0,f,c
  2595   002EBA                     
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2597   002EBA  0E92               	movlw	low _dbuf
  2598   002EBC  243C               	addwf	dtoa@i^0,w,c
  2599   002EBE  6ED9               	movwf	fsr2l,c
  2600   002EC0  0E01               	movlw	high _dbuf
  2601   002EC2  203D               	addwfc	(dtoa@i+1)^0,w,c
  2602   002EC4  6EDA               	movwf	fsr2h,c
  2603   002EC6  C034  F001         	movff	dtoa@n,___aomod@dividend
  2604   002ECA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2605   002ECE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2606   002ED2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2607   002ED6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2608   002EDA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2609   002EDE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2610   002EE2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2611   002EE6  0E0A               	movlw	10
  2612   002EE8  6E09               	movwf	___aomod@divisor^0,c
  2613   002EEA  0E00               	movlw	0
  2614   002EEC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2615   002EEE  0E00               	movlw	0
  2616   002EF0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2617   002EF2  0E00               	movlw	0
  2618   002EF4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2619   002EF6  0E00               	movlw	0
  2620   002EF8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2621   002EFA  0E00               	movlw	0
  2622   002EFC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2623   002EFE  0E00               	movlw	0
  2624   002F00  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2625   002F02  0E00               	movlw	0
  2626   002F04  6E10               	movwf	(___aomod@divisor+7)^0,c
  2627   002F06  EC87  F01B         	call	___aomod	;wreg free
  2628   002F0A  C001  F026         	movff	?___aomod,??_dtoa
  2629   002F0E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2630   002F12  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2631   002F16  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2632   002F1A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2633   002F1E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2634   002F22  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2635   002F26  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2636   002F2A  C026  F013         	movff	??_dtoa,abs@a
  2637   002F2E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2638   002F32  ECB2  F024         	call	_abs	;wreg free
  2639   002F36  5013               	movf	?_abs^0,w,c
  2640   002F38  0F30               	addlw	48
  2641   002F3A  6EDF               	movwf	indf2,c
  2642   002F3C                     
  2643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2644   002F3C  0630               	decf	dtoa@p^0,f,c
  2645   002F3E  A0D8               	btfss	status,0,c
  2646   002F40  0631               	decf	(dtoa@p+1)^0,f,c
  2647   002F42                     
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2649   002F42  0632               	decf	dtoa@w^0,f,c
  2650   002F44  A0D8               	btfss	status,0,c
  2651   002F46  0633               	decf	(dtoa@w+1)^0,f,c
  2652   002F48                     
  2653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2654   002F48  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2655   002F4C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2656   002F50  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2657   002F54  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2658   002F58  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2659   002F5C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2660   002F60  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2661   002F64  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2662   002F68  0E0A               	movlw	10
  2663   002F6A  6E09               	movwf	___aodiv@divisor^0,c
  2664   002F6C  0E00               	movlw	0
  2665   002F6E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2666   002F70  0E00               	movlw	0
  2667   002F72  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2668   002F74  0E00               	movlw	0
  2669   002F76  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2670   002F78  0E00               	movlw	0
  2671   002F7A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2672   002F7C  0E00               	movlw	0
  2673   002F7E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2674   002F80  0E00               	movlw	0
  2675   002F82  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2676   002F84  0E00               	movlw	0
  2677   002F86  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2678   002F88  EC0D  F01A         	call	___aodiv	;wreg free
  2679   002F8C  C001  F034         	movff	?___aodiv,dtoa@n
  2680   002F90  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2681   002F94  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2682   002F98  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2683   002F9C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2684   002FA0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2685   002FA4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2686   002FA8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2687   002FAC                     l3414:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2690   002FAC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2691   002FAE  EFE1  F017         	goto	u2741
  2692   002FB2  503D               	movf	(dtoa@i+1)^0,w,c
  2693   002FB4  E108               	bnz	u2740
  2694   002FB6  043C               	decf	dtoa@i^0,w,c
  2695   002FB8  A0D8               	btfss	status,0,c
  2696   002FBA  EFE1  F017         	goto	u2741
  2697   002FBE  EFE3  F017         	goto	u2740
  2698   002FC2                     u2741:
  2699   002FC2  EFFF  F017         	goto	l3420
  2700   002FC6                     u2740:
  2701   002FC6  5034               	movf	dtoa@n^0,w,c
  2702   002FC8  1035               	iorwf	(dtoa@n+1)^0,w,c
  2703   002FCA  1036               	iorwf	(dtoa@n+2)^0,w,c
  2704   002FCC  1037               	iorwf	(dtoa@n+3)^0,w,c
  2705   002FCE  1038               	iorwf	(dtoa@n+4)^0,w,c
  2706   002FD0  1039               	iorwf	(dtoa@n+5)^0,w,c
  2707   002FD2  103A               	iorwf	(dtoa@n+6)^0,w,c
  2708   002FD4  103B               	iorwf	(dtoa@n+7)^0,w,c
  2709   002FD6  A4D8               	btfss	status,2,c
  2710   002FD8  EFF0  F017         	goto	u2751
  2711   002FDC  EFF2  F017         	goto	u2750
  2712   002FE0                     u2751:
  2713   002FE0  EF5A  F017         	goto	l3404
  2714   002FE4                     u2750:
  2715   002FE4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2716   002FE6  EFFF  F017         	goto	u2760
  2717   002FEA  5031               	movf	(dtoa@p+1)^0,w,c
  2718   002FEC  E106               	bnz	u2761
  2719   002FEE  0430               	decf	dtoa@p^0,w,c
  2720   002FF0  B0D8               	btfsc	status,0,c
  2721   002FF2  EFFD  F017         	goto	u2761
  2722   002FF6  EFFF  F017         	goto	u2760
  2723   002FFA                     u2761:
  2724   002FFA  EF5A  F017         	goto	l3404
  2725   002FFE                     u2760:
  2726   002FFE                     l3420:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2729   002FFE  503E               	movf	dtoa@s^0,w,c
  2730   003000  B4D8               	btfsc	status,2,c
  2731   003002  EF05  F018         	goto	u2771
  2732   003006  EF07  F018         	goto	u2770
  2733   00300A                     u2771:
  2734   00300A  EF12  F018         	goto	l3426
  2735   00300E                     u2770:
  2736   00300E                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2738   00300E  063C               	decf	dtoa@i^0,f,c
  2739   003010  A0D8               	btfss	status,0,c
  2740   003012  063D               	decf	(dtoa@i+1)^0,f,c
  2741   003014                     
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2743   003014  0E92               	movlw	low _dbuf
  2744   003016  243C               	addwf	dtoa@i^0,w,c
  2745   003018  6ED9               	movwf	fsr2l,c
  2746   00301A  0E01               	movlw	high _dbuf
  2747   00301C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2748   00301E  6EDA               	movwf	fsr2h,c
  2749   003020  C03E  FFDF         	movff	dtoa@s,indf2
  2750   003024                     l3426:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2753   003024  C01C  F011         	movff	dtoa@fp,pad@fp
  2754   003028  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2755   00302C  0E92               	movlw	low _dbuf
  2756   00302E  243C               	addwf	dtoa@i^0,w,c
  2757   003030  6E13               	movwf	pad@buf^0,c
  2758   003032  0E01               	movlw	high _dbuf
  2759   003034  203D               	addwfc	(dtoa@i+1)^0,w,c
  2760   003036  6E14               	movwf	(pad@buf+1)^0,c
  2761   003038  C032  F015         	movff	dtoa@w,pad@p
  2762   00303C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2763   003040  EC72  F020         	call	_pad	;wreg free
  2764   003044  0012               	return		;funcret
  2765   003046                     __end_of_dtoa:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _pad *****************
  2769 ;; Defined at:
  2770 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2773 ;;		 -> sprintf@f(11), 
  2774 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2775 ;;		 -> dbuf(32), 
  2776 ;;  p               2   20[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  w               2   25[COMRAM] int 
  2779 ;;  i               2   23[COMRAM] int 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:       11 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		_fputc
  2798 ;;		_fputs
  2799 ;; This function is called by:
  2800 ;;		_dtoa
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text5
  2805   0040E4                     __ptext5:
  2806                           	callstack 0
  2807   0040E4                     _pad:
  2808                           	callstack 22
  2809   0040E4                     
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2811   0040E4  BE16               	btfsc	(pad@p+1)^0,7,c
  2812   0040E6  EF77  F020         	goto	u2531
  2813   0040EA  EF79  F020         	goto	u2530
  2814   0040EE                     u2531:
  2815   0040EE  EF7F  F020         	goto	l3290
  2816   0040F2                     u2530:
  2817   0040F2  C015  F01A         	movff	pad@p,pad@w
  2818   0040F6  C016  F01B         	movff	pad@p+1,pad@w+1
  2819   0040FA  EF83  F020         	goto	l1368
  2820   0040FE                     l3290:
  2821   0040FE  0E00               	movlw	0
  2822   004100  6E1B               	movwf	(pad@w+1)^0,c
  2823   004102  0E00               	movlw	0
  2824   004104  6E1A               	movwf	pad@w^0,c
  2825   004106                     l1368:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2828   004106  0E00               	movlw	0
  2829   004108  6E19               	movwf	(pad@i+1)^0,c
  2830   00410A  0E00               	movlw	0
  2831   00410C  6E18               	movwf	pad@i^0,c
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2834   00410E  EF95  F020         	goto	l3296
  2835   004112                     l3292:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2838   004112  0E00               	movlw	0
  2839   004114  6E02               	movwf	(fputc@c+1)^0,c
  2840   004116  0E20               	movlw	32
  2841   004118  6E01               	movwf	fputc@c^0,c
  2842   00411A  C011  F003         	movff	pad@fp,fputc@fp
  2843   00411E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2844   004122  EC63  F01D         	call	_fputc	;wreg free
  2845   004126                     
  2846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2847   004126  4A18               	infsnz	pad@i^0,f,c
  2848   004128  2A19               	incf	(pad@i+1)^0,f,c
  2849   00412A                     l3296:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2852   00412A  501A               	movf	pad@w^0,w,c
  2853   00412C  5C18               	subwf	pad@i^0,w,c
  2854   00412E  5019               	movf	(pad@i+1)^0,w,c
  2855   004130  0A80               	xorlw	128
  2856   004132  6E17               	movwf	??_pad^0,c
  2857   004134  501B               	movf	(pad@w+1)^0,w,c
  2858   004136  0A80               	xorlw	128
  2859   004138  5817               	subwfb	??_pad^0,w,c
  2860   00413A  A0D8               	btfss	status,0,c
  2861   00413C  EFA2  F020         	goto	u2541
  2862   004140  EFA4  F020         	goto	u2540
  2863   004144                     u2541:
  2864   004144  EF89  F020         	goto	l3292
  2865   004148                     u2540:
  2866   004148                     
  2867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2868   004148  C013  F00A         	movff	pad@buf,fputs@s
  2869   00414C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2870   004150  C011  F00C         	movff	pad@fp,fputs@fp
  2871   004154  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2872   004158  EC6F  F024         	call	_fputs	;wreg free
  2873   00415C  0012               	return		;funcret
  2874   00415E                     __end_of_pad:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _fputs *****************
  2878 ;; Defined at:
  2879 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2882 ;;		 -> dbuf(32), 
  2883 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2884 ;;		 -> sprintf@f(11), 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  i               2   14[COMRAM] int 
  2887 ;;  c               1   13[COMRAM] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  2    9[COMRAM] int 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;Total ram usage:        7 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 3
  2904 ;; This function calls:
  2905 ;;		_fputc
  2906 ;; This function is called by:
  2907 ;;		_pad
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text6
  2912   0048DE                     __ptext6:
  2913                           	callstack 0
  2914   0048DE                     _fputs:
  2915                           	callstack 22
  2916   0048DE  0E00               	movlw	0
  2917   0048E0  6E10               	movwf	(fputs@i+1)^0,c
  2918   0048E2  0E00               	movlw	0
  2919   0048E4  6E0F               	movwf	fputs@i^0,c
  2920   0048E6  EF80  F024         	goto	l3188
  2921   0048EA                     l3184:
  2922   0048EA  C00E  F001         	movff	fputs@c,fputc@c
  2923   0048EE  6A02               	clrf	(fputc@c+1)^0,c
  2924   0048F0  C00C  F003         	movff	fputs@fp,fputc@fp
  2925   0048F4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2926   0048F8  EC63  F01D         	call	_fputc	;wreg free
  2927   0048FC  4A0F               	infsnz	fputs@i^0,f,c
  2928   0048FE  2A10               	incf	(fputs@i+1)^0,f,c
  2929   004900                     l3188:
  2930   004900  500F               	movf	fputs@i^0,w,c
  2931   004902  240A               	addwf	fputs@s^0,w,c
  2932   004904  6ED9               	movwf	fsr2l,c
  2933   004906  5010               	movf	(fputs@i+1)^0,w,c
  2934   004908  200B               	addwfc	(fputs@s+1)^0,w,c
  2935   00490A  6EDA               	movwf	fsr2h,c
  2936   00490C  50DF               	movf	indf2,w,c
  2937   00490E  6E0E               	movwf	fputs@c^0,c
  2938   004910  500E               	movf	fputs@c^0,w,c
  2939   004912  A4D8               	btfss	status,2,c
  2940   004914  EF8E  F024         	goto	u2371
  2941   004918  EF90  F024         	goto	u2370
  2942   00491C                     u2371:
  2943   00491C  EF75  F024         	goto	l3184
  2944   004920                     u2370:
  2945   004920  0012               	return		;funcret
  2946   004922                     __end_of_fputs:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _fputc *****************
  2950 ;; Defined at:
  2951 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  c               2    0[COMRAM] int 
  2954 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2955 ;;		 -> sprintf@f(11), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2    0[COMRAM] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:        9 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 2
  2974 ;; This function calls:
  2975 ;;		_putch
  2976 ;; This function is called by:
  2977 ;;		_pad
  2978 ;;		_vfpfcnvrt
  2979 ;;		_fputs
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text7
  2984   003AC6                     __ptext7:
  2985                           	callstack 0
  2986   003AC6                     _fputc:
  2987                           	callstack 25
  2988   003AC6  5003               	movf	fputc@fp^0,w,c
  2989   003AC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2990   003ACA  B4D8               	btfsc	status,2,c
  2991   003ACC  EF6A  F01D         	goto	u2301
  2992   003AD0  EF6C  F01D         	goto	u2300
  2993   003AD4                     u2301:
  2994   003AD4  EF75  F01D         	goto	l3144
  2995   003AD8                     u2300:
  2996   003AD8  5003               	movf	fputc@fp^0,w,c
  2997   003ADA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2998   003ADC  A4D8               	btfss	status,2,c
  2999   003ADE  EF73  F01D         	goto	u2311
  3000   003AE2  EF75  F01D         	goto	u2310
  3001   003AE6                     u2311:
  3002   003AE6  EF7A  F01D         	goto	l3146
  3003   003AEA                     u2310:
  3004   003AEA                     l3144:
  3005   003AEA  5001               	movf	fputc@c^0,w,c
  3006   003AEC  EC24  F026         	call	_putch
  3007   003AF0  EFC7  F01D         	goto	l1423
  3008   003AF4                     l3146:
  3009   003AF4  EE20 F009          	lfsr	2,9
  3010   003AF8  5003               	movf	fputc@fp^0,w,c
  3011   003AFA  26D9               	addwf	fsr2l,f,c
  3012   003AFC  5004               	movf	(fputc@fp+1)^0,w,c
  3013   003AFE  22DA               	addwfc	fsr2h,f,c
  3014   003B00  50DE               	movf	postinc2,w,c
  3015   003B02  10DE               	iorwf	postinc2,w,c
  3016   003B04  B4D8               	btfsc	status,2,c
  3017   003B06  EF87  F01D         	goto	u2321
  3018   003B0A  EF89  F01D         	goto	u2320
  3019   003B0E                     u2321:
  3020   003B0E  EFA4  F01D         	goto	l3150
  3021   003B12                     u2320:
  3022   003B12  EE20 F009          	lfsr	2,9
  3023   003B16  5003               	movf	fputc@fp^0,w,c
  3024   003B18  26D9               	addwf	fsr2l,f,c
  3025   003B1A  5004               	movf	(fputc@fp+1)^0,w,c
  3026   003B1C  22DA               	addwfc	fsr2h,f,c
  3027   003B1E  EE10 F003          	lfsr	1,3
  3028   003B22  5003               	movf	fputc@fp^0,w,c
  3029   003B24  26E1               	addwf	fsr1l,f,c
  3030   003B26  5004               	movf	(fputc@fp+1)^0,w,c
  3031   003B28  22E2               	addwfc	fsr1h,f,c
  3032   003B2A  50DE               	movf	postinc2,w,c
  3033   003B2C  5CE6               	subwf	postinc1,w,c
  3034   003B2E  50E6               	movf	postinc1,w,c
  3035   003B30  0A80               	xorlw	128
  3036   003B32  6E09               	movwf	(??_fputc+4)^0,c
  3037   003B34  50DE               	movf	postinc2,w,c
  3038   003B36  0A80               	xorlw	128
  3039   003B38  5809               	subwfb	(??_fputc+4)^0,w,c
  3040   003B3A  B0D8               	btfsc	status,0,c
  3041   003B3C  EFA2  F01D         	goto	u2331
  3042   003B40  EFA4  F01D         	goto	u2330
  3043   003B44                     u2331:
  3044   003B44  EFC7  F01D         	goto	l1423
  3045   003B48                     u2330:
  3046   003B48                     l3150:
  3047   003B48  EE20 F003          	lfsr	2,3
  3048   003B4C  5003               	movf	fputc@fp^0,w,c
  3049   003B4E  26D9               	addwf	fsr2l,f,c
  3050   003B50  5004               	movf	(fputc@fp+1)^0,w,c
  3051   003B52  22DA               	addwfc	fsr2h,f,c
  3052   003B54  CFDE F005          	movff	postinc2,??_fputc
  3053   003B58  CFDD F006          	movff	postdec2,??_fputc+1
  3054   003B5C  C003  FFD9         	movff	fputc@fp,fsr2l
  3055   003B60  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3056   003B64  CFDE F007          	movff	postinc2,??_fputc+2
  3057   003B68  CFDD F008          	movff	postdec2,??_fputc+3
  3058   003B6C  5005               	movf	??_fputc^0,w,c
  3059   003B6E  2407               	addwf	(??_fputc+2)^0,w,c
  3060   003B70  6ED9               	movwf	fsr2l,c
  3061   003B72  5006               	movf	(??_fputc+1)^0,w,c
  3062   003B74  2008               	addwfc	(??_fputc+3)^0,w,c
  3063   003B76  6EDA               	movwf	fsr2h,c
  3064   003B78  C001  FFDF         	movff	fputc@c,indf2
  3065   003B7C  EE20 F003          	lfsr	2,3
  3066   003B80  5003               	movf	fputc@fp^0,w,c
  3067   003B82  26D9               	addwf	fsr2l,f,c
  3068   003B84  5004               	movf	(fputc@fp+1)^0,w,c
  3069   003B86  22DA               	addwfc	fsr2h,f,c
  3070   003B88  2ADE               	incf	postinc2,f,c
  3071   003B8A  0E00               	movlw	0
  3072   003B8C  22DD               	addwfc	postdec2,f,c
  3073   003B8E                     l1423:
  3074   003B8E  0012               	return		;funcret
  3075   003B90                     __end_of_fputc:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _putch *****************
  3079 ;; Defined at:
  3080 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  c               1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  c               1    0[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_fputc
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text8
  3109   004C48                     __ptext8:
  3110                           	callstack 0
  3111   004C48                     _putch:
  3112                           	callstack 25
  3113   004C48  0012               	return		;funcret
  3114   004C4A                     __end_of_putch:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _abs *****************
  3118 ;; Defined at:
  3119 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  a               2   18[COMRAM] int 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2   18[COMRAM] int 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;Total ram usage:        4 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_dtoa
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text9
  3148   004964                     __ptext9:
  3149                           	callstack 0
  3150   004964                     _abs:
  3151                           	callstack 25
  3152   004964  BE14               	btfsc	(abs@a+1)^0,7,c
  3153   004966  EFBF  F024         	goto	u2550
  3154   00496A  5014               	movf	(abs@a+1)^0,w,c
  3155   00496C  E106               	bnz	u2551
  3156   00496E  0413               	decf	abs@a^0,w,c
  3157   004970  B0D8               	btfsc	status,0,c
  3158   004972  EFBD  F024         	goto	u2551
  3159   004976  EFBF  F024         	goto	u2550
  3160   00497A                     u2551:
  3161   00497A  EFCD  F024         	goto	l1408
  3162   00497E                     u2550:
  3163   00497E  C013  F015         	movff	abs@a,??_abs
  3164   004982  C014  F016         	movff	abs@a+1,??_abs+1
  3165   004986  1E15               	comf	??_abs^0,f,c
  3166   004988  1E16               	comf	(??_abs+1)^0,f,c
  3167   00498A  4A15               	infsnz	??_abs^0,f,c
  3168   00498C  2A16               	incf	(??_abs+1)^0,f,c
  3169   00498E  C015  F013         	movff	??_abs,?_abs
  3170   004992  C016  F014         	movff	??_abs+1,?_abs+1
  3171   004996  EFD1  F024         	goto	l1411
  3172   00499A                     l1408:
  3173   00499A  C013  F013         	movff	abs@a,?_abs
  3174   00499E  C014  F014         	movff	abs@a+1,?_abs+1
  3175   0049A2                     l1411:
  3176   0049A2  0012               	return		;funcret
  3177   0049A4                     __end_of_abs:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function ___aomod *****************
  3181 ;; Defined at:
  3182 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  dividend        8    0[COMRAM] long long 
  3185 ;;  divisor         8    8[COMRAM] long long 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  sign            1   17[COMRAM] unsigned char 
  3188 ;;  counter         1   16[COMRAM] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  8    0[COMRAM] long long 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3198 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;Total ram usage:       18 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_dtoa
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text10
  3213   00370E                     __ptext10:
  3214                           	callstack 0
  3215   00370E                     ___aomod:
  3216                           	callstack 25
  3217   00370E  0E00               	movlw	0
  3218   003710  6E12               	movwf	___aomod@sign^0,c
  3219   003712  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3220   003714  EF90  F01B         	goto	u2470
  3221   003718  EF8E  F01B         	goto	u2471
  3222   00371C                     u2471:
  3223   00371C  EFA2  F01B         	goto	l3258
  3224   003720                     u2470:
  3225   003720  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3226   003722  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3227   003724  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3228   003726  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3229   003728  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3230   00372A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3231   00372C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3232   00372E  6C01               	negf	___aomod@dividend^0,c
  3233   003730  0E00               	movlw	0
  3234   003732  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3235   003734  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3236   003736  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3237   003738  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3238   00373A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3239   00373C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3240   00373E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3241   003740  0E01               	movlw	1
  3242   003742  6E12               	movwf	___aomod@sign^0,c
  3243   003744                     l3258:
  3244   003744  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3245   003746  EFA9  F01B         	goto	u2480
  3246   00374A  EFA7  F01B         	goto	u2481
  3247   00374E                     u2481:
  3248   00374E  EFB9  F01B         	goto	l3262
  3249   003752                     u2480:
  3250   003752  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3251   003754  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3252   003756  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3253   003758  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3254   00375A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3255   00375C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3256   00375E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3257   003760  6C09               	negf	___aomod@divisor^0,c
  3258   003762  0E00               	movlw	0
  3259   003764  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3260   003766  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3261   003768  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3262   00376A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3263   00376C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3264   00376E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3265   003770  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3266   003772                     l3262:
  3267   003772  5009               	movf	___aomod@divisor^0,w,c
  3268   003774  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3269   003776  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3270   003778  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3271   00377A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3272   00377C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3273   00377E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3274   003780  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3275   003782  B4D8               	btfsc	status,2,c
  3276   003784  EFC6  F01B         	goto	u2491
  3277   003788  EFC8  F01B         	goto	u2490
  3278   00378C                     u2491:
  3279   00378C  EF10  F01C         	goto	l3278
  3280   003790                     u2490:
  3281   003790  0E01               	movlw	1
  3282   003792  6E11               	movwf	___aomod@counter^0,c
  3283   003794  EFD6  F01B         	goto	l3268
  3284   003798                     l3266:
  3285   003798  90D8               	bcf	status,0,c
  3286   00379A  3609               	rlcf	___aomod@divisor^0,f,c
  3287   00379C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3288   00379E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3289   0037A0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3290   0037A2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3291   0037A4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3292   0037A6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3293   0037A8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3294   0037AA  2A11               	incf	___aomod@counter^0,f,c
  3295   0037AC                     l3268:
  3296   0037AC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3297   0037AE  EFDB  F01B         	goto	u2501
  3298   0037B2  EFDD  F01B         	goto	u2500
  3299   0037B6                     u2501:
  3300   0037B6  EFCC  F01B         	goto	l3266
  3301   0037BA                     u2500:
  3302   0037BA                     l3270:
  3303   0037BA  5009               	movf	___aomod@divisor^0,w,c
  3304   0037BC  5C01               	subwf	___aomod@dividend^0,w,c
  3305   0037BE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3306   0037C0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3307   0037C2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3308   0037C4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3309   0037C6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3310   0037C8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3311   0037CA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3312   0037CC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3313   0037CE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3314   0037D0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3315   0037D2  500F               	movf	(___aomod@divisor+6)^0,w,c
  3316   0037D4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3317   0037D6  5010               	movf	(___aomod@divisor+7)^0,w,c
  3318   0037D8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3319   0037DA  A0D8               	btfss	status,0,c
  3320   0037DC  EFF2  F01B         	goto	u2511
  3321   0037E0  EFF4  F01B         	goto	u2510
  3322   0037E4                     u2511:
  3323   0037E4  EF04  F01C         	goto	l3274
  3324   0037E8                     u2510:
  3325   0037E8  5009               	movf	___aomod@divisor^0,w,c
  3326   0037EA  5E01               	subwf	___aomod@dividend^0,f,c
  3327   0037EC  500A               	movf	(___aomod@divisor+1)^0,w,c
  3328   0037EE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3329   0037F0  500B               	movf	(___aomod@divisor+2)^0,w,c
  3330   0037F2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3331   0037F4  500C               	movf	(___aomod@divisor+3)^0,w,c
  3332   0037F6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3333   0037F8  500D               	movf	(___aomod@divisor+4)^0,w,c
  3334   0037FA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3335   0037FC  500E               	movf	(___aomod@divisor+5)^0,w,c
  3336   0037FE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3337   003800  500F               	movf	(___aomod@divisor+6)^0,w,c
  3338   003802  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3339   003804  5010               	movf	(___aomod@divisor+7)^0,w,c
  3340   003806  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3341   003808                     l3274:
  3342   003808  90D8               	bcf	status,0,c
  3343   00380A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3344   00380C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3345   00380E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3346   003810  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3347   003812  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3348   003814  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3349   003816  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3350   003818  3209               	rrcf	___aomod@divisor^0,f,c
  3351   00381A  2E11               	decfsz	___aomod@counter^0,f,c
  3352   00381C  EFDD  F01B         	goto	l3270
  3353   003820                     l3278:
  3354   003820  5012               	movf	___aomod@sign^0,w,c
  3355   003822  B4D8               	btfsc	status,2,c
  3356   003824  EF16  F01C         	goto	u2521
  3357   003828  EF18  F01C         	goto	u2520
  3358   00382C                     u2521:
  3359   00382C  EF28  F01C         	goto	l3282
  3360   003830                     u2520:
  3361   003830  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3362   003832  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3363   003834  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3364   003836  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3365   003838  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3366   00383A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3367   00383C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3368   00383E  6C01               	negf	___aomod@dividend^0,c
  3369   003840  0E00               	movlw	0
  3370   003842  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3371   003844  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3372   003846  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3373   003848  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3374   00384A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3375   00384C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3376   00384E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3377   003850                     l3282:
  3378   003850  C001  F001         	movff	___aomod@dividend,?___aomod
  3379   003854  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3380   003858  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3381   00385C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3382   003860  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3383   003864  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3384   003868  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3385   00386C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3386   003870  0012               	return		;funcret
  3387   003872                     __end_of___aomod:
  3388                           	callstack 0
  3389                           
  3390 ;; *************** function ___aodiv *****************
  3391 ;; Defined at:
  3392 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  dividend        8    0[COMRAM] long long 
  3395 ;;  divisor         8    8[COMRAM] long long 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  quotient        8   18[COMRAM] long long 
  3398 ;;  sign            1   17[COMRAM] unsigned char 
  3399 ;;  counter         1   16[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  8    0[COMRAM] long long 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:       26 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_dtoa
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text11
  3424   00341A                     __ptext11:
  3425                           	callstack 0
  3426   00341A                     ___aodiv:
  3427                           	callstack 25
  3428   00341A  0E00               	movlw	0
  3429   00341C  6E12               	movwf	___aodiv@sign^0,c
  3430   00341E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3431   003420  EF16  F01A         	goto	u2400
  3432   003424  EF14  F01A         	goto	u2401
  3433   003428                     u2401:
  3434   003428  EF28  F01A         	goto	l3214
  3435   00342C                     u2400:
  3436   00342C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3437   00342E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3438   003430  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3439   003432  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3440   003434  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3441   003436  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3442   003438  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3443   00343A  6C09               	negf	___aodiv@divisor^0,c
  3444   00343C  0E00               	movlw	0
  3445   00343E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3446   003440  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3447   003442  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3448   003444  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3449   003446  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3450   003448  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3451   00344A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3452   00344C  0E01               	movlw	1
  3453   00344E  6E12               	movwf	___aodiv@sign^0,c
  3454   003450                     l3214:
  3455   003450  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3456   003452  EF2F  F01A         	goto	u2410
  3457   003456  EF2D  F01A         	goto	u2411
  3458   00345A                     u2411:
  3459   00345A  EF41  F01A         	goto	l3220
  3460   00345E                     u2410:
  3461   00345E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3462   003460  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3463   003462  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3464   003464  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3465   003466  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3466   003468  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3467   00346A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3468   00346C  6C01               	negf	___aodiv@dividend^0,c
  3469   00346E  0E00               	movlw	0
  3470   003470  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3471   003472  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3472   003474  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3473   003476  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3474   003478  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3475   00347A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3476   00347C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3477   00347E  0E01               	movlw	1
  3478   003480  1A12               	xorwf	___aodiv@sign^0,f,c
  3479   003482                     l3220:
  3480   003482  EE20  F013         	lfsr	2,___aodiv@quotient
  3481   003486  0E07               	movlw	7
  3482   003488                     u2421:
  3483   003488  6ADE               	clrf	postinc2,c
  3484   00348A  06E8               	decf	wreg,f,c
  3485   00348C  E2FD               	bc	u2421
  3486   00348E  5009               	movf	___aodiv@divisor^0,w,c
  3487   003490  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3488   003492  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3489   003494  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3490   003496  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3491   003498  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3492   00349A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3493   00349C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3494   00349E  B4D8               	btfsc	status,2,c
  3495   0034A0  EF54  F01A         	goto	u2431
  3496   0034A4  EF56  F01A         	goto	u2430
  3497   0034A8                     u2431:
  3498   0034A8  EFA8  F01A         	goto	l3242
  3499   0034AC                     u2430:
  3500   0034AC  0E01               	movlw	1
  3501   0034AE  6E11               	movwf	___aodiv@counter^0,c
  3502   0034B0  EF64  F01A         	goto	l3228
  3503   0034B4                     l3226:
  3504   0034B4  90D8               	bcf	status,0,c
  3505   0034B6  3609               	rlcf	___aodiv@divisor^0,f,c
  3506   0034B8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3507   0034BA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3508   0034BC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3509   0034BE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3510   0034C0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3511   0034C2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3512   0034C4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3513   0034C6  2A11               	incf	___aodiv@counter^0,f,c
  3514   0034C8                     l3228:
  3515   0034C8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3516   0034CA  EF69  F01A         	goto	u2441
  3517   0034CE  EF6B  F01A         	goto	u2440
  3518   0034D2                     u2441:
  3519   0034D2  EF5A  F01A         	goto	l3226
  3520   0034D6                     u2440:
  3521   0034D6                     l3230:
  3522   0034D6  90D8               	bcf	status,0,c
  3523   0034D8  3613               	rlcf	___aodiv@quotient^0,f,c
  3524   0034DA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3525   0034DC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3526   0034DE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3527   0034E0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3528   0034E2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3529   0034E4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3530   0034E6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3531   0034E8  5009               	movf	___aodiv@divisor^0,w,c
  3532   0034EA  5C01               	subwf	___aodiv@dividend^0,w,c
  3533   0034EC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3534   0034EE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3535   0034F0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3536   0034F2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3537   0034F4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3538   0034F6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3539   0034F8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3540   0034FA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3541   0034FC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3542   0034FE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3543   003500  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3544   003502  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3545   003504  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3546   003506  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3547   003508  A0D8               	btfss	status,0,c
  3548   00350A  EF89  F01A         	goto	u2451
  3549   00350E  EF8B  F01A         	goto	u2450
  3550   003512                     u2451:
  3551   003512  EF9C  F01A         	goto	l3238
  3552   003516                     u2450:
  3553   003516  5009               	movf	___aodiv@divisor^0,w,c
  3554   003518  5E01               	subwf	___aodiv@dividend^0,f,c
  3555   00351A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3556   00351C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3557   00351E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3558   003520  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3559   003522  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3560   003524  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3561   003526  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3562   003528  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3563   00352A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3564   00352C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3565   00352E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3566   003530  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3567   003532  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3568   003534  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3569   003536  8013               	bsf	___aodiv@quotient^0,0,c
  3570   003538                     l3238:
  3571   003538  90D8               	bcf	status,0,c
  3572   00353A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3573   00353C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3574   00353E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3575   003540  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3576   003542  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3577   003544  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3578   003546  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3579   003548  3209               	rrcf	___aodiv@divisor^0,f,c
  3580   00354A  2E11               	decfsz	___aodiv@counter^0,f,c
  3581   00354C  EF6B  F01A         	goto	l3230
  3582   003550                     l3242:
  3583   003550  5012               	movf	___aodiv@sign^0,w,c
  3584   003552  B4D8               	btfsc	status,2,c
  3585   003554  EFAE  F01A         	goto	u2461
  3586   003558  EFB0  F01A         	goto	u2460
  3587   00355C                     u2461:
  3588   00355C  EFC0  F01A         	goto	l3246
  3589   003560                     u2460:
  3590   003560  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3591   003562  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3592   003564  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3593   003566  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3594   003568  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3595   00356A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3596   00356C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3597   00356E  6C13               	negf	___aodiv@quotient^0,c
  3598   003570  0E00               	movlw	0
  3599   003572  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3600   003574  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3601   003576  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3602   003578  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3603   00357A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3604   00357C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3605   00357E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3606   003580                     l3246:
  3607   003580  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3608   003584  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3609   003588  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3610   00358C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3611   003590  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3612   003594  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3613   003598  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3614   00359C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3615   0035A0  0012               	return		;funcret
  3616   0035A2                     __end_of___aodiv:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _sendStringSerial4 *****************
  3620 ;; Defined at:
  3621 ;;		line 33 in file "serial.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  string          2    1[COMRAM] PTR unsigned char 
  3624 ;;		 -> main@buf(100), 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 2
  3643 ;; This function calls:
  3644 ;;		_sendCharSerial4
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text12
  3651   004AD4                     __ptext12:
  3652                           	callstack 0
  3653   004AD4                     _sendStringSerial4:
  3654                           	callstack 28
  3655   004AD4                     
  3656                           ;serial.c: 34:     while (*string!=0){
  3657   004AD4  EF75  F025         	goto	l4418
  3658   004AD8                     l4414:
  3659                           
  3660                           ;serial.c: 35:         sendCharSerial4(*string++);
  3661   004AD8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3662   004ADC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3663   004AE0  50DF               	movf	indf2,w,c
  3664   004AE2  EC00  F026         	call	_sendCharSerial4
  3665   004AE6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3666   004AE8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3667   004AEA                     l4418:
  3668                           
  3669                           ;serial.c: 34:     while (*string!=0){
  3670   004AEA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3671   004AEE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3672   004AF2  50DF               	movf	indf2,w,c
  3673   004AF4  A4D8               	btfss	status,2,c
  3674   004AF6  EF7F  F025         	goto	u4201
  3675   004AFA  EF81  F025         	goto	u4200
  3676   004AFE                     u4201:
  3677   004AFE  EF6C  F025         	goto	l4414
  3678   004B02                     u4200:
  3679   004B02  0012               	return		;funcret
  3680   004B04                     __end_of_sendStringSerial4:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _sendCharSerial4 *****************
  3684 ;; Defined at:
  3685 ;;		line 26 in file "serial.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  charToSend      1    wreg     unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  charToSend      1    0[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;Total ram usage:        1 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_sendStringSerial4
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text13
  3714   004C00                     __ptext13:
  3715                           	callstack 0
  3716   004C00                     _sendCharSerial4:
  3717                           	callstack 28
  3718                           
  3719                           ;incstack = 0
  3720                           ;sendCharSerial4@charToSend stored from wreg
  3721   004C00  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3722   004C02                     l207:
  3723   004C02  010E               	movlb	14	; () banked
  3724   004C04  A537               	btfss	55,2,b	;volatile
  3725   004C06  EF07  F026         	goto	u3231
  3726   004C0A  EF09  F026         	goto	u3230
  3727   004C0E                     u3231:
  3728   004C0E  EF01  F026         	goto	l207
  3729   004C12                     u3230:
  3730   004C12                     
  3731                           ; BSR set to: 14
  3732                           ;serial.c: 28:     TX4REG = charToSend;
  3733   004C12  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3734   004C16                     
  3735                           ; BSR set to: 14
  3736   004C16  0012               	return		;funcret
  3737   004C18                     __end_of_sendCharSerial4:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _readColours *****************
  3741 ;; Defined at:
  3742 ;;		line 105 in file "color.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  vals            2   11[COMRAM] PTR struct RGB
  3745 ;;		 -> vals(8), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;Total ram usage:        2 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 4
  3764 ;; This function calls:
  3765 ;;		_color_read_Blue
  3766 ;;		_color_read_Green
  3767 ;;		_color_read_Red
  3768 ;;		_color_read_lum
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text14
  3775   0042A8                     __ptext14:
  3776                           	callstack 0
  3777   0042A8                     _readColours:
  3778                           	callstack 26
  3779   0042A8                     
  3780                           ;color.c: 107:     vals ->R = color_read_Red();
  3781   0042A8  ECAD  F023         	call	_color_read_Red	;wreg free
  3782   0042AC  C00C  FFD9         	movff	readColours@vals,fsr2l
  3783   0042B0  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3784   0042B4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3785   0042B8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3786                           
  3787                           ;color.c: 108:     vals ->B = color_read_Blue();
  3788   0042BC  ECFD  F023         	call	_color_read_Blue	;wreg free
  3789   0042C0  EE20 F004          	lfsr	2,4
  3790   0042C4  500C               	movf	readColours@vals^0,w,c
  3791   0042C6  26D9               	addwf	fsr2l,f,c
  3792   0042C8  500D               	movf	(readColours@vals+1)^0,w,c
  3793   0042CA  22DA               	addwfc	fsr2h,f,c
  3794   0042CC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3795   0042D0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3796                           
  3797                           ;color.c: 109:     vals ->G = color_read_Green();
  3798   0042D4  ECD5  F023         	call	_color_read_Green	;wreg free
  3799   0042D8  EE20 F002          	lfsr	2,2
  3800   0042DC  500C               	movf	readColours@vals^0,w,c
  3801   0042DE  26D9               	addwf	fsr2l,f,c
  3802   0042E0  500D               	movf	(readColours@vals+1)^0,w,c
  3803   0042E2  22DA               	addwfc	fsr2h,f,c
  3804   0042E4  C005  FFDE         	movff	?_color_read_Green,postinc2
  3805   0042E8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3806                           
  3807                           ;color.c: 110:     vals ->L = color_read_lum();
  3808   0042EC  EC85  F023         	call	_color_read_lum	;wreg free
  3809   0042F0  EE20 F006          	lfsr	2,6
  3810   0042F4  500C               	movf	readColours@vals^0,w,c
  3811   0042F6  26D9               	addwf	fsr2l,f,c
  3812   0042F8  500D               	movf	(readColours@vals+1)^0,w,c
  3813   0042FA  22DA               	addwfc	fsr2h,f,c
  3814   0042FC  C005  FFDE         	movff	?_color_read_lum,postinc2
  3815   004300  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3816   004304  0012               	return		;funcret
  3817   004306                     __end_of_readColours:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _color_read_lum *****************
  3821 ;; Defined at:
  3822 ;;		line 49 in file "color.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  tmp             2    9[COMRAM] unsigned int 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2    4[COMRAM] unsigned int 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;Total ram usage:        7 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 3
  3843 ;; This function calls:
  3844 ;;		_I2C_2_Master_Read
  3845 ;;		_I2C_2_Master_RepStart
  3846 ;;		_I2C_2_Master_Start
  3847 ;;		_I2C_2_Master_Stop
  3848 ;;		_I2C_2_Master_Write
  3849 ;; This function is called by:
  3850 ;;		_readColours
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text15
  3855   00470A                     __ptext15:
  3856                           	callstack 0
  3857   00470A                     _color_read_lum:
  3858                           	callstack 26
  3859   00470A                     
  3860                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3861   00470A  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  3862                           
  3863                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3864   00470E  0E52               	movlw	82
  3865   004710  EC0C  F026         	call	_I2C_2_Master_Write
  3866                           
  3867                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3868   004714  0EB4               	movlw	180
  3869   004716  EC0C  F026         	call	_I2C_2_Master_Write
  3870                           
  3871                           ;color.c: 55:  I2C_2_Master_RepStart();
  3872   00471A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3873                           
  3874                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3875   00471E  0E53               	movlw	83
  3876   004720  EC0C  F026         	call	_I2C_2_Master_Write
  3877                           
  3878                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3879   004724  0E01               	movlw	1
  3880   004726  EC91  F024         	call	_I2C_2_Master_Read
  3881   00472A  6E07               	movwf	??_color_read_lum^0,c
  3882   00472C  5007               	movf	??_color_read_lum^0,w,c
  3883   00472E  6E0A               	movwf	color_read_lum@tmp^0,c
  3884   004730  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3885                           
  3886                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3887   004732  0E00               	movlw	0
  3888   004734  EC91  F024         	call	_I2C_2_Master_Read
  3889   004738  6E07               	movwf	??_color_read_lum^0,c
  3890   00473A  5007               	movf	??_color_read_lum^0,w,c
  3891   00473C  6E09               	movwf	(??_color_read_lum+2)^0,c
  3892   00473E  6A08               	clrf	(??_color_read_lum+1)^0,c
  3893   004740  500A               	movf	color_read_lum@tmp^0,w,c
  3894   004742  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3895   004744  6E0A               	movwf	color_read_lum@tmp^0,c
  3896   004746  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3897   004748  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3898   00474A  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3899                           
  3900                           ;color.c: 59:  I2C_2_Master_Stop();
  3901   00474C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  3902   004750                     
  3903                           ;color.c: 60:  return tmp;
  3904   004750  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3905   004754  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3906   004758  0012               	return		;funcret
  3907   00475A                     __end_of_color_read_lum:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _color_read_Red *****************
  3911 ;; Defined at:
  3912 ;;		line 63 in file "color.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  tmp             2    9[COMRAM] unsigned int 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2    4[COMRAM] unsigned int 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;Total ram usage:        7 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 3
  3933 ;; This function calls:
  3934 ;;		_I2C_2_Master_Read
  3935 ;;		_I2C_2_Master_RepStart
  3936 ;;		_I2C_2_Master_Start
  3937 ;;		_I2C_2_Master_Stop
  3938 ;;		_I2C_2_Master_Write
  3939 ;; This function is called by:
  3940 ;;		_readColours
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text16
  3945   00475A                     __ptext16:
  3946                           	callstack 0
  3947   00475A                     _color_read_Red:
  3948                           	callstack 26
  3949   00475A                     
  3950                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3951   00475A  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  3952                           
  3953                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3954   00475E  0E52               	movlw	82
  3955   004760  EC0C  F026         	call	_I2C_2_Master_Write
  3956                           
  3957                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3958   004764  0EB6               	movlw	182
  3959   004766  EC0C  F026         	call	_I2C_2_Master_Write
  3960                           
  3961                           ;color.c: 69:  I2C_2_Master_RepStart();
  3962   00476A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3963                           
  3964                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3965   00476E  0E53               	movlw	83
  3966   004770  EC0C  F026         	call	_I2C_2_Master_Write
  3967                           
  3968                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3969   004774  0E01               	movlw	1
  3970   004776  EC91  F024         	call	_I2C_2_Master_Read
  3971   00477A  6E07               	movwf	??_color_read_Red^0,c
  3972   00477C  5007               	movf	??_color_read_Red^0,w,c
  3973   00477E  6E0A               	movwf	color_read_Red@tmp^0,c
  3974   004780  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3975                           
  3976                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3977   004782  0E00               	movlw	0
  3978   004784  EC91  F024         	call	_I2C_2_Master_Read
  3979   004788  6E07               	movwf	??_color_read_Red^0,c
  3980   00478A  5007               	movf	??_color_read_Red^0,w,c
  3981   00478C  6E09               	movwf	(??_color_read_Red+2)^0,c
  3982   00478E  6A08               	clrf	(??_color_read_Red+1)^0,c
  3983   004790  500A               	movf	color_read_Red@tmp^0,w,c
  3984   004792  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3985   004794  6E0A               	movwf	color_read_Red@tmp^0,c
  3986   004796  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3987   004798  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3988   00479A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3989                           
  3990                           ;color.c: 73:  I2C_2_Master_Stop();
  3991   00479C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  3992   0047A0                     
  3993                           ;color.c: 74:  return tmp;
  3994   0047A0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3995   0047A4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3996   0047A8  0012               	return		;funcret
  3997   0047AA                     __end_of_color_read_Red:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _color_read_Green *****************
  4001 ;; Defined at:
  4002 ;;		line 76 in file "color.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  tmp             2    9[COMRAM] unsigned int 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2    4[COMRAM] unsigned int 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;Total ram usage:        7 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 3
  4023 ;; This function calls:
  4024 ;;		_I2C_2_Master_Read
  4025 ;;		_I2C_2_Master_RepStart
  4026 ;;		_I2C_2_Master_Start
  4027 ;;		_I2C_2_Master_Stop
  4028 ;;		_I2C_2_Master_Write
  4029 ;; This function is called by:
  4030 ;;		_readColours
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text17
  4035   0047AA                     __ptext17:
  4036                           	callstack 0
  4037   0047AA                     _color_read_Green:
  4038                           	callstack 26
  4039   0047AA                     
  4040                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4041   0047AA  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  4042                           
  4043                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4044   0047AE  0E52               	movlw	82
  4045   0047B0  EC0C  F026         	call	_I2C_2_Master_Write
  4046                           
  4047                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4048   0047B4  0EB8               	movlw	184
  4049   0047B6  EC0C  F026         	call	_I2C_2_Master_Write
  4050                           
  4051                           ;color.c: 82:  I2C_2_Master_RepStart();
  4052   0047BA  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4053                           
  4054                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4055   0047BE  0E53               	movlw	83
  4056   0047C0  EC0C  F026         	call	_I2C_2_Master_Write
  4057                           
  4058                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4059   0047C4  0E01               	movlw	1
  4060   0047C6  EC91  F024         	call	_I2C_2_Master_Read
  4061   0047CA  6E07               	movwf	??_color_read_Green^0,c
  4062   0047CC  5007               	movf	??_color_read_Green^0,w,c
  4063   0047CE  6E0A               	movwf	color_read_Green@tmp^0,c
  4064   0047D0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4065                           
  4066                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4067   0047D2  0E00               	movlw	0
  4068   0047D4  EC91  F024         	call	_I2C_2_Master_Read
  4069   0047D8  6E07               	movwf	??_color_read_Green^0,c
  4070   0047DA  5007               	movf	??_color_read_Green^0,w,c
  4071   0047DC  6E09               	movwf	(??_color_read_Green+2)^0,c
  4072   0047DE  6A08               	clrf	(??_color_read_Green+1)^0,c
  4073   0047E0  500A               	movf	color_read_Green@tmp^0,w,c
  4074   0047E2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4075   0047E4  6E0A               	movwf	color_read_Green@tmp^0,c
  4076   0047E6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4077   0047E8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4078   0047EA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4079                           
  4080                           ;color.c: 86:  I2C_2_Master_Stop();
  4081   0047EC  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  4082   0047F0                     
  4083                           ;color.c: 87:  return tmp;
  4084   0047F0  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4085   0047F4  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4086   0047F8  0012               	return		;funcret
  4087   0047FA                     __end_of_color_read_Green:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _color_read_Blue *****************
  4091 ;; Defined at:
  4092 ;;		line 90 in file "color.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  tmp             2    9[COMRAM] unsigned int 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  2    4[COMRAM] unsigned int 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;Total ram usage:        7 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 3
  4113 ;; This function calls:
  4114 ;;		_I2C_2_Master_Read
  4115 ;;		_I2C_2_Master_RepStart
  4116 ;;		_I2C_2_Master_Start
  4117 ;;		_I2C_2_Master_Stop
  4118 ;;		_I2C_2_Master_Write
  4119 ;; This function is called by:
  4120 ;;		_readColours
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text18
  4125   0047FA                     __ptext18:
  4126                           	callstack 0
  4127   0047FA                     _color_read_Blue:
  4128                           	callstack 26
  4129   0047FA                     
  4130                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4131   0047FA  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  4132                           
  4133                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4134   0047FE  0E52               	movlw	82
  4135   004800  EC0C  F026         	call	_I2C_2_Master_Write
  4136                           
  4137                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4138   004804  0EBA               	movlw	186
  4139   004806  EC0C  F026         	call	_I2C_2_Master_Write
  4140                           
  4141                           ;color.c: 96:  I2C_2_Master_RepStart();
  4142   00480A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4143                           
  4144                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4145   00480E  0E53               	movlw	83
  4146   004810  EC0C  F026         	call	_I2C_2_Master_Write
  4147                           
  4148                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4149   004814  0E01               	movlw	1
  4150   004816  EC91  F024         	call	_I2C_2_Master_Read
  4151   00481A  6E07               	movwf	??_color_read_Blue^0,c
  4152   00481C  5007               	movf	??_color_read_Blue^0,w,c
  4153   00481E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4154   004820  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4155                           
  4156                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4157   004822  0E00               	movlw	0
  4158   004824  EC91  F024         	call	_I2C_2_Master_Read
  4159   004828  6E07               	movwf	??_color_read_Blue^0,c
  4160   00482A  5007               	movf	??_color_read_Blue^0,w,c
  4161   00482C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4162   00482E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4163   004830  500A               	movf	color_read_Blue@tmp^0,w,c
  4164   004832  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4165   004834  6E0A               	movwf	color_read_Blue@tmp^0,c
  4166   004836  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4167   004838  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4168   00483A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4169                           
  4170                           ;color.c: 100:  I2C_2_Master_Stop();
  4171   00483C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  4172   004840                     
  4173                           ;color.c: 101:  return tmp;
  4174   004840  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4175   004844  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4176   004848  0012               	return		;funcret
  4177   00484A                     __end_of_color_read_Blue:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _I2C_2_Master_RepStart *****************
  4181 ;; Defined at:
  4182 ;;		line 33 in file "i2c.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 2
  4203 ;; This function calls:
  4204 ;;		_I2C_2_Master_Idle
  4205 ;; This function is called by:
  4206 ;;		_color_read_lum
  4207 ;;		_color_read_Red
  4208 ;;		_color_read_Green
  4209 ;;		_color_read_Blue
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text19
  4214   004C24                     __ptext19:
  4215                           	callstack 0
  4216   004C24                     _I2C_2_Master_RepStart:
  4217                           	callstack 26
  4218   004C24                     
  4219                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4220   004C24  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4221   004C28                     
  4222                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4223   004C28  010E               	movlb	14	; () banked
  4224   004C2A  83DA               	bsf	218,1,b	;volatile
  4225   004C2C                     
  4226                           ; BSR set to: 14
  4227   004C2C  0012               	return		;funcret
  4228   004C2E                     __end_of_I2C_2_Master_RepStart:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _I2C_2_Master_Read *****************
  4232 ;; Defined at:
  4233 ;;		line 51 in file "i2c.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  ack             1    wreg     unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  ack             1    2[COMRAM] unsigned char 
  4238 ;;  tmp             1    3[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      unsigned char 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:        3 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 2
  4255 ;; This function calls:
  4256 ;;		_I2C_2_Master_Idle
  4257 ;; This function is called by:
  4258 ;;		_color_read_lum
  4259 ;;		_color_read_Red
  4260 ;;		_color_read_Green
  4261 ;;		_color_read_Blue
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text20
  4266   004922                     __ptext20:
  4267                           	callstack 0
  4268   004922                     _I2C_2_Master_Read:
  4269                           	callstack 26
  4270                           
  4271                           ; BSR set to: 14
  4272                           ;incstack = 0
  4273                           ;I2C_2_Master_Read@ack stored from wreg
  4274   004922  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4275   004924                     
  4276                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4277   004924  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4278   004928                     
  4279                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4280   004928  010E               	movlb	14	; () banked
  4281   00492A  87DA               	bsf	218,3,b	;volatile
  4282                           
  4283                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4284   00492C  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4285   004930                     
  4286                           ;i2c.c: 57:   tmp = SSP2BUF;
  4287   004930  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4288                           
  4289                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4290   004934  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4291   004938                     
  4292                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4293   004938  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4294   00493A  B4D8               	btfsc	status,2,c
  4295   00493C  EFA2  F024         	goto	u2781
  4296   004940  EFA6  F024         	goto	u2780
  4297   004944                     u2781:
  4298   004944  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4299   004946  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4300   004948  EFA7  F024         	goto	u2798
  4301   00494C                     u2780:
  4302   00494C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4303   00494E                     u2798:
  4304   00494E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4305   004950  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4306   004952  010E               	movlb	14	; () banked
  4307   004954  51DA               	movf	218,w,b	;volatile
  4308   004956  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4309   004958  0BDF               	andlw	-33
  4310   00495A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4311   00495C  6FDA               	movwf	218,b	;volatile
  4312   00495E                     
  4313                           ; BSR set to: 14
  4314                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4315   00495E  89DA               	bsf	218,4,b	;volatile
  4316   004960                     
  4317                           ; BSR set to: 14
  4318                           ;i2c.c: 61:   return tmp;
  4319   004960  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4320   004962                     
  4321                           ; BSR set to: 14
  4322   004962  0012               	return		;funcret
  4323   004964                     __end_of_I2C_2_Master_Read:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _initUSART4 *****************
  4327 ;; Defined at:
  4328 ;;		line 4 in file "serial.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text21
  4357   004BE2                     __ptext21:
  4358                           	callstack 0
  4359   004BE2                     _initUSART4:
  4360                           	callstack 29
  4361   004BE2                     
  4362                           ;serial.c: 5:     RC0PPS = 0x12;
  4363   004BE2  0E12               	movlw	18
  4364   004BE4  010E               	movlb	14	; () banked
  4365   004BE6  6F62               	movwf	98,b	;volatile
  4366                           
  4367                           ;serial.c: 6:     RX4PPS = 0x11;
  4368   004BE8  0E11               	movlw	17
  4369   004BEA  6F15               	movwf	21,b	;volatile
  4370   004BEC                     
  4371                           ; BSR set to: 14
  4372                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4373   004BEC  97E9               	bcf	233,3,b	;volatile
  4374   004BEE                     
  4375                           ; BSR set to: 14
  4376                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4377   004BEE  95E8               	bcf	232,2,b	;volatile
  4378                           
  4379                           ;serial.c: 9:     SP4BRGL = 51;
  4380   004BF0  0E33               	movlw	51
  4381   004BF2  6FE5               	movwf	229,b	;volatile
  4382                           
  4383                           ;serial.c: 10:     SP4BRGH = 0;
  4384   004BF4  0E00               	movlw	0
  4385   004BF6  6FE6               	movwf	230,b	;volatile
  4386   004BF8                     
  4387                           ; BSR set to: 14
  4388                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4389   004BF8  89E7               	bsf	231,4,b	;volatile
  4390   004BFA                     
  4391                           ; BSR set to: 14
  4392                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4393   004BFA  8BE8               	bsf	232,5,b	;volatile
  4394   004BFC                     
  4395                           ; BSR set to: 14
  4396                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4397   004BFC  8FE7               	bsf	231,7,b	;volatile
  4398   004BFE                     
  4399                           ; BSR set to: 14
  4400   004BFE  0012               	return		;funcret
  4401   004C00                     __end_of_initUSART4:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _initDCmotorsPWM *****************
  4405 ;; Defined at:
  4406 ;;		line 5 in file "dc_motor.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;Total ram usage:        2 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text22
  4435   003F5C                     __ptext22:
  4436                           	callstack 0
  4437   003F5C                     _initDCmotorsPWM:
  4438                           	callstack 29
  4439   003F5C                     
  4440                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4441   003F5C  0E05               	movlw	5
  4442   003F5E  010E               	movlb	14	; () banked
  4443   003F60  6F74               	movwf	116,b	;volatile
  4444                           
  4445                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4446   003F62  0E06               	movlw	6
  4447   003F64  6F76               	movwf	118,b	;volatile
  4448                           
  4449                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4450   003F66  0E07               	movlw	7
  4451   003F68  6F69               	movwf	105,b	;volatile
  4452                           
  4453                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4454   003F6A  0E08               	movlw	8
  4455   003F6C  6F88               	movwf	136,b	;volatile
  4456   003F6E                     
  4457                           ; BSR set to: 14
  4458                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4459   003F6E  9485               	bcf	133,2,c	;volatile
  4460   003F70                     
  4461                           ; BSR set to: 14
  4462                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4463   003F70  9885               	bcf	133,4,c	;volatile
  4464   003F72                     
  4465                           ; BSR set to: 14
  4466                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4467   003F72  9E83               	bcf	131,7,c	;volatile
  4468   003F74                     
  4469                           ; BSR set to: 14
  4470                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4471   003F74  9C87               	bcf	135,6,c	;volatile
  4472                           
  4473                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4474   003F76  50BD               	movf	189,w,c	;volatile
  4475   003F78  0B8F               	andlw	-113
  4476   003F7A  0930               	iorlw	48
  4477   003F7C  6EBD               	movwf	189,c	;volatile
  4478                           
  4479                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4480   003F7E  0EE0               	movlw	-32
  4481   003F80  16BE               	andwf	190,f,c	;volatile
  4482                           
  4483                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4484   003F82  50BF               	movf	191,w,c	;volatile
  4485   003F84  0BF0               	andlw	-16
  4486   003F86  0901               	iorlw	1
  4487   003F88  6EBF               	movwf	191,c	;volatile
  4488   003F8A                     
  4489                           ; BSR set to: 14
  4490                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4491   003F8A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4492   003F8E                     
  4493                           ; BSR set to: 14
  4494                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4495   003F8E  8EBD               	bsf	189,7,c	;volatile
  4496                           
  4497                           ;dc_motor.c: 33:     CCPR1H=0;
  4498   003F90  0E00               	movlw	0
  4499   003F92  6EAA               	movwf	170,c	;volatile
  4500                           
  4501                           ;dc_motor.c: 34:     CCPR2H=0;
  4502   003F94  0E00               	movlw	0
  4503   003F96  6EA6               	movwf	166,c	;volatile
  4504                           
  4505                           ;dc_motor.c: 35:     CCPR3H=0;
  4506   003F98  0E00               	movlw	0
  4507   003F9A  010F               	movlb	15	; () banked
  4508   003F9C  6F25               	movwf	37,b	;volatile
  4509                           
  4510                           ;dc_motor.c: 36:     CCPR4H=0;
  4511   003F9E  0E00               	movlw	0
  4512   003FA0  6F21               	movwf	33,b	;volatile
  4513                           
  4514                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4515   003FA2  0EFC               	movlw	-4
  4516   003FA4  16AD               	andwf	173,f,c	;volatile
  4517                           
  4518                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4519   003FA6  0EF3               	movlw	-13
  4520   003FA8  16AD               	andwf	173,f,c	;volatile
  4521                           
  4522                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4523   003FAA  0ECF               	movlw	-49
  4524   003FAC  16AD               	andwf	173,f,c	;volatile
  4525                           
  4526                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4527   003FAE  0E3F               	movlw	-193
  4528   003FB0  16AD               	andwf	173,f,c	;volatile
  4529   003FB2                     
  4530                           ; BSR set to: 15
  4531                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4532   003FB2  88AB               	bsf	171,4,c	;volatile
  4533                           
  4534                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4535   003FB4  50AB               	movf	171,w,c	;volatile
  4536   003FB6  0BF0               	andlw	-16
  4537   003FB8  090C               	iorlw	12
  4538   003FBA  6EAB               	movwf	171,c	;volatile
  4539   003FBC                     
  4540                           ; BSR set to: 15
  4541                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4542   003FBC  8EAB               	bsf	171,7,c	;volatile
  4543   003FBE                     
  4544                           ; BSR set to: 15
  4545                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4546   003FBE  88A7               	bsf	167,4,c	;volatile
  4547                           
  4548                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4549   003FC0  50A7               	movf	167,w,c	;volatile
  4550   003FC2  0BF0               	andlw	-16
  4551   003FC4  090C               	iorlw	12
  4552   003FC6  6EA7               	movwf	167,c	;volatile
  4553   003FC8                     
  4554                           ; BSR set to: 15
  4555                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4556   003FC8  8EA7               	bsf	167,7,c	;volatile
  4557   003FCA                     
  4558                           ; BSR set to: 15
  4559                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4560   003FCA  8926               	bsf	38,4,b	;volatile
  4561                           
  4562                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4563   003FCC  5126               	movf	38,w,b	;volatile
  4564   003FCE  0BF0               	andlw	-16
  4565   003FD0  090C               	iorlw	12
  4566   003FD2  6F26               	movwf	38,b	;volatile
  4567   003FD4                     
  4568                           ; BSR set to: 15
  4569                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4570   003FD4  8F26               	bsf	38,7,b	;volatile
  4571   003FD6                     
  4572                           ; BSR set to: 15
  4573                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4574   003FD6  8922               	bsf	34,4,b	;volatile
  4575                           
  4576                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4577   003FD8  5122               	movf	34,w,b	;volatile
  4578   003FDA  0BF0               	andlw	-16
  4579   003FDC  090C               	iorlw	12
  4580   003FDE  6F22               	movwf	34,b	;volatile
  4581   003FE0                     
  4582                           ; BSR set to: 15
  4583                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4584   003FE0  8F22               	bsf	34,7,b	;volatile
  4585   003FE2                     
  4586                           ; BSR set to: 15
  4587   003FE2  0012               	return		;funcret
  4588   003FE4                     __end_of_initDCmotorsPWM:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _go_Home *****************
  4592 ;; Defined at:
  4593 ;;		line 4 in file "Memory.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4596 ;;		 -> WayBack(50), 
  4597 ;;  Time_forward    2   37[COMRAM] PTR int 
  4598 ;;		 -> Time_forward(100), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  i               2   42[COMRAM] int 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;Total ram usage:        9 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 6
  4617 ;; This function calls:
  4618 ;;		_BlueMove
  4619 ;;		_GreenMove
  4620 ;;		_LightBlueMove
  4621 ;;		_OrangeMove
  4622 ;;		_RedMove
  4623 ;;		_ReversePink
  4624 ;;		_ReverseYellow
  4625 ;;		_timed_forward
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text23
  4632   003046                     __ptext23:
  4633                           	callstack 0
  4634   003046                     _go_Home:
  4635                           	callstack 24
  4636   003046                     
  4637                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4638   003046  C0F2  F02B         	movff	_move_count,go_Home@i	;volatile
  4639   00304A  C0F3  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  4640   00304E                     l4510:
  4641   00304E  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  4642   003050  EF2E  F018         	goto	u4240
  4643   003054  EF2C  F018         	goto	u4241
  4644   003058                     u4241:
  4645   003058  EF30  F018         	goto	l4514
  4646   00305C                     u4240:
  4647   00305C  EF32  F019         	goto	l633
  4648   003060                     l4514:
  4649                           
  4650                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  4651   003060  0EF5               	movlw	low _motorL
  4652   003062  6E14               	movwf	timed_forward@mL^0,c
  4653   003064  0E00               	movlw	high _motorL
  4654   003066  6E15               	movwf	(timed_forward@mL+1)^0,c
  4655   003068  0EBE               	movlw	low _motorR
  4656   00306A  6E16               	movwf	timed_forward@mR^0,c
  4657   00306C  0E01               	movlw	high _motorR
  4658   00306E  6E17               	movwf	(timed_forward@mR+1)^0,c
  4659   003070  90D8               	bcf	status,0,c
  4660   003072  342B               	rlcf	go_Home@i^0,w,c
  4661   003074  6ED9               	movwf	fsr2l,c
  4662   003076  342C               	rlcf	(go_Home@i+1)^0,w,c
  4663   003078  6EDA               	movwf	fsr2h,c
  4664   00307A  5026               	movf	go_Home@Time_forward^0,w,c
  4665   00307C  26D9               	addwf	fsr2l,f,c
  4666   00307E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4667   003080  22DA               	addwfc	fsr2h,f,c
  4668   003082  CFDE F018          	movff	postinc2,timed_forward@time
  4669   003086  CFDD F019          	movff	postdec2,timed_forward@time+1
  4670   00308A  ECC8  F01D         	call	_timed_forward	;wreg free
  4671   00308E                     
  4672                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  4673   00308E  502B               	movf	go_Home@i^0,w,c
  4674   003090  2424               	addwf	go_Home@WayBack^0,w,c
  4675   003092  6E28               	movwf	??_go_Home^0,c
  4676   003094  502C               	movf	(go_Home@i+1)^0,w,c
  4677   003096  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4678   003098  6E29               	movwf	(??_go_Home+1)^0,c
  4679   00309A  0EFF               	movlw	255
  4680   00309C  2428               	addwf	??_go_Home^0,w,c
  4681   00309E  6ED9               	movwf	fsr2l,c
  4682   0030A0  0EFF               	movlw	255
  4683   0030A2  2029               	addwfc	(??_go_Home+1)^0,w,c
  4684   0030A4  6EDA               	movwf	fsr2h,c
  4685   0030A6  04DE               	decf	postinc2,w,c
  4686   0030A8  A4D8               	btfss	status,2,c
  4687   0030AA  EF59  F018         	goto	u4251
  4688   0030AE  EF5B  F018         	goto	u4250
  4689   0030B2                     u4251:
  4690   0030B2  EF67  F018         	goto	l4520
  4691   0030B6                     u4250:
  4692   0030B6                     
  4693                           ;Memory.c: 22:             GreenMove(&motorL, &motorR);
  4694   0030B6  0EF5               	movlw	low _motorL
  4695   0030B8  6E20               	movwf	GreenMove@mL^0,c
  4696   0030BA  0E00               	movlw	high _motorL
  4697   0030BC  6E21               	movwf	(GreenMove@mL+1)^0,c
  4698   0030BE  0EBE               	movlw	low _motorR
  4699   0030C0  6E22               	movwf	GreenMove@mR^0,c
  4700   0030C2  0E01               	movlw	high _motorR
  4701   0030C4  6E23               	movwf	(GreenMove@mR+1)^0,c
  4702   0030C6  EC2F  F025         	call	_GreenMove	;wreg free
  4703                           
  4704                           ;Memory.c: 23:         }
  4705   0030CA  EF2D  F019         	goto	l4544
  4706   0030CE                     l4520:
  4707   0030CE  502B               	movf	go_Home@i^0,w,c
  4708   0030D0  2424               	addwf	go_Home@WayBack^0,w,c
  4709   0030D2  6E28               	movwf	??_go_Home^0,c
  4710   0030D4  502C               	movf	(go_Home@i+1)^0,w,c
  4711   0030D6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4712   0030D8  6E29               	movwf	(??_go_Home+1)^0,c
  4713   0030DA  0EFF               	movlw	255
  4714   0030DC  2428               	addwf	??_go_Home^0,w,c
  4715   0030DE  6ED9               	movwf	fsr2l,c
  4716   0030E0  0EFF               	movlw	255
  4717   0030E2  2029               	addwfc	(??_go_Home+1)^0,w,c
  4718   0030E4  6EDA               	movwf	fsr2h,c
  4719   0030E6  0E02               	movlw	2
  4720   0030E8  18DE               	xorwf	postinc2,w,c
  4721   0030EA  A4D8               	btfss	status,2,c
  4722   0030EC  EF7A  F018         	goto	u4261
  4723   0030F0  EF7C  F018         	goto	u4260
  4724   0030F4                     u4261:
  4725   0030F4  EF88  F018         	goto	l4524
  4726   0030F8                     u4260:
  4727   0030F8                     
  4728                           ;Memory.c: 25:             LightBlueMove(&motorL, &motorR);
  4729   0030F8  0EF5               	movlw	low _motorL
  4730   0030FA  6E20               	movwf	LightBlueMove@mL^0,c
  4731   0030FC  0E00               	movlw	high _motorL
  4732   0030FE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4733   003100  0EBE               	movlw	low _motorR
  4734   003102  6E22               	movwf	LightBlueMove@mR^0,c
  4735   003104  0E01               	movlw	high _motorR
  4736   003106  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4737   003108  ECE1  F022         	call	_LightBlueMove	;wreg free
  4738                           
  4739                           ;Memory.c: 26:         }
  4740   00310C  EF2D  F019         	goto	l4544
  4741   003110                     l4524:
  4742   003110  502B               	movf	go_Home@i^0,w,c
  4743   003112  2424               	addwf	go_Home@WayBack^0,w,c
  4744   003114  6E28               	movwf	??_go_Home^0,c
  4745   003116  502C               	movf	(go_Home@i+1)^0,w,c
  4746   003118  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4747   00311A  6E29               	movwf	(??_go_Home+1)^0,c
  4748   00311C  0EFF               	movlw	255
  4749   00311E  2428               	addwf	??_go_Home^0,w,c
  4750   003120  6ED9               	movwf	fsr2l,c
  4751   003122  0EFF               	movlw	255
  4752   003124  2029               	addwfc	(??_go_Home+1)^0,w,c
  4753   003126  6EDA               	movwf	fsr2h,c
  4754   003128  0E03               	movlw	3
  4755   00312A  18DE               	xorwf	postinc2,w,c
  4756   00312C  A4D8               	btfss	status,2,c
  4757   00312E  EF9B  F018         	goto	u4271
  4758   003132  EF9D  F018         	goto	u4270
  4759   003136                     u4271:
  4760   003136  EFA9  F018         	goto	l4528
  4761   00313A                     u4270:
  4762   00313A                     
  4763                           ;Memory.c: 28:             ReverseYellow(&motorL, &motorR);
  4764   00313A  0EF5               	movlw	low _motorL
  4765   00313C  6E20               	movwf	ReverseYellow@mL^0,c
  4766   00313E  0E00               	movlw	high _motorL
  4767   003140  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4768   003142  0EBE               	movlw	low _motorR
  4769   003144  6E22               	movwf	ReverseYellow@mR^0,c
  4770   003146  0E01               	movlw	high _motorR
  4771   003148  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4772   00314A  ECD2  F024         	call	_ReverseYellow	;wreg free
  4773                           
  4774                           ;Memory.c: 29:         }
  4775   00314E  EF2D  F019         	goto	l4544
  4776   003152                     l4528:
  4777   003152  502B               	movf	go_Home@i^0,w,c
  4778   003154  2424               	addwf	go_Home@WayBack^0,w,c
  4779   003156  6E28               	movwf	??_go_Home^0,c
  4780   003158  502C               	movf	(go_Home@i+1)^0,w,c
  4781   00315A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4782   00315C  6E29               	movwf	(??_go_Home+1)^0,c
  4783   00315E  0EFF               	movlw	255
  4784   003160  2428               	addwf	??_go_Home^0,w,c
  4785   003162  6ED9               	movwf	fsr2l,c
  4786   003164  0EFF               	movlw	255
  4787   003166  2029               	addwfc	(??_go_Home+1)^0,w,c
  4788   003168  6EDA               	movwf	fsr2h,c
  4789   00316A  0E04               	movlw	4
  4790   00316C  18DE               	xorwf	postinc2,w,c
  4791   00316E  A4D8               	btfss	status,2,c
  4792   003170  EFBC  F018         	goto	u4281
  4793   003174  EFBE  F018         	goto	u4280
  4794   003178                     u4281:
  4795   003178  EFCA  F018         	goto	l4532
  4796   00317C                     u4280:
  4797   00317C                     
  4798                           ;Memory.c: 31:             BlueMove(&motorL, &motorR);
  4799   00317C  0EF5               	movlw	low _motorL
  4800   00317E  6E20               	movwf	BlueMove@mL^0,c
  4801   003180  0E00               	movlw	high _motorL
  4802   003182  6E21               	movwf	(BlueMove@mL+1)^0,c
  4803   003184  0EBE               	movlw	low _motorR
  4804   003186  6E22               	movwf	BlueMove@mR^0,c
  4805   003188  0E01               	movlw	high _motorR
  4806   00318A  6E23               	movwf	(BlueMove@mR+1)^0,c
  4807   00318C  EC21  F021         	call	_BlueMove	;wreg free
  4808                           
  4809                           ;Memory.c: 32:         }
  4810   003190  EF2D  F019         	goto	l4544
  4811   003194                     l4532:
  4812   003194  502B               	movf	go_Home@i^0,w,c
  4813   003196  2424               	addwf	go_Home@WayBack^0,w,c
  4814   003198  6E28               	movwf	??_go_Home^0,c
  4815   00319A  502C               	movf	(go_Home@i+1)^0,w,c
  4816   00319C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4817   00319E  6E29               	movwf	(??_go_Home+1)^0,c
  4818   0031A0  0EFF               	movlw	255
  4819   0031A2  2428               	addwf	??_go_Home^0,w,c
  4820   0031A4  6ED9               	movwf	fsr2l,c
  4821   0031A6  0EFF               	movlw	255
  4822   0031A8  2029               	addwfc	(??_go_Home+1)^0,w,c
  4823   0031AA  6EDA               	movwf	fsr2h,c
  4824   0031AC  0E05               	movlw	5
  4825   0031AE  18DE               	xorwf	postinc2,w,c
  4826   0031B0  A4D8               	btfss	status,2,c
  4827   0031B2  EFDD  F018         	goto	u4291
  4828   0031B6  EFDF  F018         	goto	u4290
  4829   0031BA                     u4291:
  4830   0031BA  EFEB  F018         	goto	l4536
  4831   0031BE                     u4290:
  4832   0031BE                     
  4833                           ;Memory.c: 34:             RedMove(&motorL, &motorR);
  4834   0031BE  0EF5               	movlw	low _motorL
  4835   0031C0  6E20               	movwf	RedMove@mL^0,c
  4836   0031C2  0E00               	movlw	high _motorL
  4837   0031C4  6E21               	movwf	(RedMove@mL+1)^0,c
  4838   0031C6  0EBE               	movlw	low _motorR
  4839   0031C8  6E22               	movwf	RedMove@mR^0,c
  4840   0031CA  0E01               	movlw	high _motorR
  4841   0031CC  6E23               	movwf	(RedMove@mR+1)^0,c
  4842   0031CE  EC10  F025         	call	_RedMove	;wreg free
  4843                           
  4844                           ;Memory.c: 35:         }
  4845   0031D2  EF2D  F019         	goto	l4544
  4846   0031D6                     l4536:
  4847   0031D6  502B               	movf	go_Home@i^0,w,c
  4848   0031D8  2424               	addwf	go_Home@WayBack^0,w,c
  4849   0031DA  6E28               	movwf	??_go_Home^0,c
  4850   0031DC  502C               	movf	(go_Home@i+1)^0,w,c
  4851   0031DE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4852   0031E0  6E29               	movwf	(??_go_Home+1)^0,c
  4853   0031E2  0EFF               	movlw	255
  4854   0031E4  2428               	addwf	??_go_Home^0,w,c
  4855   0031E6  6ED9               	movwf	fsr2l,c
  4856   0031E8  0EFF               	movlw	255
  4857   0031EA  2029               	addwfc	(??_go_Home+1)^0,w,c
  4858   0031EC  6EDA               	movwf	fsr2h,c
  4859   0031EE  0E06               	movlw	6
  4860   0031F0  18DE               	xorwf	postinc2,w,c
  4861   0031F2  A4D8               	btfss	status,2,c
  4862   0031F4  EFFE  F018         	goto	u4301
  4863   0031F8  EF00  F019         	goto	u4300
  4864   0031FC                     u4301:
  4865   0031FC  EF0C  F019         	goto	l4540
  4866   003200                     u4300:
  4867   003200                     
  4868                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  4869   003200  0EF5               	movlw	low _motorL
  4870   003202  6E20               	movwf	OrangeMove@mL^0,c
  4871   003204  0E00               	movlw	high _motorL
  4872   003206  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4873   003208  0EBE               	movlw	low _motorR
  4874   00320A  6E22               	movwf	OrangeMove@mR^0,c
  4875   00320C  0E01               	movlw	high _motorR
  4876   00320E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4877   003210  ECB8  F022         	call	_OrangeMove	;wreg free
  4878                           
  4879                           ;Memory.c: 38:         }
  4880   003214  EF2D  F019         	goto	l4544
  4881   003218                     l4540:
  4882   003218  502B               	movf	go_Home@i^0,w,c
  4883   00321A  2424               	addwf	go_Home@WayBack^0,w,c
  4884   00321C  6E28               	movwf	??_go_Home^0,c
  4885   00321E  502C               	movf	(go_Home@i+1)^0,w,c
  4886   003220  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4887   003222  6E29               	movwf	(??_go_Home+1)^0,c
  4888   003224  0EFF               	movlw	255
  4889   003226  2428               	addwf	??_go_Home^0,w,c
  4890   003228  6ED9               	movwf	fsr2l,c
  4891   00322A  0EFF               	movlw	255
  4892   00322C  2029               	addwfc	(??_go_Home+1)^0,w,c
  4893   00322E  6EDA               	movwf	fsr2h,c
  4894   003230  0E07               	movlw	7
  4895   003232  18DE               	xorwf	postinc2,w,c
  4896   003234  A4D8               	btfss	status,2,c
  4897   003236  EF1F  F019         	goto	u4311
  4898   00323A  EF21  F019         	goto	u4310
  4899   00323E                     u4311:
  4900   00323E  EF2D  F019         	goto	l627
  4901   003242                     u4310:
  4902   003242                     
  4903                           ;Memory.c: 40:             ReversePink(&motorL, &motorR);
  4904   003242  0EF5               	movlw	low _motorL
  4905   003244  6E20               	movwf	ReversePink@mL^0,c
  4906   003246  0E00               	movlw	high _motorL
  4907   003248  6E21               	movwf	(ReversePink@mL+1)^0,c
  4908   00324A  0EBE               	movlw	low _motorR
  4909   00324C  6E22               	movwf	ReversePink@mR^0,c
  4910   00324E  0E01               	movlw	high _motorR
  4911   003250  6E23               	movwf	(ReversePink@mR+1)^0,c
  4912   003252  ECF1  F024         	call	_ReversePink	;wreg free
  4913   003256  EF2D  F019         	goto	l4544
  4914   00325A                     l627:
  4915   00325A                     l4544:
  4916                           
  4917                           ;Memory.c: 44:   }
  4918   00325A  062B               	decf	go_Home@i^0,f,c
  4919   00325C  A0D8               	btfss	status,0,c
  4920   00325E  062C               	decf	(go_Home@i+1)^0,f,c
  4921   003260  EF27  F018         	goto	l4510
  4922   003264                     l633:
  4923   003264  0012               	return		;funcret
  4924   003266                     __end_of_go_Home:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _timed_forward *****************
  4928 ;; Defined at:
  4929 ;;		line 164 in file "dc_motor.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4932 ;;		 -> motorL(9), 
  4933 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4934 ;;		 -> motorR(9), 
  4935 ;;  time            2   23[COMRAM] int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 3
  4954 ;; This function calls:
  4955 ;;		_delayed_ms
  4956 ;;		_setMotorPWM
  4957 ;; This function is called by:
  4958 ;;		_go_Home
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text24
  4963   003B90                     __ptext24:
  4964                           	callstack 0
  4965   003B90                     _timed_forward:
  4966                           	callstack 26
  4967   003B90                     
  4968                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  4969   003B90  EE20 F001          	lfsr	2,1
  4970   003B94  5014               	movf	timed_forward@mL^0,w,c
  4971   003B96  26D9               	addwf	fsr2l,f,c
  4972   003B98  5015               	movf	(timed_forward@mL+1)^0,w,c
  4973   003B9A  22DA               	addwfc	fsr2h,f,c
  4974   003B9C  0E01               	movlw	1
  4975   003B9E  6EDF               	movwf	indf2,c
  4976                           
  4977                           ;dc_motor.c: 168:     mR->direction =1;
  4978   003BA0  EE20 F001          	lfsr	2,1
  4979   003BA4  5016               	movf	timed_forward@mR^0,w,c
  4980   003BA6  26D9               	addwf	fsr2l,f,c
  4981   003BA8  5017               	movf	(timed_forward@mR+1)^0,w,c
  4982   003BAA  22DA               	addwfc	fsr2h,f,c
  4983   003BAC  0E01               	movlw	1
  4984   003BAE  6EDF               	movwf	indf2,c
  4985                           
  4986                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  4987   003BB0  EFFE  F01D         	goto	l3784
  4988   003BB4                     l3776:
  4989                           
  4990                           ;dc_motor.c: 171:         mL->power+=10;
  4991   003BB4  C014  FFD9         	movff	timed_forward@mL,fsr2l
  4992   003BB8  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  4993   003BBC  0E0A               	movlw	10
  4994   003BBE  26DF               	addwf	indf2,f,c
  4995                           
  4996                           ;dc_motor.c: 172:         mR->power+=10;
  4997   003BC0  C016  FFD9         	movff	timed_forward@mR,fsr2l
  4998   003BC4  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  4999   003BC8  0E0A               	movlw	10
  5000   003BCA  26DF               	addwf	indf2,f,c
  5001   003BCC                     
  5002                           ;dc_motor.c: 174:         setMotorPWM(mL);
  5003   003BCC  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5004   003BD0  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5005   003BD4  ECD1  F01A         	call	_setMotorPWM	;wreg free
  5006   003BD8                     
  5007                           ;dc_motor.c: 175:         setMotorPWM(mR);
  5008   003BD8  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5009   003BDC  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5010   003BE0  ECD1  F01A         	call	_setMotorPWM	;wreg free
  5011   003BE4                     
  5012                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5013   003BE4  0E02               	movlw	2
  5014   003BE6  6E1B               	movwf	(??_timed_forward+1)^0,c
  5015   003BE8  0EA0               	movlw	160
  5016   003BEA  6E1A               	movwf	??_timed_forward^0,c
  5017   003BEC  0E92               	movlw	146
  5018   003BEE                     u4617:
  5019   003BEE  2EE8               	decfsz	wreg,f,c
  5020   003BF0  D7FE               	bra	u4617
  5021   003BF2  2E1A               	decfsz	??_timed_forward^0,f,c
  5022   003BF4  D7FC               	bra	u4617
  5023   003BF6  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5024   003BF8  D7FA               	bra	u4617
  5025   003BFA  D000               	nop2	
  5026   003BFC                     l3784:
  5027   003BFC  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5028   003C00  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5029   003C04  0E1E               	movlw	30
  5030   003C06  60DF               	cpfslt	indf2,c
  5031   003C08  EF08  F01E         	goto	u3241
  5032   003C0C  EF0A  F01E         	goto	u3240
  5033   003C10                     u3241:
  5034   003C10  EF16  F01E         	goto	l3788
  5035   003C14                     u3240:
  5036   003C14  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5037   003C18  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5038   003C1C  0E1D               	movlw	29
  5039   003C1E  64DF               	cpfsgt	indf2,c
  5040   003C20  EF14  F01E         	goto	u3251
  5041   003C24  EF16  F01E         	goto	u3250
  5042   003C28                     u3251:
  5043   003C28  EFDA  F01D         	goto	l3776
  5044   003C2C                     u3250:
  5045   003C2C                     l3788:
  5046                           
  5047                           ;dc_motor.c: 180:     delayed_ms(time);
  5048   003C2C  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5049   003C30  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5050   003C34  EC4E  F025         	call	_delayed_ms	;wreg free
  5051   003C38  0012               	return		;funcret
  5052   003C3A                     __end_of_timed_forward:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _delayed_ms *****************
  5056 ;; Defined at:
  5057 ;;		line 39 in file "timers.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  time            2    0[COMRAM] int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  i               2    3[COMRAM] unsigned int 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;Total ram usage:        5 bytes
  5076 ;; Hardware stack levels used: 1
  5077 ;; Hardware stack levels required when called: 1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_timed_forward
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text25
  5086   004A9C                     __ptext25:
  5087                           	callstack 0
  5088   004A9C                     _delayed_ms:
  5089                           	callstack 27
  5090   004A9C                     
  5091                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5092   004A9C  0E00               	movlw	0
  5093   004A9E  6E05               	movwf	(delayed_ms@i+1)^0,c
  5094   004AA0  0E00               	movlw	0
  5095   004AA2  6E04               	movwf	delayed_ms@i^0,c
  5096   004AA4  EF5E  F025         	goto	l662
  5097   004AA8                     l3462:
  5098                           
  5099                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5100   004AA8  0E15               	movlw	21
  5101   004AAA  6E03               	movwf	??_delayed_ms^0,c
  5102   004AAC  0EC6               	movlw	198
  5103   004AAE                     u4627:
  5104   004AAE  2EE8               	decfsz	wreg,f,c
  5105   004AB0  D7FE               	bra	u4627
  5106   004AB2  2E03               	decfsz	??_delayed_ms^0,f,c
  5107   004AB4  D7FC               	bra	u4627
  5108   004AB6  D000               	nop2	
  5109   004AB8                     
  5110                           ;timers.c: 42:     }
  5111   004AB8  4A04               	infsnz	delayed_ms@i^0,f,c
  5112   004ABA  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5113   004ABC                     l662:
  5114   004ABC  5001               	movf	delayed_ms@time^0,w,c
  5115   004ABE  5C04               	subwf	delayed_ms@i^0,w,c
  5116   004AC0  5002               	movf	(delayed_ms@time+1)^0,w,c
  5117   004AC2  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5118   004AC4  A0D8               	btfss	status,0,c
  5119   004AC6  EF67  F025         	goto	u2801
  5120   004ACA  EF69  F025         	goto	u2800
  5121   004ACE                     u2801:
  5122   004ACE  EF54  F025         	goto	l3462
  5123   004AD2                     u2800:
  5124   004AD2  0012               	return		;funcret
  5125   004AD4                     __end_of_delayed_ms:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _ReverseYellow *****************
  5129 ;; Defined at:
  5130 ;;		line 324 in file "dc_motor.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5133 ;;		 -> motorL(9), 
  5134 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5135 ;;		 -> motorR(9), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;Total ram usage:        4 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 5
  5154 ;; This function calls:
  5155 ;;		_ForwardOneBlock
  5156 ;;		_turnLeft45
  5157 ;; This function is called by:
  5158 ;;		_go_Home
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text26
  5163   0049A4                     __ptext26:
  5164                           	callstack 0
  5165   0049A4                     _ReverseYellow:
  5166                           	callstack 24
  5167   0049A4                     
  5168                           ;dc_motor.c: 325:     turnLeft45(&motorL, &motorR);
  5169   0049A4  0EF5               	movlw	low _motorL
  5170   0049A6  6E1A               	movwf	turnLeft45@mL^0,c
  5171   0049A8  0E00               	movlw	high _motorL
  5172   0049AA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5173   0049AC  0EBE               	movlw	low _motorR
  5174   0049AE  6E1C               	movwf	turnLeft45@mR^0,c
  5175   0049B0  0E01               	movlw	high _motorR
  5176   0049B2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5177   0049B4  EC63  F022         	call	_turnLeft45	;wreg free
  5178                           
  5179                           ;dc_motor.c: 326:     turnLeft45(&motorL, &motorR);
  5180   0049B8  0EF5               	movlw	low _motorL
  5181   0049BA  6E1A               	movwf	turnLeft45@mL^0,c
  5182   0049BC  0E00               	movlw	high _motorL
  5183   0049BE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5184   0049C0  0EBE               	movlw	low _motorR
  5185   0049C2  6E1C               	movwf	turnLeft45@mR^0,c
  5186   0049C4  0E01               	movlw	high _motorR
  5187   0049C6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5188   0049C8  EC63  F022         	call	_turnLeft45	;wreg free
  5189                           
  5190                           ;dc_motor.c: 327:     ForwardOneBlock(&motorL, &motorR);
  5191   0049CC  0EF5               	movlw	low _motorL
  5192   0049CE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5193   0049D0  0E00               	movlw	high _motorL
  5194   0049D2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5195   0049D4  0EBE               	movlw	low _motorR
  5196   0049D6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5197   0049D8  0E01               	movlw	high _motorR
  5198   0049DA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5199   0049DC  EC83  F021         	call	_ForwardOneBlock	;wreg free
  5200   0049E0  0012               	return		;funcret
  5201   0049E2                     __end_of_ReverseYellow:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _ReversePink *****************
  5205 ;; Defined at:
  5206 ;;		line 329 in file "dc_motor.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5209 ;;		 -> motorL(9), 
  5210 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5211 ;;		 -> motorR(9), 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5226 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;Total ram usage:        4 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; Hardware stack levels required when called: 5
  5230 ;; This function calls:
  5231 ;;		_ForwardOneBlock
  5232 ;;		_turnRight45
  5233 ;; This function is called by:
  5234 ;;		_go_Home
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text27
  5239   0049E2                     __ptext27:
  5240                           	callstack 0
  5241   0049E2                     _ReversePink:
  5242                           	callstack 24
  5243   0049E2                     
  5244                           ;dc_motor.c: 330:     turnRight45(&motorL, &motorR);
  5245   0049E2  0EF5               	movlw	low _motorL
  5246   0049E4  6E1A               	movwf	turnRight45@mL^0,c
  5247   0049E6  0E00               	movlw	high _motorL
  5248   0049E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5249   0049EA  0EBE               	movlw	low _motorR
  5250   0049EC  6E1C               	movwf	turnRight45@mR^0,c
  5251   0049EE  0E01               	movlw	high _motorR
  5252   0049F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5253   0049F2  EC37  F022         	call	_turnRight45	;wreg free
  5254                           
  5255                           ;dc_motor.c: 331:     turnRight45(&motorL, &motorR);
  5256   0049F6  0EF5               	movlw	low _motorL
  5257   0049F8  6E1A               	movwf	turnRight45@mL^0,c
  5258   0049FA  0E00               	movlw	high _motorL
  5259   0049FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5260   0049FE  0EBE               	movlw	low _motorR
  5261   004A00  6E1C               	movwf	turnRight45@mR^0,c
  5262   004A02  0E01               	movlw	high _motorR
  5263   004A04  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5264   004A06  EC37  F022         	call	_turnRight45	;wreg free
  5265                           
  5266                           ;dc_motor.c: 332:     ForwardOneBlock(&motorL, &motorR);
  5267   004A0A  0EF5               	movlw	low _motorL
  5268   004A0C  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5269   004A0E  0E00               	movlw	high _motorL
  5270   004A10  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5271   004A12  0EBE               	movlw	low _motorR
  5272   004A14  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5273   004A16  0E01               	movlw	high _motorR
  5274   004A18  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5275   004A1A  EC83  F021         	call	_ForwardOneBlock	;wreg free
  5276   004A1E  0012               	return		;funcret
  5277   004A20                     __end_of_ReversePink:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _ForwardOneBlock *****************
  5281 ;; Defined at:
  5282 ;;		line 228 in file "dc_motor.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5285 ;;		 -> motorL(9), 
  5286 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5287 ;;		 -> motorR(9), 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5303 ;;Total ram usage:        6 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 4
  5306 ;; This function calls:
  5307 ;;		_fullSpeedAhead
  5308 ;;		_stop
  5309 ;; This function is called by:
  5310 ;;		_ReverseYellow
  5311 ;;		_ReversePink
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text28
  5316   004306                     __ptext28:
  5317                           	callstack 0
  5318   004306                     _ForwardOneBlock:
  5319                           	callstack 24
  5320   004306                     
  5321                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  5322   004306  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5323   00430A  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5324   00430E  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5325   004312  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5326   004316  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  5327   00431A                     
  5328                           ;dc_motor.c: 230:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5329   00431A  0E52               	movlw	82
  5330   00431C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5331   00431E  0E2B               	movlw	43
  5332   004320  6E1E               	movwf	??_ForwardOneBlock^0,c
  5333   004322  0E00               	movlw	0
  5334   004324                     u4637:
  5335   004324  2EE8               	decfsz	wreg,f,c
  5336   004326  D7FE               	bra	u4637
  5337   004328  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5338   00432A  D7FC               	bra	u4637
  5339   00432C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5340   00432E  D7FA               	bra	u4637
  5341   004330  D000               	nop2	
  5342   004332                     
  5343                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  5344   004332  0EF5               	movlw	low _motorL
  5345   004334  6E14               	movwf	stop@mL^0,c
  5346   004336  0E00               	movlw	high _motorL
  5347   004338  6E15               	movwf	(stop@mL+1)^0,c
  5348   00433A  0EBE               	movlw	low _motorR
  5349   00433C  6E16               	movwf	stop@mR^0,c
  5350   00433E  0E01               	movlw	high _motorR
  5351   004340  6E17               	movwf	(stop@mR+1)^0,c
  5352   004342  EC33  F020         	call	_stop	;wreg free
  5353                           
  5354                           ;dc_motor.c: 232:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5355   004346  0E52               	movlw	82
  5356   004348  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5357   00434A  0E2B               	movlw	43
  5358   00434C  6E1E               	movwf	??_ForwardOneBlock^0,c
  5359   00434E  0E00               	movlw	0
  5360   004350                     u4647:
  5361   004350  2EE8               	decfsz	wreg,f,c
  5362   004352  D7FE               	bra	u4647
  5363   004354  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5364   004356  D7FC               	bra	u4647
  5365   004358  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5366   00435A  D7FA               	bra	u4647
  5367   00435C  D000               	nop2	
  5368   00435E  0012               	return		;funcret
  5369   004360                     __end_of_ForwardOneBlock:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function _RedMove *****************
  5373 ;; Defined at:
  5374 ;;		line 252 in file "dc_motor.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5377 ;;		 -> motorL(9), 
  5378 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5379 ;;		 -> motorR(9), 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;Total ram usage:        4 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 5
  5398 ;; This function calls:
  5399 ;;		_reverseDetect
  5400 ;;		_turnRight45
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;;		_go_Home
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text29
  5408   004A20                     __ptext29:
  5409                           	callstack 0
  5410   004A20                     _RedMove:
  5411                           	callstack 24
  5412   004A20                     
  5413                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  5414   004A20  0EF5               	movlw	low _motorL
  5415   004A22  6E1A               	movwf	reverseDetect@mL^0,c
  5416   004A24  0E00               	movlw	high _motorL
  5417   004A26  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5418   004A28  0EBE               	movlw	low _motorR
  5419   004A2A  6E1C               	movwf	reverseDetect@mR^0,c
  5420   004A2C  0E01               	movlw	high _motorR
  5421   004A2E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5422   004A30  ECDD  F021         	call	_reverseDetect	;wreg free
  5423                           
  5424                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  5425   004A34  0EF5               	movlw	low _motorL
  5426   004A36  6E1A               	movwf	turnRight45@mL^0,c
  5427   004A38  0E00               	movlw	high _motorL
  5428   004A3A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5429   004A3C  0EBE               	movlw	low _motorR
  5430   004A3E  6E1C               	movwf	turnRight45@mR^0,c
  5431   004A40  0E01               	movlw	high _motorR
  5432   004A42  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5433   004A44  EC37  F022         	call	_turnRight45	;wreg free
  5434                           
  5435                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  5436   004A48  0EF5               	movlw	low _motorL
  5437   004A4A  6E1A               	movwf	turnRight45@mL^0,c
  5438   004A4C  0E00               	movlw	high _motorL
  5439   004A4E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5440   004A50  0EBE               	movlw	low _motorR
  5441   004A52  6E1C               	movwf	turnRight45@mR^0,c
  5442   004A54  0E01               	movlw	high _motorR
  5443   004A56  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5444   004A58  EC37  F022         	call	_turnRight45	;wreg free
  5445   004A5C  0012               	return		;funcret
  5446   004A5E                     __end_of_RedMove:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _OrangeMove *****************
  5450 ;; Defined at:
  5451 ;;		line 298 in file "dc_motor.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5454 ;;		 -> motorL(9), 
  5455 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5456 ;;		 -> motorR(9), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;Total ram usage:        4 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 5
  5475 ;; This function calls:
  5476 ;;		_reverseDetect
  5477 ;;		_turnRight45
  5478 ;; This function is called by:
  5479 ;;		_main
  5480 ;;		_go_Home
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text30
  5485   004570                     __ptext30:
  5486                           	callstack 0
  5487   004570                     _OrangeMove:
  5488                           	callstack 24
  5489   004570                     
  5490                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  5491   004570  0EF5               	movlw	low _motorL
  5492   004572  6E1A               	movwf	reverseDetect@mL^0,c
  5493   004574  0E00               	movlw	high _motorL
  5494   004576  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5495   004578  0EBE               	movlw	low _motorR
  5496   00457A  6E1C               	movwf	reverseDetect@mR^0,c
  5497   00457C  0E01               	movlw	high _motorR
  5498   00457E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5499   004580  ECDD  F021         	call	_reverseDetect	;wreg free
  5500                           
  5501                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  5502   004584  0EF5               	movlw	low _motorL
  5503   004586  6E1A               	movwf	turnRight45@mL^0,c
  5504   004588  0E00               	movlw	high _motorL
  5505   00458A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5506   00458C  0EBE               	movlw	low _motorR
  5507   00458E  6E1C               	movwf	turnRight45@mR^0,c
  5508   004590  0E01               	movlw	high _motorR
  5509   004592  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5510   004594  EC37  F022         	call	_turnRight45	;wreg free
  5511                           
  5512                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  5513   004598  0EF5               	movlw	low _motorL
  5514   00459A  6E1A               	movwf	turnRight45@mL^0,c
  5515   00459C  0E00               	movlw	high _motorL
  5516   00459E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5517   0045A0  0EBE               	movlw	low _motorR
  5518   0045A2  6E1C               	movwf	turnRight45@mR^0,c
  5519   0045A4  0E01               	movlw	high _motorR
  5520   0045A6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5521   0045A8  EC37  F022         	call	_turnRight45	;wreg free
  5522                           
  5523                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  5524   0045AC  0EF5               	movlw	low _motorL
  5525   0045AE  6E1A               	movwf	turnRight45@mL^0,c
  5526   0045B0  0E00               	movlw	high _motorL
  5527   0045B2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5528   0045B4  0EBE               	movlw	low _motorR
  5529   0045B6  6E1C               	movwf	turnRight45@mR^0,c
  5530   0045B8  0E01               	movlw	high _motorR
  5531   0045BA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5532   0045BC  EC37  F022         	call	_turnRight45	;wreg free
  5533   0045C0  0012               	return		;funcret
  5534   0045C2                     __end_of_OrangeMove:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function _LightBlueMove *****************
  5538 ;; Defined at:
  5539 ;;		line 307 in file "dc_motor.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5542 ;;		 -> motorL(9), 
  5543 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5544 ;;		 -> motorR(9), 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5560 ;;Total ram usage:        4 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 5
  5563 ;; This function calls:
  5564 ;;		_reverseDetect
  5565 ;;		_turnLeft45
  5566 ;; This function is called by:
  5567 ;;		_main
  5568 ;;		_go_Home
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text31
  5573   0045C2                     __ptext31:
  5574                           	callstack 0
  5575   0045C2                     _LightBlueMove:
  5576                           	callstack 24
  5577   0045C2                     
  5578                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  5579   0045C2  0EF5               	movlw	low _motorL
  5580   0045C4  6E1A               	movwf	reverseDetect@mL^0,c
  5581   0045C6  0E00               	movlw	high _motorL
  5582   0045C8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5583   0045CA  0EBE               	movlw	low _motorR
  5584   0045CC  6E1C               	movwf	reverseDetect@mR^0,c
  5585   0045CE  0E01               	movlw	high _motorR
  5586   0045D0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5587   0045D2  ECDD  F021         	call	_reverseDetect	;wreg free
  5588                           
  5589                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  5590   0045D6  0EF5               	movlw	low _motorL
  5591   0045D8  6E1A               	movwf	turnLeft45@mL^0,c
  5592   0045DA  0E00               	movlw	high _motorL
  5593   0045DC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5594   0045DE  0EBE               	movlw	low _motorR
  5595   0045E0  6E1C               	movwf	turnLeft45@mR^0,c
  5596   0045E2  0E01               	movlw	high _motorR
  5597   0045E4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5598   0045E6  EC63  F022         	call	_turnLeft45	;wreg free
  5599                           
  5600                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  5601   0045EA  0EF5               	movlw	low _motorL
  5602   0045EC  6E1A               	movwf	turnLeft45@mL^0,c
  5603   0045EE  0E00               	movlw	high _motorL
  5604   0045F0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5605   0045F2  0EBE               	movlw	low _motorR
  5606   0045F4  6E1C               	movwf	turnLeft45@mR^0,c
  5607   0045F6  0E01               	movlw	high _motorR
  5608   0045F8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5609   0045FA  EC63  F022         	call	_turnLeft45	;wreg free
  5610                           
  5611                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  5612   0045FE  0EF5               	movlw	low _motorL
  5613   004600  6E1A               	movwf	turnLeft45@mL^0,c
  5614   004602  0E00               	movlw	high _motorL
  5615   004604  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5616   004606  0EBE               	movlw	low _motorR
  5617   004608  6E1C               	movwf	turnLeft45@mR^0,c
  5618   00460A  0E01               	movlw	high _motorR
  5619   00460C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5620   00460E  EC63  F022         	call	_turnLeft45	;wreg free
  5621   004612  0012               	return		;funcret
  5622   004614                     __end_of_LightBlueMove:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _GreenMove *****************
  5626 ;; Defined at:
  5627 ;;		line 260 in file "dc_motor.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5630 ;;		 -> motorL(9), 
  5631 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5632 ;;		 -> motorR(9), 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;Total ram usage:        4 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 5
  5651 ;; This function calls:
  5652 ;;		_reverseDetect
  5653 ;;		_turnLeft45
  5654 ;; This function is called by:
  5655 ;;		_main
  5656 ;;		_go_Home
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text32
  5661   004A5E                     __ptext32:
  5662                           	callstack 0
  5663   004A5E                     _GreenMove:
  5664                           	callstack 24
  5665   004A5E                     
  5666                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  5667   004A5E  0EF5               	movlw	low _motorL
  5668   004A60  6E1A               	movwf	reverseDetect@mL^0,c
  5669   004A62  0E00               	movlw	high _motorL
  5670   004A64  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5671   004A66  0EBE               	movlw	low _motorR
  5672   004A68  6E1C               	movwf	reverseDetect@mR^0,c
  5673   004A6A  0E01               	movlw	high _motorR
  5674   004A6C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5675   004A6E  ECDD  F021         	call	_reverseDetect	;wreg free
  5676                           
  5677                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  5678   004A72  0EF5               	movlw	low _motorL
  5679   004A74  6E1A               	movwf	turnLeft45@mL^0,c
  5680   004A76  0E00               	movlw	high _motorL
  5681   004A78  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5682   004A7A  0EBE               	movlw	low _motorR
  5683   004A7C  6E1C               	movwf	turnLeft45@mR^0,c
  5684   004A7E  0E01               	movlw	high _motorR
  5685   004A80  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5686   004A82  EC63  F022         	call	_turnLeft45	;wreg free
  5687                           
  5688                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  5689   004A86  0EF5               	movlw	low _motorL
  5690   004A88  6E1A               	movwf	turnLeft45@mL^0,c
  5691   004A8A  0E00               	movlw	high _motorL
  5692   004A8C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5693   004A8E  0EBE               	movlw	low _motorR
  5694   004A90  6E1C               	movwf	turnLeft45@mR^0,c
  5695   004A92  0E01               	movlw	high _motorR
  5696   004A94  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5697   004A96  EC63  F022         	call	_turnLeft45	;wreg free
  5698   004A9A  0012               	return		;funcret
  5699   004A9C                     __end_of_GreenMove:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _BlueMove *****************
  5703 ;; Defined at:
  5704 ;;		line 268 in file "dc_motor.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5707 ;;		 -> motorL(9), 
  5708 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5709 ;;		 -> motorR(9), 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;Total ram usage:        4 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 5
  5728 ;; This function calls:
  5729 ;;		_reverseDetect
  5730 ;;		_turnRight45
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;;		_go_Home
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text33
  5738   004242                     __ptext33:
  5739                           	callstack 0
  5740   004242                     _BlueMove:
  5741                           	callstack 24
  5742   004242                     
  5743                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5744   004242  0EF5               	movlw	low _motorL
  5745   004244  6E1A               	movwf	reverseDetect@mL^0,c
  5746   004246  0E00               	movlw	high _motorL
  5747   004248  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5748   00424A  0EBE               	movlw	low _motorR
  5749   00424C  6E1C               	movwf	reverseDetect@mR^0,c
  5750   00424E  0E01               	movlw	high _motorR
  5751   004250  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5752   004252  ECDD  F021         	call	_reverseDetect	;wreg free
  5753                           
  5754                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  5755   004256  0EF5               	movlw	low _motorL
  5756   004258  6E1A               	movwf	turnRight45@mL^0,c
  5757   00425A  0E00               	movlw	high _motorL
  5758   00425C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5759   00425E  0EBE               	movlw	low _motorR
  5760   004260  6E1C               	movwf	turnRight45@mR^0,c
  5761   004262  0E01               	movlw	high _motorR
  5762   004264  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5763   004266  EC37  F022         	call	_turnRight45	;wreg free
  5764                           
  5765                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  5766   00426A  0EF5               	movlw	low _motorL
  5767   00426C  6E1A               	movwf	turnRight45@mL^0,c
  5768   00426E  0E00               	movlw	high _motorL
  5769   004270  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5770   004272  0EBE               	movlw	low _motorR
  5771   004274  6E1C               	movwf	turnRight45@mR^0,c
  5772   004276  0E01               	movlw	high _motorR
  5773   004278  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5774   00427A  EC37  F022         	call	_turnRight45	;wreg free
  5775                           
  5776                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  5777   00427E  0EF5               	movlw	low _motorL
  5778   004280  6E1A               	movwf	turnRight45@mL^0,c
  5779   004282  0E00               	movlw	high _motorL
  5780   004284  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5781   004286  0EBE               	movlw	low _motorR
  5782   004288  6E1C               	movwf	turnRight45@mR^0,c
  5783   00428A  0E01               	movlw	high _motorR
  5784   00428C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5785   00428E  EC37  F022         	call	_turnRight45	;wreg free
  5786                           
  5787                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  5788   004292  0EF5               	movlw	low _motorL
  5789   004294  6E1A               	movwf	turnRight45@mL^0,c
  5790   004296  0E00               	movlw	high _motorL
  5791   004298  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5792   00429A  0EBE               	movlw	low _motorR
  5793   00429C  6E1C               	movwf	turnRight45@mR^0,c
  5794   00429E  0E01               	movlw	high _motorR
  5795   0042A0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5796   0042A2  EC37  F022         	call	_turnRight45	;wreg free
  5797   0042A6  0012               	return		;funcret
  5798   0042A8                     __end_of_BlueMove:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _getTMR0val *****************
  5802 ;; Defined at:
  5803 ;;		line 28 in file "timers.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  moving          2    0[COMRAM] int 
  5808 ;;  temp            2    0        unsigned int 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5822 ;;Total ram usage:        2 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_main
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text34
  5833   004B56                     __ptext34:
  5834                           	callstack 0
  5835   004B56                     _getTMR0val:
  5836                           	callstack 29
  5837   004B56  50D3               	movf	211,w,c	;volatile
  5838   004B58                     
  5839                           ;timers.c: 32:     int moving=TMR0H<<8;
  5840   004B58  50D4               	movf	212,w,c	;volatile
  5841   004B5A  6E02               	movwf	(getTMR0val@moving+1)^0,c
  5842   004B5C  6A01               	clrf	getTMR0val@moving^0,c
  5843   004B5E                     
  5844                           ;timers.c: 33:     Time_forward[move_count]=moving;
  5845   004B5E  90D8               	bcf	status,0,c
  5846   004B60  0100               	movlb	0	; () banked
  5847   004B62  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  5848   004B64  6ED9               	movwf	fsr2l,c
  5849   004B66  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  5850   004B68  6EDA               	movwf	fsr2h,c
  5851   004B6A  0E00               	movlw	low _Time_forward
  5852   004B6C  26D9               	addwf	fsr2l,f,c
  5853   004B6E  0E02               	movlw	high _Time_forward
  5854   004B70  22DA               	addwfc	fsr2h,f,c
  5855   004B72  C001  FFDE         	movff	getTMR0val@moving,postinc2
  5856   004B76  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  5857   004B7A                     
  5858                           ; BSR set to: 0
  5859   004B7A  0012               	return		;funcret
  5860   004B7C                     __end_of_getTMR0val:
  5861                           	callstack 0
  5862                           
  5863 ;; *************** function _colour_rel *****************
  5864 ;; Defined at:
  5865 ;;		line 114 in file "color.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  vals            2   49[COMRAM] PTR struct RGB
  5868 ;;		 -> vals(8), 
  5869 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  5870 ;;		 -> rel(12), 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  B               4   73[COMRAM] float 
  5873 ;;  G               4   69[COMRAM] float 
  5874 ;;  R               4   65[COMRAM] float 
  5875 ;;  L               4   53[COMRAM] float 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;Total ram usage:       28 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 2
  5892 ;; This function calls:
  5893 ;;		___fladd
  5894 ;;		___fldiv
  5895 ;;		___xxtofl
  5896 ;; This function is called by:
  5897 ;;		_main
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text35
  5902   002A9A                     __ptext35:
  5903                           	callstack 0
  5904   002A9A                     _colour_rel:
  5905                           	callstack 28
  5906   002A9A                     
  5907                           ;color.c: 115:     float R = vals->R;
  5908   002A9A  C032  FFD9         	movff	colour_rel@vals,fsr2l
  5909   002A9E  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  5910   002AA2  CFDE F001          	movff	postinc2,___xxtofl@val
  5911   002AA6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5912   002AAA  0E00               	movlw	0
  5913   002AAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5914   002AAE  0EFF               	movlw	-1
  5915   002AB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5916   002AB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5917   002AB4  0E01               	movlw	1
  5918   002AB6  EC33  F019         	call	___xxtofl
  5919   002ABA  C001  F042         	movff	?___xxtofl,colour_rel@R
  5920   002ABE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  5921   002AC2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  5922   002AC6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  5923                           
  5924                           ;color.c: 116:     float G = vals->G;
  5925   002ACA  EE20 F002          	lfsr	2,2
  5926   002ACE  5032               	movf	colour_rel@vals^0,w,c
  5927   002AD0  26D9               	addwf	fsr2l,f,c
  5928   002AD2  5033               	movf	(colour_rel@vals+1)^0,w,c
  5929   002AD4  22DA               	addwfc	fsr2h,f,c
  5930   002AD6  CFDE F001          	movff	postinc2,___xxtofl@val
  5931   002ADA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5932   002ADE  0E00               	movlw	0
  5933   002AE0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5934   002AE2  0EFF               	movlw	-1
  5935   002AE4  6E03               	movwf	(___xxtofl@val+2)^0,c
  5936   002AE6  6E04               	movwf	(___xxtofl@val+3)^0,c
  5937   002AE8  0E01               	movlw	1
  5938   002AEA  EC33  F019         	call	___xxtofl
  5939   002AEE  C001  F046         	movff	?___xxtofl,colour_rel@G
  5940   002AF2  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  5941   002AF6  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  5942   002AFA  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  5943                           
  5944                           ;color.c: 117:     float B = vals->B;
  5945   002AFE  EE20 F004          	lfsr	2,4
  5946   002B02  5032               	movf	colour_rel@vals^0,w,c
  5947   002B04  26D9               	addwf	fsr2l,f,c
  5948   002B06  5033               	movf	(colour_rel@vals+1)^0,w,c
  5949   002B08  22DA               	addwfc	fsr2h,f,c
  5950   002B0A  CFDE F001          	movff	postinc2,___xxtofl@val
  5951   002B0E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5952   002B12  0E00               	movlw	0
  5953   002B14  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5954   002B16  0EFF               	movlw	-1
  5955   002B18  6E03               	movwf	(___xxtofl@val+2)^0,c
  5956   002B1A  6E04               	movwf	(___xxtofl@val+3)^0,c
  5957   002B1C  0E01               	movlw	1
  5958   002B1E  EC33  F019         	call	___xxtofl
  5959   002B22  C001  F04A         	movff	?___xxtofl,colour_rel@B
  5960   002B26  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  5961   002B2A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  5962   002B2E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  5963                           
  5964                           ;color.c: 118:     float L = vals->L;
  5965   002B32  EE20 F006          	lfsr	2,6
  5966   002B36  5032               	movf	colour_rel@vals^0,w,c
  5967   002B38  26D9               	addwf	fsr2l,f,c
  5968   002B3A  5033               	movf	(colour_rel@vals+1)^0,w,c
  5969   002B3C  22DA               	addwfc	fsr2h,f,c
  5970   002B3E  CFDE F001          	movff	postinc2,___xxtofl@val
  5971   002B42  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5972   002B46  0E00               	movlw	0
  5973   002B48  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5974   002B4A  0EFF               	movlw	-1
  5975   002B4C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5976   002B4E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5977   002B50  0E01               	movlw	1
  5978   002B52  EC33  F019         	call	___xxtofl
  5979   002B56  C001  F036         	movff	?___xxtofl,colour_rel@L
  5980   002B5A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  5981   002B5E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  5982   002B62  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  5983   002B66                     
  5984                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5985   002B66  C046  F005         	movff	colour_rel@G,___fladd@a
  5986   002B6A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5987   002B6E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5988   002B72  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5989   002B76  C042  F001         	movff	colour_rel@R,___fladd@b
  5990   002B7A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5991   002B7E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5992   002B82  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5993   002B86  EC0B  F00F         	call	___fladd	;wreg free
  5994   002B8A  C001  F03A         	movff	?___fladd,_colour_rel$2831
  5995   002B8E  C002  F03B         	movff	?___fladd+1,_colour_rel$2831+1
  5996   002B92  C003  F03C         	movff	?___fladd+2,_colour_rel$2831+2
  5997   002B96  C004  F03D         	movff	?___fladd+3,_colour_rel$2831+3
  5998   002B9A                     
  5999                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6000   002B9A  C04A  F005         	movff	colour_rel@B,___fladd@a
  6001   002B9E  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6002   002BA2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6003   002BA6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6004   002BAA  C03A  F001         	movff	_colour_rel$2831,___fladd@b
  6005   002BAE  C03B  F002         	movff	_colour_rel$2831+1,___fladd@b+1
  6006   002BB2  C03C  F003         	movff	_colour_rel$2831+2,___fladd@b+2
  6007   002BB6  C03D  F004         	movff	_colour_rel$2831+3,___fladd@b+3
  6008   002BBA  EC0B  F00F         	call	___fladd	;wreg free
  6009   002BBE  C001  F03E         	movff	?___fladd,_colour_rel$2832
  6010   002BC2  C002  F03F         	movff	?___fladd+1,_colour_rel$2832+1
  6011   002BC6  C003  F040         	movff	?___fladd+2,_colour_rel$2832+2
  6012   002BCA  C004  F041         	movff	?___fladd+3,_colour_rel$2832+3
  6013                           
  6014                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6015   002BCE  C042  F019         	movff	colour_rel@R,___fldiv@b
  6016   002BD2  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6017   002BD6  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6018   002BDA  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6019   002BDE  C036  F005         	movff	colour_rel@L,___fladd@a
  6020   002BE2  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6021   002BE6  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6022   002BEA  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6023   002BEE  C03E  F001         	movff	_colour_rel$2832,___fladd@b
  6024   002BF2  C03F  F002         	movff	_colour_rel$2832+1,___fladd@b+1
  6025   002BF6  C040  F003         	movff	_colour_rel$2832+2,___fladd@b+2
  6026   002BFA  C041  F004         	movff	_colour_rel$2832+3,___fladd@b+3
  6027   002BFE  EC0B  F00F         	call	___fladd	;wreg free
  6028   002C02  C001  F01D         	movff	?___fladd,___fldiv@a
  6029   002C06  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6030   002C0A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6031   002C0E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6032   002C12  EC80  F013         	call	___fldiv	;wreg free
  6033   002C16  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6034   002C1A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6035   002C1E  C019  FFDE         	movff	?___fldiv,postinc2
  6036   002C22  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6037   002C26  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6038   002C2A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6039   002C2E                     
  6040                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6041   002C2E  C046  F005         	movff	colour_rel@G,___fladd@a
  6042   002C32  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6043   002C36  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6044   002C3A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6045   002C3E  C042  F001         	movff	colour_rel@R,___fladd@b
  6046   002C42  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6047   002C46  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6048   002C4A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6049   002C4E  EC0B  F00F         	call	___fladd	;wreg free
  6050   002C52  C001  F03A         	movff	?___fladd,_colour_rel$2831
  6051   002C56  C002  F03B         	movff	?___fladd+1,_colour_rel$2831+1
  6052   002C5A  C003  F03C         	movff	?___fladd+2,_colour_rel$2831+2
  6053   002C5E  C004  F03D         	movff	?___fladd+3,_colour_rel$2831+3
  6054   002C62                     
  6055                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6056   002C62  C04A  F005         	movff	colour_rel@B,___fladd@a
  6057   002C66  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6058   002C6A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6059   002C6E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6060   002C72  C03A  F001         	movff	_colour_rel$2831,___fladd@b
  6061   002C76  C03B  F002         	movff	_colour_rel$2831+1,___fladd@b+1
  6062   002C7A  C03C  F003         	movff	_colour_rel$2831+2,___fladd@b+2
  6063   002C7E  C03D  F004         	movff	_colour_rel$2831+3,___fladd@b+3
  6064   002C82  EC0B  F00F         	call	___fladd	;wreg free
  6065   002C86  C001  F03E         	movff	?___fladd,_colour_rel$2832
  6066   002C8A  C002  F03F         	movff	?___fladd+1,_colour_rel$2832+1
  6067   002C8E  C003  F040         	movff	?___fladd+2,_colour_rel$2832+2
  6068   002C92  C004  F041         	movff	?___fladd+3,_colour_rel$2832+3
  6069                           
  6070                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6071   002C96  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6072   002C9A  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6073   002C9E  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6074   002CA2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6075   002CA6  C036  F005         	movff	colour_rel@L,___fladd@a
  6076   002CAA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6077   002CAE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6078   002CB2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6079   002CB6  C03E  F001         	movff	_colour_rel$2832,___fladd@b
  6080   002CBA  C03F  F002         	movff	_colour_rel$2832+1,___fladd@b+1
  6081   002CBE  C040  F003         	movff	_colour_rel$2832+2,___fladd@b+2
  6082   002CC2  C041  F004         	movff	_colour_rel$2832+3,___fladd@b+3
  6083   002CC6  EC0B  F00F         	call	___fladd	;wreg free
  6084   002CCA  C001  F01D         	movff	?___fladd,___fldiv@a
  6085   002CCE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6086   002CD2  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6087   002CD6  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6088   002CDA  EC80  F013         	call	___fldiv	;wreg free
  6089   002CDE  EE20 F008          	lfsr	2,8
  6090   002CE2  5034               	movf	colour_rel@rel^0,w,c
  6091   002CE4  26D9               	addwf	fsr2l,f,c
  6092   002CE6  5035               	movf	(colour_rel@rel+1)^0,w,c
  6093   002CE8  22DA               	addwfc	fsr2h,f,c
  6094   002CEA  C019  FFDE         	movff	?___fldiv,postinc2
  6095   002CEE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6096   002CF2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6097   002CF6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6098   002CFA                     
  6099                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6100   002CFA  C046  F005         	movff	colour_rel@G,___fladd@a
  6101   002CFE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6102   002D02  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6103   002D06  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6104   002D0A  C042  F001         	movff	colour_rel@R,___fladd@b
  6105   002D0E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6106   002D12  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6107   002D16  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6108   002D1A  EC0B  F00F         	call	___fladd	;wreg free
  6109   002D1E  C001  F03A         	movff	?___fladd,_colour_rel$2831
  6110   002D22  C002  F03B         	movff	?___fladd+1,_colour_rel$2831+1
  6111   002D26  C003  F03C         	movff	?___fladd+2,_colour_rel$2831+2
  6112   002D2A  C004  F03D         	movff	?___fladd+3,_colour_rel$2831+3
  6113   002D2E                     
  6114                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6115   002D2E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6116   002D32  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6117   002D36  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6118   002D3A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6119   002D3E  C03A  F001         	movff	_colour_rel$2831,___fladd@b
  6120   002D42  C03B  F002         	movff	_colour_rel$2831+1,___fladd@b+1
  6121   002D46  C03C  F003         	movff	_colour_rel$2831+2,___fladd@b+2
  6122   002D4A  C03D  F004         	movff	_colour_rel$2831+3,___fladd@b+3
  6123   002D4E  EC0B  F00F         	call	___fladd	;wreg free
  6124   002D52  C001  F03E         	movff	?___fladd,_colour_rel$2832
  6125   002D56  C002  F03F         	movff	?___fladd+1,_colour_rel$2832+1
  6126   002D5A  C003  F040         	movff	?___fladd+2,_colour_rel$2832+2
  6127   002D5E  C004  F041         	movff	?___fladd+3,_colour_rel$2832+3
  6128                           
  6129                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6130   002D62  C046  F019         	movff	colour_rel@G,___fldiv@b
  6131   002D66  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6132   002D6A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6133   002D6E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6134   002D72  C036  F005         	movff	colour_rel@L,___fladd@a
  6135   002D76  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6136   002D7A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6137   002D7E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6138   002D82  C03E  F001         	movff	_colour_rel$2832,___fladd@b
  6139   002D86  C03F  F002         	movff	_colour_rel$2832+1,___fladd@b+1
  6140   002D8A  C040  F003         	movff	_colour_rel$2832+2,___fladd@b+2
  6141   002D8E  C041  F004         	movff	_colour_rel$2832+3,___fladd@b+3
  6142   002D92  EC0B  F00F         	call	___fladd	;wreg free
  6143   002D96  C001  F01D         	movff	?___fladd,___fldiv@a
  6144   002D9A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6145   002D9E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6146   002DA2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6147   002DA6  EC80  F013         	call	___fldiv	;wreg free
  6148   002DAA  EE20 F004          	lfsr	2,4
  6149   002DAE  5034               	movf	colour_rel@rel^0,w,c
  6150   002DB0  26D9               	addwf	fsr2l,f,c
  6151   002DB2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6152   002DB4  22DA               	addwfc	fsr2h,f,c
  6153   002DB6  C019  FFDE         	movff	?___fldiv,postinc2
  6154   002DBA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6155   002DBE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6156   002DC2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6157   002DC6  0012               	return		;funcret
  6158   002DC8                     __end_of_colour_rel:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _color_click_init *****************
  6162 ;; Defined at:
  6163 ;;		line 7 in file "color.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;Total ram usage:        1 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 4
  6184 ;; This function calls:
  6185 ;;		_I2C_2_Master_Init
  6186 ;;		_color_writetoaddr
  6187 ;; This function is called by:
  6188 ;;		_main
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text36
  6193   004614                     __ptext36:
  6194                           	callstack 0
  6195   004614                     _color_click_init:
  6196                           	callstack 26
  6197   004614                     
  6198                           ;color.c: 10:     I2C_2_Master_Init();
  6199   004614  EC82  F025         	call	_I2C_2_Master_Init	;wreg free
  6200   004618                     
  6201                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6202   004618  0E01               	movlw	1
  6203   00461A  6E03               	movwf	color_writetoaddr@value^0,c
  6204   00461C  0E00               	movlw	0
  6205   00461E  ECD1  F025         	call	_color_writetoaddr
  6206   004622                     
  6207                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6208   004622  0E3F               	movlw	63
  6209   004624  6E05               	movwf	??_color_click_init^0,c
  6210   004626  0E55               	movlw	85
  6211   004628                     u4657:
  6212   004628  2EE8               	decfsz	wreg,f,c
  6213   00462A  D7FE               	bra	u4657
  6214   00462C  2E05               	decfsz	??_color_click_init^0,f,c
  6215   00462E  D7FC               	bra	u4657
  6216   004630  F000               	nop	
  6217   004632                     
  6218                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6219   004632  0E03               	movlw	3
  6220   004634  6E03               	movwf	color_writetoaddr@value^0,c
  6221   004636  0E00               	movlw	0
  6222   004638  ECD1  F025         	call	_color_writetoaddr
  6223   00463C                     
  6224                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6225   00463C  0ED5               	movlw	213
  6226   00463E  6E03               	movwf	color_writetoaddr@value^0,c
  6227   004640  0E01               	movlw	1
  6228   004642  ECD1  F025         	call	_color_writetoaddr
  6229   004646                     
  6230                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6231   004646  0E00               	movlw	0
  6232   004648  6E03               	movwf	color_writetoaddr@value^0,c
  6233   00464A  0E0F               	movlw	15
  6234   00464C  ECD1  F025         	call	_color_writetoaddr
  6235   004650                     
  6236                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6237   004650  9287               	bcf	135,1,c	;volatile
  6238   004652                     
  6239                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6240   004652  9881               	bcf	129,4,c	;volatile
  6241   004654                     
  6242                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6243   004654  9E86               	bcf	134,7,c	;volatile
  6244   004656                     
  6245                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6246   004656  9684               	bcf	132,3,c	;volatile
  6247   004658                     
  6248                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6249   004658  9884               	bcf	132,4,c	;volatile
  6250   00465A                     
  6251                           ;color.c: 28:     LATGbits.LATG1=0;
  6252   00465A  927F               	bcf	127,1,c	;volatile
  6253   00465C                     
  6254                           ;color.c: 29:     LATFbits.LATF7=0;
  6255   00465C  9E7E               	bcf	126,7,c	;volatile
  6256   00465E                     
  6257                           ;color.c: 30:     LATAbits.LATA4=0;
  6258   00465E  9879               	bcf	121,4,c	;volatile
  6259   004660                     
  6260                           ;color.c: 32:     LATDbits.LATD3=0;
  6261   004660  967C               	bcf	124,3,c	;volatile
  6262   004662                     
  6263                           ;color.c: 33:     LATDbits.LATD4=0;
  6264   004662  987C               	bcf	124,4,c	;volatile
  6265   004664  0012               	return		;funcret
  6266   004666                     __end_of_color_click_init:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _color_writetoaddr *****************
  6270 ;; Defined at:
  6271 ;;		line 41 in file "color.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  address         1    wreg     unsigned char 
  6274 ;;  value           1    2[COMRAM] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  address         1    3[COMRAM] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6286 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;Total ram usage:        2 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 3
  6293 ;; This function calls:
  6294 ;;		_I2C_2_Master_Start
  6295 ;;		_I2C_2_Master_Stop
  6296 ;;		_I2C_2_Master_Write
  6297 ;; This function is called by:
  6298 ;;		_color_click_init
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text37
  6303   004BA2                     __ptext37:
  6304                           	callstack 0
  6305   004BA2                     _color_writetoaddr:
  6306                           	callstack 26
  6307                           
  6308                           ;incstack = 0
  6309                           ;color_writetoaddr@address stored from wreg
  6310   004BA2  6E04               	movwf	color_writetoaddr@address^0,c
  6311   004BA4                     
  6312                           ;color.c: 42:     I2C_2_Master_Start();
  6313   004BA4  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  6314                           
  6315                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6316   004BA8  0E52               	movlw	82
  6317   004BAA  EC0C  F026         	call	_I2C_2_Master_Write
  6318                           
  6319                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6320   004BAE  5004               	movf	color_writetoaddr@address^0,w,c
  6321   004BB0  0980               	iorlw	128
  6322   004BB2  EC0C  F026         	call	_I2C_2_Master_Write
  6323                           
  6324                           ;color.c: 45:     I2C_2_Master_Write(value);
  6325   004BB6  5003               	movf	color_writetoaddr@value^0,w,c
  6326   004BB8  EC0C  F026         	call	_I2C_2_Master_Write
  6327                           
  6328                           ;color.c: 46:     I2C_2_Master_Stop();
  6329   004BBC  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  6330   004BC0  0012               	return		;funcret
  6331   004BC2                     __end_of_color_writetoaddr:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _I2C_2_Master_Write *****************
  6335 ;; Defined at:
  6336 ;;		line 45 in file "i2c.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  data_byte       1    wreg     unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  data_byte       1    1[COMRAM] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;Total ram usage:        1 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 2
  6357 ;; This function calls:
  6358 ;;		_I2C_2_Master_Idle
  6359 ;; This function is called by:
  6360 ;;		_color_writetoaddr
  6361 ;;		_color_read_lum
  6362 ;;		_color_read_Red
  6363 ;;		_color_read_Green
  6364 ;;		_color_read_Blue
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text38
  6369   004C18                     __ptext38:
  6370                           	callstack 0
  6371   004C18                     _I2C_2_Master_Write:
  6372                           	callstack 26
  6373                           
  6374                           ;incstack = 0
  6375                           ;I2C_2_Master_Write@data_byte stored from wreg
  6376   004C18  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6377   004C1A                     
  6378                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6379   004C1A  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6380   004C1E                     
  6381                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6382   004C1E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6383   004C22  0012               	return		;funcret
  6384   004C24                     __end_of_I2C_2_Master_Write:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _I2C_2_Master_Stop *****************
  6388 ;; Defined at:
  6389 ;;		line 39 in file "i2c.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 2
  6410 ;; This function calls:
  6411 ;;		_I2C_2_Master_Idle
  6412 ;; This function is called by:
  6413 ;;		_color_writetoaddr
  6414 ;;		_color_read_lum
  6415 ;;		_color_read_Red
  6416 ;;		_color_read_Green
  6417 ;;		_color_read_Blue
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text39
  6422   004C2E                     __ptext39:
  6423                           	callstack 0
  6424   004C2E                     _I2C_2_Master_Stop:
  6425                           	callstack 26
  6426   004C2E                     
  6427                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6428   004C2E  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6429   004C32                     
  6430                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6431   004C32  010E               	movlb	14	; () banked
  6432   004C34  85DA               	bsf	218,2,b	;volatile
  6433   004C36                     
  6434                           ; BSR set to: 14
  6435   004C36  0012               	return		;funcret
  6436   004C38                     __end_of_I2C_2_Master_Stop:
  6437                           	callstack 0
  6438                           
  6439 ;; *************** function _I2C_2_Master_Start *****************
  6440 ;; Defined at:
  6441 ;;		line 27 in file "i2c.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 2
  6462 ;; This function calls:
  6463 ;;		_I2C_2_Master_Idle
  6464 ;; This function is called by:
  6465 ;;		_color_writetoaddr
  6466 ;;		_color_read_lum
  6467 ;;		_color_read_Red
  6468 ;;		_color_read_Green
  6469 ;;		_color_read_Blue
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text40
  6474   004C38                     __ptext40:
  6475                           	callstack 0
  6476   004C38                     _I2C_2_Master_Start:
  6477                           	callstack 26
  6478   004C38                     
  6479                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6480   004C38  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6481   004C3C                     
  6482                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6483   004C3C  010E               	movlb	14	; () banked
  6484   004C3E  81DA               	bsf	218,0,b	;volatile
  6485   004C40                     
  6486                           ; BSR set to: 14
  6487   004C40  0012               	return		;funcret
  6488   004C42                     __end_of_I2C_2_Master_Start:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function _I2C_2_Master_Idle *****************
  6492 ;; Defined at:
  6493 ;;		line 22 in file "i2c.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;Total ram usage:        1 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_I2C_2_Master_Start
  6518 ;;		_I2C_2_Master_RepStart
  6519 ;;		_I2C_2_Master_Stop
  6520 ;;		_I2C_2_Master_Write
  6521 ;;		_I2C_2_Master_Read
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text41
  6526   004B2E                     __ptext41:
  6527                           	callstack 0
  6528   004B2E                     _I2C_2_Master_Idle:
  6529                           	callstack 26
  6530   004B2E                     l141:
  6531   004B2E  010E               	movlb	14	; () banked
  6532   004B30  B5D8               	btfsc	216,2,b	;volatile
  6533   004B32  EF9D  F025         	goto	u2561
  6534   004B36  EF9F  F025         	goto	u2560
  6535   004B3A                     u2561:
  6536   004B3A  EF97  F025         	goto	l141
  6537   004B3E                     u2560:
  6538   004B3E                     
  6539                           ; BSR set to: 14
  6540   004B3E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6541   004B42  0E1F               	movlw	31
  6542   004B44  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6543   004B46  A4D8               	btfss	status,2,c
  6544   004B48  EFA8  F025         	goto	u2571
  6545   004B4C  EFAA  F025         	goto	u2570
  6546   004B50                     u2571:
  6547   004B50  EF97  F025         	goto	l141
  6548   004B54                     u2570:
  6549   004B54                     
  6550                           ; BSR set to: 14
  6551   004B54  0012               	return		;funcret
  6552   004B56                     __end_of_I2C_2_Master_Idle:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _I2C_2_Master_Init *****************
  6556 ;; Defined at:
  6557 ;;		line 4 in file "i2c.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_color_click_init
  6582 ;;		_main
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text42
  6587   004B04                     __ptext42:
  6588                           	callstack 0
  6589   004B04                     _I2C_2_Master_Init:
  6590                           	callstack 28
  6591   004B04                     
  6592                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6593   004B04  010E               	movlb	14	; () banked
  6594   004B06  51D9               	movf	217,w,b	;volatile
  6595   004B08  0BF0               	andlw	-16
  6596   004B0A  0908               	iorlw	8
  6597   004B0C  6FD9               	movwf	217,b	;volatile
  6598   004B0E                     
  6599                           ; BSR set to: 14
  6600                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6601   004B0E  8BD9               	bsf	217,5,b	;volatile
  6602                           
  6603                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6604   004B10  0E9F               	movlw	159
  6605   004B12  6FD6               	movwf	214,b	;volatile
  6606   004B14                     
  6607                           ; BSR set to: 14
  6608                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6609   004B14  8A84               	bsf	132,5,c	;volatile
  6610   004B16                     
  6611                           ; BSR set to: 14
  6612                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6613   004B16  8C84               	bsf	132,6,c	;volatile
  6614   004B18                     
  6615                           ; BSR set to: 14
  6616                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6617   004B18  9BA7               	bcf	167,5,b	;volatile
  6618   004B1A                     
  6619                           ; BSR set to: 14
  6620                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6621   004B1A  9DA7               	bcf	167,6,b	;volatile
  6622                           
  6623                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6624   004B1C  0E1D               	movlw	29
  6625   004B1E  6F1D               	movwf	29,b	;volatile
  6626                           
  6627                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6628   004B20  0E1E               	movlw	30
  6629   004B22  6F1C               	movwf	28,b	;volatile
  6630                           
  6631                           ;i2c.c: 18:   RD5PPS=0x1C;
  6632   004B24  0E1C               	movlw	28
  6633   004B26  6F6F               	movwf	111,b	;volatile
  6634                           
  6635                           ;i2c.c: 19:   RD6PPS=0x1B;
  6636   004B28  0E1B               	movlw	27
  6637   004B2A  6F70               	movwf	112,b	;volatile
  6638   004B2C                     
  6639                           ; BSR set to: 14
  6640   004B2C  0012               	return		;funcret
  6641   004B2E                     __end_of_I2C_2_Master_Init:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function _YellowMove *****************
  6645 ;; Defined at:
  6646 ;;		line 278 in file "dc_motor.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6649 ;;		 -> motorL(9), 
  6650 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6651 ;;		 -> motorR(9), 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;Total ram usage:        4 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 5
  6670 ;; This function calls:
  6671 ;;		_reverseDetect
  6672 ;;		_reverseOneBlock
  6673 ;;		_turnRight45
  6674 ;; This function is called by:
  6675 ;;		_main
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text43
  6680   004666                     __ptext43:
  6681                           	callstack 0
  6682   004666                     _YellowMove:
  6683                           	callstack 25
  6684   004666                     
  6685                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6686   004666  0EF5               	movlw	low _motorL
  6687   004668  6E1A               	movwf	reverseDetect@mL^0,c
  6688   00466A  0E00               	movlw	high _motorL
  6689   00466C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6690   00466E  0EBE               	movlw	low _motorR
  6691   004670  6E1C               	movwf	reverseDetect@mR^0,c
  6692   004672  0E01               	movlw	high _motorR
  6693   004674  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6694   004676  ECDD  F021         	call	_reverseDetect	;wreg free
  6695                           
  6696                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  6697   00467A  0EF5               	movlw	low _motorL
  6698   00467C  6E1A               	movwf	reverseOneBlock@mL^0,c
  6699   00467E  0E00               	movlw	high _motorL
  6700   004680  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6701   004682  0EBE               	movlw	low _motorR
  6702   004684  6E1C               	movwf	reverseOneBlock@mR^0,c
  6703   004686  0E01               	movlw	high _motorR
  6704   004688  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6705   00468A  ECB0  F021         	call	_reverseOneBlock	;wreg free
  6706                           
  6707                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6708   00468E  0EF5               	movlw	low _motorL
  6709   004690  6E1A               	movwf	turnRight45@mL^0,c
  6710   004692  0E00               	movlw	high _motorL
  6711   004694  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6712   004696  0EBE               	movlw	low _motorR
  6713   004698  6E1C               	movwf	turnRight45@mR^0,c
  6714   00469A  0E01               	movlw	high _motorR
  6715   00469C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6716   00469E  EC37  F022         	call	_turnRight45	;wreg free
  6717                           
  6718                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6719   0046A2  0EF5               	movlw	low _motorL
  6720   0046A4  6E1A               	movwf	turnRight45@mL^0,c
  6721   0046A6  0E00               	movlw	high _motorL
  6722   0046A8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6723   0046AA  0EBE               	movlw	low _motorR
  6724   0046AC  6E1C               	movwf	turnRight45@mR^0,c
  6725   0046AE  0E01               	movlw	high _motorR
  6726   0046B0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6727   0046B2  EC37  F022         	call	_turnRight45	;wreg free
  6728   0046B6  0012               	return		;funcret
  6729   0046B8                     __end_of_YellowMove:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _turnRight45 *****************
  6733 ;; Defined at:
  6734 ;;		line 201 in file "dc_motor.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6737 ;;		 -> motorL(9), 
  6738 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6739 ;;		 -> motorR(9), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;Total ram usage:        6 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 4
  6758 ;; This function calls:
  6759 ;;		_stop
  6760 ;;		_turnRight
  6761 ;; This function is called by:
  6762 ;;		_RedMove
  6763 ;;		_BlueMove
  6764 ;;		_YellowMove
  6765 ;;		_OrangeMove
  6766 ;;		_ReversePink
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text44
  6771   00446E                     __ptext44:
  6772                           	callstack 0
  6773   00446E                     _turnRight45:
  6774                           	callstack 24
  6775   00446E                     
  6776                           ;dc_motor.c: 202:     turnRight(mL,mR);
  6777   00446E  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6778   004472  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6779   004476  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6780   00447A  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6781   00447E  EC72  F01E         	call	_turnRight	;wreg free
  6782   004482                     
  6783                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6784   004482  0E12               	movlw	18
  6785   004484  6E1F               	movwf	(??_turnRight45+1)^0,c
  6786   004486  0EDC               	movlw	220
  6787   004488  6E1E               	movwf	??_turnRight45^0,c
  6788   00448A  0E60               	movlw	96
  6789   00448C                     u4667:
  6790   00448C  2EE8               	decfsz	wreg,f,c
  6791   00448E  D7FE               	bra	u4667
  6792   004490  2E1E               	decfsz	??_turnRight45^0,f,c
  6793   004492  D7FC               	bra	u4667
  6794   004494  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6795   004496  D7FA               	bra	u4667
  6796   004498                     
  6797                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  6798   004498  0EF5               	movlw	low _motorL
  6799   00449A  6E14               	movwf	stop@mL^0,c
  6800   00449C  0E00               	movlw	high _motorL
  6801   00449E  6E15               	movwf	(stop@mL+1)^0,c
  6802   0044A0  0EBE               	movlw	low _motorR
  6803   0044A2  6E16               	movwf	stop@mR^0,c
  6804   0044A4  0E01               	movlw	high _motorR
  6805   0044A6  6E17               	movwf	(stop@mR+1)^0,c
  6806   0044A8  EC33  F020         	call	_stop	;wreg free
  6807                           
  6808                           ;dc_motor.c: 205:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6809   0044AC  0E52               	movlw	82
  6810   0044AE  6E1F               	movwf	(??_turnRight45+1)^0,c
  6811   0044B0  0E2B               	movlw	43
  6812   0044B2  6E1E               	movwf	??_turnRight45^0,c
  6813   0044B4  0E00               	movlw	0
  6814   0044B6                     u4677:
  6815   0044B6  2EE8               	decfsz	wreg,f,c
  6816   0044B8  D7FE               	bra	u4677
  6817   0044BA  2E1E               	decfsz	??_turnRight45^0,f,c
  6818   0044BC  D7FC               	bra	u4677
  6819   0044BE  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6820   0044C0  D7FA               	bra	u4677
  6821   0044C2  D000               	nop2	
  6822   0044C4  0012               	return		;funcret
  6823   0044C6                     __end_of_turnRight45:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _turnRight *****************
  6827 ;; Defined at:
  6828 ;;		line 128 in file "dc_motor.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6831 ;;		 -> motorL(9), 
  6832 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6833 ;;		 -> motorR(9), 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;Total ram usage:        6 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; Hardware stack levels required when called: 3
  6852 ;; This function calls:
  6853 ;;		_setMotorPWM
  6854 ;; This function is called by:
  6855 ;;		_turnRight45
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text45
  6860   003CE4                     __ptext45:
  6861                           	callstack 0
  6862   003CE4                     _turnRight:
  6863                           	callstack 24
  6864   003CE4                     
  6865                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6866   003CE4  EE20 F001          	lfsr	2,1
  6867   003CE8  5014               	movf	turnRight@mL^0,w,c
  6868   003CEA  26D9               	addwf	fsr2l,f,c
  6869   003CEC  5015               	movf	(turnRight@mL+1)^0,w,c
  6870   003CEE  22DA               	addwfc	fsr2h,f,c
  6871   003CF0  0E01               	movlw	1
  6872   003CF2  6EDF               	movwf	indf2,c
  6873                           
  6874                           ;dc_motor.c: 131:     mR->direction =0;
  6875   003CF4  EE20 F001          	lfsr	2,1
  6876   003CF8  5016               	movf	turnRight@mR^0,w,c
  6877   003CFA  26D9               	addwf	fsr2l,f,c
  6878   003CFC  5017               	movf	(turnRight@mR+1)^0,w,c
  6879   003CFE  22DA               	addwfc	fsr2h,f,c
  6880   003D00  0E00               	movlw	0
  6881   003D02  6EDF               	movwf	indf2,c
  6882                           
  6883                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  6884   003D04  EFA8  F01E         	goto	l3360
  6885   003D08                     l3352:
  6886                           
  6887                           ;dc_motor.c: 135:         mL->power+=10;
  6888   003D08  C014  FFD9         	movff	turnRight@mL,fsr2l
  6889   003D0C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6890   003D10  0E0A               	movlw	10
  6891   003D12  26DF               	addwf	indf2,f,c
  6892                           
  6893                           ;dc_motor.c: 136:         mR->power+=10;
  6894   003D14  C016  FFD9         	movff	turnRight@mR,fsr2l
  6895   003D18  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6896   003D1C  0E0A               	movlw	10
  6897   003D1E  26DF               	addwf	indf2,f,c
  6898   003D20                     
  6899                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6900   003D20  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6901   003D24  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6902   003D28  ECD1  F01A         	call	_setMotorPWM	;wreg free
  6903   003D2C                     
  6904                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6905   003D2C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6906   003D30  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6907   003D34  ECD1  F01A         	call	_setMotorPWM	;wreg free
  6908   003D38                     
  6909                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6910   003D38  0E02               	movlw	2
  6911   003D3A  6E19               	movwf	(??_turnRight+1)^0,c
  6912   003D3C  0EA0               	movlw	160
  6913   003D3E  6E18               	movwf	??_turnRight^0,c
  6914   003D40  0E92               	movlw	146
  6915   003D42                     u4687:
  6916   003D42  2EE8               	decfsz	wreg,f,c
  6917   003D44  D7FE               	bra	u4687
  6918   003D46  2E18               	decfsz	??_turnRight^0,f,c
  6919   003D48  D7FC               	bra	u4687
  6920   003D4A  2E19               	decfsz	(??_turnRight+1)^0,f,c
  6921   003D4C  D7FA               	bra	u4687
  6922   003D4E  D000               	nop2	
  6923   003D50                     l3360:
  6924   003D50  C014  FFD9         	movff	turnRight@mL,fsr2l
  6925   003D54  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6926   003D58  0E1E               	movlw	30
  6927   003D5A  60DF               	cpfslt	indf2,c
  6928   003D5C  EFB2  F01E         	goto	u2641
  6929   003D60  EFB4  F01E         	goto	u2640
  6930   003D64                     u2641:
  6931   003D64  EFC0  F01E         	goto	l510
  6932   003D68                     u2640:
  6933   003D68  C016  FFD9         	movff	turnRight@mR,fsr2l
  6934   003D6C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6935   003D70  0E1D               	movlw	29
  6936   003D72  64DF               	cpfsgt	indf2,c
  6937   003D74  EFBE  F01E         	goto	u2651
  6938   003D78  EFC0  F01E         	goto	u2650
  6939   003D7C                     u2651:
  6940   003D7C  EF84  F01E         	goto	l3352
  6941   003D80                     u2650:
  6942   003D80                     l510:
  6943   003D80  0012               	return		;funcret
  6944   003D82                     __end_of_turnRight:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _Timer0_init *****************
  6948 ;; Defined at:
  6949 ;;		line 8 in file "timers.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_main
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text46
  6978   004BC2                     __ptext46:
  6979                           	callstack 0
  6980   004BC2                     _Timer0_init:
  6981                           	callstack 29
  6982   004BC2                     
  6983                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  6984   004BC2  50D6               	movf	214,w,c	;volatile
  6985   004BC4  0B1F               	andlw	-225
  6986   004BC6  0940               	iorlw	64
  6987   004BC8  6ED6               	movwf	214,c	;volatile
  6988   004BCA                     
  6989                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  6990   004BCA  88D6               	bsf	214,4,c	;volatile
  6991                           
  6992                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  6993   004BCC  50D6               	movf	214,w,c	;volatile
  6994   004BCE  0BF0               	andlw	-16
  6995   004BD0  090E               	iorlw	14
  6996   004BD2  6ED6               	movwf	214,c	;volatile
  6997   004BD4                     
  6998                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  6999   004BD4  88D5               	bsf	213,4,c	;volatile
  7000                           
  7001                           ;timers.c: 16:     TMR0H=0;
  7002   004BD6  0E00               	movlw	0
  7003   004BD8  6ED4               	movwf	212,c	;volatile
  7004                           
  7005                           ;timers.c: 17:     TMR0L=0;
  7006   004BDA  0E00               	movlw	0
  7007   004BDC  6ED3               	movwf	211,c	;volatile
  7008   004BDE                     
  7009                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7010   004BDE  8ED5               	bsf	213,7,c	;volatile
  7011   004BE0  0012               	return		;funcret
  7012   004BE2                     __end_of_Timer0_init:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function _RetryMove *****************
  7016 ;; Defined at:
  7017 ;;		line 315 in file "dc_motor.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7020 ;;		 -> motorL(9), 
  7021 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7022 ;;		 -> motorR(9), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;Total ram usage:        6 bytes
  7039 ;; Hardware stack levels used: 1
  7040 ;; Hardware stack levels required when called: 4
  7041 ;; This function calls:
  7042 ;;		_fullSpeedAhead
  7043 ;;		_fullSpeedBack
  7044 ;;		_stop
  7045 ;; This function is called by:
  7046 ;;		_main
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text47
  7051   003FE4                     __ptext47:
  7052                           	callstack 0
  7053   003FE4                     _RetryMove:
  7054                           	callstack 26
  7055   003FE4                     
  7056                           ;dc_motor.c: 316:     fullSpeedBack(mL,mR);
  7057   003FE4  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7058   003FE8  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7059   003FEC  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7060   003FF0  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7061   003FF4  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7062   003FF8                     
  7063                           ;dc_motor.c: 317:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7064   003FF8  0E29               	movlw	41
  7065   003FFA  6E1F               	movwf	(??_RetryMove+1)^0,c
  7066   003FFC  0E96               	movlw	150
  7067   003FFE  6E1E               	movwf	??_RetryMove^0,c
  7068   004000  0E7F               	movlw	127
  7069   004002                     u4697:
  7070   004002  2EE8               	decfsz	wreg,f,c
  7071   004004  D7FE               	bra	u4697
  7072   004006  2E1E               	decfsz	??_RetryMove^0,f,c
  7073   004008  D7FC               	bra	u4697
  7074   00400A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7075   00400C  D7FA               	bra	u4697
  7076   00400E  F000               	nop	
  7077   004010                     
  7078                           ;dc_motor.c: 318:     stop(&motorL, &motorR);
  7079   004010  0EF5               	movlw	low _motorL
  7080   004012  6E14               	movwf	stop@mL^0,c
  7081   004014  0E00               	movlw	high _motorL
  7082   004016  6E15               	movwf	(stop@mL+1)^0,c
  7083   004018  0EBE               	movlw	low _motorR
  7084   00401A  6E16               	movwf	stop@mR^0,c
  7085   00401C  0E01               	movlw	high _motorR
  7086   00401E  6E17               	movwf	(stop@mR+1)^0,c
  7087   004020  EC33  F020         	call	_stop	;wreg free
  7088   004024                     
  7089                           ;dc_motor.c: 319:     fullSpeedAhead(mL,mR);
  7090   004024  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7091   004028  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7092   00402C  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7093   004030  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7094   004034  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  7095   004038                     
  7096                           ;dc_motor.c: 320:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7097   004038  0E29               	movlw	41
  7098   00403A  6E1F               	movwf	(??_RetryMove+1)^0,c
  7099   00403C  0E96               	movlw	150
  7100   00403E  6E1E               	movwf	??_RetryMove^0,c
  7101   004040  0E7F               	movlw	127
  7102   004042                     u4707:
  7103   004042  2EE8               	decfsz	wreg,f,c
  7104   004044  D7FE               	bra	u4707
  7105   004046  2E1E               	decfsz	??_RetryMove^0,f,c
  7106   004048  D7FC               	bra	u4707
  7107   00404A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7108   00404C  D7FA               	bra	u4707
  7109   00404E  F000               	nop	
  7110                           
  7111                           ;dc_motor.c: 321:     stop(&motorL, &motorR);
  7112   004050  0EF5               	movlw	low _motorL
  7113   004052  6E14               	movwf	stop@mL^0,c
  7114   004054  0E00               	movlw	high _motorL
  7115   004056  6E15               	movwf	(stop@mL+1)^0,c
  7116   004058  0EBE               	movlw	low _motorR
  7117   00405A  6E16               	movwf	stop@mR^0,c
  7118   00405C  0E01               	movlw	high _motorR
  7119   00405E  6E17               	movwf	(stop@mR+1)^0,c
  7120   004060  EC33  F020         	call	_stop	;wreg free
  7121   004064  0012               	return		;funcret
  7122   004066                     __end_of_RetryMove:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _PinkMove *****************
  7126 ;; Defined at:
  7127 ;;		line 288 in file "dc_motor.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7130 ;;		 -> motorL(9), 
  7131 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7132 ;;		 -> motorR(9), 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      void 
  7137 ;; Registers used:
  7138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;Total ram usage:        4 bytes
  7149 ;; Hardware stack levels used: 1
  7150 ;; Hardware stack levels required when called: 5
  7151 ;; This function calls:
  7152 ;;		_reverseDetect
  7153 ;;		_reverseOneBlock
  7154 ;;		_turnLeft45
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text48
  7161   0046B8                     __ptext48:
  7162                           	callstack 0
  7163   0046B8                     _PinkMove:
  7164                           	callstack 25
  7165   0046B8                     
  7166                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7167   0046B8  0EF5               	movlw	low _motorL
  7168   0046BA  6E1A               	movwf	reverseDetect@mL^0,c
  7169   0046BC  0E00               	movlw	high _motorL
  7170   0046BE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7171   0046C0  0EBE               	movlw	low _motorR
  7172   0046C2  6E1C               	movwf	reverseDetect@mR^0,c
  7173   0046C4  0E01               	movlw	high _motorR
  7174   0046C6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7175   0046C8  ECDD  F021         	call	_reverseDetect	;wreg free
  7176                           
  7177                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7178   0046CC  0EF5               	movlw	low _motorL
  7179   0046CE  6E1A               	movwf	reverseOneBlock@mL^0,c
  7180   0046D0  0E00               	movlw	high _motorL
  7181   0046D2  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7182   0046D4  0EBE               	movlw	low _motorR
  7183   0046D6  6E1C               	movwf	reverseOneBlock@mR^0,c
  7184   0046D8  0E01               	movlw	high _motorR
  7185   0046DA  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7186   0046DC  ECB0  F021         	call	_reverseOneBlock	;wreg free
  7187                           
  7188                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
  7189   0046E0  0EF5               	movlw	low _motorL
  7190   0046E2  6E1A               	movwf	turnLeft45@mL^0,c
  7191   0046E4  0E00               	movlw	high _motorL
  7192   0046E6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7193   0046E8  0EBE               	movlw	low _motorR
  7194   0046EA  6E1C               	movwf	turnLeft45@mR^0,c
  7195   0046EC  0E01               	movlw	high _motorR
  7196   0046EE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7197   0046F0  EC63  F022         	call	_turnLeft45	;wreg free
  7198                           
  7199                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
  7200   0046F4  0EF5               	movlw	low _motorL
  7201   0046F6  6E1A               	movwf	turnLeft45@mL^0,c
  7202   0046F8  0E00               	movlw	high _motorL
  7203   0046FA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7204   0046FC  0EBE               	movlw	low _motorR
  7205   0046FE  6E1C               	movwf	turnLeft45@mR^0,c
  7206   004700  0E01               	movlw	high _motorR
  7207   004702  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7208   004704  EC63  F022         	call	_turnLeft45	;wreg free
  7209   004708  0012               	return		;funcret
  7210   00470A                     __end_of_PinkMove:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _turnLeft45 *****************
  7214 ;; Defined at:
  7215 ;;		line 208 in file "dc_motor.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7218 ;;		 -> motorL(9), 
  7219 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7220 ;;		 -> motorR(9), 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;Total ram usage:        6 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; Hardware stack levels required when called: 4
  7239 ;; This function calls:
  7240 ;;		_stop
  7241 ;;		_turnLeft
  7242 ;; This function is called by:
  7243 ;;		_GreenMove
  7244 ;;		_PinkMove
  7245 ;;		_LightBlueMove
  7246 ;;		_ReverseYellow
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text49
  7251   0044C6                     __ptext49:
  7252                           	callstack 0
  7253   0044C6                     _turnLeft45:
  7254                           	callstack 24
  7255   0044C6                     
  7256                           ;dc_motor.c: 209:     turnLeft(mL,mR);
  7257   0044C6  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7258   0044CA  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7259   0044CE  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7260   0044D2  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7261   0044D6  ECC1  F01E         	call	_turnLeft	;wreg free
  7262   0044DA                     
  7263                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7264   0044DA  0E12               	movlw	18
  7265   0044DC  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7266   0044DE  0EDC               	movlw	220
  7267   0044E0  6E1E               	movwf	??_turnLeft45^0,c
  7268   0044E2  0E60               	movlw	96
  7269   0044E4                     u4717:
  7270   0044E4  2EE8               	decfsz	wreg,f,c
  7271   0044E6  D7FE               	bra	u4717
  7272   0044E8  2E1E               	decfsz	??_turnLeft45^0,f,c
  7273   0044EA  D7FC               	bra	u4717
  7274   0044EC  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7275   0044EE  D7FA               	bra	u4717
  7276   0044F0                     
  7277                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7278   0044F0  0EF5               	movlw	low _motorL
  7279   0044F2  6E14               	movwf	stop@mL^0,c
  7280   0044F4  0E00               	movlw	high _motorL
  7281   0044F6  6E15               	movwf	(stop@mL+1)^0,c
  7282   0044F8  0EBE               	movlw	low _motorR
  7283   0044FA  6E16               	movwf	stop@mR^0,c
  7284   0044FC  0E01               	movlw	high _motorR
  7285   0044FE  6E17               	movwf	(stop@mR+1)^0,c
  7286   004500  EC33  F020         	call	_stop	;wreg free
  7287                           
  7288                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7289   004504  0E52               	movlw	82
  7290   004506  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7291   004508  0E2B               	movlw	43
  7292   00450A  6E1E               	movwf	??_turnLeft45^0,c
  7293   00450C  0E00               	movlw	0
  7294   00450E                     u4727:
  7295   00450E  2EE8               	decfsz	wreg,f,c
  7296   004510  D7FE               	bra	u4727
  7297   004512  2E1E               	decfsz	??_turnLeft45^0,f,c
  7298   004514  D7FC               	bra	u4727
  7299   004516  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7300   004518  D7FA               	bra	u4727
  7301   00451A  D000               	nop2	
  7302   00451C  0012               	return		;funcret
  7303   00451E                     __end_of_turnLeft45:
  7304                           	callstack 0
  7305                           
  7306 ;; *************** function _turnLeft *****************
  7307 ;; Defined at:
  7308 ;;		line 110 in file "dc_motor.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7311 ;;		 -> motorL(9), 
  7312 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7313 ;;		 -> motorR(9), 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;Total ram usage:        6 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 3
  7332 ;; This function calls:
  7333 ;;		_setMotorPWM
  7334 ;; This function is called by:
  7335 ;;		_turnLeft45
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text50
  7340   003D82                     __ptext50:
  7341                           	callstack 0
  7342   003D82                     _turnLeft:
  7343                           	callstack 24
  7344   003D82                     
  7345                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7346   003D82  EE20 F001          	lfsr	2,1
  7347   003D86  5014               	movf	turnLeft@mL^0,w,c
  7348   003D88  26D9               	addwf	fsr2l,f,c
  7349   003D8A  5015               	movf	(turnLeft@mL+1)^0,w,c
  7350   003D8C  22DA               	addwfc	fsr2h,f,c
  7351   003D8E  0E00               	movlw	0
  7352   003D90  6EDF               	movwf	indf2,c
  7353                           
  7354                           ;dc_motor.c: 113:     mR->direction =1;
  7355   003D92  EE20 F001          	lfsr	2,1
  7356   003D96  5016               	movf	turnLeft@mR^0,w,c
  7357   003D98  26D9               	addwf	fsr2l,f,c
  7358   003D9A  5017               	movf	(turnLeft@mR+1)^0,w,c
  7359   003D9C  22DA               	addwfc	fsr2h,f,c
  7360   003D9E  0E01               	movlw	1
  7361   003DA0  6EDF               	movwf	indf2,c
  7362                           
  7363                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7364   003DA2  EFF7  F01E         	goto	l3346
  7365   003DA6                     l3338:
  7366                           
  7367                           ;dc_motor.c: 117:         mL->power+=10;
  7368   003DA6  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7369   003DAA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7370   003DAE  0E0A               	movlw	10
  7371   003DB0  26DF               	addwf	indf2,f,c
  7372                           
  7373                           ;dc_motor.c: 118:         mR->power+=10;
  7374   003DB2  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7375   003DB6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7376   003DBA  0E0A               	movlw	10
  7377   003DBC  26DF               	addwf	indf2,f,c
  7378   003DBE                     
  7379                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7380   003DBE  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7381   003DC2  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7382   003DC6  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7383   003DCA                     
  7384                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7385   003DCA  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7386   003DCE  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7387   003DD2  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7388   003DD6                     
  7389                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7390   003DD6  0E02               	movlw	2
  7391   003DD8  6E19               	movwf	(??_turnLeft+1)^0,c
  7392   003DDA  0EA0               	movlw	160
  7393   003DDC  6E18               	movwf	??_turnLeft^0,c
  7394   003DDE  0E92               	movlw	146
  7395   003DE0                     u4737:
  7396   003DE0  2EE8               	decfsz	wreg,f,c
  7397   003DE2  D7FE               	bra	u4737
  7398   003DE4  2E18               	decfsz	??_turnLeft^0,f,c
  7399   003DE6  D7FC               	bra	u4737
  7400   003DE8  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7401   003DEA  D7FA               	bra	u4737
  7402   003DEC  D000               	nop2	
  7403   003DEE                     l3346:
  7404   003DEE  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7405   003DF2  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7406   003DF6  0E1E               	movlw	30
  7407   003DF8  60DF               	cpfslt	indf2,c
  7408   003DFA  EF01  F01F         	goto	u2621
  7409   003DFE  EF03  F01F         	goto	u2620
  7410   003E02                     u2621:
  7411   003E02  EF0F  F01F         	goto	l502
  7412   003E06                     u2620:
  7413   003E06  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7414   003E0A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7415   003E0E  0E1D               	movlw	29
  7416   003E10  64DF               	cpfsgt	indf2,c
  7417   003E12  EF0D  F01F         	goto	u2631
  7418   003E16  EF0F  F01F         	goto	u2630
  7419   003E1A                     u2631:
  7420   003E1A  EFD3  F01E         	goto	l3338
  7421   003E1E                     u2630:
  7422   003E1E                     l502:
  7423   003E1E  0012               	return		;funcret
  7424   003E20                     __end_of_turnLeft:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _reverseOneBlock *****************
  7428 ;; Defined at:
  7429 ;;		line 222 in file "dc_motor.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7432 ;;		 -> motorL(9), 
  7433 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7434 ;;		 -> motorR(9), 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        6 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 4
  7453 ;; This function calls:
  7454 ;;		_fullSpeedBack
  7455 ;;		_stop
  7456 ;; This function is called by:
  7457 ;;		_YellowMove
  7458 ;;		_PinkMove
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text51
  7463   004360                     __ptext51:
  7464                           	callstack 0
  7465   004360                     _reverseOneBlock:
  7466                           	callstack 25
  7467   004360                     
  7468                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
  7469   004360  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7470   004364  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7471   004368  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7472   00436C  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7473   004370  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7474   004374                     
  7475                           ;dc_motor.c: 224:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7476   004374  0E52               	movlw	82
  7477   004376  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7478   004378  0E2B               	movlw	43
  7479   00437A  6E1E               	movwf	??_reverseOneBlock^0,c
  7480   00437C  0E00               	movlw	0
  7481   00437E                     u4747:
  7482   00437E  2EE8               	decfsz	wreg,f,c
  7483   004380  D7FE               	bra	u4747
  7484   004382  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7485   004384  D7FC               	bra	u4747
  7486   004386  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7487   004388  D7FA               	bra	u4747
  7488   00438A  D000               	nop2	
  7489   00438C                     
  7490                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
  7491   00438C  0EF5               	movlw	low _motorL
  7492   00438E  6E14               	movwf	stop@mL^0,c
  7493   004390  0E00               	movlw	high _motorL
  7494   004392  6E15               	movwf	(stop@mL+1)^0,c
  7495   004394  0EBE               	movlw	low _motorR
  7496   004396  6E16               	movwf	stop@mR^0,c
  7497   004398  0E01               	movlw	high _motorR
  7498   00439A  6E17               	movwf	(stop@mR+1)^0,c
  7499   00439C  EC33  F020         	call	_stop	;wreg free
  7500                           
  7501                           ;dc_motor.c: 226:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7502   0043A0  0E52               	movlw	82
  7503   0043A2  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7504   0043A4  0E2B               	movlw	43
  7505   0043A6  6E1E               	movwf	??_reverseOneBlock^0,c
  7506   0043A8  0E00               	movlw	0
  7507   0043AA                     u4757:
  7508   0043AA  2EE8               	decfsz	wreg,f,c
  7509   0043AC  D7FE               	bra	u4757
  7510   0043AE  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7511   0043B0  D7FC               	bra	u4757
  7512   0043B2  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7513   0043B4  D7FA               	bra	u4757
  7514   0043B6  D000               	nop2	
  7515   0043B8  0012               	return		;funcret
  7516   0043BA                     __end_of_reverseOneBlock:
  7517                           	callstack 0
  7518                           
  7519 ;; *************** function _reverseDetect *****************
  7520 ;; Defined at:
  7521 ;;		line 215 in file "dc_motor.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7524 ;;		 -> motorL(9), 
  7525 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7526 ;;		 -> motorR(9), 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      void 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7542 ;;Total ram usage:        6 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; Hardware stack levels required when called: 4
  7545 ;; This function calls:
  7546 ;;		_fullSpeedBack
  7547 ;;		_stop
  7548 ;; This function is called by:
  7549 ;;		_RedMove
  7550 ;;		_GreenMove
  7551 ;;		_BlueMove
  7552 ;;		_YellowMove
  7553 ;;		_PinkMove
  7554 ;;		_OrangeMove
  7555 ;;		_LightBlueMove
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text52
  7560   0043BA                     __ptext52:
  7561                           	callstack 0
  7562   0043BA                     _reverseDetect:
  7563                           	callstack 24
  7564   0043BA                     
  7565                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
  7566   0043BA  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7567   0043BE  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7568   0043C2  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7569   0043C6  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7570   0043CA  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7571   0043CE                     
  7572                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7573   0043CE  0E11               	movlw	17
  7574   0043D0  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7575   0043D2  0E3C               	movlw	60
  7576   0043D4  6E1E               	movwf	??_reverseDetect^0,c
  7577   0043D6  0ECB               	movlw	203
  7578   0043D8                     u4767:
  7579   0043D8  2EE8               	decfsz	wreg,f,c
  7580   0043DA  D7FE               	bra	u4767
  7581   0043DC  2E1E               	decfsz	??_reverseDetect^0,f,c
  7582   0043DE  D7FC               	bra	u4767
  7583   0043E0  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7584   0043E2  D7FA               	bra	u4767
  7585   0043E4  F000               	nop	
  7586   0043E6                     
  7587                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  7588   0043E6  0EF5               	movlw	low _motorL
  7589   0043E8  6E14               	movwf	stop@mL^0,c
  7590   0043EA  0E00               	movlw	high _motorL
  7591   0043EC  6E15               	movwf	(stop@mL+1)^0,c
  7592   0043EE  0EBE               	movlw	low _motorR
  7593   0043F0  6E16               	movwf	stop@mR^0,c
  7594   0043F2  0E01               	movlw	high _motorR
  7595   0043F4  6E17               	movwf	(stop@mR+1)^0,c
  7596   0043F6  EC33  F020         	call	_stop	;wreg free
  7597                           
  7598                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7599   0043FA  0E52               	movlw	82
  7600   0043FC  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7601   0043FE  0E2B               	movlw	43
  7602   004400  6E1E               	movwf	??_reverseDetect^0,c
  7603   004402  0E00               	movlw	0
  7604   004404                     u4777:
  7605   004404  2EE8               	decfsz	wreg,f,c
  7606   004406  D7FE               	bra	u4777
  7607   004408  2E1E               	decfsz	??_reverseDetect^0,f,c
  7608   00440A  D7FC               	bra	u4777
  7609   00440C  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7610   00440E  D7FA               	bra	u4777
  7611   004410  D000               	nop2	
  7612   004412  0012               	return		;funcret
  7613   004414                     __end_of_reverseDetect:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function _fullSpeedBack *****************
  7617 ;; Defined at:
  7618 ;;		line 184 in file "dc_motor.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7621 ;;		 -> motorL(9), 
  7622 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7623 ;;		 -> motorR(9), 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;Total ram usage:        6 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 3
  7642 ;; This function calls:
  7643 ;;		_setMotorPWM
  7644 ;; This function is called by:
  7645 ;;		_reverseDetect
  7646 ;;		_reverseOneBlock
  7647 ;;		_RetryMove
  7648 ;;		_Backhalfblock
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text53
  7653   003E20                     __ptext53:
  7654                           	callstack 0
  7655   003E20                     _fullSpeedBack:
  7656                           	callstack 24
  7657   003E20                     
  7658                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
  7659   003E20  EE20 F001          	lfsr	2,1
  7660   003E24  5014               	movf	fullSpeedBack@mL^0,w,c
  7661   003E26  26D9               	addwf	fsr2l,f,c
  7662   003E28  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7663   003E2A  22DA               	addwfc	fsr2h,f,c
  7664   003E2C  0E00               	movlw	0
  7665   003E2E  6EDF               	movwf	indf2,c
  7666                           
  7667                           ;dc_motor.c: 188:     mR->direction =0;
  7668   003E30  EE20 F001          	lfsr	2,1
  7669   003E34  5016               	movf	fullSpeedBack@mR^0,w,c
  7670   003E36  26D9               	addwf	fsr2l,f,c
  7671   003E38  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7672   003E3A  22DA               	addwfc	fsr2h,f,c
  7673   003E3C  0E00               	movlw	0
  7674   003E3E  6EDF               	movwf	indf2,c
  7675                           
  7676                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
  7677   003E40  EF46  F01F         	goto	l3374
  7678   003E44                     l3366:
  7679                           
  7680                           ;dc_motor.c: 191:         mL->power+=10;
  7681   003E44  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7682   003E48  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7683   003E4C  0E0A               	movlw	10
  7684   003E4E  26DF               	addwf	indf2,f,c
  7685                           
  7686                           ;dc_motor.c: 192:         mR->power+=10;
  7687   003E50  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7688   003E54  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7689   003E58  0E0A               	movlw	10
  7690   003E5A  26DF               	addwf	indf2,f,c
  7691   003E5C                     
  7692                           ;dc_motor.c: 194:         setMotorPWM(mL);
  7693   003E5C  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7694   003E60  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7695   003E64  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7696   003E68                     
  7697                           ;dc_motor.c: 195:         setMotorPWM(mR);
  7698   003E68  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7699   003E6C  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7700   003E70  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7701   003E74                     
  7702                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7703   003E74  0E02               	movlw	2
  7704   003E76  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7705   003E78  0EA0               	movlw	160
  7706   003E7A  6E18               	movwf	??_fullSpeedBack^0,c
  7707   003E7C  0E92               	movlw	146
  7708   003E7E                     u4787:
  7709   003E7E  2EE8               	decfsz	wreg,f,c
  7710   003E80  D7FE               	bra	u4787
  7711   003E82  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7712   003E84  D7FC               	bra	u4787
  7713   003E86  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7714   003E88  D7FA               	bra	u4787
  7715   003E8A  D000               	nop2	
  7716   003E8C                     l3374:
  7717   003E8C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7718   003E90  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7719   003E94  0E1E               	movlw	30
  7720   003E96  60DF               	cpfslt	indf2,c
  7721   003E98  EF50  F01F         	goto	u2661
  7722   003E9C  EF52  F01F         	goto	u2660
  7723   003EA0                     u2661:
  7724   003EA0  EF5E  F01F         	goto	l534
  7725   003EA4                     u2660:
  7726   003EA4  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7727   003EA8  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7728   003EAC  0E1D               	movlw	29
  7729   003EAE  64DF               	cpfsgt	indf2,c
  7730   003EB0  EF5C  F01F         	goto	u2671
  7731   003EB4  EF5E  F01F         	goto	u2670
  7732   003EB8                     u2671:
  7733   003EB8  EF22  F01F         	goto	l3366
  7734   003EBC                     u2670:
  7735   003EBC                     l534:
  7736   003EBC  0012               	return		;funcret
  7737   003EBE                     __end_of_fullSpeedBack:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _Interrupts_init *****************
  7741 ;; Defined at:
  7742 ;;		line 12 in file "interrupts.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		None
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        0 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text54
  7771   004C4A                     __ptext54:
  7772                           	callstack 0
  7773   004C4A                     _Interrupts_init:
  7774                           	callstack 29
  7775   004C4A  0012               	return		;funcret
  7776   004C4C                     __end_of_Interrupts_init:
  7777                           	callstack 0
  7778                           
  7779 ;; *************** function _Forwardhalfblock *****************
  7780 ;; Defined at:
  7781 ;;		line 235 in file "dc_motor.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7784 ;;		 -> motorL(9), 
  7785 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7786 ;;		 -> motorR(9), 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;Total ram usage:        6 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 4
  7805 ;; This function calls:
  7806 ;;		_fullSpeedAhead
  7807 ;;		_stop
  7808 ;; This function is called by:
  7809 ;;		_main
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text55
  7814   004414                     __ptext55:
  7815                           	callstack 0
  7816   004414                     _Forwardhalfblock:
  7817                           	callstack 26
  7818   004414                     
  7819                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
  7820   004414  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  7821   004418  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  7822   00441C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  7823   004420  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  7824   004424  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  7825   004428                     
  7826                           ;dc_motor.c: 237:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7827   004428  0E29               	movlw	41
  7828   00442A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7829   00442C  0E96               	movlw	150
  7830   00442E  6E1E               	movwf	??_Forwardhalfblock^0,c
  7831   004430  0E7F               	movlw	127
  7832   004432                     u4797:
  7833   004432  2EE8               	decfsz	wreg,f,c
  7834   004434  D7FE               	bra	u4797
  7835   004436  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7836   004438  D7FC               	bra	u4797
  7837   00443A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7838   00443C  D7FA               	bra	u4797
  7839   00443E  F000               	nop	
  7840   004440                     
  7841                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
  7842   004440  0EF5               	movlw	low _motorL
  7843   004442  6E14               	movwf	stop@mL^0,c
  7844   004444  0E00               	movlw	high _motorL
  7845   004446  6E15               	movwf	(stop@mL+1)^0,c
  7846   004448  0EBE               	movlw	low _motorR
  7847   00444A  6E16               	movwf	stop@mR^0,c
  7848   00444C  0E01               	movlw	high _motorR
  7849   00444E  6E17               	movwf	(stop@mR+1)^0,c
  7850   004450  EC33  F020         	call	_stop	;wreg free
  7851                           
  7852                           ;dc_motor.c: 239:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7853   004454  0E52               	movlw	82
  7854   004456  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7855   004458  0E2B               	movlw	43
  7856   00445A  6E1E               	movwf	??_Forwardhalfblock^0,c
  7857   00445C  0E00               	movlw	0
  7858   00445E                     u4807:
  7859   00445E  2EE8               	decfsz	wreg,f,c
  7860   004460  D7FE               	bra	u4807
  7861   004462  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7862   004464  D7FC               	bra	u4807
  7863   004466  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7864   004468  D7FA               	bra	u4807
  7865   00446A  D000               	nop2	
  7866   00446C  0012               	return		;funcret
  7867   00446E                     __end_of_Forwardhalfblock:
  7868                           	callstack 0
  7869                           
  7870 ;; *************** function _stop *****************
  7871 ;; Defined at:
  7872 ;;		line 92 in file "dc_motor.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7875 ;;		 -> motorL(9), 
  7876 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7877 ;;		 -> motorR(9), 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;Total ram usage:        6 bytes
  7894 ;; Hardware stack levels used: 1
  7895 ;; Hardware stack levels required when called: 3
  7896 ;; This function calls:
  7897 ;;		_setMotorPWM
  7898 ;; This function is called by:
  7899 ;;		_main
  7900 ;;		_turnRight45
  7901 ;;		_turnLeft45
  7902 ;;		_reverseDetect
  7903 ;;		_reverseOneBlock
  7904 ;;		_ForwardOneBlock
  7905 ;;		_Forwardhalfblock
  7906 ;;		_RetryMove
  7907 ;;		_Backhalfblock
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text56
  7912   004066                     __ptext56:
  7913                           	callstack 0
  7914   004066                     _stop:
  7915                           	callstack 27
  7916   004066                     
  7917                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  7918   004066  EF59  F020         	goto	l3332
  7919   00406A                     l3324:
  7920                           
  7921                           ;dc_motor.c: 96:         mL->power-=10;
  7922   00406A  C014  FFD9         	movff	stop@mL,fsr2l
  7923   00406E  C015  FFDA         	movff	stop@mL+1,fsr2h
  7924   004072  0E0A               	movlw	10
  7925   004074  5EDF               	subwf	indf2,f,c
  7926                           
  7927                           ;dc_motor.c: 97:         mR->power-=10;
  7928   004076  C016  FFD9         	movff	stop@mR,fsr2l
  7929   00407A  C017  FFDA         	movff	stop@mR+1,fsr2h
  7930   00407E  0E0A               	movlw	10
  7931   004080  5EDF               	subwf	indf2,f,c
  7932   004082                     
  7933                           ;dc_motor.c: 102:         setMotorPWM(mL);
  7934   004082  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7935   004086  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7936   00408A  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7937   00408E                     
  7938                           ;dc_motor.c: 103:         setMotorPWM(mR);
  7939   00408E  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7940   004092  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7941   004096  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7942   00409A                     
  7943                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7944   00409A  0E02               	movlw	2
  7945   00409C  6E19               	movwf	(??_stop+1)^0,c
  7946   00409E  0EA0               	movlw	160
  7947   0040A0  6E18               	movwf	??_stop^0,c
  7948   0040A2  0E92               	movlw	146
  7949   0040A4                     u4817:
  7950   0040A4  2EE8               	decfsz	wreg,f,c
  7951   0040A6  D7FE               	bra	u4817
  7952   0040A8  2E18               	decfsz	??_stop^0,f,c
  7953   0040AA  D7FC               	bra	u4817
  7954   0040AC  2E19               	decfsz	(??_stop+1)^0,f,c
  7955   0040AE  D7FA               	bra	u4817
  7956   0040B0  D000               	nop2	
  7957   0040B2                     l3332:
  7958                           
  7959                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  7960   0040B2  C014  FFD9         	movff	stop@mL,fsr2l
  7961   0040B6  C015  FFDA         	movff	stop@mL+1,fsr2h
  7962   0040BA  50DF               	movf	indf2,w,c
  7963   0040BC  A4D8               	btfss	status,2,c
  7964   0040BE  EF63  F020         	goto	u2601
  7965   0040C2  EF65  F020         	goto	u2600
  7966   0040C6                     u2601:
  7967   0040C6  EF35  F020         	goto	l3324
  7968   0040CA                     u2600:
  7969   0040CA  C016  FFD9         	movff	stop@mR,fsr2l
  7970   0040CE  C017  FFDA         	movff	stop@mR+1,fsr2h
  7971   0040D2  50DF               	movf	indf2,w,c
  7972   0040D4  A4D8               	btfss	status,2,c
  7973   0040D6  EF6F  F020         	goto	u2611
  7974   0040DA  EF71  F020         	goto	u2610
  7975   0040DE                     u2611:
  7976   0040DE  EF35  F020         	goto	l3324
  7977   0040E2                     u2610:
  7978   0040E2  0012               	return		;funcret
  7979   0040E4                     __end_of_stop:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function _fullSpeedAhead *****************
  7983 ;; Defined at:
  7984 ;;		line 146 in file "dc_motor.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7987 ;;		 -> motorL(9), 
  7988 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7989 ;;		 -> motorR(9), 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;Total ram usage:        6 bytes
  8006 ;; Hardware stack levels used: 1
  8007 ;; Hardware stack levels required when called: 3
  8008 ;; This function calls:
  8009 ;;		_setMotorPWM
  8010 ;; This function is called by:
  8011 ;;		_main
  8012 ;;		_ForwardOneBlock
  8013 ;;		_Forwardhalfblock
  8014 ;;		_RetryMove
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text57
  8019   003EBE                     __ptext57:
  8020                           	callstack 0
  8021   003EBE                     _fullSpeedAhead:
  8022                           	callstack 24
  8023   003EBE                     
  8024                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  8025   003EBE  EE20 F001          	lfsr	2,1
  8026   003EC2  5014               	movf	fullSpeedAhead@mL^0,w,c
  8027   003EC4  26D9               	addwf	fsr2l,f,c
  8028   003EC6  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8029   003EC8  22DA               	addwfc	fsr2h,f,c
  8030   003ECA  0E01               	movlw	1
  8031   003ECC  6EDF               	movwf	indf2,c
  8032                           
  8033                           ;dc_motor.c: 150:     mR->direction =1;
  8034   003ECE  EE20 F001          	lfsr	2,1
  8035   003ED2  5016               	movf	fullSpeedAhead@mR^0,w,c
  8036   003ED4  26D9               	addwf	fsr2l,f,c
  8037   003ED6  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8038   003ED8  22DA               	addwfc	fsr2h,f,c
  8039   003EDA  0E01               	movlw	1
  8040   003EDC  6EDF               	movwf	indf2,c
  8041                           
  8042                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  8043   003EDE  EF95  F01F         	goto	l3318
  8044   003EE2                     l3310:
  8045                           
  8046                           ;dc_motor.c: 153:         mL->power+=10;
  8047   003EE2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8048   003EE6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8049   003EEA  0E0A               	movlw	10
  8050   003EEC  26DF               	addwf	indf2,f,c
  8051                           
  8052                           ;dc_motor.c: 154:         mR->power+=10;
  8053   003EEE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8054   003EF2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8055   003EF6  0E0A               	movlw	10
  8056   003EF8  26DF               	addwf	indf2,f,c
  8057   003EFA                     
  8058                           ;dc_motor.c: 156:         setMotorPWM(mL);
  8059   003EFA  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8060   003EFE  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8061   003F02  ECD1  F01A         	call	_setMotorPWM	;wreg free
  8062   003F06                     
  8063                           ;dc_motor.c: 157:         setMotorPWM(mR);
  8064   003F06  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8065   003F0A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8066   003F0E  ECD1  F01A         	call	_setMotorPWM	;wreg free
  8067   003F12                     
  8068                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8069   003F12  0E02               	movlw	2
  8070   003F14  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8071   003F16  0EA0               	movlw	160
  8072   003F18  6E18               	movwf	??_fullSpeedAhead^0,c
  8073   003F1A  0E92               	movlw	146
  8074   003F1C                     u4827:
  8075   003F1C  2EE8               	decfsz	wreg,f,c
  8076   003F1E  D7FE               	bra	u4827
  8077   003F20  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8078   003F22  D7FC               	bra	u4827
  8079   003F24  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8080   003F26  D7FA               	bra	u4827
  8081   003F28  D000               	nop2	
  8082   003F2A                     l3318:
  8083   003F2A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8084   003F2E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8085   003F32  0E1E               	movlw	30
  8086   003F34  60DF               	cpfslt	indf2,c
  8087   003F36  EF9F  F01F         	goto	u2581
  8088   003F3A  EFA1  F01F         	goto	u2580
  8089   003F3E                     u2581:
  8090   003F3E  EFAD  F01F         	goto	l518
  8091   003F42                     u2580:
  8092   003F42  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8093   003F46  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8094   003F4A  0E1D               	movlw	29
  8095   003F4C  64DF               	cpfsgt	indf2,c
  8096   003F4E  EFAB  F01F         	goto	u2591
  8097   003F52  EFAD  F01F         	goto	u2590
  8098   003F56                     u2591:
  8099   003F56  EF71  F01F         	goto	l3310
  8100   003F5A                     u2590:
  8101   003F5A                     l518:
  8102   003F5A  0012               	return		;funcret
  8103   003F5C                     __end_of_fullSpeedAhead:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _setMotorPWM *****************
  8107 ;; Defined at:
  8108 ;;		line 67 in file "dc_motor.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8111 ;;		 -> motorR(9), motorL(9), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  negDuty         1   18[COMRAM] unsigned char 
  8114 ;;  posDuty         1   17[COMRAM] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;Total ram usage:        6 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 2
  8131 ;; This function calls:
  8132 ;;		___lwdiv
  8133 ;;		___wmul
  8134 ;; This function is called by:
  8135 ;;		_stop
  8136 ;;		_turnLeft
  8137 ;;		_turnRight
  8138 ;;		_fullSpeedAhead
  8139 ;;		_timed_forward
  8140 ;;		_fullSpeedBack
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text58
  8145   0035A2                     __ptext58:
  8146                           	callstack 0
  8147   0035A2                     _setMotorPWM:
  8148                           	callstack 27
  8149   0035A2                     
  8150                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  8151   0035A2  EE20 F002          	lfsr	2,2
  8152   0035A6  500E               	movf	setMotorPWM@m^0,w,c
  8153   0035A8  26D9               	addwf	fsr2l,f,c
  8154   0035AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8155   0035AC  22DA               	addwfc	fsr2h,f,c
  8156   0035AE  50DF               	movf	indf2,w,c
  8157   0035B0  B4D8               	btfsc	status,2,c
  8158   0035B2  EFDD  F01A         	goto	u2381
  8159   0035B6  EFDF  F01A         	goto	u2380
  8160   0035BA                     u2381:
  8161   0035BA  EF13  F01B         	goto	l3196
  8162   0035BE                     u2380:
  8163   0035BE                     
  8164                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8165   0035BE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8166   0035C2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8167   0035C6  50DF               	movf	indf2,w,c
  8168   0035C8  6E10               	movwf	??_setMotorPWM^0,c
  8169   0035CA  5010               	movf	??_setMotorPWM^0,w,c
  8170   0035CC  6E01               	movwf	___wmul@multiplier^0,c
  8171   0035CE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8172   0035D0  EE20 F003          	lfsr	2,3
  8173   0035D4  500E               	movf	setMotorPWM@m^0,w,c
  8174   0035D6  26D9               	addwf	fsr2l,f,c
  8175   0035D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8176   0035DA  22DA               	addwfc	fsr2h,f,c
  8177   0035DC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8178   0035E0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8179   0035E4  ECBE  F025         	call	___wmul	;wreg free
  8180   0035E8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8181   0035EC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8182   0035F0  0E00               	movlw	0
  8183   0035F2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8184   0035F4  0E64               	movlw	100
  8185   0035F6  6E09               	movwf	___lwdiv@divisor^0,c
  8186   0035F8  ECAF  F020         	call	___lwdiv	;wreg free
  8187   0035FC  EE20 F003          	lfsr	2,3
  8188   003600  500E               	movf	setMotorPWM@m^0,w,c
  8189   003602  26D9               	addwf	fsr2l,f,c
  8190   003604  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8191   003606  22DA               	addwfc	fsr2h,f,c
  8192   003608  50DF               	movf	indf2,w,c
  8193   00360A  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8194   00360C  5007               	movf	?___lwdiv^0,w,c
  8195   00360E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8196   003610  6E12               	movwf	setMotorPWM@posDuty^0,c
  8197   003612                     
  8198                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  8199   003612  EE20 F003          	lfsr	2,3
  8200   003616  500E               	movf	setMotorPWM@m^0,w,c
  8201   003618  26D9               	addwf	fsr2l,f,c
  8202   00361A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8203   00361C  22DA               	addwfc	fsr2h,f,c
  8204   00361E  50DF               	movf	indf2,w,c
  8205   003620  6E13               	movwf	setMotorPWM@negDuty^0,c
  8206                           
  8207                           ;dc_motor.c: 74:     }
  8208   003622  EF36  F01B         	goto	l3200
  8209   003626                     l3196:
  8210                           
  8211                           ;dc_motor.c: 76:         posDuty=0;
  8212   003626  0E00               	movlw	0
  8213   003628  6E12               	movwf	setMotorPWM@posDuty^0,c
  8214   00362A                     
  8215                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8216   00362A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8217   00362E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8218   003632  50DF               	movf	indf2,w,c
  8219   003634  6E10               	movwf	??_setMotorPWM^0,c
  8220   003636  5010               	movf	??_setMotorPWM^0,w,c
  8221   003638  6E01               	movwf	___wmul@multiplier^0,c
  8222   00363A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8223   00363C  EE20 F003          	lfsr	2,3
  8224   003640  500E               	movf	setMotorPWM@m^0,w,c
  8225   003642  26D9               	addwf	fsr2l,f,c
  8226   003644  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8227   003646  22DA               	addwfc	fsr2h,f,c
  8228   003648  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8229   00364C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8230   003650  ECBE  F025         	call	___wmul	;wreg free
  8231   003654  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8232   003658  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8233   00365C  0E00               	movlw	0
  8234   00365E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8235   003660  0E64               	movlw	100
  8236   003662  6E09               	movwf	___lwdiv@divisor^0,c
  8237   003664  ECAF  F020         	call	___lwdiv	;wreg free
  8238   003668  5007               	movf	?___lwdiv^0,w,c
  8239   00366A  6E13               	movwf	setMotorPWM@negDuty^0,c
  8240   00366C                     l3200:
  8241                           
  8242                           ;dc_motor.c: 80:     if (m->direction) {
  8243   00366C  EE20 F001          	lfsr	2,1
  8244   003670  500E               	movf	setMotorPWM@m^0,w,c
  8245   003672  26D9               	addwf	fsr2l,f,c
  8246   003674  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8247   003676  22DA               	addwfc	fsr2h,f,c
  8248   003678  50DF               	movf	indf2,w,c
  8249   00367A  B4D8               	btfsc	status,2,c
  8250   00367C  EF42  F01B         	goto	u2391
  8251   003680  EF44  F01B         	goto	u2390
  8252   003684                     u2391:
  8253   003684  EF66  F01B         	goto	l3204
  8254   003688                     u2390:
  8255   003688                     
  8256                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8257   003688  EE20 F005          	lfsr	2,5
  8258   00368C  500E               	movf	setMotorPWM@m^0,w,c
  8259   00368E  26D9               	addwf	fsr2l,f,c
  8260   003690  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8261   003692  22DA               	addwfc	fsr2h,f,c
  8262   003694  CFDE F010          	movff	postinc2,??_setMotorPWM
  8263   003698  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8264   00369C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8265   0036A0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8266   0036A4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8267                           
  8268                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8269   0036A8  EE20 F007          	lfsr	2,7
  8270   0036AC  500E               	movf	setMotorPWM@m^0,w,c
  8271   0036AE  26D9               	addwf	fsr2l,f,c
  8272   0036B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8273   0036B2  22DA               	addwfc	fsr2h,f,c
  8274   0036B4  CFDE F010          	movff	postinc2,??_setMotorPWM
  8275   0036B8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8276   0036BC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8277   0036C0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8278   0036C4  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8279                           
  8280                           ;dc_motor.c: 85:     } else {
  8281   0036C8  EF86  F01B         	goto	l488
  8282   0036CC                     l3204:
  8283                           
  8284                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8285   0036CC  EE20 F005          	lfsr	2,5
  8286   0036D0  500E               	movf	setMotorPWM@m^0,w,c
  8287   0036D2  26D9               	addwf	fsr2l,f,c
  8288   0036D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8289   0036D6  22DA               	addwfc	fsr2h,f,c
  8290   0036D8  CFDE F010          	movff	postinc2,??_setMotorPWM
  8291   0036DC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8292   0036E0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8293   0036E4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8294   0036E8  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8295                           
  8296                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8297   0036EC  EE20 F007          	lfsr	2,7
  8298   0036F0  500E               	movf	setMotorPWM@m^0,w,c
  8299   0036F2  26D9               	addwf	fsr2l,f,c
  8300   0036F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8301   0036F6  22DA               	addwfc	fsr2h,f,c
  8302   0036F8  CFDE F010          	movff	postinc2,??_setMotorPWM
  8303   0036FC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8304   003700  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8305   003704  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8306   003708  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8307   00370C                     l488:
  8308   00370C  0012               	return		;funcret
  8309   00370E                     __end_of_setMotorPWM:
  8310                           	callstack 0
  8311                           
  8312 ;; *************** function ___wmul *****************
  8313 ;; Defined at:
  8314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  multiplier      2    0[COMRAM] unsigned int 
  8317 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  product         2    4[COMRAM] unsigned int 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  2    0[COMRAM] unsigned int 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0, prodl, prodh
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8333 ;;Total ram usage:        6 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 1
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_setMotorPWM
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text59
  8344   004B7C                     __ptext59:
  8345                           	callstack 0
  8346   004B7C                     ___wmul:
  8347                           	callstack 27
  8348   004B7C  5001               	movf	___wmul@multiplier^0,w,c
  8349   004B7E  0203               	mulwf	___wmul@multiplicand^0,c
  8350   004B80  CFF3 F005          	movff	prodl,___wmul@product
  8351   004B84  CFF4 F006          	movff	prodh,___wmul@product+1
  8352   004B88  5001               	movf	___wmul@multiplier^0,w,c
  8353   004B8A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8354   004B8C  50F3               	movf	243,w,c
  8355   004B8E  2606               	addwf	(___wmul@product+1)^0,f,c
  8356   004B90  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8357   004B92  0203               	mulwf	___wmul@multiplicand^0,c
  8358   004B94  50F3               	movf	243,w,c
  8359   004B96  2606               	addwf	(___wmul@product+1)^0,f,c
  8360   004B98  C005  F001         	movff	___wmul@product,?___wmul
  8361   004B9C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8362   004BA0  0012               	return		;funcret
  8363   004BA2                     __end_of___wmul:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function ___lwdiv *****************
  8367 ;; Defined at:
  8368 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  dividend        2    6[COMRAM] unsigned int 
  8371 ;;  divisor         2    8[COMRAM] unsigned int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  quotient        2   10[COMRAM] unsigned int 
  8374 ;;  counter         1   12[COMRAM] unsigned char 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    6[COMRAM] unsigned int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;Total ram usage:        7 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_setMotorPWM
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text60
  8399   00415E                     __ptext60:
  8400                           	callstack 0
  8401   00415E                     ___lwdiv:
  8402                           	callstack 27
  8403   00415E  0E00               	movlw	0
  8404   004160  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8405   004162  0E00               	movlw	0
  8406   004164  6E0B               	movwf	___lwdiv@quotient^0,c
  8407   004166  5009               	movf	___lwdiv@divisor^0,w,c
  8408   004168  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8409   00416A  B4D8               	btfsc	status,2,c
  8410   00416C  EFBA  F020         	goto	u2341
  8411   004170  EFBC  F020         	goto	u2340
  8412   004174                     u2341:
  8413   004174  EFE4  F020         	goto	l1159
  8414   004178                     u2340:
  8415   004178  0E01               	movlw	1
  8416   00417A  6E0D               	movwf	___lwdiv@counter^0,c
  8417   00417C  EFC4  F020         	goto	l3168
  8418   004180                     l3166:
  8419   004180  90D8               	bcf	status,0,c
  8420   004182  3609               	rlcf	___lwdiv@divisor^0,f,c
  8421   004184  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8422   004186  2A0D               	incf	___lwdiv@counter^0,f,c
  8423   004188                     l3168:
  8424   004188  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8425   00418A  EFC9  F020         	goto	u2351
  8426   00418E  EFCB  F020         	goto	u2350
  8427   004192                     u2351:
  8428   004192  EFC0  F020         	goto	l3166
  8429   004196                     u2350:
  8430   004196                     l3170:
  8431   004196  90D8               	bcf	status,0,c
  8432   004198  360B               	rlcf	___lwdiv@quotient^0,f,c
  8433   00419A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8434   00419C  5009               	movf	___lwdiv@divisor^0,w,c
  8435   00419E  5C07               	subwf	___lwdiv@dividend^0,w,c
  8436   0041A0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8437   0041A2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8438   0041A4  A0D8               	btfss	status,0,c
  8439   0041A6  EFD7  F020         	goto	u2361
  8440   0041AA  EFD9  F020         	goto	u2360
  8441   0041AE                     u2361:
  8442   0041AE  EFDE  F020         	goto	l3178
  8443   0041B2                     u2360:
  8444   0041B2  5009               	movf	___lwdiv@divisor^0,w,c
  8445   0041B4  5E07               	subwf	___lwdiv@dividend^0,f,c
  8446   0041B6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8447   0041B8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8448   0041BA  800B               	bsf	___lwdiv@quotient^0,0,c
  8449   0041BC                     l3178:
  8450   0041BC  90D8               	bcf	status,0,c
  8451   0041BE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8452   0041C0  3209               	rrcf	___lwdiv@divisor^0,f,c
  8453   0041C2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8454   0041C4  EFCB  F020         	goto	l3170
  8455   0041C8                     l1159:
  8456   0041C8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8457   0041CC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8458   0041D0  0012               	return		;funcret
  8459   0041D2                     __end_of___lwdiv:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function _Colour_decider *****************
  8463 ;; Defined at:
  8464 ;;		line 125 in file "color.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  vals            2   74[COMRAM] PTR struct RGB
  8467 ;;		 -> vals(8), 
  8468 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8469 ;;		 -> rel(12), 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  RGB_col        12    6[BANK0 ] float [3]
  8472 ;;  Hue             4   28[BANK0 ] float 
  8473 ;;  Cmin            4   22[BANK0 ] float 
  8474 ;;  Cmax            4   18[BANK0 ] float 
  8475 ;;  i               2   26[BANK0 ] int 
  8476 ;;  Cmax_i          2    4[BANK0 ] int 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  2   74[COMRAM] int 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;Total ram usage:       38 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; Hardware stack levels required when called: 3
  8493 ;; This function calls:
  8494 ;;		___fladd
  8495 ;;		___fldiv
  8496 ;;		___fleq
  8497 ;;		___flge
  8498 ;;		___flmul
  8499 ;;		___flsub
  8500 ;;		___xxtofl
  8501 ;; This function is called by:
  8502 ;;		_main
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           	psect	text61
  8507   000E26                     __ptext61:
  8508                           	callstack 0
  8509   000E26                     _Colour_decider:
  8510                           	callstack 27
  8511   000E26                     
  8512                           ;color.c: 126:     float Cmax = 0;
  8513   000E26  0E00               	movlw	0
  8514   000E28  0100               	movlb	0	; () banked
  8515   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8516   000E2C  0E00               	movlw	0
  8517   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8518   000E30  0E00               	movlw	0
  8519   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8520   000E34  0E00               	movlw	0
  8521   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8522                           
  8523                           ;color.c: 127:     float Cmin= 100000;
  8524   000E38  0E00               	movlw	0
  8525   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8526   000E3C  0E50               	movlw	80
  8527   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8528   000E40  0EC3               	movlw	195
  8529   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8530   000E44  0E47               	movlw	71
  8531   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8532                           
  8533                           ;color.c: 128:     int Cmax_i =4;
  8534   000E48  0E00               	movlw	0
  8535   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8536   000E4C  0E04               	movlw	4
  8537   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8538   000E50                     
  8539                           ; BSR set to: 0
  8540                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8541   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8542   000E54  0E0B               	movlw	11
  8543   000E56                     u3871:
  8544   000E56  6ADE               	clrf	postinc2,c
  8545   000E58  06E8               	decf	wreg,f,c
  8546   000E5A  E2FD               	bc	u3871
  8547   000E5C                     
  8548                           ; BSR set to: 0
  8549   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8550   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8551   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8552   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8553   000E6C  0E00               	movlw	0
  8554   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8555   000E70  0EFF               	movlw	-1
  8556   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8557   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8558   000E76  0E01               	movlw	1
  8559   000E78  EC33  F019         	call	___xxtofl
  8560   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8561   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8562   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8563   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8564   000E8C  EE20 F002          	lfsr	2,2
  8565   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8566   000E92  26D9               	addwf	fsr2l,f,c
  8567   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8568   000E96  22DA               	addwfc	fsr2h,f,c
  8569   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8570   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8571   000EA0  0E00               	movlw	0
  8572   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8573   000EA4  0EFF               	movlw	-1
  8574   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8575   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8576   000EAA  0E01               	movlw	1
  8577   000EAC  EC33  F019         	call	___xxtofl
  8578   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8579   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8580   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8581   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8582   000EC0  EE20 F004          	lfsr	2,4
  8583   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8584   000EC6  26D9               	addwf	fsr2l,f,c
  8585   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8586   000ECA  22DA               	addwfc	fsr2h,f,c
  8587   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8588   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8589   000ED4  0E00               	movlw	0
  8590   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8591   000ED8  0EFF               	movlw	-1
  8592   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8593   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8594   000EDE  0E01               	movlw	1
  8595   000EE0  EC33  F019         	call	___xxtofl
  8596   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8597   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8598   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8599   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8600   000EF4                     
  8601                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8602   000EF4  0E00               	movlw	0
  8603   000EF6  0100               	movlb	0	; () banked
  8604   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8605   000EFA  0E00               	movlw	0
  8606   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8607   000EFE                     l4232:
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8611   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8612   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8613   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8614   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8615   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8616   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8617   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8618   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8619   000F16  90D8               	bcf	status,0,c
  8620   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8621   000F1A  6ED9               	movwf	fsr2l,c
  8622   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8623   000F1E  6EDA               	movwf	fsr2h,c
  8624   000F20  90D8               	bcf	status,0,c
  8625   000F22  36D9               	rlcf	fsr2l,f,c
  8626   000F24  36DA               	rlcf	fsr2h,f,c
  8627   000F26  504F               	movf	??_Colour_decider^0,w,c
  8628   000F28  26D9               	addwf	fsr2l,f,c
  8629   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8630   000F2C  22DA               	addwfc	fsr2h,f,c
  8631   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8632   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8633   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8634   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8635   000F3E  ECE1  F01C         	call	___flge	;wreg free
  8636   000F42  B0D8               	btfsc	status,0,c
  8637   000F44  EFA6  F007         	goto	u3881
  8638   000F48  EFA8  F007         	goto	u3880
  8639   000F4C                     u3881:
  8640   000F4C  EFC5  F007         	goto	l4238
  8641   000F50                     u3880:
  8642   000F50                     
  8643                           ;color.c: 137:             Cmax=RGB_col[i];
  8644   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8645   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8646   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8647   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8648   000F58  90D8               	bcf	status,0,c
  8649   000F5A  0100               	movlb	0	; () banked
  8650   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8651   000F5E  6ED9               	movwf	fsr2l,c
  8652   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8653   000F62  6EDA               	movwf	fsr2h,c
  8654   000F64  90D8               	bcf	status,0,c
  8655   000F66  36D9               	rlcf	fsr2l,f,c
  8656   000F68  36DA               	rlcf	fsr2h,f,c
  8657   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8658   000F6C  26D9               	addwf	fsr2l,f,c
  8659   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8660   000F70  22DA               	addwfc	fsr2h,f,c
  8661   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8662   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8663   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8664   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8665   000F82                     
  8666                           ; BSR set to: 0
  8667                           ;color.c: 138:             Cmax_i=i;
  8668   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8669   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8670   000F8A                     l4238:
  8671                           
  8672                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8673   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8674   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8675   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8676   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8677   000F92  90D8               	bcf	status,0,c
  8678   000F94  0100               	movlb	0	; () banked
  8679   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8680   000F98  6ED9               	movwf	fsr2l,c
  8681   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8682   000F9C  6EDA               	movwf	fsr2h,c
  8683   000F9E  90D8               	bcf	status,0,c
  8684   000FA0  36D9               	rlcf	fsr2l,f,c
  8685   000FA2  36DA               	rlcf	fsr2h,f,c
  8686   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8687   000FA6  26D9               	addwf	fsr2l,f,c
  8688   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8689   000FAA  22DA               	addwfc	fsr2h,f,c
  8690   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8691   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8692   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8693   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8694   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8695   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8696   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8697   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8698   000FCC  ECE1  F01C         	call	___flge	;wreg free
  8699   000FD0  B0D8               	btfsc	status,0,c
  8700   000FD2  EFED  F007         	goto	u3891
  8701   000FD6  EFEF  F007         	goto	u3890
  8702   000FDA                     u3891:
  8703   000FDA  EF08  F008         	goto	l4242
  8704   000FDE                     u3890:
  8705   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8706   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8707   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8708   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8709   000FE6  90D8               	bcf	status,0,c
  8710   000FE8  0100               	movlb	0	; () banked
  8711   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8712   000FEC  6ED9               	movwf	fsr2l,c
  8713   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8714   000FF0  6EDA               	movwf	fsr2h,c
  8715   000FF2  90D8               	bcf	status,0,c
  8716   000FF4  36D9               	rlcf	fsr2l,f,c
  8717   000FF6  36DA               	rlcf	fsr2h,f,c
  8718   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8719   000FFA  26D9               	addwf	fsr2l,f,c
  8720   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8721   000FFE  22DA               	addwfc	fsr2h,f,c
  8722   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8723   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8724   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8725   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8726   001010                     l4242:
  8727                           
  8728                           ;color.c: 141:     }
  8729   001010  0100               	movlb	0	; () banked
  8730   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8731   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8732   001016                     
  8733                           ; BSR set to: 0
  8734   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8735   001018  EF17  F008         	goto	u3901
  8736   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8737   00101E  E109               	bnz	u3900
  8738   001020  0E03               	movlw	3
  8739   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8740   001024  A0D8               	btfss	status,0,c
  8741   001026  EF17  F008         	goto	u3901
  8742   00102A  EF19  F008         	goto	u3900
  8743   00102E                     u3901:
  8744   00102E  EF7F  F007         	goto	l4232
  8745   001032                     u3900:
  8746   001032                     
  8747                           ; BSR set to: 0
  8748                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8749   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8750   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8751   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8752   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8753   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8754   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8755   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8756   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8757   001052  EC4C  F024         	call	___flsub	;wreg free
  8758   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8759   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8760   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8761   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8762   001066  0E00               	movlw	0
  8763   001068  6E1D               	movwf	___fleq@ff2^0,c
  8764   00106A  0E00               	movlw	0
  8765   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8766   00106E  0E00               	movlw	0
  8767   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8768   001072  0E00               	movlw	0
  8769   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8770   001076  EC1D  F01E         	call	___fleq	;wreg free
  8771   00107A  A0D8               	btfss	status,0,c
  8772   00107C  EF42  F008         	goto	u3911
  8773   001080  EF44  F008         	goto	u3910
  8774   001084                     u3911:
  8775   001084  EF4A  F008         	goto	l4252
  8776   001088                     u3910:
  8777   001088                     l4248:
  8778   001088  0E00               	movlw	0
  8779   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8780   00108C  0E00               	movlw	0
  8781   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8782   001090  EF80  F00C         	goto	l74
  8783   001094                     l4252:
  8784                           
  8785                           ;color.c: 146:     if (Cmax_i==0){
  8786   001094  0100               	movlb	0	; () banked
  8787   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8788   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8789   00109A  A4D8               	btfss	status,2,c
  8790   00109C  EF52  F008         	goto	u3921
  8791   0010A0  EF54  F008         	goto	u3920
  8792   0010A4                     u3921:
  8793   0010A4  EFC8  F008         	goto	l4260
  8794   0010A8                     u3920:
  8795   0010A8                     
  8796                           ; BSR set to: 0
  8797                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8798   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8799   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8800   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8801   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8802   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8803   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8804   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8805   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8806   0010C8  EC4C  F024         	call	___flsub	;wreg free
  8807   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8808   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8809   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8810   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8811   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8812   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8813   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8814   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8815   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8816   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8817   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8818   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8819   0010FC  EC4C  F024         	call	___flsub	;wreg free
  8820   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8821   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8822   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8823   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8824   001110  EC80  F013         	call	___fldiv	;wreg free
  8825   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8826   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  8827   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  8828   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  8829   001124  0E00               	movlw	0
  8830   001126  6E36               	movwf	___flmul@a^0,c
  8831   001128  0E00               	movlw	0
  8832   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  8833   00112C  0E70               	movlw	112
  8834   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  8835   001130  0E42               	movlw	66
  8836   001132  6E39               	movwf	(___flmul@a+3)^0,c
  8837   001134  EC6B  F011         	call	___flmul	;wreg free
  8838   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8839   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8840   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8841   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8842   001148                     
  8843                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8844   001148  0100               	movlb	0	; () banked
  8845   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8846   00114C  EFAC  F008         	goto	u3930
  8847   001150  EFAA  F008         	goto	u3931
  8848   001154                     u3931:
  8849   001154  EFA7  F009         	goto	l4270
  8850   001158                     u3930:
  8851   001158                     
  8852                           ; BSR set to: 0
  8853   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8854   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8855   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8856   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8857   001168  0E00               	movlw	0
  8858   00116A  6E05               	movwf	___fladd@a^0,c
  8859   00116C  0E00               	movlw	0
  8860   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  8861   001170  0EB4               	movlw	180
  8862   001172  6E07               	movwf	(___fladd@a+2)^0,c
  8863   001174  0E43               	movlw	67
  8864   001176  6E08               	movwf	(___fladd@a+3)^0,c
  8865   001178  EC0B  F00F         	call	___fladd	;wreg free
  8866   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8867   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8868   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8869   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8870   00118C  EFA7  F009         	goto	l4270
  8871   001190                     l4260:
  8872                           
  8873                           ; BSR set to: 0
  8874   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8875   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8876   001194  A4D8               	btfss	status,2,c
  8877   001196  EFCF  F008         	goto	u3941
  8878   00119A  EFD1  F008         	goto	u3940
  8879   00119E                     u3941:
  8880   00119E  EF3D  F009         	goto	l4266
  8881   0011A2                     u3940:
  8882   0011A2                     
  8883                           ; BSR set to: 0
  8884                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8885   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8886   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8887   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8888   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8889   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8890   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8891   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8892   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8893   0011C2  EC4C  F024         	call	___flsub	;wreg free
  8894   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  8895   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8896   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8897   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8898   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  8899   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8900   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8901   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8902   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  8903   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8904   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8905   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8906   0011F6  EC4C  F024         	call	___flsub	;wreg free
  8907   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  8908   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8909   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8910   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8911   00120A  EC80  F013         	call	___fldiv	;wreg free
  8912   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2833
  8913   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2833+1
  8914   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2833+2
  8915   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2833+3
  8916   00121E                     
  8917                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8918   00121E  0E00               	movlw	0
  8919   001220  6E05               	movwf	___fladd@a^0,c
  8920   001222  0E00               	movlw	0
  8921   001224  6E06               	movwf	(___fladd@a+1)^0,c
  8922   001226  0E00               	movlw	0
  8923   001228  6E07               	movwf	(___fladd@a+2)^0,c
  8924   00122A  0E40               	movlw	64
  8925   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  8926   00122E  C060  F001         	movff	_Colour_decider$2833,___fladd@b
  8927   001232  C061  F002         	movff	_Colour_decider$2833+1,___fladd@b+1
  8928   001236  C062  F003         	movff	_Colour_decider$2833+2,___fladd@b+2
  8929   00123A  C063  F004         	movff	_Colour_decider$2833+3,___fladd@b+3
  8930   00123E  EC0B  F00F         	call	___fladd	;wreg free
  8931   001242  C001  F032         	movff	?___fladd,___flmul@b
  8932   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8933   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8934   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8935   001252  0E00               	movlw	0
  8936   001254  6E36               	movwf	___flmul@a^0,c
  8937   001256  0E00               	movlw	0
  8938   001258  6E37               	movwf	(___flmul@a+1)^0,c
  8939   00125A  0E70               	movlw	112
  8940   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  8941   00125E  0E42               	movlw	66
  8942   001260  6E39               	movwf	(___flmul@a+3)^0,c
  8943   001262  EC6B  F011         	call	___flmul	;wreg free
  8944   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8945   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8946   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8947   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8948                           
  8949                           ;color.c: 155:     }
  8950   001276  EFA7  F009         	goto	l4270
  8951   00127A                     l4266:
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8955   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8956   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8957   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8958   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8959   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8960   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8961   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8962   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8963   00129A  EC4C  F024         	call	___flsub	;wreg free
  8964   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  8965   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8966   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8967   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8968   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  8969   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8970   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8971   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8972   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  8973   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8974   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8975   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8976   0012CE  EC4C  F024         	call	___flsub	;wreg free
  8977   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  8978   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8979   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8980   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8981   0012E2  EC80  F013         	call	___fldiv	;wreg free
  8982   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2833
  8983   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2833+1
  8984   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2833+2
  8985   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2833+3
  8986   0012F6                     
  8987                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8988   0012F6  0E00               	movlw	0
  8989   0012F8  6E05               	movwf	___fladd@a^0,c
  8990   0012FA  0E00               	movlw	0
  8991   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  8992   0012FE  0E80               	movlw	128
  8993   001300  6E07               	movwf	(___fladd@a+2)^0,c
  8994   001302  0E40               	movlw	64
  8995   001304  6E08               	movwf	(___fladd@a+3)^0,c
  8996   001306  C060  F001         	movff	_Colour_decider$2833,___fladd@b
  8997   00130A  C061  F002         	movff	_Colour_decider$2833+1,___fladd@b+1
  8998   00130E  C062  F003         	movff	_Colour_decider$2833+2,___fladd@b+2
  8999   001312  C063  F004         	movff	_Colour_decider$2833+3,___fladd@b+3
  9000   001316  EC0B  F00F         	call	___fladd	;wreg free
  9001   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9002   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9003   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9004   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9005   00132A  0E00               	movlw	0
  9006   00132C  6E36               	movwf	___flmul@a^0,c
  9007   00132E  0E00               	movlw	0
  9008   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9009   001332  0E70               	movlw	112
  9010   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9011   001336  0E42               	movlw	66
  9012   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9013   00133A  EC6B  F011         	call	___flmul	;wreg free
  9014   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9015   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9016   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9017   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9018   00134E                     l4270:
  9019                           
  9020                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9021   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9022   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9023   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9024   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9025   00135E  0E00               	movlw	0
  9026   001360  6E05               	movwf	___flge@ff2^0,c
  9027   001362  0E00               	movlw	0
  9028   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9029   001366  0EA5               	movlw	165
  9030   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9031   00136A  0E43               	movlw	67
  9032   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9033   00136E  ECE1  F01C         	call	___flge	;wreg free
  9034   001372  A0D8               	btfss	status,0,c
  9035   001374  EFBE  F009         	goto	u3951
  9036   001378  EFC0  F009         	goto	u3950
  9037   00137C                     u3951:
  9038   00137C  EFDF  F009         	goto	l4280
  9039   001380                     u3950:
  9040   001380  0E00               	movlw	0
  9041   001382  6E01               	movwf	___flge@ff1^0,c
  9042   001384  0E00               	movlw	0
  9043   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9044   001388  0EB4               	movlw	180
  9045   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9046   00138C  0E43               	movlw	67
  9047   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9048   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9049   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9050   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9051   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9052   0013A0  ECE1  F01C         	call	___flge	;wreg free
  9053   0013A4  A0D8               	btfss	status,0,c
  9054   0013A6  EFD7  F009         	goto	u3961
  9055   0013AA  EFD9  F009         	goto	u3960
  9056   0013AE                     u3961:
  9057   0013AE  EFDF  F009         	goto	l4280
  9058   0013B2                     u3960:
  9059   0013B2                     
  9060                           ;color.c: 164:         return 1;
  9061   0013B2  0E00               	movlw	0
  9062   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9063   0013B6  0E01               	movlw	1
  9064   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9065   0013BA  EF80  F00C         	goto	l74
  9066   0013BE                     l4280:
  9067   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9068   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9069   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9070   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9071   0013CE  0E00               	movlw	0
  9072   0013D0  6E05               	movwf	___flge@ff2^0,c
  9073   0013D2  0E00               	movlw	0
  9074   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9075   0013D6  0EA0               	movlw	160
  9076   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9077   0013DA  0E40               	movlw	64
  9078   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9079   0013DE  ECE1  F01C         	call	___flge	;wreg free
  9080   0013E2  A0D8               	btfss	status,0,c
  9081   0013E4  EFF6  F009         	goto	u3971
  9082   0013E8  EFF8  F009         	goto	u3970
  9083   0013EC                     u3971:
  9084   0013EC  EF17  F00A         	goto	l4290
  9085   0013F0                     u3970:
  9086   0013F0  0E00               	movlw	0
  9087   0013F2  6E01               	movwf	___flge@ff1^0,c
  9088   0013F4  0E00               	movlw	0
  9089   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9090   0013F8  0E40               	movlw	64
  9091   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9092   0013FC  0E41               	movlw	65
  9093   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9094   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9095   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9096   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9097   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9098   001410  ECE1  F01C         	call	___flge	;wreg free
  9099   001414  A0D8               	btfss	status,0,c
  9100   001416  EF0F  F00A         	goto	u3981
  9101   00141A  EF11  F00A         	goto	u3980
  9102   00141E                     u3981:
  9103   00141E  EF17  F00A         	goto	l4290
  9104   001422                     u3980:
  9105   001422                     
  9106                           ;color.c: 168:         return 2;
  9107   001422  0E00               	movlw	0
  9108   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9109   001426  0E02               	movlw	2
  9110   001428  6E4B               	movwf	?_Colour_decider^0,c
  9111   00142A  EF80  F00C         	goto	l74
  9112   00142E                     l4290:
  9113   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9114   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9115   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9116   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9117   00143E  0E00               	movlw	0
  9118   001440  6E05               	movwf	___flge@ff2^0,c
  9119   001442  0E00               	movlw	0
  9120   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9121   001446  0EA0               	movlw	160
  9122   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9123   00144A  0E41               	movlw	65
  9124   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9125   00144E  ECE1  F01C         	call	___flge	;wreg free
  9126   001452  A0D8               	btfss	status,0,c
  9127   001454  EF2E  F00A         	goto	u3991
  9128   001458  EF30  F00A         	goto	u3990
  9129   00145C                     u3991:
  9130   00145C  EFB0  F00A         	goto	l4316
  9131   001460                     u3990:
  9132   001460  0E00               	movlw	0
  9133   001462  6E01               	movwf	___flge@ff1^0,c
  9134   001464  0E00               	movlw	0
  9135   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9136   001468  0EE8               	movlw	232
  9137   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9138   00146C  0E41               	movlw	65
  9139   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9140   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9141   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9142   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9143   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9144   001480  ECE1  F01C         	call	___flge	;wreg free
  9145   001484  A0D8               	btfss	status,0,c
  9146   001486  EF47  F00A         	goto	u4001
  9147   00148A  EF49  F00A         	goto	u4000
  9148   00148E                     u4001:
  9149   00148E  EFB0  F00A         	goto	l4316
  9150   001492                     u4000:
  9151   001492                     
  9152                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9153   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9154   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9155   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9156   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9157   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9158   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9159   0014AA  0ECD               	movlw	205
  9160   0014AC  6E05               	movwf	___flge@ff2^0,c
  9161   0014AE  0ECC               	movlw	204
  9162   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9163   0014B2  0E4C               	movlw	76
  9164   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9165   0014B6  0E3E               	movlw	62
  9166   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9167   0014BA  ECE1  F01C         	call	___flge	;wreg free
  9168   0014BE  A0D8               	btfss	status,0,c
  9169   0014C0  EF64  F00A         	goto	u4011
  9170   0014C4  EF66  F00A         	goto	u4010
  9171   0014C8                     u4011:
  9172   0014C8  EF85  F00A         	goto	l4304
  9173   0014CC                     u4010:
  9174   0014CC  0E00               	movlw	0
  9175   0014CE  6E01               	movwf	___flge@ff1^0,c
  9176   0014D0  0E00               	movlw	0
  9177   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9178   0014D4  0E80               	movlw	128
  9179   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9180   0014D8  0E3E               	movlw	62
  9181   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9182   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9183   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9184   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9185   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9186   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9187   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9188   0014F4  ECE1  F01C         	call	___flge	;wreg free
  9189   0014F8  A0D8               	btfss	status,0,c
  9190   0014FA  EF81  F00A         	goto	u4021
  9191   0014FE  EF83  F00A         	goto	u4020
  9192   001502                     u4021:
  9193   001502  EF85  F00A         	goto	l4304
  9194   001506                     u4020:
  9195   001506  EF44  F008         	goto	l4248
  9196   00150A                     l4304:
  9197   00150A  EE20 F008          	lfsr	2,8
  9198   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9199   001510  26D9               	addwf	fsr2l,f,c
  9200   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9201   001514  22DA               	addwfc	fsr2h,f,c
  9202   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9203   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9204   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9205   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9206   001526  0E29               	movlw	41
  9207   001528  6E05               	movwf	___flge@ff2^0,c
  9208   00152A  0E5C               	movlw	92
  9209   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9210   00152E  0E0F               	movlw	15
  9211   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9212   001532  0E3E               	movlw	62
  9213   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9214   001536  ECE1  F01C         	call	___flge	;wreg free
  9215   00153A  A0D8               	btfss	status,0,c
  9216   00153C  EFA2  F00A         	goto	u4031
  9217   001540  EFA4  F00A         	goto	u4030
  9218   001544                     u4031:
  9219   001544  EFAA  F00A         	goto	l4312
  9220   001548                     u4030:
  9221   001548                     l4306:
  9222                           
  9223                           ;color.c: 179:             return 4;
  9224   001548  0E00               	movlw	0
  9225   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9226   00154C  0E04               	movlw	4
  9227   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9228   001550  EF80  F00C         	goto	l74
  9229   001554                     l4312:
  9230                           
  9231                           ;color.c: 182:             return 3;
  9232   001554  0E00               	movlw	0
  9233   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9234   001558  0E03               	movlw	3
  9235   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9236   00155C  EF80  F00C         	goto	l74
  9237   001560                     l4316:
  9238   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9239   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9240   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9241   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9242   001570  0E00               	movlw	0
  9243   001572  6E05               	movwf	___flge@ff2^0,c
  9244   001574  0E00               	movlw	0
  9245   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9246   001578  0E34               	movlw	52
  9247   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9248   00157C  0E42               	movlw	66
  9249   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9250   001580  ECE1  F01C         	call	___flge	;wreg free
  9251   001584  A0D8               	btfss	status,0,c
  9252   001586  EFC7  F00A         	goto	u4041
  9253   00158A  EFC9  F00A         	goto	u4040
  9254   00158E                     u4041:
  9255   00158E  EF2E  F00B         	goto	l4340
  9256   001592                     u4040:
  9257   001592  0E00               	movlw	0
  9258   001594  6E01               	movwf	___flge@ff1^0,c
  9259   001596  0E00               	movlw	0
  9260   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9261   00159A  0EA0               	movlw	160
  9262   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9263   00159E  0E42               	movlw	66
  9264   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9265   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9266   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9267   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9268   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9269   0015B2  ECE1  F01C         	call	___flge	;wreg free
  9270   0015B6  A0D8               	btfss	status,0,c
  9271   0015B8  EFE0  F00A         	goto	u4051
  9272   0015BC  EFE2  F00A         	goto	u4050
  9273   0015C0                     u4051:
  9274   0015C0  EF2E  F00B         	goto	l4340
  9275   0015C4                     u4050:
  9276   0015C4                     
  9277                           ;color.c: 188:         if(0.15<=rel->B){
  9278   0015C4  EE20 F008          	lfsr	2,8
  9279   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9280   0015CA  26D9               	addwf	fsr2l,f,c
  9281   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9282   0015CE  22DA               	addwfc	fsr2h,f,c
  9283   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9284   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9285   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9286   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9287   0015E0  0E9A               	movlw	154
  9288   0015E2  6E05               	movwf	___flge@ff2^0,c
  9289   0015E4  0E99               	movlw	153
  9290   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9291   0015E8  0E19               	movlw	25
  9292   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9293   0015EC  0E3E               	movlw	62
  9294   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9295   0015F0  ECE1  F01C         	call	___flge	;wreg free
  9296   0015F4  A0D8               	btfss	status,0,c
  9297   0015F6  EFFF  F00A         	goto	u4061
  9298   0015FA  EF01  F00B         	goto	u4060
  9299   0015FE                     u4061:
  9300   0015FE  EF03  F00B         	goto	l4328
  9301   001602                     u4060:
  9302   001602  EFA4  F00A         	goto	l4306
  9303   001606                     l4328:
  9304   001606  EE20 F008          	lfsr	2,8
  9305   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9306   00160C  26D9               	addwf	fsr2l,f,c
  9307   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9308   001610  22DA               	addwfc	fsr2h,f,c
  9309   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9310   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9311   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9312   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9313   001622  0E8F               	movlw	143
  9314   001624  6E05               	movwf	___flge@ff2^0,c
  9315   001626  0EC2               	movlw	194
  9316   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9317   00162A  0EF5               	movlw	245
  9318   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9319   00162E  0E3D               	movlw	61
  9320   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9321   001632  ECE1  F01C         	call	___flge	;wreg free
  9322   001636  A0D8               	btfss	status,0,c
  9323   001638  EF20  F00B         	goto	u4071
  9324   00163C  EF22  F00B         	goto	u4070
  9325   001640                     u4071:
  9326   001640  EF28  F00B         	goto	l4336
  9327   001644                     u4070:
  9328   001644                     l4330:
  9329                           
  9330                           ;color.c: 192:             return 6;
  9331   001644  0E00               	movlw	0
  9332   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9333   001648  0E06               	movlw	6
  9334   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9335   00164C  EF80  F00C         	goto	l74
  9336   001650                     l4336:
  9337                           
  9338                           ;color.c: 195:             return 5;
  9339   001650  0E00               	movlw	0
  9340   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9341   001654  0E05               	movlw	5
  9342   001656  6E4B               	movwf	?_Colour_decider^0,c
  9343   001658  EF80  F00C         	goto	l74
  9344   00165C                     l4340:
  9345   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9346   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9347   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9348   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9349   00166C  0E00               	movlw	0
  9350   00166E  6E05               	movwf	___flge@ff2^0,c
  9351   001670  0E00               	movlw	0
  9352   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9353   001674  0EA2               	movlw	162
  9354   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9355   001678  0E42               	movlw	66
  9356   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9357   00167C  ECE1  F01C         	call	___flge	;wreg free
  9358   001680  A0D8               	btfss	status,0,c
  9359   001682  EF45  F00B         	goto	u4081
  9360   001686  EF47  F00B         	goto	u4080
  9361   00168A                     u4081:
  9362   00168A  EF81  F00B         	goto	l4356
  9363   00168E                     u4080:
  9364   00168E  0E00               	movlw	0
  9365   001690  6E01               	movwf	___flge@ff1^0,c
  9366   001692  0E00               	movlw	0
  9367   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9368   001696  0EE6               	movlw	230
  9369   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9370   00169A  0E42               	movlw	66
  9371   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9372   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9373   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9374   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9375   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9376   0016AE  ECE1  F01C         	call	___flge	;wreg free
  9377   0016B2  A0D8               	btfss	status,0,c
  9378   0016B4  EF5E  F00B         	goto	u4091
  9379   0016B8  EF60  F00B         	goto	u4090
  9380   0016BC                     u4091:
  9381   0016BC  EF81  F00B         	goto	l4356
  9382   0016C0                     u4090:
  9383   0016C0                     
  9384                           ;color.c: 201:         if(0.15<=rel->B){
  9385   0016C0  EE20 F008          	lfsr	2,8
  9386   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9387   0016C6  26D9               	addwf	fsr2l,f,c
  9388   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9389   0016CA  22DA               	addwfc	fsr2h,f,c
  9390   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9391   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9392   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9393   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9394   0016DC  0E9A               	movlw	154
  9395   0016DE  6E05               	movwf	___flge@ff2^0,c
  9396   0016E0  0E99               	movlw	153
  9397   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9398   0016E4  0E19               	movlw	25
  9399   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9400   0016E8  0E3E               	movlw	62
  9401   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9402   0016EC  ECE1  F01C         	call	___flge	;wreg free
  9403   0016F0  A0D8               	btfss	status,0,c
  9404   0016F2  EF7D  F00B         	goto	u4101
  9405   0016F6  EF7F  F00B         	goto	u4100
  9406   0016FA                     u4101:
  9407   0016FA  EF22  F00B         	goto	l4330
  9408   0016FE                     u4100:
  9409   0016FE  EFA4  F00A         	goto	l4306
  9410   001702                     l4356:
  9411   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9412   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9413   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9414   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9415   001712  0E00               	movlw	0
  9416   001714  6E05               	movwf	___flge@ff2^0,c
  9417   001716  0E00               	movlw	0
  9418   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9419   00171A  0EF0               	movlw	240
  9420   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9421   00171E  0E41               	movlw	65
  9422   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9423   001722  ECE1  F01C         	call	___flge	;wreg free
  9424   001726  A0D8               	btfss	status,0,c
  9425   001728  EF98  F00B         	goto	u4111
  9426   00172C  EF9A  F00B         	goto	u4110
  9427   001730                     u4111:
  9428   001730  EFB3  F00B         	goto	l4360
  9429   001734                     u4110:
  9430   001734  0E00               	movlw	0
  9431   001736  6E01               	movwf	___flge@ff1^0,c
  9432   001738  0E00               	movlw	0
  9433   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9434   00173C  0E68               	movlw	104
  9435   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9436   001740  0E42               	movlw	66
  9437   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9438   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9439   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9440   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9441   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9442   001754  ECE1  F01C         	call	___flge	;wreg free
  9443   001758  B0D8               	btfsc	status,0,c
  9444   00175A  EFB1  F00B         	goto	u4121
  9445   00175E  EFB3  F00B         	goto	u4120
  9446   001762                     u4121:
  9447   001762  EFA4  F00A         	goto	l4306
  9448   001766                     u4120:
  9449   001766                     l4360:
  9450   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9451   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9452   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9453   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9454   001776  0E00               	movlw	0
  9455   001778  6E05               	movwf	___flge@ff2^0,c
  9456   00177A  0E00               	movlw	0
  9457   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9458   00177E  0EF0               	movlw	240
  9459   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9460   001782  0E42               	movlw	66
  9461   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9462   001786  ECE1  F01C         	call	___flge	;wreg free
  9463   00178A  A0D8               	btfss	status,0,c
  9464   00178C  EFCA  F00B         	goto	u4131
  9465   001790  EFCC  F00B         	goto	u4130
  9466   001794                     u4131:
  9467   001794  EFE7  F00B         	goto	l4370
  9468   001798                     u4130:
  9469   001798  0E00               	movlw	0
  9470   00179A  6E01               	movwf	___flge@ff1^0,c
  9471   00179C  0E00               	movlw	0
  9472   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9473   0017A0  0E5C               	movlw	92
  9474   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9475   0017A4  0E43               	movlw	67
  9476   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9477   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9478   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9479   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9480   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9481   0017B8  ECE1  F01C         	call	___flge	;wreg free
  9482   0017BC  A0D8               	btfss	status,0,c
  9483   0017BE  EFE3  F00B         	goto	u4141
  9484   0017C2  EFE5  F00B         	goto	u4140
  9485   0017C6                     u4141:
  9486   0017C6  EFE7  F00B         	goto	l4370
  9487   0017CA                     u4140:
  9488   0017CA  EFA4  F00A         	goto	l4306
  9489   0017CE                     l4370:
  9490   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9491   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9492   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9493   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9494   0017DE  0E00               	movlw	0
  9495   0017E0  6E05               	movwf	___flge@ff2^0,c
  9496   0017E2  0E00               	movlw	0
  9497   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9498   0017E6  0E60               	movlw	96
  9499   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9500   0017EA  0E41               	movlw	65
  9501   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9502   0017EE  ECE1  F01C         	call	___flge	;wreg free
  9503   0017F2  A0D8               	btfss	status,0,c
  9504   0017F4  EFFE  F00B         	goto	u4151
  9505   0017F8  EF00  F00C         	goto	u4150
  9506   0017FC                     u4151:
  9507   0017FC  EF7C  F00C         	goto	l4396
  9508   001800                     u4150:
  9509   001800  0E00               	movlw	0
  9510   001802  6E01               	movwf	___flge@ff1^0,c
  9511   001804  0E00               	movlw	0
  9512   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9513   001808  0E98               	movlw	152
  9514   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9515   00180C  0E41               	movlw	65
  9516   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9517   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9518   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9519   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9520   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9521   001820  ECE1  F01C         	call	___flge	;wreg free
  9522   001824  A0D8               	btfss	status,0,c
  9523   001826  EF17  F00C         	goto	u4161
  9524   00182A  EF19  F00C         	goto	u4160
  9525   00182E                     u4161:
  9526   00182E  EF7C  F00C         	goto	l4396
  9527   001832                     u4160:
  9528   001832                     
  9529                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9530   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9531   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9532   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9533   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9534   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9535   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9536   00184A  0ECD               	movlw	205
  9537   00184C  6E05               	movwf	___flge@ff2^0,c
  9538   00184E  0ECC               	movlw	204
  9539   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9540   001852  0E4C               	movlw	76
  9541   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9542   001856  0E3E               	movlw	62
  9543   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9544   00185A  ECE1  F01C         	call	___flge	;wreg free
  9545   00185E  A0D8               	btfss	status,0,c
  9546   001860  EF34  F00C         	goto	u4171
  9547   001864  EF36  F00C         	goto	u4170
  9548   001868                     u4171:
  9549   001868  EF55  F00C         	goto	l4384
  9550   00186C                     u4170:
  9551   00186C  0E1F               	movlw	31
  9552   00186E  6E01               	movwf	___flge@ff1^0,c
  9553   001870  0E85               	movlw	133
  9554   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9555   001874  0E6B               	movlw	107
  9556   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9557   001878  0E3E               	movlw	62
  9558   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9559   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9560   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9561   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9562   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9563   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9564   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9565   001894  ECE1  F01C         	call	___flge	;wreg free
  9566   001898  A0D8               	btfss	status,0,c
  9567   00189A  EF51  F00C         	goto	u4181
  9568   00189E  EF53  F00C         	goto	u4180
  9569   0018A2                     u4181:
  9570   0018A2  EF55  F00C         	goto	l4384
  9571   0018A6                     u4180:
  9572   0018A6  EF44  F008         	goto	l4248
  9573   0018AA                     l4384:
  9574   0018AA  EE20 F008          	lfsr	2,8
  9575   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9576   0018B0  26D9               	addwf	fsr2l,f,c
  9577   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9578   0018B4  22DA               	addwfc	fsr2h,f,c
  9579   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9580   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9581   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9582   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9583   0018C6  0E9A               	movlw	154
  9584   0018C8  6E05               	movwf	___flge@ff2^0,c
  9585   0018CA  0E99               	movlw	153
  9586   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9587   0018CE  0E19               	movlw	25
  9588   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9589   0018D2  0E3E               	movlw	62
  9590   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9591   0018D6  ECE1  F01C         	call	___flge	;wreg free
  9592   0018DA  A0D8               	btfss	status,0,c
  9593   0018DC  EF72  F00C         	goto	u4191
  9594   0018E0  EF74  F00C         	goto	u4190
  9595   0018E4                     u4191:
  9596   0018E4  EF76  F00C         	goto	l4392
  9597   0018E8                     u4190:
  9598   0018E8  EFA4  F00A         	goto	l4306
  9599   0018EC                     l4392:
  9600                           
  9601                           ;color.c: 223:             return 7;
  9602   0018EC  0E00               	movlw	0
  9603   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9604   0018F0  0E07               	movlw	7
  9605   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9606   0018F4  EF80  F00C         	goto	l74
  9607   0018F8                     l4396:
  9608                           
  9609                           ;color.c: 227:         return 10;
  9610   0018F8  0E00               	movlw	0
  9611   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9612   0018FC  0E0A               	movlw	10
  9613   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9614   001900                     l74:
  9615   001900  0012               	return		;funcret
  9616   001902                     __end_of_Colour_decider:
  9617                           	callstack 0
  9618                           
  9619 ;; *************** function ___xxtofl *****************
  9620 ;; Defined at:
  9621 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  sign            1    wreg     unsigned char 
  9624 ;;  val             4    0[COMRAM] long 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  sign            1    8[COMRAM] unsigned char 
  9627 ;;  arg             4   10[COMRAM] unsigned long 
  9628 ;;  exp             1    9[COMRAM] unsigned char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  4    0[COMRAM] unsigned char 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9641 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9642 ;;Total ram usage:       14 bytes
  9643 ;; Hardware stack levels used: 1
  9644 ;; Hardware stack levels required when called: 1
  9645 ;; This function calls:
  9646 ;;		Nothing
  9647 ;; This function is called by:
  9648 ;;		_colour_rel
  9649 ;;		_Colour_decider
  9650 ;;		_turnRight45
  9651 ;;		_turnLeft45
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text62
  9656   003266                     __ptext62:
  9657                           	callstack 0
  9658   003266                     ___xxtofl:
  9659                           	callstack 28
  9660                           
  9661                           ;incstack = 0
  9662                           ;___xxtofl@sign stored from wreg
  9663   003266  6E09               	movwf	___xxtofl@sign^0,c
  9664   003268  5009               	movf	___xxtofl@sign^0,w,c
  9665   00326A  B4D8               	btfsc	status,2,c
  9666   00326C  EF3A  F019         	goto	u3761
  9667   003270  EF3C  F019         	goto	u3760
  9668   003274                     u3761:
  9669   003274  EF5E  F019         	goto	l1323
  9670   003278                     u3760:
  9671   003278  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9672   00327A  EF43  F019         	goto	u3770
  9673   00327E  EF41  F019         	goto	u3771
  9674   003282                     u3771:
  9675   003282  EF5E  F019         	goto	l1323
  9676   003286                     u3770:
  9677   003286  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9678   00328A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9679   00328E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9680   003292  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9681   003296  1E05               	comf	??___xxtofl^0,f,c
  9682   003298  1E06               	comf	(??___xxtofl+1)^0,f,c
  9683   00329A  1E07               	comf	(??___xxtofl+2)^0,f,c
  9684   00329C  1E08               	comf	(??___xxtofl+3)^0,f,c
  9685   00329E  2A05               	incf	??___xxtofl^0,f,c
  9686   0032A0  0E00               	movlw	0
  9687   0032A2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9688   0032A4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9689   0032A6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9690   0032A8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9691   0032AC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9692   0032B0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9693   0032B4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9694   0032B8  EF66  F019         	goto	l4118
  9695   0032BC                     l1323:
  9696   0032BC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9697   0032C0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9698   0032C4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9699   0032C8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9700   0032CC                     l4118:
  9701   0032CC  5001               	movf	___xxtofl@val^0,w,c
  9702   0032CE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9703   0032D0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9704   0032D2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9705   0032D4  A4D8               	btfss	status,2,c
  9706   0032D6  EF6F  F019         	goto	u3781
  9707   0032DA  EF71  F019         	goto	u3780
  9708   0032DE                     u3781:
  9709   0032DE  EF7B  F019         	goto	l4124
  9710   0032E2                     u3780:
  9711   0032E2  0E00               	movlw	0
  9712   0032E4  6E01               	movwf	?___xxtofl^0,c
  9713   0032E6  0E00               	movlw	0
  9714   0032E8  6E02               	movwf	(?___xxtofl+1)^0,c
  9715   0032EA  0E00               	movlw	0
  9716   0032EC  6E03               	movwf	(?___xxtofl+2)^0,c
  9717   0032EE  0E00               	movlw	0
  9718   0032F0  6E04               	movwf	(?___xxtofl+3)^0,c
  9719   0032F2  EF0C  F01A         	goto	l1326
  9720   0032F6                     l4124:
  9721   0032F6  0E96               	movlw	150
  9722   0032F8  6E0A               	movwf	___xxtofl@exp^0,c
  9723   0032FA  EF85  F019         	goto	l4128
  9724   0032FE                     l4126:
  9725   0032FE  2A0A               	incf	___xxtofl@exp^0,f,c
  9726   003300  90D8               	bcf	status,0,c
  9727   003302  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9728   003304  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9729   003306  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9730   003308  320B               	rrcf	___xxtofl@arg^0,f,c
  9731   00330A                     l4128:
  9732   00330A  0E00               	movlw	0
  9733   00330C  140B               	andwf	___xxtofl@arg^0,w,c
  9734   00330E  6E05               	movwf	??___xxtofl^0,c
  9735   003310  0E00               	movlw	0
  9736   003312  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9737   003314  6E06               	movwf	(??___xxtofl+1)^0,c
  9738   003316  0E00               	movlw	0
  9739   003318  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9740   00331A  6E07               	movwf	(??___xxtofl+2)^0,c
  9741   00331C  0EFE               	movlw	254
  9742   00331E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9743   003320  6E08               	movwf	(??___xxtofl+3)^0,c
  9744   003322  5005               	movf	??___xxtofl^0,w,c
  9745   003324  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9746   003326  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9747   003328  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9748   00332A  A4D8               	btfss	status,2,c
  9749   00332C  EF9A  F019         	goto	u3791
  9750   003330  EF9C  F019         	goto	u3790
  9751   003334                     u3791:
  9752   003334  EF7F  F019         	goto	l4126
  9753   003338                     u3790:
  9754   003338  EFAA  F019         	goto	l1330
  9755   00333C                     l4130:
  9756   00333C  2A0A               	incf	___xxtofl@exp^0,f,c
  9757   00333E  0E01               	movlw	1
  9758   003340  260B               	addwf	___xxtofl@arg^0,f,c
  9759   003342  0E00               	movlw	0
  9760   003344  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9761   003346  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9762   003348  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9763   00334A  90D8               	bcf	status,0,c
  9764   00334C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9765   00334E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9766   003350  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9767   003352  320B               	rrcf	___xxtofl@arg^0,f,c
  9768   003354                     l1330:
  9769   003354  0E00               	movlw	0
  9770   003356  140B               	andwf	___xxtofl@arg^0,w,c
  9771   003358  6E05               	movwf	??___xxtofl^0,c
  9772   00335A  0E00               	movlw	0
  9773   00335C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9774   00335E  6E06               	movwf	(??___xxtofl+1)^0,c
  9775   003360  0E00               	movlw	0
  9776   003362  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9777   003364  6E07               	movwf	(??___xxtofl+2)^0,c
  9778   003366  0EFF               	movlw	255
  9779   003368  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9780   00336A  6E08               	movwf	(??___xxtofl+3)^0,c
  9781   00336C  5005               	movf	??___xxtofl^0,w,c
  9782   00336E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9783   003370  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9784   003372  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9785   003374  A4D8               	btfss	status,2,c
  9786   003376  EFBF  F019         	goto	u3801
  9787   00337A  EFC1  F019         	goto	u3800
  9788   00337E                     u3801:
  9789   00337E  EF9E  F019         	goto	l4130
  9790   003382                     u3800:
  9791   003382  EFC9  F019         	goto	l4138
  9792   003386                     l4136:
  9793   003386  060A               	decf	___xxtofl@exp^0,f,c
  9794   003388  90D8               	bcf	status,0,c
  9795   00338A  360B               	rlcf	___xxtofl@arg^0,f,c
  9796   00338C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9797   00338E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9798   003390  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9799   003392                     l4138:
  9800   003392  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9801   003394  EFCE  F019         	goto	u3811
  9802   003398  EFD0  F019         	goto	u3810
  9803   00339C                     u3811:
  9804   00339C  EFD8  F019         	goto	l1337
  9805   0033A0                     u3810:
  9806   0033A0  0E02               	movlw	2
  9807   0033A2  600A               	cpfslt	___xxtofl@exp^0,c
  9808   0033A4  EFD6  F019         	goto	u3821
  9809   0033A8  EFD8  F019         	goto	u3820
  9810   0033AC                     u3821:
  9811   0033AC  EFC3  F019         	goto	l4136
  9812   0033B0                     u3820:
  9813   0033B0                     l1337:
  9814   0033B0  B00A               	btfsc	___xxtofl@exp^0,0,c
  9815   0033B2  EFDD  F019         	goto	u3831
  9816   0033B6  EFDF  F019         	goto	u3830
  9817   0033BA                     u3831:
  9818   0033BA  EFE0  F019         	goto	l4144
  9819   0033BE                     u3830:
  9820   0033BE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9821   0033C0                     l4144:
  9822   0033C0  90D8               	bcf	status,0,c
  9823   0033C2  320A               	rrcf	___xxtofl@exp^0,f,c
  9824   0033C4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9825   0033C8  6A06               	clrf	(??___xxtofl+1)^0,c
  9826   0033CA  6A07               	clrf	(??___xxtofl+2)^0,c
  9827   0033CC  6A08               	clrf	(??___xxtofl+3)^0,c
  9828   0033CE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9829   0033D2  6A07               	clrf	(??___xxtofl+2)^0,c
  9830   0033D4  6A06               	clrf	(??___xxtofl+1)^0,c
  9831   0033D6  6A05               	clrf	??___xxtofl^0,c
  9832   0033D8  5005               	movf	??___xxtofl^0,w,c
  9833   0033DA  120B               	iorwf	___xxtofl@arg^0,f,c
  9834   0033DC  5006               	movf	(??___xxtofl+1)^0,w,c
  9835   0033DE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9836   0033E0  5007               	movf	(??___xxtofl+2)^0,w,c
  9837   0033E2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9838   0033E4  5008               	movf	(??___xxtofl+3)^0,w,c
  9839   0033E6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9840   0033E8  5009               	movf	___xxtofl@sign^0,w,c
  9841   0033EA  B4D8               	btfsc	status,2,c
  9842   0033EC  EFFA  F019         	goto	u3841
  9843   0033F0  EFFC  F019         	goto	u3840
  9844   0033F4                     u3841:
  9845   0033F4  EF04  F01A         	goto	l4154
  9846   0033F8                     u3840:
  9847   0033F8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9848   0033FA  EF03  F01A         	goto	u3850
  9849   0033FE  EF01  F01A         	goto	u3851
  9850   003402                     u3851:
  9851   003402  EF04  F01A         	goto	l4154
  9852   003406                     u3850:
  9853   003406  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9854   003408                     l4154:
  9855   003408  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9856   00340C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9857   003410  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9858   003414  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9859   003418                     l1326:
  9860   003418  0012               	return		;funcret
  9861   00341A                     __end_of___xxtofl:
  9862                           	callstack 0
  9863                           
  9864 ;; *************** function ___flsub *****************
  9865 ;; Defined at:
  9866 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  b               4   16[COMRAM] unsigned char 
  9869 ;;  a               4   20[COMRAM] unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  4   16[COMRAM] unsigned char 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9881 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9884 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9885 ;;Total ram usage:        8 bytes
  9886 ;; Hardware stack levels used: 1
  9887 ;; Hardware stack levels required when called: 2
  9888 ;; This function calls:
  9889 ;;		___fladd
  9890 ;; This function is called by:
  9891 ;;		_Colour_decider
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text63
  9896   004898                     __ptext63:
  9897                           	callstack 0
  9898   004898                     ___flsub:
  9899                           	callstack 27
  9900   004898  0E00               	movlw	0
  9901   00489A  1A15               	xorwf	___flsub@a^0,f,c
  9902   00489C  0E00               	movlw	0
  9903   00489E  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9904   0048A0  0E00               	movlw	0
  9905   0048A2  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9906   0048A4  0E80               	movlw	128
  9907   0048A6  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9908   0048A8  C011  F001         	movff	___flsub@b,___fladd@b
  9909   0048AC  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9910   0048B0  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9911   0048B4  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9912   0048B8  C015  F005         	movff	___flsub@a,___fladd@a
  9913   0048BC  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9914   0048C0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9915   0048C4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9916   0048C8  EC0B  F00F         	call	___fladd	;wreg free
  9917   0048CC  C001  F011         	movff	?___fladd,?___flsub
  9918   0048D0  C002  F012         	movff	?___fladd+1,?___flsub+1
  9919   0048D4  C003  F013         	movff	?___fladd+2,?___flsub+2
  9920   0048D8  C004  F014         	movff	?___fladd+3,?___flsub+3
  9921   0048DC  0012               	return		;funcret
  9922   0048DE                     __end_of___flsub:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function ___fladd *****************
  9926 ;; Defined at:
  9927 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  b               4    0[COMRAM] unsigned char 
  9930 ;;  a               4    4[COMRAM] unsigned char 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  grs             1   15[COMRAM] unsigned char 
  9933 ;;  bexp            1   14[COMRAM] unsigned char 
  9934 ;;  aexp            1   13[COMRAM] unsigned char 
  9935 ;;  signs           1   12[COMRAM] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  4    0[COMRAM] unsigned char 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;Total ram usage:       16 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; Hardware stack levels required when called: 1
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_colour_rel
  9956 ;;		_Colour_decider
  9957 ;;		___flsub
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text64
  9962   001E16                     __ptext64:
  9963                           	callstack 0
  9964   001E16                     ___fladd:
  9965                           	callstack 28
  9966   001E16  5004               	movf	(___fladd@b+3)^0,w,c
  9967   001E18  0B80               	andlw	128
  9968   001E1A  6E0D               	movwf	___fladd@signs^0,c
  9969   001E1C  5004               	movf	(___fladd@b+3)^0,w,c
  9970   001E1E  2404               	addwf	(___fladd@b+3)^0,w,c
  9971   001E20  6E0F               	movwf	___fladd@bexp^0,c
  9972   001E22  AE03               	btfss	(___fladd@b+2)^0,7,c
  9973   001E24  EF16  F00F         	goto	u2811
  9974   001E28  EF18  F00F         	goto	u2810
  9975   001E2C                     u2811:
  9976   001E2C  EF19  F00F         	goto	l3496
  9977   001E30                     u2810:
  9978   001E30  800F               	bsf	___fladd@bexp^0,0,c
  9979   001E32                     l3496:
  9980   001E32  500F               	movf	___fladd@bexp^0,w,c
  9981   001E34  B4D8               	btfsc	status,2,c
  9982   001E36  EF1F  F00F         	goto	u2821
  9983   001E3A  EF21  F00F         	goto	u2820
  9984   001E3E                     u2821:
  9985   001E3E  EF36  F00F         	goto	l3506
  9986   001E42                     u2820:
  9987   001E42  280F               	incf	___fladd@bexp^0,w,c
  9988   001E44  A4D8               	btfss	status,2,c
  9989   001E46  EF27  F00F         	goto	u2831
  9990   001E4A  EF29  F00F         	goto	u2830
  9991   001E4E                     u2831:
  9992   001E4E  EF31  F00F         	goto	l3502
  9993   001E52                     u2830:
  9994   001E52  0E00               	movlw	0
  9995   001E54  6E01               	movwf	___fladd@b^0,c
  9996   001E56  0E00               	movlw	0
  9997   001E58  6E02               	movwf	(___fladd@b+1)^0,c
  9998   001E5A  0E00               	movlw	0
  9999   001E5C  6E03               	movwf	(___fladd@b+2)^0,c
 10000   001E5E  0E00               	movlw	0
 10001   001E60  6E04               	movwf	(___fladd@b+3)^0,c
 10002   001E62                     l3502:
 10003   001E62  8E03               	bsf	(___fladd@b+2)^0,7,c
 10004   001E64  0E00               	movlw	0
 10005   001E66  6E04               	movwf	(___fladd@b+3)^0,c
 10006   001E68  EF3E  F00F         	goto	l3508
 10007   001E6C                     l3506:
 10008   001E6C  0E00               	movlw	0
 10009   001E6E  6E01               	movwf	___fladd@b^0,c
 10010   001E70  0E00               	movlw	0
 10011   001E72  6E02               	movwf	(___fladd@b+1)^0,c
 10012   001E74  0E00               	movlw	0
 10013   001E76  6E03               	movwf	(___fladd@b+2)^0,c
 10014   001E78  0E00               	movlw	0
 10015   001E7A  6E04               	movwf	(___fladd@b+3)^0,c
 10016   001E7C                     l3508:
 10017   001E7C  5008               	movf	(___fladd@a+3)^0,w,c
 10018   001E7E  0B80               	andlw	128
 10019   001E80  6E0E               	movwf	___fladd@aexp^0,c
 10020   001E82  500D               	movf	___fladd@signs^0,w,c
 10021   001E84  180E               	xorwf	___fladd@aexp^0,w,c
 10022   001E86  B4D8               	btfsc	status,2,c
 10023   001E88  EF48  F00F         	goto	u2841
 10024   001E8C  EF4A  F00F         	goto	u2840
 10025   001E90                     u2841:
 10026   001E90  EF4B  F00F         	goto	l3514
 10027   001E94                     u2840:
 10028   001E94  8C0D               	bsf	___fladd@signs^0,6,c
 10029   001E96                     l3514:
 10030   001E96  5008               	movf	(___fladd@a+3)^0,w,c
 10031   001E98  2408               	addwf	(___fladd@a+3)^0,w,c
 10032   001E9A  6E0E               	movwf	___fladd@aexp^0,c
 10033   001E9C  AE07               	btfss	(___fladd@a+2)^0,7,c
 10034   001E9E  EF53  F00F         	goto	u2851
 10035   001EA2  EF55  F00F         	goto	u2850
 10036   001EA6                     u2851:
 10037   001EA6  EF56  F00F         	goto	l3520
 10038   001EAA                     u2850:
 10039   001EAA  800E               	bsf	___fladd@aexp^0,0,c
 10040   001EAC                     l3520:
 10041   001EAC  500E               	movf	___fladd@aexp^0,w,c
 10042   001EAE  B4D8               	btfsc	status,2,c
 10043   001EB0  EF5C  F00F         	goto	u2861
 10044   001EB4  EF5E  F00F         	goto	u2860
 10045   001EB8                     u2861:
 10046   001EB8  EF73  F00F         	goto	l3530
 10047   001EBC                     u2860:
 10048   001EBC  280E               	incf	___fladd@aexp^0,w,c
 10049   001EBE  A4D8               	btfss	status,2,c
 10050   001EC0  EF64  F00F         	goto	u2871
 10051   001EC4  EF66  F00F         	goto	u2870
 10052   001EC8                     u2871:
 10053   001EC8  EF6E  F00F         	goto	l3526
 10054   001ECC                     u2870:
 10055   001ECC  0E00               	movlw	0
 10056   001ECE  6E05               	movwf	___fladd@a^0,c
 10057   001ED0  0E00               	movlw	0
 10058   001ED2  6E06               	movwf	(___fladd@a+1)^0,c
 10059   001ED4  0E00               	movlw	0
 10060   001ED6  6E07               	movwf	(___fladd@a+2)^0,c
 10061   001ED8  0E00               	movlw	0
 10062   001EDA  6E08               	movwf	(___fladd@a+3)^0,c
 10063   001EDC                     l3526:
 10064   001EDC  8E07               	bsf	(___fladd@a+2)^0,7,c
 10065   001EDE  0E00               	movlw	0
 10066   001EE0  6E08               	movwf	(___fladd@a+3)^0,c
 10067   001EE2  EF7B  F00F         	goto	l3532
 10068   001EE6                     l3530:
 10069   001EE6  0E00               	movlw	0
 10070   001EE8  6E05               	movwf	___fladd@a^0,c
 10071   001EEA  0E00               	movlw	0
 10072   001EEC  6E06               	movwf	(___fladd@a+1)^0,c
 10073   001EEE  0E00               	movlw	0
 10074   001EF0  6E07               	movwf	(___fladd@a+2)^0,c
 10075   001EF2  0E00               	movlw	0
 10076   001EF4  6E08               	movwf	(___fladd@a+3)^0,c
 10077   001EF6                     l3532:
 10078   001EF6  500F               	movf	___fladd@bexp^0,w,c
 10079   001EF8  5C0E               	subwf	___fladd@aexp^0,w,c
 10080   001EFA  B0D8               	btfsc	status,0,c
 10081   001EFC  EF82  F00F         	goto	u2881
 10082   001F00  EF84  F00F         	goto	u2880
 10083   001F04                     u2881:
 10084   001F04  EFAB  F00F         	goto	l3568
 10085   001F08                     u2880:
 10086   001F08  AC0D               	btfss	___fladd@signs^0,6,c
 10087   001F0A  EF89  F00F         	goto	u2891
 10088   001F0E  EF8B  F00F         	goto	u2890
 10089   001F12                     u2891:
 10090   001F12  EF8D  F00F         	goto	l3538
 10091   001F16                     u2890:
 10092   001F16  0E80               	movlw	128
 10093   001F18  1A0D               	xorwf	___fladd@signs^0,f,c
 10094   001F1A                     l3538:
 10095   001F1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10096   001F1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10097   001F22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10098   001F26  C001  F010         	movff	___fladd@b,___fladd@grs
 10099   001F2A  C005  F001         	movff	___fladd@a,___fladd@b
 10100   001F2E  C010  F005         	movff	___fladd@grs,___fladd@a
 10101   001F32  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10102   001F36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10103   001F3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10104   001F3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10105   001F42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10106   001F46  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10107   001F4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10108   001F4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10109   001F52  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10110   001F56                     l3568:
 10111   001F56  0E00               	movlw	0
 10112   001F58  6E10               	movwf	___fladd@grs^0,c
 10113   001F5A  500F               	movf	___fladd@bexp^0,w,c
 10114   001F5C  C00E  F009         	movff	___fladd@aexp,??___fladd
 10115   001F60  6A0A               	clrf	(??___fladd+1)^0,c
 10116   001F62  5E09               	subwf	??___fladd^0,f,c
 10117   001F64  0E00               	movlw	0
 10118   001F66  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10119   001F68  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10120   001F6A  EFC0  F00F         	goto	u2901
 10121   001F6E  500A               	movf	(??___fladd+1)^0,w,c
 10122   001F70  E109               	bnz	u2900
 10123   001F72  0E1A               	movlw	26
 10124   001F74  5C09               	subwf	??___fladd^0,w,c
 10125   001F76  A0D8               	btfss	status,0,c
 10126   001F78  EFC0  F00F         	goto	u2901
 10127   001F7C  EFC2  F00F         	goto	u2900
 10128   001F80                     u2901:
 10129   001F80  EFF9  F00F         	goto	l1197
 10130   001F84                     u2900:
 10131   001F84  5001               	movf	___fladd@b^0,w,c
 10132   001F86  1002               	iorwf	(___fladd@b+1)^0,w,c
 10133   001F88  1003               	iorwf	(___fladd@b+2)^0,w,c
 10134   001F8A  1004               	iorwf	(___fladd@b+3)^0,w,c
 10135   001F8C  A4D8               	btfss	status,2,c
 10136   001F8E  EFCB  F00F         	goto	u2911
 10137   001F92  EFCE  F00F         	goto	u2910
 10138   001F96                     u2911:
 10139   001F96  0E01               	movlw	1
 10140   001F98  EFCF  F00F         	goto	u2920
 10141   001F9C                     u2910:
 10142   001F9C  0E00               	movlw	0
 10143   001F9E                     u2920:
 10144   001F9E  6E10               	movwf	___fladd@grs^0,c
 10145   001FA0  0E00               	movlw	0
 10146   001FA2  6E01               	movwf	___fladd@b^0,c
 10147   001FA4  0E00               	movlw	0
 10148   001FA6  6E02               	movwf	(___fladd@b+1)^0,c
 10149   001FA8  0E00               	movlw	0
 10150   001FAA  6E03               	movwf	(___fladd@b+2)^0,c
 10151   001FAC  0E00               	movlw	0
 10152   001FAE  6E04               	movwf	(___fladd@b+3)^0,c
 10153   001FB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10154   001FB4  EF02  F010         	goto	l1196
 10155   001FB8                     l1198:
 10156   001FB8  A010               	btfss	___fladd@grs^0,0,c
 10157   001FBA  EFE1  F00F         	goto	u2931
 10158   001FBE  EFE3  F00F         	goto	u2930
 10159   001FC2                     u2931:
 10160   001FC2  EFE9  F00F         	goto	l3580
 10161   001FC6                     u2930:
 10162   001FC6  90D8               	bcf	status,0,c
 10163   001FC8  3010               	rrcf	___fladd@grs^0,w,c
 10164   001FCA  0901               	iorlw	1
 10165   001FCC  6E10               	movwf	___fladd@grs^0,c
 10166   001FCE  EFEB  F00F         	goto	l3582
 10167   001FD2                     l3580:
 10168   001FD2  90D8               	bcf	status,0,c
 10169   001FD4  3210               	rrcf	___fladd@grs^0,f,c
 10170   001FD6                     l3582:
 10171   001FD6  A001               	btfss	___fladd@b^0,0,c
 10172   001FD8  EFF0  F00F         	goto	u2941
 10173   001FDC  EFF2  F00F         	goto	u2940
 10174   001FE0                     u2941:
 10175   001FE0  EFF3  F00F         	goto	l3586
 10176   001FE4                     u2940:
 10177   001FE4  8E10               	bsf	___fladd@grs^0,7,c
 10178   001FE6                     l3586:
 10179   001FE6  3404               	rlcf	(___fladd@b+3)^0,w,c
 10180   001FE8  3204               	rrcf	(___fladd@b+3)^0,f,c
 10181   001FEA  3203               	rrcf	(___fladd@b+2)^0,f,c
 10182   001FEC  3202               	rrcf	(___fladd@b+1)^0,f,c
 10183   001FEE  3201               	rrcf	___fladd@b^0,f,c
 10184   001FF0  2A0F               	incf	___fladd@bexp^0,f,c
 10185   001FF2                     l1197:
 10186   001FF2  500E               	movf	___fladd@aexp^0,w,c
 10187   001FF4  5C0F               	subwf	___fladd@bexp^0,w,c
 10188   001FF6  A0D8               	btfss	status,0,c
 10189   001FF8  EF00  F010         	goto	u2951
 10190   001FFC  EF02  F010         	goto	u2950
 10191   002000                     u2951:
 10192   002000  EFDC  F00F         	goto	l1198
 10193   002004                     u2950:
 10194   002004                     l1196:
 10195   002004  BC0D               	btfsc	___fladd@signs^0,6,c
 10196   002006  EF07  F010         	goto	u2961
 10197   00200A  EF09  F010         	goto	u2960
 10198   00200E                     u2961:
 10199   00200E  EF49  F010         	goto	l3614
 10200   002012                     u2960:
 10201   002012  500F               	movf	___fladd@bexp^0,w,c
 10202   002014  A4D8               	btfss	status,2,c
 10203   002016  EF0F  F010         	goto	u2971
 10204   00201A  EF11  F010         	goto	u2970
 10205   00201E                     u2971:
 10206   00201E  EF1B  F010         	goto	l3596
 10207   002022                     u2970:
 10208   002022  0E00               	movlw	0
 10209   002024  6E01               	movwf	?___fladd^0,c
 10210   002026  0E00               	movlw	0
 10211   002028  6E02               	movwf	(?___fladd+1)^0,c
 10212   00202A  0E00               	movlw	0
 10213   00202C  6E03               	movwf	(?___fladd+2)^0,c
 10214   00202E  0E00               	movlw	0
 10215   002030  6E04               	movwf	(?___fladd+3)^0,c
 10216   002032  EF6A  F011         	goto	l1205
 10217   002036                     l3596:
 10218   002036  5005               	movf	___fladd@a^0,w,c
 10219   002038  2601               	addwf	___fladd@b^0,f,c
 10220   00203A  5006               	movf	(___fladd@a+1)^0,w,c
 10221   00203C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10222   00203E  5007               	movf	(___fladd@a+2)^0,w,c
 10223   002040  2203               	addwfc	(___fladd@b+2)^0,f,c
 10224   002042  5008               	movf	(___fladd@a+3)^0,w,c
 10225   002044  2204               	addwfc	(___fladd@b+3)^0,f,c
 10226   002046  A004               	btfss	(___fladd@b+3)^0,0,c
 10227   002048  EF28  F010         	goto	u2981
 10228   00204C  EF2A  F010         	goto	u2980
 10229   002050                     u2981:
 10230   002050  EFD6  F010         	goto	l3650
 10231   002054                     u2980:
 10232   002054  A010               	btfss	___fladd@grs^0,0,c
 10233   002056  EF2F  F010         	goto	u2991
 10234   00205A  EF31  F010         	goto	u2990
 10235   00205E                     u2991:
 10236   00205E  EF37  F010         	goto	l3604
 10237   002062                     u2990:
 10238   002062  90D8               	bcf	status,0,c
 10239   002064  3010               	rrcf	___fladd@grs^0,w,c
 10240   002066  0901               	iorlw	1
 10241   002068  6E10               	movwf	___fladd@grs^0,c
 10242   00206A  EF39  F010         	goto	l3606
 10243   00206E                     l3604:
 10244   00206E  90D8               	bcf	status,0,c
 10245   002070  3210               	rrcf	___fladd@grs^0,f,c
 10246   002072                     l3606:
 10247   002072  A001               	btfss	___fladd@b^0,0,c
 10248   002074  EF3E  F010         	goto	u3001
 10249   002078  EF40  F010         	goto	u3000
 10250   00207C                     u3001:
 10251   00207C  EF41  F010         	goto	l3610
 10252   002080                     u3000:
 10253   002080  8E10               	bsf	___fladd@grs^0,7,c
 10254   002082                     l3610:
 10255   002082  3404               	rlcf	(___fladd@b+3)^0,w,c
 10256   002084  3204               	rrcf	(___fladd@b+3)^0,f,c
 10257   002086  3203               	rrcf	(___fladd@b+2)^0,f,c
 10258   002088  3202               	rrcf	(___fladd@b+1)^0,f,c
 10259   00208A  3201               	rrcf	___fladd@b^0,f,c
 10260   00208C  2A0F               	incf	___fladd@bexp^0,f,c
 10261   00208E  EFD6  F010         	goto	l3650
 10262   002092                     l3614:
 10263   002092  5005               	movf	___fladd@a^0,w,c
 10264   002094  5C01               	subwf	___fladd@b^0,w,c
 10265   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10266   002098  5802               	subwfb	(___fladd@b+1)^0,w,c
 10267   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10268   00209C  5803               	subwfb	(___fladd@b+2)^0,w,c
 10269   00209E  5004               	movf	(___fladd@b+3)^0,w,c
 10270   0020A0  0A80               	xorlw	128
 10271   0020A2  6E09               	movwf	??___fladd^0,c
 10272   0020A4  5008               	movf	(___fladd@a+3)^0,w,c
 10273   0020A6  0A80               	xorlw	128
 10274   0020A8  5809               	subwfb	??___fladd^0,w,c
 10275   0020AA  B0D8               	btfsc	status,0,c
 10276   0020AC  EF5A  F010         	goto	u3011
 10277   0020B0  EF5C  F010         	goto	u3010
 10278   0020B4                     u3011:
 10279   0020B4  EF87  F010         	goto	l3624
 10280   0020B8                     u3010:
 10281   0020B8  5001               	movf	___fladd@b^0,w,c
 10282   0020BA  5C05               	subwf	___fladd@a^0,w,c
 10283   0020BC  6E09               	movwf	??___fladd^0,c
 10284   0020BE  5002               	movf	(___fladd@b+1)^0,w,c
 10285   0020C0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10286   0020C2  6E0A               	movwf	(??___fladd+1)^0,c
 10287   0020C4  5003               	movf	(___fladd@b+2)^0,w,c
 10288   0020C6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10289   0020C8  6E0B               	movwf	(??___fladd+2)^0,c
 10290   0020CA  5004               	movf	(___fladd@b+3)^0,w,c
 10291   0020CC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10292   0020CE  6E0C               	movwf	(??___fladd+3)^0,c
 10293   0020D0  0EFF               	movlw	255
 10294   0020D2  2409               	addwf	??___fladd^0,w,c
 10295   0020D4  6E01               	movwf	___fladd@b^0,c
 10296   0020D6  0EFF               	movlw	255
 10297   0020D8  200A               	addwfc	(??___fladd+1)^0,w,c
 10298   0020DA  6E02               	movwf	(___fladd@b+1)^0,c
 10299   0020DC  0EFF               	movlw	255
 10300   0020DE  200B               	addwfc	(??___fladd+2)^0,w,c
 10301   0020E0  6E03               	movwf	(___fladd@b+2)^0,c
 10302   0020E2  0EFF               	movlw	255
 10303   0020E4  200C               	addwfc	(??___fladd+3)^0,w,c
 10304   0020E6  6E04               	movwf	(___fladd@b+3)^0,c
 10305   0020E8  0E80               	movlw	128
 10306   0020EA  1A0D               	xorwf	___fladd@signs^0,f,c
 10307   0020EC  6C10               	negf	___fladd@grs^0,c
 10308   0020EE  5010               	movf	___fladd@grs^0,w,c
 10309   0020F0  A4D8               	btfss	status,2,c
 10310   0020F2  EF7D  F010         	goto	u3021
 10311   0020F6  EF7F  F010         	goto	u3020
 10312   0020FA                     u3021:
 10313   0020FA  EF8F  F010         	goto	l1213
 10314   0020FE                     u3020:
 10315   0020FE  0E01               	movlw	1
 10316   002100  2601               	addwf	___fladd@b^0,f,c
 10317   002102  0E00               	movlw	0
 10318   002104  2202               	addwfc	(___fladd@b+1)^0,f,c
 10319   002106  2203               	addwfc	(___fladd@b+2)^0,f,c
 10320   002108  2204               	addwfc	(___fladd@b+3)^0,f,c
 10321   00210A  EF8F  F010         	goto	l1213
 10322   00210E                     l3624:
 10323   00210E  5005               	movf	___fladd@a^0,w,c
 10324   002110  5E01               	subwf	___fladd@b^0,f,c
 10325   002112  5006               	movf	(___fladd@a+1)^0,w,c
 10326   002114  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10327   002116  5007               	movf	(___fladd@a+2)^0,w,c
 10328   002118  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10329   00211A  5008               	movf	(___fladd@a+3)^0,w,c
 10330   00211C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10331   00211E                     l1213:
 10332   00211E  5001               	movf	___fladd@b^0,w,c
 10333   002120  1002               	iorwf	(___fladd@b+1)^0,w,c
 10334   002122  1003               	iorwf	(___fladd@b+2)^0,w,c
 10335   002124  1004               	iorwf	(___fladd@b+3)^0,w,c
 10336   002126  A4D8               	btfss	status,2,c
 10337   002128  EF98  F010         	goto	u3031
 10338   00212C  EF9A  F010         	goto	u3030
 10339   002130                     u3031:
 10340   002130  EFCF  F010         	goto	l3648
 10341   002134                     u3030:
 10342   002134  5010               	movf	___fladd@grs^0,w,c
 10343   002136  A4D8               	btfss	status,2,c
 10344   002138  EFA0  F010         	goto	u3041
 10345   00213C  EFA2  F010         	goto	u3040
 10346   002140                     u3041:
 10347   002140  EFCF  F010         	goto	l3648
 10348   002144                     u3040:
 10349   002144  0E00               	movlw	0
 10350   002146  6E01               	movwf	?___fladd^0,c
 10351   002148  0E00               	movlw	0
 10352   00214A  6E02               	movwf	(?___fladd+1)^0,c
 10353   00214C  0E00               	movlw	0
 10354   00214E  6E03               	movwf	(?___fladd+2)^0,c
 10355   002150  0E00               	movlw	0
 10356   002152  6E04               	movwf	(?___fladd+3)^0,c
 10357   002154  EF6A  F011         	goto	l1205
 10358   002158                     l3632:
 10359   002158  90D8               	bcf	status,0,c
 10360   00215A  3601               	rlcf	___fladd@b^0,f,c
 10361   00215C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10362   00215E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10363   002160  3604               	rlcf	(___fladd@b+3)^0,f,c
 10364   002162  AE10               	btfss	___fladd@grs^0,7,c
 10365   002164  EFB6  F010         	goto	u3051
 10366   002168  EFB8  F010         	goto	u3050
 10367   00216C                     u3051:
 10368   00216C  EFB9  F010         	goto	l3638
 10369   002170                     u3050:
 10370   002170  8001               	bsf	___fladd@b^0,0,c
 10371   002172                     l3638:
 10372   002172  A010               	btfss	___fladd@grs^0,0,c
 10373   002174  EFBE  F010         	goto	u3061
 10374   002178  EFC0  F010         	goto	u3060
 10375   00217C                     u3061:
 10376   00217C  EFC4  F010         	goto	l3642
 10377   002180                     u3060:
 10378   002180  80D8               	bsf	status,0,c
 10379   002182  3610               	rlcf	___fladd@grs^0,f,c
 10380   002184  EFC6  F010         	goto	l3644
 10381   002188                     l3642:
 10382   002188  90D8               	bcf	status,0,c
 10383   00218A  3610               	rlcf	___fladd@grs^0,f,c
 10384   00218C                     l3644:
 10385   00218C  500F               	movf	___fladd@bexp^0,w,c
 10386   00218E  B4D8               	btfsc	status,2,c
 10387   002190  EFCC  F010         	goto	u3071
 10388   002194  EFCE  F010         	goto	u3070
 10389   002198                     u3071:
 10390   002198  EFCF  F010         	goto	l3648
 10391   00219C                     u3070:
 10392   00219C  060F               	decf	___fladd@bexp^0,f,c
 10393   00219E                     l3648:
 10394   00219E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10395   0021A0  EFD4  F010         	goto	u3081
 10396   0021A4  EFD6  F010         	goto	u3080
 10397   0021A8                     u3081:
 10398   0021A8  EFAC  F010         	goto	l3632
 10399   0021AC                     u3080:
 10400   0021AC                     l3650:
 10401   0021AC  0E00               	movlw	0
 10402   0021AE  6E0E               	movwf	___fladd@aexp^0,c
 10403   0021B0  AE10               	btfss	___fladd@grs^0,7,c
 10404   0021B2  EFDD  F010         	goto	u3091
 10405   0021B6  EFDF  F010         	goto	u3090
 10406   0021BA                     u3091:
 10407   0021BA  EFF7  F010         	goto	l1222
 10408   0021BE                     u3090:
 10409   0021BE  C010  F009         	movff	___fladd@grs,??___fladd
 10410   0021C2  0E7F               	movlw	127
 10411   0021C4  1609               	andwf	??___fladd^0,f,c
 10412   0021C6  B4D8               	btfsc	status,2,c
 10413   0021C8  EFE8  F010         	goto	u3101
 10414   0021CC  EFEA  F010         	goto	u3100
 10415   0021D0                     u3101:
 10416   0021D0  EFEE  F010         	goto	l1223
 10417   0021D4                     u3100:
 10418   0021D4                     l3656:
 10419   0021D4  0E01               	movlw	1
 10420   0021D6  6E0E               	movwf	___fladd@aexp^0,c
 10421   0021D8  EFF7  F010         	goto	l1222
 10422   0021DC                     l1223:
 10423   0021DC  A001               	btfss	___fladd@b^0,0,c
 10424   0021DE  EFF3  F010         	goto	u3111
 10425   0021E2  EFF5  F010         	goto	u3110
 10426   0021E6                     u3111:
 10427   0021E6  EFF7  F010         	goto	l1222
 10428   0021EA                     u3110:
 10429   0021EA  EFEA  F010         	goto	l3656
 10430   0021EE                     l1222:
 10431   0021EE  500E               	movf	___fladd@aexp^0,w,c
 10432   0021F0  B4D8               	btfsc	status,2,c
 10433   0021F2  EFFD  F010         	goto	u3121
 10434   0021F6  EFFF  F010         	goto	u3120
 10435   0021FA                     u3121:
 10436   0021FA  EF2A  F011         	goto	l3668
 10437   0021FE                     u3120:
 10438   0021FE  0E01               	movlw	1
 10439   002200  2601               	addwf	___fladd@b^0,f,c
 10440   002202  0E00               	movlw	0
 10441   002204  2202               	addwfc	(___fladd@b+1)^0,f,c
 10442   002206  2203               	addwfc	(___fladd@b+2)^0,f,c
 10443   002208  2204               	addwfc	(___fladd@b+3)^0,f,c
 10444   00220A  A004               	btfss	(___fladd@b+3)^0,0,c
 10445   00220C  EF0A  F011         	goto	u3131
 10446   002210  EF0C  F011         	goto	u3130
 10447   002214                     u3131:
 10448   002214  EF2A  F011         	goto	l3668
 10449   002218                     u3130:
 10450   002218  C001  F009         	movff	___fladd@b,??___fladd
 10451   00221C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10452   002220  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10453   002224  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10454   002228  340C               	rlcf	(??___fladd+3)^0,w,c
 10455   00222A  320C               	rrcf	(??___fladd+3)^0,f,c
 10456   00222C  320B               	rrcf	(??___fladd+2)^0,f,c
 10457   00222E  320A               	rrcf	(??___fladd+1)^0,f,c
 10458   002230  3209               	rrcf	??___fladd^0,f,c
 10459   002232  C009  F001         	movff	??___fladd,___fladd@b
 10460   002236  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10461   00223A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10462   00223E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10463   002242  280F               	incf	___fladd@bexp^0,w,c
 10464   002244  B4D8               	btfsc	status,2,c
 10465   002246  EF27  F011         	goto	u3141
 10466   00224A  EF29  F011         	goto	u3140
 10467   00224E                     u3141:
 10468   00224E  EF2A  F011         	goto	l3668
 10469   002252                     u3140:
 10470   002252  2A0F               	incf	___fladd@bexp^0,f,c
 10471   002254                     l3668:
 10472   002254  280F               	incf	___fladd@bexp^0,w,c
 10473   002256  B4D8               	btfsc	status,2,c
 10474   002258  EF30  F011         	goto	u3151
 10475   00225C  EF32  F011         	goto	u3150
 10476   002260                     u3151:
 10477   002260  EF3A  F011         	goto	l3672
 10478   002264                     u3150:
 10479   002264  500F               	movf	___fladd@bexp^0,w,c
 10480   002266  A4D8               	btfss	status,2,c
 10481   002268  EF38  F011         	goto	u3161
 10482   00226C  EF3A  F011         	goto	u3160
 10483   002270                     u3161:
 10484   002270  EF4C  F011         	goto	l3676
 10485   002274                     u3160:
 10486   002274                     l3672:
 10487   002274  0E00               	movlw	0
 10488   002276  6E01               	movwf	___fladd@b^0,c
 10489   002278  0E00               	movlw	0
 10490   00227A  6E02               	movwf	(___fladd@b+1)^0,c
 10491   00227C  0E00               	movlw	0
 10492   00227E  6E03               	movwf	(___fladd@b+2)^0,c
 10493   002280  0E00               	movlw	0
 10494   002282  6E04               	movwf	(___fladd@b+3)^0,c
 10495   002284  500F               	movf	___fladd@bexp^0,w,c
 10496   002286  A4D8               	btfss	status,2,c
 10497   002288  EF48  F011         	goto	u3171
 10498   00228C  EF4A  F011         	goto	u3170
 10499   002290                     u3171:
 10500   002290  EF4C  F011         	goto	l3676
 10501   002294                     u3170:
 10502   002294  0E00               	movlw	0
 10503   002296  6E0D               	movwf	___fladd@signs^0,c
 10504   002298                     l3676:
 10505   002298  A00F               	btfss	___fladd@bexp^0,0,c
 10506   00229A  EF51  F011         	goto	u3181
 10507   00229E  EF53  F011         	goto	u3180
 10508   0022A2                     u3181:
 10509   0022A2  EF56  F011         	goto	l3680
 10510   0022A6                     u3180:
 10511   0022A6  8E03               	bsf	(___fladd@b+2)^0,7,c
 10512   0022A8  EF57  F011         	goto	l3682
 10513   0022AC                     l3680:
 10514   0022AC  9E03               	bcf	(___fladd@b+2)^0,7,c
 10515   0022AE                     l3682:
 10516   0022AE  90D8               	bcf	status,0,c
 10517   0022B0  300F               	rrcf	___fladd@bexp^0,w,c
 10518   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10519   0022B4  AE0D               	btfss	___fladd@signs^0,7,c
 10520   0022B6  EF5F  F011         	goto	u3191
 10521   0022BA  EF61  F011         	goto	u3190
 10522   0022BE                     u3191:
 10523   0022BE  EF62  F011         	goto	l3688
 10524   0022C2                     u3190:
 10525   0022C2  8E04               	bsf	(___fladd@b+3)^0,7,c
 10526   0022C4                     l3688:
 10527   0022C4  C001  F001         	movff	___fladd@b,?___fladd
 10528   0022C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10529   0022CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10530   0022D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10531   0022D4                     l1205:
 10532   0022D4  0012               	return		;funcret
 10533   0022D6                     __end_of___fladd:
 10534                           	callstack 0
 10535                           
 10536 ;; *************** function ___flmul *****************
 10537 ;; Defined at:
 10538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  b               4   49[COMRAM] unsigned char 
 10541 ;;  a               4   53[COMRAM] unsigned char 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;  prod            4   68[COMRAM] struct .
 10544 ;;  grs             4   62[COMRAM] unsigned long 
 10545 ;;  temp            2   72[COMRAM] struct .
 10546 ;;  bexp            1   67[COMRAM] unsigned char 
 10547 ;;  aexp            1   66[COMRAM] unsigned char 
 10548 ;;  sign            1   61[COMRAM] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  4   49[COMRAM] unsigned char 
 10551 ;; Registers used:
 10552 ;;		wreg, status,2, status,0, prodl, prodh
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10558 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10561 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;Total ram usage:       25 bytes
 10563 ;; Hardware stack levels used: 1
 10564 ;; Hardware stack levels required when called: 1
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_Colour_decider
 10569 ;;		_turnRight45
 10570 ;;		_turnLeft45
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text65
 10575   0022D6                     __ptext65:
 10576                           	callstack 0
 10577   0022D6                     ___flmul:
 10578                           	callstack 28
 10579   0022D6  5035               	movf	(___flmul@b+3)^0,w,c
 10580   0022D8  0B80               	andlw	128
 10581   0022DA  6E3E               	movwf	___flmul@sign^0,c
 10582   0022DC  5035               	movf	(___flmul@b+3)^0,w,c
 10583   0022DE  2435               	addwf	(___flmul@b+3)^0,w,c
 10584   0022E0  6E44               	movwf	___flmul@bexp^0,c
 10585   0022E2  AE34               	btfss	(___flmul@b+2)^0,7,c
 10586   0022E4  EF76  F011         	goto	u3491
 10587   0022E8  EF78  F011         	goto	u3490
 10588   0022EC                     u3491:
 10589   0022EC  EF79  F011         	goto	l3944
 10590   0022F0                     u3490:
 10591   0022F0  8044               	bsf	___flmul@bexp^0,0,c
 10592   0022F2                     l3944:
 10593   0022F2  5044               	movf	___flmul@bexp^0,w,c
 10594   0022F4  B4D8               	btfsc	status,2,c
 10595   0022F6  EF7F  F011         	goto	u3501
 10596   0022FA  EF81  F011         	goto	u3500
 10597   0022FE                     u3501:
 10598   0022FE  EF94  F011         	goto	l3952
 10599   002302                     u3500:
 10600   002302  2844               	incf	___flmul@bexp^0,w,c
 10601   002304  A4D8               	btfss	status,2,c
 10602   002306  EF87  F011         	goto	u3511
 10603   00230A  EF89  F011         	goto	u3510
 10604   00230E                     u3511:
 10605   00230E  EF91  F011         	goto	l3950
 10606   002312                     u3510:
 10607   002312  0E00               	movlw	0
 10608   002314  6E32               	movwf	___flmul@b^0,c
 10609   002316  0E00               	movlw	0
 10610   002318  6E33               	movwf	(___flmul@b+1)^0,c
 10611   00231A  0E00               	movlw	0
 10612   00231C  6E34               	movwf	(___flmul@b+2)^0,c
 10613   00231E  0E00               	movlw	0
 10614   002320  6E35               	movwf	(___flmul@b+3)^0,c
 10615   002322                     l3950:
 10616   002322  8E34               	bsf	(___flmul@b+2)^0,7,c
 10617   002324  EF9C  F011         	goto	l3954
 10618   002328                     l3952:
 10619   002328  0E00               	movlw	0
 10620   00232A  6E32               	movwf	___flmul@b^0,c
 10621   00232C  0E00               	movlw	0
 10622   00232E  6E33               	movwf	(___flmul@b+1)^0,c
 10623   002330  0E00               	movlw	0
 10624   002332  6E34               	movwf	(___flmul@b+2)^0,c
 10625   002334  0E00               	movlw	0
 10626   002336  6E35               	movwf	(___flmul@b+3)^0,c
 10627   002338                     l3954:
 10628   002338  5039               	movf	(___flmul@a+3)^0,w,c
 10629   00233A  0B80               	andlw	128
 10630   00233C  1A3E               	xorwf	___flmul@sign^0,f,c
 10631   00233E  5039               	movf	(___flmul@a+3)^0,w,c
 10632   002340  2439               	addwf	(___flmul@a+3)^0,w,c
 10633   002342  6E43               	movwf	___flmul@aexp^0,c
 10634   002344  AE38               	btfss	(___flmul@a+2)^0,7,c
 10635   002346  EFA7  F011         	goto	u3521
 10636   00234A  EFA9  F011         	goto	u3520
 10637   00234E                     u3521:
 10638   00234E  EFAA  F011         	goto	l3962
 10639   002352                     u3520:
 10640   002352  8043               	bsf	___flmul@aexp^0,0,c
 10641   002354                     l3962:
 10642   002354  5043               	movf	___flmul@aexp^0,w,c
 10643   002356  B4D8               	btfsc	status,2,c
 10644   002358  EFB0  F011         	goto	u3531
 10645   00235C  EFB2  F011         	goto	u3530
 10646   002360                     u3531:
 10647   002360  EFC5  F011         	goto	l3970
 10648   002364                     u3530:
 10649   002364  2843               	incf	___flmul@aexp^0,w,c
 10650   002366  A4D8               	btfss	status,2,c
 10651   002368  EFB8  F011         	goto	u3541
 10652   00236C  EFBA  F011         	goto	u3540
 10653   002370                     u3541:
 10654   002370  EFC2  F011         	goto	l3968
 10655   002374                     u3540:
 10656   002374  0E00               	movlw	0
 10657   002376  6E36               	movwf	___flmul@a^0,c
 10658   002378  0E00               	movlw	0
 10659   00237A  6E37               	movwf	(___flmul@a+1)^0,c
 10660   00237C  0E00               	movlw	0
 10661   00237E  6E38               	movwf	(___flmul@a+2)^0,c
 10662   002380  0E00               	movlw	0
 10663   002382  6E39               	movwf	(___flmul@a+3)^0,c
 10664   002384                     l3968:
 10665   002384  8E38               	bsf	(___flmul@a+2)^0,7,c
 10666   002386  EFCD  F011         	goto	l1282
 10667   00238A                     l3970:
 10668   00238A  0E00               	movlw	0
 10669   00238C  6E36               	movwf	___flmul@a^0,c
 10670   00238E  0E00               	movlw	0
 10671   002390  6E37               	movwf	(___flmul@a+1)^0,c
 10672   002392  0E00               	movlw	0
 10673   002394  6E38               	movwf	(___flmul@a+2)^0,c
 10674   002396  0E00               	movlw	0
 10675   002398  6E39               	movwf	(___flmul@a+3)^0,c
 10676   00239A                     l1282:
 10677   00239A  5043               	movf	___flmul@aexp^0,w,c
 10678   00239C  B4D8               	btfsc	status,2,c
 10679   00239E  EFD3  F011         	goto	u3551
 10680   0023A2  EFD5  F011         	goto	u3550
 10681   0023A6                     u3551:
 10682   0023A6  EFDD  F011         	goto	l3974
 10683   0023AA                     u3550:
 10684   0023AA  5044               	movf	___flmul@bexp^0,w,c
 10685   0023AC  A4D8               	btfss	status,2,c
 10686   0023AE  EFDB  F011         	goto	u3561
 10687   0023B2  EFDD  F011         	goto	u3560
 10688   0023B6                     u3561:
 10689   0023B6  EFE7  F011         	goto	l3978
 10690   0023BA                     u3560:
 10691   0023BA                     l3974:
 10692   0023BA  0E00               	movlw	0
 10693   0023BC  6E32               	movwf	?___flmul^0,c
 10694   0023BE  0E00               	movlw	0
 10695   0023C0  6E33               	movwf	(?___flmul+1)^0,c
 10696   0023C2  0E00               	movlw	0
 10697   0023C4  6E34               	movwf	(?___flmul+2)^0,c
 10698   0023C6  0E00               	movlw	0
 10699   0023C8  6E35               	movwf	(?___flmul+3)^0,c
 10700   0023CA  EF7F  F013         	goto	l1286
 10701   0023CE                     l3978:
 10702   0023CE  5038               	movf	(___flmul@a+2)^0,w,c
 10703   0023D0  0232               	mulwf	___flmul@b^0,c
 10704   0023D2  CFF3 F049          	movff	prodl,___flmul@temp
 10705   0023D6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10706   0023DA  5049               	movf	___flmul@temp^0,w,c
 10707   0023DC  6E3F               	movwf	___flmul@grs^0,c
 10708   0023DE  6A40               	clrf	(___flmul@grs+1)^0,c
 10709   0023E0  6A41               	clrf	(___flmul@grs+2)^0,c
 10710   0023E2  6A42               	clrf	(___flmul@grs+3)^0,c
 10711   0023E4  504A               	movf	(___flmul@temp+1)^0,w,c
 10712   0023E6  6E45               	movwf	___flmul@prod^0,c
 10713   0023E8  6A46               	clrf	(___flmul@prod+1)^0,c
 10714   0023EA  6A47               	clrf	(___flmul@prod+2)^0,c
 10715   0023EC  6A48               	clrf	(___flmul@prod+3)^0,c
 10716   0023EE  5037               	movf	(___flmul@a+1)^0,w,c
 10717   0023F0  0233               	mulwf	(___flmul@b+1)^0,c
 10718   0023F2  CFF3 F049          	movff	prodl,___flmul@temp
 10719   0023F6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10720   0023FA  5049               	movf	___flmul@temp^0,w,c
 10721   0023FC  263F               	addwf	___flmul@grs^0,f,c
 10722   0023FE  0E00               	movlw	0
 10723   002400  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10724   002402  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10725   002404  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10726   002406  504A               	movf	(___flmul@temp+1)^0,w,c
 10727   002408  2645               	addwf	___flmul@prod^0,f,c
 10728   00240A  0E00               	movlw	0
 10729   00240C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10730   00240E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10731   002410  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10732   002412  5036               	movf	___flmul@a^0,w,c
 10733   002414  0234               	mulwf	(___flmul@b+2)^0,c
 10734   002416  CFF3 F049          	movff	prodl,___flmul@temp
 10735   00241A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10736   00241E  5049               	movf	___flmul@temp^0,w,c
 10737   002420  263F               	addwf	___flmul@grs^0,f,c
 10738   002422  0E00               	movlw	0
 10739   002424  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10740   002426  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10741   002428  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10742   00242A  504A               	movf	(___flmul@temp+1)^0,w,c
 10743   00242C  2645               	addwf	___flmul@prod^0,f,c
 10744   00242E  0E00               	movlw	0
 10745   002430  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10746   002432  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10747   002434  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10748   002436  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10749   00243A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10750   00243E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10751   002442  6A3F               	clrf	___flmul@grs^0,c
 10752   002444  5036               	movf	___flmul@a^0,w,c
 10753   002446  0233               	mulwf	(___flmul@b+1)^0,c
 10754   002448  CFF3 F049          	movff	prodl,___flmul@temp
 10755   00244C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10756   002450  5049               	movf	___flmul@temp^0,w,c
 10757   002452  263F               	addwf	___flmul@grs^0,f,c
 10758   002454  504A               	movf	(___flmul@temp+1)^0,w,c
 10759   002456  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10760   002458  0E00               	movlw	0
 10761   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10762   00245C  0E00               	movlw	0
 10763   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10764   002460  5037               	movf	(___flmul@a+1)^0,w,c
 10765   002462  0232               	mulwf	___flmul@b^0,c
 10766   002464  CFF3 F049          	movff	prodl,___flmul@temp
 10767   002468  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10768   00246C  5049               	movf	___flmul@temp^0,w,c
 10769   00246E  263F               	addwf	___flmul@grs^0,f,c
 10770   002470  504A               	movf	(___flmul@temp+1)^0,w,c
 10771   002472  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10772   002474  0E00               	movlw	0
 10773   002476  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10774   002478  0E00               	movlw	0
 10775   00247A  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10776   00247C  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10777   002480  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10778   002484  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10779   002488  6A3F               	clrf	___flmul@grs^0,c
 10780   00248A  5036               	movf	___flmul@a^0,w,c
 10781   00248C  0232               	mulwf	___flmul@b^0,c
 10782   00248E  CFF3 F049          	movff	prodl,___flmul@temp
 10783   002492  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10784   002496  5049               	movf	___flmul@temp^0,w,c
 10785   002498  263F               	addwf	___flmul@grs^0,f,c
 10786   00249A  504A               	movf	(___flmul@temp+1)^0,w,c
 10787   00249C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10788   00249E  0E00               	movlw	0
 10789   0024A0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10790   0024A2  0E00               	movlw	0
 10791   0024A4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10792   0024A6  5038               	movf	(___flmul@a+2)^0,w,c
 10793   0024A8  0233               	mulwf	(___flmul@b+1)^0,c
 10794   0024AA  CFF3 F049          	movff	prodl,___flmul@temp
 10795   0024AE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10796   0024B2  5049               	movf	___flmul@temp^0,w,c
 10797   0024B4  2645               	addwf	___flmul@prod^0,f,c
 10798   0024B6  504A               	movf	(___flmul@temp+1)^0,w,c
 10799   0024B8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10800   0024BA  0E00               	movlw	0
 10801   0024BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10802   0024BE  0E00               	movlw	0
 10803   0024C0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10804   0024C2  5037               	movf	(___flmul@a+1)^0,w,c
 10805   0024C4  0234               	mulwf	(___flmul@b+2)^0,c
 10806   0024C6  CFF3 F049          	movff	prodl,___flmul@temp
 10807   0024CA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10808   0024CE  5049               	movf	___flmul@temp^0,w,c
 10809   0024D0  2645               	addwf	___flmul@prod^0,f,c
 10810   0024D2  504A               	movf	(___flmul@temp+1)^0,w,c
 10811   0024D4  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10812   0024D6  0E00               	movlw	0
 10813   0024D8  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10814   0024DA  0E00               	movlw	0
 10815   0024DC  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10816   0024DE  5038               	movf	(___flmul@a+2)^0,w,c
 10817   0024E0  0234               	mulwf	(___flmul@b+2)^0,c
 10818   0024E2  CFF3 F049          	movff	prodl,___flmul@temp
 10819   0024E6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10820   0024EA  5049               	movf	___flmul@temp^0,w,c
 10821   0024EC  6E3A               	movwf	??___flmul^0,c
 10822   0024EE  504A               	movf	(___flmul@temp+1)^0,w,c
 10823   0024F0  6E3B               	movwf	(??___flmul+1)^0,c
 10824   0024F2  6A3C               	clrf	(??___flmul+2)^0,c
 10825   0024F4  6A3D               	clrf	(??___flmul+3)^0,c
 10826   0024F6  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 10827   0024FA  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 10828   0024FE  C03A  F03B         	movff	??___flmul,??___flmul+1
 10829   002502  6A3A               	clrf	??___flmul^0,c
 10830   002504  503A               	movf	??___flmul^0,w,c
 10831   002506  2645               	addwf	___flmul@prod^0,f,c
 10832   002508  503B               	movf	(??___flmul+1)^0,w,c
 10833   00250A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10834   00250C  503C               	movf	(??___flmul+2)^0,w,c
 10835   00250E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10836   002510  503D               	movf	(??___flmul+3)^0,w,c
 10837   002512  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10838   002514  C03F  F03A         	movff	___flmul@grs,??___flmul
 10839   002518  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 10840   00251C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 10841   002520  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 10842   002524  0E19               	movlw	25
 10843   002526  EF9A  F012         	goto	u3570
 10844   00252A                     u3575:
 10845   00252A  90D8               	bcf	status,0,c
 10846   00252C  323D               	rrcf	(??___flmul+3)^0,f,c
 10847   00252E  323C               	rrcf	(??___flmul+2)^0,f,c
 10848   002530  323B               	rrcf	(??___flmul+1)^0,f,c
 10849   002532  323A               	rrcf	??___flmul^0,f,c
 10850   002534                     u3570:
 10851   002534  2EE8               	decfsz	wreg,f,c
 10852   002536  EF95  F012         	goto	u3575
 10853   00253A  503A               	movf	??___flmul^0,w,c
 10854   00253C  2645               	addwf	___flmul@prod^0,f,c
 10855   00253E  503B               	movf	(??___flmul+1)^0,w,c
 10856   002540  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10857   002542  503C               	movf	(??___flmul+2)^0,w,c
 10858   002544  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10859   002546  503D               	movf	(??___flmul+3)^0,w,c
 10860   002548  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10861   00254A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10862   00254E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10863   002552  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10864   002556  6A3F               	clrf	___flmul@grs^0,c
 10865   002558  5043               	movf	___flmul@aexp^0,w,c
 10866   00255A  C044  F03A         	movff	___flmul@bexp,??___flmul
 10867   00255E  6A3B               	clrf	(??___flmul+1)^0,c
 10868   002560  263A               	addwf	??___flmul^0,f,c
 10869   002562  0E00               	movlw	0
 10870   002564  223B               	addwfc	(??___flmul+1)^0,f,c
 10871   002566  0E82               	movlw	130
 10872   002568  243A               	addwf	??___flmul^0,w,c
 10873   00256A  6E49               	movwf	___flmul@temp^0,c
 10874   00256C  0EFF               	movlw	255
 10875   00256E  203B               	addwfc	(??___flmul+1)^0,w,c
 10876   002570  6E4A               	movwf	(___flmul@temp+1)^0,c
 10877   002572  EFD0  F012         	goto	l4026
 10878   002576                     l4020:
 10879   002576  90D8               	bcf	status,0,c
 10880   002578  3645               	rlcf	___flmul@prod^0,f,c
 10881   00257A  3646               	rlcf	(___flmul@prod+1)^0,f,c
 10882   00257C  3647               	rlcf	(___flmul@prod+2)^0,f,c
 10883   00257E  3648               	rlcf	(___flmul@prod+3)^0,f,c
 10884   002580  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10885   002582  EFC5  F012         	goto	u3581
 10886   002586  EFC7  F012         	goto	u3580
 10887   00258A                     u3581:
 10888   00258A  EFC8  F012         	goto	l1289
 10889   00258E                     u3580:
 10890   00258E  8045               	bsf	___flmul@prod^0,0,c
 10891   002590                     l1289:
 10892   002590  90D8               	bcf	status,0,c
 10893   002592  363F               	rlcf	___flmul@grs^0,f,c
 10894   002594  3640               	rlcf	(___flmul@grs+1)^0,f,c
 10895   002596  3641               	rlcf	(___flmul@grs+2)^0,f,c
 10896   002598  3642               	rlcf	(___flmul@grs+3)^0,f,c
 10897   00259A  0649               	decf	___flmul@temp^0,f,c
 10898   00259C  A0D8               	btfss	status,0,c
 10899   00259E  064A               	decf	(___flmul@temp+1)^0,f,c
 10900   0025A0                     l4026:
 10901   0025A0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 10902   0025A2  EFD5  F012         	goto	u3591
 10903   0025A6  EFD7  F012         	goto	u3590
 10904   0025AA                     u3591:
 10905   0025AA  EFBB  F012         	goto	l4020
 10906   0025AE                     u3590:
 10907   0025AE  0E00               	movlw	0
 10908   0025B0  6E43               	movwf	___flmul@aexp^0,c
 10909   0025B2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10910   0025B4  EFDE  F012         	goto	u3601
 10911   0025B8  EFE0  F012         	goto	u3600
 10912   0025BC                     u3601:
 10913   0025BC  EF04  F013         	goto	l1291
 10914   0025C0                     u3600:
 10915   0025C0  0EFF               	movlw	255
 10916   0025C2  143F               	andwf	___flmul@grs^0,w,c
 10917   0025C4  6E3A               	movwf	??___flmul^0,c
 10918   0025C6  0EFF               	movlw	255
 10919   0025C8  1440               	andwf	(___flmul@grs+1)^0,w,c
 10920   0025CA  6E3B               	movwf	(??___flmul+1)^0,c
 10921   0025CC  0EFF               	movlw	255
 10922   0025CE  1441               	andwf	(___flmul@grs+2)^0,w,c
 10923   0025D0  6E3C               	movwf	(??___flmul+2)^0,c
 10924   0025D2  0E7F               	movlw	127
 10925   0025D4  1442               	andwf	(___flmul@grs+3)^0,w,c
 10926   0025D6  6E3D               	movwf	(??___flmul+3)^0,c
 10927   0025D8  503A               	movf	??___flmul^0,w,c
 10928   0025DA  103B               	iorwf	(??___flmul+1)^0,w,c
 10929   0025DC  103C               	iorwf	(??___flmul+2)^0,w,c
 10930   0025DE  103D               	iorwf	(??___flmul+3)^0,w,c
 10931   0025E0  B4D8               	btfsc	status,2,c
 10932   0025E2  EFF5  F012         	goto	u3611
 10933   0025E6  EFF7  F012         	goto	u3610
 10934   0025EA                     u3611:
 10935   0025EA  EFFB  F012         	goto	l1292
 10936   0025EE                     u3610:
 10937   0025EE                     l4034:
 10938   0025EE  0E01               	movlw	1
 10939   0025F0  6E43               	movwf	___flmul@aexp^0,c
 10940   0025F2  EF04  F013         	goto	l1291
 10941   0025F6                     l1292:
 10942   0025F6  A045               	btfss	___flmul@prod^0,0,c
 10943   0025F8  EF00  F013         	goto	u3621
 10944   0025FC  EF02  F013         	goto	u3620
 10945   002600                     u3621:
 10946   002600  EF04  F013         	goto	l1291
 10947   002604                     u3620:
 10948   002604  EFF7  F012         	goto	l4034
 10949   002608                     l1291:
 10950   002608  5043               	movf	___flmul@aexp^0,w,c
 10951   00260A  B4D8               	btfsc	status,2,c
 10952   00260C  EF0A  F013         	goto	u3631
 10953   002610  EF0C  F013         	goto	u3630
 10954   002614                     u3631:
 10955   002614  EF30  F013         	goto	l4046
 10956   002618                     u3630:
 10957   002618  0E01               	movlw	1
 10958   00261A  2645               	addwf	___flmul@prod^0,f,c
 10959   00261C  0E00               	movlw	0
 10960   00261E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10961   002620  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10962   002622  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10963   002624  A048               	btfss	(___flmul@prod+3)^0,0,c
 10964   002626  EF17  F013         	goto	u3641
 10965   00262A  EF19  F013         	goto	u3640
 10966   00262E                     u3641:
 10967   00262E  EF30  F013         	goto	l4046
 10968   002632                     u3640:
 10969   002632  C045  F03A         	movff	___flmul@prod,??___flmul
 10970   002636  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 10971   00263A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 10972   00263E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 10973   002642  343D               	rlcf	(??___flmul+3)^0,w,c
 10974   002644  323D               	rrcf	(??___flmul+3)^0,f,c
 10975   002646  323C               	rrcf	(??___flmul+2)^0,f,c
 10976   002648  323B               	rrcf	(??___flmul+1)^0,f,c
 10977   00264A  323A               	rrcf	??___flmul^0,f,c
 10978   00264C  C03A  F045         	movff	??___flmul,___flmul@prod
 10979   002650  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 10980   002654  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 10981   002658  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 10982   00265C  4A49               	infsnz	___flmul@temp^0,f,c
 10983   00265E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 10984   002660                     l4046:
 10985   002660  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10986   002662  EF3B  F013         	goto	u3651
 10987   002666  504A               	movf	(___flmul@temp+1)^0,w,c
 10988   002668  E108               	bnz	u3650
 10989   00266A  2849               	incf	___flmul@temp^0,w,c
 10990   00266C  A0D8               	btfss	status,0,c
 10991   00266E  EF3B  F013         	goto	u3651
 10992   002672  EF3D  F013         	goto	u3650
 10993   002676                     u3651:
 10994   002676  EF47  F013         	goto	l4050
 10995   00267A                     u3650:
 10996   00267A  0E00               	movlw	0
 10997   00267C  6E45               	movwf	___flmul@prod^0,c
 10998   00267E  0E00               	movlw	0
 10999   002680  6E46               	movwf	(___flmul@prod+1)^0,c
 11000   002682  0E80               	movlw	128
 11001   002684  6E47               	movwf	(___flmul@prod+2)^0,c
 11002   002686  0E7F               	movlw	127
 11003   002688  6E48               	movwf	(___flmul@prod+3)^0,c
 11004   00268A  EF75  F013         	goto	l4062
 11005   00268E                     l4050:
 11006   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11007   002690  EF54  F013         	goto	u3660
 11008   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 11009   002696  E106               	bnz	u3661
 11010   002698  0449               	decf	___flmul@temp^0,w,c
 11011   00269A  B0D8               	btfsc	status,0,c
 11012   00269C  EF52  F013         	goto	u3661
 11013   0026A0  EF54  F013         	goto	u3660
 11014   0026A4                     u3661:
 11015   0026A4  EF60  F013         	goto	l1299
 11016   0026A8                     u3660:
 11017   0026A8  0E00               	movlw	0
 11018   0026AA  6E45               	movwf	___flmul@prod^0,c
 11019   0026AC  0E00               	movlw	0
 11020   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 11021   0026B0  0E00               	movlw	0
 11022   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 11023   0026B4  0E00               	movlw	0
 11024   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 11025   0026B8  0E00               	movlw	0
 11026   0026BA  6E3E               	movwf	___flmul@sign^0,c
 11027   0026BC  EF75  F013         	goto	l4062
 11028   0026C0                     l1299:
 11029   0026C0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11030   0026C4  0EFF               	movlw	255
 11031   0026C6  1645               	andwf	___flmul@prod^0,f,c
 11032   0026C8  0EFF               	movlw	255
 11033   0026CA  1646               	andwf	(___flmul@prod+1)^0,f,c
 11034   0026CC  0E7F               	movlw	127
 11035   0026CE  1647               	andwf	(___flmul@prod+2)^0,f,c
 11036   0026D0  0E00               	movlw	0
 11037   0026D2  1648               	andwf	(___flmul@prod+3)^0,f,c
 11038   0026D4  A044               	btfss	___flmul@bexp^0,0,c
 11039   0026D6  EF6F  F013         	goto	u3671
 11040   0026DA  EF71  F013         	goto	u3670
 11041   0026DE                     u3671:
 11042   0026DE  EF72  F013         	goto	l4060
 11043   0026E2                     u3670:
 11044   0026E2  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11045   0026E4                     l4060:
 11046   0026E4  90D8               	bcf	status,0,c
 11047   0026E6  3044               	rrcf	___flmul@bexp^0,w,c
 11048   0026E8  6E48               	movwf	(___flmul@prod+3)^0,c
 11049   0026EA                     l4062:
 11050   0026EA  503E               	movf	___flmul@sign^0,w,c
 11051   0026EC  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11052   0026EE  C045  F032         	movff	___flmul@prod,?___flmul
 11053   0026F2  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11054   0026F6  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11055   0026FA  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11056   0026FE                     l1286:
 11057   0026FE  0012               	return		;funcret
 11058   002700                     __end_of___flmul:
 11059                           	callstack 0
 11060                           
 11061 ;; *************** function ___flge *****************
 11062 ;; Defined at:
 11063 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  ff1             4    0[COMRAM] unsigned char 
 11066 ;;  ff2             4    4[COMRAM] unsigned char 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;		None               void
 11071 ;; Registers used:
 11072 ;;		wreg, status,2, status,0
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11078 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;Total ram usage:       12 bytes
 11083 ;; Hardware stack levels used: 1
 11084 ;; Hardware stack levels required when called: 1
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_Colour_decider
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text66
 11093   0039C2                     __ptext66:
 11094                           	callstack 0
 11095   0039C2                     ___flge:
 11096                           	callstack 28
 11097   0039C2  0E00               	movlw	0
 11098   0039C4  1401               	andwf	___flge@ff1^0,w,c
 11099   0039C6  6E09               	movwf	??___flge^0,c
 11100   0039C8  0E00               	movlw	0
 11101   0039CA  1402               	andwf	(___flge@ff1+1)^0,w,c
 11102   0039CC  6E0A               	movwf	(??___flge+1)^0,c
 11103   0039CE  0E80               	movlw	128
 11104   0039D0  1403               	andwf	(___flge@ff1+2)^0,w,c
 11105   0039D2  6E0B               	movwf	(??___flge+2)^0,c
 11106   0039D4  0E7F               	movlw	127
 11107   0039D6  1404               	andwf	(___flge@ff1+3)^0,w,c
 11108   0039D8  6E0C               	movwf	(??___flge+3)^0,c
 11109   0039DA  5009               	movf	??___flge^0,w,c
 11110   0039DC  100A               	iorwf	(??___flge+1)^0,w,c
 11111   0039DE  100B               	iorwf	(??___flge+2)^0,w,c
 11112   0039E0  100C               	iorwf	(??___flge+3)^0,w,c
 11113   0039E2  A4D8               	btfss	status,2,c
 11114   0039E4  EFF6  F01C         	goto	u3711
 11115   0039E8  EFF8  F01C         	goto	u3710
 11116   0039EC                     u3711:
 11117   0039EC  EF00  F01D         	goto	l4094
 11118   0039F0                     u3710:
 11119   0039F0  0E00               	movlw	0
 11120   0039F2  6E01               	movwf	___flge@ff1^0,c
 11121   0039F4  0E00               	movlw	0
 11122   0039F6  6E02               	movwf	(___flge@ff1+1)^0,c
 11123   0039F8  0E00               	movlw	0
 11124   0039FA  6E03               	movwf	(___flge@ff1+2)^0,c
 11125   0039FC  0E00               	movlw	0
 11126   0039FE  6E04               	movwf	(___flge@ff1+3)^0,c
 11127   003A00                     l4094:
 11128   003A00  0E00               	movlw	0
 11129   003A02  1405               	andwf	___flge@ff2^0,w,c
 11130   003A04  6E09               	movwf	??___flge^0,c
 11131   003A06  0E00               	movlw	0
 11132   003A08  1406               	andwf	(___flge@ff2+1)^0,w,c
 11133   003A0A  6E0A               	movwf	(??___flge+1)^0,c
 11134   003A0C  0E80               	movlw	128
 11135   003A0E  1407               	andwf	(___flge@ff2+2)^0,w,c
 11136   003A10  6E0B               	movwf	(??___flge+2)^0,c
 11137   003A12  0E7F               	movlw	127
 11138   003A14  1408               	andwf	(___flge@ff2+3)^0,w,c
 11139   003A16  6E0C               	movwf	(??___flge+3)^0,c
 11140   003A18  5009               	movf	??___flge^0,w,c
 11141   003A1A  100A               	iorwf	(??___flge+1)^0,w,c
 11142   003A1C  100B               	iorwf	(??___flge+2)^0,w,c
 11143   003A1E  100C               	iorwf	(??___flge+3)^0,w,c
 11144   003A20  A4D8               	btfss	status,2,c
 11145   003A22  EF15  F01D         	goto	u3721
 11146   003A26  EF17  F01D         	goto	u3720
 11147   003A2A                     u3721:
 11148   003A2A  EF1F  F01D         	goto	l4098
 11149   003A2E                     u3720:
 11150   003A2E  0E00               	movlw	0
 11151   003A30  6E05               	movwf	___flge@ff2^0,c
 11152   003A32  0E00               	movlw	0
 11153   003A34  6E06               	movwf	(___flge@ff2+1)^0,c
 11154   003A36  0E00               	movlw	0
 11155   003A38  6E07               	movwf	(___flge@ff2+2)^0,c
 11156   003A3A  0E00               	movlw	0
 11157   003A3C  6E08               	movwf	(___flge@ff2+3)^0,c
 11158   003A3E                     l4098:
 11159   003A3E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11160   003A40  EF24  F01D         	goto	u3731
 11161   003A44  EF26  F01D         	goto	u3730
 11162   003A48                     u3731:
 11163   003A48  EF2F  F01D         	goto	l4102
 11164   003A4C                     u3730:
 11165   003A4C  6C01               	negf	___flge@ff1^0,c
 11166   003A4E  1E02               	comf	(___flge@ff1+1)^0,f,c
 11167   003A50  B0D8               	btfsc	status,0,c
 11168   003A52  2A02               	incf	(___flge@ff1+1)^0,f,c
 11169   003A54  1E03               	comf	(___flge@ff1+2)^0,f,c
 11170   003A56  B0D8               	btfsc	status,0,c
 11171   003A58  2A03               	incf	(___flge@ff1+2)^0,f,c
 11172   003A5A  0E80               	movlw	128
 11173   003A5C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11174   003A5E                     l4102:
 11175   003A5E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11176   003A60  EF34  F01D         	goto	u3741
 11177   003A64  EF36  F01D         	goto	u3740
 11178   003A68                     u3741:
 11179   003A68  EF3F  F01D         	goto	l933
 11180   003A6C                     u3740:
 11181   003A6C  6C05               	negf	___flge@ff2^0,c
 11182   003A6E  1E06               	comf	(___flge@ff2+1)^0,f,c
 11183   003A70  B0D8               	btfsc	status,0,c
 11184   003A72  2A06               	incf	(___flge@ff2+1)^0,f,c
 11185   003A74  1E07               	comf	(___flge@ff2+2)^0,f,c
 11186   003A76  B0D8               	btfsc	status,0,c
 11187   003A78  2A07               	incf	(___flge@ff2+2)^0,f,c
 11188   003A7A  0E80               	movlw	128
 11189   003A7C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11190   003A7E                     l933:
 11191   003A7E  0E00               	movlw	0
 11192   003A80  1A01               	xorwf	___flge@ff1^0,f,c
 11193   003A82  0E00               	movlw	0
 11194   003A84  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11195   003A86  0E00               	movlw	0
 11196   003A88  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11197   003A8A  0E80               	movlw	128
 11198   003A8C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11199   003A8E  0E00               	movlw	0
 11200   003A90  1A05               	xorwf	___flge@ff2^0,f,c
 11201   003A92  0E00               	movlw	0
 11202   003A94  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11203   003A96  0E00               	movlw	0
 11204   003A98  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11205   003A9A  0E80               	movlw	128
 11206   003A9C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11207   003A9E  5005               	movf	___flge@ff2^0,w,c
 11208   003AA0  5C01               	subwf	___flge@ff1^0,w,c
 11209   003AA2  5006               	movf	(___flge@ff2+1)^0,w,c
 11210   003AA4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11211   003AA6  5007               	movf	(___flge@ff2+2)^0,w,c
 11212   003AA8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11213   003AAA  5008               	movf	(___flge@ff2+3)^0,w,c
 11214   003AAC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11215   003AAE  B0D8               	btfsc	status,0,c
 11216   003AB0  EF5C  F01D         	goto	u3751
 11217   003AB4  EF5E  F01D         	goto	u3750
 11218   003AB8                     u3751:
 11219   003AB8  EF61  F01D         	goto	l4108
 11220   003ABC                     u3750:
 11221   003ABC  90D8               	bcf	status,0,c
 11222   003ABE  EF62  F01D         	goto	l938
 11223   003AC2                     l4108:
 11224   003AC2  80D8               	bsf	status,0,c
 11225   003AC4                     l938:
 11226   003AC4  0012               	return		;funcret
 11227   003AC6                     __end_of___flge:
 11228                           	callstack 0
 11229                           
 11230 ;; *************** function ___fleq *****************
 11231 ;; Defined at:
 11232 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  ff1             4   24[COMRAM] unsigned char 
 11235 ;;  ff2             4   28[COMRAM] unsigned char 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;		None
 11238 ;; Return value:  Size  Location     Type
 11239 ;;		None               void
 11240 ;; Registers used:
 11241 ;;		wreg, status,2, status,0
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;Total ram usage:       12 bytes
 11252 ;; Hardware stack levels used: 1
 11253 ;; Hardware stack levels required when called: 1
 11254 ;; This function calls:
 11255 ;;		Nothing
 11256 ;; This function is called by:
 11257 ;;		_Colour_decider
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text67
 11262   003C3A                     __ptext67:
 11263                           	callstack 0
 11264   003C3A                     ___fleq:
 11265                           	callstack 28
 11266   003C3A  0E00               	movlw	0
 11267   003C3C  1419               	andwf	___fleq@ff1^0,w,c
 11268   003C3E  6E21               	movwf	??___fleq^0,c
 11269   003C40  0E00               	movlw	0
 11270   003C42  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11271   003C44  6E22               	movwf	(??___fleq+1)^0,c
 11272   003C46  0E80               	movlw	128
 11273   003C48  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11274   003C4A  6E23               	movwf	(??___fleq+2)^0,c
 11275   003C4C  0E7F               	movlw	127
 11276   003C4E  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11277   003C50  6E24               	movwf	(??___fleq+3)^0,c
 11278   003C52  5021               	movf	??___fleq^0,w,c
 11279   003C54  1022               	iorwf	(??___fleq+1)^0,w,c
 11280   003C56  1023               	iorwf	(??___fleq+2)^0,w,c
 11281   003C58  1024               	iorwf	(??___fleq+3)^0,w,c
 11282   003C5A  A4D8               	btfss	status,2,c
 11283   003C5C  EF32  F01E         	goto	u3681
 11284   003C60  EF34  F01E         	goto	u3680
 11285   003C64                     u3681:
 11286   003C64  EF3C  F01E         	goto	l4078
 11287   003C68                     u3680:
 11288   003C68  0E00               	movlw	0
 11289   003C6A  6E19               	movwf	___fleq@ff1^0,c
 11290   003C6C  0E00               	movlw	0
 11291   003C6E  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11292   003C70  0E00               	movlw	0
 11293   003C72  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11294   003C74  0E00               	movlw	0
 11295   003C76  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11296   003C78                     l4078:
 11297   003C78  0E00               	movlw	0
 11298   003C7A  141D               	andwf	___fleq@ff2^0,w,c
 11299   003C7C  6E21               	movwf	??___fleq^0,c
 11300   003C7E  0E00               	movlw	0
 11301   003C80  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11302   003C82  6E22               	movwf	(??___fleq+1)^0,c
 11303   003C84  0E80               	movlw	128
 11304   003C86  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11305   003C88  6E23               	movwf	(??___fleq+2)^0,c
 11306   003C8A  0E7F               	movlw	127
 11307   003C8C  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11308   003C8E  6E24               	movwf	(??___fleq+3)^0,c
 11309   003C90  5021               	movf	??___fleq^0,w,c
 11310   003C92  1022               	iorwf	(??___fleq+1)^0,w,c
 11311   003C94  1023               	iorwf	(??___fleq+2)^0,w,c
 11312   003C96  1024               	iorwf	(??___fleq+3)^0,w,c
 11313   003C98  A4D8               	btfss	status,2,c
 11314   003C9A  EF51  F01E         	goto	u3691
 11315   003C9E  EF53  F01E         	goto	u3690
 11316   003CA2                     u3691:
 11317   003CA2  EF5B  F01E         	goto	l4082
 11318   003CA6                     u3690:
 11319   003CA6  0E00               	movlw	0
 11320   003CA8  6E1D               	movwf	___fleq@ff2^0,c
 11321   003CAA  0E00               	movlw	0
 11322   003CAC  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11323   003CAE  0E00               	movlw	0
 11324   003CB0  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11325   003CB2  0E00               	movlw	0
 11326   003CB4  6E20               	movwf	(___fleq@ff2+3)^0,c
 11327   003CB6                     l4082:
 11328   003CB6  501D               	movf	___fleq@ff2^0,w,c
 11329   003CB8  1819               	xorwf	___fleq@ff1^0,w,c
 11330   003CBA  E10F               	bnz	u3700
 11331   003CBC  501E               	movf	(___fleq@ff2+1)^0,w,c
 11332   003CBE  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11333   003CC0  E10C               	bnz	u3700
 11334   003CC2  501F               	movf	(___fleq@ff2+2)^0,w,c
 11335   003CC4  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11336   003CC6  E109               	bnz	u3700
 11337   003CC8  5020               	movf	(___fleq@ff2+3)^0,w,c
 11338   003CCA  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11339   003CCC  B4D8               	btfsc	status,2,c
 11340   003CCE  EF6B  F01E         	goto	u3701
 11341   003CD2  EF6D  F01E         	goto	u3700
 11342   003CD6                     u3701:
 11343   003CD6  EF70  F01E         	goto	l4086
 11344   003CDA                     u3700:
 11345   003CDA  90D8               	bcf	status,0,c
 11346   003CDC  EF71  F01E         	goto	l927
 11347   003CE0                     l4086:
 11348   003CE0  80D8               	bsf	status,0,c
 11349   003CE2                     l927:
 11350   003CE2  0012               	return		;funcret
 11351   003CE4                     __end_of___fleq:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function ___fldiv *****************
 11355 ;; Defined at:
 11356 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  b               4   24[COMRAM] unsigned char 
 11359 ;;  a               4   28[COMRAM] unsigned char 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  grs             4   43[COMRAM] unsigned long 
 11362 ;;  rem             4   36[COMRAM] unsigned long 
 11363 ;;  new_exp         2   41[COMRAM] short 
 11364 ;;  aexp            1   48[COMRAM] unsigned char 
 11365 ;;  bexp            1   47[COMRAM] unsigned char 
 11366 ;;  sign            1   40[COMRAM] unsigned char 
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  4   24[COMRAM] unsigned char 
 11369 ;; Registers used:
 11370 ;;		wreg, status,2, status,0
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11376 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11380 ;;Total ram usage:       25 bytes
 11381 ;; Hardware stack levels used: 1
 11382 ;; Hardware stack levels required when called: 1
 11383 ;; This function calls:
 11384 ;;		Nothing
 11385 ;; This function is called by:
 11386 ;;		_colour_rel
 11387 ;;		_Colour_decider
 11388 ;; This function uses a non-reentrant model
 11389 ;;
 11390                           
 11391                           	psect	text68
 11392   002700                     __ptext68:
 11393                           	callstack 0
 11394   002700                     ___fldiv:
 11395                           	callstack 28
 11396   002700  501C               	movf	(___fldiv@b+3)^0,w,c
 11397   002702  0B80               	andlw	128
 11398   002704  6E29               	movwf	___fldiv@sign^0,c
 11399   002706  501C               	movf	(___fldiv@b+3)^0,w,c
 11400   002708  241C               	addwf	(___fldiv@b+3)^0,w,c
 11401   00270A  6E30               	movwf	___fldiv@bexp^0,c
 11402   00270C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11403   00270E  EF8B  F013         	goto	u3261
 11404   002712  EF8D  F013         	goto	u3260
 11405   002716                     u3261:
 11406   002716  EF8E  F013         	goto	l3806
 11407   00271A                     u3260:
 11408   00271A  8030               	bsf	___fldiv@bexp^0,0,c
 11409   00271C                     l3806:
 11410   00271C  5030               	movf	___fldiv@bexp^0,w,c
 11411   00271E  B4D8               	btfsc	status,2,c
 11412   002720  EF94  F013         	goto	u3271
 11413   002724  EF96  F013         	goto	u3270
 11414   002728                     u3271:
 11415   002728  EFAB  F013         	goto	l3816
 11416   00272C                     u3270:
 11417   00272C  2830               	incf	___fldiv@bexp^0,w,c
 11418   00272E  A4D8               	btfss	status,2,c
 11419   002730  EF9C  F013         	goto	u3281
 11420   002734  EF9E  F013         	goto	u3280
 11421   002738                     u3281:
 11422   002738  EFA6  F013         	goto	l3812
 11423   00273C                     u3280:
 11424   00273C  0E00               	movlw	0
 11425   00273E  6E19               	movwf	___fldiv@b^0,c
 11426   002740  0E00               	movlw	0
 11427   002742  6E1A               	movwf	(___fldiv@b+1)^0,c
 11428   002744  0E00               	movlw	0
 11429   002746  6E1B               	movwf	(___fldiv@b+2)^0,c
 11430   002748  0E00               	movlw	0
 11431   00274A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11432   00274C                     l3812:
 11433   00274C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11434   00274E  0E00               	movlw	0
 11435   002750  6E1C               	movwf	(___fldiv@b+3)^0,c
 11436   002752  EFB3  F013         	goto	l3818
 11437   002756                     l3816:
 11438   002756  0E00               	movlw	0
 11439   002758  6E19               	movwf	___fldiv@b^0,c
 11440   00275A  0E00               	movlw	0
 11441   00275C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11442   00275E  0E00               	movlw	0
 11443   002760  6E1B               	movwf	(___fldiv@b+2)^0,c
 11444   002762  0E00               	movlw	0
 11445   002764  6E1C               	movwf	(___fldiv@b+3)^0,c
 11446   002766                     l3818:
 11447   002766  5020               	movf	(___fldiv@a+3)^0,w,c
 11448   002768  0B80               	andlw	128
 11449   00276A  1A29               	xorwf	___fldiv@sign^0,f,c
 11450   00276C  5020               	movf	(___fldiv@a+3)^0,w,c
 11451   00276E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11452   002770  6E31               	movwf	___fldiv@aexp^0,c
 11453   002772  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11454   002774  EFBE  F013         	goto	u3291
 11455   002778  EFC0  F013         	goto	u3290
 11456   00277C                     u3291:
 11457   00277C  EFC1  F013         	goto	l3826
 11458   002780                     u3290:
 11459   002780  8031               	bsf	___fldiv@aexp^0,0,c
 11460   002782                     l3826:
 11461   002782  5031               	movf	___fldiv@aexp^0,w,c
 11462   002784  B4D8               	btfsc	status,2,c
 11463   002786  EFC7  F013         	goto	u3301
 11464   00278A  EFC9  F013         	goto	u3300
 11465   00278E                     u3301:
 11466   00278E  EFDE  F013         	goto	l3836
 11467   002792                     u3300:
 11468   002792  2831               	incf	___fldiv@aexp^0,w,c
 11469   002794  A4D8               	btfss	status,2,c
 11470   002796  EFCF  F013         	goto	u3311
 11471   00279A  EFD1  F013         	goto	u3310
 11472   00279E                     u3311:
 11473   00279E  EFD9  F013         	goto	l3832
 11474   0027A2                     u3310:
 11475   0027A2  0E00               	movlw	0
 11476   0027A4  6E1D               	movwf	___fldiv@a^0,c
 11477   0027A6  0E00               	movlw	0
 11478   0027A8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11479   0027AA  0E00               	movlw	0
 11480   0027AC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11481   0027AE  0E00               	movlw	0
 11482   0027B0  6E20               	movwf	(___fldiv@a+3)^0,c
 11483   0027B2                     l3832:
 11484   0027B2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11485   0027B4  0E00               	movlw	0
 11486   0027B6  6E20               	movwf	(___fldiv@a+3)^0,c
 11487   0027B8  EFE6  F013         	goto	l3838
 11488   0027BC                     l3836:
 11489   0027BC  0E00               	movlw	0
 11490   0027BE  6E1D               	movwf	___fldiv@a^0,c
 11491   0027C0  0E00               	movlw	0
 11492   0027C2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11493   0027C4  0E00               	movlw	0
 11494   0027C6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11495   0027C8  0E00               	movlw	0
 11496   0027CA  6E20               	movwf	(___fldiv@a+3)^0,c
 11497   0027CC                     l3838:
 11498   0027CC  501D               	movf	___fldiv@a^0,w,c
 11499   0027CE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11500   0027D0  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11501   0027D2  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11502   0027D4  A4D8               	btfss	status,2,c
 11503   0027D6  EFEF  F013         	goto	u3321
 11504   0027DA  EFF1  F013         	goto	u3320
 11505   0027DE                     u3321:
 11506   0027DE  EF09  F014         	goto	l3850
 11507   0027E2                     u3320:
 11508   0027E2  0E00               	movlw	0
 11509   0027E4  6E19               	movwf	___fldiv@b^0,c
 11510   0027E6  0E00               	movlw	0
 11511   0027E8  6E1A               	movwf	(___fldiv@b+1)^0,c
 11512   0027EA  0E00               	movlw	0
 11513   0027EC  6E1B               	movwf	(___fldiv@b+2)^0,c
 11514   0027EE  0E00               	movlw	0
 11515   0027F0  6E1C               	movwf	(___fldiv@b+3)^0,c
 11516   0027F2  0E80               	movlw	128
 11517   0027F4  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11518   0027F6  0E7F               	movlw	127
 11519   0027F8  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11520   0027FA                     l3844:
 11521   0027FA  5029               	movf	___fldiv@sign^0,w,c
 11522   0027FC  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11523   0027FE  C019  F019         	movff	___fldiv@b,?___fldiv
 11524   002802  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11525   002806  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11526   00280A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11527   00280E  EF4C  F015         	goto	l1250
 11528   002812                     l3850:
 11529   002812  5030               	movf	___fldiv@bexp^0,w,c
 11530   002814  A4D8               	btfss	status,2,c
 11531   002816  EF0F  F014         	goto	u3331
 11532   00281A  EF11  F014         	goto	u3330
 11533   00281E                     u3331:
 11534   00281E  EF1B  F014         	goto	l3858
 11535   002822                     u3330:
 11536   002822  0E00               	movlw	0
 11537   002824  6E19               	movwf	?___fldiv^0,c
 11538   002826  0E00               	movlw	0
 11539   002828  6E1A               	movwf	(?___fldiv+1)^0,c
 11540   00282A  0E00               	movlw	0
 11541   00282C  6E1B               	movwf	(?___fldiv+2)^0,c
 11542   00282E  0E00               	movlw	0
 11543   002830  6E1C               	movwf	(?___fldiv+3)^0,c
 11544   002832  EF4C  F015         	goto	l1250
 11545   002836                     l3858:
 11546   002836  5031               	movf	___fldiv@aexp^0,w,c
 11547   002838  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11548   00283C  6A22               	clrf	(??___fldiv+1)^0,c
 11549   00283E  5E21               	subwf	??___fldiv^0,f,c
 11550   002840  0E00               	movlw	0
 11551   002842  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11552   002844  0E7F               	movlw	127
 11553   002846  2421               	addwf	??___fldiv^0,w,c
 11554   002848  6E2A               	movwf	___fldiv@new_exp^0,c
 11555   00284A  0E00               	movlw	0
 11556   00284C  2022               	addwfc	(??___fldiv+1)^0,w,c
 11557   00284E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11558   002850  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11559   002854  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11560   002858  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11561   00285C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11562   002860  0E00               	movlw	0
 11563   002862  6E19               	movwf	___fldiv@b^0,c
 11564   002864  0E00               	movlw	0
 11565   002866  6E1A               	movwf	(___fldiv@b+1)^0,c
 11566   002868  0E00               	movlw	0
 11567   00286A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11568   00286C  0E00               	movlw	0
 11569   00286E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11570   002870  0E00               	movlw	0
 11571   002872  6E2C               	movwf	___fldiv@grs^0,c
 11572   002874  0E00               	movlw	0
 11573   002876  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11574   002878  0E00               	movlw	0
 11575   00287A  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11576   00287C  0E00               	movlw	0
 11577   00287E  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11578   002880  0E00               	movlw	0
 11579   002882  6E31               	movwf	___fldiv@aexp^0,c
 11580   002884  EF7C  F014         	goto	l1252
 11581   002888                     l3868:
 11582   002888  5031               	movf	___fldiv@aexp^0,w,c
 11583   00288A  B4D8               	btfsc	status,2,c
 11584   00288C  EF4A  F014         	goto	u3341
 11585   002890  EF4C  F014         	goto	u3340
 11586   002894                     u3341:
 11587   002894  EF63  F014         	goto	l3876
 11588   002898                     u3340:
 11589   002898  90D8               	bcf	status,0,c
 11590   00289A  3625               	rlcf	___fldiv@rem^0,f,c
 11591   00289C  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11592   00289E  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11593   0028A0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11594   0028A2  90D8               	bcf	status,0,c
 11595   0028A4  3619               	rlcf	___fldiv@b^0,f,c
 11596   0028A6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11597   0028A8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11598   0028AA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11599   0028AC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11600   0028AE  EF5B  F014         	goto	u3351
 11601   0028B2  EF5D  F014         	goto	u3350
 11602   0028B6                     u3351:
 11603   0028B6  EF5E  F014         	goto	l1255
 11604   0028BA                     u3350:
 11605   0028BA  8019               	bsf	___fldiv@b^0,0,c
 11606   0028BC                     l1255:
 11607   0028BC  90D8               	bcf	status,0,c
 11608   0028BE  362C               	rlcf	___fldiv@grs^0,f,c
 11609   0028C0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11610   0028C2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11611   0028C4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11612   0028C6                     l3876:
 11613   0028C6  501D               	movf	___fldiv@a^0,w,c
 11614   0028C8  5C25               	subwf	___fldiv@rem^0,w,c
 11615   0028CA  501E               	movf	(___fldiv@a+1)^0,w,c
 11616   0028CC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11617   0028CE  501F               	movf	(___fldiv@a+2)^0,w,c
 11618   0028D0  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11619   0028D2  5020               	movf	(___fldiv@a+3)^0,w,c
 11620   0028D4  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11621   0028D6  A0D8               	btfss	status,0,c
 11622   0028D8  EF70  F014         	goto	u3361
 11623   0028DC  EF72  F014         	goto	u3360
 11624   0028E0                     u3361:
 11625   0028E0  EF7B  F014         	goto	l3882
 11626   0028E4                     u3360:
 11627   0028E4  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11628   0028E6  501D               	movf	___fldiv@a^0,w,c
 11629   0028E8  5E25               	subwf	___fldiv@rem^0,f,c
 11630   0028EA  501E               	movf	(___fldiv@a+1)^0,w,c
 11631   0028EC  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11632   0028EE  501F               	movf	(___fldiv@a+2)^0,w,c
 11633   0028F0  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11634   0028F2  5020               	movf	(___fldiv@a+3)^0,w,c
 11635   0028F4  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11636   0028F6                     l3882:
 11637   0028F6  2A31               	incf	___fldiv@aexp^0,f,c
 11638   0028F8                     l1252:
 11639   0028F8  0E19               	movlw	25
 11640   0028FA  6431               	cpfsgt	___fldiv@aexp^0,c
 11641   0028FC  EF82  F014         	goto	u3371
 11642   002900  EF84  F014         	goto	u3370
 11643   002904                     u3371:
 11644   002904  EF44  F014         	goto	l3868
 11645   002908                     u3370:
 11646   002908  5025               	movf	___fldiv@rem^0,w,c
 11647   00290A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11648   00290C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11649   00290E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11650   002910  B4D8               	btfsc	status,2,c
 11651   002912  EF8D  F014         	goto	u3381
 11652   002916  EF8F  F014         	goto	u3380
 11653   00291A                     u3381:
 11654   00291A  EFA7  F014         	goto	l3894
 11655   00291E                     u3380:
 11656   00291E  802C               	bsf	___fldiv@grs^0,0,c
 11657   002920  EFA7  F014         	goto	l3894
 11658   002924                     l3888:
 11659   002924  90D8               	bcf	status,0,c
 11660   002926  3619               	rlcf	___fldiv@b^0,f,c
 11661   002928  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11662   00292A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11663   00292C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11664   00292E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11665   002930  EF9C  F014         	goto	u3391
 11666   002934  EF9E  F014         	goto	u3390
 11667   002938                     u3391:
 11668   002938  EF9F  F014         	goto	l1261
 11669   00293C                     u3390:
 11670   00293C  8019               	bsf	___fldiv@b^0,0,c
 11671   00293E                     l1261:
 11672   00293E  90D8               	bcf	status,0,c
 11673   002940  362C               	rlcf	___fldiv@grs^0,f,c
 11674   002942  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11675   002944  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11676   002946  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11677   002948  062A               	decf	___fldiv@new_exp^0,f,c
 11678   00294A  A0D8               	btfss	status,0,c
 11679   00294C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11680   00294E                     l3894:
 11681   00294E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11682   002950  EFAC  F014         	goto	u3401
 11683   002954  EFAE  F014         	goto	u3400
 11684   002958                     u3401:
 11685   002958  EF92  F014         	goto	l3888
 11686   00295C                     u3400:
 11687   00295C  0E00               	movlw	0
 11688   00295E  6E31               	movwf	___fldiv@aexp^0,c
 11689   002960  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11690   002962  EFB5  F014         	goto	u3411
 11691   002966  EFB7  F014         	goto	u3410
 11692   00296A                     u3411:
 11693   00296A  EFDB  F014         	goto	l1263
 11694   00296E                     u3410:
 11695   00296E  0EFF               	movlw	255
 11696   002970  142C               	andwf	___fldiv@grs^0,w,c
 11697   002972  6E21               	movwf	??___fldiv^0,c
 11698   002974  0EFF               	movlw	255
 11699   002976  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11700   002978  6E22               	movwf	(??___fldiv+1)^0,c
 11701   00297A  0EFF               	movlw	255
 11702   00297C  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11703   00297E  6E23               	movwf	(??___fldiv+2)^0,c
 11704   002980  0E7F               	movlw	127
 11705   002982  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11706   002984  6E24               	movwf	(??___fldiv+3)^0,c
 11707   002986  5021               	movf	??___fldiv^0,w,c
 11708   002988  1022               	iorwf	(??___fldiv+1)^0,w,c
 11709   00298A  1023               	iorwf	(??___fldiv+2)^0,w,c
 11710   00298C  1024               	iorwf	(??___fldiv+3)^0,w,c
 11711   00298E  B4D8               	btfsc	status,2,c
 11712   002990  EFCC  F014         	goto	u3421
 11713   002994  EFCE  F014         	goto	u3420
 11714   002998                     u3421:
 11715   002998  EFD2  F014         	goto	l1264
 11716   00299C                     u3420:
 11717   00299C                     l3902:
 11718   00299C  0E01               	movlw	1
 11719   00299E  6E31               	movwf	___fldiv@aexp^0,c
 11720   0029A0  EFDB  F014         	goto	l1263
 11721   0029A4                     l1264:
 11722   0029A4  A019               	btfss	___fldiv@b^0,0,c
 11723   0029A6  EFD7  F014         	goto	u3431
 11724   0029AA  EFD9  F014         	goto	u3430
 11725   0029AE                     u3431:
 11726   0029AE  EFDB  F014         	goto	l1263
 11727   0029B2                     u3430:
 11728   0029B2  EFCE  F014         	goto	l3902
 11729   0029B6                     l1263:
 11730   0029B6  5031               	movf	___fldiv@aexp^0,w,c
 11731   0029B8  B4D8               	btfsc	status,2,c
 11732   0029BA  EFE1  F014         	goto	u3441
 11733   0029BE  EFE3  F014         	goto	u3440
 11734   0029C2                     u3441:
 11735   0029C2  EF07  F015         	goto	l3914
 11736   0029C6                     u3440:
 11737   0029C6  0E01               	movlw	1
 11738   0029C8  2619               	addwf	___fldiv@b^0,f,c
 11739   0029CA  0E00               	movlw	0
 11740   0029CC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11741   0029CE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11742   0029D0  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11743   0029D2  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11744   0029D4  EFEE  F014         	goto	u3451
 11745   0029D8  EFF0  F014         	goto	u3450
 11746   0029DC                     u3451:
 11747   0029DC  EF07  F015         	goto	l3914
 11748   0029E0                     u3450:
 11749   0029E0  C019  F021         	movff	___fldiv@b,??___fldiv
 11750   0029E4  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11751   0029E8  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11752   0029EC  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11753   0029F0  3424               	rlcf	(??___fldiv+3)^0,w,c
 11754   0029F2  3224               	rrcf	(??___fldiv+3)^0,f,c
 11755   0029F4  3223               	rrcf	(??___fldiv+2)^0,f,c
 11756   0029F6  3222               	rrcf	(??___fldiv+1)^0,f,c
 11757   0029F8  3221               	rrcf	??___fldiv^0,f,c
 11758   0029FA  C021  F019         	movff	??___fldiv,___fldiv@b
 11759   0029FE  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11760   002A02  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11761   002A06  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11762   002A0A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11763   002A0C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11764   002A0E                     l3914:
 11765   002A0E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11766   002A10  EF12  F015         	goto	u3461
 11767   002A14  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11768   002A16  E108               	bnz	u3460
 11769   002A18  282A               	incf	___fldiv@new_exp^0,w,c
 11770   002A1A  A0D8               	btfss	status,0,c
 11771   002A1C  EF12  F015         	goto	u3461
 11772   002A20  EF14  F015         	goto	u3460
 11773   002A24                     u3461:
 11774   002A24  EF1F  F015         	goto	l3918
 11775   002A28                     u3460:
 11776   002A28  0E00               	movlw	0
 11777   002A2A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11778   002A2C  682A               	setf	___fldiv@new_exp^0,c
 11779   002A2E  0E00               	movlw	0
 11780   002A30  6E19               	movwf	___fldiv@b^0,c
 11781   002A32  0E00               	movlw	0
 11782   002A34  6E1A               	movwf	(___fldiv@b+1)^0,c
 11783   002A36  0E00               	movlw	0
 11784   002A38  6E1B               	movwf	(___fldiv@b+2)^0,c
 11785   002A3A  0E00               	movlw	0
 11786   002A3C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11787   002A3E                     l3918:
 11788   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11789   002A40  EF2C  F015         	goto	u3470
 11790   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11791   002A46  E106               	bnz	u3471
 11792   002A48  042A               	decf	___fldiv@new_exp^0,w,c
 11793   002A4A  B0D8               	btfsc	status,0,c
 11794   002A4C  EF2A  F015         	goto	u3471
 11795   002A50  EF2C  F015         	goto	u3470
 11796   002A54                     u3471:
 11797   002A54  EF3A  F015         	goto	l3922
 11798   002A58                     u3470:
 11799   002A58  0E00               	movlw	0
 11800   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11801   002A5C  0E00               	movlw	0
 11802   002A5E  6E2A               	movwf	___fldiv@new_exp^0,c
 11803   002A60  0E00               	movlw	0
 11804   002A62  6E19               	movwf	___fldiv@b^0,c
 11805   002A64  0E00               	movlw	0
 11806   002A66  6E1A               	movwf	(___fldiv@b+1)^0,c
 11807   002A68  0E00               	movlw	0
 11808   002A6A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11809   002A6C  0E00               	movlw	0
 11810   002A6E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11811   002A70  0E00               	movlw	0
 11812   002A72  6E29               	movwf	___fldiv@sign^0,c
 11813   002A74                     l3922:
 11814   002A74  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11815   002A78  A030               	btfss	___fldiv@bexp^0,0,c
 11816   002A7A  EF41  F015         	goto	u3481
 11817   002A7E  EF43  F015         	goto	u3480
 11818   002A82                     u3481:
 11819   002A82  EF46  F015         	goto	l3928
 11820   002A86                     u3480:
 11821   002A86  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11822   002A88  EF47  F015         	goto	l3930
 11823   002A8C                     l3928:
 11824   002A8C  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 11825   002A8E                     l3930:
 11826   002A8E  90D8               	bcf	status,0,c
 11827   002A90  3030               	rrcf	___fldiv@bexp^0,w,c
 11828   002A92  6E1C               	movwf	(___fldiv@b+3)^0,c
 11829   002A94  EFFD  F013         	goto	l3844
 11830   002A98                     l1250:
 11831   002A98  0012               	return		;funcret
 11832   002A9A                     __end_of___fldiv:
 11833                           	callstack 0
 11834                           
 11835 ;; *************** function _HighISR *****************
 11836 ;; Defined at:
 11837 ;;		line 59 in file "interrupts.c"
 11838 ;; Parameters:    Size  Location     Type
 11839 ;;		None
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;		None
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  1    wreg      void 
 11844 ;; Registers used:
 11845 ;;		None
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;Total ram usage:        0 bytes
 11856 ;; Hardware stack levels used: 1
 11857 ;; This function calls:
 11858 ;;		Nothing
 11859 ;; This function is called by:
 11860 ;;		Interrupt level 2
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	intcode
 11865   000008                     __pintcode:
 11866                           	callstack 0
 11867   000008                     _HighISR:
 11868                           	callstack 22
 11869                           
 11870                           ;incstack = 0
 11871   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11872   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11873   00000C  0011               	retfie		f
 11874   00000E                     __end_of_HighISR:
 11875                           	callstack 0
 11876                           
 11877                           	psect	rparam
 11878   000000                     
 11879                           	psect	temp
 11880   00005F                     btemp:
 11881                           	callstack 0
 11882   00005F                     	ds	1
 11883   000000                     int$flags	set	btemp
 11884   000000                     wtemp8	set	btemp+1
 11885   000000                     ttemp5	set	btemp+1
 11886   000000                     ttemp6	set	btemp+4
 11887   000000                     ttemp7	set	btemp+8
 11888                           
 11889                           	psect	idloc
 11890                           
 11891                           ;Config register IDLOC0 @ 0x200000
 11892                           ;	unspecified, using default values
 11893   200000                     	org	2097152
 11894   200000  0FFF               	dw	4095
 11895                           
 11896                           ;Config register IDLOC1 @ 0x200002
 11897                           ;	unspecified, using default values
 11898   200002                     	org	2097154
 11899   200002  0FFF               	dw	4095
 11900                           
 11901                           ;Config register IDLOC2 @ 0x200004
 11902                           ;	unspecified, using default values
 11903   200004                     	org	2097156
 11904   200004  0FFF               	dw	4095
 11905                           
 11906                           ;Config register IDLOC3 @ 0x200006
 11907                           ;	unspecified, using default values
 11908   200006                     	org	2097158
 11909   200006  0FFF               	dw	4095
 11910                           
 11911                           ;Config register IDLOC4 @ 0x200008
 11912                           ;	unspecified, using default values
 11913   200008                     	org	2097160
 11914   200008  0FFF               	dw	4095
 11915                           
 11916                           ;Config register IDLOC5 @ 0x20000A
 11917                           ;	unspecified, using default values
 11918   20000A                     	org	2097162
 11919   20000A  0FFF               	dw	4095
 11920                           
 11921                           ;Config register IDLOC6 @ 0x20000C
 11922                           ;	unspecified, using default values
 11923   20000C                     	org	2097164
 11924   20000C  0FFF               	dw	4095
 11925                           
 11926                           ;Config register IDLOC7 @ 0x20000E
 11927                           ;	unspecified, using default values
 11928   20000E                     	org	2097166
 11929   20000E  0FFF               	dw	4095
 11930                           
 11931                           	psect	config
 11932                           
 11933                           ;Config register CONFIG1L @ 0x300000
 11934                           ;	External Oscillator mode Selection bits
 11935                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11936                           ;	Power-up default value for COSC bits
 11937                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11938   300000                     	org	3145728
 11939   300000  AA                 	db	170
 11940                           
 11941                           ;Config register CONFIG1H @ 0x300001
 11942                           ;	unspecified, using default values
 11943                           ;	Clock Out Enable bit
 11944                           ;	CLKOUTEN = 0x1, unprogrammed default
 11945                           ;	Clock Switch Enable bit
 11946                           ;	CSWEN = 0x1, unprogrammed default
 11947                           ;	Fail-Safe Clock Monitor Enable bit
 11948                           ;	FCMEN = 0x1, unprogrammed default
 11949   300001                     	org	3145729
 11950   300001  FF                 	db	255
 11951                           
 11952                           ;Config register CONFIG2L @ 0x300002
 11953                           ;	unspecified, using default values
 11954                           ;	Master Clear Enable bit
 11955                           ;	MCLRE = 0x1, unprogrammed default
 11956                           ;	Power-up Timer Enable bit
 11957                           ;	PWRTE = 0x1, unprogrammed default
 11958                           ;	Low-power BOR enable bit
 11959                           ;	LPBOREN = 0x1, unprogrammed default
 11960                           ;	Brown-out Reset Enable bits
 11961                           ;	BOREN = 0x3, unprogrammed default
 11962   300002                     	org	3145730
 11963   300002  FF                 	db	255
 11964                           
 11965                           ;Config register CONFIG2H @ 0x300003
 11966                           ;	unspecified, using default values
 11967                           ;	Brown Out Reset Voltage selection bits
 11968                           ;	BORV = 0x3, unprogrammed default
 11969                           ;	ZCD Disable bit
 11970                           ;	ZCD = 0x1, unprogrammed default
 11971                           ;	PPSLOCK bit One-Way Set Enable bit
 11972                           ;	PPS1WAY = 0x1, unprogrammed default
 11973                           ;	Stack Full/Underflow Reset Enable bit
 11974                           ;	STVREN = 0x1, unprogrammed default
 11975                           ;	Debugger Enable bit
 11976                           ;	DEBUG = 0x1, unprogrammed default
 11977                           ;	Extended Instruction Set Enable bit
 11978                           ;	XINST = 0x1, unprogrammed default
 11979   300003                     	org	3145731
 11980   300003  FF                 	db	255
 11981                           
 11982                           ;Config register CONFIG3L @ 0x300004
 11983                           ;	WDT Period Select bits
 11984                           ;	WDTCPS = 0x1F, unprogrammed default
 11985                           ;	WDT operating mode
 11986                           ;	WDTE = OFF, WDT Disabled
 11987   300004                     	org	3145732
 11988   300004  9F                 	db	159
 11989                           
 11990                           ;Config register CONFIG3H @ 0x300005
 11991                           ;	unspecified, using default values
 11992                           ;	WDT Window Select bits
 11993                           ;	WDTCWS = 0x7, unprogrammed default
 11994                           ;	WDT input clock selector
 11995                           ;	WDTCCS = 0x7, unprogrammed default
 11996   300005                     	org	3145733
 11997   300005  FF                 	db	255
 11998                           
 11999                           ;Config register CONFIG4L @ 0x300006
 12000                           ;	unspecified, using default values
 12001                           ;	Write Protection Block 0
 12002                           ;	WRT0 = 0x1, unprogrammed default
 12003                           ;	Write Protection Block 1
 12004                           ;	WRT1 = 0x1, unprogrammed default
 12005                           ;	Write Protection Block 2
 12006                           ;	WRT2 = 0x1, unprogrammed default
 12007                           ;	Write Protection Block 3
 12008                           ;	WRT3 = 0x1, unprogrammed default
 12009                           ;	Write Protection Block 3
 12010                           ;	WRT4 = 0x1, unprogrammed default
 12011                           ;	Write Protection Block 3
 12012                           ;	WRT5 = 0x1, unprogrammed default
 12013                           ;	Write Protection Block 3
 12014                           ;	WRT6 = 0x1, unprogrammed default
 12015                           ;	Write Protection Block 3
 12016                           ;	WRT7 = 0x1, unprogrammed default
 12017   300006                     	org	3145734
 12018   300006  FF                 	db	255
 12019                           
 12020                           ;Config register CONFIG4H @ 0x300007
 12021                           ;	unspecified, using default values
 12022                           ;	Configuration Register Write Protection bit
 12023                           ;	WRTC = 0x1, unprogrammed default
 12024                           ;	Boot Block Write Protection bit
 12025                           ;	WRTB = 0x1, unprogrammed default
 12026                           ;	Data EEPROM Write Protection bit
 12027                           ;	WRTD = 0x1, unprogrammed default
 12028                           ;	Scanner Enable bit
 12029                           ;	SCANE = 0x1, unprogrammed default
 12030                           ;	Low Voltage Programming Enable bit
 12031                           ;	LVP = 0x1, unprogrammed default
 12032   300007                     	org	3145735
 12033   300007  FF                 	db	255
 12034                           
 12035                           ;Config register CONFIG5L @ 0x300008
 12036                           ;	unspecified, using default values
 12037                           ;	UserNVM Program Memory Code Protection bit
 12038                           ;	CP = 0x1, unprogrammed default
 12039                           ;	DataNVM Memory Code Protection bit
 12040                           ;	CPD = 0x1, unprogrammed default
 12041   300008                     	org	3145736
 12042   300008  FF                 	db	255
 12043                           
 12044                           ;Config register CONFIG5H @ 0x300009
 12045                           ;	unspecified, using default values
 12046   300009                     	org	3145737
 12047   300009  FF                 	db	255
 12048                           
 12049                           ;Config register CONFIG6L @ 0x30000A
 12050                           ;	unspecified, using default values
 12051                           ;	Table Read Protection Block 0
 12052                           ;	EBTR0 = 0x1, unprogrammed default
 12053                           ;	Table Read Protection Block 1
 12054                           ;	EBTR1 = 0x1, unprogrammed default
 12055                           ;	Table Read Protection Block 2
 12056                           ;	EBTR2 = 0x1, unprogrammed default
 12057                           ;	Table Read Protection Block 3
 12058                           ;	EBTR3 = 0x1, unprogrammed default
 12059                           ;	Table Read Protection Block 4
 12060                           ;	EBTR4 = 0x1, unprogrammed default
 12061                           ;	Table Read Protection Block 5
 12062                           ;	EBTR5 = 0x1, unprogrammed default
 12063                           ;	Table Read Protection Block 6
 12064                           ;	EBTR6 = 0x1, unprogrammed default
 12065                           ;	Table Read Protection Block 7
 12066                           ;	EBTR7 = 0x1, unprogrammed default
 12067   30000A                     	org	3145738
 12068   30000A  FF                 	db	255
 12069                           
 12070                           ;Config register CONFIG6H @ 0x30000B
 12071                           ;	unspecified, using default values
 12072                           ;	Boot Block Table Read Protection bit
 12073                           ;	EBTRB = 0x1, unprogrammed default
 12074   30000B                     	org	3145739
 12075   30000B  FF                 	db	255
 12076                           tosu	equ	0xFFF
 12077                           tosh	equ	0xFFE
 12078                           tosl	equ	0xFFD
 12079                           stkptr	equ	0xFFC
 12080                           pclatu	equ	0xFFB
 12081                           pclath	equ	0xFFA
 12082                           pcl	equ	0xFF9
 12083                           tblptru	equ	0xFF8
 12084                           tblptrh	equ	0xFF7
 12085                           tblptrl	equ	0xFF6
 12086                           tablat	equ	0xFF5
 12087                           prodh	equ	0xFF4
 12088                           prodl	equ	0xFF3
 12089                           indf0	equ	0xFEF
 12090                           postinc0	equ	0xFEE
 12091                           postdec0	equ	0xFED
 12092                           preinc0	equ	0xFEC
 12093                           plusw0	equ	0xFEB
 12094                           fsr0h	equ	0xFEA
 12095                           fsr0l	equ	0xFE9
 12096                           wreg	equ	0xFE8
 12097                           indf1	equ	0xFE7
 12098                           postinc1	equ	0xFE6
 12099                           postdec1	equ	0xFE5
 12100                           preinc1	equ	0xFE4
 12101                           plusw1	equ	0xFE3
 12102                           fsr1h	equ	0xFE2
 12103                           fsr1l	equ	0xFE1
 12104                           bsr	equ	0xFE0
 12105                           indf2	equ	0xFDF
 12106                           postinc2	equ	0xFDE
 12107                           postdec2	equ	0xFDD
 12108                           preinc2	equ	0xFDC
 12109                           plusw2	equ	0xFDB
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     213
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2481$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2428$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2428$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  295151
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  112115
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   14556
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15164
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16228
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7824
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22822
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8114
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   22214
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7506
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7658
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20547
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2320
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D5       7       83.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     236      61        0.0%
DATA                 0      0     236       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 19:15:47 2023

               _color_read_Red 475A                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 470A                   ___fldiv@sign 0029                _color_read_Blue 47FA  
                           l43 4664                             l52 47A8                             l61 4304  
                           l46 4BC0                             l55 47F8                             l64 2DC6  
                           l49 4758                             l74 1900                             l58 4848  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 47AA  
              readColours@vals 000C              ??_Interrupts_init 0001                            l210 4C16  
                          l141 4B2E                            l150 4C2C                            l207 4C02  
                          l144 4B54                            l216 4B02                            l153 4C36  
                          l401 1DB8                            l138 4B2C                            l147 4C40  
                          l156 4C22                            l270 4C4A                            l502 3E1E  
                          l510 3D80                            l159 4962                            l426 1E12  
                          l418 1DB4                            l540 451C                            l518 3F5A  
                          l534 3EBC                            l526 3C38                            l198 4BFE  
                          l543 4412                            l552 446C                            l537 44C4  
                          l561 4A9A                            l633 3264                            l481 3FE2  
                          l546 43B8                            l570 4708                            l627 325A  
                          l564 42A6                            l396 199E                            l573 45C0  
                          l549 435E                            l494 40E2                            l558 4A5C  
                          l582 49E0                            l662 4ABC                            l567 46B6  
                          l488 370C                            l656 4BE0                            l576 4612  
                          l585 4A1E                            l665 4AD2                            l579 4064  
                          l659 4B7A                            l668 4BA0                            l933 3A7E  
                          l782 35A0                            l927 3CE2                            l938 3AC4  
                          l795 3870                            _abs 4964                            _pad 40E4  
                          _rel 01B2                            wreg 000FE8                   ___flmul@aexp 0043  
                 ___flmul@bexp 0044                   ___flmul@sign 003E                   ___flmul@temp 0049  
                 ___flmul@prod 0045                Colour_decider@i 007A                           ?_abs 0013  
                         l1213 211E                           l1205 22D4                           l1222 21EE  
                         l1223 21DC                           l1250 2A98                           l1330 3354  
                         l1323 32BC                           l1411 49A2                           l1252 28F8  
                         l1404 4896                           l1261 293E                           l1238 48DC  
                         l1326 3418                           l1166 41D0                           l1263 29B6  
                         l1255 28BC                           l1159 41C8                           l1423 3B8E  
                         l1431 4920                           l1264 29A4                           l4000 246C  
                         l3200 366C                           l1408 499A                           l1337 33B0  
                         l4010 24CE                           l4002 247C                           l1282 239A  
                         l3202 3688                           l3210 342C                           l1434 4C48  
                         l1346 456E                           l1291 2608                           l4100 3A4C  
                         l1292 25F6                           l4020 2576                           l4012 24EA  
                         l4004 2496                           l1196 2004                           l3204 36CC  
                         l3220 3482                           l3212 344C                           l3300 4964  
                         l3140 3AC6                           l1372 415C                           l1380 2EA2  
                         l1197 1FF2                           l4102 3A5E                           l4030 25B2  
                         l4022 2580                           l4014 2514                           l4006 24A6  
                         l1286 26FE                           l1198 1FB8                           l3310 3EE2  
                         l3230 34D6                           l3222 348E                           l3214 3450  
                         l3206 341A                           l3302 497E                           l3150 3B48  
                         l3142 3AD8                           l1391 3044                           l4104 3A6C  
                         l4040 2624                           l4032 25C0                           l4024 258E  
                         l4016 254A                           l4008 24C2                           l4120 32E2  
                         l4112 3268                           l3160 415E                           l3320 3F42  
                         l3312 3EFA                           l3304 4B2E                           l4200 42A8  
                         l3240 354A                           l3232 34E8                           l3224 34AC  
                         l3216 345E                           l3208 341E                           l3144 3AEA  
                         l1368 4106                           l3400 2E9E                           l1289 2590  
                         l1377 2E54                           l4106 3ABC                           l4050 268E  
                         l4042 2632                           l4034 25EE                           l4026 25A0  
                         l4018 2558                           l4130 333C                           l4114 3278  
                         l3170 4196                           l3162 4166                           l3154 4B7C  
                         l3314 3F06                           l3330 409A                           l3322 4066  
                         l3306 4B3E                           l4210 2C62                           l4202 2A9A  
                         l3234 3516                           l3226 34B4                           l3242 3550  
                         l3218 347E                           l3250 370E                           l3146 3AF4  
                         l3410 2F42                           l3402 2EAA                           l1299 26C0  
                         l1379 2E5C                           l4108 3AC2                           l4060 26E4  
                         l4052 26A8                           l4044 265C                           l4028 25AE  
                         l3500 1E52                           l4140 33A0                           l4132 333E  
                         l4124 32F6                           l4116 3286                           l4220 0E5C  
                         l3180 41C2                           l3172 419C                           l3164 4178  
                         l3156 4B98                           l3316 3F12                           l3308 3EBE  
                         l3324 406A                           l3332 40B2                           l3340 3DBE  
                         l4212 2CFA                           l4204 2B66                           l3244 3560  
                         l3236 3536                           l3228 34C8                           l3260 3752  
                         l3252 3712                           l3148 3B12                           l3420 2FFE  
                         l3412 2F48                           l3404 2EB4                           l4054 26C4  
                         l4062 26EA                           l4038 2618                           l4046 2660  
                         l3510 1E82                           l3502 1E62                           l4070 48A8  
                         l4150 33F8                           l4142 33BE                           l4134 334A  
                         l4126 32FE                           l4118 32CC                           l4222 0E8C  
                         l3174 41B2                           l3166 4180                           l3190 35A2  
                         l3318 3F2A                           l3334 40CA                           l3326 4082  
                         l3342 3DCA                           l3350 3CE4                           l3430 4C38  
                         l4214 2D2E                           l4206 2B9A                           l3246 3580  
                         l3238 3538                           l3270 37BA                           l3262 3772  
                         l3254 3720                           l3182 48DE                           l3422 300E  
                         l3406 2EBA                           l3414 2FAC                           l1398 39C0  
                         l4080 3CA6                           l4064 26EE                           l4056 26D4  
                         l4048 267A                           l3600 2054                           l3520 1EAC  
                         l3512 1E94                           l3504 1E64                           l4152 3406  
                         l4144 33C0                           l4136 3386                           l4128 330A  
                         l4320 15C4                           l4312 1554                           l4304 150A  
                         l4240 0FDE                           l4232 0EFE                           l4224 0EC0  
                         l4216 0E26                           l3176 41BA                           l3168 4188  
                         l3192 35BE                           l3328 408E                           l3344 3DD6  
                         l3336 3D82                           l3352 3D08                           l3360 3D50  
                         l3432 4C3C                           l3440 4C32                           l4208 2C2E  
                         l4400 4BE2                           l3280 3830                           l3272 37E8  
                         l3264 3790                           l3256 3740                           l3184 48EA  
                         l3424 3014                           l3416 2FC6                           l3408 2F3C  
                         l4160 4856                           l4082 3CB6                           l4074 3C3A  
                         l4090 39C2                           l4058 26E2                           l3610 2082  
                         l3602 2062                           l3522 1EBC                           l3530 1EE6  
                         l3514 1E96                           l3506 1E6C                           l4154 3408  
                         l4146 33C4                           l4138 3392                           l4330 1644  
                         l4306 1548                           l4242 1010                           l4234 0F50  
                         l4226 0EF4                           l4218 0E50                           l3178 41BC  
                         l3194 3612                           l3370 3E68                           l3338 3DA6  
                         l3346 3DEE                           l3362 3D68                           l3354 3D20  
                         l3434 4C1A                           l4170 4618                           l4410 4BFC  
                         l4402 4BEC                           l3450 4930                           l3442 4C24  
                         l3282 3850                           l3274 3808                           l3266 3798  
                         l3258 3744                           l3186 48FC                           l3290 40FE  
                         l3426 3024                           l3418 2FE4                           l4162 4872  
                         l4084 3CDA                           l4076 3C68                           l4092 39F0  
                         l3620 20EE                           l3612 208C                           l3604 206E  
                         l3540 1F1E                           l3532 1EF6                           l3524 1ECC  
                         l3516 1E9C                           l3508 1E7C                           l4068 4898  
                         l4148 33E8                           l4340 165C                           l4316 1560  
                         l4260 1190                           l4252 1094                           l4244 1016  
                         l4236 0F82                           l3196 3626                           l3372 3E74  
                         l3364 3E20                           l3348 3E06                           l4500 3FF8  
                         l3356 3D2C                           l3436 4C1E                           l4180 4650  
                         l4172 4622                           l3460 4A9C                           l4404 4BEE  
                         l3452 4938                           l3444 4C28                           l4412 4AD4  
                         l3276 381A                           l3268 37AC                           l3188 4900  
                         l3292 4112                           l3380 2DE8                           l3700 38B8  
                         l4164 488E                           l4086 3CE0                           l4078 3C78  
                         l4094 3A00                           l3622 20FE                           l3606 2072  
                         l3614 2092                           l3550 1F32                           l3542 1F22  
                         l3534 1F08                           l3526 1EDC                           l3518 1EAA  
                         l4342 168E                           l4318 1592                           l4262 11A2  
                         l4270 134E                           l4254 10A8                           l4246 1032  
                         l4238 0F8A                           l3198 362A                           l3366 3E44  
                         l3374 3E8C                           l4502 4010                           l3358 3D38  
                         l3470 4498                           l3438 4C2E                           l4190 465A  
                         l4182 4652                           l4174 4632                           l3462 4AA8  
                         l4510 304E                           l4406 4BF8                           l3454 495E  
                         l3446 4924                           l4414 4AD8                           l3278 3820  
                         l3294 4126                           l3286 40E4                           l3390 2E64  
                         l3382 2DFC                           l3702 38C8                           l4158 484A  
                         l3800 2700                           l4096 3A2E                           l3640 2180  
                         l3632 2158                           l3616 20B8                           l3624 210E  
                         l3608 2080                           l3560 1F46                           l3552 1F36  
                         l3544 1F26                           l3536 1F16                           l3528 1EDE  
                         l4360 1766                           l4344 16C0                           l4336 1650  
                         l4328 1606                           l4272 1380                           l4280 13BE  
                         l4264 121E                           l4256 1148                           l4248 1088  
                         l3376 3EA4                           l3368 3E5C                           l3480 43CE  
                         l3472 44C6                           l4504 4024                           l4432 4BC2  
                         l4192 465C                           l4184 4654                           l4176 463C  
                         l4168 4614                           l3464 4AB8                           l4520 30CE  
                         l4440 3F5C                           l4408 4BFA                           l3456 4960  
                         l3448 4928                           l4416 4AE6                           l3296 412A  
                         l3288 40F2                           l3392 2E74                           l3384 2E0C  
                         l3712 3986                           l3704 38E4                           l4600 1912  
                         l3810 273C                           l3802 270C                           l4098 3A3E  
                         l3642 2188                           l3634 2162                           l3626 2134  
                         l3618 20EC                           l3650 21AC                           l3570 1F5A  
                         l3562 1F4A                           l3554 1F3A                           l3546 1F2A  
                         l3538 1F1A                           l3490 1E16                           l4362 1798  
                         l4370 17CE                           l4282 13F0                           l4290 142E  
                         l4274 13B2                           l4266 127A                           l4258 1158  
                         l3482 43E6                           l3474 44DA                           l4506 4038  
                         l4434 4BCA                           l3466 446E                           l3730 4B18  
                         l3722 4B04                           l4194 465E                           l4186 4656  
                         l4178 4646                           l4530 317C                           l4522 30F8  
                         l4514 3060                           l4450 3F8A                           l4442 3F6E  
                         l4418 4AEA                           l3298 4148                           l3394 2E7A  
                         l3386 2E2C                           l3378 2DC8                           l3706 3900  
                         l4610 1928                           l4602 1916                           l3900 296E  
                         l3820 276C                           l3812 274C                           l3804 271A  
                         l3660 21FE                           l3652 21B0                           l3644 218C  
                         l3636 2170                           l3628 2144                           l3580 1FD2  
                         l3572 1F84                           l3564 1F4E                           l3556 1F3E  
                         l3548 1F2E                           l3492 1E22                           l4372 1800  
                         l4356 1702                           l4292 1460                           l4284 1422  
                         l4268 12F6                           l3476 44F0                           l4436 4BD4  
                         l3468 4482                           l3732 4B1A                           l3724 4B0E  
                         l4196 4660                           l4188 4658                           l3484 4306  
                         l4540 3218                           l4532 3194                           l4524 3110  
                         l4516 308E                           l4508 3046                           l4460 3FC8  
                         l4452 3F8E                           l4444 3F70                           l3396 2E8A  
                         l3388 2E48                           l3708 3956                           l3716 3998  
                         l4700 1B54                           l4620 1934                           l4612 192A  
                         l4604 1922                           l3910 29E0                           l3902 299C  
                         l3830 27A2                           l3822 2772                           l3814 274E  
                         l3806 271C                           l3670 2264                           l3662 220A  
                         l3654 21BE                           l3646 219C                           l3638 2172  
                         l3590 2012                           l3582 1FD6                           l3574 1FA0  
                         l3566 1F52                           l3558 1F42                           l3494 1E30  
                         l4374 1832                           l4358 1734                           l4294 1492  
                         l3478 43BA                           l4438 4BDE                           l3726 4B14  
                         l3734 4BA4                           l4198 4662                           l4470 4B56  
                         l3486 431A                           l4542 3242                           l4534 31BE  
                         l4526 313A                           l4518 30B6                           l4462 3FCA  
                         l4454 3FB2                           l4446 3F72                           l3750 47F0  
                         l3742 475A                           l3398 2E96                           l4710 1B9A  
                         l4702 1B68                           l4630 1952                           l4622 193A  
                         l4614 192E                           l4606 1924                           ?_pad 0011  
                         l3920 2A58                           l3912 2A0A                           l3840 27E2  
                         l3832 27B2                           l3824 2780                           l3808 272C  
                         l3816 2756                           l3680 22AC                           l3672 2274  
                         l3664 2218                           l3656 21D4                           l3648 219E  
                         l3592 2022                           l3584 1FE4                           l3576 1FB0  
                         l3568 1F56                           l3496 1E32                           l4392 18EC  
                         l4376 186C                           l4384 18AA                           l4296 14CC  
                         l4480 4440                           l3728 4B16                           l4472 4B58  
                         l3488 4332                           l4536 31D6                           l4528 3152  
                         l4544 325A                           l4464 3FD4                           l4456 3FBC  
                         l4448 3F74                           l3744 47A0                           l3736 470A  
                         l3760 4C02                           l4720 1BE0                           l4712 1BAE  
                         l4704 1B6C                           l4640 1970                           l4632 195A  
                         l4624 193E                           l4616 1930                           l4608 1926  
                         l3930 2A8E                           l3922 2A74                           l3906 29C6  
                         l3914 2A0E                           l3842 27F2                           l3850 2812  
                         l3834 27B4                           l3826 2782                           l3818 2766  
                         l3682 22AE                           l3674 2294                           l3666 2252  
                         l3586 1FE6                           l3578 1FC6                           l3498 1E42  
                         l4474 4B5E                           l3770 4A5E                           l4538 3200  
                         l4466 3FD6                           l4458 3FBE                           l3754 47FA  
                         l3738 4750                           l3762 4C12                           l4490 455C  
                         l4482 451E                           l4730 1C26                           l4722 1BF4  
                         l4714 1BB2                           l4706 1B70                           l4650 199A  
                         l4642 1978                           l4634 1960                           l4626 1942  
                         l4618 1932                           l3924 2A78                           l3916 2A28  
                         l3908 29D2                           l3860 2850                           l3852 2822  
                         l3844 27FA                           l3828 2792                           l3836 27BC  
                         l3940 22E2                           l3684 22B4                           l3676 2298  
                         l3668 2254                           l3596 2036                           l3588 1FF0  
                         l4396 18F8                           l4476 4414                           l3772 45C2  
                         l3764 4A20                           l3780 3BD8                           l4468 3FE0  
                         l3756 4840                           l3748 47AA                           l3692 3872  
                         l4484 4530                           l4740 1C6C                           l4732 1C3A  
                         l4724 1BF8                           l4716 1BB6                           l4708 1B86  
                         l4660 19E4                           l4652 19AC                           l4644 1980  
                         l4636 1964                           l4628 194A                           l3926 2A86  
                         l3918 2A3E                           l3870 2898                           l3862 2860  
                         l3854 2822                           l3846 27FE                           l3838 27CC  
                         l3950 2322                           l3942 22F0                           l3686 22C2  
                         l3678 22A6                           l3598 2046                           l4478 4428  
                         l3790 4360                           l4494 4666                           l3766 4570  
                         l3782 3BE4                           l3774 3B90                           l3694 3896  
                         l4486 4538                           l4750 1CB2                           l4742 1C80  
                         l4734 1C3E                           l4726 1BFC                           l4718 1BCC  
                         l4670 1A2C                           l4662 19F0                           l4654 19C4  
                         l4646 198A                           l4638 1968                           l3928 2A8C  
                         l3880 28E6                           l3872 28AC                           l3864 2870  
                         l3960 2352                           l3952 2328                           l3944 22F2  
                         l3688 22C4                           l3792 4374                           l4496 46B8  
                         l3768 4242                           l3776 3BB4                           l3784 3BFC  
                         l3696 38A4                           l4488 4540                           l4760 1CF8  
                         l4752 1CC6                           l4744 1C84                           l4736 1C42  
                         l4728 1C12                           l4680 1AA6                           l4672 1A40  
                         l4664 1A04                           l4656 19C8                           l4648 1992  
                         l4592 1902                           l3890 292E                           l3882 28F6  
                         l3874 28BA                           l3866 2880                           l3858 2836  
                         l3970 238A                           l3962 2354                           l3954 2338  
                         l3946 2302                           l3938 22D6                           l3794 438C  
                         l4498 3FE4                           l3786 3C14                           l3778 3BCC  
                         l3698 38B2                           l4770 1D3E                           l4762 1D0C  
                         l4754 1CCA                           l4746 1C88                           l4738 1C58  
                         l4690 1AF4                           l4682 1AAE                           l4674 1A54  
                         l4666 1A22                           l4658 19D0                           l4594 1906  
                         l3892 293C                           l3884 2908                           l3876 28C6  
                         l3868 2888                           l3980 23DA                           l3972 23AA  
                         l3964 2364                           l3956 233E                           l3948 2312  
                         l3796 49A4                           l3788 3C2C                           l4780 1DC0  
                         l4772 1D56                           l4764 1D10                           l4756 1CCE  
                         l4748 1C9E                           l4692 1AFC                           l4684 1AB6  
                         l4676 1A70                           l4668 1A28                           l4596 190A  
                         l3886 291E                           l3894 294E                           l3878 28E4  
                         l3990 242A                           l3982 23E4                           l3974 23BA  
                         l3966 2374                           l3958 2344                           l3798 49E2  
                         l4782 1DF2                           l4774 1D68                           l4766 1D14  
                         l4758 1CE4                           l4694 1B02                           l4686 1ABE  
                         l4678 1A8C                           l4598 190E                           l3896 295C  
                         l3888 2924                           l3992 2436                           l3984 23FA  
                         l3968 2384                           l4776 1D7C                           l4768 1D2A  
                         l4696 1B34                           l4688 1AD6                           l4784 1DFE  
                         l3898 2960                           l3994 2444                           l3986 2406  
                         l3978 23CE                           l4778 1DA6                           l4698 1B40  
                         l3996 2450                           l3988 241E                           l3998 2460  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 2080                           u3001 207C  
                         u3010 20B8                           u3011 20B4                           u3100 21D4  
                         u3020 20FE                           u2300 3AD8                           u3101 21D0  
                         u3021 20FA                           u2301 3AD4                           u3110 21EA  
                         u3030 2134                           u2310 3AEA                           u3111 21E6  
                         u3031 2130                           u2311 3AE6                           u3120 21FE  
                         u3040 2144                           u4000 1492                           u2400 342C  
                         u2320 3B12                           u3200 3896                   _BAUD4CONbits 000EE9  
                         u3121 21FA                           u3041 2140                           u4001 148E  
                         u2401 3428                           u2321 3B0E                           u3201 3892  
                         u3130 2218                           u3050 2170                           u4010 14CC  
                         u2410 345E                           u2330 3B48                           u3210 38E4  
                         u3131 2214                           u3051 216C                           u4011 14C8  
                         u2411 345A                           u2331 3B44                           u3211 38E0  
                         u3300 2792                           u3140 2252                           u3060 2180  
                         u4100 16FE                           u4020 1506                           u2340 4178  
                         u2500 37BA                           u3220 3900                           u3301 278E  
                         u3141 224E                           u3061 217C                           u4101 16FA  
                         u4021 1502                           u2341 4174                           u2421 3488  
                         u2501 37B6                           u3221 38FC                           u3310 27A2  
                         u3150 2264                           u3070 219C                           u4110 1734  
                         u4030 1548                           u2350 4196                           u3230 4C12  
                         u2430 34AC                           u2510 37E8                           u3311 279E  
                         u3151 2260                           u3071 2198                           u4111 1730  
                         u4031 1544                           u2351 4192                           u3231 4C0E  
                         u2431 34A8                           u2511 37E4                           u3400 295C  
                         u3320 27E2                           u3160 2274                           u3080 21AC  
                         u4120 1766                           u4040 1592                           u2360 41B2  
                         u2600 40CA                           u3240 3C14                           u4200 4B02  
                         u2440 34D6                           u2520 3830                           u3401 2958  
                         u3321 27DE                           u3161 2270                           u3081 21A8  
                         u4121 1762                           u4041 158E                           u2361 41AE  
                         u2601 40C6                           u3241 3C10                           u4201 4AFE  
                         u2441 34D2                           u2521 382C                           u3410 296E  
                         u3330 2822                           u3170 2294                           u3090 21BE  
                         u4130 1798                           u4050 15C4                           u2610 40E2  
                         u3250 3C2C                           u2450 3516                           u2370 4920  
                         u2530 40F2                           _T2PR 000FBC                           u3411 296A  
                         u3331 281E                           u3171 2290                           u3091 21BA  
                         u4131 1794                           u4051 15C0                           u2611 40DE  
                         u3251 3C28                           u2451 3512                           u2371 491C  
                         u2531 40EE                           u3420 299C                           u3340 2898  
                         u3260 271A                           u3500 2302                           u3180 22A6  
                         u4140 17CA                           u4060 1602                           u2380 35BE  
                         u2620 3E06                           u4300 3200                           u2460 3560  
                         u2540 4148                           u2700 2E0C                           u3421 2998  
                         u3341 2894                           u3261 2716                           u3501 22FE  
                         u3181 22A2                           u4141 17C6                           u4061 15FE  
                         u2381 35BA                           u2621 3E02                           u4301 31FC  
                         u2461 355C                           u2541 4144                           u2701 2E08  
                         u3430 29B2                           u3350 28BA                           u3270 272C  
                         u3510 2312                           u3190 22C2                           u4150 1800  
                         u4070 1644                           u2390 3688                           u2630 3E1E  
                         u4310 3242                           u2470 3720                           u2550 497E  
                         u2710 2E48                           u3431 29AE                           u3351 28B6  
                         u3271 2728                           u3511 230E                           u3191 22BE  
                         u4151 17FC                           u4071 1640                           u2391 3684  
                         u2631 3E1A                           u4311 323E                           u2471 371C  
                         u2551 497A                           u2711 2E44                           u3440 29C6  
                         u3360 28E4                           u3280 273C                           u3600 25C0  
                         u3520 2352                           u4160 1832                           u4080 168E  
                         u2640 3D68                           u2560 4B3E                           u2800 4AD2  
                         u4240 305C                           u2480 3752                           u2720 2E74  
                         u4400 1AF4                           u3441 29C2                           u3361 28E0  
                         u3281 2738                           u3601 25BC                           u3521 234E  
                         u4161 182E                           u4081 168A                           u2641 3D64  
                         u2561 4B3A                           u2801 4ACE                           u4241 3058  
                         u2481 374E                           u2721 2E70                           u4401 1AF0  
                         u3450 29E0                           u3370 2908                           u3290 2780  
                         u3610 25EE                           u3530 2364                           u2810 1E30  
                         u4170 186C                           u4090 16C0                           u2650 3D80  
                         u2570 4B54                           u4250 30B6                           u2490 3790  
                         u2730 2E8A                           u4410 1B54                           u3451 29DC  
                         u3371 2904                           u3291 277C                           u3611 25EA  
                         u3531 2360                           u2811 1E2C                           u4171 1868  
                         u4091 16BC                           u2651 3D7C                           u2571 4B50  
                         u4251 30B2                           u2491 378C                           u2731 2E86  
                         u4411 1B50                           u3460 2A28                           u3380 291E  
                         u3700 3CDA                           u3620 2604                           u3540 2374  
                         u2900 1F84                           u2820 1E42                           u4180 18A6  
                         u2580 3F42                           u2660 3EA4                           u4260 30F8  
                         u2740 2FC6                           u4500 1E12                           u4420 1B9A  
                         u3461 2A24                           u3381 291A                           u3701 3CD6  
                         u3621 2600                           u3541 2370                           u2901 1F80  
                         u2821 1E3E                           u4181 18A2                           u2581 3F3E  
                         u2661 3EA0                           u4261 30F4                           u2741 2FC2  
                         u4501 1E0E                           u4421 1B96                           u3470 2A58  
                         u3390 293C                           u3710 39F0                           u3630 2618  
                         u3550 23AA                           u2910 1F9C                           u2830 1E52  
                         u4190 18E8                           u2590 3F5A                           u2670 3EBC  
                         u4270 313A                           u2750 2FE4                           u4430 1BE0  
                         u3471 2A54                           u3391 2938                           u3711 39EC  
                         u3631 2614                           u3551 23A6                           u2911 1F96  
                         u2831 1E4E                           u4191 18E4                           u2591 3F56  
                         u2671 3EB8                           u4271 3136                           u2751 2FE0  
                         u4431 1BDC                           u3480 2A86                           u3720 3A2E  
                         u3640 2632                           u3560 23BA                           u2920 1F9E  
                         u2840 1E94                           u3800 3382                           u4280 317C  
                         u2760 2FFE                           u2680 2DF8                           u4440 1C26  
                         u3481 2A82                           u3721 3A2A                           u3641 262E  
                         u3561 23B6                           u2841 1E90                           u3801 337E  
                         u4281 3178                           u2761 2FFA                           u2681 2DF2  
                         u4441 1C22                           u3730 3A4C                           u3650 267A  
                         u3570 2534                           u3490 22F0                           u2930 1FC6  
                         u2850 1EAA                           u3810 33A0                           u4290 31BE  
                         u2770 300E                           u2690 2DFA                           u4450 1C6C  
                         u4370 19AC                           u3731 3A48                           u3651 2676  
                         u3491 22EC                           u2931 1FC2                           u2851 1EA6  
                         u3811 339C                           u4291 31BA                           u2771 300A  
                         u4451 1C68                           u4371 19A8                           u3740 3A6C  
                         u3660 26A8                           u3580 258E                           u2940 1FE4  
                         u2860 1EBC                           u3820 33B0                           u3900 1032  
                         u2780 494C                           u4460 1CB2                           u4380 1A22  
                         u3741 3A68                           u3661 26A4                           u3581 258A  
                         u2941 1FE0                           u2861 1EB8                           u3821 33AC  
                         u3901 102E                           u2781 4944                           u4461 1CAE  
                         u4381 1A1E                           u3750 3ABC                           u3670 26E2  
                         u3590 25AE                           u2950 2004                           u2870 1ECC  
                         u3830 33BE                           u3910 1088                           u4470 1CF8  
                         u4390 1AA6                           u3751 3AB8                           u3671 26DE  
                         u3591 25AA                           u3575 252A                           u2951 2000  
                         u2871 1EC8                           u3831 33BA                           u3911 1084  
                         u4471 1CF4                           u4607 1AC8                           u4391 1AA2  
                         u3680 3C68                           u2960 2012                           u2880 1F08  
                         u3840 33F8                           u3760 3278                           u3920 10A8  
                         u4480 1D3E                           u3681 3C64                           u2961 200E  
                         u2881 1F04                           u3841 33F4                           u3761 3274  
                         u3921 10A4                           u4617 3BEE                           u4481 1D3A  
                         u3690 3CA6                           u2970 2022                           u2890 1F16  
                         u3850 3406                           u3770 3286                           u3930 1158  
                         u4490 1D68                           u3691 3CA2                           u2971 201E  
                         u2891 1F12                           u3851 3402                           u3771 3282  
                         u3931 1154                           u4707 4042                           u4627 4AAE  
                         u4491 1D64                           u2980 2054                           u3780 32E2  
                         u3940 11A2                           u3860 488E                           u2981 2050  
                         u3781 32DE                           u3941 119E                           u4717 44E4  
                         u4637 4324                           u3861 488A                           u2990 2062  
                         u3790 3338                           u3950 1380                           u2798 494E  
                         u2991 205E                           u3791 3334                           u3951 137C  
                         u3871 0E56                           u4807 445E                           u4727 450E  
                         u4647 4350                           u3960 13B2                           u3880 0F50  
                         u3961 13AE                           u3881 0F4C                           u4817 40A4  
                         u4737 3DE0                           u4657 4628                           u3970 13F0  
                         u3890 0FDE                           u3971 13EC                           u3891 0FDA  
                         u4827 3F1C                           u4747 437E                           u4667 448C  
                         u4587 19B6                           u3980 1422                           u3981 141E  
                         u4757 43AA                           u4677 44B6                           u4597 1A5E  
                         u3990 1460                           u3991 145C                           u4767 43D8  
                         u4687 3D42                           u4777 4404                           u4697 4002  
                         u4787 3E7E                           u4797 4432                  _LightBlueMove 45C2  
                         abs@a 0013                           _dbuf 0192                           _main 1902  
                         _dtoa 2DC8                           _prec 00F0                           _vals 01C7  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 4066                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 002A         __end_of_color_read_Red 47AA  
              __end_of_HighISR 000E         __end_of_color_read_lum 475A                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 4A5E  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 446E                __end_of___aodiv 35A2                __end_of___fladd 22D6  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3872  
              __end_of___fldiv 2A9A                __end_of___flmul 2700                __end_of___flsub 48DE  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 41D2  
                        i2l275 000A                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3266        __end_of_sendCharSerial4 4C18  
   __end_of_I2C_2_Master_Start 4C42     __end_of_I2C_2_Master_Write 4C24                   YellowMove@mL 0020  
                        _flags 00F4                   YellowMove@mR 0022                          _fputc 3AC6  
                        _fputs 48DE                 delayed_ms@time 0001                          pad@fp 0011  
                        _power 01D3                          _width 015C                          _putch 4C48  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                 main@run_flag 00E8                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 4570        __end_of_color_read_Blue 484A          _I2C_2_Master_RepStart 4C24  
             __end_of_BlueMove 42A8                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 41D2  
              _reverseOneBlock 4360                   __end_of_main 1E16                   __end_of_dtoa 3046  
                 __end_of_stop 40E4                _colour_rel$2831 003A                _colour_rel$2832 003E  
                       ??_main 0059                         ??_dtoa 0026          __end_of_ReverseYellow 49E2  
             __end_of_PinkMove 470A                         ??_stop 0018                  __activetblptr 000001  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 4666                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 4570               __end_of___xxtofl 341A  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0057                  ??_ReversePink 0024                         ___flge 39C2  
                       ___fleq 3C3A                      ??___aodiv 0011                  main@temp_1189 00E6  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 4B7C  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 0021  
                    ??___flmul 003A                      ??___flsub 0019                      ??___lwdiv 000B  
                       clear_0 420A                         clear_1 4216                         clear_2 4222  
                       _motorL 00F5                         _motorR 01BE                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 4898                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0059  
             __end_of_turnLeft 3E20                     ___flge@ff1 0001                     _YellowMove 4666  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 4230        __end_of_reverseOneBlock 43BA       __end_of_color_read_Green 47FA  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
              _Interrupts_init 4C4A                 __pcstackCOMRAM 0001                  _fullSpeedBack 3E20  
                 __pidataBANK0 4C4C                   __pidataBANK1 4C42                  __end_of_fputc 3B90  
                __end_of_fputs 4922                  __end_of_putch 4C4A              __end_of_GreenMove 4A9C  
          __end_of_Timer0_init 4BE2            __end_of_ReversePink 4A20                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14351 0150  
        __end_of_reverseDetect 4414                        ??_putch 0001                     __pbssBANK0 00F0  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 4414  
                   _getTMR0val 4B56              __end_of_RetryMove 4066                      ?_PinkMove 0020  
            _color_writetoaddr 4BA2                     _delayed_ms 4A9C                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 0001                        ?___fleq 0019  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                 ?_turnRight45 001A          __end_of_timed_forward 3C3A            ??_color_writetoaddr 0004  
                colour_rel@rel 0034                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2A9A        __end_of_Interrupts_init 4C4C  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 00EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 4BC2                        _RedMove 4A20             _I2C_2_Master_Start 4C38  
                   ??_PinkMove 0024                     _initUSART4 4BE2             _I2C_2_Master_Write 4C18  
                      __Hparam 0000                        _WayBack 0160                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4BC2                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 49E2                        ___aodiv 341A  
                      ___fladd 1E16                        ___aomod 370E                        ___fldiv 2700  
                      ___flmul 22D6                        ___flsub 4898            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 415E            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 41D2                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3046                        __ptext0 1902                        __ptext1 451E  
                      __ptext2 484A                        __ptext3 3872                        __ptext4 2DC8  
                      __ptext5 40E4                        __ptext6 48DE                        __ptext7 3AC6  
                      __ptext8 4C48                        __ptext9 4964                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005E  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 451E  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 4230  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F2  
                  ?_delayed_ms 0001              __end_of_vfpfcnvrt 39C2                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 01D1                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0047  
                   ??_vfprintf 0057                _initDCmotorsPWM 3F5C                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 3D82  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                  ___fldiv@grs 002C                    ___fldiv@rem 0025               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032  
             ?_Interrupts_init 0001                    ___flmul@grs 003F                    _CCP1CONbits 000FAB  
                   main@colour 00EC                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 44C6                 __end_of___flge 3AC6                 __end_of___fleq 3CE4  
               _fullSpeedAhead 3EBE                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F                 __end_of___wmul 4BA2       __end_of_Forwardhalfblock 446E  
                    _GreenMove 4A5E            start_initialization 41D2                    __end_of_abs 49A4  
                  __end_of_pad 415E                  _TxBufWriteCnt 005C          __end_of_LightBlueMove 4614  
                 ??_OrangeMove 0024            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3FE4  
                  vfprintf@fmt 0053         __end_of_fullSpeedAhead 3F5C                       ??___flge 0009  
                     ??___fleq 0021                      _RetryMove 3FE4                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                    __pdataBANK0 00FE  
                  __pdataBANK1 01CF                _ForwardOneBlock 4306                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 49A4                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 45C2                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020               ___lwdiv@dividend 0007                      _dtoa$2509 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 001A  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0019  
             ___aodiv@quotient 0013                       ?___flmul 0032                       ?___flsub 0011  
          _Colour_decider$2833 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 46B8  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 4306              _I2C_2_Master_Idle 4B2E              _I2C_2_Master_Init 4B04  
            _I2C_2_Master_Read 4922              _I2C_2_Master_Stop 4C2E                  _low_threshold 015E  
                 _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060  
             getTMR0val@moving 0001                 colour_rel@vals 0032              _sendStringSerial4 4AD4  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 4360                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3872  
    __end_of_I2C_2_Master_Idle 4B56      __end_of_I2C_2_Master_Init 4B2E      __end_of_I2C_2_Master_Read 4964  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4C38                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4B7C                   _TxBufReadCnt 005B  
                     _BlueMove 4242                      _turnRight 3CE4             __end_of_delayed_ms 4AD4  
                    copy_data0 41E6      __end_of_sendStringSerial4 4B04                   ??_colour_rel 0036  
                _reverseDetect 43BA  __end_of_I2C_2_Master_RepStart 4C2E             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 370E                   ??_initUSART4 0001                       _PinkMove 46B8  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 3EBE  
                 __Lsmallconst 0E00                    ??_RetryMove 001E                    _readColours 42A8  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2DC8                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                  _timed_forward 3B90                     sprintf@fmt 0062  
            ?_Forwardhalfblock 001A                       ___xxtofl 3266                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4C00                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 370E                       __ptext11 341A  
                     __ptext20 4922                       __ptext12 4AD4                       __ptext21 4BE2  
                     __ptext13 4C00                       __ptext30 4570                       __ptext22 3F5C  
                     __ptext14 42A8                       __ptext31 45C2                       __ptext23 3046  
                     __ptext15 470A                       __ptext40 4C38                       __ptext32 4A5E  
                     __ptext24 3B90                       __ptext16 475A                       __ptext41 4B2E  
                     __ptext33 4242                       __ptext25 4A9C                       __ptext17 47AA  
                     __ptext50 3D82                       __ptext42 4B04                       __ptext34 4B56  
                     __ptext26 49A4                       __ptext18 47FA                       __ptext51 4360  
                     __ptext43 4666                       __ptext35 2A9A                       __ptext27 49E2  
                     __ptext19 4C24                       __ptext60 415E                       __ptext52 43BA  
                     __ptext44 446E                       __ptext36 4614                       __ptext28 4306  
                     __ptext61 0E26                       __ptext53 3E20                       __ptext45 3CE4  
                     __ptext37 4BA2                       __ptext29 4A20                       __ptext62 3266  
                     __ptext54 4C4A                       __ptext46 4BC2                       __ptext38 4C18  
                     __ptext63 4898                       __ptext55 4414                       __ptext47 3FE4  
                     __ptext39 4C2E                       __ptext64 1E16                       __ptext56 4066  
                     __ptext48 46B8                       __ptext65 22D6                       __ptext57 3EBE  
                     __ptext49 44C6                       __ptext66 39C2                       __ptext58 35A2  
                     __ptext67 3C3A                       __ptext59 4B7C                       __ptext68 2700  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 484A  
                ??_turnRight45 001E                       main@temp 00E4                       _turnLeft 3D82  
             ___aomod@dividend 0001                 ?_timed_forward 0014                    delayed_ms@i 0004  
            ??_reverseOneBlock 001E                main@prev_colour 00EE                    _setMotorPWM 35A2  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 006C                 _high_threshold 01CF               ??_fullSpeedAhead 0018  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0045                ___aomod@counter 0011  
             _color_click_init 4614                       sprintf@f 006E                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 44C6  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 451E                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 4C00                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
