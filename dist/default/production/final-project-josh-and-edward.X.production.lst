

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 20:17:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Generated 06/04/2022 GMT
    94                           ; 
    95                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F67K40 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127   000000                     
   128                           	psect	idataBANK0
   129   004D7A                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _DataFlag
   133   004D7A  01                 	db	1
   134                           
   135                           	psect	idataBANK1
   136   004D6E                     __pidataBANK1:
   137                           	callstack 0
   138                           
   139                           ;initializer for _high_threshold
   140   004D6E  03E8               	dw	1000
   141                           
   142                           ;initializer for _RunOneBlockTime
   143   004D70  07D0               	dw	2000
   144                           
   145                           ;initializer for _Turn45Delay
   146   004D72  00DC               	dw	220
   147                           
   148                           ;initializer for _power
   149   004D74  001E               	dw	30
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _SSP2CON2bits	set	3802
   155   000000                     _RX4PPS	set	3605
   156   000000                     _SSP2CLKPPS	set	3612
   157   000000                     _SSP2DATPPS	set	3613
   158   000000                     _ANSELDbits	set	3751
   159   000000                     _SSP2ADD	set	3798
   160   000000                     _SSP2CON1bits	set	3801
   161   000000                     _LATAbits	set	3961
   162   000000                     _LATFbits	set	3966
   163   000000                     _LATGbits	set	3967
   164   000000                     _TRISAbits	set	3969
   165   000000                     _TRISGbits	set	3975
   166   000000                     _PORTFbits	set	3982
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _TRISCbits	set	3971
   170   000000                     _TRISDbits	set	3972
   171   000000                     _TRISFbits	set	3974
   172   000000                     _LATDbits	set	3964
   173   000000                     _RC4REG	set	3811
   174   000000                     _SP4BRGL	set	3813
   175   000000                     _TX4STAbits	set	3816
   176   000000                     _BAUD4CONbits	set	3817
   177   000000                     _SSP2CON2	set	3802
   178   000000                     _SSP2STAT	set	3800
   179   000000                     _ANSELFbits	set	3764
   180   000000                     _SSP2BUF	set	3797
   181   000000                     _PIE4bits	set	3629
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RD5PPS	set	3695
   185   000000                     _RE2PPS	set	3700
   186   000000                     _RD6PPS	set	3696
   187   000000                     _RC7PPS	set	3689
   188   000000                     _CCPR4H	set	3873
   189   000000                     _CCPR3H	set	3877
   190   000000                     _CCP1CONbits	set	4011
   191   000000                     _CCPTMRS0bits	set	4013
   192   000000                     _T2PR	set	4028
   193   000000                     _T2CONbits	set	4029
   194   000000                     _TMR0L	set	4051
   195   000000                     _TMR0H	set	4052
   196   000000                     _CCP2CONbits	set	4007
   197   000000                     _CCP3CONbits	set	3878
   198   000000                     _CCP4CONbits	set	3874
   199   000000                     _T0CON1bits	set	4054
   200   000000                     _T0CON0bits	set	4053
   201   000000                     _RE4PPS	set	3702
   202   000000                     _RG6PPS	set	3720
   203   000000                     _T2CLKCONbits	set	4031
   204   000000                     _T2HLTbits	set	4030
   205                           
   206                           	psect	smallconst
   207   000E00                     __psmallconst:
   208                           	callstack 0
   209   000E00  00                 	db	0
   210   000E01                     STR_1:
   211   000E01  72                 	db	114	;'r'
   212   000E02  65                 	db	101	;'e'
   213   000E03  64                 	db	100	;'d'
   214   000E04  3D                 	db	61	;'='
   215   000E05  25                 	db	37
   216   000E06  64                 	db	100	;'d'
   217   000E07  20                 	db	32
   218   000E08  67                 	db	103	;'g'
   219   000E09  72                 	db	114	;'r'
   220   000E0A  65                 	db	101	;'e'
   221   000E0B  65                 	db	101	;'e'
   222   000E0C  6E                 	db	110	;'n'
   223   000E0D  3D                 	db	61	;'='
   224   000E0E  25                 	db	37
   225   000E0F  64                 	db	100	;'d'
   226   000E10  20                 	db	32
   227   000E11  62                 	db	98	;'b'
   228   000E12  6C                 	db	108	;'l'
   229   000E13  75                 	db	117	;'u'
   230   000E14  65                 	db	101	;'e'
   231   000E15  3D                 	db	61	;'='
   232   000E16  25                 	db	37
   233   000E17  64                 	db	100	;'d'
   234   000E18  20                 	db	32
   235   000E19  74                 	db	116	;'t'
   236   000E1A  69                 	db	105	;'i'
   237   000E1B  6D                 	db	109	;'m'
   238   000E1C  65                 	db	101	;'e'
   239   000E1D  72                 	db	114	;'r'
   240   000E1E  3D                 	db	61	;'='
   241   000E1F  25                 	db	37
   242   000E20  64                 	db	100	;'d'
   243   000E21  20                 	db	32
   244   000E22  0D                 	db	13
   245   000E23  0A                 	db	10
   246   000E24  00                 	db	0
   247   000E25  00                 	db	0	; dummy byte at the end
   248   000000                     
   249                           ; #config settings
   250                           
   251                           	psect	cinit
   252   00437A                     __pcinit:
   253                           	callstack 0
   254   00437A                     start_initialization:
   255                           	callstack 0
   256   00437A                     __initialization:
   257                           	callstack 0
   258                           
   259                           ; Initialize objects allocated to BANK1 (8 bytes)
   260                           ; load TBLPTR registers with __pidataBANK1
   261   00437A  0E6E               	movlw	low __pidataBANK1
   262   00437C  6EF6               	movwf	tblptrl,c
   263   00437E  0E4D               	movlw	high __pidataBANK1
   264   004380  6EF7               	movwf	tblptrh,c
   265   004382  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   266   004384  6EF8               	movwf	tblptru,c
   267   004386  EE01  F0CF         	lfsr	0,__pdataBANK1
   268   00438A  EE10 F008          	lfsr	1,8
   269   00438E                     copy_data0:
   270   00438E  0009               	tblrd		*+
   271   004390  CFF5 FFEE          	movff	tablat,postinc0
   272   004394  50E5               	movf	postdec1,w,c
   273   004396  50E1               	movf	fsr1l,w,c
   274   004398  E1FA               	bnz	copy_data0
   275                           
   276                           ; Initialize objects allocated to BANK0 (1 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278   00439A  0E7A               	movlw	low __pidataBANK0
   279   00439C  6EF6               	movwf	tblptrl,c
   280   00439E  0E4D               	movlw	high __pidataBANK0
   281   0043A0  6EF7               	movwf	tblptrh,c
   282   0043A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283   0043A4  6EF8               	movwf	tblptru,c
   284   0043A6  0009               	tblrd		*+	;fetch initializer
   285   0043A8  CFF5 F0FE          	movff	tablat,__pdataBANK0
   286                           
   287                           ; Clear objects allocated to BANK2 (100 bytes)
   288   0043AC  EE02  F000         	lfsr	0,__pbssBANK2
   289   0043B0  0E64               	movlw	100
   290   0043B2                     clear_0:
   291   0043B2  6AEE               	clrf	postinc0,c
   292   0043B4  06E8               	decf	wreg,f,c
   293   0043B6  E1FD               	bnz	clear_0
   294                           
   295                           ; Clear objects allocated to BANK1 (207 bytes)
   296   0043B8  EE01  F000         	lfsr	0,__pbssBANK1
   297   0043BC  0ECF               	movlw	207
   298   0043BE                     clear_1:
   299   0043BE  6AEE               	clrf	postinc0,c
   300   0043C0  06E8               	decf	wreg,f,c
   301   0043C2  E1FD               	bnz	clear_1
   302                           
   303                           ; Clear objects allocated to BANK0 (14 bytes)
   304   0043C4  EE00  F0F0         	lfsr	0,__pbssBANK0
   305   0043C8  0E0E               	movlw	14
   306   0043CA                     clear_2:
   307   0043CA  6AEE               	clrf	postinc0,c
   308   0043CC  06E8               	decf	wreg,f,c
   309   0043CE  E1FD               	bnz	clear_2
   310                           
   311                           ; Clear objects allocated to COMRAM (4 bytes)
   312   0043D0  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   313   0043D2  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   314   0043D4  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   315   0043D6  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   316   0043D8                     end_of_initialization:
   317                           	callstack 0
   318   0043D8                     __end_of__initialization:
   319                           	callstack 0
   320   0043D8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321   0043DA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322   0043DC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   323   0043DE  6EF8               	movwf	tblptru,c
   324   0043E0  0E0E               	movlw	high __Lsmallconst
   325   0043E2  6EF7               	movwf	tblptrh,c
   326   0043E4  0100               	movlb	0
   327   0043E6  EF81  F00C         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330   00005B                     __pbssCOMRAM:
   331                           	callstack 0
   332   00005B                     _TxBufReadCnt:
   333                           	callstack 0
   334   00005B                     	ds	1
   335   00005C                     _TxBufWriteCnt:
   336                           	callstack 0
   337   00005C                     	ds	1
   338   00005D                     _RxBufReadCnt:
   339                           	callstack 0
   340   00005D                     	ds	1
   341   00005E                     _RxBufWriteCnt:
   342                           	callstack 0
   343   00005E                     	ds	1
   344                           
   345                           	psect	bssBANK0
   346   0000F0                     __pbssBANK0:
   347                           	callstack 0
   348   0000F0                     _prec:
   349                           	callstack 0
   350   0000F0                     	ds	2
   351   0000F2                     _move_count:
   352                           	callstack 0
   353   0000F2                     	ds	2
   354   0000F4                     _flags:
   355                           	callstack 0
   356   0000F4                     	ds	1
   357   0000F5                     _motorL:
   358                           	callstack 0
   359   0000F5                     	ds	9
   360                           
   361                           	psect	dataBANK0
   362   0000FE                     __pdataBANK0:
   363                           	callstack 0
   364   0000FE                     _DataFlag:
   365                           	callstack 0
   366   0000FE                     	ds	1
   367                           
   368                           	psect	bssBANK1
   369   000100                     __pbssBANK1:
   370                           	callstack 0
   371   000100                     _EUSART4TXbuf:
   372                           	callstack 0
   373   000100                     	ds	60
   374   00013C                     _EUSART4RXbuf:
   375                           	callstack 0
   376   00013C                     	ds	20
   377   000150                     	ds	12
   378   00015C                     _width:
   379                           	callstack 0
   380   00015C                     	ds	2
   381   00015E                     _low_threshold:
   382                           	callstack 0
   383   00015E                     	ds	2
   384   000160                     _WayBack:
   385                           	callstack 0
   386   000160                     	ds	50
   387   000192                     _dbuf:
   388                           	callstack 0
   389   000192                     	ds	32
   390   0001B2                     _rel:
   391                           	callstack 0
   392   0001B2                     	ds	12
   393   0001BE                     _motorR:
   394                           	callstack 0
   395   0001BE                     	ds	9
   396   0001C7                     _vals:
   397                           	callstack 0
   398   0001C7                     	ds	8
   399                           
   400                           	psect	dataBANK1
   401   0001CF                     __pdataBANK1:
   402                           	callstack 0
   403   0001CF                     _high_threshold:
   404                           	callstack 0
   405   0001CF                     	ds	2
   406   0001D1                     _RunOneBlockTime:
   407                           	callstack 0
   408   0001D1                     	ds	2
   409   0001D3                     _Turn45Delay:
   410                           	callstack 0
   411   0001D3                     	ds	2
   412   0001D5                     _power:
   413                           	callstack 0
   414   0001D5                     	ds	2
   415                           
   416                           	psect	bssBANK2
   417   000200                     __pbssBANK2:
   418                           	callstack 0
   419   000200                     _Time_forward:
   420                           	callstack 0
   421   000200                     	ds	100
   422                           
   423                           	psect	cstackBANK0
   424   000060                     __pcstackBANK0:
   425                           	callstack 0
   426   000060                     ?_sprintf:
   427                           	callstack 0
   428   000060                     sprintf@s:
   429                           	callstack 0
   430   000060                     _Colour_decider$2838:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x0
   434   000060                     	ds	2
   435   000062                     sprintf@fmt:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x2
   439   000062                     	ds	2
   440   000064                     Colour_decider@Cmax_i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444   000064                     	ds	2
   445   000066                     Colour_decider@RGB_col:
   446                           	callstack 0
   447                           
   448                           ; 12 bytes @ 0x6
   449   000066                     	ds	6
   450   00006C                     sprintf@ap:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xC
   454   00006C                     	ds	2
   455   00006E                     sprintf@f:
   456                           	callstack 0
   457                           
   458                           ; 11 bytes @ 0xE
   459   00006E                     	ds	4
   460   000072                     Colour_decider@Cmax:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x12
   464   000072                     	ds	4
   465   000076                     Colour_decider@Cmin:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x16
   469   000076                     	ds	4
   470   00007A                     Colour_decider@i:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1A
   474   00007A                     	ds	2
   475   00007C                     Colour_decider@Hue:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x1C
   479   00007C                     	ds	4
   480   000080                     main@buf:
   481                           	callstack 0
   482                           
   483                           ; 100 bytes @ 0x20
   484   000080                     	ds	100
   485   0000E4                     main@temp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x84
   489   0000E4                     	ds	2
   490   0000E6                     main@temp_1191:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x86
   494   0000E6                     	ds	2
   495   0000E8                     main@run_flag:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x88
   499   0000E8                     	ds	2
   500   0000EA                     main@consecuitive:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x8A
   504   0000EA                     	ds	2
   505   0000EC                     main@colour:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x8C
   509   0000EC                     	ds	2
   510   0000EE                     main@prev_colour:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x8E
   514   0000EE                     	ds	2
   515                           
   516                           	psect	cstackCOMRAM
   517   000001                     __pcstackCOMRAM:
   518                           	callstack 0
   519   000001                     ??_I2C_2_Master_Idle:
   520   000001                     ?___wmul:
   521                           	callstack 0
   522   000001                     ?___fladd:
   523                           	callstack 0
   524   000001                     ?___xxtofl:
   525                           	callstack 0
   526   000001                     ?___aodiv:
   527                           	callstack 0
   528   000001                     ?___aomod:
   529                           	callstack 0
   530   000001                     sendCharSerial4@charToSend:
   531                           	callstack 0
   532   000001                     initDCmotorsPWM@PWMperiod:
   533                           	callstack 0
   534   000001                     getTMR0val@moving:
   535                           	callstack 0
   536   000001                     delayed_ms@time:
   537                           	callstack 0
   538   000001                     ___wmul@multiplier:
   539                           	callstack 0
   540   000001                     fputc@c:
   541                           	callstack 0
   542   000001                     ___flge@ff1:
   543                           	callstack 0
   544   000001                     ___fladd@b:
   545                           	callstack 0
   546   000001                     ___xxtofl@val:
   547                           	callstack 0
   548   000001                     ___aodiv@dividend:
   549                           	callstack 0
   550   000001                     ___aomod@dividend:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x0
   554   000001                     	ds	1
   555   000002                     ??_I2C_2_Master_Read:
   556   000002                     I2C_2_Master_Write@data_byte:
   557                           	callstack 0
   558   000002                     sendStringSerial4@string:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1
   562   000002                     	ds	1
   563   000003                     ??_delayed_ms:
   564   000003                     color_writetoaddr@value:
   565                           	callstack 0
   566   000003                     I2C_2_Master_Read@ack:
   567                           	callstack 0
   568   000003                     ___wmul@multiplicand:
   569                           	callstack 0
   570   000003                     fputc@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574   000003                     	ds	1
   575   000004                     color_writetoaddr@address:
   576                           	callstack 0
   577   000004                     I2C_2_Master_Read@tmp:
   578                           	callstack 0
   579   000004                     delayed_ms@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x3
   583   000004                     	ds	1
   584   000005                     ??_fputc:
   585   000005                     ??_color_click_init:
   586   000005                     ??___xxtofl:
   587   000005                     ?_color_read_lum:
   588                           	callstack 0
   589   000005                     ?_color_read_Red:
   590                           	callstack 0
   591   000005                     ?_color_read_Green:
   592                           	callstack 0
   593   000005                     ?_color_read_Blue:
   594                           	callstack 0
   595   000005                     ___wmul@product:
   596                           	callstack 0
   597   000005                     ___flge@ff2:
   598                           	callstack 0
   599   000005                     ___fladd@a:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x4
   603   000005                     	ds	2
   604   000007                     ??_color_read_lum:
   605   000007                     ??_color_read_Red:
   606   000007                     ??_color_read_Green:
   607   000007                     ??_color_read_Blue:
   608   000007                     ?___lwdiv:
   609                           	callstack 0
   610   000007                     ___lwdiv@dividend:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x6
   614   000007                     	ds	2
   615   000009                     ??___fladd:
   616   000009                     ??___flge:
   617   000009                     ___xxtofl@sign:
   618                           	callstack 0
   619   000009                     ___lwdiv@divisor:
   620                           	callstack 0
   621   000009                     ___aodiv@divisor:
   622                           	callstack 0
   623   000009                     ___aomod@divisor:
   624                           	callstack 0
   625                           
   626                           ; 8 bytes @ 0x8
   627   000009                     	ds	1
   628   00000A                     ___xxtofl@exp:
   629                           	callstack 0
   630   00000A                     color_read_lum@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Red@tmp:
   633                           	callstack 0
   634   00000A                     color_read_Green@tmp:
   635                           	callstack 0
   636   00000A                     color_read_Blue@tmp:
   637                           	callstack 0
   638   00000A                     fputs@s:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x9
   642   00000A                     	ds	1
   643   00000B                     ___lwdiv@quotient:
   644                           	callstack 0
   645   00000B                     ___xxtofl@arg:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0xA
   649   00000B                     	ds	1
   650   00000C                     readColours@vals:
   651                           	callstack 0
   652   00000C                     fputs@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0xB
   656   00000C                     	ds	1
   657   00000D                     ___lwdiv@counter:
   658                           	callstack 0
   659   00000D                     ___fladd@signs:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0xC
   663   00000D                     	ds	1
   664   00000E                     ___fladd@aexp:
   665                           	callstack 0
   666   00000E                     fputs@c:
   667                           	callstack 0
   668   00000E                     setMotorPWM@m:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0xD
   672   00000E                     	ds	1
   673   00000F                     ___fladd@bexp:
   674                           	callstack 0
   675   00000F                     fputs@i:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xE
   679   00000F                     	ds	1
   680   000010                     ??_setMotorPWM:
   681   000010                     ___fladd@grs:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0xF
   685   000010                     	ds	1
   686   000011                     ?___flsub:
   687                           	callstack 0
   688   000011                     ___aodiv@counter:
   689                           	callstack 0
   690   000011                     ___aomod@counter:
   691                           	callstack 0
   692   000011                     pad@fp:
   693                           	callstack 0
   694   000011                     ___flsub@b:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x10
   698   000011                     	ds	1
   699   000012                     setMotorPWM@posDuty:
   700                           	callstack 0
   701   000012                     ___aodiv@sign:
   702                           	callstack 0
   703   000012                     ___aomod@sign:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x11
   707   000012                     	ds	1
   708   000013                     ?_abs:
   709                           	callstack 0
   710   000013                     setMotorPWM@negDuty:
   711                           	callstack 0
   712   000013                     pad@buf:
   713                           	callstack 0
   714   000013                     abs@a:
   715                           	callstack 0
   716   000013                     ___aodiv@quotient:
   717                           	callstack 0
   718                           
   719                           ; 8 bytes @ 0x12
   720   000013                     	ds	1
   721   000014                     stop@mL:
   722                           	callstack 0
   723   000014                     turnLeft@mL:
   724                           	callstack 0
   725   000014                     turnRight@mL:
   726                           	callstack 0
   727   000014                     fullSpeedAhead@mL:
   728                           	callstack 0
   729   000014                     timed_forward@mL:
   730                           	callstack 0
   731   000014                     fullSpeedBack@mL:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x13
   735   000014                     	ds	1
   736   000015                     ??_abs:
   737   000015                     pad@p:
   738                           	callstack 0
   739   000015                     ___flsub@a:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x14
   743   000015                     	ds	1
   744   000016                     stop@mR:
   745                           	callstack 0
   746   000016                     turnLeft@mR:
   747                           	callstack 0
   748   000016                     turnRight@mR:
   749                           	callstack 0
   750   000016                     fullSpeedAhead@mR:
   751                           	callstack 0
   752   000016                     timed_forward@mR:
   753                           	callstack 0
   754   000016                     fullSpeedBack@mR:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x15
   758   000016                     	ds	1
   759   000017                     ??_pad:
   760                           
   761                           ; 1 bytes @ 0x16
   762   000017                     	ds	1
   763   000018                     ??_fullSpeedAhead:
   764   000018                     ??_stop:
   765   000018                     ??_turnLeft:
   766   000018                     ??_turnRight:
   767   000018                     ??_fullSpeedBack:
   768   000018                     timed_forward@time:
   769                           	callstack 0
   770   000018                     pad@i:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x17
   774   000018                     	ds	1
   775   000019                     ?___fldiv:
   776                           	callstack 0
   777   000019                     ___fleq@ff1:
   778                           	callstack 0
   779   000019                     ___fldiv@b:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x18
   783   000019                     	ds	1
   784   00001A                     ??_timed_forward:
   785   00001A                     turnRight45@mL:
   786                           	callstack 0
   787   00001A                     turnLeft45@mL:
   788                           	callstack 0
   789   00001A                     reverseDetect@mL:
   790                           	callstack 0
   791   00001A                     reverseOneBlock@mL:
   792                           	callstack 0
   793   00001A                     ForwardOneBlock@mL:
   794                           	callstack 0
   795   00001A                     Forwardhalfblock@mL:
   796                           	callstack 0
   797   00001A                     RetryMove@mL:
   798                           	callstack 0
   799   00001A                     pad@w:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x19
   803   00001A                     	ds	2
   804   00001C                     turnRight45@mR:
   805                           	callstack 0
   806   00001C                     turnLeft45@mR:
   807                           	callstack 0
   808   00001C                     reverseDetect@mR:
   809                           	callstack 0
   810   00001C                     reverseOneBlock@mR:
   811                           	callstack 0
   812   00001C                     ForwardOneBlock@mR:
   813                           	callstack 0
   814   00001C                     Forwardhalfblock@mR:
   815                           	callstack 0
   816   00001C                     RetryMove@mR:
   817                           	callstack 0
   818   00001C                     dtoa@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1B
   822   00001C                     	ds	1
   823   00001D                     ___fleq@ff2:
   824                           	callstack 0
   825   00001D                     ___fldiv@a:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x1C
   829   00001D                     	ds	1
   830   00001E                     ??_Forwardhalfblock:
   831   00001E                     ??_RetryMove:
   832   00001E                     ??_turnRight45:
   833   00001E                     ??_turnLeft45:
   834   00001E                     ??_reverseDetect:
   835   00001E                     ??_reverseOneBlock:
   836   00001E                     ??_ForwardOneBlock:
   837   00001E                     dtoa@d:
   838                           	callstack 0
   839                           
   840                           ; 8 bytes @ 0x1D
   841   00001E                     	ds	2
   842   000020                     RedMove@mL:
   843                           	callstack 0
   844   000020                     GreenMove@mL:
   845                           	callstack 0
   846   000020                     BlueMove@mL:
   847                           	callstack 0
   848   000020                     YellowMove@mL:
   849                           	callstack 0
   850   000020                     PinkMove@mL:
   851                           	callstack 0
   852   000020                     OrangeMove@mL:
   853                           	callstack 0
   854   000020                     LightBlueMove@mL:
   855                           	callstack 0
   856   000020                     ReverseYellow@mL:
   857                           	callstack 0
   858   000020                     ReversePink@mL:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1F
   862   000020                     	ds	1
   863   000021                     ??___fldiv:
   864   000021                     ??___fleq:
   865                           
   866                           ; 1 bytes @ 0x20
   867   000021                     	ds	1
   868   000022                     RedMove@mR:
   869                           	callstack 0
   870   000022                     GreenMove@mR:
   871                           	callstack 0
   872   000022                     BlueMove@mR:
   873                           	callstack 0
   874   000022                     YellowMove@mR:
   875                           	callstack 0
   876   000022                     PinkMove@mR:
   877                           	callstack 0
   878   000022                     OrangeMove@mR:
   879                           	callstack 0
   880   000022                     LightBlueMove@mR:
   881                           	callstack 0
   882   000022                     ReverseYellow@mR:
   883                           	callstack 0
   884   000022                     ReversePink@mR:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	2
   889   000024                     go_Home@WayBack:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x23
   893   000024                     	ds	1
   894   000025                     ___fldiv@rem:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x24
   898   000025                     	ds	1
   899   000026                     ??_dtoa:
   900   000026                     go_Home@Time_forward:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904   000026                     	ds	2
   905   000028                     ??_go_Home:
   906                           
   907                           ; 1 bytes @ 0x27
   908   000028                     	ds	1
   909   000029                     ___fldiv@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x28
   913   000029                     	ds	1
   914   00002A                     ___fldiv@new_exp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x29
   918   00002A                     	ds	1
   919   00002B                     go_Home@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2A
   923   00002B                     	ds	1
   924   00002C                     ___fldiv@grs:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x2B
   928   00002C                     	ds	2
   929   00002E                     _dtoa$2514:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2D
   933   00002E                     	ds	2
   934   000030                     ___fldiv@bexp:
   935                           	callstack 0
   936   000030                     dtoa@p:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2F
   940   000030                     	ds	1
   941   000031                     ___fldiv@aexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x30
   945   000031                     	ds	1
   946   000032                     ?___flmul:
   947                           	callstack 0
   948   000032                     colour_rel@vals:
   949                           	callstack 0
   950   000032                     dtoa@w:
   951                           	callstack 0
   952   000032                     ___flmul@b:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x31
   956   000032                     	ds	2
   957   000034                     colour_rel@rel:
   958                           	callstack 0
   959   000034                     dtoa@n:
   960                           	callstack 0
   961                           
   962                           ; 8 bytes @ 0x33
   963   000034                     	ds	2
   964   000036                     colour_rel@L:
   965                           	callstack 0
   966   000036                     ___flmul@a:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x35
   970   000036                     	ds	4
   971   00003A                     ??___flmul:
   972   00003A                     _colour_rel$2836:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x39
   976   00003A                     	ds	2
   977   00003C                     dtoa@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3B
   981   00003C                     	ds	2
   982   00003E                     ___flmul@sign:
   983                           	callstack 0
   984   00003E                     dtoa@s:
   985                           	callstack 0
   986   00003E                     _colour_rel$2837:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3D
   990   00003E                     	ds	1
   991   00003F                     vfpfcnvrt@fp:
   992                           	callstack 0
   993   00003F                     ___flmul@grs:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x3E
   997   00003F                     	ds	2
   998   000041                     vfpfcnvrt@fmt:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x40
  1002   000041                     	ds	1
  1003   000042                     colour_rel@R:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x41
  1007   000042                     	ds	1
  1008   000043                     ___flmul@aexp:
  1009                           	callstack 0
  1010   000043                     vfpfcnvrt@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x42
  1014   000043                     	ds	1
  1015   000044                     ___flmul@bexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x43
  1019   000044                     	ds	1
  1020   000045                     ??_vfpfcnvrt:
  1021   000045                     ___flmul@prod:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x44
  1025   000045                     	ds	1
  1026   000046                     colour_rel@G:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x45
  1030   000046                     	ds	1
  1031   000047                     vfpfcnvrt@convarg:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x46
  1035   000047                     	ds	2
  1036   000049                     ___flmul@temp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x48
  1040   000049                     	ds	1
  1041   00004A                     colour_rel@B:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x49
  1045   00004A                     	ds	1
  1046   00004B                     ?_Colour_decider:
  1047                           	callstack 0
  1048   00004B                     Colour_decider@vals:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x4A
  1052   00004B                     	ds	2
  1053   00004D                     Colour_decider@rel:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4C
  1057   00004D                     	ds	2
  1058   00004F                     ??_Colour_decider:
  1059   00004F                     vfpfcnvrt@cp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x4E
  1063   00004F                     	ds	2
  1064   000051                     ?_vfprintf:
  1065                           	callstack 0
  1066   000051                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x50
  1070   000051                     	ds	2
  1071   000053                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x52
  1075   000053                     	ds	2
  1076   000055                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x54
  1080   000055                     	ds	2
  1081   000057                     vfprintf@cfmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x56
  1085   000057                     	ds	2
  1086   000059                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0x58
  1089   000059                     	ds	2
  1090                           
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  colour          2  140[BANK0 ] int 
  1101 ;;  temp            2  134[BANK0 ] int 
  1102 ;;  temp            2  132[BANK0 ] int 
  1103 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1104 ;;  prev_colour     2  142[BANK0 ] int 
  1105 ;;  consecuitive    2  138[BANK0 ] int 
  1106 ;;  run_flag        2  136[BANK0 ] int 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;Total ram usage:      114 bytes
  1121 ;; Hardware stack levels required when called: 9
  1122 ;; This function calls:
  1123 ;;		_BlueMove
  1124 ;;		_Colour_decider
  1125 ;;		_Forwardhalfblock
  1126 ;;		_GreenMove
  1127 ;;		_I2C_2_Master_Init
  1128 ;;		_Interrupts_init
  1129 ;;		_LightBlueMove
  1130 ;;		_OrangeMove
  1131 ;;		_PinkMove
  1132 ;;		_RedMove
  1133 ;;		_RetryMove
  1134 ;;		_Timer0_init
  1135 ;;		_YellowMove
  1136 ;;		_color_click_init
  1137 ;;		_colour_rel
  1138 ;;		_fullSpeedAhead
  1139 ;;		_getTMR0val
  1140 ;;		_go_Home
  1141 ;;		_initDCmotorsPWM
  1142 ;;		_initUSART4
  1143 ;;		_readColours
  1144 ;;		_sendStringSerial4
  1145 ;;		_sprintf
  1146 ;;		_stop
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text0
  1153   001902                     __ptext0:
  1154                           	callstack 0
  1155   001902                     _main:
  1156                           	callstack 22
  1157   001902                     
  1158                           ;main.c: 31:     initUSART4();
  1159   001902  EC87  F026         	call	_initUSART4	;wreg free
  1160   001906                     
  1161                           ;main.c: 32:     Interrupts_init();
  1162   001906  ECBC  F026         	call	_Interrupts_init	;wreg free
  1163   00190A                     
  1164                           ;main.c: 33:     color_click_init();
  1165   00190A  ECDE  F023         	call	_color_click_init	;wreg free
  1166   00190E                     
  1167                           ;main.c: 34:     I2C_2_Master_Init();
  1168   00190E  EC18  F026         	call	_I2C_2_Master_Init	;wreg free
  1169   001912                     
  1170                           ;main.c: 35:     Timer0_init();
  1171   001912  EC77  F026         	call	_Timer0_init	;wreg free
  1172   001916                     
  1173                           ;main.c: 36:     initDCmotorsPWM(200);
  1174   001916  0E00               	movlw	0
  1175   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1176   00191A  0EC8               	movlw	200
  1177   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1178   00191E  EC82  F020         	call	_initDCmotorsPWM	;wreg free
  1179   001922                     
  1180                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1181   001922  9287               	bcf	135,1,c	;volatile
  1182   001924                     
  1183                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1184   001924  9881               	bcf	129,4,c	;volatile
  1185   001926                     
  1186                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1187   001926  9E86               	bcf	134,7,c	;volatile
  1188   001928                     
  1189                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1190   001928  8486               	bsf	134,2,c	;volatile
  1191   00192A                     
  1192                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1193   00192A  010E               	movlb	14	; () banked
  1194   00192C  95B4               	bcf	180,2,b	;volatile
  1195   00192E                     
  1196                           ; BSR set to: 14
  1197                           ;main.c: 43:     LATGbits.LATG1=1;
  1198   00192E  827F               	bsf	127,1,c	;volatile
  1199   001930                     
  1200                           ; BSR set to: 14
  1201                           ;main.c: 44:     LATAbits.LATA4=1;
  1202   001930  8879               	bsf	121,4,c	;volatile
  1203   001932                     
  1204                           ; BSR set to: 14
  1205                           ;main.c: 45:     LATFbits.LATF7=1;
  1206   001932  8E7E               	bsf	126,7,c	;volatile
  1207   001934                     
  1208                           ; BSR set to: 14
  1209                           ;main.c: 49:     motorL.power=0;
  1210   001934  0E00               	movlw	0
  1211   001936  0100               	movlb	0	; () banked
  1212   001938  6FF5               	movwf	_motorL& (0+255),b
  1213   00193A                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 50:     motorL.direction=1;
  1216   00193A  0E01               	movlw	1
  1217   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1218   00193E                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 51:     motorL.brakemode=1;
  1221   00193E  0E01               	movlw	1
  1222   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1223   001942                     
  1224                           ; BSR set to: 0
  1225                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1226   001942  0EAA               	movlw	170
  1227   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1228   001946  0E0F               	movlw	15
  1229   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1230   00194A                     
  1231                           ; BSR set to: 0
  1232                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1233   00194A  0EA6               	movlw	166
  1234   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1235   00194E  0E0F               	movlw	15
  1236   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1237   001952                     
  1238                           ; BSR set to: 0
  1239                           ;main.c: 54:     motorL.PWMperiod=200;
  1240   001952  0E00               	movlw	0
  1241   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1242   001956  0EC8               	movlw	200
  1243   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1244   00195A                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 55:     motorR.power=0;
  1247   00195A  0E00               	movlw	0
  1248   00195C  0101               	movlb	1	; () banked
  1249   00195E  6FBE               	movwf	_motorR& (0+255),b
  1250   001960                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 56:     motorR.direction=1;
  1253   001960  0E01               	movlw	1
  1254   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1255   001964                     
  1256                           ; BSR set to: 1
  1257                           ;main.c: 57:     motorR.brakemode=1;
  1258   001964  0E01               	movlw	1
  1259   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1260   001968                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1263   001968  0E25               	movlw	37
  1264   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1265   00196C  0E0F               	movlw	15
  1266   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1267   001970                     
  1268                           ; BSR set to: 1
  1269                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1270   001970  0E21               	movlw	33
  1271   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1272   001974  0E0F               	movlw	15
  1273   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1274   001978                     
  1275                           ; BSR set to: 1
  1276                           ;main.c: 60:     motorR.PWMperiod=200;
  1277   001978  0E00               	movlw	0
  1278   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1279   00197C  0EC8               	movlw	200
  1280   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1281   001980                     
  1282                           ; BSR set to: 1
  1283                           ;main.c: 61:     int consecuitive=0;
  1284   001980  0E00               	movlw	0
  1285   001982  0100               	movlb	0	; () banked
  1286   001984  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1287   001986  0E00               	movlw	0
  1288   001988  6FEA               	movwf	main@consecuitive& (0+255),b
  1289   00198A                     
  1290                           ; BSR set to: 0
  1291                           ;main.c: 62:     int prev_colour =0;
  1292   00198A  0E00               	movlw	0
  1293   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1294   00198E  0E00               	movlw	0
  1295   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1296   001992                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 63:     int run_flag=1;
  1299   001992  0E00               	movlw	0
  1300   001994  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1301   001996  0E01               	movlw	1
  1302   001998  6FE8               	movwf	main@run_flag& (0+255),b
  1303   00199A                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 64:     move_count=-1;
  1306   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1307   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1308   00199E                     l400:
  1309   00199E  B48E               	btfsc	142,2,c	;volatile
  1310   0019A0  EFD4  F00C         	goto	u4431
  1311   0019A4  EFD6  F00C         	goto	u4430
  1312   0019A8                     u4431:
  1313   0019A8  EFCF  F00C         	goto	l400
  1314   0019AC                     u4430:
  1315   0019AC                     
  1316                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1317   0019AC  0E52               	movlw	82
  1318   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1319   0019B0  0E2B               	movlw	43
  1320   0019B2  6E59               	movwf	??_main^0,c
  1321   0019B4  0E00               	movlw	0
  1322   0019B6                     u4707:
  1323   0019B6  2EE8               	decfsz	wreg,f,c
  1324   0019B8  D7FE               	bra	u4707
  1325   0019BA  2E59               	decfsz	??_main^0,f,c
  1326   0019BC  D7FC               	bra	u4707
  1327   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1328   0019C0  D7FA               	bra	u4707
  1329   0019C2  D000               	nop2	
  1330   0019C4                     
  1331                           ;main.c: 67:     TMR0H=0;
  1332   0019C4  0E00               	movlw	0
  1333   0019C6  6ED4               	movwf	212,c	;volatile
  1334   0019C8                     
  1335                           ;main.c: 68:     TMR0L=0;
  1336   0019C8  0E00               	movlw	0
  1337   0019CA  6ED3               	movwf	211,c	;volatile
  1338                           
  1339                           ;main.c: 69:     while (run_flag)
  1340   0019CC  EFFF  F00E         	goto	l4838
  1341   0019D0                     l4712:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1345   0019D0  0EF5               	movlw	low _motorL
  1346   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1347   0019D4  0E00               	movlw	high _motorL
  1348   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1349   0019D8  0EBE               	movlw	low _motorR
  1350   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1351   0019DC  0E01               	movlw	high _motorR
  1352   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1353   0019E0  ECA5  F01F         	call	_fullSpeedAhead	;wreg free
  1354   0019E4                     
  1355                           ;main.c: 77:         readColours(&vals);
  1356   0019E4  0EC7               	movlw	low _vals
  1357   0019E6  6E0C               	movwf	readColours@vals^0,c
  1358   0019E8  0E01               	movlw	high _vals
  1359   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1360   0019EC  EC28  F022         	call	_readColours	;wreg free
  1361   0019F0                     
  1362                           ;main.c: 80:         colour_rel(&vals, &rel);
  1363   0019F0  0EC7               	movlw	low _vals
  1364   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1365   0019F4  0E01               	movlw	high _vals
  1366   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1367   0019F8  0EB2               	movlw	low _rel
  1368   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1369   0019FC  0E01               	movlw	high _rel
  1370   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1371   001A00  EC4D  F015         	call	_colour_rel	;wreg free
  1372   001A04                     
  1373                           ;main.c: 83:         if (vals.L>=500){
  1374   001A04  0101               	movlb	1	; () banked
  1375   001A06  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1376   001A08  EF0F  F00D         	goto	u4441
  1377   001A0C  0EF4               	movlw	244
  1378   001A0E  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1379   001A10  0E01               	movlw	1
  1380   001A12  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1381   001A14  A0D8               	btfss	status,0,c
  1382   001A16  EF0F  F00D         	goto	u4441
  1383   001A1A  EF11  F00D         	goto	u4440
  1384   001A1E                     u4441:
  1385   001A1E  EFDC  F00E         	goto	l405
  1386   001A22                     u4440:
  1387   001A22                     
  1388                           ; BSR set to: 1
  1389                           ;main.c: 84:             move_count++;
  1390   001A22  0100               	movlb	0	; () banked
  1391   001A24  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1392   001A26  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1393   001A28                     
  1394                           ; BSR set to: 0
  1395                           ;main.c: 85:             getTMR0val();
  1396   001A28  EC41  F026         	call	_getTMR0val	;wreg free
  1397   001A2C                     
  1398                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1399   001A2C  0EF5               	movlw	low _motorL
  1400   001A2E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1401   001A30  0E00               	movlw	high _motorL
  1402   001A32  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1403   001A34  0EBE               	movlw	low _motorR
  1404   001A36  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1405   001A38  0E01               	movlw	high _motorR
  1406   001A3A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1407   001A3C  ECDE  F022         	call	_Forwardhalfblock	;wreg free
  1408   001A40                     
  1409                           ;main.c: 89:             stop(&motorL, &motorR);
  1410   001A40  0EF5               	movlw	low _motorL
  1411   001A42  6E14               	movwf	stop@mL^0,c
  1412   001A44  0E00               	movlw	high _motorL
  1413   001A46  6E15               	movwf	(stop@mL+1)^0,c
  1414   001A48  0EBE               	movlw	low _motorR
  1415   001A4A  6E16               	movwf	stop@mR^0,c
  1416   001A4C  0E01               	movlw	high _motorR
  1417   001A4E  6E17               	movwf	(stop@mR+1)^0,c
  1418   001A50  EC07  F021         	call	_stop	;wreg free
  1419   001A54                     
  1420                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1421   001A54  0E11               	movlw	17
  1422   001A56  6E5A               	movwf	(??_main+1)^0,c
  1423   001A58  0E3C               	movlw	60
  1424   001A5A  6E59               	movwf	??_main^0,c
  1425   001A5C  0ECB               	movlw	203
  1426   001A5E                     u4717:
  1427   001A5E  2EE8               	decfsz	wreg,f,c
  1428   001A60  D7FE               	bra	u4717
  1429   001A62  2E59               	decfsz	??_main^0,f,c
  1430   001A64  D7FC               	bra	u4717
  1431   001A66  2E5A               	decfsz	(??_main+1)^0,f,c
  1432   001A68  D7FA               	bra	u4717
  1433   001A6A  F000               	nop	
  1434                           
  1435                           ;main.c: 97:             while (consecuitive<20){
  1436   001A6C  EF6B  F00D         	goto	l4742
  1437   001A70                     l4730:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1441   001A70  0EC7               	movlw	low _vals
  1442   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1443   001A74  0E01               	movlw	high _vals
  1444   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1445   001A78  0EB2               	movlw	low _rel
  1446   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1447   001A7C  0E01               	movlw	high _rel
  1448   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1449   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1450   001A84  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1451   001A88  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1452   001A8C                     
  1453                           ;main.c: 99:                 if (colour==prev_colour){
  1454   001A8C  0100               	movlb	0	; () banked
  1455   001A8E  51EE               	movf	main@prev_colour& (0+255),w,b
  1456   001A90  19EC               	xorwf	main@colour& (0+255),w,b
  1457   001A92  E107               	bnz	u4451
  1458   001A94  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1459   001A96  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1460   001A98  A4D8               	btfss	status,2,c
  1461   001A9A  EF51  F00D         	goto	u4451
  1462   001A9E  EF53  F00D         	goto	u4450
  1463   001AA2                     u4451:
  1464   001AA2  EF57  F00D         	goto	l4736
  1465   001AA6                     u4450:
  1466   001AA6                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 100:                     consecuitive++;
  1469   001AA6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1470   001AA8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1471                           
  1472                           ;main.c: 101:                 }
  1473   001AAA  EF5B  F00D         	goto	l4738
  1474   001AAE                     l4736:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;main.c: 103:                     consecuitive=0;
  1478   001AAE  0E00               	movlw	0
  1479   001AB0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1480   001AB2  0E00               	movlw	0
  1481   001AB4  6FEA               	movwf	main@consecuitive& (0+255),b
  1482   001AB6                     l4738:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;main.c: 105:                 prev_colour=colour;
  1486   001AB6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1487   001ABA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1488   001ABE                     
  1489                           ; BSR set to: 0
  1490                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1491   001ABE  0E05               	movlw	5
  1492   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1493   001AC2  0E0F               	movlw	15
  1494   001AC4  6E59               	movwf	??_main^0,c
  1495   001AC6  0EF1               	movlw	241
  1496   001AC8                     u4727:
  1497   001AC8  2EE8               	decfsz	wreg,f,c
  1498   001ACA  D7FE               	bra	u4727
  1499   001ACC  2E59               	decfsz	??_main^0,f,c
  1500   001ACE  D7FC               	bra	u4727
  1501   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1502   001AD2  D7FA               	bra	u4727
  1503   001AD4  F000               	nop	
  1504   001AD6                     l4742:
  1505                           
  1506                           ;main.c: 97:             while (consecuitive<20){
  1507   001AD6  0100               	movlb	0	; () banked
  1508   001AD8  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1509   001ADA  EF78  F00D         	goto	u4461
  1510   001ADE  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1511   001AE0  E109               	bnz	u4460
  1512   001AE2  0E14               	movlw	20
  1513   001AE4  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1514   001AE6  A0D8               	btfss	status,0,c
  1515   001AE8  EF78  F00D         	goto	u4461
  1516   001AEC  EF7A  F00D         	goto	u4460
  1517   001AF0                     u4461:
  1518   001AF0  EF38  F00D         	goto	l4730
  1519   001AF4                     u4460:
  1520   001AF4                     
  1521                           ; BSR set to: 0
  1522                           ;main.c: 108:             consecuitive=0;
  1523   001AF4  0E00               	movlw	0
  1524   001AF6  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1525   001AF8  0E00               	movlw	0
  1526   001AFA  6FEA               	movwf	main@consecuitive& (0+255),b
  1527   001AFC                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 109:             int temp=TMR0L;
  1530   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1531   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1532   001B02                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1535   001B02  0E80               	movlw	low main@buf
  1536   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1537   001B06  0E00               	movlw	high main@buf
  1538   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1539   001B0A  0E01               	movlw	low STR_1
  1540   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1541   001B0E  0E0E               	movlw	high STR_1
  1542   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1543   001B12  C1C7  F064         	movff	_vals,?_sprintf+4
  1544   001B16  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1545   001B1A  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1546   001B1E  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1547   001B22  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1548   001B26  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1549   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1550   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1551   001B30  EC63  F023         	call	_sprintf	;wreg free
  1552   001B34                     
  1553                           ;main.c: 113:             sendStringSerial4(buf);
  1554   001B34  0E80               	movlw	low main@buf
  1555   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1556   001B38  0E00               	movlw	high main@buf
  1557   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1558   001B3C  EC00  F026         	call	_sendStringSerial4	;wreg free
  1559   001B40                     
  1560                           ;main.c: 115:             if (prev_colour==1){
  1561   001B40  0100               	movlb	0	; () banked
  1562   001B42  05EE               	decf	main@prev_colour& (0+255),w,b
  1563   001B44  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1564   001B46  A4D8               	btfss	status,2,c
  1565   001B48  EFA8  F00D         	goto	u4471
  1566   001B4C  EFAA  F00D         	goto	u4470
  1567   001B50                     u4471:
  1568   001B50  EFC3  F00D         	goto	l4762
  1569   001B54                     u4470:
  1570   001B54                     
  1571                           ; BSR set to: 0
  1572                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1573   001B54  0EF5               	movlw	low _motorL
  1574   001B56  6E20               	movwf	RedMove@mL^0,c
  1575   001B58  0E00               	movlw	high _motorL
  1576   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1577   001B5C  0EBE               	movlw	low _motorR
  1578   001B5E  6E22               	movwf	RedMove@mR^0,c
  1579   001B60  0E01               	movlw	high _motorR
  1580   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1581   001B64  ECA6  F025         	call	_RedMove	;wreg free
  1582   001B68                     
  1583                           ;main.c: 117:                 TMR0H=0;
  1584   001B68  0E00               	movlw	0
  1585   001B6A  6ED4               	movwf	212,c	;volatile
  1586   001B6C                     
  1587                           ;main.c: 118:                 TMR0L=0;
  1588   001B6C  0E00               	movlw	0
  1589   001B6E  6ED3               	movwf	211,c	;volatile
  1590   001B70                     
  1591                           ;main.c: 119:                 WayBack[move_count]=1;
  1592   001B70  0E60               	movlw	low _WayBack
  1593   001B72  0100               	movlb	0	; () banked
  1594   001B74  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1595   001B76  6ED9               	movwf	fsr2l,c
  1596   001B78  0E01               	movlw	high _WayBack
  1597   001B7A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1598   001B7C  6EDA               	movwf	fsr2h,c
  1599   001B7E  0E01               	movlw	1
  1600   001B80  6EDF               	movwf	indf2,c
  1601                           
  1602                           ;main.c: 120:             }
  1603   001B82  EFFF  F00E         	goto	l4838
  1604   001B86                     l4762:
  1605                           
  1606                           ; BSR set to: 0
  1607   001B86  0E02               	movlw	2
  1608   001B88  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1609   001B8A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1610   001B8C  A4D8               	btfss	status,2,c
  1611   001B8E  EFCB  F00D         	goto	u4481
  1612   001B92  EFCD  F00D         	goto	u4480
  1613   001B96                     u4481:
  1614   001B96  EFE6  F00D         	goto	l4772
  1615   001B9A                     u4480:
  1616   001B9A                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1619   001B9A  0EF5               	movlw	low _motorL
  1620   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1621   001B9E  0E00               	movlw	high _motorL
  1622   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1623   001BA2  0EBE               	movlw	low _motorR
  1624   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1625   001BA6  0E01               	movlw	high _motorR
  1626   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1627   001BAA  EC8C  F023         	call	_OrangeMove	;wreg free
  1628   001BAE                     
  1629                           ;main.c: 123:                 TMR0H=0;
  1630   001BAE  0E00               	movlw	0
  1631   001BB0  6ED4               	movwf	212,c	;volatile
  1632   001BB2                     
  1633                           ;main.c: 124:                 TMR0L=0;
  1634   001BB2  0E00               	movlw	0
  1635   001BB4  6ED3               	movwf	211,c	;volatile
  1636   001BB6                     
  1637                           ;main.c: 125:                 WayBack[move_count]=2;
  1638   001BB6  0E60               	movlw	low _WayBack
  1639   001BB8  0100               	movlb	0	; () banked
  1640   001BBA  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1641   001BBC  6ED9               	movwf	fsr2l,c
  1642   001BBE  0E01               	movlw	high _WayBack
  1643   001BC0  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1644   001BC2  6EDA               	movwf	fsr2h,c
  1645   001BC4  0E02               	movlw	2
  1646   001BC6  6EDF               	movwf	indf2,c
  1647                           
  1648                           ;main.c: 126:             }
  1649   001BC8  EFFF  F00E         	goto	l4838
  1650   001BCC                     l4772:
  1651                           
  1652                           ; BSR set to: 0
  1653   001BCC  0E03               	movlw	3
  1654   001BCE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1655   001BD0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1656   001BD2  A4D8               	btfss	status,2,c
  1657   001BD4  EFEE  F00D         	goto	u4491
  1658   001BD8  EFF0  F00D         	goto	u4490
  1659   001BDC                     u4491:
  1660   001BDC  EF09  F00E         	goto	l4782
  1661   001BE0                     u4490:
  1662   001BE0                     
  1663                           ; BSR set to: 0
  1664                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1665   001BE0  0EF5               	movlw	low _motorL
  1666   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1667   001BE4  0E00               	movlw	high _motorL
  1668   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1669   001BE8  0EBE               	movlw	low _motorR
  1670   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1671   001BEC  0E01               	movlw	high _motorR
  1672   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1673   001BF0  EC07  F024         	call	_YellowMove	;wreg free
  1674   001BF4                     
  1675                           ;main.c: 129:                 TMR0H=0;
  1676   001BF4  0E00               	movlw	0
  1677   001BF6  6ED4               	movwf	212,c	;volatile
  1678   001BF8                     
  1679                           ;main.c: 130:                 TMR0L=0;
  1680   001BF8  0E00               	movlw	0
  1681   001BFA  6ED3               	movwf	211,c	;volatile
  1682   001BFC                     
  1683                           ;main.c: 131:                 WayBack[move_count]=3;
  1684   001BFC  0E60               	movlw	low _WayBack
  1685   001BFE  0100               	movlb	0	; () banked
  1686   001C00  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1687   001C02  6ED9               	movwf	fsr2l,c
  1688   001C04  0E01               	movlw	high _WayBack
  1689   001C06  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1690   001C08  6EDA               	movwf	fsr2h,c
  1691   001C0A  0E03               	movlw	3
  1692   001C0C  6EDF               	movwf	indf2,c
  1693                           
  1694                           ;main.c: 132:             }
  1695   001C0E  EFFF  F00E         	goto	l4838
  1696   001C12                     l4782:
  1697                           
  1698                           ; BSR set to: 0
  1699   001C12  0E04               	movlw	4
  1700   001C14  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1701   001C16  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1702   001C18  A4D8               	btfss	status,2,c
  1703   001C1A  EF11  F00E         	goto	u4501
  1704   001C1E  EF13  F00E         	goto	u4500
  1705   001C22                     u4501:
  1706   001C22  EF2C  F00E         	goto	l4792
  1707   001C26                     u4500:
  1708   001C26                     
  1709                           ; BSR set to: 0
  1710                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1711   001C26  0EF5               	movlw	low _motorL
  1712   001C28  6E20               	movwf	BlueMove@mL^0,c
  1713   001C2A  0E00               	movlw	high _motorL
  1714   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1715   001C2E  0EBE               	movlw	low _motorR
  1716   001C30  6E22               	movwf	BlueMove@mR^0,c
  1717   001C32  0E01               	movlw	high _motorR
  1718   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1719   001C36  ECF5  F021         	call	_BlueMove	;wreg free
  1720   001C3A                     
  1721                           ;main.c: 135:                 TMR0H=0;
  1722   001C3A  0E00               	movlw	0
  1723   001C3C  6ED4               	movwf	212,c	;volatile
  1724   001C3E                     
  1725                           ;main.c: 136:                 TMR0L=0;
  1726   001C3E  0E00               	movlw	0
  1727   001C40  6ED3               	movwf	211,c	;volatile
  1728   001C42                     
  1729                           ;main.c: 137:                 WayBack[move_count]=4;
  1730   001C42  0E60               	movlw	low _WayBack
  1731   001C44  0100               	movlb	0	; () banked
  1732   001C46  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1733   001C48  6ED9               	movwf	fsr2l,c
  1734   001C4A  0E01               	movlw	high _WayBack
  1735   001C4C  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1736   001C4E  6EDA               	movwf	fsr2h,c
  1737   001C50  0E04               	movlw	4
  1738   001C52  6EDF               	movwf	indf2,c
  1739                           
  1740                           ;main.c: 138:             }
  1741   001C54  EFFF  F00E         	goto	l4838
  1742   001C58                     l4792:
  1743                           
  1744                           ; BSR set to: 0
  1745   001C58  0E05               	movlw	5
  1746   001C5A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1747   001C5C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1748   001C5E  A4D8               	btfss	status,2,c
  1749   001C60  EF34  F00E         	goto	u4511
  1750   001C64  EF36  F00E         	goto	u4510
  1751   001C68                     u4511:
  1752   001C68  EF4F  F00E         	goto	l4802
  1753   001C6C                     u4510:
  1754   001C6C                     
  1755                           ; BSR set to: 0
  1756                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1757   001C6C  0EF5               	movlw	low _motorL
  1758   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1759   001C70  0E00               	movlw	high _motorL
  1760   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1761   001C74  0EBE               	movlw	low _motorR
  1762   001C76  6E22               	movwf	GreenMove@mR^0,c
  1763   001C78  0E01               	movlw	high _motorR
  1764   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1765   001C7C  ECC5  F025         	call	_GreenMove	;wreg free
  1766   001C80                     
  1767                           ;main.c: 141:                 TMR0H=0;
  1768   001C80  0E00               	movlw	0
  1769   001C82  6ED4               	movwf	212,c	;volatile
  1770   001C84                     
  1771                           ;main.c: 142:                 TMR0L=0;
  1772   001C84  0E00               	movlw	0
  1773   001C86  6ED3               	movwf	211,c	;volatile
  1774   001C88                     
  1775                           ;main.c: 143:                 WayBack[move_count]=5;
  1776   001C88  0E60               	movlw	low _WayBack
  1777   001C8A  0100               	movlb	0	; () banked
  1778   001C8C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1779   001C8E  6ED9               	movwf	fsr2l,c
  1780   001C90  0E01               	movlw	high _WayBack
  1781   001C92  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1782   001C94  6EDA               	movwf	fsr2h,c
  1783   001C96  0E05               	movlw	5
  1784   001C98  6EDF               	movwf	indf2,c
  1785                           
  1786                           ;main.c: 144:             }
  1787   001C9A  EFFF  F00E         	goto	l4838
  1788   001C9E                     l4802:
  1789                           
  1790                           ; BSR set to: 0
  1791   001C9E  0E06               	movlw	6
  1792   001CA0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1793   001CA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1794   001CA4  A4D8               	btfss	status,2,c
  1795   001CA6  EF57  F00E         	goto	u4521
  1796   001CAA  EF59  F00E         	goto	u4520
  1797   001CAE                     u4521:
  1798   001CAE  EF72  F00E         	goto	l4812
  1799   001CB2                     u4520:
  1800   001CB2                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1803   001CB2  0EF5               	movlw	low _motorL
  1804   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1805   001CB6  0E00               	movlw	high _motorL
  1806   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1807   001CBA  0EBE               	movlw	low _motorR
  1808   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1809   001CBE  0E01               	movlw	high _motorR
  1810   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1811   001CC2  ECB5  F023         	call	_LightBlueMove	;wreg free
  1812   001CC6                     
  1813                           ;main.c: 147:                 TMR0H=0;
  1814   001CC6  0E00               	movlw	0
  1815   001CC8  6ED4               	movwf	212,c	;volatile
  1816   001CCA                     
  1817                           ;main.c: 148:                 TMR0L=0;
  1818   001CCA  0E00               	movlw	0
  1819   001CCC  6ED3               	movwf	211,c	;volatile
  1820   001CCE                     
  1821                           ;main.c: 149:                 WayBack[move_count]=6;
  1822   001CCE  0E60               	movlw	low _WayBack
  1823   001CD0  0100               	movlb	0	; () banked
  1824   001CD2  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1825   001CD4  6ED9               	movwf	fsr2l,c
  1826   001CD6  0E01               	movlw	high _WayBack
  1827   001CD8  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1828   001CDA  6EDA               	movwf	fsr2h,c
  1829   001CDC  0E06               	movlw	6
  1830   001CDE  6EDF               	movwf	indf2,c
  1831                           
  1832                           ;main.c: 150:             }
  1833   001CE0  EFFF  F00E         	goto	l4838
  1834   001CE4                     l4812:
  1835                           
  1836                           ; BSR set to: 0
  1837   001CE4  0E07               	movlw	7
  1838   001CE6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1839   001CE8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1840   001CEA  A4D8               	btfss	status,2,c
  1841   001CEC  EF7A  F00E         	goto	u4531
  1842   001CF0  EF7C  F00E         	goto	u4530
  1843   001CF4                     u4531:
  1844   001CF4  EF95  F00E         	goto	l4822
  1845   001CF8                     u4530:
  1846   001CF8                     
  1847                           ; BSR set to: 0
  1848                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  1849   001CF8  0EF5               	movlw	low _motorL
  1850   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1851   001CFC  0E00               	movlw	high _motorL
  1852   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1853   001D00  0EBE               	movlw	low _motorR
  1854   001D02  6E22               	movwf	PinkMove@mR^0,c
  1855   001D04  0E01               	movlw	high _motorR
  1856   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1857   001D08  EC30  F024         	call	_PinkMove	;wreg free
  1858   001D0C                     
  1859                           ;main.c: 153:                 TMR0H=0;
  1860   001D0C  0E00               	movlw	0
  1861   001D0E  6ED4               	movwf	212,c	;volatile
  1862   001D10                     
  1863                           ;main.c: 154:                 TMR0L=0;
  1864   001D10  0E00               	movlw	0
  1865   001D12  6ED3               	movwf	211,c	;volatile
  1866   001D14                     
  1867                           ;main.c: 155:                 WayBack[move_count]=7;
  1868   001D14  0E60               	movlw	low _WayBack
  1869   001D16  0100               	movlb	0	; () banked
  1870   001D18  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1871   001D1A  6ED9               	movwf	fsr2l,c
  1872   001D1C  0E01               	movlw	high _WayBack
  1873   001D1E  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1874   001D20  6EDA               	movwf	fsr2h,c
  1875   001D22  0E07               	movlw	7
  1876   001D24  6EDF               	movwf	indf2,c
  1877                           
  1878                           ;main.c: 156:             }
  1879   001D26  EFFF  F00E         	goto	l4838
  1880   001D2A                     l4822:
  1881                           
  1882                           ; BSR set to: 0
  1883   001D2A  0E0A               	movlw	10
  1884   001D2C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1885   001D2E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1886   001D30  A4D8               	btfss	status,2,c
  1887   001D32  EF9D  F00E         	goto	u4541
  1888   001D36  EF9F  F00E         	goto	u4540
  1889   001D3A                     u4541:
  1890   001D3A  EFAB  F00E         	goto	l4826
  1891   001D3E                     u4540:
  1892   001D3E                     
  1893                           ; BSR set to: 0
  1894                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  1895   001D3E  0EF5               	movlw	low _motorL
  1896   001D40  6E1A               	movwf	RetryMove@mL^0,c
  1897   001D42  0E00               	movlw	high _motorL
  1898   001D44  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1899   001D46  0EBE               	movlw	low _motorR
  1900   001D48  6E1C               	movwf	RetryMove@mR^0,c
  1901   001D4A  0E01               	movlw	high _motorR
  1902   001D4C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1903   001D4E  ECC6  F020         	call	_RetryMove	;wreg free
  1904                           
  1905                           ;main.c: 159:             }
  1906   001D52  EFFF  F00E         	goto	l4838
  1907   001D56                     l4826:
  1908                           
  1909                           ; BSR set to: 0
  1910   001D56  51EE               	movf	main@prev_colour& (0+255),w,b
  1911   001D58  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1912   001D5A  A4D8               	btfss	status,2,c
  1913   001D5C  EFB2  F00E         	goto	u4551
  1914   001D60  EFB4  F00E         	goto	u4550
  1915   001D64                     u4551:
  1916   001D64  EFDA  F00E         	goto	l422
  1917   001D68                     u4550:
  1918   001D68                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  1921   001D68  0EF5               	movlw	low _motorL
  1922   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1923   001D6C  0E00               	movlw	high _motorL
  1924   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1925   001D70  0EBE               	movlw	low _motorR
  1926   001D72  6E22               	movwf	BlueMove@mR^0,c
  1927   001D74  0E01               	movlw	high _motorR
  1928   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1929   001D78  ECF5  F021         	call	_BlueMove	;wreg free
  1930   001D7C                     
  1931                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  1932   001D7C  9ED5               	bcf	213,7,c	;volatile
  1933                           
  1934                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  1935   001D7E  0E60               	movlw	low _WayBack
  1936   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1937   001D82  0E01               	movlw	high _WayBack
  1938   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1939   001D86  0E00               	movlw	low _Time_forward
  1940   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1941   001D8A  0E02               	movlw	high _Time_forward
  1942   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1943   001D8E  ECE4  F016         	call	_go_Home	;wreg free
  1944                           
  1945                           ;main.c: 164:                 stop(&motorL, &motorR);
  1946   001D92  0EF5               	movlw	low _motorL
  1947   001D94  6E14               	movwf	stop@mL^0,c
  1948   001D96  0E00               	movlw	high _motorL
  1949   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1950   001D9A  0EBE               	movlw	low _motorR
  1951   001D9C  6E16               	movwf	stop@mR^0,c
  1952   001D9E  0E01               	movlw	high _motorR
  1953   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1954   001DA2  EC07  F021         	call	_stop	;wreg free
  1955   001DA6                     
  1956                           ;main.c: 165:                 run_flag=0;
  1957   001DA6  0E00               	movlw	0
  1958   001DA8  0100               	movlb	0	; () banked
  1959   001DAA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1960   001DAC  0E00               	movlw	0
  1961   001DAE  6FE8               	movwf	main@run_flag& (0+255),b
  1962   001DB0  EFFF  F00E         	goto	l4838
  1963   001DB4                     l422:
  1964                           
  1965                           ; BSR set to: 0
  1966   001DB4  EFFF  F00E         	goto	l4838
  1967   001DB8                     l405:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;main.c: 171:             int temp=TMR0L;
  1971   001DB8  CFD3 F0E6          	movff	4051,main@temp_1191	;volatile
  1972   001DBC  0100               	movlb	0	; () banked
  1973   001DBE  6BE7               	clrf	(main@temp_1191+1)& (0+255),b
  1974   001DC0                     
  1975                           ; BSR set to: 0
  1976                           ;main.c: 172:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1977   001DC0  0E80               	movlw	low main@buf
  1978   001DC2  6F60               	movwf	sprintf@s& (0+255),b
  1979   001DC4  0E00               	movlw	high main@buf
  1980   001DC6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1981   001DC8  0E01               	movlw	low STR_1
  1982   001DCA  6F62               	movwf	sprintf@fmt& (0+255),b
  1983   001DCC  0E0E               	movlw	high STR_1
  1984   001DCE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1985   001DD0  C1C7  F064         	movff	_vals,?_sprintf+4
  1986   001DD4  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1987   001DD8  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1988   001DDC  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1989   001DE0  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1990   001DE4  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1991   001DE8  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1992   001DEC  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1993   001DEE  EC63  F023         	call	_sprintf	;wreg free
  1994   001DF2                     
  1995                           ;main.c: 173:             sendStringSerial4(buf);
  1996   001DF2  0E80               	movlw	low main@buf
  1997   001DF4  6E02               	movwf	sendStringSerial4@string^0,c
  1998   001DF6  0E00               	movlw	high main@buf
  1999   001DF8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2000   001DFA  EC00  F026         	call	_sendStringSerial4	;wreg free
  2001   001DFE                     l4838:
  2002                           
  2003                           ;main.c: 69:     while (run_flag)
  2004   001DFE  0100               	movlb	0	; () banked
  2005   001E00  51E8               	movf	main@run_flag& (0+255),w,b
  2006   001E02  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2007   001E04  A4D8               	btfss	status,2,c
  2008   001E06  EF07  F00F         	goto	u4561
  2009   001E0A  EF09  F00F         	goto	u4560
  2010   001E0E                     u4561:
  2011   001E0E  EFE8  F00C         	goto	l4712
  2012   001E12                     u4560:
  2013   001E12                     
  2014                           ; BSR set to: 0
  2015   001E12  EF07  F000         	goto	start
  2016   001E16                     __end_of_main:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _sprintf *****************
  2020 ;; Defined at:
  2021 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2024 ;;		 -> main@buf(100), 
  2025 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2026 ;;		 -> STR_2(36), STR_1(36), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2029 ;;  ap              2   12[BANK0 ] PTR void [1]
  2030 ;;		 -> ?_sprintf(2), 
  2031 ;;  ret             2    0        int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    0[BANK0 ] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2041 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;Total ram usage:       25 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 8
  2048 ;; This function calls:
  2049 ;;		_vfprintf
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056   0046C6                     __ptext1:
  2057                           	callstack 0
  2058   0046C6                     _sprintf:
  2059                           	callstack 22
  2060   0046C6  0E64               	movlw	low (?_sprintf+4)
  2061   0046C8  0100               	movlb	0	; () banked
  2062   0046CA  6F6C               	movwf	sprintf@ap& (0+255),b
  2063   0046CC  0E00               	movlw	high (?_sprintf+4)
  2064   0046CE  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2065   0046D0  C060  F06E         	movff	sprintf@s,sprintf@f
  2066   0046D4  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2067   0046D8                     
  2068                           ; BSR set to: 0
  2069   0046D8  0E00               	movlw	0
  2070   0046DA  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2071   0046DC  0E00               	movlw	0
  2072   0046DE  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2073   0046E0                     
  2074                           ; BSR set to: 0
  2075   0046E0  0E00               	movlw	0
  2076   0046E2  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2077   0046E4  0E00               	movlw	0
  2078   0046E6  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2079   0046E8                     
  2080                           ; BSR set to: 0
  2081   0046E8  0E6E               	movlw	low sprintf@f
  2082   0046EA  6E51               	movwf	vfprintf@fp^0,c
  2083   0046EC  0E00               	movlw	high sprintf@f
  2084   0046EE  6E52               	movwf	(vfprintf@fp+1)^0,c
  2085   0046F0  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2086   0046F4  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2087   0046F8  0E6C               	movlw	low sprintf@ap
  2088   0046FA  6E55               	movwf	vfprintf@ap^0,c
  2089   0046FC  0E00               	movlw	high sprintf@ap
  2090   0046FE  6E56               	movwf	(vfprintf@ap+1)^0,c
  2091   004700  ECF9  F024         	call	_vfprintf	;wreg free
  2092   004704  0100               	movlb	0	; () banked
  2093   004706  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2094   004708  2560               	addwf	sprintf@s& (0+255),w,b
  2095   00470A  6ED9               	movwf	fsr2l,c
  2096   00470C  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2097   00470E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2098   004710  6EDA               	movwf	fsr2h,c
  2099   004712  0E00               	movlw	0
  2100   004714  6EDF               	movwf	indf2,c
  2101   004716                     
  2102                           ; BSR set to: 0
  2103   004716  0012               	return		;funcret
  2104   004718                     __end_of_sprintf:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _vfprintf *****************
  2108 ;; Defined at:
  2109 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2112 ;;		 -> sprintf@f(11), 
  2113 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2114 ;;		 -> STR_2(36), STR_1(36), 
  2115 ;;  ap              2   84[COMRAM] PTR PTR void 
  2116 ;;		 -> sprintf@ap(2), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2119 ;;		 -> STR_2(36), STR_1(36), 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2   80[COMRAM] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;Total ram usage:        8 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 7
  2136 ;; This function calls:
  2137 ;;		_vfpfcnvrt
  2138 ;; This function is called by:
  2139 ;;		_sprintf
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text2
  2144   0049F2                     __ptext2:
  2145                           	callstack 0
  2146   0049F2                     _vfprintf:
  2147                           	callstack 22
  2148   0049F2                     
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2150   0049F2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2151   0049F6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2154   0049FA  EF0D  F025         	goto	l4216
  2155   0049FE                     l4214:
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2158   0049FE  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2159   004A02  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2160   004A06  0E57               	movlw	low vfprintf@cfmt
  2161   004A08  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2162   004A0A  0E00               	movlw	high vfprintf@cfmt
  2163   004A0C  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2164   004A0E  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2165   004A12  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2166   004A16  EC7F  F01C         	call	_vfpfcnvrt	;wreg free
  2167   004A1A                     l4216:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2170   004A1A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2171   004A1E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2172   004A22                     	if	0	;tblptru may be non-zero
  2173   004A22                     	endif
  2174   004A22                     	if	0	;tblptru may be non-zero
  2175   004A22                     	endif
  2176   004A22  0008               	tblrd		*
  2177   004A24  50F5               	movf	tablat,w,c
  2178   004A26  0900               	iorlw	0
  2179   004A28  A4D8               	btfss	status,2,c
  2180   004A2A  EF19  F025         	goto	u3921
  2181   004A2E  EF1B  F025         	goto	u3920
  2182   004A32                     u3921:
  2183   004A32  EFFF  F024         	goto	l4214
  2184   004A36                     u3920:
  2185   004A36                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2187   004A36  0E00               	movlw	0
  2188   004A38  6E52               	movwf	(?_vfprintf+1)^0,c
  2189   004A3A  0E00               	movlw	0
  2190   004A3C  6E51               	movwf	?_vfprintf^0,c
  2191   004A3E  0012               	return		;funcret
  2192   004A40                     __end_of_vfprintf:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _vfpfcnvrt *****************
  2196 ;; Defined at:
  2197 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2200 ;;		 -> sprintf@f(11), 
  2201 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2202 ;;		 -> vfprintf@cfmt(2), 
  2203 ;;  ap              2   66[COMRAM] PTR PTR void 
  2204 ;;		 -> sprintf@ap(2), 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  convarg         8   70[COMRAM] struct .
  2207 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2208 ;;		 -> STR_2(36), STR_1(36), 
  2209 ;;  i               2    0        int 
  2210 ;;  done            2    0        int 
  2211 ;;  c               1    0        unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;Total ram usage:       18 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 6
  2228 ;; This function calls:
  2229 ;;		_dtoa
  2230 ;;		_fputc
  2231 ;; This function is called by:
  2232 ;;		_vfprintf
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text3
  2237   0038FE                     __ptext3:
  2238                           	callstack 0
  2239   0038FE                     _vfpfcnvrt:
  2240                           	callstack 22
  2241   0038FE                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2243   0038FE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2244   003902  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2245   003906  CFDE FFF6          	movff	postinc2,tblptrl
  2246   00390A  CFDD FFF7          	movff	postdec2,tblptrh
  2247   00390E                     	if	0	;tblptru may be non-zero
  2248   00390E                     	endif
  2249   00390E                     	if	0	;tblptru may be non-zero
  2250   00390E                     	endif
  2251   00390E  0008               	tblrd		*
  2252   003910  50F5               	movf	tablat,w,c
  2253   003912  0A25               	xorlw	37
  2254   003914  A4D8               	btfss	status,2,c
  2255   003916  EF8F  F01C         	goto	u3261
  2256   00391A  EF91  F01C         	goto	u3260
  2257   00391E                     u3261:
  2258   00391E  EF12  F01D         	goto	l3770
  2259   003922                     u3260:
  2260   003922                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2262   003922  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2263   003926  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2264   00392A  2ADE               	incf	postinc2,f,c
  2265   00392C  0E00               	movlw	0
  2266   00392E  22DD               	addwfc	postdec2,f,c
  2267   003930                     
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2269   003930  0E00               	movlw	0
  2270   003932  0101               	movlb	1	; () banked
  2271   003934  6F5D               	movwf	(_width+1)& (0+255),b
  2272   003936  0E00               	movlw	0
  2273   003938  6F5C               	movwf	_width& (0+255),b
  2274   00393A  C15C  F0F4         	movff	_width,_flags
  2275   00393E                     
  2276                           ; BSR set to: 1
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2278   00393E  0100               	movlb	0	; () banked
  2279   003940  69F0               	setf	_prec& (0+255),b
  2280   003942  69F1               	setf	(_prec+1)& (0+255),b
  2281   003944                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2284   003944  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2285   003948  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2286   00394C  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2287   003950  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2288   003954                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2291   003954  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2292   003958  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2293   00395C                     	if	0	;tblptru may be non-zero
  2294   00395C                     	endif
  2295   00395C                     	if	0	;tblptru may be non-zero
  2296   00395C                     	endif
  2297   00395C  0008               	tblrd		*
  2298   00395E  50F5               	movf	tablat,w,c
  2299   003960  0A64               	xorlw	100
  2300   003962  B4D8               	btfsc	status,2,c
  2301   003964  EFB6  F01C         	goto	u3271
  2302   003968  EFB8  F01C         	goto	u3270
  2303   00396C                     u3271:
  2304   00396C  EFC6  F01C         	goto	l3760
  2305   003970                     u3270:
  2306   003970                     
  2307                           ; BSR set to: 0
  2308   003970  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2309   003974  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2310   003978                     	if	0	;tblptru may be non-zero
  2311   003978                     	endif
  2312   003978                     	if	0	;tblptru may be non-zero
  2313   003978                     	endif
  2314   003978  0008               	tblrd		*
  2315   00397A  50F5               	movf	tablat,w,c
  2316   00397C  0A69               	xorlw	105
  2317   00397E  A4D8               	btfss	status,2,c
  2318   003980  EFC4  F01C         	goto	u3281
  2319   003984  EFC6  F01C         	goto	u3280
  2320   003988                     u3281:
  2321   003988  EF09  F01D         	goto	l3766
  2322   00398C                     u3280:
  2323   00398C                     l3760:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2327   00398C  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2328   003990  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2329   003994  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2330   003998  0E02               	movlw	2
  2331   00399A  26DE               	addwf	postinc2,f,c
  2332   00399C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2333   0039A0  0E00               	movlw	0
  2334   0039A2  22DD               	addwfc	postdec2,f,c
  2335   0039A4  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2336   0039A8  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2337   0039AC  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2338   0039B0  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2339   0039B4  0E00               	movlw	0
  2340   0039B6  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2341   0039B8  0EFF               	movlw	-1
  2342   0039BA  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2343   0039BC  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2344   0039BE  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2345   0039C0  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2346   0039C2  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2347   0039C4  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2350   0039C6  0E01               	movlw	1
  2351   0039C8  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2352   0039CA  6E45               	movwf	??_vfpfcnvrt^0,c
  2353   0039CC  0E00               	movlw	0
  2354   0039CE  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2355   0039D0  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2356   0039D2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2357   0039D6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2358   0039DA  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2359   0039DE  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2360   0039E2                     
  2361                           ; BSR set to: 0
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2363   0039E2  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2364   0039E6  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2365   0039EA  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2366   0039EE  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2367   0039F2  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2368   0039F6  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2369   0039FA  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2370   0039FE  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2371   003A02  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2372   003A06  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2373   003A0A  EC3A  F018         	call	_dtoa	;wreg free
  2374   003A0E  EF26  F01D         	goto	l1408
  2375   003A12                     l3766:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2378   003A12  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379   003A16  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380   003A1A  2ADE               	incf	postinc2,f,c
  2381   003A1C  0E00               	movlw	0
  2382   003A1E  22DD               	addwfc	postdec2,f,c
  2383   003A20  EF26  F01D         	goto	l1408
  2384   003A24                     l3770:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2387   003A24  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388   003A28  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389   003A2C  CFDE FFF6          	movff	postinc2,tblptrl
  2390   003A30  CFDD FFF7          	movff	postdec2,tblptrh
  2391   003A34                     	if	0	;tblptru may be non-zero
  2392   003A34                     	endif
  2393   003A34                     	if	0	;tblptru may be non-zero
  2394   003A34                     	endif
  2395   003A34  0008               	tblrd		*
  2396   003A36  50F5               	movf	tablat,w,c
  2397   003A38  6E01               	movwf	fputc@c^0,c
  2398   003A3A  6A02               	clrf	(fputc@c+1)^0,c
  2399   003A3C  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2400   003A40  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2401   003A44  ECA9  F01D         	call	_fputc	;wreg free
  2402   003A48  EF09  F01D         	goto	l3766
  2403   003A4C                     l1408:
  2404   003A4C  0012               	return		;funcret
  2405   003A4E                     __end_of_vfpfcnvrt:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _dtoa *****************
  2409 ;; Defined at:
  2410 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2413 ;;		 -> sprintf@f(11), 
  2414 ;;  d               8   29[COMRAM] long long 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  n               8   51[COMRAM] long long 
  2417 ;;  i               2   59[COMRAM] int 
  2418 ;;  w               2   49[COMRAM] int 
  2419 ;;  p               2   47[COMRAM] int 
  2420 ;;  s               1   61[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2430 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;Total ram usage:       35 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 5
  2437 ;; This function calls:
  2438 ;;		___aodiv
  2439 ;;		___aomod
  2440 ;;		_abs
  2441 ;;		_pad
  2442 ;; This function is called by:
  2443 ;;		_vfpfcnvrt
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text4
  2448   003074                     __ptext4:
  2449                           	callstack 0
  2450   003074                     _dtoa:
  2451                           	callstack 22
  2452   003074                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2454   003074  C01E  F034         	movff	dtoa@d,dtoa@n
  2455   003078  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2456   00307C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2457   003080  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2458   003084  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2459   003088  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2460   00308C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2461   003090  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2462   003094                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2464   003094  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2465   003096  EF4F  F018         	goto	u2741
  2466   00309A  EF52  F018         	goto	u2740
  2467   00309E                     u2741:
  2468   00309E  0E01               	movlw	1
  2469   0030A0  EF53  F018         	goto	u2750
  2470   0030A4                     u2740:
  2471   0030A4  0E00               	movlw	0
  2472   0030A6                     u2750:
  2473   0030A6  6E3E               	movwf	dtoa@s^0,c
  2474   0030A8                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2476   0030A8  503E               	movf	dtoa@s^0,w,c
  2477   0030AA  B4D8               	btfsc	status,2,c
  2478   0030AC  EF5A  F018         	goto	u2761
  2479   0030B0  EF5C  F018         	goto	u2760
  2480   0030B4                     u2761:
  2481   0030B4  EF6C  F018         	goto	l3440
  2482   0030B8                     u2760:
  2483   0030B8                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2485   0030B8  1E3B               	comf	(dtoa@n+7)^0,f,c
  2486   0030BA  1E3A               	comf	(dtoa@n+6)^0,f,c
  2487   0030BC  1E39               	comf	(dtoa@n+5)^0,f,c
  2488   0030BE  1E38               	comf	(dtoa@n+4)^0,f,c
  2489   0030C0  1E37               	comf	(dtoa@n+3)^0,f,c
  2490   0030C2  1E36               	comf	(dtoa@n+2)^0,f,c
  2491   0030C4  1E35               	comf	(dtoa@n+1)^0,f,c
  2492   0030C6  6C34               	negf	dtoa@n^0,c
  2493   0030C8  0E00               	movlw	0
  2494   0030CA  2235               	addwfc	(dtoa@n+1)^0,f,c
  2495   0030CC  2236               	addwfc	(dtoa@n+2)^0,f,c
  2496   0030CE  2237               	addwfc	(dtoa@n+3)^0,f,c
  2497   0030D0  2238               	addwfc	(dtoa@n+4)^0,f,c
  2498   0030D2  2239               	addwfc	(dtoa@n+5)^0,f,c
  2499   0030D4  223A               	addwfc	(dtoa@n+6)^0,f,c
  2500   0030D6  223B               	addwfc	(dtoa@n+7)^0,f,c
  2501   0030D8                     l3440:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2504   0030D8  0100               	movlb	0	; () banked
  2505   0030DA  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2506   0030DC  EF7A  F018         	goto	u2770
  2507   0030E0  51F1               	movf	(_prec+1)& (0+255),w,b
  2508   0030E2  E106               	bnz	u2771
  2509   0030E4  05F0               	decf	_prec& (0+255),w,b
  2510   0030E6  B0D8               	btfsc	status,0,c
  2511   0030E8  EF78  F018         	goto	u2771
  2512   0030EC  EF7A  F018         	goto	u2770
  2513   0030F0                     u2771:
  2514   0030F0  EF80  F018         	goto	l1387
  2515   0030F4                     u2770:
  2516   0030F4                     
  2517                           ; BSR set to: 0
  2518   0030F4  0E00               	movlw	0
  2519   0030F6  6E31               	movwf	(dtoa@p+1)^0,c
  2520   0030F8  0E01               	movlw	1
  2521   0030FA  6E30               	movwf	dtoa@p^0,c
  2522   0030FC  EF84  F018         	goto	l1389
  2523   003100                     l1387:
  2524                           
  2525                           ; BSR set to: 0
  2526   003100  C0F0  F030         	movff	_prec,dtoa@p
  2527   003104  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2528   003108                     l1389:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2532   003108  C15C  F032         	movff	_width,dtoa@w
  2533   00310C  C15D  F033         	movff	_width+1,dtoa@w+1
  2534   003110                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2537   003110  503E               	movf	dtoa@s^0,w,c
  2538   003112  B4D8               	btfsc	status,2,c
  2539   003114  EF8E  F018         	goto	u2781
  2540   003118  EF90  F018         	goto	u2780
  2541   00311C                     u2781:
  2542   00311C  EFA7  F018         	goto	l1390
  2543   003120                     u2780:
  2544   003120                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2547   003120  0632               	decf	dtoa@w^0,f,c
  2548   003122  A0D8               	btfss	status,0,c
  2549   003124  0633               	decf	(dtoa@w+1)^0,f,c
  2550   003126                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2553   003126  503E               	movf	dtoa@s^0,w,c
  2554   003128  A4D8               	btfss	status,2,c
  2555   00312A  EF99  F018         	goto	u2791
  2556   00312E  EF9B  F018         	goto	u2790
  2557   003132                     u2791:
  2558   003132  EFA1  F018         	goto	l3452
  2559   003136                     u2790:
  2560   003136                     
  2561                           ; BSR set to: 0
  2562   003136  0E00               	movlw	0
  2563   003138  6E2F               	movwf	(_dtoa$2514+1)^0,c
  2564   00313A  0E2B               	movlw	43
  2565   00313C  6E2E               	movwf	_dtoa$2514^0,c
  2566   00313E  EFA5  F018         	goto	l3454
  2567   003142                     l3452:
  2568                           
  2569                           ; BSR set to: 0
  2570   003142  0E00               	movlw	0
  2571   003144  6E2F               	movwf	(_dtoa$2514+1)^0,c
  2572   003146  0E2D               	movlw	45
  2573   003148  6E2E               	movwf	_dtoa$2514^0,c
  2574   00314A                     l3454:
  2575                           
  2576                           ; BSR set to: 0
  2577   00314A  C02E  F03E         	movff	_dtoa$2514,dtoa@s
  2578   00314E                     l1390:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2582   00314E  0E00               	movlw	0
  2583   003150  6E3D               	movwf	(dtoa@i+1)^0,c
  2584   003152  0E1F               	movlw	31
  2585   003154  6E3C               	movwf	dtoa@i^0,c
  2586   003156                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2589   003156  0E00               	movlw	0
  2590   003158  0101               	movlb	1	; () banked
  2591   00315A  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2594   00315C  EF2C  F019         	goto	l3468
  2595   003160                     l3458:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2598   003160  063C               	decf	dtoa@i^0,f,c
  2599   003162  A0D8               	btfss	status,0,c
  2600   003164  063D               	decf	(dtoa@i+1)^0,f,c
  2601   003166                     
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2603   003166  0E92               	movlw	low _dbuf
  2604   003168  243C               	addwf	dtoa@i^0,w,c
  2605   00316A  6ED9               	movwf	fsr2l,c
  2606   00316C  0E01               	movlw	high _dbuf
  2607   00316E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2608   003170  6EDA               	movwf	fsr2h,c
  2609   003172  C034  F001         	movff	dtoa@n,___aomod@dividend
  2610   003176  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2611   00317A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2612   00317E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2613   003182  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2614   003186  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2615   00318A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2616   00318E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2617   003192  0E0A               	movlw	10
  2618   003194  6E09               	movwf	___aomod@divisor^0,c
  2619   003196  0E00               	movlw	0
  2620   003198  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2621   00319A  0E00               	movlw	0
  2622   00319C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2623   00319E  0E00               	movlw	0
  2624   0031A0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2625   0031A2  0E00               	movlw	0
  2626   0031A4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2627   0031A6  0E00               	movlw	0
  2628   0031A8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2629   0031AA  0E00               	movlw	0
  2630   0031AC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2631   0031AE  0E00               	movlw	0
  2632   0031B0  6E10               	movwf	(___aomod@divisor+7)^0,c
  2633   0031B2  ECCD  F01B         	call	___aomod	;wreg free
  2634   0031B6  C001  F026         	movff	?___aomod,??_dtoa
  2635   0031BA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2636   0031BE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2637   0031C2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2638   0031C6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2639   0031CA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2640   0031CE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2641   0031D2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2642   0031D6  C026  F013         	movff	??_dtoa,abs@a
  2643   0031DA  C027  F014         	movff	??_dtoa+1,abs@a+1
  2644   0031DE  EC86  F025         	call	_abs	;wreg free
  2645   0031E2  5013               	movf	?_abs^0,w,c
  2646   0031E4  0F30               	addlw	48
  2647   0031E6  6EDF               	movwf	indf2,c
  2648   0031E8                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2650   0031E8  0630               	decf	dtoa@p^0,f,c
  2651   0031EA  A0D8               	btfss	status,0,c
  2652   0031EC  0631               	decf	(dtoa@p+1)^0,f,c
  2653   0031EE                     
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2655   0031EE  0632               	decf	dtoa@w^0,f,c
  2656   0031F0  A0D8               	btfss	status,0,c
  2657   0031F2  0633               	decf	(dtoa@w+1)^0,f,c
  2658   0031F4                     
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2660   0031F4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2661   0031F8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2662   0031FC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2663   003200  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2664   003204  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2665   003208  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2666   00320C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2667   003210  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2668   003214  0E0A               	movlw	10
  2669   003216  6E09               	movwf	___aodiv@divisor^0,c
  2670   003218  0E00               	movlw	0
  2671   00321A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2672   00321C  0E00               	movlw	0
  2673   00321E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2674   003220  0E00               	movlw	0
  2675   003222  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2676   003224  0E00               	movlw	0
  2677   003226  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2678   003228  0E00               	movlw	0
  2679   00322A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2680   00322C  0E00               	movlw	0
  2681   00322E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2682   003230  0E00               	movlw	0
  2683   003232  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2684   003234  EC53  F01A         	call	___aodiv	;wreg free
  2685   003238  C001  F034         	movff	?___aodiv,dtoa@n
  2686   00323C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2687   003240  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2688   003244  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2689   003248  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2690   00324C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2691   003250  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2692   003254  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2693   003258                     l3468:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2696   003258  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2697   00325A  EF37  F019         	goto	u2801
  2698   00325E  503D               	movf	(dtoa@i+1)^0,w,c
  2699   003260  E108               	bnz	u2800
  2700   003262  043C               	decf	dtoa@i^0,w,c
  2701   003264  A0D8               	btfss	status,0,c
  2702   003266  EF37  F019         	goto	u2801
  2703   00326A  EF39  F019         	goto	u2800
  2704   00326E                     u2801:
  2705   00326E  EF55  F019         	goto	l3474
  2706   003272                     u2800:
  2707   003272  5034               	movf	dtoa@n^0,w,c
  2708   003274  1035               	iorwf	(dtoa@n+1)^0,w,c
  2709   003276  1036               	iorwf	(dtoa@n+2)^0,w,c
  2710   003278  1037               	iorwf	(dtoa@n+3)^0,w,c
  2711   00327A  1038               	iorwf	(dtoa@n+4)^0,w,c
  2712   00327C  1039               	iorwf	(dtoa@n+5)^0,w,c
  2713   00327E  103A               	iorwf	(dtoa@n+6)^0,w,c
  2714   003280  103B               	iorwf	(dtoa@n+7)^0,w,c
  2715   003282  A4D8               	btfss	status,2,c
  2716   003284  EF46  F019         	goto	u2811
  2717   003288  EF48  F019         	goto	u2810
  2718   00328C                     u2811:
  2719   00328C  EFB0  F018         	goto	l3458
  2720   003290                     u2810:
  2721   003290  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2722   003292  EF55  F019         	goto	u2820
  2723   003296  5031               	movf	(dtoa@p+1)^0,w,c
  2724   003298  E106               	bnz	u2821
  2725   00329A  0430               	decf	dtoa@p^0,w,c
  2726   00329C  B0D8               	btfsc	status,0,c
  2727   00329E  EF53  F019         	goto	u2821
  2728   0032A2  EF55  F019         	goto	u2820
  2729   0032A6                     u2821:
  2730   0032A6  EFB0  F018         	goto	l3458
  2731   0032AA                     u2820:
  2732   0032AA                     l3474:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2735   0032AA  503E               	movf	dtoa@s^0,w,c
  2736   0032AC  B4D8               	btfsc	status,2,c
  2737   0032AE  EF5B  F019         	goto	u2831
  2738   0032B2  EF5D  F019         	goto	u2830
  2739   0032B6                     u2831:
  2740   0032B6  EF68  F019         	goto	l3480
  2741   0032BA                     u2830:
  2742   0032BA                     
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2744   0032BA  063C               	decf	dtoa@i^0,f,c
  2745   0032BC  A0D8               	btfss	status,0,c
  2746   0032BE  063D               	decf	(dtoa@i+1)^0,f,c
  2747   0032C0                     
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2749   0032C0  0E92               	movlw	low _dbuf
  2750   0032C2  243C               	addwf	dtoa@i^0,w,c
  2751   0032C4  6ED9               	movwf	fsr2l,c
  2752   0032C6  0E01               	movlw	high _dbuf
  2753   0032C8  203D               	addwfc	(dtoa@i+1)^0,w,c
  2754   0032CA  6EDA               	movwf	fsr2h,c
  2755   0032CC  C03E  FFDF         	movff	dtoa@s,indf2
  2756   0032D0                     l3480:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2759   0032D0  C01C  F011         	movff	dtoa@fp,pad@fp
  2760   0032D4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2761   0032D8  0E92               	movlw	low _dbuf
  2762   0032DA  243C               	addwf	dtoa@i^0,w,c
  2763   0032DC  6E13               	movwf	pad@buf^0,c
  2764   0032DE  0E01               	movlw	high _dbuf
  2765   0032E0  203D               	addwfc	(dtoa@i+1)^0,w,c
  2766   0032E2  6E14               	movwf	(pad@buf+1)^0,c
  2767   0032E4  C032  F015         	movff	dtoa@w,pad@p
  2768   0032E8  C033  F016         	movff	dtoa@w+1,pad@p+1
  2769   0032EC  EC46  F021         	call	_pad	;wreg free
  2770   0032F0  0012               	return		;funcret
  2771   0032F2                     __end_of_dtoa:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _pad *****************
  2775 ;; Defined at:
  2776 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2779 ;;		 -> sprintf@f(11), 
  2780 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2781 ;;		 -> dbuf(32), 
  2782 ;;  p               2   20[COMRAM] int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  w               2   25[COMRAM] int 
  2785 ;;  i               2   23[COMRAM] int 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2795 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;Total ram usage:       11 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 4
  2802 ;; This function calls:
  2803 ;;		_fputc
  2804 ;;		_fputs
  2805 ;; This function is called by:
  2806 ;;		_dtoa
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text5
  2811   00428C                     __ptext5:
  2812                           	callstack 0
  2813   00428C                     _pad:
  2814                           	callstack 22
  2815   00428C                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2817   00428C  BE16               	btfsc	(pad@p+1)^0,7,c
  2818   00428E  EF4B  F021         	goto	u2591
  2819   004292  EF4D  F021         	goto	u2590
  2820   004296                     u2591:
  2821   004296  EF53  F021         	goto	l3344
  2822   00429A                     u2590:
  2823   00429A  C015  F01A         	movff	pad@p,pad@w
  2824   00429E  C016  F01B         	movff	pad@p+1,pad@w+1
  2825   0042A2  EF57  F021         	goto	l1378
  2826   0042A6                     l3344:
  2827   0042A6  0E00               	movlw	0
  2828   0042A8  6E1B               	movwf	(pad@w+1)^0,c
  2829   0042AA  0E00               	movlw	0
  2830   0042AC  6E1A               	movwf	pad@w^0,c
  2831   0042AE                     l1378:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2834   0042AE  0E00               	movlw	0
  2835   0042B0  6E19               	movwf	(pad@i+1)^0,c
  2836   0042B2  0E00               	movlw	0
  2837   0042B4  6E18               	movwf	pad@i^0,c
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2840   0042B6  EF69  F021         	goto	l3350
  2841   0042BA                     l3346:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2844   0042BA  0E00               	movlw	0
  2845   0042BC  6E02               	movwf	(fputc@c+1)^0,c
  2846   0042BE  0E20               	movlw	32
  2847   0042C0  6E01               	movwf	fputc@c^0,c
  2848   0042C2  C011  F003         	movff	pad@fp,fputc@fp
  2849   0042C6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2850   0042CA  ECA9  F01D         	call	_fputc	;wreg free
  2851   0042CE                     
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2853   0042CE  4A18               	infsnz	pad@i^0,f,c
  2854   0042D0  2A19               	incf	(pad@i+1)^0,f,c
  2855   0042D2                     l3350:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2858   0042D2  501A               	movf	pad@w^0,w,c
  2859   0042D4  5C18               	subwf	pad@i^0,w,c
  2860   0042D6  5019               	movf	(pad@i+1)^0,w,c
  2861   0042D8  0A80               	xorlw	128
  2862   0042DA  6E17               	movwf	??_pad^0,c
  2863   0042DC  501B               	movf	(pad@w+1)^0,w,c
  2864   0042DE  0A80               	xorlw	128
  2865   0042E0  5817               	subwfb	??_pad^0,w,c
  2866   0042E2  A0D8               	btfss	status,0,c
  2867   0042E4  EF76  F021         	goto	u2601
  2868   0042E8  EF78  F021         	goto	u2600
  2869   0042EC                     u2601:
  2870   0042EC  EF5D  F021         	goto	l3346
  2871   0042F0                     u2600:
  2872   0042F0                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2874   0042F0  C013  F00A         	movff	pad@buf,fputs@s
  2875   0042F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2876   0042F8  C011  F00C         	movff	pad@fp,fputs@fp
  2877   0042FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2878   004300  EC43  F025         	call	_fputs	;wreg free
  2879   004304  0012               	return		;funcret
  2880   004306                     __end_of_pad:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _fputs *****************
  2884 ;; Defined at:
  2885 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2888 ;;		 -> dbuf(32), 
  2889 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2890 ;;		 -> sprintf@f(11), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  i               2   14[COMRAM] int 
  2893 ;;  c               1   13[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    9[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;Total ram usage:        7 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 3
  2910 ;; This function calls:
  2911 ;;		_fputc
  2912 ;; This function is called by:
  2913 ;;		_pad
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text6
  2918   004A86                     __ptext6:
  2919                           	callstack 0
  2920   004A86                     _fputs:
  2921                           	callstack 22
  2922   004A86  0E00               	movlw	0
  2923   004A88  6E10               	movwf	(fputs@i+1)^0,c
  2924   004A8A  0E00               	movlw	0
  2925   004A8C  6E0F               	movwf	fputs@i^0,c
  2926   004A8E  EF54  F025         	goto	l3242
  2927   004A92                     l3238:
  2928   004A92  C00E  F001         	movff	fputs@c,fputc@c
  2929   004A96  6A02               	clrf	(fputc@c+1)^0,c
  2930   004A98  C00C  F003         	movff	fputs@fp,fputc@fp
  2931   004A9C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2932   004AA0  ECA9  F01D         	call	_fputc	;wreg free
  2933   004AA4  4A0F               	infsnz	fputs@i^0,f,c
  2934   004AA6  2A10               	incf	(fputs@i+1)^0,f,c
  2935   004AA8                     l3242:
  2936   004AA8  500F               	movf	fputs@i^0,w,c
  2937   004AAA  240A               	addwf	fputs@s^0,w,c
  2938   004AAC  6ED9               	movwf	fsr2l,c
  2939   004AAE  5010               	movf	(fputs@i+1)^0,w,c
  2940   004AB0  200B               	addwfc	(fputs@s+1)^0,w,c
  2941   004AB2  6EDA               	movwf	fsr2h,c
  2942   004AB4  50DF               	movf	indf2,w,c
  2943   004AB6  6E0E               	movwf	fputs@c^0,c
  2944   004AB8  500E               	movf	fputs@c^0,w,c
  2945   004ABA  A4D8               	btfss	status,2,c
  2946   004ABC  EF62  F025         	goto	u2431
  2947   004AC0  EF64  F025         	goto	u2430
  2948   004AC4                     u2431:
  2949   004AC4  EF49  F025         	goto	l3238
  2950   004AC8                     u2430:
  2951   004AC8  0012               	return		;funcret
  2952   004ACA                     __end_of_fputs:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _fputc *****************
  2956 ;; Defined at:
  2957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  c               2    0[COMRAM] int 
  2960 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2961 ;;		 -> sprintf@f(11), 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    0[COMRAM] int 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;Total ram usage:        9 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 2
  2980 ;; This function calls:
  2981 ;;		_putch
  2982 ;; This function is called by:
  2983 ;;		_pad
  2984 ;;		_vfpfcnvrt
  2985 ;;		_fputs
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text7
  2990   003B52                     __ptext7:
  2991                           	callstack 0
  2992   003B52                     _fputc:
  2993                           	callstack 25
  2994   003B52  5003               	movf	fputc@fp^0,w,c
  2995   003B54  1004               	iorwf	(fputc@fp+1)^0,w,c
  2996   003B56  B4D8               	btfsc	status,2,c
  2997   003B58  EFB0  F01D         	goto	u2361
  2998   003B5C  EFB2  F01D         	goto	u2360
  2999   003B60                     u2361:
  3000   003B60  EFBB  F01D         	goto	l3198
  3001   003B64                     u2360:
  3002   003B64  5003               	movf	fputc@fp^0,w,c
  3003   003B66  1004               	iorwf	(fputc@fp+1)^0,w,c
  3004   003B68  A4D8               	btfss	status,2,c
  3005   003B6A  EFB9  F01D         	goto	u2371
  3006   003B6E  EFBB  F01D         	goto	u2370
  3007   003B72                     u2371:
  3008   003B72  EFC0  F01D         	goto	l3200
  3009   003B76                     u2370:
  3010   003B76                     l3198:
  3011   003B76  5001               	movf	fputc@c^0,w,c
  3012   003B78  ECBB  F026         	call	_putch
  3013   003B7C  EF0D  F01E         	goto	l1433
  3014   003B80                     l3200:
  3015   003B80  EE20 F009          	lfsr	2,9
  3016   003B84  5003               	movf	fputc@fp^0,w,c
  3017   003B86  26D9               	addwf	fsr2l,f,c
  3018   003B88  5004               	movf	(fputc@fp+1)^0,w,c
  3019   003B8A  22DA               	addwfc	fsr2h,f,c
  3020   003B8C  50DE               	movf	postinc2,w,c
  3021   003B8E  10DE               	iorwf	postinc2,w,c
  3022   003B90  B4D8               	btfsc	status,2,c
  3023   003B92  EFCD  F01D         	goto	u2381
  3024   003B96  EFCF  F01D         	goto	u2380
  3025   003B9A                     u2381:
  3026   003B9A  EFEA  F01D         	goto	l3204
  3027   003B9E                     u2380:
  3028   003B9E  EE20 F009          	lfsr	2,9
  3029   003BA2  5003               	movf	fputc@fp^0,w,c
  3030   003BA4  26D9               	addwf	fsr2l,f,c
  3031   003BA6  5004               	movf	(fputc@fp+1)^0,w,c
  3032   003BA8  22DA               	addwfc	fsr2h,f,c
  3033   003BAA  EE10 F003          	lfsr	1,3
  3034   003BAE  5003               	movf	fputc@fp^0,w,c
  3035   003BB0  26E1               	addwf	fsr1l,f,c
  3036   003BB2  5004               	movf	(fputc@fp+1)^0,w,c
  3037   003BB4  22E2               	addwfc	fsr1h,f,c
  3038   003BB6  50DE               	movf	postinc2,w,c
  3039   003BB8  5CE6               	subwf	postinc1,w,c
  3040   003BBA  50E6               	movf	postinc1,w,c
  3041   003BBC  0A80               	xorlw	128
  3042   003BBE  6E09               	movwf	(??_fputc+4)^0,c
  3043   003BC0  50DE               	movf	postinc2,w,c
  3044   003BC2  0A80               	xorlw	128
  3045   003BC4  5809               	subwfb	(??_fputc+4)^0,w,c
  3046   003BC6  B0D8               	btfsc	status,0,c
  3047   003BC8  EFE8  F01D         	goto	u2391
  3048   003BCC  EFEA  F01D         	goto	u2390
  3049   003BD0                     u2391:
  3050   003BD0  EF0D  F01E         	goto	l1433
  3051   003BD4                     u2390:
  3052   003BD4                     l3204:
  3053   003BD4  EE20 F003          	lfsr	2,3
  3054   003BD8  5003               	movf	fputc@fp^0,w,c
  3055   003BDA  26D9               	addwf	fsr2l,f,c
  3056   003BDC  5004               	movf	(fputc@fp+1)^0,w,c
  3057   003BDE  22DA               	addwfc	fsr2h,f,c
  3058   003BE0  CFDE F005          	movff	postinc2,??_fputc
  3059   003BE4  CFDD F006          	movff	postdec2,??_fputc+1
  3060   003BE8  C003  FFD9         	movff	fputc@fp,fsr2l
  3061   003BEC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3062   003BF0  CFDE F007          	movff	postinc2,??_fputc+2
  3063   003BF4  CFDD F008          	movff	postdec2,??_fputc+3
  3064   003BF8  5005               	movf	??_fputc^0,w,c
  3065   003BFA  2407               	addwf	(??_fputc+2)^0,w,c
  3066   003BFC  6ED9               	movwf	fsr2l,c
  3067   003BFE  5006               	movf	(??_fputc+1)^0,w,c
  3068   003C00  2008               	addwfc	(??_fputc+3)^0,w,c
  3069   003C02  6EDA               	movwf	fsr2h,c
  3070   003C04  C001  FFDF         	movff	fputc@c,indf2
  3071   003C08  EE20 F003          	lfsr	2,3
  3072   003C0C  5003               	movf	fputc@fp^0,w,c
  3073   003C0E  26D9               	addwf	fsr2l,f,c
  3074   003C10  5004               	movf	(fputc@fp+1)^0,w,c
  3075   003C12  22DA               	addwfc	fsr2h,f,c
  3076   003C14  2ADE               	incf	postinc2,f,c
  3077   003C16  0E00               	movlw	0
  3078   003C18  22DD               	addwfc	postdec2,f,c
  3079   003C1A                     l1433:
  3080   003C1A  0012               	return		;funcret
  3081   003C1C                     __end_of_fputc:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _putch *****************
  3085 ;; Defined at:
  3086 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  c               1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  c               1    0[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_fputc
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text8
  3115   004D76                     __ptext8:
  3116                           	callstack 0
  3117   004D76                     _putch:
  3118                           	callstack 25
  3119   004D76  0012               	return		;funcret
  3120   004D78                     __end_of_putch:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _abs *****************
  3124 ;; Defined at:
  3125 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  a               2   18[COMRAM] int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2   18[COMRAM] int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;Total ram usage:        4 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_dtoa
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text9
  3154   004B0C                     __ptext9:
  3155                           	callstack 0
  3156   004B0C                     _abs:
  3157                           	callstack 25
  3158   004B0C  BE14               	btfsc	(abs@a+1)^0,7,c
  3159   004B0E  EF93  F025         	goto	u2610
  3160   004B12  5014               	movf	(abs@a+1)^0,w,c
  3161   004B14  E106               	bnz	u2611
  3162   004B16  0413               	decf	abs@a^0,w,c
  3163   004B18  B0D8               	btfsc	status,0,c
  3164   004B1A  EF91  F025         	goto	u2611
  3165   004B1E  EF93  F025         	goto	u2610
  3166   004B22                     u2611:
  3167   004B22  EFA1  F025         	goto	l1418
  3168   004B26                     u2610:
  3169   004B26  C013  F015         	movff	abs@a,??_abs
  3170   004B2A  C014  F016         	movff	abs@a+1,??_abs+1
  3171   004B2E  1E15               	comf	??_abs^0,f,c
  3172   004B30  1E16               	comf	(??_abs+1)^0,f,c
  3173   004B32  4A15               	infsnz	??_abs^0,f,c
  3174   004B34  2A16               	incf	(??_abs+1)^0,f,c
  3175   004B36  C015  F013         	movff	??_abs,?_abs
  3176   004B3A  C016  F014         	movff	??_abs+1,?_abs+1
  3177   004B3E  EFA5  F025         	goto	l1421
  3178   004B42                     l1418:
  3179   004B42  C013  F013         	movff	abs@a,?_abs
  3180   004B46  C014  F014         	movff	abs@a+1,?_abs+1
  3181   004B4A                     l1421:
  3182   004B4A  0012               	return		;funcret
  3183   004B4C                     __end_of_abs:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function ___aomod *****************
  3187 ;; Defined at:
  3188 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dividend        8    0[COMRAM] long long 
  3191 ;;  divisor         8    8[COMRAM] long long 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  sign            1   17[COMRAM] unsigned char 
  3194 ;;  counter         1   16[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  8    0[COMRAM] long long 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3204 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;Total ram usage:       18 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_dtoa
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text10
  3219   00379A                     __ptext10:
  3220                           	callstack 0
  3221   00379A                     ___aomod:
  3222                           	callstack 25
  3223   00379A  0E00               	movlw	0
  3224   00379C  6E12               	movwf	___aomod@sign^0,c
  3225   00379E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3226   0037A0  EFD6  F01B         	goto	u2530
  3227   0037A4  EFD4  F01B         	goto	u2531
  3228   0037A8                     u2531:
  3229   0037A8  EFE8  F01B         	goto	l3312
  3230   0037AC                     u2530:
  3231   0037AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3232   0037AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3233   0037B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3234   0037B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3235   0037B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3236   0037B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3237   0037B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3238   0037BA  6C01               	negf	___aomod@dividend^0,c
  3239   0037BC  0E00               	movlw	0
  3240   0037BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3241   0037C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3242   0037C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3243   0037C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3244   0037C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3245   0037C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3246   0037CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3247   0037CC  0E01               	movlw	1
  3248   0037CE  6E12               	movwf	___aomod@sign^0,c
  3249   0037D0                     l3312:
  3250   0037D0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3251   0037D2  EFEF  F01B         	goto	u2540
  3252   0037D6  EFED  F01B         	goto	u2541
  3253   0037DA                     u2541:
  3254   0037DA  EFFF  F01B         	goto	l3316
  3255   0037DE                     u2540:
  3256   0037DE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3257   0037E0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3258   0037E2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3259   0037E4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3260   0037E6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3261   0037E8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3262   0037EA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3263   0037EC  6C09               	negf	___aomod@divisor^0,c
  3264   0037EE  0E00               	movlw	0
  3265   0037F0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3266   0037F2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3267   0037F4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3268   0037F6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3269   0037F8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3270   0037FA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3271   0037FC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3272   0037FE                     l3316:
  3273   0037FE  5009               	movf	___aomod@divisor^0,w,c
  3274   003800  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3275   003802  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3276   003804  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3277   003806  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3278   003808  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3279   00380A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3280   00380C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3281   00380E  B4D8               	btfsc	status,2,c
  3282   003810  EF0C  F01C         	goto	u2551
  3283   003814  EF0E  F01C         	goto	u2550
  3284   003818                     u2551:
  3285   003818  EF56  F01C         	goto	l3332
  3286   00381C                     u2550:
  3287   00381C  0E01               	movlw	1
  3288   00381E  6E11               	movwf	___aomod@counter^0,c
  3289   003820  EF1C  F01C         	goto	l3322
  3290   003824                     l3320:
  3291   003824  90D8               	bcf	status,0,c
  3292   003826  3609               	rlcf	___aomod@divisor^0,f,c
  3293   003828  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3294   00382A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3295   00382C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3296   00382E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3297   003830  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3298   003832  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3299   003834  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3300   003836  2A11               	incf	___aomod@counter^0,f,c
  3301   003838                     l3322:
  3302   003838  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3303   00383A  EF21  F01C         	goto	u2561
  3304   00383E  EF23  F01C         	goto	u2560
  3305   003842                     u2561:
  3306   003842  EF12  F01C         	goto	l3320
  3307   003846                     u2560:
  3308   003846                     l3324:
  3309   003846  5009               	movf	___aomod@divisor^0,w,c
  3310   003848  5C01               	subwf	___aomod@dividend^0,w,c
  3311   00384A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3312   00384C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3313   00384E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3314   003850  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3315   003852  500C               	movf	(___aomod@divisor+3)^0,w,c
  3316   003854  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3317   003856  500D               	movf	(___aomod@divisor+4)^0,w,c
  3318   003858  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3319   00385A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3320   00385C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3321   00385E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3322   003860  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3323   003862  5010               	movf	(___aomod@divisor+7)^0,w,c
  3324   003864  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3325   003866  A0D8               	btfss	status,0,c
  3326   003868  EF38  F01C         	goto	u2571
  3327   00386C  EF3A  F01C         	goto	u2570
  3328   003870                     u2571:
  3329   003870  EF4A  F01C         	goto	l3328
  3330   003874                     u2570:
  3331   003874  5009               	movf	___aomod@divisor^0,w,c
  3332   003876  5E01               	subwf	___aomod@dividend^0,f,c
  3333   003878  500A               	movf	(___aomod@divisor+1)^0,w,c
  3334   00387A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3335   00387C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3336   00387E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3337   003880  500C               	movf	(___aomod@divisor+3)^0,w,c
  3338   003882  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3339   003884  500D               	movf	(___aomod@divisor+4)^0,w,c
  3340   003886  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3341   003888  500E               	movf	(___aomod@divisor+5)^0,w,c
  3342   00388A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3343   00388C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3344   00388E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3345   003890  5010               	movf	(___aomod@divisor+7)^0,w,c
  3346   003892  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3347   003894                     l3328:
  3348   003894  90D8               	bcf	status,0,c
  3349   003896  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3350   003898  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3351   00389A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3352   00389C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3353   00389E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3354   0038A0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3355   0038A2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3356   0038A4  3209               	rrcf	___aomod@divisor^0,f,c
  3357   0038A6  2E11               	decfsz	___aomod@counter^0,f,c
  3358   0038A8  EF23  F01C         	goto	l3324
  3359   0038AC                     l3332:
  3360   0038AC  5012               	movf	___aomod@sign^0,w,c
  3361   0038AE  B4D8               	btfsc	status,2,c
  3362   0038B0  EF5C  F01C         	goto	u2581
  3363   0038B4  EF5E  F01C         	goto	u2580
  3364   0038B8                     u2581:
  3365   0038B8  EF6E  F01C         	goto	l3336
  3366   0038BC                     u2580:
  3367   0038BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3368   0038BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3369   0038C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3370   0038C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3371   0038C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3372   0038C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3373   0038C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3374   0038CA  6C01               	negf	___aomod@dividend^0,c
  3375   0038CC  0E00               	movlw	0
  3376   0038CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3377   0038D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3378   0038D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3379   0038D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3380   0038D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3381   0038D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3382   0038DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3383   0038DC                     l3336:
  3384   0038DC  C001  F001         	movff	___aomod@dividend,?___aomod
  3385   0038E0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3386   0038E4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3387   0038E8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3388   0038EC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3389   0038F0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3390   0038F4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3391   0038F8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3392   0038FC  0012               	return		;funcret
  3393   0038FE                     __end_of___aomod:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function ___aodiv *****************
  3397 ;; Defined at:
  3398 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  dividend        8    0[COMRAM] long long 
  3401 ;;  divisor         8    8[COMRAM] long long 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  quotient        8   18[COMRAM] long long 
  3404 ;;  sign            1   17[COMRAM] unsigned char 
  3405 ;;  counter         1   16[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  8    0[COMRAM] long long 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3415 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;Total ram usage:       26 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_dtoa
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text11
  3430   0034A6                     __ptext11:
  3431                           	callstack 0
  3432   0034A6                     ___aodiv:
  3433                           	callstack 25
  3434   0034A6  0E00               	movlw	0
  3435   0034A8  6E12               	movwf	___aodiv@sign^0,c
  3436   0034AA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3437   0034AC  EF5C  F01A         	goto	u2460
  3438   0034B0  EF5A  F01A         	goto	u2461
  3439   0034B4                     u2461:
  3440   0034B4  EF6E  F01A         	goto	l3268
  3441   0034B8                     u2460:
  3442   0034B8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3443   0034BA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3444   0034BC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3445   0034BE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3446   0034C0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3447   0034C2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3448   0034C4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3449   0034C6  6C09               	negf	___aodiv@divisor^0,c
  3450   0034C8  0E00               	movlw	0
  3451   0034CA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3452   0034CC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3453   0034CE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3454   0034D0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3455   0034D2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3456   0034D4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3457   0034D6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3458   0034D8  0E01               	movlw	1
  3459   0034DA  6E12               	movwf	___aodiv@sign^0,c
  3460   0034DC                     l3268:
  3461   0034DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3462   0034DE  EF75  F01A         	goto	u2470
  3463   0034E2  EF73  F01A         	goto	u2471
  3464   0034E6                     u2471:
  3465   0034E6  EF87  F01A         	goto	l3274
  3466   0034EA                     u2470:
  3467   0034EA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3468   0034EC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3469   0034EE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3470   0034F0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3471   0034F2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3472   0034F4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3473   0034F6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3474   0034F8  6C01               	negf	___aodiv@dividend^0,c
  3475   0034FA  0E00               	movlw	0
  3476   0034FC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3477   0034FE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3478   003500  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3479   003502  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3480   003504  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3481   003506  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3482   003508  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3483   00350A  0E01               	movlw	1
  3484   00350C  1A12               	xorwf	___aodiv@sign^0,f,c
  3485   00350E                     l3274:
  3486   00350E  EE20  F013         	lfsr	2,___aodiv@quotient
  3487   003512  0E07               	movlw	7
  3488   003514                     u2481:
  3489   003514  6ADE               	clrf	postinc2,c
  3490   003516  06E8               	decf	wreg,f,c
  3491   003518  E2FD               	bc	u2481
  3492   00351A  5009               	movf	___aodiv@divisor^0,w,c
  3493   00351C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3494   00351E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3495   003520  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3496   003522  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3497   003524  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3498   003526  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3499   003528  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3500   00352A  B4D8               	btfsc	status,2,c
  3501   00352C  EF9A  F01A         	goto	u2491
  3502   003530  EF9C  F01A         	goto	u2490
  3503   003534                     u2491:
  3504   003534  EFEE  F01A         	goto	l3296
  3505   003538                     u2490:
  3506   003538  0E01               	movlw	1
  3507   00353A  6E11               	movwf	___aodiv@counter^0,c
  3508   00353C  EFAA  F01A         	goto	l3282
  3509   003540                     l3280:
  3510   003540  90D8               	bcf	status,0,c
  3511   003542  3609               	rlcf	___aodiv@divisor^0,f,c
  3512   003544  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3513   003546  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3514   003548  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3515   00354A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3516   00354C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3517   00354E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3518   003550  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3519   003552  2A11               	incf	___aodiv@counter^0,f,c
  3520   003554                     l3282:
  3521   003554  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3522   003556  EFAF  F01A         	goto	u2501
  3523   00355A  EFB1  F01A         	goto	u2500
  3524   00355E                     u2501:
  3525   00355E  EFA0  F01A         	goto	l3280
  3526   003562                     u2500:
  3527   003562                     l3284:
  3528   003562  90D8               	bcf	status,0,c
  3529   003564  3613               	rlcf	___aodiv@quotient^0,f,c
  3530   003566  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3531   003568  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3532   00356A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3533   00356C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3534   00356E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3535   003570  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3536   003572  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3537   003574  5009               	movf	___aodiv@divisor^0,w,c
  3538   003576  5C01               	subwf	___aodiv@dividend^0,w,c
  3539   003578  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3540   00357A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3541   00357C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3542   00357E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3543   003580  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3544   003582  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3545   003584  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3546   003586  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3547   003588  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3548   00358A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3549   00358C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3550   00358E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3551   003590  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3552   003592  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3553   003594  A0D8               	btfss	status,0,c
  3554   003596  EFCF  F01A         	goto	u2511
  3555   00359A  EFD1  F01A         	goto	u2510
  3556   00359E                     u2511:
  3557   00359E  EFE2  F01A         	goto	l3292
  3558   0035A2                     u2510:
  3559   0035A2  5009               	movf	___aodiv@divisor^0,w,c
  3560   0035A4  5E01               	subwf	___aodiv@dividend^0,f,c
  3561   0035A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3562   0035A8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3563   0035AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3564   0035AC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3565   0035AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3566   0035B0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3567   0035B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3568   0035B4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3569   0035B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3570   0035B8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3571   0035BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3572   0035BC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3573   0035BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3574   0035C0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3575   0035C2  8013               	bsf	___aodiv@quotient^0,0,c
  3576   0035C4                     l3292:
  3577   0035C4  90D8               	bcf	status,0,c
  3578   0035C6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3579   0035C8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3580   0035CA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3581   0035CC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3582   0035CE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3583   0035D0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3584   0035D2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3585   0035D4  3209               	rrcf	___aodiv@divisor^0,f,c
  3586   0035D6  2E11               	decfsz	___aodiv@counter^0,f,c
  3587   0035D8  EFB1  F01A         	goto	l3284
  3588   0035DC                     l3296:
  3589   0035DC  5012               	movf	___aodiv@sign^0,w,c
  3590   0035DE  B4D8               	btfsc	status,2,c
  3591   0035E0  EFF4  F01A         	goto	u2521
  3592   0035E4  EFF6  F01A         	goto	u2520
  3593   0035E8                     u2521:
  3594   0035E8  EF06  F01B         	goto	l3300
  3595   0035EC                     u2520:
  3596   0035EC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3597   0035EE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3598   0035F0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3599   0035F2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3600   0035F4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3601   0035F6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3602   0035F8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3603   0035FA  6C13               	negf	___aodiv@quotient^0,c
  3604   0035FC  0E00               	movlw	0
  3605   0035FE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3606   003600  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3607   003602  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3608   003604  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3609   003606  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3610   003608  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3611   00360A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3612   00360C                     l3300:
  3613   00360C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3614   003610  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3615   003614  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3616   003618  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3617   00361C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3618   003620  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3619   003624  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3620   003628  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3621   00362C  0012               	return		;funcret
  3622   00362E                     __end_of___aodiv:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _sendStringSerial4 *****************
  3626 ;; Defined at:
  3627 ;;		line 33 in file "serial.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  string          2    1[COMRAM] PTR unsigned char 
  3630 ;;		 -> main@buf(100), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 2
  3649 ;; This function calls:
  3650 ;;		_sendCharSerial4
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text12
  3657   004C00                     __ptext12:
  3658                           	callstack 0
  3659   004C00                     _sendStringSerial4:
  3660                           	callstack 28
  3661   004C00                     
  3662                           ;serial.c: 34:     while (*string!=0){
  3663   004C00  EF0B  F026         	goto	l4472
  3664   004C04                     l4468:
  3665                           
  3666                           ;serial.c: 35:         sendCharSerial4(*string++);
  3667   004C04  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3668   004C08  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3669   004C0C  50DF               	movf	indf2,w,c
  3670   004C0E  EC96  F026         	call	_sendCharSerial4
  3671   004C12  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3672   004C14  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3673   004C16                     l4472:
  3674                           
  3675                           ;serial.c: 34:     while (*string!=0){
  3676   004C16  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3677   004C1A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3678   004C1E  50DF               	movf	indf2,w,c
  3679   004C20  A4D8               	btfss	status,2,c
  3680   004C22  EF15  F026         	goto	u4261
  3681   004C26  EF17  F026         	goto	u4260
  3682   004C2A                     u4261:
  3683   004C2A  EF02  F026         	goto	l4468
  3684   004C2E                     u4260:
  3685   004C2E  0012               	return		;funcret
  3686   004C30                     __end_of_sendStringSerial4:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _sendCharSerial4 *****************
  3690 ;; Defined at:
  3691 ;;		line 26 in file "serial.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  charToSend      1    wreg     unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  charToSend      1    0[COMRAM] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;Total ram usage:        1 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_sendStringSerial4
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text13
  3720   004D2C                     __ptext13:
  3721                           	callstack 0
  3722   004D2C                     _sendCharSerial4:
  3723                           	callstack 28
  3724                           
  3725                           ;incstack = 0
  3726                           ;sendCharSerial4@charToSend stored from wreg
  3727   004D2C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3728   004D2E                     l209:
  3729   004D2E  010E               	movlb	14	; () banked
  3730   004D30  A537               	btfss	55,2,b	;volatile
  3731   004D32  EF9D  F026         	goto	u3291
  3732   004D36  EF9F  F026         	goto	u3290
  3733   004D3A                     u3291:
  3734   004D3A  EF97  F026         	goto	l209
  3735   004D3E                     u3290:
  3736   004D3E                     
  3737                           ; BSR set to: 14
  3738                           ;serial.c: 28:     TX4REG = charToSend;
  3739   004D3E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3740   004D42                     
  3741                           ; BSR set to: 14
  3742   004D42  0012               	return		;funcret
  3743   004D44                     __end_of_sendCharSerial4:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _readColours *****************
  3747 ;; Defined at:
  3748 ;;		line 105 in file "color.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  vals            2   11[COMRAM] PTR struct RGB
  3751 ;;		 -> vals(8), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 4
  3770 ;; This function calls:
  3771 ;;		_color_read_Blue
  3772 ;;		_color_read_Green
  3773 ;;		_color_read_Red
  3774 ;;		_color_read_lum
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text14
  3781   004450                     __ptext14:
  3782                           	callstack 0
  3783   004450                     _readColours:
  3784                           	callstack 26
  3785   004450                     
  3786                           ;color.c: 107:     vals ->R = color_read_Red();
  3787   004450  EC81  F024         	call	_color_read_Red	;wreg free
  3788   004454  C00C  FFD9         	movff	readColours@vals,fsr2l
  3789   004458  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3790   00445C  C005  FFDE         	movff	?_color_read_Red,postinc2
  3791   004460  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3792                           
  3793                           ;color.c: 108:     vals ->B = color_read_Blue();
  3794   004464  ECD1  F024         	call	_color_read_Blue	;wreg free
  3795   004468  EE20 F004          	lfsr	2,4
  3796   00446C  500C               	movf	readColours@vals^0,w,c
  3797   00446E  26D9               	addwf	fsr2l,f,c
  3798   004470  500D               	movf	(readColours@vals+1)^0,w,c
  3799   004472  22DA               	addwfc	fsr2h,f,c
  3800   004474  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3801   004478  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3802                           
  3803                           ;color.c: 109:     vals ->G = color_read_Green();
  3804   00447C  ECA9  F024         	call	_color_read_Green	;wreg free
  3805   004480  EE20 F002          	lfsr	2,2
  3806   004484  500C               	movf	readColours@vals^0,w,c
  3807   004486  26D9               	addwf	fsr2l,f,c
  3808   004488  500D               	movf	(readColours@vals+1)^0,w,c
  3809   00448A  22DA               	addwfc	fsr2h,f,c
  3810   00448C  C005  FFDE         	movff	?_color_read_Green,postinc2
  3811   004490  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3812                           
  3813                           ;color.c: 110:     vals ->L = color_read_lum();
  3814   004494  EC59  F024         	call	_color_read_lum	;wreg free
  3815   004498  EE20 F006          	lfsr	2,6
  3816   00449C  500C               	movf	readColours@vals^0,w,c
  3817   00449E  26D9               	addwf	fsr2l,f,c
  3818   0044A0  500D               	movf	(readColours@vals+1)^0,w,c
  3819   0044A2  22DA               	addwfc	fsr2h,f,c
  3820   0044A4  C005  FFDE         	movff	?_color_read_lum,postinc2
  3821   0044A8  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3822   0044AC  0012               	return		;funcret
  3823   0044AE                     __end_of_readColours:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _color_read_lum *****************
  3827 ;; Defined at:
  3828 ;;		line 49 in file "color.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  tmp             2    9[COMRAM] unsigned int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    4[COMRAM] unsigned int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        7 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 3
  3849 ;; This function calls:
  3850 ;;		_I2C_2_Master_Read
  3851 ;;		_I2C_2_Master_RepStart
  3852 ;;		_I2C_2_Master_Start
  3853 ;;		_I2C_2_Master_Stop
  3854 ;;		_I2C_2_Master_Write
  3855 ;; This function is called by:
  3856 ;;		_readColours
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text15
  3861   0048B2                     __ptext15:
  3862                           	callstack 0
  3863   0048B2                     _color_read_lum:
  3864                           	callstack 26
  3865   0048B2                     
  3866                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3867   0048B2  ECB2  F026         	call	_I2C_2_Master_Start	;wreg free
  3868                           
  3869                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3870   0048B6  0E52               	movlw	82
  3871   0048B8  ECA2  F026         	call	_I2C_2_Master_Write
  3872                           
  3873                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3874   0048BC  0EB4               	movlw	180
  3875   0048BE  ECA2  F026         	call	_I2C_2_Master_Write
  3876                           
  3877                           ;color.c: 55:  I2C_2_Master_RepStart();
  3878   0048C2  ECA8  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3879                           
  3880                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3881   0048C6  0E53               	movlw	83
  3882   0048C8  ECA2  F026         	call	_I2C_2_Master_Write
  3883                           
  3884                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3885   0048CC  0E01               	movlw	1
  3886   0048CE  EC65  F025         	call	_I2C_2_Master_Read
  3887   0048D2  6E07               	movwf	??_color_read_lum^0,c
  3888   0048D4  5007               	movf	??_color_read_lum^0,w,c
  3889   0048D6  6E0A               	movwf	color_read_lum@tmp^0,c
  3890   0048D8  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3891                           
  3892                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3893   0048DA  0E00               	movlw	0
  3894   0048DC  EC65  F025         	call	_I2C_2_Master_Read
  3895   0048E0  6E07               	movwf	??_color_read_lum^0,c
  3896   0048E2  5007               	movf	??_color_read_lum^0,w,c
  3897   0048E4  6E09               	movwf	(??_color_read_lum+2)^0,c
  3898   0048E6  6A08               	clrf	(??_color_read_lum+1)^0,c
  3899   0048E8  500A               	movf	color_read_lum@tmp^0,w,c
  3900   0048EA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3901   0048EC  6E0A               	movwf	color_read_lum@tmp^0,c
  3902   0048EE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3903   0048F0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3904   0048F2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3905                           
  3906                           ;color.c: 59:  I2C_2_Master_Stop();
  3907   0048F4  ECAD  F026         	call	_I2C_2_Master_Stop	;wreg free
  3908   0048F8                     
  3909                           ;color.c: 60:  return tmp;
  3910   0048F8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3911   0048FC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3912   004900  0012               	return		;funcret
  3913   004902                     __end_of_color_read_lum:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _color_read_Red *****************
  3917 ;; Defined at:
  3918 ;;		line 63 in file "color.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  tmp             2    9[COMRAM] unsigned int 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    4[COMRAM] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;Total ram usage:        7 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 3
  3939 ;; This function calls:
  3940 ;;		_I2C_2_Master_Read
  3941 ;;		_I2C_2_Master_RepStart
  3942 ;;		_I2C_2_Master_Start
  3943 ;;		_I2C_2_Master_Stop
  3944 ;;		_I2C_2_Master_Write
  3945 ;; This function is called by:
  3946 ;;		_readColours
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text16
  3951   004902                     __ptext16:
  3952                           	callstack 0
  3953   004902                     _color_read_Red:
  3954                           	callstack 26
  3955   004902                     
  3956                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3957   004902  ECB2  F026         	call	_I2C_2_Master_Start	;wreg free
  3958                           
  3959                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3960   004906  0E52               	movlw	82
  3961   004908  ECA2  F026         	call	_I2C_2_Master_Write
  3962                           
  3963                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3964   00490C  0EB6               	movlw	182
  3965   00490E  ECA2  F026         	call	_I2C_2_Master_Write
  3966                           
  3967                           ;color.c: 69:  I2C_2_Master_RepStart();
  3968   004912  ECA8  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3969                           
  3970                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3971   004916  0E53               	movlw	83
  3972   004918  ECA2  F026         	call	_I2C_2_Master_Write
  3973                           
  3974                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3975   00491C  0E01               	movlw	1
  3976   00491E  EC65  F025         	call	_I2C_2_Master_Read
  3977   004922  6E07               	movwf	??_color_read_Red^0,c
  3978   004924  5007               	movf	??_color_read_Red^0,w,c
  3979   004926  6E0A               	movwf	color_read_Red@tmp^0,c
  3980   004928  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3981                           
  3982                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3983   00492A  0E00               	movlw	0
  3984   00492C  EC65  F025         	call	_I2C_2_Master_Read
  3985   004930  6E07               	movwf	??_color_read_Red^0,c
  3986   004932  5007               	movf	??_color_read_Red^0,w,c
  3987   004934  6E09               	movwf	(??_color_read_Red+2)^0,c
  3988   004936  6A08               	clrf	(??_color_read_Red+1)^0,c
  3989   004938  500A               	movf	color_read_Red@tmp^0,w,c
  3990   00493A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3991   00493C  6E0A               	movwf	color_read_Red@tmp^0,c
  3992   00493E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3993   004940  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3994   004942  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3995                           
  3996                           ;color.c: 73:  I2C_2_Master_Stop();
  3997   004944  ECAD  F026         	call	_I2C_2_Master_Stop	;wreg free
  3998   004948                     
  3999                           ;color.c: 74:  return tmp;
  4000   004948  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4001   00494C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4002   004950  0012               	return		;funcret
  4003   004952                     __end_of_color_read_Red:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _color_read_Green *****************
  4007 ;; Defined at:
  4008 ;;		line 76 in file "color.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  tmp             2    9[COMRAM] unsigned int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    4[COMRAM] unsigned int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;Total ram usage:        7 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 3
  4029 ;; This function calls:
  4030 ;;		_I2C_2_Master_Read
  4031 ;;		_I2C_2_Master_RepStart
  4032 ;;		_I2C_2_Master_Start
  4033 ;;		_I2C_2_Master_Stop
  4034 ;;		_I2C_2_Master_Write
  4035 ;; This function is called by:
  4036 ;;		_readColours
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text17
  4041   004952                     __ptext17:
  4042                           	callstack 0
  4043   004952                     _color_read_Green:
  4044                           	callstack 26
  4045   004952                     
  4046                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4047   004952  ECB2  F026         	call	_I2C_2_Master_Start	;wreg free
  4048                           
  4049                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4050   004956  0E52               	movlw	82
  4051   004958  ECA2  F026         	call	_I2C_2_Master_Write
  4052                           
  4053                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4054   00495C  0EB8               	movlw	184
  4055   00495E  ECA2  F026         	call	_I2C_2_Master_Write
  4056                           
  4057                           ;color.c: 82:  I2C_2_Master_RepStart();
  4058   004962  ECA8  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4059                           
  4060                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4061   004966  0E53               	movlw	83
  4062   004968  ECA2  F026         	call	_I2C_2_Master_Write
  4063                           
  4064                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4065   00496C  0E01               	movlw	1
  4066   00496E  EC65  F025         	call	_I2C_2_Master_Read
  4067   004972  6E07               	movwf	??_color_read_Green^0,c
  4068   004974  5007               	movf	??_color_read_Green^0,w,c
  4069   004976  6E0A               	movwf	color_read_Green@tmp^0,c
  4070   004978  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4071                           
  4072                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4073   00497A  0E00               	movlw	0
  4074   00497C  EC65  F025         	call	_I2C_2_Master_Read
  4075   004980  6E07               	movwf	??_color_read_Green^0,c
  4076   004982  5007               	movf	??_color_read_Green^0,w,c
  4077   004984  6E09               	movwf	(??_color_read_Green+2)^0,c
  4078   004986  6A08               	clrf	(??_color_read_Green+1)^0,c
  4079   004988  500A               	movf	color_read_Green@tmp^0,w,c
  4080   00498A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4081   00498C  6E0A               	movwf	color_read_Green@tmp^0,c
  4082   00498E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4083   004990  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4084   004992  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4085                           
  4086                           ;color.c: 86:  I2C_2_Master_Stop();
  4087   004994  ECAD  F026         	call	_I2C_2_Master_Stop	;wreg free
  4088   004998                     
  4089                           ;color.c: 87:  return tmp;
  4090   004998  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4091   00499C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4092   0049A0  0012               	return		;funcret
  4093   0049A2                     __end_of_color_read_Green:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _color_read_Blue *****************
  4097 ;; Defined at:
  4098 ;;		line 90 in file "color.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  tmp             2    9[COMRAM] unsigned int 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    4[COMRAM] unsigned int 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;Total ram usage:        7 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 3
  4119 ;; This function calls:
  4120 ;;		_I2C_2_Master_Read
  4121 ;;		_I2C_2_Master_RepStart
  4122 ;;		_I2C_2_Master_Start
  4123 ;;		_I2C_2_Master_Stop
  4124 ;;		_I2C_2_Master_Write
  4125 ;; This function is called by:
  4126 ;;		_readColours
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text18
  4131   0049A2                     __ptext18:
  4132                           	callstack 0
  4133   0049A2                     _color_read_Blue:
  4134                           	callstack 26
  4135   0049A2                     
  4136                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4137   0049A2  ECB2  F026         	call	_I2C_2_Master_Start	;wreg free
  4138                           
  4139                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4140   0049A6  0E52               	movlw	82
  4141   0049A8  ECA2  F026         	call	_I2C_2_Master_Write
  4142                           
  4143                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4144   0049AC  0EBA               	movlw	186
  4145   0049AE  ECA2  F026         	call	_I2C_2_Master_Write
  4146                           
  4147                           ;color.c: 96:  I2C_2_Master_RepStart();
  4148   0049B2  ECA8  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4149                           
  4150                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4151   0049B6  0E53               	movlw	83
  4152   0049B8  ECA2  F026         	call	_I2C_2_Master_Write
  4153                           
  4154                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4155   0049BC  0E01               	movlw	1
  4156   0049BE  EC65  F025         	call	_I2C_2_Master_Read
  4157   0049C2  6E07               	movwf	??_color_read_Blue^0,c
  4158   0049C4  5007               	movf	??_color_read_Blue^0,w,c
  4159   0049C6  6E0A               	movwf	color_read_Blue@tmp^0,c
  4160   0049C8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4161                           
  4162                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4163   0049CA  0E00               	movlw	0
  4164   0049CC  EC65  F025         	call	_I2C_2_Master_Read
  4165   0049D0  6E07               	movwf	??_color_read_Blue^0,c
  4166   0049D2  5007               	movf	??_color_read_Blue^0,w,c
  4167   0049D4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4168   0049D6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4169   0049D8  500A               	movf	color_read_Blue@tmp^0,w,c
  4170   0049DA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4171   0049DC  6E0A               	movwf	color_read_Blue@tmp^0,c
  4172   0049DE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4173   0049E0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4174   0049E2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4175                           
  4176                           ;color.c: 100:  I2C_2_Master_Stop();
  4177   0049E4  ECAD  F026         	call	_I2C_2_Master_Stop	;wreg free
  4178   0049E8                     
  4179                           ;color.c: 101:  return tmp;
  4180   0049E8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4181   0049EC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4182   0049F0  0012               	return		;funcret
  4183   0049F2                     __end_of_color_read_Blue:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _I2C_2_Master_RepStart *****************
  4187 ;; Defined at:
  4188 ;;		line 33 in file "i2c.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 2
  4209 ;; This function calls:
  4210 ;;		_I2C_2_Master_Idle
  4211 ;; This function is called by:
  4212 ;;		_color_read_lum
  4213 ;;		_color_read_Red
  4214 ;;		_color_read_Green
  4215 ;;		_color_read_Blue
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text19
  4220   004D50                     __ptext19:
  4221                           	callstack 0
  4222   004D50                     _I2C_2_Master_RepStart:
  4223                           	callstack 26
  4224   004D50                     
  4225                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4226   004D50  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4227   004D54                     
  4228                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4229   004D54  010E               	movlb	14	; () banked
  4230   004D56  83DA               	bsf	218,1,b	;volatile
  4231   004D58                     
  4232                           ; BSR set to: 14
  4233   004D58  0012               	return		;funcret
  4234   004D5A                     __end_of_I2C_2_Master_RepStart:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _I2C_2_Master_Read *****************
  4238 ;; Defined at:
  4239 ;;		line 51 in file "i2c.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  ack             1    wreg     unsigned char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  ack             1    2[COMRAM] unsigned char 
  4244 ;;  tmp             1    3[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      unsigned char 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;Total ram usage:        3 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 2
  4261 ;; This function calls:
  4262 ;;		_I2C_2_Master_Idle
  4263 ;; This function is called by:
  4264 ;;		_color_read_lum
  4265 ;;		_color_read_Red
  4266 ;;		_color_read_Green
  4267 ;;		_color_read_Blue
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text20
  4272   004ACA                     __ptext20:
  4273                           	callstack 0
  4274   004ACA                     _I2C_2_Master_Read:
  4275                           	callstack 26
  4276                           
  4277                           ; BSR set to: 14
  4278                           ;incstack = 0
  4279                           ;I2C_2_Master_Read@ack stored from wreg
  4280   004ACA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4281   004ACC                     
  4282                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4283   004ACC  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4284   004AD0                     
  4285                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4286   004AD0  010E               	movlb	14	; () banked
  4287   004AD2  87DA               	bsf	218,3,b	;volatile
  4288                           
  4289                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4290   004AD4  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4291   004AD8                     
  4292                           ;i2c.c: 57:   tmp = SSP2BUF;
  4293   004AD8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4294                           
  4295                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4296   004ADC  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4297   004AE0                     
  4298                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4299   004AE0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4300   004AE2  B4D8               	btfsc	status,2,c
  4301   004AE4  EF76  F025         	goto	u2841
  4302   004AE8  EF7A  F025         	goto	u2840
  4303   004AEC                     u2841:
  4304   004AEC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4305   004AEE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4306   004AF0  EF7B  F025         	goto	u2858
  4307   004AF4                     u2840:
  4308   004AF4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4309   004AF6                     u2858:
  4310   004AF6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4311   004AF8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4312   004AFA  010E               	movlb	14	; () banked
  4313   004AFC  51DA               	movf	218,w,b	;volatile
  4314   004AFE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4315   004B00  0BDF               	andlw	-33
  4316   004B02  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4317   004B04  6FDA               	movwf	218,b	;volatile
  4318   004B06                     
  4319                           ; BSR set to: 14
  4320                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4321   004B06  89DA               	bsf	218,4,b	;volatile
  4322   004B08                     
  4323                           ; BSR set to: 14
  4324                           ;i2c.c: 61:   return tmp;
  4325   004B08  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4326   004B0A                     
  4327                           ; BSR set to: 14
  4328   004B0A  0012               	return		;funcret
  4329   004B0C                     __end_of_I2C_2_Master_Read:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _initUSART4 *****************
  4333 ;; Defined at:
  4334 ;;		line 4 in file "serial.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text21
  4363   004D0E                     __ptext21:
  4364                           	callstack 0
  4365   004D0E                     _initUSART4:
  4366                           	callstack 29
  4367   004D0E                     
  4368                           ;serial.c: 5:     RC0PPS = 0x12;
  4369   004D0E  0E12               	movlw	18
  4370   004D10  010E               	movlb	14	; () banked
  4371   004D12  6F62               	movwf	98,b	;volatile
  4372                           
  4373                           ;serial.c: 6:     RX4PPS = 0x11;
  4374   004D14  0E11               	movlw	17
  4375   004D16  6F15               	movwf	21,b	;volatile
  4376   004D18                     
  4377                           ; BSR set to: 14
  4378                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4379   004D18  97E9               	bcf	233,3,b	;volatile
  4380   004D1A                     
  4381                           ; BSR set to: 14
  4382                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4383   004D1A  95E8               	bcf	232,2,b	;volatile
  4384                           
  4385                           ;serial.c: 9:     SP4BRGL = 51;
  4386   004D1C  0E33               	movlw	51
  4387   004D1E  6FE5               	movwf	229,b	;volatile
  4388                           
  4389                           ;serial.c: 10:     SP4BRGH = 0;
  4390   004D20  0E00               	movlw	0
  4391   004D22  6FE6               	movwf	230,b	;volatile
  4392   004D24                     
  4393                           ; BSR set to: 14
  4394                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4395   004D24  89E7               	bsf	231,4,b	;volatile
  4396   004D26                     
  4397                           ; BSR set to: 14
  4398                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4399   004D26  8BE8               	bsf	232,5,b	;volatile
  4400   004D28                     
  4401                           ; BSR set to: 14
  4402                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4403   004D28  8FE7               	bsf	231,7,b	;volatile
  4404   004D2A                     
  4405                           ; BSR set to: 14
  4406   004D2A  0012               	return		;funcret
  4407   004D2C                     __end_of_initUSART4:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _initDCmotorsPWM *****************
  4411 ;; Defined at:
  4412 ;;		line 5 in file "dc_motor.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text22
  4441   004104                     __ptext22:
  4442                           	callstack 0
  4443   004104                     _initDCmotorsPWM:
  4444                           	callstack 29
  4445   004104                     
  4446                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4447   004104  0E05               	movlw	5
  4448   004106  010E               	movlb	14	; () banked
  4449   004108  6F74               	movwf	116,b	;volatile
  4450                           
  4451                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4452   00410A  0E06               	movlw	6
  4453   00410C  6F76               	movwf	118,b	;volatile
  4454                           
  4455                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4456   00410E  0E07               	movlw	7
  4457   004110  6F69               	movwf	105,b	;volatile
  4458                           
  4459                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4460   004112  0E08               	movlw	8
  4461   004114  6F88               	movwf	136,b	;volatile
  4462   004116                     
  4463                           ; BSR set to: 14
  4464                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4465   004116  9485               	bcf	133,2,c	;volatile
  4466   004118                     
  4467                           ; BSR set to: 14
  4468                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4469   004118  9885               	bcf	133,4,c	;volatile
  4470   00411A                     
  4471                           ; BSR set to: 14
  4472                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4473   00411A  9E83               	bcf	131,7,c	;volatile
  4474   00411C                     
  4475                           ; BSR set to: 14
  4476                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4477   00411C  9C87               	bcf	135,6,c	;volatile
  4478                           
  4479                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4480   00411E  50BD               	movf	189,w,c	;volatile
  4481   004120  0B8F               	andlw	-113
  4482   004122  0930               	iorlw	48
  4483   004124  6EBD               	movwf	189,c	;volatile
  4484                           
  4485                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4486   004126  0EE0               	movlw	-32
  4487   004128  16BE               	andwf	190,f,c	;volatile
  4488                           
  4489                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4490   00412A  50BF               	movf	191,w,c	;volatile
  4491   00412C  0BF0               	andlw	-16
  4492   00412E  0901               	iorlw	1
  4493   004130  6EBF               	movwf	191,c	;volatile
  4494   004132                     
  4495                           ; BSR set to: 14
  4496                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4497   004132  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4498   004136                     
  4499                           ; BSR set to: 14
  4500                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4501   004136  8EBD               	bsf	189,7,c	;volatile
  4502                           
  4503                           ;dc_motor.c: 33:     CCPR1H=0;
  4504   004138  0E00               	movlw	0
  4505   00413A  6EAA               	movwf	170,c	;volatile
  4506                           
  4507                           ;dc_motor.c: 34:     CCPR2H=0;
  4508   00413C  0E00               	movlw	0
  4509   00413E  6EA6               	movwf	166,c	;volatile
  4510                           
  4511                           ;dc_motor.c: 35:     CCPR3H=0;
  4512   004140  0E00               	movlw	0
  4513   004142  010F               	movlb	15	; () banked
  4514   004144  6F25               	movwf	37,b	;volatile
  4515                           
  4516                           ;dc_motor.c: 36:     CCPR4H=0;
  4517   004146  0E00               	movlw	0
  4518   004148  6F21               	movwf	33,b	;volatile
  4519                           
  4520                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4521   00414A  0EFC               	movlw	-4
  4522   00414C  16AD               	andwf	173,f,c	;volatile
  4523                           
  4524                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4525   00414E  0EF3               	movlw	-13
  4526   004150  16AD               	andwf	173,f,c	;volatile
  4527                           
  4528                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4529   004152  0ECF               	movlw	-49
  4530   004154  16AD               	andwf	173,f,c	;volatile
  4531                           
  4532                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4533   004156  0E3F               	movlw	-193
  4534   004158  16AD               	andwf	173,f,c	;volatile
  4535   00415A                     
  4536                           ; BSR set to: 15
  4537                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4538   00415A  88AB               	bsf	171,4,c	;volatile
  4539                           
  4540                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4541   00415C  50AB               	movf	171,w,c	;volatile
  4542   00415E  0BF0               	andlw	-16
  4543   004160  090C               	iorlw	12
  4544   004162  6EAB               	movwf	171,c	;volatile
  4545   004164                     
  4546                           ; BSR set to: 15
  4547                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4548   004164  8EAB               	bsf	171,7,c	;volatile
  4549   004166                     
  4550                           ; BSR set to: 15
  4551                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4552   004166  88A7               	bsf	167,4,c	;volatile
  4553                           
  4554                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4555   004168  50A7               	movf	167,w,c	;volatile
  4556   00416A  0BF0               	andlw	-16
  4557   00416C  090C               	iorlw	12
  4558   00416E  6EA7               	movwf	167,c	;volatile
  4559   004170                     
  4560                           ; BSR set to: 15
  4561                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4562   004170  8EA7               	bsf	167,7,c	;volatile
  4563   004172                     
  4564                           ; BSR set to: 15
  4565                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4566   004172  8926               	bsf	38,4,b	;volatile
  4567                           
  4568                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4569   004174  5126               	movf	38,w,b	;volatile
  4570   004176  0BF0               	andlw	-16
  4571   004178  090C               	iorlw	12
  4572   00417A  6F26               	movwf	38,b	;volatile
  4573   00417C                     
  4574                           ; BSR set to: 15
  4575                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4576   00417C  8F26               	bsf	38,7,b	;volatile
  4577   00417E                     
  4578                           ; BSR set to: 15
  4579                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4580   00417E  8922               	bsf	34,4,b	;volatile
  4581                           
  4582                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4583   004180  5122               	movf	34,w,b	;volatile
  4584   004182  0BF0               	andlw	-16
  4585   004184  090C               	iorlw	12
  4586   004186  6F22               	movwf	34,b	;volatile
  4587   004188                     
  4588                           ; BSR set to: 15
  4589                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4590   004188  8F22               	bsf	34,7,b	;volatile
  4591   00418A                     
  4592                           ; BSR set to: 15
  4593   00418A  0012               	return		;funcret
  4594   00418C                     __end_of_initDCmotorsPWM:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _go_Home *****************
  4598 ;; Defined at:
  4599 ;;		line 4 in file "Memory.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4602 ;;		 -> WayBack(50), 
  4603 ;;  Time_forward    2   37[COMRAM] PTR int 
  4604 ;;		 -> Time_forward(100), 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  i               2   42[COMRAM] int 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;Total ram usage:        9 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 6
  4623 ;; This function calls:
  4624 ;;		_BlueMove
  4625 ;;		_GreenMove
  4626 ;;		_LightBlueMove
  4627 ;;		_OrangeMove
  4628 ;;		_RedMove
  4629 ;;		_ReversePink
  4630 ;;		_ReverseYellow
  4631 ;;		_reverseDetect
  4632 ;;		_timed_forward
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text23
  4639   002DC8                     __ptext23:
  4640                           	callstack 0
  4641   002DC8                     _go_Home:
  4642                           	callstack 24
  4643   002DC8                     
  4644                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4645   002DC8  C0F2  F02B         	movff	_move_count,go_Home@i	;volatile
  4646   002DCC  C0F3  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  4647   002DD0                     l4564:
  4648   002DD0  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  4649   002DD2  EFEF  F016         	goto	u4300
  4650   002DD6  EFED  F016         	goto	u4301
  4651   002DDA                     u4301:
  4652   002DDA  EFF1  F016         	goto	l4568
  4653   002DDE                     u4300:
  4654   002DDE  EF39  F018         	goto	l643
  4655   002DE2                     l4568:
  4656                           
  4657                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  4658   002DE2  0EF5               	movlw	low _motorL
  4659   002DE4  6E14               	movwf	timed_forward@mL^0,c
  4660   002DE6  0E00               	movlw	high _motorL
  4661   002DE8  6E15               	movwf	(timed_forward@mL+1)^0,c
  4662   002DEA  0EBE               	movlw	low _motorR
  4663   002DEC  6E16               	movwf	timed_forward@mR^0,c
  4664   002DEE  0E01               	movlw	high _motorR
  4665   002DF0  6E17               	movwf	(timed_forward@mR+1)^0,c
  4666   002DF2  90D8               	bcf	status,0,c
  4667   002DF4  342B               	rlcf	go_Home@i^0,w,c
  4668   002DF6  6ED9               	movwf	fsr2l,c
  4669   002DF8  342C               	rlcf	(go_Home@i+1)^0,w,c
  4670   002DFA  6EDA               	movwf	fsr2h,c
  4671   002DFC  5026               	movf	go_Home@Time_forward^0,w,c
  4672   002DFE  26D9               	addwf	fsr2l,f,c
  4673   002E00  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4674   002E02  22DA               	addwfc	fsr2h,f,c
  4675   002E04  CFDE F018          	movff	postinc2,timed_forward@time
  4676   002E08  CFDD F019          	movff	postdec2,timed_forward@time+1
  4677   002E0C  EC0E  F01E         	call	_timed_forward	;wreg free
  4678   002E10                     
  4679                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  4680   002E10  502B               	movf	go_Home@i^0,w,c
  4681   002E12  2424               	addwf	go_Home@WayBack^0,w,c
  4682   002E14  6E28               	movwf	??_go_Home^0,c
  4683   002E16  502C               	movf	(go_Home@i+1)^0,w,c
  4684   002E18  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4685   002E1A  6E29               	movwf	(??_go_Home+1)^0,c
  4686   002E1C  0EFF               	movlw	255
  4687   002E1E  2428               	addwf	??_go_Home^0,w,c
  4688   002E20  6ED9               	movwf	fsr2l,c
  4689   002E22  0EFF               	movlw	255
  4690   002E24  2029               	addwfc	(??_go_Home+1)^0,w,c
  4691   002E26  6EDA               	movwf	fsr2h,c
  4692   002E28  04DE               	decf	postinc2,w,c
  4693   002E2A  A4D8               	btfss	status,2,c
  4694   002E2C  EF1A  F017         	goto	u4311
  4695   002E30  EF1C  F017         	goto	u4310
  4696   002E34                     u4311:
  4697   002E34  EF32  F017         	goto	l4574
  4698   002E38                     u4310:
  4699   002E38                     
  4700                           ;Memory.c: 22:             reverseDetect(&motorL, &motorR);
  4701   002E38  0EF5               	movlw	low _motorL
  4702   002E3A  6E1A               	movwf	reverseDetect@mL^0,c
  4703   002E3C  0E00               	movlw	high _motorL
  4704   002E3E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4705   002E40  0EBE               	movlw	low _motorR
  4706   002E42  6E1C               	movwf	reverseDetect@mR^0,c
  4707   002E44  0E01               	movlw	high _motorR
  4708   002E46  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4709   002E48  ECB1  F022         	call	_reverseDetect	;wreg free
  4710                           
  4711                           ;Memory.c: 23:             GreenMove(&motorL, &motorR);
  4712   002E4C  0EF5               	movlw	low _motorL
  4713   002E4E  6E20               	movwf	GreenMove@mL^0,c
  4714   002E50  0E00               	movlw	high _motorL
  4715   002E52  6E21               	movwf	(GreenMove@mL+1)^0,c
  4716   002E54  0EBE               	movlw	low _motorR
  4717   002E56  6E22               	movwf	GreenMove@mR^0,c
  4718   002E58  0E01               	movlw	high _motorR
  4719   002E5A  6E23               	movwf	(GreenMove@mR+1)^0,c
  4720   002E5C  ECC5  F025         	call	_GreenMove	;wreg free
  4721                           
  4722                           ;Memory.c: 24:         }
  4723   002E60  EF34  F018         	goto	l4598
  4724   002E64                     l4574:
  4725   002E64  502B               	movf	go_Home@i^0,w,c
  4726   002E66  2424               	addwf	go_Home@WayBack^0,w,c
  4727   002E68  6E28               	movwf	??_go_Home^0,c
  4728   002E6A  502C               	movf	(go_Home@i+1)^0,w,c
  4729   002E6C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4730   002E6E  6E29               	movwf	(??_go_Home+1)^0,c
  4731   002E70  0EFF               	movlw	255
  4732   002E72  2428               	addwf	??_go_Home^0,w,c
  4733   002E74  6ED9               	movwf	fsr2l,c
  4734   002E76  0EFF               	movlw	255
  4735   002E78  2029               	addwfc	(??_go_Home+1)^0,w,c
  4736   002E7A  6EDA               	movwf	fsr2h,c
  4737   002E7C  0E02               	movlw	2
  4738   002E7E  18DE               	xorwf	postinc2,w,c
  4739   002E80  A4D8               	btfss	status,2,c
  4740   002E82  EF45  F017         	goto	u4321
  4741   002E86  EF47  F017         	goto	u4320
  4742   002E8A                     u4321:
  4743   002E8A  EF5D  F017         	goto	l4578
  4744   002E8E                     u4320:
  4745   002E8E                     
  4746                           ;Memory.c: 26:             reverseDetect(&motorL, &motorR);
  4747   002E8E  0EF5               	movlw	low _motorL
  4748   002E90  6E1A               	movwf	reverseDetect@mL^0,c
  4749   002E92  0E00               	movlw	high _motorL
  4750   002E94  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4751   002E96  0EBE               	movlw	low _motorR
  4752   002E98  6E1C               	movwf	reverseDetect@mR^0,c
  4753   002E9A  0E01               	movlw	high _motorR
  4754   002E9C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4755   002E9E  ECB1  F022         	call	_reverseDetect	;wreg free
  4756                           
  4757                           ;Memory.c: 27:             LightBlueMove(&motorL, &motorR);
  4758   002EA2  0EF5               	movlw	low _motorL
  4759   002EA4  6E20               	movwf	LightBlueMove@mL^0,c
  4760   002EA6  0E00               	movlw	high _motorL
  4761   002EA8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4762   002EAA  0EBE               	movlw	low _motorR
  4763   002EAC  6E22               	movwf	LightBlueMove@mR^0,c
  4764   002EAE  0E01               	movlw	high _motorR
  4765   002EB0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4766   002EB2  ECB5  F023         	call	_LightBlueMove	;wreg free
  4767                           
  4768                           ;Memory.c: 28:         }
  4769   002EB6  EF34  F018         	goto	l4598
  4770   002EBA                     l4578:
  4771   002EBA  502B               	movf	go_Home@i^0,w,c
  4772   002EBC  2424               	addwf	go_Home@WayBack^0,w,c
  4773   002EBE  6E28               	movwf	??_go_Home^0,c
  4774   002EC0  502C               	movf	(go_Home@i+1)^0,w,c
  4775   002EC2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4776   002EC4  6E29               	movwf	(??_go_Home+1)^0,c
  4777   002EC6  0EFF               	movlw	255
  4778   002EC8  2428               	addwf	??_go_Home^0,w,c
  4779   002ECA  6ED9               	movwf	fsr2l,c
  4780   002ECC  0EFF               	movlw	255
  4781   002ECE  2029               	addwfc	(??_go_Home+1)^0,w,c
  4782   002ED0  6EDA               	movwf	fsr2h,c
  4783   002ED2  0E03               	movlw	3
  4784   002ED4  18DE               	xorwf	postinc2,w,c
  4785   002ED6  A4D8               	btfss	status,2,c
  4786   002ED8  EF70  F017         	goto	u4331
  4787   002EDC  EF72  F017         	goto	u4330
  4788   002EE0                     u4331:
  4789   002EE0  EF88  F017         	goto	l4582
  4790   002EE4                     u4330:
  4791   002EE4                     
  4792                           ;Memory.c: 30:             reverseDetect(&motorL, &motorR);
  4793   002EE4  0EF5               	movlw	low _motorL
  4794   002EE6  6E1A               	movwf	reverseDetect@mL^0,c
  4795   002EE8  0E00               	movlw	high _motorL
  4796   002EEA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4797   002EEC  0EBE               	movlw	low _motorR
  4798   002EEE  6E1C               	movwf	reverseDetect@mR^0,c
  4799   002EF0  0E01               	movlw	high _motorR
  4800   002EF2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4801   002EF4  ECB1  F022         	call	_reverseDetect	;wreg free
  4802                           
  4803                           ;Memory.c: 31:             ReverseYellow(&motorL, &motorR);
  4804   002EF8  0EF5               	movlw	low _motorL
  4805   002EFA  6E20               	movwf	ReverseYellow@mL^0,c
  4806   002EFC  0E00               	movlw	high _motorL
  4807   002EFE  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4808   002F00  0EBE               	movlw	low _motorR
  4809   002F02  6E22               	movwf	ReverseYellow@mR^0,c
  4810   002F04  0E01               	movlw	high _motorR
  4811   002F06  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4812   002F08  ECF4  F01F         	call	_ReverseYellow	;wreg free
  4813                           
  4814                           ;Memory.c: 32:         }
  4815   002F0C  EF34  F018         	goto	l4598
  4816   002F10                     l4582:
  4817   002F10  502B               	movf	go_Home@i^0,w,c
  4818   002F12  2424               	addwf	go_Home@WayBack^0,w,c
  4819   002F14  6E28               	movwf	??_go_Home^0,c
  4820   002F16  502C               	movf	(go_Home@i+1)^0,w,c
  4821   002F18  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4822   002F1A  6E29               	movwf	(??_go_Home+1)^0,c
  4823   002F1C  0EFF               	movlw	255
  4824   002F1E  2428               	addwf	??_go_Home^0,w,c
  4825   002F20  6ED9               	movwf	fsr2l,c
  4826   002F22  0EFF               	movlw	255
  4827   002F24  2029               	addwfc	(??_go_Home+1)^0,w,c
  4828   002F26  6EDA               	movwf	fsr2h,c
  4829   002F28  0E04               	movlw	4
  4830   002F2A  18DE               	xorwf	postinc2,w,c
  4831   002F2C  A4D8               	btfss	status,2,c
  4832   002F2E  EF9B  F017         	goto	u4341
  4833   002F32  EF9D  F017         	goto	u4340
  4834   002F36                     u4341:
  4835   002F36  EFB3  F017         	goto	l4586
  4836   002F3A                     u4340:
  4837   002F3A                     
  4838                           ;Memory.c: 34:             reverseDetect(&motorL, &motorR);
  4839   002F3A  0EF5               	movlw	low _motorL
  4840   002F3C  6E1A               	movwf	reverseDetect@mL^0,c
  4841   002F3E  0E00               	movlw	high _motorL
  4842   002F40  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4843   002F42  0EBE               	movlw	low _motorR
  4844   002F44  6E1C               	movwf	reverseDetect@mR^0,c
  4845   002F46  0E01               	movlw	high _motorR
  4846   002F48  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4847   002F4A  ECB1  F022         	call	_reverseDetect	;wreg free
  4848                           
  4849                           ;Memory.c: 35:             BlueMove(&motorL, &motorR);
  4850   002F4E  0EF5               	movlw	low _motorL
  4851   002F50  6E20               	movwf	BlueMove@mL^0,c
  4852   002F52  0E00               	movlw	high _motorL
  4853   002F54  6E21               	movwf	(BlueMove@mL+1)^0,c
  4854   002F56  0EBE               	movlw	low _motorR
  4855   002F58  6E22               	movwf	BlueMove@mR^0,c
  4856   002F5A  0E01               	movlw	high _motorR
  4857   002F5C  6E23               	movwf	(BlueMove@mR+1)^0,c
  4858   002F5E  ECF5  F021         	call	_BlueMove	;wreg free
  4859                           
  4860                           ;Memory.c: 36:         }
  4861   002F62  EF34  F018         	goto	l4598
  4862   002F66                     l4586:
  4863   002F66  502B               	movf	go_Home@i^0,w,c
  4864   002F68  2424               	addwf	go_Home@WayBack^0,w,c
  4865   002F6A  6E28               	movwf	??_go_Home^0,c
  4866   002F6C  502C               	movf	(go_Home@i+1)^0,w,c
  4867   002F6E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4868   002F70  6E29               	movwf	(??_go_Home+1)^0,c
  4869   002F72  0EFF               	movlw	255
  4870   002F74  2428               	addwf	??_go_Home^0,w,c
  4871   002F76  6ED9               	movwf	fsr2l,c
  4872   002F78  0EFF               	movlw	255
  4873   002F7A  2029               	addwfc	(??_go_Home+1)^0,w,c
  4874   002F7C  6EDA               	movwf	fsr2h,c
  4875   002F7E  0E05               	movlw	5
  4876   002F80  18DE               	xorwf	postinc2,w,c
  4877   002F82  A4D8               	btfss	status,2,c
  4878   002F84  EFC6  F017         	goto	u4351
  4879   002F88  EFC8  F017         	goto	u4350
  4880   002F8C                     u4351:
  4881   002F8C  EFDE  F017         	goto	l4590
  4882   002F90                     u4350:
  4883   002F90                     
  4884                           ;Memory.c: 38:             reverseDetect(&motorL, &motorR);
  4885   002F90  0EF5               	movlw	low _motorL
  4886   002F92  6E1A               	movwf	reverseDetect@mL^0,c
  4887   002F94  0E00               	movlw	high _motorL
  4888   002F96  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4889   002F98  0EBE               	movlw	low _motorR
  4890   002F9A  6E1C               	movwf	reverseDetect@mR^0,c
  4891   002F9C  0E01               	movlw	high _motorR
  4892   002F9E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4893   002FA0  ECB1  F022         	call	_reverseDetect	;wreg free
  4894                           
  4895                           ;Memory.c: 39:             RedMove(&motorL, &motorR);
  4896   002FA4  0EF5               	movlw	low _motorL
  4897   002FA6  6E20               	movwf	RedMove@mL^0,c
  4898   002FA8  0E00               	movlw	high _motorL
  4899   002FAA  6E21               	movwf	(RedMove@mL+1)^0,c
  4900   002FAC  0EBE               	movlw	low _motorR
  4901   002FAE  6E22               	movwf	RedMove@mR^0,c
  4902   002FB0  0E01               	movlw	high _motorR
  4903   002FB2  6E23               	movwf	(RedMove@mR+1)^0,c
  4904   002FB4  ECA6  F025         	call	_RedMove	;wreg free
  4905                           
  4906                           ;Memory.c: 40:         }
  4907   002FB8  EF34  F018         	goto	l4598
  4908   002FBC                     l4590:
  4909   002FBC  502B               	movf	go_Home@i^0,w,c
  4910   002FBE  2424               	addwf	go_Home@WayBack^0,w,c
  4911   002FC0  6E28               	movwf	??_go_Home^0,c
  4912   002FC2  502C               	movf	(go_Home@i+1)^0,w,c
  4913   002FC4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4914   002FC6  6E29               	movwf	(??_go_Home+1)^0,c
  4915   002FC8  0EFF               	movlw	255
  4916   002FCA  2428               	addwf	??_go_Home^0,w,c
  4917   002FCC  6ED9               	movwf	fsr2l,c
  4918   002FCE  0EFF               	movlw	255
  4919   002FD0  2029               	addwfc	(??_go_Home+1)^0,w,c
  4920   002FD2  6EDA               	movwf	fsr2h,c
  4921   002FD4  0E06               	movlw	6
  4922   002FD6  18DE               	xorwf	postinc2,w,c
  4923   002FD8  A4D8               	btfss	status,2,c
  4924   002FDA  EFF1  F017         	goto	u4361
  4925   002FDE  EFF3  F017         	goto	u4360
  4926   002FE2                     u4361:
  4927   002FE2  EF09  F018         	goto	l4594
  4928   002FE6                     u4360:
  4929   002FE6                     
  4930                           ;Memory.c: 42:             reverseDetect(&motorL, &motorR);
  4931   002FE6  0EF5               	movlw	low _motorL
  4932   002FE8  6E1A               	movwf	reverseDetect@mL^0,c
  4933   002FEA  0E00               	movlw	high _motorL
  4934   002FEC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4935   002FEE  0EBE               	movlw	low _motorR
  4936   002FF0  6E1C               	movwf	reverseDetect@mR^0,c
  4937   002FF2  0E01               	movlw	high _motorR
  4938   002FF4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4939   002FF6  ECB1  F022         	call	_reverseDetect	;wreg free
  4940                           
  4941                           ;Memory.c: 43:             OrangeMove(&motorL, &motorR);
  4942   002FFA  0EF5               	movlw	low _motorL
  4943   002FFC  6E20               	movwf	OrangeMove@mL^0,c
  4944   002FFE  0E00               	movlw	high _motorL
  4945   003000  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4946   003002  0EBE               	movlw	low _motorR
  4947   003004  6E22               	movwf	OrangeMove@mR^0,c
  4948   003006  0E01               	movlw	high _motorR
  4949   003008  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4950   00300A  EC8C  F023         	call	_OrangeMove	;wreg free
  4951                           
  4952                           ;Memory.c: 44:         }
  4953   00300E  EF34  F018         	goto	l4598
  4954   003012                     l4594:
  4955   003012  502B               	movf	go_Home@i^0,w,c
  4956   003014  2424               	addwf	go_Home@WayBack^0,w,c
  4957   003016  6E28               	movwf	??_go_Home^0,c
  4958   003018  502C               	movf	(go_Home@i+1)^0,w,c
  4959   00301A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4960   00301C  6E29               	movwf	(??_go_Home+1)^0,c
  4961   00301E  0EFF               	movlw	255
  4962   003020  2428               	addwf	??_go_Home^0,w,c
  4963   003022  6ED9               	movwf	fsr2l,c
  4964   003024  0EFF               	movlw	255
  4965   003026  2029               	addwfc	(??_go_Home+1)^0,w,c
  4966   003028  6EDA               	movwf	fsr2h,c
  4967   00302A  0E07               	movlw	7
  4968   00302C  18DE               	xorwf	postinc2,w,c
  4969   00302E  A4D8               	btfss	status,2,c
  4970   003030  EF1C  F018         	goto	u4371
  4971   003034  EF1E  F018         	goto	u4370
  4972   003038                     u4371:
  4973   003038  EF34  F018         	goto	l637
  4974   00303C                     u4370:
  4975   00303C                     
  4976                           ;Memory.c: 46:             reverseDetect(&motorL, &motorR);
  4977   00303C  0EF5               	movlw	low _motorL
  4978   00303E  6E1A               	movwf	reverseDetect@mL^0,c
  4979   003040  0E00               	movlw	high _motorL
  4980   003042  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4981   003044  0EBE               	movlw	low _motorR
  4982   003046  6E1C               	movwf	reverseDetect@mR^0,c
  4983   003048  0E01               	movlw	high _motorR
  4984   00304A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4985   00304C  ECB1  F022         	call	_reverseDetect	;wreg free
  4986                           
  4987                           ;Memory.c: 47:             ReversePink(&motorL, &motorR);
  4988   003050  0EF5               	movlw	low _motorL
  4989   003052  6E20               	movwf	ReversePink@mL^0,c
  4990   003054  0E00               	movlw	high _motorL
  4991   003056  6E21               	movwf	(ReversePink@mL+1)^0,c
  4992   003058  0EBE               	movlw	low _motorR
  4993   00305A  6E22               	movwf	ReversePink@mR^0,c
  4994   00305C  0E01               	movlw	high _motorR
  4995   00305E  6E23               	movwf	(ReversePink@mR+1)^0,c
  4996   003060  EC3B  F020         	call	_ReversePink	;wreg free
  4997   003064  EF34  F018         	goto	l4598
  4998   003068                     l637:
  4999   003068                     l4598:
  5000                           
  5001                           ;Memory.c: 51:   }
  5002   003068  062B               	decf	go_Home@i^0,f,c
  5003   00306A  A0D8               	btfss	status,0,c
  5004   00306C  062C               	decf	(go_Home@i+1)^0,f,c
  5005   00306E  EFE8  F016         	goto	l4564
  5006   003072                     l643:
  5007   003072  0012               	return		;funcret
  5008   003074                     __end_of_go_Home:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _timed_forward *****************
  5012 ;; Defined at:
  5013 ;;		line 164 in file "dc_motor.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5016 ;;		 -> motorL(9), 
  5017 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5018 ;;		 -> motorR(9), 
  5019 ;;  time            2   23[COMRAM] int 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:        8 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 3
  5038 ;; This function calls:
  5039 ;;		_delayed_ms
  5040 ;;		_setMotorPWM
  5041 ;; This function is called by:
  5042 ;;		_go_Home
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text24
  5047   003C1C                     __ptext24:
  5048                           	callstack 0
  5049   003C1C                     _timed_forward:
  5050                           	callstack 26
  5051   003C1C                     
  5052                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  5053   003C1C  EE20 F001          	lfsr	2,1
  5054   003C20  5014               	movf	timed_forward@mL^0,w,c
  5055   003C22  26D9               	addwf	fsr2l,f,c
  5056   003C24  5015               	movf	(timed_forward@mL+1)^0,w,c
  5057   003C26  22DA               	addwfc	fsr2h,f,c
  5058   003C28  0E01               	movlw	1
  5059   003C2A  6EDF               	movwf	indf2,c
  5060                           
  5061                           ;dc_motor.c: 168:     mR->direction =1;
  5062   003C2C  EE20 F001          	lfsr	2,1
  5063   003C30  5016               	movf	timed_forward@mR^0,w,c
  5064   003C32  26D9               	addwf	fsr2l,f,c
  5065   003C34  5017               	movf	(timed_forward@mR+1)^0,w,c
  5066   003C36  22DA               	addwfc	fsr2h,f,c
  5067   003C38  0E01               	movlw	1
  5068   003C3A  6EDF               	movwf	indf2,c
  5069                           
  5070                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  5071   003C3C  EF44  F01E         	goto	l3838
  5072   003C40                     l3830:
  5073                           
  5074                           ;dc_motor.c: 171:         mL->power+=10;
  5075   003C40  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5076   003C44  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5077   003C48  0E0A               	movlw	10
  5078   003C4A  26DF               	addwf	indf2,f,c
  5079                           
  5080                           ;dc_motor.c: 172:         mR->power+=10;
  5081   003C4C  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5082   003C50  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5083   003C54  0E0A               	movlw	10
  5084   003C56  26DF               	addwf	indf2,f,c
  5085   003C58                     
  5086                           ;dc_motor.c: 174:         setMotorPWM(mL);
  5087   003C58  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5088   003C5C  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5089   003C60  EC17  F01B         	call	_setMotorPWM	;wreg free
  5090   003C64                     
  5091                           ;dc_motor.c: 175:         setMotorPWM(mR);
  5092   003C64  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5093   003C68  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5094   003C6C  EC17  F01B         	call	_setMotorPWM	;wreg free
  5095   003C70                     
  5096                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5097   003C70  0E02               	movlw	2
  5098   003C72  6E1B               	movwf	(??_timed_forward+1)^0,c
  5099   003C74  0EA0               	movlw	160
  5100   003C76  6E1A               	movwf	??_timed_forward^0,c
  5101   003C78  0E92               	movlw	146
  5102   003C7A                     u4737:
  5103   003C7A  2EE8               	decfsz	wreg,f,c
  5104   003C7C  D7FE               	bra	u4737
  5105   003C7E  2E1A               	decfsz	??_timed_forward^0,f,c
  5106   003C80  D7FC               	bra	u4737
  5107   003C82  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5108   003C84  D7FA               	bra	u4737
  5109   003C86  D000               	nop2	
  5110   003C88                     l3838:
  5111   003C88  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5112   003C8C  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5113   003C90  0E1E               	movlw	30
  5114   003C92  60DF               	cpfslt	indf2,c
  5115   003C94  EF4E  F01E         	goto	u3301
  5116   003C98  EF50  F01E         	goto	u3300
  5117   003C9C                     u3301:
  5118   003C9C  EF5C  F01E         	goto	l3842
  5119   003CA0                     u3300:
  5120   003CA0  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5121   003CA4  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5122   003CA8  0E1D               	movlw	29
  5123   003CAA  64DF               	cpfsgt	indf2,c
  5124   003CAC  EF5A  F01E         	goto	u3311
  5125   003CB0  EF5C  F01E         	goto	u3310
  5126   003CB4                     u3311:
  5127   003CB4  EF20  F01E         	goto	l3830
  5128   003CB8                     u3310:
  5129   003CB8                     l3842:
  5130                           
  5131                           ;dc_motor.c: 180:     delayed_ms(time);
  5132   003CB8  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5133   003CBC  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5134   003CC0  ECE4  F025         	call	_delayed_ms	;wreg free
  5135   003CC4  0012               	return		;funcret
  5136   003CC6                     __end_of_timed_forward:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _delayed_ms *****************
  5140 ;; Defined at:
  5141 ;;		line 39 in file "timers.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  time            2    0[COMRAM] int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  i               2    3[COMRAM] unsigned int 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;Total ram usage:        5 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_timed_forward
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text25
  5170   004BC8                     __ptext25:
  5171                           	callstack 0
  5172   004BC8                     _delayed_ms:
  5173                           	callstack 27
  5174   004BC8                     
  5175                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5176   004BC8  0E00               	movlw	0
  5177   004BCA  6E05               	movwf	(delayed_ms@i+1)^0,c
  5178   004BCC  0E00               	movlw	0
  5179   004BCE  6E04               	movwf	delayed_ms@i^0,c
  5180   004BD0  EFF4  F025         	goto	l672
  5181   004BD4                     l3516:
  5182                           
  5183                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5184   004BD4  0E15               	movlw	21
  5185   004BD6  6E03               	movwf	??_delayed_ms^0,c
  5186   004BD8  0EC6               	movlw	198
  5187   004BDA                     u4747:
  5188   004BDA  2EE8               	decfsz	wreg,f,c
  5189   004BDC  D7FE               	bra	u4747
  5190   004BDE  2E03               	decfsz	??_delayed_ms^0,f,c
  5191   004BE0  D7FC               	bra	u4747
  5192   004BE2  D000               	nop2	
  5193   004BE4                     
  5194                           ;timers.c: 42:     }
  5195   004BE4  4A04               	infsnz	delayed_ms@i^0,f,c
  5196   004BE6  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5197   004BE8                     l672:
  5198   004BE8  5001               	movf	delayed_ms@time^0,w,c
  5199   004BEA  5C04               	subwf	delayed_ms@i^0,w,c
  5200   004BEC  5002               	movf	(delayed_ms@time+1)^0,w,c
  5201   004BEE  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5202   004BF0  A0D8               	btfss	status,0,c
  5203   004BF2  EFFD  F025         	goto	u2861
  5204   004BF6  EFFF  F025         	goto	u2860
  5205   004BFA                     u2861:
  5206   004BFA  EFEA  F025         	goto	l3516
  5207   004BFE                     u2860:
  5208   004BFE  0012               	return		;funcret
  5209   004C00                     __end_of_delayed_ms:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _ReverseYellow *****************
  5213 ;; Defined at:
  5214 ;;		line 324 in file "dc_motor.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5217 ;;		 -> motorL(9), 
  5218 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5219 ;;		 -> motorR(9), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;Total ram usage:        4 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 5
  5238 ;; This function calls:
  5239 ;;		_ForwardOneBlock
  5240 ;;		_turnRight45
  5241 ;; This function is called by:
  5242 ;;		_go_Home
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text26
  5247   003FE8                     __ptext26:
  5248                           	callstack 0
  5249   003FE8                     _ReverseYellow:
  5250                           	callstack 24
  5251   003FE8                     
  5252                           ;dc_motor.c: 325:     turnRight45(&motorL, &motorR);
  5253   003FE8  0EF5               	movlw	low _motorL
  5254   003FEA  6E1A               	movwf	turnRight45@mL^0,c
  5255   003FEC  0E00               	movlw	high _motorL
  5256   003FEE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5257   003FF0  0EBE               	movlw	low _motorR
  5258   003FF2  6E1C               	movwf	turnRight45@mR^0,c
  5259   003FF4  0E01               	movlw	high _motorR
  5260   003FF6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5261   003FF8  EC0B  F023         	call	_turnRight45	;wreg free
  5262                           
  5263                           ;dc_motor.c: 326:     turnRight45(&motorL, &motorR);
  5264   003FFC  0EF5               	movlw	low _motorL
  5265   003FFE  6E1A               	movwf	turnRight45@mL^0,c
  5266   004000  0E00               	movlw	high _motorL
  5267   004002  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5268   004004  0EBE               	movlw	low _motorR
  5269   004006  6E1C               	movwf	turnRight45@mR^0,c
  5270   004008  0E01               	movlw	high _motorR
  5271   00400A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5272   00400C  EC0B  F023         	call	_turnRight45	;wreg free
  5273                           
  5274                           ;dc_motor.c: 327:     ForwardOneBlock(&motorL, &motorR);
  5275   004010  0EF5               	movlw	low _motorL
  5276   004012  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5277   004014  0E00               	movlw	high _motorL
  5278   004016  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5279   004018  0EBE               	movlw	low _motorR
  5280   00401A  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5281   00401C  0E01               	movlw	high _motorR
  5282   00401E  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5283   004020  EC57  F022         	call	_ForwardOneBlock	;wreg free
  5284                           
  5285                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
  5286   004024  0EF5               	movlw	low _motorL
  5287   004026  6E1A               	movwf	turnRight45@mL^0,c
  5288   004028  0E00               	movlw	high _motorL
  5289   00402A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5290   00402C  0EBE               	movlw	low _motorR
  5291   00402E  6E1C               	movwf	turnRight45@mR^0,c
  5292   004030  0E01               	movlw	high _motorR
  5293   004032  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5294   004034  EC0B  F023         	call	_turnRight45	;wreg free
  5295                           
  5296                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
  5297   004038  0EF5               	movlw	low _motorL
  5298   00403A  6E1A               	movwf	turnRight45@mL^0,c
  5299   00403C  0E00               	movlw	high _motorL
  5300   00403E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5301   004040  0EBE               	movlw	low _motorR
  5302   004042  6E1C               	movwf	turnRight45@mR^0,c
  5303   004044  0E01               	movlw	high _motorR
  5304   004046  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5305   004048  EC0B  F023         	call	_turnRight45	;wreg free
  5306                           
  5307                           ;dc_motor.c: 330:     turnRight45(&motorL, &motorR);
  5308   00404C  0EF5               	movlw	low _motorL
  5309   00404E  6E1A               	movwf	turnRight45@mL^0,c
  5310   004050  0E00               	movlw	high _motorL
  5311   004052  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5312   004054  0EBE               	movlw	low _motorR
  5313   004056  6E1C               	movwf	turnRight45@mR^0,c
  5314   004058  0E01               	movlw	high _motorR
  5315   00405A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5316   00405C  EC0B  F023         	call	_turnRight45	;wreg free
  5317                           
  5318                           ;dc_motor.c: 331:     turnRight45(&motorL, &motorR);
  5319   004060  0EF5               	movlw	low _motorL
  5320   004062  6E1A               	movwf	turnRight45@mL^0,c
  5321   004064  0E00               	movlw	high _motorL
  5322   004066  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5323   004068  0EBE               	movlw	low _motorR
  5324   00406A  6E1C               	movwf	turnRight45@mR^0,c
  5325   00406C  0E01               	movlw	high _motorR
  5326   00406E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5327   004070  EC0B  F023         	call	_turnRight45	;wreg free
  5328   004074  0012               	return		;funcret
  5329   004076                     __end_of_ReverseYellow:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _ReversePink *****************
  5333 ;; Defined at:
  5334 ;;		line 334 in file "dc_motor.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5337 ;;		 -> motorL(9), 
  5338 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5339 ;;		 -> motorR(9), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;Total ram usage:        4 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 5
  5358 ;; This function calls:
  5359 ;;		_ForwardOneBlock
  5360 ;;		_turnLeft45
  5361 ;; This function is called by:
  5362 ;;		_go_Home
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text27
  5367   004076                     __ptext27:
  5368                           	callstack 0
  5369   004076                     _ReversePink:
  5370                           	callstack 24
  5371   004076                     
  5372                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5373   004076  0EF5               	movlw	low _motorL
  5374   004078  6E1A               	movwf	turnLeft45@mL^0,c
  5375   00407A  0E00               	movlw	high _motorL
  5376   00407C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5377   00407E  0EBE               	movlw	low _motorR
  5378   004080  6E1C               	movwf	turnLeft45@mR^0,c
  5379   004082  0E01               	movlw	high _motorR
  5380   004084  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5381   004086  EC37  F023         	call	_turnLeft45	;wreg free
  5382                           
  5383                           ;dc_motor.c: 336:     turnLeft45(&motorL, &motorR);
  5384   00408A  0EF5               	movlw	low _motorL
  5385   00408C  6E1A               	movwf	turnLeft45@mL^0,c
  5386   00408E  0E00               	movlw	high _motorL
  5387   004090  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5388   004092  0EBE               	movlw	low _motorR
  5389   004094  6E1C               	movwf	turnLeft45@mR^0,c
  5390   004096  0E01               	movlw	high _motorR
  5391   004098  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5392   00409A  EC37  F023         	call	_turnLeft45	;wreg free
  5393                           
  5394                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  5395   00409E  0EF5               	movlw	low _motorL
  5396   0040A0  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5397   0040A2  0E00               	movlw	high _motorL
  5398   0040A4  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5399   0040A6  0EBE               	movlw	low _motorR
  5400   0040A8  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5401   0040AA  0E01               	movlw	high _motorR
  5402   0040AC  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5403   0040AE  EC57  F022         	call	_ForwardOneBlock	;wreg free
  5404                           
  5405                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
  5406   0040B2  0EF5               	movlw	low _motorL
  5407   0040B4  6E1A               	movwf	turnLeft45@mL^0,c
  5408   0040B6  0E00               	movlw	high _motorL
  5409   0040B8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5410   0040BA  0EBE               	movlw	low _motorR
  5411   0040BC  6E1C               	movwf	turnLeft45@mR^0,c
  5412   0040BE  0E01               	movlw	high _motorR
  5413   0040C0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5414   0040C2  EC37  F023         	call	_turnLeft45	;wreg free
  5415                           
  5416                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
  5417   0040C6  0EF5               	movlw	low _motorL
  5418   0040C8  6E1A               	movwf	turnLeft45@mL^0,c
  5419   0040CA  0E00               	movlw	high _motorL
  5420   0040CC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5421   0040CE  0EBE               	movlw	low _motorR
  5422   0040D0  6E1C               	movwf	turnLeft45@mR^0,c
  5423   0040D2  0E01               	movlw	high _motorR
  5424   0040D4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5425   0040D6  EC37  F023         	call	_turnLeft45	;wreg free
  5426                           
  5427                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
  5428   0040DA  0EF5               	movlw	low _motorL
  5429   0040DC  6E1A               	movwf	turnLeft45@mL^0,c
  5430   0040DE  0E00               	movlw	high _motorL
  5431   0040E0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5432   0040E2  0EBE               	movlw	low _motorR
  5433   0040E4  6E1C               	movwf	turnLeft45@mR^0,c
  5434   0040E6  0E01               	movlw	high _motorR
  5435   0040E8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5436   0040EA  EC37  F023         	call	_turnLeft45	;wreg free
  5437                           
  5438                           ;dc_motor.c: 341:     turnLeft45(&motorL, &motorR);
  5439   0040EE  0EF5               	movlw	low _motorL
  5440   0040F0  6E1A               	movwf	turnLeft45@mL^0,c
  5441   0040F2  0E00               	movlw	high _motorL
  5442   0040F4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5443   0040F6  0EBE               	movlw	low _motorR
  5444   0040F8  6E1C               	movwf	turnLeft45@mR^0,c
  5445   0040FA  0E01               	movlw	high _motorR
  5446   0040FC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5447   0040FE  EC37  F023         	call	_turnLeft45	;wreg free
  5448   004102  0012               	return		;funcret
  5449   004104                     __end_of_ReversePink:
  5450                           	callstack 0
  5451                           
  5452 ;; *************** function _ForwardOneBlock *****************
  5453 ;; Defined at:
  5454 ;;		line 228 in file "dc_motor.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5457 ;;		 -> motorL(9), 
  5458 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5459 ;;		 -> motorR(9), 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;Total ram usage:        6 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 4
  5478 ;; This function calls:
  5479 ;;		_fullSpeedAhead
  5480 ;;		_stop
  5481 ;; This function is called by:
  5482 ;;		_ReverseYellow
  5483 ;;		_ReversePink
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text28
  5488   0044AE                     __ptext28:
  5489                           	callstack 0
  5490   0044AE                     _ForwardOneBlock:
  5491                           	callstack 24
  5492   0044AE                     
  5493                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  5494   0044AE  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5495   0044B2  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5496   0044B6  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5497   0044BA  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5498   0044BE  ECA5  F01F         	call	_fullSpeedAhead	;wreg free
  5499   0044C2                     
  5500                           ;dc_motor.c: 230:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5501   0044C2  0EA3               	movlw	163
  5502   0044C4  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5503   0044C6  0E57               	movlw	87
  5504   0044C8  6E1E               	movwf	??_ForwardOneBlock^0,c
  5505   0044CA  0E02               	movlw	2
  5506   0044CC                     u4757:
  5507   0044CC  2EE8               	decfsz	wreg,f,c
  5508   0044CE  D7FE               	bra	u4757
  5509   0044D0  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5510   0044D2  D7FC               	bra	u4757
  5511   0044D4  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5512   0044D6  D7FA               	bra	u4757
  5513   0044D8  D000               	nop2	
  5514   0044DA                     
  5515                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  5516   0044DA  0EF5               	movlw	low _motorL
  5517   0044DC  6E14               	movwf	stop@mL^0,c
  5518   0044DE  0E00               	movlw	high _motorL
  5519   0044E0  6E15               	movwf	(stop@mL+1)^0,c
  5520   0044E2  0EBE               	movlw	low _motorR
  5521   0044E4  6E16               	movwf	stop@mR^0,c
  5522   0044E6  0E01               	movlw	high _motorR
  5523   0044E8  6E17               	movwf	(stop@mR+1)^0,c
  5524   0044EA  EC07  F021         	call	_stop	;wreg free
  5525                           
  5526                           ;dc_motor.c: 232:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5527   0044EE  0E52               	movlw	82
  5528   0044F0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5529   0044F2  0E2B               	movlw	43
  5530   0044F4  6E1E               	movwf	??_ForwardOneBlock^0,c
  5531   0044F6  0E00               	movlw	0
  5532   0044F8                     u4767:
  5533   0044F8  2EE8               	decfsz	wreg,f,c
  5534   0044FA  D7FE               	bra	u4767
  5535   0044FC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5536   0044FE  D7FC               	bra	u4767
  5537   004500  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5538   004502  D7FA               	bra	u4767
  5539   004504  D000               	nop2	
  5540   004506  0012               	return		;funcret
  5541   004508                     __end_of_ForwardOneBlock:
  5542                           	callstack 0
  5543                           
  5544 ;; *************** function _RedMove *****************
  5545 ;; Defined at:
  5546 ;;		line 252 in file "dc_motor.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5549 ;;		 -> motorL(9), 
  5550 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5551 ;;		 -> motorR(9), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;Total ram usage:        4 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 5
  5570 ;; This function calls:
  5571 ;;		_reverseDetect
  5572 ;;		_turnRight45
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;;		_go_Home
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text29
  5580   004B4C                     __ptext29:
  5581                           	callstack 0
  5582   004B4C                     _RedMove:
  5583                           	callstack 24
  5584   004B4C                     
  5585                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  5586   004B4C  0EF5               	movlw	low _motorL
  5587   004B4E  6E1A               	movwf	reverseDetect@mL^0,c
  5588   004B50  0E00               	movlw	high _motorL
  5589   004B52  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5590   004B54  0EBE               	movlw	low _motorR
  5591   004B56  6E1C               	movwf	reverseDetect@mR^0,c
  5592   004B58  0E01               	movlw	high _motorR
  5593   004B5A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5594   004B5C  ECB1  F022         	call	_reverseDetect	;wreg free
  5595                           
  5596                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  5597   004B60  0EF5               	movlw	low _motorL
  5598   004B62  6E1A               	movwf	turnRight45@mL^0,c
  5599   004B64  0E00               	movlw	high _motorL
  5600   004B66  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5601   004B68  0EBE               	movlw	low _motorR
  5602   004B6A  6E1C               	movwf	turnRight45@mR^0,c
  5603   004B6C  0E01               	movlw	high _motorR
  5604   004B6E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5605   004B70  EC0B  F023         	call	_turnRight45	;wreg free
  5606                           
  5607                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  5608   004B74  0EF5               	movlw	low _motorL
  5609   004B76  6E1A               	movwf	turnRight45@mL^0,c
  5610   004B78  0E00               	movlw	high _motorL
  5611   004B7A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5612   004B7C  0EBE               	movlw	low _motorR
  5613   004B7E  6E1C               	movwf	turnRight45@mR^0,c
  5614   004B80  0E01               	movlw	high _motorR
  5615   004B82  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5616   004B84  EC0B  F023         	call	_turnRight45	;wreg free
  5617   004B88  0012               	return		;funcret
  5618   004B8A                     __end_of_RedMove:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _OrangeMove *****************
  5622 ;; Defined at:
  5623 ;;		line 298 in file "dc_motor.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5626 ;;		 -> motorL(9), 
  5627 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5628 ;;		 -> motorR(9), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;Total ram usage:        4 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 5
  5647 ;; This function calls:
  5648 ;;		_reverseDetect
  5649 ;;		_turnRight45
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;;		_go_Home
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text30
  5657   004718                     __ptext30:
  5658                           	callstack 0
  5659   004718                     _OrangeMove:
  5660                           	callstack 24
  5661   004718                     
  5662                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  5663   004718  0EF5               	movlw	low _motorL
  5664   00471A  6E1A               	movwf	reverseDetect@mL^0,c
  5665   00471C  0E00               	movlw	high _motorL
  5666   00471E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5667   004720  0EBE               	movlw	low _motorR
  5668   004722  6E1C               	movwf	reverseDetect@mR^0,c
  5669   004724  0E01               	movlw	high _motorR
  5670   004726  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5671   004728  ECB1  F022         	call	_reverseDetect	;wreg free
  5672                           
  5673                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  5674   00472C  0EF5               	movlw	low _motorL
  5675   00472E  6E1A               	movwf	turnRight45@mL^0,c
  5676   004730  0E00               	movlw	high _motorL
  5677   004732  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5678   004734  0EBE               	movlw	low _motorR
  5679   004736  6E1C               	movwf	turnRight45@mR^0,c
  5680   004738  0E01               	movlw	high _motorR
  5681   00473A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5682   00473C  EC0B  F023         	call	_turnRight45	;wreg free
  5683                           
  5684                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  5685   004740  0EF5               	movlw	low _motorL
  5686   004742  6E1A               	movwf	turnRight45@mL^0,c
  5687   004744  0E00               	movlw	high _motorL
  5688   004746  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5689   004748  0EBE               	movlw	low _motorR
  5690   00474A  6E1C               	movwf	turnRight45@mR^0,c
  5691   00474C  0E01               	movlw	high _motorR
  5692   00474E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5693   004750  EC0B  F023         	call	_turnRight45	;wreg free
  5694                           
  5695                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  5696   004754  0EF5               	movlw	low _motorL
  5697   004756  6E1A               	movwf	turnRight45@mL^0,c
  5698   004758  0E00               	movlw	high _motorL
  5699   00475A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5700   00475C  0EBE               	movlw	low _motorR
  5701   00475E  6E1C               	movwf	turnRight45@mR^0,c
  5702   004760  0E01               	movlw	high _motorR
  5703   004762  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5704   004764  EC0B  F023         	call	_turnRight45	;wreg free
  5705   004768  0012               	return		;funcret
  5706   00476A                     __end_of_OrangeMove:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function _LightBlueMove *****************
  5710 ;; Defined at:
  5711 ;;		line 307 in file "dc_motor.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5714 ;;		 -> motorL(9), 
  5715 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5716 ;;		 -> motorR(9), 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;Total ram usage:        4 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 5
  5735 ;; This function calls:
  5736 ;;		_reverseDetect
  5737 ;;		_turnLeft45
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;;		_go_Home
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text31
  5745   00476A                     __ptext31:
  5746                           	callstack 0
  5747   00476A                     _LightBlueMove:
  5748                           	callstack 24
  5749   00476A                     
  5750                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  5751   00476A  0EF5               	movlw	low _motorL
  5752   00476C  6E1A               	movwf	reverseDetect@mL^0,c
  5753   00476E  0E00               	movlw	high _motorL
  5754   004770  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5755   004772  0EBE               	movlw	low _motorR
  5756   004774  6E1C               	movwf	reverseDetect@mR^0,c
  5757   004776  0E01               	movlw	high _motorR
  5758   004778  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5759   00477A  ECB1  F022         	call	_reverseDetect	;wreg free
  5760                           
  5761                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  5762   00477E  0EF5               	movlw	low _motorL
  5763   004780  6E1A               	movwf	turnLeft45@mL^0,c
  5764   004782  0E00               	movlw	high _motorL
  5765   004784  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5766   004786  0EBE               	movlw	low _motorR
  5767   004788  6E1C               	movwf	turnLeft45@mR^0,c
  5768   00478A  0E01               	movlw	high _motorR
  5769   00478C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5770   00478E  EC37  F023         	call	_turnLeft45	;wreg free
  5771                           
  5772                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  5773   004792  0EF5               	movlw	low _motorL
  5774   004794  6E1A               	movwf	turnLeft45@mL^0,c
  5775   004796  0E00               	movlw	high _motorL
  5776   004798  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5777   00479A  0EBE               	movlw	low _motorR
  5778   00479C  6E1C               	movwf	turnLeft45@mR^0,c
  5779   00479E  0E01               	movlw	high _motorR
  5780   0047A0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5781   0047A2  EC37  F023         	call	_turnLeft45	;wreg free
  5782                           
  5783                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  5784   0047A6  0EF5               	movlw	low _motorL
  5785   0047A8  6E1A               	movwf	turnLeft45@mL^0,c
  5786   0047AA  0E00               	movlw	high _motorL
  5787   0047AC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5788   0047AE  0EBE               	movlw	low _motorR
  5789   0047B0  6E1C               	movwf	turnLeft45@mR^0,c
  5790   0047B2  0E01               	movlw	high _motorR
  5791   0047B4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5792   0047B6  EC37  F023         	call	_turnLeft45	;wreg free
  5793   0047BA  0012               	return		;funcret
  5794   0047BC                     __end_of_LightBlueMove:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _GreenMove *****************
  5798 ;; Defined at:
  5799 ;;		line 260 in file "dc_motor.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5802 ;;		 -> motorL(9), 
  5803 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5804 ;;		 -> motorR(9), 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;Total ram usage:        4 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; Hardware stack levels required when called: 5
  5823 ;; This function calls:
  5824 ;;		_reverseDetect
  5825 ;;		_turnLeft45
  5826 ;; This function is called by:
  5827 ;;		_main
  5828 ;;		_go_Home
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text32
  5833   004B8A                     __ptext32:
  5834                           	callstack 0
  5835   004B8A                     _GreenMove:
  5836                           	callstack 24
  5837   004B8A                     
  5838                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  5839   004B8A  0EF5               	movlw	low _motorL
  5840   004B8C  6E1A               	movwf	reverseDetect@mL^0,c
  5841   004B8E  0E00               	movlw	high _motorL
  5842   004B90  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5843   004B92  0EBE               	movlw	low _motorR
  5844   004B94  6E1C               	movwf	reverseDetect@mR^0,c
  5845   004B96  0E01               	movlw	high _motorR
  5846   004B98  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5847   004B9A  ECB1  F022         	call	_reverseDetect	;wreg free
  5848                           
  5849                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  5850   004B9E  0EF5               	movlw	low _motorL
  5851   004BA0  6E1A               	movwf	turnLeft45@mL^0,c
  5852   004BA2  0E00               	movlw	high _motorL
  5853   004BA4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5854   004BA6  0EBE               	movlw	low _motorR
  5855   004BA8  6E1C               	movwf	turnLeft45@mR^0,c
  5856   004BAA  0E01               	movlw	high _motorR
  5857   004BAC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5858   004BAE  EC37  F023         	call	_turnLeft45	;wreg free
  5859                           
  5860                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  5861   004BB2  0EF5               	movlw	low _motorL
  5862   004BB4  6E1A               	movwf	turnLeft45@mL^0,c
  5863   004BB6  0E00               	movlw	high _motorL
  5864   004BB8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5865   004BBA  0EBE               	movlw	low _motorR
  5866   004BBC  6E1C               	movwf	turnLeft45@mR^0,c
  5867   004BBE  0E01               	movlw	high _motorR
  5868   004BC0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5869   004BC2  EC37  F023         	call	_turnLeft45	;wreg free
  5870   004BC6  0012               	return		;funcret
  5871   004BC8                     __end_of_GreenMove:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _BlueMove *****************
  5875 ;; Defined at:
  5876 ;;		line 268 in file "dc_motor.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5879 ;;		 -> motorL(9), 
  5880 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5881 ;;		 -> motorR(9), 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;Total ram usage:        4 bytes
  5898 ;; Hardware stack levels used: 1
  5899 ;; Hardware stack levels required when called: 5
  5900 ;; This function calls:
  5901 ;;		_reverseDetect
  5902 ;;		_turnRight45
  5903 ;; This function is called by:
  5904 ;;		_main
  5905 ;;		_go_Home
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text33
  5910   0043EA                     __ptext33:
  5911                           	callstack 0
  5912   0043EA                     _BlueMove:
  5913                           	callstack 24
  5914   0043EA                     
  5915                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5916   0043EA  0EF5               	movlw	low _motorL
  5917   0043EC  6E1A               	movwf	reverseDetect@mL^0,c
  5918   0043EE  0E00               	movlw	high _motorL
  5919   0043F0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5920   0043F2  0EBE               	movlw	low _motorR
  5921   0043F4  6E1C               	movwf	reverseDetect@mR^0,c
  5922   0043F6  0E01               	movlw	high _motorR
  5923   0043F8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5924   0043FA  ECB1  F022         	call	_reverseDetect	;wreg free
  5925                           
  5926                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  5927   0043FE  0EF5               	movlw	low _motorL
  5928   004400  6E1A               	movwf	turnRight45@mL^0,c
  5929   004402  0E00               	movlw	high _motorL
  5930   004404  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5931   004406  0EBE               	movlw	low _motorR
  5932   004408  6E1C               	movwf	turnRight45@mR^0,c
  5933   00440A  0E01               	movlw	high _motorR
  5934   00440C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5935   00440E  EC0B  F023         	call	_turnRight45	;wreg free
  5936                           
  5937                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  5938   004412  0EF5               	movlw	low _motorL
  5939   004414  6E1A               	movwf	turnRight45@mL^0,c
  5940   004416  0E00               	movlw	high _motorL
  5941   004418  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5942   00441A  0EBE               	movlw	low _motorR
  5943   00441C  6E1C               	movwf	turnRight45@mR^0,c
  5944   00441E  0E01               	movlw	high _motorR
  5945   004420  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5946   004422  EC0B  F023         	call	_turnRight45	;wreg free
  5947                           
  5948                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  5949   004426  0EF5               	movlw	low _motorL
  5950   004428  6E1A               	movwf	turnRight45@mL^0,c
  5951   00442A  0E00               	movlw	high _motorL
  5952   00442C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5953   00442E  0EBE               	movlw	low _motorR
  5954   004430  6E1C               	movwf	turnRight45@mR^0,c
  5955   004432  0E01               	movlw	high _motorR
  5956   004434  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5957   004436  EC0B  F023         	call	_turnRight45	;wreg free
  5958                           
  5959                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  5960   00443A  0EF5               	movlw	low _motorL
  5961   00443C  6E1A               	movwf	turnRight45@mL^0,c
  5962   00443E  0E00               	movlw	high _motorL
  5963   004440  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5964   004442  0EBE               	movlw	low _motorR
  5965   004444  6E1C               	movwf	turnRight45@mR^0,c
  5966   004446  0E01               	movlw	high _motorR
  5967   004448  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5968   00444A  EC0B  F023         	call	_turnRight45	;wreg free
  5969   00444E  0012               	return		;funcret
  5970   004450                     __end_of_BlueMove:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _getTMR0val *****************
  5974 ;; Defined at:
  5975 ;;		line 28 in file "timers.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  moving          2    0[COMRAM] int 
  5980 ;;  temp            2    0        unsigned int 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;Total ram usage:        2 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_main
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text34
  6005   004C82                     __ptext34:
  6006                           	callstack 0
  6007   004C82                     _getTMR0val:
  6008                           	callstack 29
  6009   004C82  50D3               	movf	211,w,c	;volatile
  6010   004C84                     
  6011                           ;timers.c: 32:     int moving=TMR0H<<8;
  6012   004C84  50D4               	movf	212,w,c	;volatile
  6013   004C86  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6014   004C88  6A01               	clrf	getTMR0val@moving^0,c
  6015   004C8A                     
  6016                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6017   004C8A  90D8               	bcf	status,0,c
  6018   004C8C  0100               	movlb	0	; () banked
  6019   004C8E  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  6020   004C90  6ED9               	movwf	fsr2l,c
  6021   004C92  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6022   004C94  6EDA               	movwf	fsr2h,c
  6023   004C96  0E00               	movlw	low _Time_forward
  6024   004C98  26D9               	addwf	fsr2l,f,c
  6025   004C9A  0E02               	movlw	high _Time_forward
  6026   004C9C  22DA               	addwfc	fsr2h,f,c
  6027   004C9E  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6028   004CA2  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6029   004CA6                     
  6030                           ; BSR set to: 0
  6031   004CA6  0012               	return		;funcret
  6032   004CA8                     __end_of_getTMR0val:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _colour_rel *****************
  6036 ;; Defined at:
  6037 ;;		line 114 in file "color.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  vals            2   49[COMRAM] PTR struct RGB
  6040 ;;		 -> vals(8), 
  6041 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6042 ;;		 -> rel(12), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  B               4   73[COMRAM] float 
  6045 ;;  G               4   69[COMRAM] float 
  6046 ;;  R               4   65[COMRAM] float 
  6047 ;;  L               4   53[COMRAM] float 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;Total ram usage:       28 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 2
  6064 ;; This function calls:
  6065 ;;		___fladd
  6066 ;;		___fldiv
  6067 ;;		___xxtofl
  6068 ;; This function is called by:
  6069 ;;		_main
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text35
  6074   002A9A                     __ptext35:
  6075                           	callstack 0
  6076   002A9A                     _colour_rel:
  6077                           	callstack 28
  6078   002A9A                     
  6079                           ;color.c: 115:     float R = vals->R;
  6080   002A9A  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6081   002A9E  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6082   002AA2  CFDE F001          	movff	postinc2,___xxtofl@val
  6083   002AA6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6084   002AAA  0E00               	movlw	0
  6085   002AAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6086   002AAE  0EFF               	movlw	-1
  6087   002AB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  6088   002AB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  6089   002AB4  0E01               	movlw	1
  6090   002AB6  EC79  F019         	call	___xxtofl
  6091   002ABA  C001  F042         	movff	?___xxtofl,colour_rel@R
  6092   002ABE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6093   002AC2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6094   002AC6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6095                           
  6096                           ;color.c: 116:     float G = vals->G;
  6097   002ACA  EE20 F002          	lfsr	2,2
  6098   002ACE  5032               	movf	colour_rel@vals^0,w,c
  6099   002AD0  26D9               	addwf	fsr2l,f,c
  6100   002AD2  5033               	movf	(colour_rel@vals+1)^0,w,c
  6101   002AD4  22DA               	addwfc	fsr2h,f,c
  6102   002AD6  CFDE F001          	movff	postinc2,___xxtofl@val
  6103   002ADA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6104   002ADE  0E00               	movlw	0
  6105   002AE0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6106   002AE2  0EFF               	movlw	-1
  6107   002AE4  6E03               	movwf	(___xxtofl@val+2)^0,c
  6108   002AE6  6E04               	movwf	(___xxtofl@val+3)^0,c
  6109   002AE8  0E01               	movlw	1
  6110   002AEA  EC79  F019         	call	___xxtofl
  6111   002AEE  C001  F046         	movff	?___xxtofl,colour_rel@G
  6112   002AF2  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6113   002AF6  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6114   002AFA  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6115                           
  6116                           ;color.c: 117:     float B = vals->B;
  6117   002AFE  EE20 F004          	lfsr	2,4
  6118   002B02  5032               	movf	colour_rel@vals^0,w,c
  6119   002B04  26D9               	addwf	fsr2l,f,c
  6120   002B06  5033               	movf	(colour_rel@vals+1)^0,w,c
  6121   002B08  22DA               	addwfc	fsr2h,f,c
  6122   002B0A  CFDE F001          	movff	postinc2,___xxtofl@val
  6123   002B0E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6124   002B12  0E00               	movlw	0
  6125   002B14  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6126   002B16  0EFF               	movlw	-1
  6127   002B18  6E03               	movwf	(___xxtofl@val+2)^0,c
  6128   002B1A  6E04               	movwf	(___xxtofl@val+3)^0,c
  6129   002B1C  0E01               	movlw	1
  6130   002B1E  EC79  F019         	call	___xxtofl
  6131   002B22  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6132   002B26  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6133   002B2A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6134   002B2E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6135                           
  6136                           ;color.c: 118:     float L = vals->L;
  6137   002B32  EE20 F006          	lfsr	2,6
  6138   002B36  5032               	movf	colour_rel@vals^0,w,c
  6139   002B38  26D9               	addwf	fsr2l,f,c
  6140   002B3A  5033               	movf	(colour_rel@vals+1)^0,w,c
  6141   002B3C  22DA               	addwfc	fsr2h,f,c
  6142   002B3E  CFDE F001          	movff	postinc2,___xxtofl@val
  6143   002B42  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6144   002B46  0E00               	movlw	0
  6145   002B48  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6146   002B4A  0EFF               	movlw	-1
  6147   002B4C  6E03               	movwf	(___xxtofl@val+2)^0,c
  6148   002B4E  6E04               	movwf	(___xxtofl@val+3)^0,c
  6149   002B50  0E01               	movlw	1
  6150   002B52  EC79  F019         	call	___xxtofl
  6151   002B56  C001  F036         	movff	?___xxtofl,colour_rel@L
  6152   002B5A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6153   002B5E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6154   002B62  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6155   002B66                     
  6156                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6157   002B66  C046  F005         	movff	colour_rel@G,___fladd@a
  6158   002B6A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6159   002B6E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6160   002B72  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6161   002B76  C042  F001         	movff	colour_rel@R,___fladd@b
  6162   002B7A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6163   002B7E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6164   002B82  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6165   002B86  EC0B  F00F         	call	___fladd	;wreg free
  6166   002B8A  C001  F03A         	movff	?___fladd,_colour_rel$2836
  6167   002B8E  C002  F03B         	movff	?___fladd+1,_colour_rel$2836+1
  6168   002B92  C003  F03C         	movff	?___fladd+2,_colour_rel$2836+2
  6169   002B96  C004  F03D         	movff	?___fladd+3,_colour_rel$2836+3
  6170   002B9A                     
  6171                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6172   002B9A  C04A  F005         	movff	colour_rel@B,___fladd@a
  6173   002B9E  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6174   002BA2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6175   002BA6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6176   002BAA  C03A  F001         	movff	_colour_rel$2836,___fladd@b
  6177   002BAE  C03B  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6178   002BB2  C03C  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6179   002BB6  C03D  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6180   002BBA  EC0B  F00F         	call	___fladd	;wreg free
  6181   002BBE  C001  F03E         	movff	?___fladd,_colour_rel$2837
  6182   002BC2  C002  F03F         	movff	?___fladd+1,_colour_rel$2837+1
  6183   002BC6  C003  F040         	movff	?___fladd+2,_colour_rel$2837+2
  6184   002BCA  C004  F041         	movff	?___fladd+3,_colour_rel$2837+3
  6185                           
  6186                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6187   002BCE  C042  F019         	movff	colour_rel@R,___fldiv@b
  6188   002BD2  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6189   002BD6  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6190   002BDA  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6191   002BDE  C036  F005         	movff	colour_rel@L,___fladd@a
  6192   002BE2  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6193   002BE6  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6194   002BEA  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6195   002BEE  C03E  F001         	movff	_colour_rel$2837,___fladd@b
  6196   002BF2  C03F  F002         	movff	_colour_rel$2837+1,___fladd@b+1
  6197   002BF6  C040  F003         	movff	_colour_rel$2837+2,___fladd@b+2
  6198   002BFA  C041  F004         	movff	_colour_rel$2837+3,___fladd@b+3
  6199   002BFE  EC0B  F00F         	call	___fladd	;wreg free
  6200   002C02  C001  F01D         	movff	?___fladd,___fldiv@a
  6201   002C06  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6202   002C0A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6203   002C0E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6204   002C12  EC80  F013         	call	___fldiv	;wreg free
  6205   002C16  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6206   002C1A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6207   002C1E  C019  FFDE         	movff	?___fldiv,postinc2
  6208   002C22  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6209   002C26  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6210   002C2A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6211   002C2E                     
  6212                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6213   002C2E  C046  F005         	movff	colour_rel@G,___fladd@a
  6214   002C32  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6215   002C36  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6216   002C3A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6217   002C3E  C042  F001         	movff	colour_rel@R,___fladd@b
  6218   002C42  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6219   002C46  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6220   002C4A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6221   002C4E  EC0B  F00F         	call	___fladd	;wreg free
  6222   002C52  C001  F03A         	movff	?___fladd,_colour_rel$2836
  6223   002C56  C002  F03B         	movff	?___fladd+1,_colour_rel$2836+1
  6224   002C5A  C003  F03C         	movff	?___fladd+2,_colour_rel$2836+2
  6225   002C5E  C004  F03D         	movff	?___fladd+3,_colour_rel$2836+3
  6226   002C62                     
  6227                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6228   002C62  C04A  F005         	movff	colour_rel@B,___fladd@a
  6229   002C66  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6230   002C6A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6231   002C6E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6232   002C72  C03A  F001         	movff	_colour_rel$2836,___fladd@b
  6233   002C76  C03B  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6234   002C7A  C03C  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6235   002C7E  C03D  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6236   002C82  EC0B  F00F         	call	___fladd	;wreg free
  6237   002C86  C001  F03E         	movff	?___fladd,_colour_rel$2837
  6238   002C8A  C002  F03F         	movff	?___fladd+1,_colour_rel$2837+1
  6239   002C8E  C003  F040         	movff	?___fladd+2,_colour_rel$2837+2
  6240   002C92  C004  F041         	movff	?___fladd+3,_colour_rel$2837+3
  6241                           
  6242                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6243   002C96  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6244   002C9A  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6245   002C9E  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6246   002CA2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6247   002CA6  C036  F005         	movff	colour_rel@L,___fladd@a
  6248   002CAA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6249   002CAE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6250   002CB2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6251   002CB6  C03E  F001         	movff	_colour_rel$2837,___fladd@b
  6252   002CBA  C03F  F002         	movff	_colour_rel$2837+1,___fladd@b+1
  6253   002CBE  C040  F003         	movff	_colour_rel$2837+2,___fladd@b+2
  6254   002CC2  C041  F004         	movff	_colour_rel$2837+3,___fladd@b+3
  6255   002CC6  EC0B  F00F         	call	___fladd	;wreg free
  6256   002CCA  C001  F01D         	movff	?___fladd,___fldiv@a
  6257   002CCE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6258   002CD2  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6259   002CD6  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6260   002CDA  EC80  F013         	call	___fldiv	;wreg free
  6261   002CDE  EE20 F008          	lfsr	2,8
  6262   002CE2  5034               	movf	colour_rel@rel^0,w,c
  6263   002CE4  26D9               	addwf	fsr2l,f,c
  6264   002CE6  5035               	movf	(colour_rel@rel+1)^0,w,c
  6265   002CE8  22DA               	addwfc	fsr2h,f,c
  6266   002CEA  C019  FFDE         	movff	?___fldiv,postinc2
  6267   002CEE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6268   002CF2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6269   002CF6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6270   002CFA                     
  6271                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6272   002CFA  C046  F005         	movff	colour_rel@G,___fladd@a
  6273   002CFE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6274   002D02  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6275   002D06  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6276   002D0A  C042  F001         	movff	colour_rel@R,___fladd@b
  6277   002D0E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6278   002D12  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6279   002D16  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6280   002D1A  EC0B  F00F         	call	___fladd	;wreg free
  6281   002D1E  C001  F03A         	movff	?___fladd,_colour_rel$2836
  6282   002D22  C002  F03B         	movff	?___fladd+1,_colour_rel$2836+1
  6283   002D26  C003  F03C         	movff	?___fladd+2,_colour_rel$2836+2
  6284   002D2A  C004  F03D         	movff	?___fladd+3,_colour_rel$2836+3
  6285   002D2E                     
  6286                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6287   002D2E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6288   002D32  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6289   002D36  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6290   002D3A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6291   002D3E  C03A  F001         	movff	_colour_rel$2836,___fladd@b
  6292   002D42  C03B  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6293   002D46  C03C  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6294   002D4A  C03D  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6295   002D4E  EC0B  F00F         	call	___fladd	;wreg free
  6296   002D52  C001  F03E         	movff	?___fladd,_colour_rel$2837
  6297   002D56  C002  F03F         	movff	?___fladd+1,_colour_rel$2837+1
  6298   002D5A  C003  F040         	movff	?___fladd+2,_colour_rel$2837+2
  6299   002D5E  C004  F041         	movff	?___fladd+3,_colour_rel$2837+3
  6300                           
  6301                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6302   002D62  C046  F019         	movff	colour_rel@G,___fldiv@b
  6303   002D66  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6304   002D6A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6305   002D6E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6306   002D72  C036  F005         	movff	colour_rel@L,___fladd@a
  6307   002D76  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6308   002D7A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6309   002D7E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6310   002D82  C03E  F001         	movff	_colour_rel$2837,___fladd@b
  6311   002D86  C03F  F002         	movff	_colour_rel$2837+1,___fladd@b+1
  6312   002D8A  C040  F003         	movff	_colour_rel$2837+2,___fladd@b+2
  6313   002D8E  C041  F004         	movff	_colour_rel$2837+3,___fladd@b+3
  6314   002D92  EC0B  F00F         	call	___fladd	;wreg free
  6315   002D96  C001  F01D         	movff	?___fladd,___fldiv@a
  6316   002D9A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6317   002D9E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6318   002DA2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6319   002DA6  EC80  F013         	call	___fldiv	;wreg free
  6320   002DAA  EE20 F004          	lfsr	2,4
  6321   002DAE  5034               	movf	colour_rel@rel^0,w,c
  6322   002DB0  26D9               	addwf	fsr2l,f,c
  6323   002DB2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6324   002DB4  22DA               	addwfc	fsr2h,f,c
  6325   002DB6  C019  FFDE         	movff	?___fldiv,postinc2
  6326   002DBA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6327   002DBE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6328   002DC2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6329   002DC6  0012               	return		;funcret
  6330   002DC8                     __end_of_colour_rel:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _color_click_init *****************
  6334 ;; Defined at:
  6335 ;;		line 7 in file "color.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;Total ram usage:        1 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 4
  6356 ;; This function calls:
  6357 ;;		_I2C_2_Master_Init
  6358 ;;		_color_writetoaddr
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text36
  6365   0047BC                     __ptext36:
  6366                           	callstack 0
  6367   0047BC                     _color_click_init:
  6368                           	callstack 26
  6369   0047BC                     
  6370                           ;color.c: 10:     I2C_2_Master_Init();
  6371   0047BC  EC18  F026         	call	_I2C_2_Master_Init	;wreg free
  6372   0047C0                     
  6373                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6374   0047C0  0E01               	movlw	1
  6375   0047C2  6E03               	movwf	color_writetoaddr@value^0,c
  6376   0047C4  0E00               	movlw	0
  6377   0047C6  EC67  F026         	call	_color_writetoaddr
  6378   0047CA                     
  6379                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6380   0047CA  0E3F               	movlw	63
  6381   0047CC  6E05               	movwf	??_color_click_init^0,c
  6382   0047CE  0E55               	movlw	85
  6383   0047D0                     u4777:
  6384   0047D0  2EE8               	decfsz	wreg,f,c
  6385   0047D2  D7FE               	bra	u4777
  6386   0047D4  2E05               	decfsz	??_color_click_init^0,f,c
  6387   0047D6  D7FC               	bra	u4777
  6388   0047D8  F000               	nop	
  6389   0047DA                     
  6390                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6391   0047DA  0E03               	movlw	3
  6392   0047DC  6E03               	movwf	color_writetoaddr@value^0,c
  6393   0047DE  0E00               	movlw	0
  6394   0047E0  EC67  F026         	call	_color_writetoaddr
  6395   0047E4                     
  6396                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6397   0047E4  0ED5               	movlw	213
  6398   0047E6  6E03               	movwf	color_writetoaddr@value^0,c
  6399   0047E8  0E01               	movlw	1
  6400   0047EA  EC67  F026         	call	_color_writetoaddr
  6401   0047EE                     
  6402                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6403   0047EE  0E00               	movlw	0
  6404   0047F0  6E03               	movwf	color_writetoaddr@value^0,c
  6405   0047F2  0E0F               	movlw	15
  6406   0047F4  EC67  F026         	call	_color_writetoaddr
  6407   0047F8                     
  6408                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6409   0047F8  9287               	bcf	135,1,c	;volatile
  6410   0047FA                     
  6411                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6412   0047FA  9881               	bcf	129,4,c	;volatile
  6413   0047FC                     
  6414                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6415   0047FC  9E86               	bcf	134,7,c	;volatile
  6416   0047FE                     
  6417                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6418   0047FE  9684               	bcf	132,3,c	;volatile
  6419   004800                     
  6420                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6421   004800  9884               	bcf	132,4,c	;volatile
  6422   004802                     
  6423                           ;color.c: 28:     LATGbits.LATG1=0;
  6424   004802  927F               	bcf	127,1,c	;volatile
  6425   004804                     
  6426                           ;color.c: 29:     LATFbits.LATF7=0;
  6427   004804  9E7E               	bcf	126,7,c	;volatile
  6428   004806                     
  6429                           ;color.c: 30:     LATAbits.LATA4=0;
  6430   004806  9879               	bcf	121,4,c	;volatile
  6431   004808                     
  6432                           ;color.c: 32:     LATDbits.LATD3=0;
  6433   004808  967C               	bcf	124,3,c	;volatile
  6434   00480A                     
  6435                           ;color.c: 33:     LATDbits.LATD4=0;
  6436   00480A  987C               	bcf	124,4,c	;volatile
  6437   00480C  0012               	return		;funcret
  6438   00480E                     __end_of_color_click_init:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _color_writetoaddr *****************
  6442 ;; Defined at:
  6443 ;;		line 41 in file "color.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  address         1    wreg     unsigned char 
  6446 ;;  value           1    2[COMRAM] unsigned char 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  address         1    3[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:        2 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 3
  6465 ;; This function calls:
  6466 ;;		_I2C_2_Master_Start
  6467 ;;		_I2C_2_Master_Stop
  6468 ;;		_I2C_2_Master_Write
  6469 ;; This function is called by:
  6470 ;;		_color_click_init
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text37
  6475   004CCE                     __ptext37:
  6476                           	callstack 0
  6477   004CCE                     _color_writetoaddr:
  6478                           	callstack 26
  6479                           
  6480                           ;incstack = 0
  6481                           ;color_writetoaddr@address stored from wreg
  6482   004CCE  6E04               	movwf	color_writetoaddr@address^0,c
  6483   004CD0                     
  6484                           ;color.c: 42:     I2C_2_Master_Start();
  6485   004CD0  ECB2  F026         	call	_I2C_2_Master_Start	;wreg free
  6486                           
  6487                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6488   004CD4  0E52               	movlw	82
  6489   004CD6  ECA2  F026         	call	_I2C_2_Master_Write
  6490                           
  6491                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6492   004CDA  5004               	movf	color_writetoaddr@address^0,w,c
  6493   004CDC  0980               	iorlw	128
  6494   004CDE  ECA2  F026         	call	_I2C_2_Master_Write
  6495                           
  6496                           ;color.c: 45:     I2C_2_Master_Write(value);
  6497   004CE2  5003               	movf	color_writetoaddr@value^0,w,c
  6498   004CE4  ECA2  F026         	call	_I2C_2_Master_Write
  6499                           
  6500                           ;color.c: 46:     I2C_2_Master_Stop();
  6501   004CE8  ECAD  F026         	call	_I2C_2_Master_Stop	;wreg free
  6502   004CEC  0012               	return		;funcret
  6503   004CEE                     __end_of_color_writetoaddr:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function _I2C_2_Master_Write *****************
  6507 ;; Defined at:
  6508 ;;		line 45 in file "i2c.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  data_byte       1    wreg     unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  data_byte       1    1[COMRAM] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;Total ram usage:        1 bytes
  6527 ;; Hardware stack levels used: 1
  6528 ;; Hardware stack levels required when called: 2
  6529 ;; This function calls:
  6530 ;;		_I2C_2_Master_Idle
  6531 ;; This function is called by:
  6532 ;;		_color_writetoaddr
  6533 ;;		_color_read_lum
  6534 ;;		_color_read_Red
  6535 ;;		_color_read_Green
  6536 ;;		_color_read_Blue
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text38
  6541   004D44                     __ptext38:
  6542                           	callstack 0
  6543   004D44                     _I2C_2_Master_Write:
  6544                           	callstack 26
  6545                           
  6546                           ;incstack = 0
  6547                           ;I2C_2_Master_Write@data_byte stored from wreg
  6548   004D44  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6549   004D46                     
  6550                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6551   004D46  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6552   004D4A                     
  6553                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6554   004D4A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6555   004D4E  0012               	return		;funcret
  6556   004D50                     __end_of_I2C_2_Master_Write:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _I2C_2_Master_Stop *****************
  6560 ;; Defined at:
  6561 ;;		line 39 in file "i2c.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 2
  6582 ;; This function calls:
  6583 ;;		_I2C_2_Master_Idle
  6584 ;; This function is called by:
  6585 ;;		_color_writetoaddr
  6586 ;;		_color_read_lum
  6587 ;;		_color_read_Red
  6588 ;;		_color_read_Green
  6589 ;;		_color_read_Blue
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text39
  6594   004D5A                     __ptext39:
  6595                           	callstack 0
  6596   004D5A                     _I2C_2_Master_Stop:
  6597                           	callstack 26
  6598   004D5A                     
  6599                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6600   004D5A  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6601   004D5E                     
  6602                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6603   004D5E  010E               	movlb	14	; () banked
  6604   004D60  85DA               	bsf	218,2,b	;volatile
  6605   004D62                     
  6606                           ; BSR set to: 14
  6607   004D62  0012               	return		;funcret
  6608   004D64                     __end_of_I2C_2_Master_Stop:
  6609                           	callstack 0
  6610                           
  6611 ;; *************** function _I2C_2_Master_Start *****************
  6612 ;; Defined at:
  6613 ;;		line 27 in file "i2c.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 2
  6634 ;; This function calls:
  6635 ;;		_I2C_2_Master_Idle
  6636 ;; This function is called by:
  6637 ;;		_color_writetoaddr
  6638 ;;		_color_read_lum
  6639 ;;		_color_read_Red
  6640 ;;		_color_read_Green
  6641 ;;		_color_read_Blue
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text40
  6646   004D64                     __ptext40:
  6647                           	callstack 0
  6648   004D64                     _I2C_2_Master_Start:
  6649                           	callstack 26
  6650   004D64                     
  6651                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6652   004D64  EC2D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6653   004D68                     
  6654                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6655   004D68  010E               	movlb	14	; () banked
  6656   004D6A  81DA               	bsf	218,0,b	;volatile
  6657   004D6C                     
  6658                           ; BSR set to: 14
  6659   004D6C  0012               	return		;funcret
  6660   004D6E                     __end_of_I2C_2_Master_Start:
  6661                           	callstack 0
  6662                           
  6663 ;; *************** function _I2C_2_Master_Idle *****************
  6664 ;; Defined at:
  6665 ;;		line 22 in file "i2c.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6683 ;;Total ram usage:        1 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 1
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_I2C_2_Master_Start
  6690 ;;		_I2C_2_Master_RepStart
  6691 ;;		_I2C_2_Master_Stop
  6692 ;;		_I2C_2_Master_Write
  6693 ;;		_I2C_2_Master_Read
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text41
  6698   004C5A                     __ptext41:
  6699                           	callstack 0
  6700   004C5A                     _I2C_2_Master_Idle:
  6701                           	callstack 26
  6702   004C5A                     l143:
  6703   004C5A  010E               	movlb	14	; () banked
  6704   004C5C  B5D8               	btfsc	216,2,b	;volatile
  6705   004C5E  EF33  F026         	goto	u2621
  6706   004C62  EF35  F026         	goto	u2620
  6707   004C66                     u2621:
  6708   004C66  EF2D  F026         	goto	l143
  6709   004C6A                     u2620:
  6710   004C6A                     
  6711                           ; BSR set to: 14
  6712   004C6A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6713   004C6E  0E1F               	movlw	31
  6714   004C70  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6715   004C72  A4D8               	btfss	status,2,c
  6716   004C74  EF3E  F026         	goto	u2631
  6717   004C78  EF40  F026         	goto	u2630
  6718   004C7C                     u2631:
  6719   004C7C  EF2D  F026         	goto	l143
  6720   004C80                     u2630:
  6721   004C80                     
  6722                           ; BSR set to: 14
  6723   004C80  0012               	return		;funcret
  6724   004C82                     __end_of_I2C_2_Master_Idle:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function _I2C_2_Master_Init *****************
  6728 ;; Defined at:
  6729 ;;		line 4 in file "i2c.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;Total ram usage:        0 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 1
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_color_click_init
  6754 ;;		_main
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text42
  6759   004C30                     __ptext42:
  6760                           	callstack 0
  6761   004C30                     _I2C_2_Master_Init:
  6762                           	callstack 28
  6763   004C30                     
  6764                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6765   004C30  010E               	movlb	14	; () banked
  6766   004C32  51D9               	movf	217,w,b	;volatile
  6767   004C34  0BF0               	andlw	-16
  6768   004C36  0908               	iorlw	8
  6769   004C38  6FD9               	movwf	217,b	;volatile
  6770   004C3A                     
  6771                           ; BSR set to: 14
  6772                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6773   004C3A  8BD9               	bsf	217,5,b	;volatile
  6774                           
  6775                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6776   004C3C  0E9F               	movlw	159
  6777   004C3E  6FD6               	movwf	214,b	;volatile
  6778   004C40                     
  6779                           ; BSR set to: 14
  6780                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6781   004C40  8A84               	bsf	132,5,c	;volatile
  6782   004C42                     
  6783                           ; BSR set to: 14
  6784                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6785   004C42  8C84               	bsf	132,6,c	;volatile
  6786   004C44                     
  6787                           ; BSR set to: 14
  6788                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6789   004C44  9BA7               	bcf	167,5,b	;volatile
  6790   004C46                     
  6791                           ; BSR set to: 14
  6792                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6793   004C46  9DA7               	bcf	167,6,b	;volatile
  6794                           
  6795                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6796   004C48  0E1D               	movlw	29
  6797   004C4A  6F1D               	movwf	29,b	;volatile
  6798                           
  6799                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6800   004C4C  0E1E               	movlw	30
  6801   004C4E  6F1C               	movwf	28,b	;volatile
  6802                           
  6803                           ;i2c.c: 18:   RD5PPS=0x1C;
  6804   004C50  0E1C               	movlw	28
  6805   004C52  6F6F               	movwf	111,b	;volatile
  6806                           
  6807                           ;i2c.c: 19:   RD6PPS=0x1B;
  6808   004C54  0E1B               	movlw	27
  6809   004C56  6F70               	movwf	112,b	;volatile
  6810   004C58                     
  6811                           ; BSR set to: 14
  6812   004C58  0012               	return		;funcret
  6813   004C5A                     __end_of_I2C_2_Master_Init:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function _YellowMove *****************
  6817 ;; Defined at:
  6818 ;;		line 278 in file "dc_motor.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6821 ;;		 -> motorL(9), 
  6822 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6823 ;;		 -> motorR(9), 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;Total ram usage:        4 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 5
  6842 ;; This function calls:
  6843 ;;		_reverseDetect
  6844 ;;		_reverseOneBlock
  6845 ;;		_turnRight45
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text43
  6852   00480E                     __ptext43:
  6853                           	callstack 0
  6854   00480E                     _YellowMove:
  6855                           	callstack 25
  6856   00480E                     
  6857                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6858   00480E  0EF5               	movlw	low _motorL
  6859   004810  6E1A               	movwf	reverseDetect@mL^0,c
  6860   004812  0E00               	movlw	high _motorL
  6861   004814  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6862   004816  0EBE               	movlw	low _motorR
  6863   004818  6E1C               	movwf	reverseDetect@mR^0,c
  6864   00481A  0E01               	movlw	high _motorR
  6865   00481C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6866   00481E  ECB1  F022         	call	_reverseDetect	;wreg free
  6867                           
  6868                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  6869   004822  0EF5               	movlw	low _motorL
  6870   004824  6E1A               	movwf	reverseOneBlock@mL^0,c
  6871   004826  0E00               	movlw	high _motorL
  6872   004828  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6873   00482A  0EBE               	movlw	low _motorR
  6874   00482C  6E1C               	movwf	reverseOneBlock@mR^0,c
  6875   00482E  0E01               	movlw	high _motorR
  6876   004830  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6877   004832  EC84  F022         	call	_reverseOneBlock	;wreg free
  6878                           
  6879                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6880   004836  0EF5               	movlw	low _motorL
  6881   004838  6E1A               	movwf	turnRight45@mL^0,c
  6882   00483A  0E00               	movlw	high _motorL
  6883   00483C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6884   00483E  0EBE               	movlw	low _motorR
  6885   004840  6E1C               	movwf	turnRight45@mR^0,c
  6886   004842  0E01               	movlw	high _motorR
  6887   004844  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6888   004846  EC0B  F023         	call	_turnRight45	;wreg free
  6889                           
  6890                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6891   00484A  0EF5               	movlw	low _motorL
  6892   00484C  6E1A               	movwf	turnRight45@mL^0,c
  6893   00484E  0E00               	movlw	high _motorL
  6894   004850  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6895   004852  0EBE               	movlw	low _motorR
  6896   004854  6E1C               	movwf	turnRight45@mR^0,c
  6897   004856  0E01               	movlw	high _motorR
  6898   004858  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6899   00485A  EC0B  F023         	call	_turnRight45	;wreg free
  6900   00485E  0012               	return		;funcret
  6901   004860                     __end_of_YellowMove:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _turnRight45 *****************
  6905 ;; Defined at:
  6906 ;;		line 201 in file "dc_motor.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6909 ;;		 -> motorL(9), 
  6910 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6911 ;;		 -> motorR(9), 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;Total ram usage:        6 bytes
  6928 ;; Hardware stack levels used: 1
  6929 ;; Hardware stack levels required when called: 4
  6930 ;; This function calls:
  6931 ;;		_stop
  6932 ;;		_turnRight
  6933 ;; This function is called by:
  6934 ;;		_RedMove
  6935 ;;		_BlueMove
  6936 ;;		_YellowMove
  6937 ;;		_OrangeMove
  6938 ;;		_ReverseYellow
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text44
  6943   004616                     __ptext44:
  6944                           	callstack 0
  6945   004616                     _turnRight45:
  6946                           	callstack 24
  6947   004616                     
  6948                           ;dc_motor.c: 202:     turnRight(mL,mR);
  6949   004616  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6950   00461A  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6951   00461E  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6952   004622  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6953   004626  ECB8  F01E         	call	_turnRight	;wreg free
  6954   00462A                     
  6955                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6956   00462A  0E12               	movlw	18
  6957   00462C  6E1F               	movwf	(??_turnRight45+1)^0,c
  6958   00462E  0EDC               	movlw	220
  6959   004630  6E1E               	movwf	??_turnRight45^0,c
  6960   004632  0E60               	movlw	96
  6961   004634                     u4787:
  6962   004634  2EE8               	decfsz	wreg,f,c
  6963   004636  D7FE               	bra	u4787
  6964   004638  2E1E               	decfsz	??_turnRight45^0,f,c
  6965   00463A  D7FC               	bra	u4787
  6966   00463C  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6967   00463E  D7FA               	bra	u4787
  6968   004640                     
  6969                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  6970   004640  0EF5               	movlw	low _motorL
  6971   004642  6E14               	movwf	stop@mL^0,c
  6972   004644  0E00               	movlw	high _motorL
  6973   004646  6E15               	movwf	(stop@mL+1)^0,c
  6974   004648  0EBE               	movlw	low _motorR
  6975   00464A  6E16               	movwf	stop@mR^0,c
  6976   00464C  0E01               	movlw	high _motorR
  6977   00464E  6E17               	movwf	(stop@mR+1)^0,c
  6978   004650  EC07  F021         	call	_stop	;wreg free
  6979                           
  6980                           ;dc_motor.c: 205:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6981   004654  0E52               	movlw	82
  6982   004656  6E1F               	movwf	(??_turnRight45+1)^0,c
  6983   004658  0E2B               	movlw	43
  6984   00465A  6E1E               	movwf	??_turnRight45^0,c
  6985   00465C  0E00               	movlw	0
  6986   00465E                     u4797:
  6987   00465E  2EE8               	decfsz	wreg,f,c
  6988   004660  D7FE               	bra	u4797
  6989   004662  2E1E               	decfsz	??_turnRight45^0,f,c
  6990   004664  D7FC               	bra	u4797
  6991   004666  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6992   004668  D7FA               	bra	u4797
  6993   00466A  D000               	nop2	
  6994   00466C  0012               	return		;funcret
  6995   00466E                     __end_of_turnRight45:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _turnRight *****************
  6999 ;; Defined at:
  7000 ;;		line 128 in file "dc_motor.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7003 ;;		 -> motorL(9), 
  7004 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7005 ;;		 -> motorR(9), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;Total ram usage:        6 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; Hardware stack levels required when called: 3
  7024 ;; This function calls:
  7025 ;;		_setMotorPWM
  7026 ;; This function is called by:
  7027 ;;		_turnRight45
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text45
  7032   003D70                     __ptext45:
  7033                           	callstack 0
  7034   003D70                     _turnRight:
  7035                           	callstack 24
  7036   003D70                     
  7037                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  7038   003D70  EE20 F001          	lfsr	2,1
  7039   003D74  5014               	movf	turnRight@mL^0,w,c
  7040   003D76  26D9               	addwf	fsr2l,f,c
  7041   003D78  5015               	movf	(turnRight@mL+1)^0,w,c
  7042   003D7A  22DA               	addwfc	fsr2h,f,c
  7043   003D7C  0E01               	movlw	1
  7044   003D7E  6EDF               	movwf	indf2,c
  7045                           
  7046                           ;dc_motor.c: 131:     mR->direction =0;
  7047   003D80  EE20 F001          	lfsr	2,1
  7048   003D84  5016               	movf	turnRight@mR^0,w,c
  7049   003D86  26D9               	addwf	fsr2l,f,c
  7050   003D88  5017               	movf	(turnRight@mR+1)^0,w,c
  7051   003D8A  22DA               	addwfc	fsr2h,f,c
  7052   003D8C  0E00               	movlw	0
  7053   003D8E  6EDF               	movwf	indf2,c
  7054                           
  7055                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  7056   003D90  EFEE  F01E         	goto	l3414
  7057   003D94                     l3406:
  7058                           
  7059                           ;dc_motor.c: 135:         mL->power+=10;
  7060   003D94  C014  FFD9         	movff	turnRight@mL,fsr2l
  7061   003D98  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7062   003D9C  0E0A               	movlw	10
  7063   003D9E  26DF               	addwf	indf2,f,c
  7064                           
  7065                           ;dc_motor.c: 136:         mR->power+=10;
  7066   003DA0  C016  FFD9         	movff	turnRight@mR,fsr2l
  7067   003DA4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7068   003DA8  0E0A               	movlw	10
  7069   003DAA  26DF               	addwf	indf2,f,c
  7070   003DAC                     
  7071                           ;dc_motor.c: 138:         setMotorPWM(mL);
  7072   003DAC  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7073   003DB0  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7074   003DB4  EC17  F01B         	call	_setMotorPWM	;wreg free
  7075   003DB8                     
  7076                           ;dc_motor.c: 139:         setMotorPWM(mR);
  7077   003DB8  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7078   003DBC  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7079   003DC0  EC17  F01B         	call	_setMotorPWM	;wreg free
  7080   003DC4                     
  7081                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7082   003DC4  0E02               	movlw	2
  7083   003DC6  6E19               	movwf	(??_turnRight+1)^0,c
  7084   003DC8  0EA0               	movlw	160
  7085   003DCA  6E18               	movwf	??_turnRight^0,c
  7086   003DCC  0E92               	movlw	146
  7087   003DCE                     u4807:
  7088   003DCE  2EE8               	decfsz	wreg,f,c
  7089   003DD0  D7FE               	bra	u4807
  7090   003DD2  2E18               	decfsz	??_turnRight^0,f,c
  7091   003DD4  D7FC               	bra	u4807
  7092   003DD6  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7093   003DD8  D7FA               	bra	u4807
  7094   003DDA  D000               	nop2	
  7095   003DDC                     l3414:
  7096   003DDC  C014  FFD9         	movff	turnRight@mL,fsr2l
  7097   003DE0  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7098   003DE4  0E1E               	movlw	30
  7099   003DE6  60DF               	cpfslt	indf2,c
  7100   003DE8  EFF8  F01E         	goto	u2701
  7101   003DEC  EFFA  F01E         	goto	u2700
  7102   003DF0                     u2701:
  7103   003DF0  EF06  F01F         	goto	l516
  7104   003DF4                     u2700:
  7105   003DF4  C016  FFD9         	movff	turnRight@mR,fsr2l
  7106   003DF8  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7107   003DFC  0E1D               	movlw	29
  7108   003DFE  64DF               	cpfsgt	indf2,c
  7109   003E00  EF04  F01F         	goto	u2711
  7110   003E04  EF06  F01F         	goto	u2710
  7111   003E08                     u2711:
  7112   003E08  EFCA  F01E         	goto	l3406
  7113   003E0C                     u2710:
  7114   003E0C                     l516:
  7115   003E0C  0012               	return		;funcret
  7116   003E0E                     __end_of_turnRight:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function _Timer0_init *****************
  7120 ;; Defined at:
  7121 ;;		line 8 in file "timers.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; Hardware stack levels required when called: 1
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text46
  7150   004CEE                     __ptext46:
  7151                           	callstack 0
  7152   004CEE                     _Timer0_init:
  7153                           	callstack 29
  7154   004CEE                     
  7155                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7156   004CEE  50D6               	movf	214,w,c	;volatile
  7157   004CF0  0B1F               	andlw	-225
  7158   004CF2  0940               	iorlw	64
  7159   004CF4  6ED6               	movwf	214,c	;volatile
  7160   004CF6                     
  7161                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7162   004CF6  88D6               	bsf	214,4,c	;volatile
  7163                           
  7164                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7165   004CF8  50D6               	movf	214,w,c	;volatile
  7166   004CFA  0BF0               	andlw	-16
  7167   004CFC  090E               	iorlw	14
  7168   004CFE  6ED6               	movwf	214,c	;volatile
  7169   004D00                     
  7170                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7171   004D00  88D5               	bsf	213,4,c	;volatile
  7172                           
  7173                           ;timers.c: 16:     TMR0H=0;
  7174   004D02  0E00               	movlw	0
  7175   004D04  6ED4               	movwf	212,c	;volatile
  7176                           
  7177                           ;timers.c: 17:     TMR0L=0;
  7178   004D06  0E00               	movlw	0
  7179   004D08  6ED3               	movwf	211,c	;volatile
  7180   004D0A                     
  7181                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7182   004D0A  8ED5               	bsf	213,7,c	;volatile
  7183   004D0C  0012               	return		;funcret
  7184   004D0E                     __end_of_Timer0_init:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _RetryMove *****************
  7188 ;; Defined at:
  7189 ;;		line 315 in file "dc_motor.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7192 ;;		 -> motorL(9), 
  7193 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7194 ;;		 -> motorR(9), 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;Total ram usage:        6 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 4
  7213 ;; This function calls:
  7214 ;;		_fullSpeedAhead
  7215 ;;		_fullSpeedBack
  7216 ;;		_stop
  7217 ;; This function is called by:
  7218 ;;		_main
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text47
  7223   00418C                     __ptext47:
  7224                           	callstack 0
  7225   00418C                     _RetryMove:
  7226                           	callstack 26
  7227   00418C                     
  7228                           ;dc_motor.c: 316:     fullSpeedBack(mL,mR);
  7229   00418C  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7230   004190  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7231   004194  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7232   004198  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7233   00419C  EC56  F01F         	call	_fullSpeedBack	;wreg free
  7234   0041A0                     
  7235                           ;dc_motor.c: 317:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7236   0041A0  0E29               	movlw	41
  7237   0041A2  6E1F               	movwf	(??_RetryMove+1)^0,c
  7238   0041A4  0E96               	movlw	150
  7239   0041A6  6E1E               	movwf	??_RetryMove^0,c
  7240   0041A8  0E7F               	movlw	127
  7241   0041AA                     u4817:
  7242   0041AA  2EE8               	decfsz	wreg,f,c
  7243   0041AC  D7FE               	bra	u4817
  7244   0041AE  2E1E               	decfsz	??_RetryMove^0,f,c
  7245   0041B0  D7FC               	bra	u4817
  7246   0041B2  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7247   0041B4  D7FA               	bra	u4817
  7248   0041B6  F000               	nop	
  7249   0041B8                     
  7250                           ;dc_motor.c: 318:     stop(&motorL, &motorR);
  7251   0041B8  0EF5               	movlw	low _motorL
  7252   0041BA  6E14               	movwf	stop@mL^0,c
  7253   0041BC  0E00               	movlw	high _motorL
  7254   0041BE  6E15               	movwf	(stop@mL+1)^0,c
  7255   0041C0  0EBE               	movlw	low _motorR
  7256   0041C2  6E16               	movwf	stop@mR^0,c
  7257   0041C4  0E01               	movlw	high _motorR
  7258   0041C6  6E17               	movwf	(stop@mR+1)^0,c
  7259   0041C8  EC07  F021         	call	_stop	;wreg free
  7260   0041CC                     
  7261                           ;dc_motor.c: 319:     fullSpeedAhead(mL,mR);
  7262   0041CC  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7263   0041D0  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7264   0041D4  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7265   0041D8  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7266   0041DC  ECA5  F01F         	call	_fullSpeedAhead	;wreg free
  7267   0041E0                     
  7268                           ;dc_motor.c: 320:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7269   0041E0  0E29               	movlw	41
  7270   0041E2  6E1F               	movwf	(??_RetryMove+1)^0,c
  7271   0041E4  0E96               	movlw	150
  7272   0041E6  6E1E               	movwf	??_RetryMove^0,c
  7273   0041E8  0E7F               	movlw	127
  7274   0041EA                     u4827:
  7275   0041EA  2EE8               	decfsz	wreg,f,c
  7276   0041EC  D7FE               	bra	u4827
  7277   0041EE  2E1E               	decfsz	??_RetryMove^0,f,c
  7278   0041F0  D7FC               	bra	u4827
  7279   0041F2  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7280   0041F4  D7FA               	bra	u4827
  7281   0041F6  F000               	nop	
  7282                           
  7283                           ;dc_motor.c: 321:     stop(&motorL, &motorR);
  7284   0041F8  0EF5               	movlw	low _motorL
  7285   0041FA  6E14               	movwf	stop@mL^0,c
  7286   0041FC  0E00               	movlw	high _motorL
  7287   0041FE  6E15               	movwf	(stop@mL+1)^0,c
  7288   004200  0EBE               	movlw	low _motorR
  7289   004202  6E16               	movwf	stop@mR^0,c
  7290   004204  0E01               	movlw	high _motorR
  7291   004206  6E17               	movwf	(stop@mR+1)^0,c
  7292   004208  EC07  F021         	call	_stop	;wreg free
  7293   00420C  0012               	return		;funcret
  7294   00420E                     __end_of_RetryMove:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _PinkMove *****************
  7298 ;; Defined at:
  7299 ;;		line 288 in file "dc_motor.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7302 ;;		 -> motorL(9), 
  7303 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7304 ;;		 -> motorR(9), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;Total ram usage:        4 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; Hardware stack levels required when called: 5
  7323 ;; This function calls:
  7324 ;;		_reverseDetect
  7325 ;;		_reverseOneBlock
  7326 ;;		_turnLeft45
  7327 ;; This function is called by:
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text48
  7333   004860                     __ptext48:
  7334                           	callstack 0
  7335   004860                     _PinkMove:
  7336                           	callstack 25
  7337   004860                     
  7338                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7339   004860  0EF5               	movlw	low _motorL
  7340   004862  6E1A               	movwf	reverseDetect@mL^0,c
  7341   004864  0E00               	movlw	high _motorL
  7342   004866  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7343   004868  0EBE               	movlw	low _motorR
  7344   00486A  6E1C               	movwf	reverseDetect@mR^0,c
  7345   00486C  0E01               	movlw	high _motorR
  7346   00486E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7347   004870  ECB1  F022         	call	_reverseDetect	;wreg free
  7348                           
  7349                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7350   004874  0EF5               	movlw	low _motorL
  7351   004876  6E1A               	movwf	reverseOneBlock@mL^0,c
  7352   004878  0E00               	movlw	high _motorL
  7353   00487A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7354   00487C  0EBE               	movlw	low _motorR
  7355   00487E  6E1C               	movwf	reverseOneBlock@mR^0,c
  7356   004880  0E01               	movlw	high _motorR
  7357   004882  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7358   004884  EC84  F022         	call	_reverseOneBlock	;wreg free
  7359                           
  7360                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
  7361   004888  0EF5               	movlw	low _motorL
  7362   00488A  6E1A               	movwf	turnLeft45@mL^0,c
  7363   00488C  0E00               	movlw	high _motorL
  7364   00488E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7365   004890  0EBE               	movlw	low _motorR
  7366   004892  6E1C               	movwf	turnLeft45@mR^0,c
  7367   004894  0E01               	movlw	high _motorR
  7368   004896  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7369   004898  EC37  F023         	call	_turnLeft45	;wreg free
  7370                           
  7371                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
  7372   00489C  0EF5               	movlw	low _motorL
  7373   00489E  6E1A               	movwf	turnLeft45@mL^0,c
  7374   0048A0  0E00               	movlw	high _motorL
  7375   0048A2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7376   0048A4  0EBE               	movlw	low _motorR
  7377   0048A6  6E1C               	movwf	turnLeft45@mR^0,c
  7378   0048A8  0E01               	movlw	high _motorR
  7379   0048AA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7380   0048AC  EC37  F023         	call	_turnLeft45	;wreg free
  7381   0048B0  0012               	return		;funcret
  7382   0048B2                     __end_of_PinkMove:
  7383                           	callstack 0
  7384                           
  7385 ;; *************** function _turnLeft45 *****************
  7386 ;; Defined at:
  7387 ;;		line 208 in file "dc_motor.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7390 ;;		 -> motorL(9), 
  7391 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7392 ;;		 -> motorR(9), 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;Total ram usage:        6 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 4
  7411 ;; This function calls:
  7412 ;;		_stop
  7413 ;;		_turnLeft
  7414 ;; This function is called by:
  7415 ;;		_GreenMove
  7416 ;;		_PinkMove
  7417 ;;		_LightBlueMove
  7418 ;;		_ReversePink
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text49
  7423   00466E                     __ptext49:
  7424                           	callstack 0
  7425   00466E                     _turnLeft45:
  7426                           	callstack 24
  7427   00466E                     
  7428                           ;dc_motor.c: 209:     turnLeft(mL,mR);
  7429   00466E  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7430   004672  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7431   004676  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7432   00467A  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7433   00467E  EC07  F01F         	call	_turnLeft	;wreg free
  7434   004682                     
  7435                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7436   004682  0E12               	movlw	18
  7437   004684  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7438   004686  0EDC               	movlw	220
  7439   004688  6E1E               	movwf	??_turnLeft45^0,c
  7440   00468A  0E60               	movlw	96
  7441   00468C                     u4837:
  7442   00468C  2EE8               	decfsz	wreg,f,c
  7443   00468E  D7FE               	bra	u4837
  7444   004690  2E1E               	decfsz	??_turnLeft45^0,f,c
  7445   004692  D7FC               	bra	u4837
  7446   004694  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7447   004696  D7FA               	bra	u4837
  7448   004698                     
  7449                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7450   004698  0EF5               	movlw	low _motorL
  7451   00469A  6E14               	movwf	stop@mL^0,c
  7452   00469C  0E00               	movlw	high _motorL
  7453   00469E  6E15               	movwf	(stop@mL+1)^0,c
  7454   0046A0  0EBE               	movlw	low _motorR
  7455   0046A2  6E16               	movwf	stop@mR^0,c
  7456   0046A4  0E01               	movlw	high _motorR
  7457   0046A6  6E17               	movwf	(stop@mR+1)^0,c
  7458   0046A8  EC07  F021         	call	_stop	;wreg free
  7459                           
  7460                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7461   0046AC  0E52               	movlw	82
  7462   0046AE  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7463   0046B0  0E2B               	movlw	43
  7464   0046B2  6E1E               	movwf	??_turnLeft45^0,c
  7465   0046B4  0E00               	movlw	0
  7466   0046B6                     u4847:
  7467   0046B6  2EE8               	decfsz	wreg,f,c
  7468   0046B8  D7FE               	bra	u4847
  7469   0046BA  2E1E               	decfsz	??_turnLeft45^0,f,c
  7470   0046BC  D7FC               	bra	u4847
  7471   0046BE  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7472   0046C0  D7FA               	bra	u4847
  7473   0046C2  D000               	nop2	
  7474   0046C4  0012               	return		;funcret
  7475   0046C6                     __end_of_turnLeft45:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function _turnLeft *****************
  7479 ;; Defined at:
  7480 ;;		line 110 in file "dc_motor.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7483 ;;		 -> motorL(9), 
  7484 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7485 ;;		 -> motorR(9), 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;Total ram usage:        6 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 3
  7504 ;; This function calls:
  7505 ;;		_setMotorPWM
  7506 ;; This function is called by:
  7507 ;;		_turnLeft45
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text50
  7512   003E0E                     __ptext50:
  7513                           	callstack 0
  7514   003E0E                     _turnLeft:
  7515                           	callstack 24
  7516   003E0E                     
  7517                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7518   003E0E  EE20 F001          	lfsr	2,1
  7519   003E12  5014               	movf	turnLeft@mL^0,w,c
  7520   003E14  26D9               	addwf	fsr2l,f,c
  7521   003E16  5015               	movf	(turnLeft@mL+1)^0,w,c
  7522   003E18  22DA               	addwfc	fsr2h,f,c
  7523   003E1A  0E00               	movlw	0
  7524   003E1C  6EDF               	movwf	indf2,c
  7525                           
  7526                           ;dc_motor.c: 113:     mR->direction =1;
  7527   003E1E  EE20 F001          	lfsr	2,1
  7528   003E22  5016               	movf	turnLeft@mR^0,w,c
  7529   003E24  26D9               	addwf	fsr2l,f,c
  7530   003E26  5017               	movf	(turnLeft@mR+1)^0,w,c
  7531   003E28  22DA               	addwfc	fsr2h,f,c
  7532   003E2A  0E01               	movlw	1
  7533   003E2C  6EDF               	movwf	indf2,c
  7534                           
  7535                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7536   003E2E  EF3D  F01F         	goto	l3400
  7537   003E32                     l3392:
  7538                           
  7539                           ;dc_motor.c: 117:         mL->power+=10;
  7540   003E32  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7541   003E36  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7542   003E3A  0E0A               	movlw	10
  7543   003E3C  26DF               	addwf	indf2,f,c
  7544                           
  7545                           ;dc_motor.c: 118:         mR->power+=10;
  7546   003E3E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7547   003E42  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7548   003E46  0E0A               	movlw	10
  7549   003E48  26DF               	addwf	indf2,f,c
  7550   003E4A                     
  7551                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7552   003E4A  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7553   003E4E  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7554   003E52  EC17  F01B         	call	_setMotorPWM	;wreg free
  7555   003E56                     
  7556                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7557   003E56  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7558   003E5A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7559   003E5E  EC17  F01B         	call	_setMotorPWM	;wreg free
  7560   003E62                     
  7561                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7562   003E62  0E02               	movlw	2
  7563   003E64  6E19               	movwf	(??_turnLeft+1)^0,c
  7564   003E66  0EA0               	movlw	160
  7565   003E68  6E18               	movwf	??_turnLeft^0,c
  7566   003E6A  0E92               	movlw	146
  7567   003E6C                     u4857:
  7568   003E6C  2EE8               	decfsz	wreg,f,c
  7569   003E6E  D7FE               	bra	u4857
  7570   003E70  2E18               	decfsz	??_turnLeft^0,f,c
  7571   003E72  D7FC               	bra	u4857
  7572   003E74  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7573   003E76  D7FA               	bra	u4857
  7574   003E78  D000               	nop2	
  7575   003E7A                     l3400:
  7576   003E7A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7577   003E7E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7578   003E82  0E1E               	movlw	30
  7579   003E84  60DF               	cpfslt	indf2,c
  7580   003E86  EF47  F01F         	goto	u2681
  7581   003E8A  EF49  F01F         	goto	u2680
  7582   003E8E                     u2681:
  7583   003E8E  EF55  F01F         	goto	l508
  7584   003E92                     u2680:
  7585   003E92  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7586   003E96  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7587   003E9A  0E1D               	movlw	29
  7588   003E9C  64DF               	cpfsgt	indf2,c
  7589   003E9E  EF53  F01F         	goto	u2691
  7590   003EA2  EF55  F01F         	goto	u2690
  7591   003EA6                     u2691:
  7592   003EA6  EF19  F01F         	goto	l3392
  7593   003EAA                     u2690:
  7594   003EAA                     l508:
  7595   003EAA  0012               	return		;funcret
  7596   003EAC                     __end_of_turnLeft:
  7597                           	callstack 0
  7598                           
  7599 ;; *************** function _reverseOneBlock *****************
  7600 ;; Defined at:
  7601 ;;		line 222 in file "dc_motor.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7604 ;;		 -> motorL(9), 
  7605 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7606 ;;		 -> motorR(9), 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;Total ram usage:        6 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; Hardware stack levels required when called: 4
  7625 ;; This function calls:
  7626 ;;		_fullSpeedBack
  7627 ;;		_stop
  7628 ;; This function is called by:
  7629 ;;		_YellowMove
  7630 ;;		_PinkMove
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text51
  7635   004508                     __ptext51:
  7636                           	callstack 0
  7637   004508                     _reverseOneBlock:
  7638                           	callstack 25
  7639   004508                     
  7640                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
  7641   004508  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7642   00450C  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7643   004510  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7644   004514  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7645   004518  EC56  F01F         	call	_fullSpeedBack	;wreg free
  7646   00451C                     
  7647                           ;dc_motor.c: 224:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7648   00451C  0EA3               	movlw	163
  7649   00451E  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7650   004520  0E57               	movlw	87
  7651   004522  6E1E               	movwf	??_reverseOneBlock^0,c
  7652   004524  0E02               	movlw	2
  7653   004526                     u4867:
  7654   004526  2EE8               	decfsz	wreg,f,c
  7655   004528  D7FE               	bra	u4867
  7656   00452A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7657   00452C  D7FC               	bra	u4867
  7658   00452E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7659   004530  D7FA               	bra	u4867
  7660   004532  D000               	nop2	
  7661   004534                     
  7662                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
  7663   004534  0EF5               	movlw	low _motorL
  7664   004536  6E14               	movwf	stop@mL^0,c
  7665   004538  0E00               	movlw	high _motorL
  7666   00453A  6E15               	movwf	(stop@mL+1)^0,c
  7667   00453C  0EBE               	movlw	low _motorR
  7668   00453E  6E16               	movwf	stop@mR^0,c
  7669   004540  0E01               	movlw	high _motorR
  7670   004542  6E17               	movwf	(stop@mR+1)^0,c
  7671   004544  EC07  F021         	call	_stop	;wreg free
  7672                           
  7673                           ;dc_motor.c: 226:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7674   004548  0E52               	movlw	82
  7675   00454A  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7676   00454C  0E2B               	movlw	43
  7677   00454E  6E1E               	movwf	??_reverseOneBlock^0,c
  7678   004550  0E00               	movlw	0
  7679   004552                     u4877:
  7680   004552  2EE8               	decfsz	wreg,f,c
  7681   004554  D7FE               	bra	u4877
  7682   004556  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7683   004558  D7FC               	bra	u4877
  7684   00455A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7685   00455C  D7FA               	bra	u4877
  7686   00455E  D000               	nop2	
  7687   004560  0012               	return		;funcret
  7688   004562                     __end_of_reverseOneBlock:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _reverseDetect *****************
  7692 ;; Defined at:
  7693 ;;		line 215 in file "dc_motor.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7696 ;;		 -> motorL(9), 
  7697 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7698 ;;		 -> motorR(9), 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;Total ram usage:        6 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 4
  7717 ;; This function calls:
  7718 ;;		_fullSpeedBack
  7719 ;;		_stop
  7720 ;; This function is called by:
  7721 ;;		_RedMove
  7722 ;;		_GreenMove
  7723 ;;		_BlueMove
  7724 ;;		_YellowMove
  7725 ;;		_PinkMove
  7726 ;;		_OrangeMove
  7727 ;;		_LightBlueMove
  7728 ;;		_go_Home
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text52
  7733   004562                     __ptext52:
  7734                           	callstack 0
  7735   004562                     _reverseDetect:
  7736                           	callstack 25
  7737   004562                     
  7738                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
  7739   004562  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7740   004566  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7741   00456A  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7742   00456E  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7743   004572  EC56  F01F         	call	_fullSpeedBack	;wreg free
  7744   004576                     
  7745                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7746   004576  0E11               	movlw	17
  7747   004578  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7748   00457A  0E3C               	movlw	60
  7749   00457C  6E1E               	movwf	??_reverseDetect^0,c
  7750   00457E  0ECB               	movlw	203
  7751   004580                     u4887:
  7752   004580  2EE8               	decfsz	wreg,f,c
  7753   004582  D7FE               	bra	u4887
  7754   004584  2E1E               	decfsz	??_reverseDetect^0,f,c
  7755   004586  D7FC               	bra	u4887
  7756   004588  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7757   00458A  D7FA               	bra	u4887
  7758   00458C  F000               	nop	
  7759   00458E                     
  7760                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  7761   00458E  0EF5               	movlw	low _motorL
  7762   004590  6E14               	movwf	stop@mL^0,c
  7763   004592  0E00               	movlw	high _motorL
  7764   004594  6E15               	movwf	(stop@mL+1)^0,c
  7765   004596  0EBE               	movlw	low _motorR
  7766   004598  6E16               	movwf	stop@mR^0,c
  7767   00459A  0E01               	movlw	high _motorR
  7768   00459C  6E17               	movwf	(stop@mR+1)^0,c
  7769   00459E  EC07  F021         	call	_stop	;wreg free
  7770                           
  7771                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7772   0045A2  0E52               	movlw	82
  7773   0045A4  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7774   0045A6  0E2B               	movlw	43
  7775   0045A8  6E1E               	movwf	??_reverseDetect^0,c
  7776   0045AA  0E00               	movlw	0
  7777   0045AC                     u4897:
  7778   0045AC  2EE8               	decfsz	wreg,f,c
  7779   0045AE  D7FE               	bra	u4897
  7780   0045B0  2E1E               	decfsz	??_reverseDetect^0,f,c
  7781   0045B2  D7FC               	bra	u4897
  7782   0045B4  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7783   0045B6  D7FA               	bra	u4897
  7784   0045B8  D000               	nop2	
  7785   0045BA  0012               	return		;funcret
  7786   0045BC                     __end_of_reverseDetect:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _fullSpeedBack *****************
  7790 ;; Defined at:
  7791 ;;		line 184 in file "dc_motor.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7794 ;;		 -> motorL(9), 
  7795 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7796 ;;		 -> motorR(9), 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;Total ram usage:        6 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 3
  7815 ;; This function calls:
  7816 ;;		_setMotorPWM
  7817 ;; This function is called by:
  7818 ;;		_reverseDetect
  7819 ;;		_reverseOneBlock
  7820 ;;		_RetryMove
  7821 ;;		_Backhalfblock
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text53
  7826   003EAC                     __ptext53:
  7827                           	callstack 0
  7828   003EAC                     _fullSpeedBack:
  7829                           	callstack 25
  7830   003EAC                     
  7831                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
  7832   003EAC  EE20 F001          	lfsr	2,1
  7833   003EB0  5014               	movf	fullSpeedBack@mL^0,w,c
  7834   003EB2  26D9               	addwf	fsr2l,f,c
  7835   003EB4  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7836   003EB6  22DA               	addwfc	fsr2h,f,c
  7837   003EB8  0E00               	movlw	0
  7838   003EBA  6EDF               	movwf	indf2,c
  7839                           
  7840                           ;dc_motor.c: 188:     mR->direction =0;
  7841   003EBC  EE20 F001          	lfsr	2,1
  7842   003EC0  5016               	movf	fullSpeedBack@mR^0,w,c
  7843   003EC2  26D9               	addwf	fsr2l,f,c
  7844   003EC4  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7845   003EC6  22DA               	addwfc	fsr2h,f,c
  7846   003EC8  0E00               	movlw	0
  7847   003ECA  6EDF               	movwf	indf2,c
  7848                           
  7849                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
  7850   003ECC  EF8C  F01F         	goto	l3428
  7851   003ED0                     l3420:
  7852                           
  7853                           ;dc_motor.c: 191:         mL->power+=10;
  7854   003ED0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7855   003ED4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7856   003ED8  0E0A               	movlw	10
  7857   003EDA  26DF               	addwf	indf2,f,c
  7858                           
  7859                           ;dc_motor.c: 192:         mR->power+=10;
  7860   003EDC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7861   003EE0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7862   003EE4  0E0A               	movlw	10
  7863   003EE6  26DF               	addwf	indf2,f,c
  7864   003EE8                     
  7865                           ;dc_motor.c: 194:         setMotorPWM(mL);
  7866   003EE8  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7867   003EEC  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7868   003EF0  EC17  F01B         	call	_setMotorPWM	;wreg free
  7869   003EF4                     
  7870                           ;dc_motor.c: 195:         setMotorPWM(mR);
  7871   003EF4  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7872   003EF8  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7873   003EFC  EC17  F01B         	call	_setMotorPWM	;wreg free
  7874   003F00                     
  7875                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7876   003F00  0E02               	movlw	2
  7877   003F02  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7878   003F04  0EA0               	movlw	160
  7879   003F06  6E18               	movwf	??_fullSpeedBack^0,c
  7880   003F08  0E92               	movlw	146
  7881   003F0A                     u4907:
  7882   003F0A  2EE8               	decfsz	wreg,f,c
  7883   003F0C  D7FE               	bra	u4907
  7884   003F0E  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7885   003F10  D7FC               	bra	u4907
  7886   003F12  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7887   003F14  D7FA               	bra	u4907
  7888   003F16  D000               	nop2	
  7889   003F18                     l3428:
  7890   003F18  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7891   003F1C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7892   003F20  0E1E               	movlw	30
  7893   003F22  60DF               	cpfslt	indf2,c
  7894   003F24  EF96  F01F         	goto	u2721
  7895   003F28  EF98  F01F         	goto	u2720
  7896   003F2C                     u2721:
  7897   003F2C  EFA4  F01F         	goto	l540
  7898   003F30                     u2720:
  7899   003F30  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7900   003F34  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7901   003F38  0E1D               	movlw	29
  7902   003F3A  64DF               	cpfsgt	indf2,c
  7903   003F3C  EFA2  F01F         	goto	u2731
  7904   003F40  EFA4  F01F         	goto	u2730
  7905   003F44                     u2731:
  7906   003F44  EF68  F01F         	goto	l3420
  7907   003F48                     u2730:
  7908   003F48                     l540:
  7909   003F48  0012               	return		;funcret
  7910   003F4A                     __end_of_fullSpeedBack:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function _Interrupts_init *****************
  7914 ;; Defined at:
  7915 ;;		line 12 in file "interrupts.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		None
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_main
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text54
  7944   004D78                     __ptext54:
  7945                           	callstack 0
  7946   004D78                     _Interrupts_init:
  7947                           	callstack 29
  7948   004D78  0012               	return		;funcret
  7949   004D7A                     __end_of_Interrupts_init:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _Forwardhalfblock *****************
  7953 ;; Defined at:
  7954 ;;		line 235 in file "dc_motor.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7957 ;;		 -> motorL(9), 
  7958 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7959 ;;		 -> motorR(9), 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      void 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;Total ram usage:        6 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; Hardware stack levels required when called: 4
  7978 ;; This function calls:
  7979 ;;		_fullSpeedAhead
  7980 ;;		_stop
  7981 ;; This function is called by:
  7982 ;;		_main
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text55
  7987   0045BC                     __ptext55:
  7988                           	callstack 0
  7989   0045BC                     _Forwardhalfblock:
  7990                           	callstack 26
  7991   0045BC                     
  7992                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
  7993   0045BC  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  7994   0045C0  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  7995   0045C4  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  7996   0045C8  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  7997   0045CC  ECA5  F01F         	call	_fullSpeedAhead	;wreg free
  7998   0045D0                     
  7999                           ;dc_motor.c: 237:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  8000   0045D0  0E52               	movlw	82
  8001   0045D2  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8002   0045D4  0E2B               	movlw	43
  8003   0045D6  6E1E               	movwf	??_Forwardhalfblock^0,c
  8004   0045D8  0E00               	movlw	0
  8005   0045DA                     u4917:
  8006   0045DA  2EE8               	decfsz	wreg,f,c
  8007   0045DC  D7FE               	bra	u4917
  8008   0045DE  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8009   0045E0  D7FC               	bra	u4917
  8010   0045E2  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8011   0045E4  D7FA               	bra	u4917
  8012   0045E6  D000               	nop2	
  8013   0045E8                     
  8014                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
  8015   0045E8  0EF5               	movlw	low _motorL
  8016   0045EA  6E14               	movwf	stop@mL^0,c
  8017   0045EC  0E00               	movlw	high _motorL
  8018   0045EE  6E15               	movwf	(stop@mL+1)^0,c
  8019   0045F0  0EBE               	movlw	low _motorR
  8020   0045F2  6E16               	movwf	stop@mR^0,c
  8021   0045F4  0E01               	movlw	high _motorR
  8022   0045F6  6E17               	movwf	(stop@mR+1)^0,c
  8023   0045F8  EC07  F021         	call	_stop	;wreg free
  8024                           
  8025                           ;dc_motor.c: 239:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8026   0045FC  0E52               	movlw	82
  8027   0045FE  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8028   004600  0E2B               	movlw	43
  8029   004602  6E1E               	movwf	??_Forwardhalfblock^0,c
  8030   004604  0E00               	movlw	0
  8031   004606                     u4927:
  8032   004606  2EE8               	decfsz	wreg,f,c
  8033   004608  D7FE               	bra	u4927
  8034   00460A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8035   00460C  D7FC               	bra	u4927
  8036   00460E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8037   004610  D7FA               	bra	u4927
  8038   004612  D000               	nop2	
  8039   004614  0012               	return		;funcret
  8040   004616                     __end_of_Forwardhalfblock:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _stop *****************
  8044 ;; Defined at:
  8045 ;;		line 92 in file "dc_motor.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8048 ;;		 -> motorL(9), 
  8049 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8050 ;;		 -> motorR(9), 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8065 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;Total ram usage:        6 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 3
  8069 ;; This function calls:
  8070 ;;		_setMotorPWM
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;;		_turnRight45
  8074 ;;		_turnLeft45
  8075 ;;		_reverseDetect
  8076 ;;		_reverseOneBlock
  8077 ;;		_ForwardOneBlock
  8078 ;;		_Forwardhalfblock
  8079 ;;		_RetryMove
  8080 ;;		_Backhalfblock
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text56
  8085   00420E                     __ptext56:
  8086                           	callstack 0
  8087   00420E                     _stop:
  8088                           	callstack 27
  8089   00420E                     
  8090                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  8091   00420E  EF2D  F021         	goto	l3386
  8092   004212                     l3378:
  8093                           
  8094                           ;dc_motor.c: 96:         mL->power-=10;
  8095   004212  C014  FFD9         	movff	stop@mL,fsr2l
  8096   004216  C015  FFDA         	movff	stop@mL+1,fsr2h
  8097   00421A  0E0A               	movlw	10
  8098   00421C  5EDF               	subwf	indf2,f,c
  8099                           
  8100                           ;dc_motor.c: 97:         mR->power-=10;
  8101   00421E  C016  FFD9         	movff	stop@mR,fsr2l
  8102   004222  C017  FFDA         	movff	stop@mR+1,fsr2h
  8103   004226  0E0A               	movlw	10
  8104   004228  5EDF               	subwf	indf2,f,c
  8105   00422A                     
  8106                           ;dc_motor.c: 102:         setMotorPWM(mL);
  8107   00422A  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8108   00422E  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8109   004232  EC17  F01B         	call	_setMotorPWM	;wreg free
  8110   004236                     
  8111                           ;dc_motor.c: 103:         setMotorPWM(mR);
  8112   004236  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8113   00423A  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8114   00423E  EC17  F01B         	call	_setMotorPWM	;wreg free
  8115   004242                     
  8116                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8117   004242  0E02               	movlw	2
  8118   004244  6E19               	movwf	(??_stop+1)^0,c
  8119   004246  0EA0               	movlw	160
  8120   004248  6E18               	movwf	??_stop^0,c
  8121   00424A  0E92               	movlw	146
  8122   00424C                     u4937:
  8123   00424C  2EE8               	decfsz	wreg,f,c
  8124   00424E  D7FE               	bra	u4937
  8125   004250  2E18               	decfsz	??_stop^0,f,c
  8126   004252  D7FC               	bra	u4937
  8127   004254  2E19               	decfsz	(??_stop+1)^0,f,c
  8128   004256  D7FA               	bra	u4937
  8129   004258  D000               	nop2	
  8130   00425A                     l3386:
  8131                           
  8132                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  8133   00425A  C014  FFD9         	movff	stop@mL,fsr2l
  8134   00425E  C015  FFDA         	movff	stop@mL+1,fsr2h
  8135   004262  50DF               	movf	indf2,w,c
  8136   004264  A4D8               	btfss	status,2,c
  8137   004266  EF37  F021         	goto	u2661
  8138   00426A  EF39  F021         	goto	u2660
  8139   00426E                     u2661:
  8140   00426E  EF09  F021         	goto	l3378
  8141   004272                     u2660:
  8142   004272  C016  FFD9         	movff	stop@mR,fsr2l
  8143   004276  C017  FFDA         	movff	stop@mR+1,fsr2h
  8144   00427A  50DF               	movf	indf2,w,c
  8145   00427C  A4D8               	btfss	status,2,c
  8146   00427E  EF43  F021         	goto	u2671
  8147   004282  EF45  F021         	goto	u2670
  8148   004286                     u2671:
  8149   004286  EF09  F021         	goto	l3378
  8150   00428A                     u2670:
  8151   00428A  0012               	return		;funcret
  8152   00428C                     __end_of_stop:
  8153                           	callstack 0
  8154                           
  8155 ;; *************** function _fullSpeedAhead *****************
  8156 ;; Defined at:
  8157 ;;		line 146 in file "dc_motor.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8160 ;;		 -> motorL(9), 
  8161 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8162 ;;		 -> motorR(9), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;Total ram usage:        6 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 3
  8181 ;; This function calls:
  8182 ;;		_setMotorPWM
  8183 ;; This function is called by:
  8184 ;;		_main
  8185 ;;		_ForwardOneBlock
  8186 ;;		_Forwardhalfblock
  8187 ;;		_RetryMove
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text57
  8192   003F4A                     __ptext57:
  8193                           	callstack 0
  8194   003F4A                     _fullSpeedAhead:
  8195                           	callstack 24
  8196   003F4A                     
  8197                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  8198   003F4A  EE20 F001          	lfsr	2,1
  8199   003F4E  5014               	movf	fullSpeedAhead@mL^0,w,c
  8200   003F50  26D9               	addwf	fsr2l,f,c
  8201   003F52  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8202   003F54  22DA               	addwfc	fsr2h,f,c
  8203   003F56  0E01               	movlw	1
  8204   003F58  6EDF               	movwf	indf2,c
  8205                           
  8206                           ;dc_motor.c: 150:     mR->direction =1;
  8207   003F5A  EE20 F001          	lfsr	2,1
  8208   003F5E  5016               	movf	fullSpeedAhead@mR^0,w,c
  8209   003F60  26D9               	addwf	fsr2l,f,c
  8210   003F62  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8211   003F64  22DA               	addwfc	fsr2h,f,c
  8212   003F66  0E01               	movlw	1
  8213   003F68  6EDF               	movwf	indf2,c
  8214                           
  8215                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  8216   003F6A  EFDB  F01F         	goto	l3372
  8217   003F6E                     l3364:
  8218                           
  8219                           ;dc_motor.c: 153:         mL->power+=10;
  8220   003F6E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8221   003F72  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8222   003F76  0E0A               	movlw	10
  8223   003F78  26DF               	addwf	indf2,f,c
  8224                           
  8225                           ;dc_motor.c: 154:         mR->power+=10;
  8226   003F7A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8227   003F7E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8228   003F82  0E0A               	movlw	10
  8229   003F84  26DF               	addwf	indf2,f,c
  8230   003F86                     
  8231                           ;dc_motor.c: 156:         setMotorPWM(mL);
  8232   003F86  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8233   003F8A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8234   003F8E  EC17  F01B         	call	_setMotorPWM	;wreg free
  8235   003F92                     
  8236                           ;dc_motor.c: 157:         setMotorPWM(mR);
  8237   003F92  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8238   003F96  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8239   003F9A  EC17  F01B         	call	_setMotorPWM	;wreg free
  8240   003F9E                     
  8241                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8242   003F9E  0E02               	movlw	2
  8243   003FA0  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8244   003FA2  0EA0               	movlw	160
  8245   003FA4  6E18               	movwf	??_fullSpeedAhead^0,c
  8246   003FA6  0E92               	movlw	146
  8247   003FA8                     u4947:
  8248   003FA8  2EE8               	decfsz	wreg,f,c
  8249   003FAA  D7FE               	bra	u4947
  8250   003FAC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8251   003FAE  D7FC               	bra	u4947
  8252   003FB0  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8253   003FB2  D7FA               	bra	u4947
  8254   003FB4  D000               	nop2	
  8255   003FB6                     l3372:
  8256   003FB6  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8257   003FBA  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8258   003FBE  0E1E               	movlw	30
  8259   003FC0  60DF               	cpfslt	indf2,c
  8260   003FC2  EFE5  F01F         	goto	u2641
  8261   003FC6  EFE7  F01F         	goto	u2640
  8262   003FCA                     u2641:
  8263   003FCA  EFF3  F01F         	goto	l524
  8264   003FCE                     u2640:
  8265   003FCE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8266   003FD2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8267   003FD6  0E1D               	movlw	29
  8268   003FD8  64DF               	cpfsgt	indf2,c
  8269   003FDA  EFF1  F01F         	goto	u2651
  8270   003FDE  EFF3  F01F         	goto	u2650
  8271   003FE2                     u2651:
  8272   003FE2  EFB7  F01F         	goto	l3364
  8273   003FE6                     u2650:
  8274   003FE6                     l524:
  8275   003FE6  0012               	return		;funcret
  8276   003FE8                     __end_of_fullSpeedAhead:
  8277                           	callstack 0
  8278                           
  8279 ;; *************** function _setMotorPWM *****************
  8280 ;; Defined at:
  8281 ;;		line 67 in file "dc_motor.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8284 ;;		 -> motorR(9), motorL(9), 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  negDuty         1   18[COMRAM] unsigned char 
  8287 ;;  posDuty         1   17[COMRAM] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;Total ram usage:        6 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 2
  8304 ;; This function calls:
  8305 ;;		___lwdiv
  8306 ;;		___wmul
  8307 ;; This function is called by:
  8308 ;;		_stop
  8309 ;;		_turnLeft
  8310 ;;		_turnRight
  8311 ;;		_fullSpeedAhead
  8312 ;;		_timed_forward
  8313 ;;		_fullSpeedBack
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text58
  8318   00362E                     __ptext58:
  8319                           	callstack 0
  8320   00362E                     _setMotorPWM:
  8321                           	callstack 27
  8322   00362E                     
  8323                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  8324   00362E  EE20 F002          	lfsr	2,2
  8325   003632  500E               	movf	setMotorPWM@m^0,w,c
  8326   003634  26D9               	addwf	fsr2l,f,c
  8327   003636  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8328   003638  22DA               	addwfc	fsr2h,f,c
  8329   00363A  50DF               	movf	indf2,w,c
  8330   00363C  B4D8               	btfsc	status,2,c
  8331   00363E  EF23  F01B         	goto	u2441
  8332   003642  EF25  F01B         	goto	u2440
  8333   003646                     u2441:
  8334   003646  EF59  F01B         	goto	l3250
  8335   00364A                     u2440:
  8336   00364A                     
  8337                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8338   00364A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8339   00364E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8340   003652  50DF               	movf	indf2,w,c
  8341   003654  6E10               	movwf	??_setMotorPWM^0,c
  8342   003656  5010               	movf	??_setMotorPWM^0,w,c
  8343   003658  6E01               	movwf	___wmul@multiplier^0,c
  8344   00365A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8345   00365C  EE20 F003          	lfsr	2,3
  8346   003660  500E               	movf	setMotorPWM@m^0,w,c
  8347   003662  26D9               	addwf	fsr2l,f,c
  8348   003664  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8349   003666  22DA               	addwfc	fsr2h,f,c
  8350   003668  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8351   00366C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8352   003670  EC54  F026         	call	___wmul	;wreg free
  8353   003674  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8354   003678  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8355   00367C  0E00               	movlw	0
  8356   00367E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8357   003680  0E64               	movlw	100
  8358   003682  6E09               	movwf	___lwdiv@divisor^0,c
  8359   003684  EC83  F021         	call	___lwdiv	;wreg free
  8360   003688  EE20 F003          	lfsr	2,3
  8361   00368C  500E               	movf	setMotorPWM@m^0,w,c
  8362   00368E  26D9               	addwf	fsr2l,f,c
  8363   003690  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8364   003692  22DA               	addwfc	fsr2h,f,c
  8365   003694  50DF               	movf	indf2,w,c
  8366   003696  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8367   003698  5007               	movf	?___lwdiv^0,w,c
  8368   00369A  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8369   00369C  6E12               	movwf	setMotorPWM@posDuty^0,c
  8370   00369E                     
  8371                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  8372   00369E  EE20 F003          	lfsr	2,3
  8373   0036A2  500E               	movf	setMotorPWM@m^0,w,c
  8374   0036A4  26D9               	addwf	fsr2l,f,c
  8375   0036A6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8376   0036A8  22DA               	addwfc	fsr2h,f,c
  8377   0036AA  50DF               	movf	indf2,w,c
  8378   0036AC  6E13               	movwf	setMotorPWM@negDuty^0,c
  8379                           
  8380                           ;dc_motor.c: 74:     }
  8381   0036AE  EF7C  F01B         	goto	l3254
  8382   0036B2                     l3250:
  8383                           
  8384                           ;dc_motor.c: 76:         posDuty=0;
  8385   0036B2  0E00               	movlw	0
  8386   0036B4  6E12               	movwf	setMotorPWM@posDuty^0,c
  8387   0036B6                     
  8388                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8389   0036B6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8390   0036BA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8391   0036BE  50DF               	movf	indf2,w,c
  8392   0036C0  6E10               	movwf	??_setMotorPWM^0,c
  8393   0036C2  5010               	movf	??_setMotorPWM^0,w,c
  8394   0036C4  6E01               	movwf	___wmul@multiplier^0,c
  8395   0036C6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8396   0036C8  EE20 F003          	lfsr	2,3
  8397   0036CC  500E               	movf	setMotorPWM@m^0,w,c
  8398   0036CE  26D9               	addwf	fsr2l,f,c
  8399   0036D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8400   0036D2  22DA               	addwfc	fsr2h,f,c
  8401   0036D4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8402   0036D8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8403   0036DC  EC54  F026         	call	___wmul	;wreg free
  8404   0036E0  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8405   0036E4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8406   0036E8  0E00               	movlw	0
  8407   0036EA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8408   0036EC  0E64               	movlw	100
  8409   0036EE  6E09               	movwf	___lwdiv@divisor^0,c
  8410   0036F0  EC83  F021         	call	___lwdiv	;wreg free
  8411   0036F4  5007               	movf	?___lwdiv^0,w,c
  8412   0036F6  6E13               	movwf	setMotorPWM@negDuty^0,c
  8413   0036F8                     l3254:
  8414                           
  8415                           ;dc_motor.c: 80:     if (m->direction) {
  8416   0036F8  EE20 F001          	lfsr	2,1
  8417   0036FC  500E               	movf	setMotorPWM@m^0,w,c
  8418   0036FE  26D9               	addwf	fsr2l,f,c
  8419   003700  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8420   003702  22DA               	addwfc	fsr2h,f,c
  8421   003704  50DF               	movf	indf2,w,c
  8422   003706  B4D8               	btfsc	status,2,c
  8423   003708  EF88  F01B         	goto	u2451
  8424   00370C  EF8A  F01B         	goto	u2450
  8425   003710                     u2451:
  8426   003710  EFAC  F01B         	goto	l3258
  8427   003714                     u2450:
  8428   003714                     
  8429                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8430   003714  EE20 F005          	lfsr	2,5
  8431   003718  500E               	movf	setMotorPWM@m^0,w,c
  8432   00371A  26D9               	addwf	fsr2l,f,c
  8433   00371C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8434   00371E  22DA               	addwfc	fsr2h,f,c
  8435   003720  CFDE F010          	movff	postinc2,??_setMotorPWM
  8436   003724  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8437   003728  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8438   00372C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8439   003730  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8440                           
  8441                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8442   003734  EE20 F007          	lfsr	2,7
  8443   003738  500E               	movf	setMotorPWM@m^0,w,c
  8444   00373A  26D9               	addwf	fsr2l,f,c
  8445   00373C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8446   00373E  22DA               	addwfc	fsr2h,f,c
  8447   003740  CFDE F010          	movff	postinc2,??_setMotorPWM
  8448   003744  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8449   003748  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8450   00374C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8451   003750  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8452                           
  8453                           ;dc_motor.c: 85:     } else {
  8454   003754  EFCC  F01B         	goto	l494
  8455   003758                     l3258:
  8456                           
  8457                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8458   003758  EE20 F005          	lfsr	2,5
  8459   00375C  500E               	movf	setMotorPWM@m^0,w,c
  8460   00375E  26D9               	addwf	fsr2l,f,c
  8461   003760  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8462   003762  22DA               	addwfc	fsr2h,f,c
  8463   003764  CFDE F010          	movff	postinc2,??_setMotorPWM
  8464   003768  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8465   00376C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8466   003770  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8467   003774  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8468                           
  8469                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8470   003778  EE20 F007          	lfsr	2,7
  8471   00377C  500E               	movf	setMotorPWM@m^0,w,c
  8472   00377E  26D9               	addwf	fsr2l,f,c
  8473   003780  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8474   003782  22DA               	addwfc	fsr2h,f,c
  8475   003784  CFDE F010          	movff	postinc2,??_setMotorPWM
  8476   003788  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8477   00378C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8478   003790  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8479   003794  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8480   003798                     l494:
  8481   003798  0012               	return		;funcret
  8482   00379A                     __end_of_setMotorPWM:
  8483                           	callstack 0
  8484                           
  8485 ;; *************** function ___wmul *****************
  8486 ;; Defined at:
  8487 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  multiplier      2    0[COMRAM] unsigned int 
  8490 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  product         2    4[COMRAM] unsigned int 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2    0[COMRAM] unsigned int 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0, prodl, prodh
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;Total ram usage:        6 bytes
  8507 ;; Hardware stack levels used: 1
  8508 ;; Hardware stack levels required when called: 1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_setMotorPWM
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text59
  8517   004CA8                     __ptext59:
  8518                           	callstack 0
  8519   004CA8                     ___wmul:
  8520                           	callstack 27
  8521   004CA8  5001               	movf	___wmul@multiplier^0,w,c
  8522   004CAA  0203               	mulwf	___wmul@multiplicand^0,c
  8523   004CAC  CFF3 F005          	movff	prodl,___wmul@product
  8524   004CB0  CFF4 F006          	movff	prodh,___wmul@product+1
  8525   004CB4  5001               	movf	___wmul@multiplier^0,w,c
  8526   004CB6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8527   004CB8  50F3               	movf	243,w,c
  8528   004CBA  2606               	addwf	(___wmul@product+1)^0,f,c
  8529   004CBC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8530   004CBE  0203               	mulwf	___wmul@multiplicand^0,c
  8531   004CC0  50F3               	movf	243,w,c
  8532   004CC2  2606               	addwf	(___wmul@product+1)^0,f,c
  8533   004CC4  C005  F001         	movff	___wmul@product,?___wmul
  8534   004CC8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8535   004CCC  0012               	return		;funcret
  8536   004CCE                     __end_of___wmul:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function ___lwdiv *****************
  8540 ;; Defined at:
  8541 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  dividend        2    6[COMRAM] unsigned int 
  8544 ;;  divisor         2    8[COMRAM] unsigned int 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  quotient        2   10[COMRAM] unsigned int 
  8547 ;;  counter         1   12[COMRAM] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  2    6[COMRAM] unsigned int 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;Total ram usage:        7 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 1
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_setMotorPWM
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text60
  8572   004306                     __ptext60:
  8573                           	callstack 0
  8574   004306                     ___lwdiv:
  8575                           	callstack 27
  8576   004306  0E00               	movlw	0
  8577   004308  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8578   00430A  0E00               	movlw	0
  8579   00430C  6E0B               	movwf	___lwdiv@quotient^0,c
  8580   00430E  5009               	movf	___lwdiv@divisor^0,w,c
  8581   004310  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8582   004312  B4D8               	btfsc	status,2,c
  8583   004314  EF8E  F021         	goto	u2401
  8584   004318  EF90  F021         	goto	u2400
  8585   00431C                     u2401:
  8586   00431C  EFB8  F021         	goto	l1169
  8587   004320                     u2400:
  8588   004320  0E01               	movlw	1
  8589   004322  6E0D               	movwf	___lwdiv@counter^0,c
  8590   004324  EF98  F021         	goto	l3222
  8591   004328                     l3220:
  8592   004328  90D8               	bcf	status,0,c
  8593   00432A  3609               	rlcf	___lwdiv@divisor^0,f,c
  8594   00432C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8595   00432E  2A0D               	incf	___lwdiv@counter^0,f,c
  8596   004330                     l3222:
  8597   004330  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8598   004332  EF9D  F021         	goto	u2411
  8599   004336  EF9F  F021         	goto	u2410
  8600   00433A                     u2411:
  8601   00433A  EF94  F021         	goto	l3220
  8602   00433E                     u2410:
  8603   00433E                     l3224:
  8604   00433E  90D8               	bcf	status,0,c
  8605   004340  360B               	rlcf	___lwdiv@quotient^0,f,c
  8606   004342  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8607   004344  5009               	movf	___lwdiv@divisor^0,w,c
  8608   004346  5C07               	subwf	___lwdiv@dividend^0,w,c
  8609   004348  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8610   00434A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8611   00434C  A0D8               	btfss	status,0,c
  8612   00434E  EFAB  F021         	goto	u2421
  8613   004352  EFAD  F021         	goto	u2420
  8614   004356                     u2421:
  8615   004356  EFB2  F021         	goto	l3232
  8616   00435A                     u2420:
  8617   00435A  5009               	movf	___lwdiv@divisor^0,w,c
  8618   00435C  5E07               	subwf	___lwdiv@dividend^0,f,c
  8619   00435E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8620   004360  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8621   004362  800B               	bsf	___lwdiv@quotient^0,0,c
  8622   004364                     l3232:
  8623   004364  90D8               	bcf	status,0,c
  8624   004366  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8625   004368  3209               	rrcf	___lwdiv@divisor^0,f,c
  8626   00436A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8627   00436C  EF9F  F021         	goto	l3224
  8628   004370                     l1169:
  8629   004370  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8630   004374  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8631   004378  0012               	return		;funcret
  8632   00437A                     __end_of___lwdiv:
  8633                           	callstack 0
  8634                           
  8635 ;; *************** function _Colour_decider *****************
  8636 ;; Defined at:
  8637 ;;		line 125 in file "color.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  vals            2   74[COMRAM] PTR struct RGB
  8640 ;;		 -> vals(8), 
  8641 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8642 ;;		 -> rel(12), 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  RGB_col        12    6[BANK0 ] float [3]
  8645 ;;  Hue             4   28[BANK0 ] float 
  8646 ;;  Cmin            4   22[BANK0 ] float 
  8647 ;;  Cmax            4   18[BANK0 ] float 
  8648 ;;  i               2   26[BANK0 ] int 
  8649 ;;  Cmax_i          2    4[BANK0 ] int 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2   74[COMRAM] int 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;Total ram usage:       38 bytes
  8664 ;; Hardware stack levels used: 1
  8665 ;; Hardware stack levels required when called: 3
  8666 ;; This function calls:
  8667 ;;		___fladd
  8668 ;;		___fldiv
  8669 ;;		___fleq
  8670 ;;		___flge
  8671 ;;		___flmul
  8672 ;;		___flsub
  8673 ;;		___xxtofl
  8674 ;; This function is called by:
  8675 ;;		_main
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text61
  8680   000E26                     __ptext61:
  8681                           	callstack 0
  8682   000E26                     _Colour_decider:
  8683                           	callstack 27
  8684   000E26                     
  8685                           ;color.c: 126:     float Cmax = 0;
  8686   000E26  0E00               	movlw	0
  8687   000E28  0100               	movlb	0	; () banked
  8688   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8689   000E2C  0E00               	movlw	0
  8690   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8691   000E30  0E00               	movlw	0
  8692   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8693   000E34  0E00               	movlw	0
  8694   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8695                           
  8696                           ;color.c: 127:     float Cmin= 100000;
  8697   000E38  0E00               	movlw	0
  8698   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8699   000E3C  0E50               	movlw	80
  8700   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8701   000E40  0EC3               	movlw	195
  8702   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8703   000E44  0E47               	movlw	71
  8704   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8705                           
  8706                           ;color.c: 128:     int Cmax_i =4;
  8707   000E48  0E00               	movlw	0
  8708   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8709   000E4C  0E04               	movlw	4
  8710   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8711   000E50                     
  8712                           ; BSR set to: 0
  8713                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8714   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8715   000E54  0E0B               	movlw	11
  8716   000E56                     u3931:
  8717   000E56  6ADE               	clrf	postinc2,c
  8718   000E58  06E8               	decf	wreg,f,c
  8719   000E5A  E2FD               	bc	u3931
  8720   000E5C                     
  8721                           ; BSR set to: 0
  8722   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8723   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8724   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8725   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8726   000E6C  0E00               	movlw	0
  8727   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8728   000E70  0EFF               	movlw	-1
  8729   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8730   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8731   000E76  0E01               	movlw	1
  8732   000E78  EC79  F019         	call	___xxtofl
  8733   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8734   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8735   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8736   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8737   000E8C  EE20 F002          	lfsr	2,2
  8738   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8739   000E92  26D9               	addwf	fsr2l,f,c
  8740   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8741   000E96  22DA               	addwfc	fsr2h,f,c
  8742   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8743   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8744   000EA0  0E00               	movlw	0
  8745   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8746   000EA4  0EFF               	movlw	-1
  8747   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8748   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8749   000EAA  0E01               	movlw	1
  8750   000EAC  EC79  F019         	call	___xxtofl
  8751   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8752   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8753   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8754   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8755   000EC0  EE20 F004          	lfsr	2,4
  8756   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8757   000EC6  26D9               	addwf	fsr2l,f,c
  8758   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8759   000ECA  22DA               	addwfc	fsr2h,f,c
  8760   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8761   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8762   000ED4  0E00               	movlw	0
  8763   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8764   000ED8  0EFF               	movlw	-1
  8765   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8766   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8767   000EDE  0E01               	movlw	1
  8768   000EE0  EC79  F019         	call	___xxtofl
  8769   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8770   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8771   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8772   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8773   000EF4                     
  8774                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8775   000EF4  0E00               	movlw	0
  8776   000EF6  0100               	movlb	0	; () banked
  8777   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8778   000EFA  0E00               	movlw	0
  8779   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8780   000EFE                     l4286:
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8784   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8785   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8786   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8787   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8788   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8789   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8790   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8791   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8792   000F16  90D8               	bcf	status,0,c
  8793   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8794   000F1A  6ED9               	movwf	fsr2l,c
  8795   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8796   000F1E  6EDA               	movwf	fsr2h,c
  8797   000F20  90D8               	bcf	status,0,c
  8798   000F22  36D9               	rlcf	fsr2l,f,c
  8799   000F24  36DA               	rlcf	fsr2h,f,c
  8800   000F26  504F               	movf	??_Colour_decider^0,w,c
  8801   000F28  26D9               	addwf	fsr2l,f,c
  8802   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8803   000F2C  22DA               	addwfc	fsr2h,f,c
  8804   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8805   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8806   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8807   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8808   000F3E  EC27  F01D         	call	___flge	;wreg free
  8809   000F42  B0D8               	btfsc	status,0,c
  8810   000F44  EFA6  F007         	goto	u3941
  8811   000F48  EFA8  F007         	goto	u3940
  8812   000F4C                     u3941:
  8813   000F4C  EFC5  F007         	goto	l4292
  8814   000F50                     u3940:
  8815   000F50                     
  8816                           ;color.c: 137:             Cmax=RGB_col[i];
  8817   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8818   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8819   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8820   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8821   000F58  90D8               	bcf	status,0,c
  8822   000F5A  0100               	movlb	0	; () banked
  8823   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8824   000F5E  6ED9               	movwf	fsr2l,c
  8825   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8826   000F62  6EDA               	movwf	fsr2h,c
  8827   000F64  90D8               	bcf	status,0,c
  8828   000F66  36D9               	rlcf	fsr2l,f,c
  8829   000F68  36DA               	rlcf	fsr2h,f,c
  8830   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8831   000F6C  26D9               	addwf	fsr2l,f,c
  8832   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8833   000F70  22DA               	addwfc	fsr2h,f,c
  8834   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8835   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8836   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8837   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8838   000F82                     
  8839                           ; BSR set to: 0
  8840                           ;color.c: 138:             Cmax_i=i;
  8841   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8842   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8843   000F8A                     l4292:
  8844                           
  8845                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8846   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8847   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8848   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8849   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8850   000F92  90D8               	bcf	status,0,c
  8851   000F94  0100               	movlb	0	; () banked
  8852   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8853   000F98  6ED9               	movwf	fsr2l,c
  8854   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8855   000F9C  6EDA               	movwf	fsr2h,c
  8856   000F9E  90D8               	bcf	status,0,c
  8857   000FA0  36D9               	rlcf	fsr2l,f,c
  8858   000FA2  36DA               	rlcf	fsr2h,f,c
  8859   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8860   000FA6  26D9               	addwf	fsr2l,f,c
  8861   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8862   000FAA  22DA               	addwfc	fsr2h,f,c
  8863   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8864   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8865   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8866   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8867   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8868   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8869   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8870   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8871   000FCC  EC27  F01D         	call	___flge	;wreg free
  8872   000FD0  B0D8               	btfsc	status,0,c
  8873   000FD2  EFED  F007         	goto	u3951
  8874   000FD6  EFEF  F007         	goto	u3950
  8875   000FDA                     u3951:
  8876   000FDA  EF08  F008         	goto	l4296
  8877   000FDE                     u3950:
  8878   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8879   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8880   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8881   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8882   000FE6  90D8               	bcf	status,0,c
  8883   000FE8  0100               	movlb	0	; () banked
  8884   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8885   000FEC  6ED9               	movwf	fsr2l,c
  8886   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8887   000FF0  6EDA               	movwf	fsr2h,c
  8888   000FF2  90D8               	bcf	status,0,c
  8889   000FF4  36D9               	rlcf	fsr2l,f,c
  8890   000FF6  36DA               	rlcf	fsr2h,f,c
  8891   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8892   000FFA  26D9               	addwf	fsr2l,f,c
  8893   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8894   000FFE  22DA               	addwfc	fsr2h,f,c
  8895   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8896   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8897   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8898   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8899   001010                     l4296:
  8900                           
  8901                           ;color.c: 141:     }
  8902   001010  0100               	movlb	0	; () banked
  8903   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8904   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8905   001016                     
  8906                           ; BSR set to: 0
  8907   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8908   001018  EF17  F008         	goto	u3961
  8909   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8910   00101E  E109               	bnz	u3960
  8911   001020  0E03               	movlw	3
  8912   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8913   001024  A0D8               	btfss	status,0,c
  8914   001026  EF17  F008         	goto	u3961
  8915   00102A  EF19  F008         	goto	u3960
  8916   00102E                     u3961:
  8917   00102E  EF7F  F007         	goto	l4286
  8918   001032                     u3960:
  8919   001032                     
  8920                           ; BSR set to: 0
  8921                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8922   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8923   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8924   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8925   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8926   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8927   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8928   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8929   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8930   001052  EC20  F025         	call	___flsub	;wreg free
  8931   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8932   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8933   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8934   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8935   001066  0E00               	movlw	0
  8936   001068  6E1D               	movwf	___fleq@ff2^0,c
  8937   00106A  0E00               	movlw	0
  8938   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8939   00106E  0E00               	movlw	0
  8940   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8941   001072  0E00               	movlw	0
  8942   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8943   001076  EC63  F01E         	call	___fleq	;wreg free
  8944   00107A  A0D8               	btfss	status,0,c
  8945   00107C  EF42  F008         	goto	u3971
  8946   001080  EF44  F008         	goto	u3970
  8947   001084                     u3971:
  8948   001084  EF4A  F008         	goto	l4306
  8949   001088                     u3970:
  8950   001088                     l4302:
  8951   001088  0E00               	movlw	0
  8952   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8953   00108C  0E00               	movlw	0
  8954   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8955   001090  EF80  F00C         	goto	l76
  8956   001094                     l4306:
  8957                           
  8958                           ;color.c: 146:     if (Cmax_i==0){
  8959   001094  0100               	movlb	0	; () banked
  8960   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8961   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8962   00109A  A4D8               	btfss	status,2,c
  8963   00109C  EF52  F008         	goto	u3981
  8964   0010A0  EF54  F008         	goto	u3980
  8965   0010A4                     u3981:
  8966   0010A4  EFC8  F008         	goto	l4314
  8967   0010A8                     u3980:
  8968   0010A8                     
  8969                           ; BSR set to: 0
  8970                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8971   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8972   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8973   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8974   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8975   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8976   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8977   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8978   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8979   0010C8  EC20  F025         	call	___flsub	;wreg free
  8980   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8981   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8982   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8983   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8984   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8985   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8986   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8987   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8988   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8989   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8990   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8991   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8992   0010FC  EC20  F025         	call	___flsub	;wreg free
  8993   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8994   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8995   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8996   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8997   001110  EC80  F013         	call	___fldiv	;wreg free
  8998   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8999   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9000   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9001   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9002   001124  0E00               	movlw	0
  9003   001126  6E36               	movwf	___flmul@a^0,c
  9004   001128  0E00               	movlw	0
  9005   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9006   00112C  0E70               	movlw	112
  9007   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9008   001130  0E42               	movlw	66
  9009   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9010   001134  EC6B  F011         	call	___flmul	;wreg free
  9011   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9012   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9013   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9014   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9015   001148                     
  9016                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9017   001148  0100               	movlb	0	; () banked
  9018   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9019   00114C  EFAC  F008         	goto	u3990
  9020   001150  EFAA  F008         	goto	u3991
  9021   001154                     u3991:
  9022   001154  EFA7  F009         	goto	l4324
  9023   001158                     u3990:
  9024   001158                     
  9025                           ; BSR set to: 0
  9026   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9027   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9028   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9029   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9030   001168  0E00               	movlw	0
  9031   00116A  6E05               	movwf	___fladd@a^0,c
  9032   00116C  0E00               	movlw	0
  9033   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9034   001170  0EB4               	movlw	180
  9035   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9036   001174  0E43               	movlw	67
  9037   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9038   001178  EC0B  F00F         	call	___fladd	;wreg free
  9039   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9040   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9041   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9042   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9043   00118C  EFA7  F009         	goto	l4324
  9044   001190                     l4314:
  9045                           
  9046                           ; BSR set to: 0
  9047   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9048   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9049   001194  A4D8               	btfss	status,2,c
  9050   001196  EFCF  F008         	goto	u4001
  9051   00119A  EFD1  F008         	goto	u4000
  9052   00119E                     u4001:
  9053   00119E  EF3D  F009         	goto	l4320
  9054   0011A2                     u4000:
  9055   0011A2                     
  9056                           ; BSR set to: 0
  9057                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9058   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9059   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9060   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9061   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9062   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9063   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9064   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9065   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9066   0011C2  EC20  F025         	call	___flsub	;wreg free
  9067   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9068   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9069   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9070   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9071   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9072   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9073   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9074   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9075   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9076   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9077   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9078   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9079   0011F6  EC20  F025         	call	___flsub	;wreg free
  9080   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9081   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9082   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9083   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9084   00120A  EC80  F013         	call	___fldiv	;wreg free
  9085   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2838
  9086   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2838+1
  9087   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2838+2
  9088   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2838+3
  9089   00121E                     
  9090                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9091   00121E  0E00               	movlw	0
  9092   001220  6E05               	movwf	___fladd@a^0,c
  9093   001222  0E00               	movlw	0
  9094   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9095   001226  0E00               	movlw	0
  9096   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9097   00122A  0E40               	movlw	64
  9098   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9099   00122E  C060  F001         	movff	_Colour_decider$2838,___fladd@b
  9100   001232  C061  F002         	movff	_Colour_decider$2838+1,___fladd@b+1
  9101   001236  C062  F003         	movff	_Colour_decider$2838+2,___fladd@b+2
  9102   00123A  C063  F004         	movff	_Colour_decider$2838+3,___fladd@b+3
  9103   00123E  EC0B  F00F         	call	___fladd	;wreg free
  9104   001242  C001  F032         	movff	?___fladd,___flmul@b
  9105   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9106   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9107   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9108   001252  0E00               	movlw	0
  9109   001254  6E36               	movwf	___flmul@a^0,c
  9110   001256  0E00               	movlw	0
  9111   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9112   00125A  0E70               	movlw	112
  9113   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9114   00125E  0E42               	movlw	66
  9115   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9116   001262  EC6B  F011         	call	___flmul	;wreg free
  9117   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9118   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9119   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9120   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9121                           
  9122                           ;color.c: 155:     }
  9123   001276  EFA7  F009         	goto	l4324
  9124   00127A                     l4320:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9128   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9129   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9130   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9131   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9132   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9133   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9134   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9135   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9136   00129A  EC20  F025         	call	___flsub	;wreg free
  9137   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9138   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9139   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9140   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9141   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9142   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9143   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9144   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9145   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9146   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9147   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9148   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9149   0012CE  EC20  F025         	call	___flsub	;wreg free
  9150   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9151   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9152   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9153   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9154   0012E2  EC80  F013         	call	___fldiv	;wreg free
  9155   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2838
  9156   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2838+1
  9157   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2838+2
  9158   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2838+3
  9159   0012F6                     
  9160                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9161   0012F6  0E00               	movlw	0
  9162   0012F8  6E05               	movwf	___fladd@a^0,c
  9163   0012FA  0E00               	movlw	0
  9164   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9165   0012FE  0E80               	movlw	128
  9166   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9167   001302  0E40               	movlw	64
  9168   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9169   001306  C060  F001         	movff	_Colour_decider$2838,___fladd@b
  9170   00130A  C061  F002         	movff	_Colour_decider$2838+1,___fladd@b+1
  9171   00130E  C062  F003         	movff	_Colour_decider$2838+2,___fladd@b+2
  9172   001312  C063  F004         	movff	_Colour_decider$2838+3,___fladd@b+3
  9173   001316  EC0B  F00F         	call	___fladd	;wreg free
  9174   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9175   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9176   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9177   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9178   00132A  0E00               	movlw	0
  9179   00132C  6E36               	movwf	___flmul@a^0,c
  9180   00132E  0E00               	movlw	0
  9181   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9182   001332  0E70               	movlw	112
  9183   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9184   001336  0E42               	movlw	66
  9185   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9186   00133A  EC6B  F011         	call	___flmul	;wreg free
  9187   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9188   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9189   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9190   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9191   00134E                     l4324:
  9192                           
  9193                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9194   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9195   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9196   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9197   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9198   00135E  0E00               	movlw	0
  9199   001360  6E05               	movwf	___flge@ff2^0,c
  9200   001362  0E00               	movlw	0
  9201   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9202   001366  0EA5               	movlw	165
  9203   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9204   00136A  0E43               	movlw	67
  9205   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9206   00136E  EC27  F01D         	call	___flge	;wreg free
  9207   001372  A0D8               	btfss	status,0,c
  9208   001374  EFBE  F009         	goto	u4011
  9209   001378  EFC0  F009         	goto	u4010
  9210   00137C                     u4011:
  9211   00137C  EFDF  F009         	goto	l4334
  9212   001380                     u4010:
  9213   001380  0E00               	movlw	0
  9214   001382  6E01               	movwf	___flge@ff1^0,c
  9215   001384  0E00               	movlw	0
  9216   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9217   001388  0EB4               	movlw	180
  9218   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9219   00138C  0E43               	movlw	67
  9220   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9221   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9222   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9223   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9224   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9225   0013A0  EC27  F01D         	call	___flge	;wreg free
  9226   0013A4  A0D8               	btfss	status,0,c
  9227   0013A6  EFD7  F009         	goto	u4021
  9228   0013AA  EFD9  F009         	goto	u4020
  9229   0013AE                     u4021:
  9230   0013AE  EFDF  F009         	goto	l4334
  9231   0013B2                     u4020:
  9232   0013B2                     
  9233                           ;color.c: 164:         return 1;
  9234   0013B2  0E00               	movlw	0
  9235   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9236   0013B6  0E01               	movlw	1
  9237   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9238   0013BA  EF80  F00C         	goto	l76
  9239   0013BE                     l4334:
  9240   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9241   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9242   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9243   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9244   0013CE  0E00               	movlw	0
  9245   0013D0  6E05               	movwf	___flge@ff2^0,c
  9246   0013D2  0E00               	movlw	0
  9247   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9248   0013D6  0EA0               	movlw	160
  9249   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9250   0013DA  0E40               	movlw	64
  9251   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9252   0013DE  EC27  F01D         	call	___flge	;wreg free
  9253   0013E2  A0D8               	btfss	status,0,c
  9254   0013E4  EFF6  F009         	goto	u4031
  9255   0013E8  EFF8  F009         	goto	u4030
  9256   0013EC                     u4031:
  9257   0013EC  EF17  F00A         	goto	l4344
  9258   0013F0                     u4030:
  9259   0013F0  0E00               	movlw	0
  9260   0013F2  6E01               	movwf	___flge@ff1^0,c
  9261   0013F4  0E00               	movlw	0
  9262   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9263   0013F8  0E40               	movlw	64
  9264   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9265   0013FC  0E41               	movlw	65
  9266   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9267   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9268   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9269   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9270   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9271   001410  EC27  F01D         	call	___flge	;wreg free
  9272   001414  A0D8               	btfss	status,0,c
  9273   001416  EF0F  F00A         	goto	u4041
  9274   00141A  EF11  F00A         	goto	u4040
  9275   00141E                     u4041:
  9276   00141E  EF17  F00A         	goto	l4344
  9277   001422                     u4040:
  9278   001422                     
  9279                           ;color.c: 168:         return 2;
  9280   001422  0E00               	movlw	0
  9281   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9282   001426  0E02               	movlw	2
  9283   001428  6E4B               	movwf	?_Colour_decider^0,c
  9284   00142A  EF80  F00C         	goto	l76
  9285   00142E                     l4344:
  9286   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9287   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9288   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9289   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9290   00143E  0E00               	movlw	0
  9291   001440  6E05               	movwf	___flge@ff2^0,c
  9292   001442  0E00               	movlw	0
  9293   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9294   001446  0EA0               	movlw	160
  9295   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9296   00144A  0E41               	movlw	65
  9297   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9298   00144E  EC27  F01D         	call	___flge	;wreg free
  9299   001452  A0D8               	btfss	status,0,c
  9300   001454  EF2E  F00A         	goto	u4051
  9301   001458  EF30  F00A         	goto	u4050
  9302   00145C                     u4051:
  9303   00145C  EFB0  F00A         	goto	l4370
  9304   001460                     u4050:
  9305   001460  0E00               	movlw	0
  9306   001462  6E01               	movwf	___flge@ff1^0,c
  9307   001464  0E00               	movlw	0
  9308   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9309   001468  0EE8               	movlw	232
  9310   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9311   00146C  0E41               	movlw	65
  9312   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9313   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9314   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9315   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9316   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9317   001480  EC27  F01D         	call	___flge	;wreg free
  9318   001484  A0D8               	btfss	status,0,c
  9319   001486  EF47  F00A         	goto	u4061
  9320   00148A  EF49  F00A         	goto	u4060
  9321   00148E                     u4061:
  9322   00148E  EFB0  F00A         	goto	l4370
  9323   001492                     u4060:
  9324   001492                     
  9325                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9326   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9327   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9328   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9329   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9330   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9331   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9332   0014AA  0ECD               	movlw	205
  9333   0014AC  6E05               	movwf	___flge@ff2^0,c
  9334   0014AE  0ECC               	movlw	204
  9335   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9336   0014B2  0E4C               	movlw	76
  9337   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9338   0014B6  0E3E               	movlw	62
  9339   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9340   0014BA  EC27  F01D         	call	___flge	;wreg free
  9341   0014BE  A0D8               	btfss	status,0,c
  9342   0014C0  EF64  F00A         	goto	u4071
  9343   0014C4  EF66  F00A         	goto	u4070
  9344   0014C8                     u4071:
  9345   0014C8  EF85  F00A         	goto	l4358
  9346   0014CC                     u4070:
  9347   0014CC  0E00               	movlw	0
  9348   0014CE  6E01               	movwf	___flge@ff1^0,c
  9349   0014D0  0E00               	movlw	0
  9350   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9351   0014D4  0E80               	movlw	128
  9352   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9353   0014D8  0E3E               	movlw	62
  9354   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9355   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9356   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9357   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9358   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9359   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9360   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9361   0014F4  EC27  F01D         	call	___flge	;wreg free
  9362   0014F8  A0D8               	btfss	status,0,c
  9363   0014FA  EF81  F00A         	goto	u4081
  9364   0014FE  EF83  F00A         	goto	u4080
  9365   001502                     u4081:
  9366   001502  EF85  F00A         	goto	l4358
  9367   001506                     u4080:
  9368   001506  EF44  F008         	goto	l4302
  9369   00150A                     l4358:
  9370   00150A  EE20 F008          	lfsr	2,8
  9371   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9372   001510  26D9               	addwf	fsr2l,f,c
  9373   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9374   001514  22DA               	addwfc	fsr2h,f,c
  9375   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9376   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9377   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9378   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9379   001526  0E29               	movlw	41
  9380   001528  6E05               	movwf	___flge@ff2^0,c
  9381   00152A  0E5C               	movlw	92
  9382   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9383   00152E  0E0F               	movlw	15
  9384   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9385   001532  0E3E               	movlw	62
  9386   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9387   001536  EC27  F01D         	call	___flge	;wreg free
  9388   00153A  A0D8               	btfss	status,0,c
  9389   00153C  EFA2  F00A         	goto	u4091
  9390   001540  EFA4  F00A         	goto	u4090
  9391   001544                     u4091:
  9392   001544  EFAA  F00A         	goto	l4366
  9393   001548                     u4090:
  9394   001548                     l4360:
  9395                           
  9396                           ;color.c: 179:             return 4;
  9397   001548  0E00               	movlw	0
  9398   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9399   00154C  0E04               	movlw	4
  9400   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9401   001550  EF80  F00C         	goto	l76
  9402   001554                     l4366:
  9403                           
  9404                           ;color.c: 182:             return 3;
  9405   001554  0E00               	movlw	0
  9406   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9407   001558  0E03               	movlw	3
  9408   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9409   00155C  EF80  F00C         	goto	l76
  9410   001560                     l4370:
  9411   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9412   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9413   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9414   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9415   001570  0E00               	movlw	0
  9416   001572  6E05               	movwf	___flge@ff2^0,c
  9417   001574  0E00               	movlw	0
  9418   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9419   001578  0E34               	movlw	52
  9420   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9421   00157C  0E42               	movlw	66
  9422   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9423   001580  EC27  F01D         	call	___flge	;wreg free
  9424   001584  A0D8               	btfss	status,0,c
  9425   001586  EFC7  F00A         	goto	u4101
  9426   00158A  EFC9  F00A         	goto	u4100
  9427   00158E                     u4101:
  9428   00158E  EF2E  F00B         	goto	l4394
  9429   001592                     u4100:
  9430   001592  0E00               	movlw	0
  9431   001594  6E01               	movwf	___flge@ff1^0,c
  9432   001596  0E00               	movlw	0
  9433   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9434   00159A  0EA0               	movlw	160
  9435   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9436   00159E  0E42               	movlw	66
  9437   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9438   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9439   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9440   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9441   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9442   0015B2  EC27  F01D         	call	___flge	;wreg free
  9443   0015B6  A0D8               	btfss	status,0,c
  9444   0015B8  EFE0  F00A         	goto	u4111
  9445   0015BC  EFE2  F00A         	goto	u4110
  9446   0015C0                     u4111:
  9447   0015C0  EF2E  F00B         	goto	l4394
  9448   0015C4                     u4110:
  9449   0015C4                     
  9450                           ;color.c: 188:         if(0.15<=rel->B){
  9451   0015C4  EE20 F008          	lfsr	2,8
  9452   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9453   0015CA  26D9               	addwf	fsr2l,f,c
  9454   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9455   0015CE  22DA               	addwfc	fsr2h,f,c
  9456   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9457   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9458   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9459   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9460   0015E0  0E9A               	movlw	154
  9461   0015E2  6E05               	movwf	___flge@ff2^0,c
  9462   0015E4  0E99               	movlw	153
  9463   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9464   0015E8  0E19               	movlw	25
  9465   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9466   0015EC  0E3E               	movlw	62
  9467   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9468   0015F0  EC27  F01D         	call	___flge	;wreg free
  9469   0015F4  A0D8               	btfss	status,0,c
  9470   0015F6  EFFF  F00A         	goto	u4121
  9471   0015FA  EF01  F00B         	goto	u4120
  9472   0015FE                     u4121:
  9473   0015FE  EF03  F00B         	goto	l4382
  9474   001602                     u4120:
  9475   001602  EFA4  F00A         	goto	l4360
  9476   001606                     l4382:
  9477   001606  EE20 F008          	lfsr	2,8
  9478   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9479   00160C  26D9               	addwf	fsr2l,f,c
  9480   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9481   001610  22DA               	addwfc	fsr2h,f,c
  9482   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9483   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9484   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9485   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9486   001622  0E8F               	movlw	143
  9487   001624  6E05               	movwf	___flge@ff2^0,c
  9488   001626  0EC2               	movlw	194
  9489   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9490   00162A  0EF5               	movlw	245
  9491   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9492   00162E  0E3D               	movlw	61
  9493   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9494   001632  EC27  F01D         	call	___flge	;wreg free
  9495   001636  A0D8               	btfss	status,0,c
  9496   001638  EF20  F00B         	goto	u4131
  9497   00163C  EF22  F00B         	goto	u4130
  9498   001640                     u4131:
  9499   001640  EF28  F00B         	goto	l4390
  9500   001644                     u4130:
  9501   001644                     l4384:
  9502                           
  9503                           ;color.c: 192:             return 6;
  9504   001644  0E00               	movlw	0
  9505   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9506   001648  0E06               	movlw	6
  9507   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9508   00164C  EF80  F00C         	goto	l76
  9509   001650                     l4390:
  9510                           
  9511                           ;color.c: 195:             return 5;
  9512   001650  0E00               	movlw	0
  9513   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9514   001654  0E05               	movlw	5
  9515   001656  6E4B               	movwf	?_Colour_decider^0,c
  9516   001658  EF80  F00C         	goto	l76
  9517   00165C                     l4394:
  9518   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9519   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9520   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9521   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9522   00166C  0E00               	movlw	0
  9523   00166E  6E05               	movwf	___flge@ff2^0,c
  9524   001670  0E00               	movlw	0
  9525   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9526   001674  0EA2               	movlw	162
  9527   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9528   001678  0E42               	movlw	66
  9529   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9530   00167C  EC27  F01D         	call	___flge	;wreg free
  9531   001680  A0D8               	btfss	status,0,c
  9532   001682  EF45  F00B         	goto	u4141
  9533   001686  EF47  F00B         	goto	u4140
  9534   00168A                     u4141:
  9535   00168A  EF81  F00B         	goto	l4410
  9536   00168E                     u4140:
  9537   00168E  0E00               	movlw	0
  9538   001690  6E01               	movwf	___flge@ff1^0,c
  9539   001692  0E00               	movlw	0
  9540   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9541   001696  0EE6               	movlw	230
  9542   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9543   00169A  0E42               	movlw	66
  9544   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9545   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9546   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9547   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9548   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9549   0016AE  EC27  F01D         	call	___flge	;wreg free
  9550   0016B2  A0D8               	btfss	status,0,c
  9551   0016B4  EF5E  F00B         	goto	u4151
  9552   0016B8  EF60  F00B         	goto	u4150
  9553   0016BC                     u4151:
  9554   0016BC  EF81  F00B         	goto	l4410
  9555   0016C0                     u4150:
  9556   0016C0                     
  9557                           ;color.c: 201:         if(0.15<=rel->B){
  9558   0016C0  EE20 F008          	lfsr	2,8
  9559   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9560   0016C6  26D9               	addwf	fsr2l,f,c
  9561   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9562   0016CA  22DA               	addwfc	fsr2h,f,c
  9563   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9564   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9565   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9566   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9567   0016DC  0E9A               	movlw	154
  9568   0016DE  6E05               	movwf	___flge@ff2^0,c
  9569   0016E0  0E99               	movlw	153
  9570   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9571   0016E4  0E19               	movlw	25
  9572   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9573   0016E8  0E3E               	movlw	62
  9574   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9575   0016EC  EC27  F01D         	call	___flge	;wreg free
  9576   0016F0  A0D8               	btfss	status,0,c
  9577   0016F2  EF7D  F00B         	goto	u4161
  9578   0016F6  EF7F  F00B         	goto	u4160
  9579   0016FA                     u4161:
  9580   0016FA  EF22  F00B         	goto	l4384
  9581   0016FE                     u4160:
  9582   0016FE  EFA4  F00A         	goto	l4360
  9583   001702                     l4410:
  9584   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9585   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9586   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9587   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9588   001712  0E00               	movlw	0
  9589   001714  6E05               	movwf	___flge@ff2^0,c
  9590   001716  0E00               	movlw	0
  9591   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9592   00171A  0EF0               	movlw	240
  9593   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9594   00171E  0E41               	movlw	65
  9595   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9596   001722  EC27  F01D         	call	___flge	;wreg free
  9597   001726  A0D8               	btfss	status,0,c
  9598   001728  EF98  F00B         	goto	u4171
  9599   00172C  EF9A  F00B         	goto	u4170
  9600   001730                     u4171:
  9601   001730  EFB3  F00B         	goto	l4414
  9602   001734                     u4170:
  9603   001734  0E00               	movlw	0
  9604   001736  6E01               	movwf	___flge@ff1^0,c
  9605   001738  0E00               	movlw	0
  9606   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9607   00173C  0E68               	movlw	104
  9608   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9609   001740  0E42               	movlw	66
  9610   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9611   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9612   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9613   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9614   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9615   001754  EC27  F01D         	call	___flge	;wreg free
  9616   001758  B0D8               	btfsc	status,0,c
  9617   00175A  EFB1  F00B         	goto	u4181
  9618   00175E  EFB3  F00B         	goto	u4180
  9619   001762                     u4181:
  9620   001762  EFA4  F00A         	goto	l4360
  9621   001766                     u4180:
  9622   001766                     l4414:
  9623   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9624   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9625   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9626   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9627   001776  0E00               	movlw	0
  9628   001778  6E05               	movwf	___flge@ff2^0,c
  9629   00177A  0E00               	movlw	0
  9630   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9631   00177E  0EF0               	movlw	240
  9632   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9633   001782  0E42               	movlw	66
  9634   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9635   001786  EC27  F01D         	call	___flge	;wreg free
  9636   00178A  A0D8               	btfss	status,0,c
  9637   00178C  EFCA  F00B         	goto	u4191
  9638   001790  EFCC  F00B         	goto	u4190
  9639   001794                     u4191:
  9640   001794  EFE7  F00B         	goto	l4424
  9641   001798                     u4190:
  9642   001798  0E00               	movlw	0
  9643   00179A  6E01               	movwf	___flge@ff1^0,c
  9644   00179C  0E00               	movlw	0
  9645   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9646   0017A0  0E5C               	movlw	92
  9647   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9648   0017A4  0E43               	movlw	67
  9649   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9650   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9651   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9652   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9653   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9654   0017B8  EC27  F01D         	call	___flge	;wreg free
  9655   0017BC  A0D8               	btfss	status,0,c
  9656   0017BE  EFE3  F00B         	goto	u4201
  9657   0017C2  EFE5  F00B         	goto	u4200
  9658   0017C6                     u4201:
  9659   0017C6  EFE7  F00B         	goto	l4424
  9660   0017CA                     u4200:
  9661   0017CA  EFA4  F00A         	goto	l4360
  9662   0017CE                     l4424:
  9663   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9664   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9665   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9666   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9667   0017DE  0E00               	movlw	0
  9668   0017E0  6E05               	movwf	___flge@ff2^0,c
  9669   0017E2  0E00               	movlw	0
  9670   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9671   0017E6  0E60               	movlw	96
  9672   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9673   0017EA  0E41               	movlw	65
  9674   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9675   0017EE  EC27  F01D         	call	___flge	;wreg free
  9676   0017F2  A0D8               	btfss	status,0,c
  9677   0017F4  EFFE  F00B         	goto	u4211
  9678   0017F8  EF00  F00C         	goto	u4210
  9679   0017FC                     u4211:
  9680   0017FC  EF7C  F00C         	goto	l4450
  9681   001800                     u4210:
  9682   001800  0E00               	movlw	0
  9683   001802  6E01               	movwf	___flge@ff1^0,c
  9684   001804  0E00               	movlw	0
  9685   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9686   001808  0E98               	movlw	152
  9687   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9688   00180C  0E41               	movlw	65
  9689   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9690   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9691   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9692   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9693   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9694   001820  EC27  F01D         	call	___flge	;wreg free
  9695   001824  A0D8               	btfss	status,0,c
  9696   001826  EF17  F00C         	goto	u4221
  9697   00182A  EF19  F00C         	goto	u4220
  9698   00182E                     u4221:
  9699   00182E  EF7C  F00C         	goto	l4450
  9700   001832                     u4220:
  9701   001832                     
  9702                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9703   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9704   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9705   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9706   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9707   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9708   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9709   00184A  0ECD               	movlw	205
  9710   00184C  6E05               	movwf	___flge@ff2^0,c
  9711   00184E  0ECC               	movlw	204
  9712   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9713   001852  0E4C               	movlw	76
  9714   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9715   001856  0E3E               	movlw	62
  9716   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9717   00185A  EC27  F01D         	call	___flge	;wreg free
  9718   00185E  A0D8               	btfss	status,0,c
  9719   001860  EF34  F00C         	goto	u4231
  9720   001864  EF36  F00C         	goto	u4230
  9721   001868                     u4231:
  9722   001868  EF55  F00C         	goto	l4438
  9723   00186C                     u4230:
  9724   00186C  0E1F               	movlw	31
  9725   00186E  6E01               	movwf	___flge@ff1^0,c
  9726   001870  0E85               	movlw	133
  9727   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9728   001874  0E6B               	movlw	107
  9729   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9730   001878  0E3E               	movlw	62
  9731   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9732   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9733   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9734   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9735   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9736   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9737   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9738   001894  EC27  F01D         	call	___flge	;wreg free
  9739   001898  A0D8               	btfss	status,0,c
  9740   00189A  EF51  F00C         	goto	u4241
  9741   00189E  EF53  F00C         	goto	u4240
  9742   0018A2                     u4241:
  9743   0018A2  EF55  F00C         	goto	l4438
  9744   0018A6                     u4240:
  9745   0018A6  EF44  F008         	goto	l4302
  9746   0018AA                     l4438:
  9747   0018AA  EE20 F008          	lfsr	2,8
  9748   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9749   0018B0  26D9               	addwf	fsr2l,f,c
  9750   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9751   0018B4  22DA               	addwfc	fsr2h,f,c
  9752   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9753   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9754   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9755   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9756   0018C6  0E9A               	movlw	154
  9757   0018C8  6E05               	movwf	___flge@ff2^0,c
  9758   0018CA  0E99               	movlw	153
  9759   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9760   0018CE  0E19               	movlw	25
  9761   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9762   0018D2  0E3E               	movlw	62
  9763   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9764   0018D6  EC27  F01D         	call	___flge	;wreg free
  9765   0018DA  A0D8               	btfss	status,0,c
  9766   0018DC  EF72  F00C         	goto	u4251
  9767   0018E0  EF74  F00C         	goto	u4250
  9768   0018E4                     u4251:
  9769   0018E4  EF76  F00C         	goto	l4446
  9770   0018E8                     u4250:
  9771   0018E8  EFA4  F00A         	goto	l4360
  9772   0018EC                     l4446:
  9773                           
  9774                           ;color.c: 223:             return 7;
  9775   0018EC  0E00               	movlw	0
  9776   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9777   0018F0  0E07               	movlw	7
  9778   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9779   0018F4  EF80  F00C         	goto	l76
  9780   0018F8                     l4450:
  9781                           
  9782                           ;color.c: 227:         return 10;
  9783   0018F8  0E00               	movlw	0
  9784   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9785   0018FC  0E0A               	movlw	10
  9786   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9787   001900                     l76:
  9788   001900  0012               	return		;funcret
  9789   001902                     __end_of_Colour_decider:
  9790                           	callstack 0
  9791                           
  9792 ;; *************** function ___xxtofl *****************
  9793 ;; Defined at:
  9794 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  sign            1    wreg     unsigned char 
  9797 ;;  val             4    0[COMRAM] long 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  sign            1    8[COMRAM] unsigned char 
  9800 ;;  arg             4   10[COMRAM] unsigned long 
  9801 ;;  exp             1    9[COMRAM] unsigned char 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  4    0[COMRAM] unsigned char 
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9812 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9814 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9815 ;;Total ram usage:       14 bytes
  9816 ;; Hardware stack levels used: 1
  9817 ;; Hardware stack levels required when called: 1
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_colour_rel
  9822 ;;		_Colour_decider
  9823 ;;		_turnRight45
  9824 ;;		_turnLeft45
  9825 ;;		_reverseOneBlock
  9826 ;;		_ForwardOneBlock
  9827 ;;		_Forwardhalfblock
  9828 ;;		_Backhalfblock
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text62
  9833   0032F2                     __ptext62:
  9834                           	callstack 0
  9835   0032F2                     ___xxtofl:
  9836                           	callstack 28
  9837                           
  9838                           ;incstack = 0
  9839                           ;___xxtofl@sign stored from wreg
  9840   0032F2  6E09               	movwf	___xxtofl@sign^0,c
  9841   0032F4  5009               	movf	___xxtofl@sign^0,w,c
  9842   0032F6  B4D8               	btfsc	status,2,c
  9843   0032F8  EF80  F019         	goto	u3821
  9844   0032FC  EF82  F019         	goto	u3820
  9845   003300                     u3821:
  9846   003300  EFA4  F019         	goto	l1333
  9847   003304                     u3820:
  9848   003304  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9849   003306  EF89  F019         	goto	u3830
  9850   00330A  EF87  F019         	goto	u3831
  9851   00330E                     u3831:
  9852   00330E  EFA4  F019         	goto	l1333
  9853   003312                     u3830:
  9854   003312  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9855   003316  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9856   00331A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9857   00331E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9858   003322  1E05               	comf	??___xxtofl^0,f,c
  9859   003324  1E06               	comf	(??___xxtofl+1)^0,f,c
  9860   003326  1E07               	comf	(??___xxtofl+2)^0,f,c
  9861   003328  1E08               	comf	(??___xxtofl+3)^0,f,c
  9862   00332A  2A05               	incf	??___xxtofl^0,f,c
  9863   00332C  0E00               	movlw	0
  9864   00332E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9865   003330  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9866   003332  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9867   003334  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9868   003338  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9869   00333C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9870   003340  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9871   003344  EFAC  F019         	goto	l4172
  9872   003348                     l1333:
  9873   003348  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9874   00334C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9875   003350  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9876   003354  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9877   003358                     l4172:
  9878   003358  5001               	movf	___xxtofl@val^0,w,c
  9879   00335A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9880   00335C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9881   00335E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9882   003360  A4D8               	btfss	status,2,c
  9883   003362  EFB5  F019         	goto	u3841
  9884   003366  EFB7  F019         	goto	u3840
  9885   00336A                     u3841:
  9886   00336A  EFC1  F019         	goto	l4178
  9887   00336E                     u3840:
  9888   00336E  0E00               	movlw	0
  9889   003370  6E01               	movwf	?___xxtofl^0,c
  9890   003372  0E00               	movlw	0
  9891   003374  6E02               	movwf	(?___xxtofl+1)^0,c
  9892   003376  0E00               	movlw	0
  9893   003378  6E03               	movwf	(?___xxtofl+2)^0,c
  9894   00337A  0E00               	movlw	0
  9895   00337C  6E04               	movwf	(?___xxtofl+3)^0,c
  9896   00337E  EF52  F01A         	goto	l1336
  9897   003382                     l4178:
  9898   003382  0E96               	movlw	150
  9899   003384  6E0A               	movwf	___xxtofl@exp^0,c
  9900   003386  EFCB  F019         	goto	l4182
  9901   00338A                     l4180:
  9902   00338A  2A0A               	incf	___xxtofl@exp^0,f,c
  9903   00338C  90D8               	bcf	status,0,c
  9904   00338E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9905   003390  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9906   003392  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9907   003394  320B               	rrcf	___xxtofl@arg^0,f,c
  9908   003396                     l4182:
  9909   003396  0E00               	movlw	0
  9910   003398  140B               	andwf	___xxtofl@arg^0,w,c
  9911   00339A  6E05               	movwf	??___xxtofl^0,c
  9912   00339C  0E00               	movlw	0
  9913   00339E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9914   0033A0  6E06               	movwf	(??___xxtofl+1)^0,c
  9915   0033A2  0E00               	movlw	0
  9916   0033A4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9917   0033A6  6E07               	movwf	(??___xxtofl+2)^0,c
  9918   0033A8  0EFE               	movlw	254
  9919   0033AA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9920   0033AC  6E08               	movwf	(??___xxtofl+3)^0,c
  9921   0033AE  5005               	movf	??___xxtofl^0,w,c
  9922   0033B0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9923   0033B2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9924   0033B4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9925   0033B6  A4D8               	btfss	status,2,c
  9926   0033B8  EFE0  F019         	goto	u3851
  9927   0033BC  EFE2  F019         	goto	u3850
  9928   0033C0                     u3851:
  9929   0033C0  EFC5  F019         	goto	l4180
  9930   0033C4                     u3850:
  9931   0033C4  EFF0  F019         	goto	l1340
  9932   0033C8                     l4184:
  9933   0033C8  2A0A               	incf	___xxtofl@exp^0,f,c
  9934   0033CA  0E01               	movlw	1
  9935   0033CC  260B               	addwf	___xxtofl@arg^0,f,c
  9936   0033CE  0E00               	movlw	0
  9937   0033D0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9938   0033D2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9939   0033D4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9940   0033D6  90D8               	bcf	status,0,c
  9941   0033D8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9942   0033DA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9943   0033DC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9944   0033DE  320B               	rrcf	___xxtofl@arg^0,f,c
  9945   0033E0                     l1340:
  9946   0033E0  0E00               	movlw	0
  9947   0033E2  140B               	andwf	___xxtofl@arg^0,w,c
  9948   0033E4  6E05               	movwf	??___xxtofl^0,c
  9949   0033E6  0E00               	movlw	0
  9950   0033E8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9951   0033EA  6E06               	movwf	(??___xxtofl+1)^0,c
  9952   0033EC  0E00               	movlw	0
  9953   0033EE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9954   0033F0  6E07               	movwf	(??___xxtofl+2)^0,c
  9955   0033F2  0EFF               	movlw	255
  9956   0033F4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9957   0033F6  6E08               	movwf	(??___xxtofl+3)^0,c
  9958   0033F8  5005               	movf	??___xxtofl^0,w,c
  9959   0033FA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9960   0033FC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9961   0033FE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9962   003400  A4D8               	btfss	status,2,c
  9963   003402  EF05  F01A         	goto	u3861
  9964   003406  EF07  F01A         	goto	u3860
  9965   00340A                     u3861:
  9966   00340A  EFE4  F019         	goto	l4184
  9967   00340E                     u3860:
  9968   00340E  EF0F  F01A         	goto	l4192
  9969   003412                     l4190:
  9970   003412  060A               	decf	___xxtofl@exp^0,f,c
  9971   003414  90D8               	bcf	status,0,c
  9972   003416  360B               	rlcf	___xxtofl@arg^0,f,c
  9973   003418  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9974   00341A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9975   00341C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9976   00341E                     l4192:
  9977   00341E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9978   003420  EF14  F01A         	goto	u3871
  9979   003424  EF16  F01A         	goto	u3870
  9980   003428                     u3871:
  9981   003428  EF1E  F01A         	goto	l1347
  9982   00342C                     u3870:
  9983   00342C  0E02               	movlw	2
  9984   00342E  600A               	cpfslt	___xxtofl@exp^0,c
  9985   003430  EF1C  F01A         	goto	u3881
  9986   003434  EF1E  F01A         	goto	u3880
  9987   003438                     u3881:
  9988   003438  EF09  F01A         	goto	l4190
  9989   00343C                     u3880:
  9990   00343C                     l1347:
  9991   00343C  B00A               	btfsc	___xxtofl@exp^0,0,c
  9992   00343E  EF23  F01A         	goto	u3891
  9993   003442  EF25  F01A         	goto	u3890
  9994   003446                     u3891:
  9995   003446  EF26  F01A         	goto	l4198
  9996   00344A                     u3890:
  9997   00344A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9998   00344C                     l4198:
  9999   00344C  90D8               	bcf	status,0,c
 10000   00344E  320A               	rrcf	___xxtofl@exp^0,f,c
 10001   003450  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10002   003454  6A06               	clrf	(??___xxtofl+1)^0,c
 10003   003456  6A07               	clrf	(??___xxtofl+2)^0,c
 10004   003458  6A08               	clrf	(??___xxtofl+3)^0,c
 10005   00345A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10006   00345E  6A07               	clrf	(??___xxtofl+2)^0,c
 10007   003460  6A06               	clrf	(??___xxtofl+1)^0,c
 10008   003462  6A05               	clrf	??___xxtofl^0,c
 10009   003464  5005               	movf	??___xxtofl^0,w,c
 10010   003466  120B               	iorwf	___xxtofl@arg^0,f,c
 10011   003468  5006               	movf	(??___xxtofl+1)^0,w,c
 10012   00346A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10013   00346C  5007               	movf	(??___xxtofl+2)^0,w,c
 10014   00346E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10015   003470  5008               	movf	(??___xxtofl+3)^0,w,c
 10016   003472  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10017   003474  5009               	movf	___xxtofl@sign^0,w,c
 10018   003476  B4D8               	btfsc	status,2,c
 10019   003478  EF40  F01A         	goto	u3901
 10020   00347C  EF42  F01A         	goto	u3900
 10021   003480                     u3901:
 10022   003480  EF4A  F01A         	goto	l4208
 10023   003484                     u3900:
 10024   003484  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10025   003486  EF49  F01A         	goto	u3910
 10026   00348A  EF47  F01A         	goto	u3911
 10027   00348E                     u3911:
 10028   00348E  EF4A  F01A         	goto	l4208
 10029   003492                     u3910:
 10030   003492  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10031   003494                     l4208:
 10032   003494  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10033   003498  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10034   00349C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10035   0034A0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10036   0034A4                     l1336:
 10037   0034A4  0012               	return		;funcret
 10038   0034A6                     __end_of___xxtofl:
 10039                           	callstack 0
 10040                           
 10041 ;; *************** function ___flsub *****************
 10042 ;; Defined at:
 10043 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  b               4   16[COMRAM] unsigned char 
 10046 ;;  a               4   20[COMRAM] unsigned char 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  4   16[COMRAM] unsigned char 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2, status,0, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10058 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10062 ;;Total ram usage:        8 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 2
 10065 ;; This function calls:
 10066 ;;		___fladd
 10067 ;; This function is called by:
 10068 ;;		_Colour_decider
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text63
 10073   004A40                     __ptext63:
 10074                           	callstack 0
 10075   004A40                     ___flsub:
 10076                           	callstack 27
 10077   004A40  0E00               	movlw	0
 10078   004A42  1A15               	xorwf	___flsub@a^0,f,c
 10079   004A44  0E00               	movlw	0
 10080   004A46  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10081   004A48  0E00               	movlw	0
 10082   004A4A  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10083   004A4C  0E80               	movlw	128
 10084   004A4E  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10085   004A50  C011  F001         	movff	___flsub@b,___fladd@b
 10086   004A54  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10087   004A58  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10088   004A5C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10089   004A60  C015  F005         	movff	___flsub@a,___fladd@a
 10090   004A64  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10091   004A68  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10092   004A6C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10093   004A70  EC0B  F00F         	call	___fladd	;wreg free
 10094   004A74  C001  F011         	movff	?___fladd,?___flsub
 10095   004A78  C002  F012         	movff	?___fladd+1,?___flsub+1
 10096   004A7C  C003  F013         	movff	?___fladd+2,?___flsub+2
 10097   004A80  C004  F014         	movff	?___fladd+3,?___flsub+3
 10098   004A84  0012               	return		;funcret
 10099   004A86                     __end_of___flsub:
 10100                           	callstack 0
 10101                           
 10102 ;; *************** function ___fladd *****************
 10103 ;; Defined at:
 10104 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  b               4    0[COMRAM] unsigned char 
 10107 ;;  a               4    4[COMRAM] unsigned char 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  grs             1   15[COMRAM] unsigned char 
 10110 ;;  bexp            1   14[COMRAM] unsigned char 
 10111 ;;  aexp            1   13[COMRAM] unsigned char 
 10112 ;;  signs           1   12[COMRAM] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  4    0[COMRAM] unsigned char 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;Total ram usage:       16 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; Hardware stack levels required when called: 1
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_colour_rel
 10133 ;;		_Colour_decider
 10134 ;;		___flsub
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text64
 10139   001E16                     __ptext64:
 10140                           	callstack 0
 10141   001E16                     ___fladd:
 10142                           	callstack 28
 10143   001E16  5004               	movf	(___fladd@b+3)^0,w,c
 10144   001E18  0B80               	andlw	128
 10145   001E1A  6E0D               	movwf	___fladd@signs^0,c
 10146   001E1C  5004               	movf	(___fladd@b+3)^0,w,c
 10147   001E1E  2404               	addwf	(___fladd@b+3)^0,w,c
 10148   001E20  6E0F               	movwf	___fladd@bexp^0,c
 10149   001E22  AE03               	btfss	(___fladd@b+2)^0,7,c
 10150   001E24  EF16  F00F         	goto	u2871
 10151   001E28  EF18  F00F         	goto	u2870
 10152   001E2C                     u2871:
 10153   001E2C  EF19  F00F         	goto	l3550
 10154   001E30                     u2870:
 10155   001E30  800F               	bsf	___fladd@bexp^0,0,c
 10156   001E32                     l3550:
 10157   001E32  500F               	movf	___fladd@bexp^0,w,c
 10158   001E34  B4D8               	btfsc	status,2,c
 10159   001E36  EF1F  F00F         	goto	u2881
 10160   001E3A  EF21  F00F         	goto	u2880
 10161   001E3E                     u2881:
 10162   001E3E  EF36  F00F         	goto	l3560
 10163   001E42                     u2880:
 10164   001E42  280F               	incf	___fladd@bexp^0,w,c
 10165   001E44  A4D8               	btfss	status,2,c
 10166   001E46  EF27  F00F         	goto	u2891
 10167   001E4A  EF29  F00F         	goto	u2890
 10168   001E4E                     u2891:
 10169   001E4E  EF31  F00F         	goto	l3556
 10170   001E52                     u2890:
 10171   001E52  0E00               	movlw	0
 10172   001E54  6E01               	movwf	___fladd@b^0,c
 10173   001E56  0E00               	movlw	0
 10174   001E58  6E02               	movwf	(___fladd@b+1)^0,c
 10175   001E5A  0E00               	movlw	0
 10176   001E5C  6E03               	movwf	(___fladd@b+2)^0,c
 10177   001E5E  0E00               	movlw	0
 10178   001E60  6E04               	movwf	(___fladd@b+3)^0,c
 10179   001E62                     l3556:
 10180   001E62  8E03               	bsf	(___fladd@b+2)^0,7,c
 10181   001E64  0E00               	movlw	0
 10182   001E66  6E04               	movwf	(___fladd@b+3)^0,c
 10183   001E68  EF3E  F00F         	goto	l3562
 10184   001E6C                     l3560:
 10185   001E6C  0E00               	movlw	0
 10186   001E6E  6E01               	movwf	___fladd@b^0,c
 10187   001E70  0E00               	movlw	0
 10188   001E72  6E02               	movwf	(___fladd@b+1)^0,c
 10189   001E74  0E00               	movlw	0
 10190   001E76  6E03               	movwf	(___fladd@b+2)^0,c
 10191   001E78  0E00               	movlw	0
 10192   001E7A  6E04               	movwf	(___fladd@b+3)^0,c
 10193   001E7C                     l3562:
 10194   001E7C  5008               	movf	(___fladd@a+3)^0,w,c
 10195   001E7E  0B80               	andlw	128
 10196   001E80  6E0E               	movwf	___fladd@aexp^0,c
 10197   001E82  500D               	movf	___fladd@signs^0,w,c
 10198   001E84  180E               	xorwf	___fladd@aexp^0,w,c
 10199   001E86  B4D8               	btfsc	status,2,c
 10200   001E88  EF48  F00F         	goto	u2901
 10201   001E8C  EF4A  F00F         	goto	u2900
 10202   001E90                     u2901:
 10203   001E90  EF4B  F00F         	goto	l3568
 10204   001E94                     u2900:
 10205   001E94  8C0D               	bsf	___fladd@signs^0,6,c
 10206   001E96                     l3568:
 10207   001E96  5008               	movf	(___fladd@a+3)^0,w,c
 10208   001E98  2408               	addwf	(___fladd@a+3)^0,w,c
 10209   001E9A  6E0E               	movwf	___fladd@aexp^0,c
 10210   001E9C  AE07               	btfss	(___fladd@a+2)^0,7,c
 10211   001E9E  EF53  F00F         	goto	u2911
 10212   001EA2  EF55  F00F         	goto	u2910
 10213   001EA6                     u2911:
 10214   001EA6  EF56  F00F         	goto	l3574
 10215   001EAA                     u2910:
 10216   001EAA  800E               	bsf	___fladd@aexp^0,0,c
 10217   001EAC                     l3574:
 10218   001EAC  500E               	movf	___fladd@aexp^0,w,c
 10219   001EAE  B4D8               	btfsc	status,2,c
 10220   001EB0  EF5C  F00F         	goto	u2921
 10221   001EB4  EF5E  F00F         	goto	u2920
 10222   001EB8                     u2921:
 10223   001EB8  EF73  F00F         	goto	l3584
 10224   001EBC                     u2920:
 10225   001EBC  280E               	incf	___fladd@aexp^0,w,c
 10226   001EBE  A4D8               	btfss	status,2,c
 10227   001EC0  EF64  F00F         	goto	u2931
 10228   001EC4  EF66  F00F         	goto	u2930
 10229   001EC8                     u2931:
 10230   001EC8  EF6E  F00F         	goto	l3580
 10231   001ECC                     u2930:
 10232   001ECC  0E00               	movlw	0
 10233   001ECE  6E05               	movwf	___fladd@a^0,c
 10234   001ED0  0E00               	movlw	0
 10235   001ED2  6E06               	movwf	(___fladd@a+1)^0,c
 10236   001ED4  0E00               	movlw	0
 10237   001ED6  6E07               	movwf	(___fladd@a+2)^0,c
 10238   001ED8  0E00               	movlw	0
 10239   001EDA  6E08               	movwf	(___fladd@a+3)^0,c
 10240   001EDC                     l3580:
 10241   001EDC  8E07               	bsf	(___fladd@a+2)^0,7,c
 10242   001EDE  0E00               	movlw	0
 10243   001EE0  6E08               	movwf	(___fladd@a+3)^0,c
 10244   001EE2  EF7B  F00F         	goto	l3586
 10245   001EE6                     l3584:
 10246   001EE6  0E00               	movlw	0
 10247   001EE8  6E05               	movwf	___fladd@a^0,c
 10248   001EEA  0E00               	movlw	0
 10249   001EEC  6E06               	movwf	(___fladd@a+1)^0,c
 10250   001EEE  0E00               	movlw	0
 10251   001EF0  6E07               	movwf	(___fladd@a+2)^0,c
 10252   001EF2  0E00               	movlw	0
 10253   001EF4  6E08               	movwf	(___fladd@a+3)^0,c
 10254   001EF6                     l3586:
 10255   001EF6  500F               	movf	___fladd@bexp^0,w,c
 10256   001EF8  5C0E               	subwf	___fladd@aexp^0,w,c
 10257   001EFA  B0D8               	btfsc	status,0,c
 10258   001EFC  EF82  F00F         	goto	u2941
 10259   001F00  EF84  F00F         	goto	u2940
 10260   001F04                     u2941:
 10261   001F04  EFAB  F00F         	goto	l3622
 10262   001F08                     u2940:
 10263   001F08  AC0D               	btfss	___fladd@signs^0,6,c
 10264   001F0A  EF89  F00F         	goto	u2951
 10265   001F0E  EF8B  F00F         	goto	u2950
 10266   001F12                     u2951:
 10267   001F12  EF8D  F00F         	goto	l3592
 10268   001F16                     u2950:
 10269   001F16  0E80               	movlw	128
 10270   001F18  1A0D               	xorwf	___fladd@signs^0,f,c
 10271   001F1A                     l3592:
 10272   001F1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10273   001F1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10274   001F22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10275   001F26  C001  F010         	movff	___fladd@b,___fladd@grs
 10276   001F2A  C005  F001         	movff	___fladd@a,___fladd@b
 10277   001F2E  C010  F005         	movff	___fladd@grs,___fladd@a
 10278   001F32  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10279   001F36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10280   001F3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10281   001F3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10282   001F42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10283   001F46  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10284   001F4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10285   001F4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10286   001F52  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10287   001F56                     l3622:
 10288   001F56  0E00               	movlw	0
 10289   001F58  6E10               	movwf	___fladd@grs^0,c
 10290   001F5A  500F               	movf	___fladd@bexp^0,w,c
 10291   001F5C  C00E  F009         	movff	___fladd@aexp,??___fladd
 10292   001F60  6A0A               	clrf	(??___fladd+1)^0,c
 10293   001F62  5E09               	subwf	??___fladd^0,f,c
 10294   001F64  0E00               	movlw	0
 10295   001F66  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10296   001F68  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10297   001F6A  EFC0  F00F         	goto	u2961
 10298   001F6E  500A               	movf	(??___fladd+1)^0,w,c
 10299   001F70  E109               	bnz	u2960
 10300   001F72  0E1A               	movlw	26
 10301   001F74  5C09               	subwf	??___fladd^0,w,c
 10302   001F76  A0D8               	btfss	status,0,c
 10303   001F78  EFC0  F00F         	goto	u2961
 10304   001F7C  EFC2  F00F         	goto	u2960
 10305   001F80                     u2961:
 10306   001F80  EFF9  F00F         	goto	l1207
 10307   001F84                     u2960:
 10308   001F84  5001               	movf	___fladd@b^0,w,c
 10309   001F86  1002               	iorwf	(___fladd@b+1)^0,w,c
 10310   001F88  1003               	iorwf	(___fladd@b+2)^0,w,c
 10311   001F8A  1004               	iorwf	(___fladd@b+3)^0,w,c
 10312   001F8C  A4D8               	btfss	status,2,c
 10313   001F8E  EFCB  F00F         	goto	u2971
 10314   001F92  EFCE  F00F         	goto	u2970
 10315   001F96                     u2971:
 10316   001F96  0E01               	movlw	1
 10317   001F98  EFCF  F00F         	goto	u2980
 10318   001F9C                     u2970:
 10319   001F9C  0E00               	movlw	0
 10320   001F9E                     u2980:
 10321   001F9E  6E10               	movwf	___fladd@grs^0,c
 10322   001FA0  0E00               	movlw	0
 10323   001FA2  6E01               	movwf	___fladd@b^0,c
 10324   001FA4  0E00               	movlw	0
 10325   001FA6  6E02               	movwf	(___fladd@b+1)^0,c
 10326   001FA8  0E00               	movlw	0
 10327   001FAA  6E03               	movwf	(___fladd@b+2)^0,c
 10328   001FAC  0E00               	movlw	0
 10329   001FAE  6E04               	movwf	(___fladd@b+3)^0,c
 10330   001FB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10331   001FB4  EF02  F010         	goto	l1206
 10332   001FB8                     l1208:
 10333   001FB8  A010               	btfss	___fladd@grs^0,0,c
 10334   001FBA  EFE1  F00F         	goto	u2991
 10335   001FBE  EFE3  F00F         	goto	u2990
 10336   001FC2                     u2991:
 10337   001FC2  EFE9  F00F         	goto	l3634
 10338   001FC6                     u2990:
 10339   001FC6  90D8               	bcf	status,0,c
 10340   001FC8  3010               	rrcf	___fladd@grs^0,w,c
 10341   001FCA  0901               	iorlw	1
 10342   001FCC  6E10               	movwf	___fladd@grs^0,c
 10343   001FCE  EFEB  F00F         	goto	l3636
 10344   001FD2                     l3634:
 10345   001FD2  90D8               	bcf	status,0,c
 10346   001FD4  3210               	rrcf	___fladd@grs^0,f,c
 10347   001FD6                     l3636:
 10348   001FD6  A001               	btfss	___fladd@b^0,0,c
 10349   001FD8  EFF0  F00F         	goto	u3001
 10350   001FDC  EFF2  F00F         	goto	u3000
 10351   001FE0                     u3001:
 10352   001FE0  EFF3  F00F         	goto	l3640
 10353   001FE4                     u3000:
 10354   001FE4  8E10               	bsf	___fladd@grs^0,7,c
 10355   001FE6                     l3640:
 10356   001FE6  3404               	rlcf	(___fladd@b+3)^0,w,c
 10357   001FE8  3204               	rrcf	(___fladd@b+3)^0,f,c
 10358   001FEA  3203               	rrcf	(___fladd@b+2)^0,f,c
 10359   001FEC  3202               	rrcf	(___fladd@b+1)^0,f,c
 10360   001FEE  3201               	rrcf	___fladd@b^0,f,c
 10361   001FF0  2A0F               	incf	___fladd@bexp^0,f,c
 10362   001FF2                     l1207:
 10363   001FF2  500E               	movf	___fladd@aexp^0,w,c
 10364   001FF4  5C0F               	subwf	___fladd@bexp^0,w,c
 10365   001FF6  A0D8               	btfss	status,0,c
 10366   001FF8  EF00  F010         	goto	u3011
 10367   001FFC  EF02  F010         	goto	u3010
 10368   002000                     u3011:
 10369   002000  EFDC  F00F         	goto	l1208
 10370   002004                     u3010:
 10371   002004                     l1206:
 10372   002004  BC0D               	btfsc	___fladd@signs^0,6,c
 10373   002006  EF07  F010         	goto	u3021
 10374   00200A  EF09  F010         	goto	u3020
 10375   00200E                     u3021:
 10376   00200E  EF49  F010         	goto	l3668
 10377   002012                     u3020:
 10378   002012  500F               	movf	___fladd@bexp^0,w,c
 10379   002014  A4D8               	btfss	status,2,c
 10380   002016  EF0F  F010         	goto	u3031
 10381   00201A  EF11  F010         	goto	u3030
 10382   00201E                     u3031:
 10383   00201E  EF1B  F010         	goto	l3650
 10384   002022                     u3030:
 10385   002022  0E00               	movlw	0
 10386   002024  6E01               	movwf	?___fladd^0,c
 10387   002026  0E00               	movlw	0
 10388   002028  6E02               	movwf	(?___fladd+1)^0,c
 10389   00202A  0E00               	movlw	0
 10390   00202C  6E03               	movwf	(?___fladd+2)^0,c
 10391   00202E  0E00               	movlw	0
 10392   002030  6E04               	movwf	(?___fladd+3)^0,c
 10393   002032  EF6A  F011         	goto	l1215
 10394   002036                     l3650:
 10395   002036  5005               	movf	___fladd@a^0,w,c
 10396   002038  2601               	addwf	___fladd@b^0,f,c
 10397   00203A  5006               	movf	(___fladd@a+1)^0,w,c
 10398   00203C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10399   00203E  5007               	movf	(___fladd@a+2)^0,w,c
 10400   002040  2203               	addwfc	(___fladd@b+2)^0,f,c
 10401   002042  5008               	movf	(___fladd@a+3)^0,w,c
 10402   002044  2204               	addwfc	(___fladd@b+3)^0,f,c
 10403   002046  A004               	btfss	(___fladd@b+3)^0,0,c
 10404   002048  EF28  F010         	goto	u3041
 10405   00204C  EF2A  F010         	goto	u3040
 10406   002050                     u3041:
 10407   002050  EFD6  F010         	goto	l3704
 10408   002054                     u3040:
 10409   002054  A010               	btfss	___fladd@grs^0,0,c
 10410   002056  EF2F  F010         	goto	u3051
 10411   00205A  EF31  F010         	goto	u3050
 10412   00205E                     u3051:
 10413   00205E  EF37  F010         	goto	l3658
 10414   002062                     u3050:
 10415   002062  90D8               	bcf	status,0,c
 10416   002064  3010               	rrcf	___fladd@grs^0,w,c
 10417   002066  0901               	iorlw	1
 10418   002068  6E10               	movwf	___fladd@grs^0,c
 10419   00206A  EF39  F010         	goto	l3660
 10420   00206E                     l3658:
 10421   00206E  90D8               	bcf	status,0,c
 10422   002070  3210               	rrcf	___fladd@grs^0,f,c
 10423   002072                     l3660:
 10424   002072  A001               	btfss	___fladd@b^0,0,c
 10425   002074  EF3E  F010         	goto	u3061
 10426   002078  EF40  F010         	goto	u3060
 10427   00207C                     u3061:
 10428   00207C  EF41  F010         	goto	l3664
 10429   002080                     u3060:
 10430   002080  8E10               	bsf	___fladd@grs^0,7,c
 10431   002082                     l3664:
 10432   002082  3404               	rlcf	(___fladd@b+3)^0,w,c
 10433   002084  3204               	rrcf	(___fladd@b+3)^0,f,c
 10434   002086  3203               	rrcf	(___fladd@b+2)^0,f,c
 10435   002088  3202               	rrcf	(___fladd@b+1)^0,f,c
 10436   00208A  3201               	rrcf	___fladd@b^0,f,c
 10437   00208C  2A0F               	incf	___fladd@bexp^0,f,c
 10438   00208E  EFD6  F010         	goto	l3704
 10439   002092                     l3668:
 10440   002092  5005               	movf	___fladd@a^0,w,c
 10441   002094  5C01               	subwf	___fladd@b^0,w,c
 10442   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10443   002098  5802               	subwfb	(___fladd@b+1)^0,w,c
 10444   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10445   00209C  5803               	subwfb	(___fladd@b+2)^0,w,c
 10446   00209E  5004               	movf	(___fladd@b+3)^0,w,c
 10447   0020A0  0A80               	xorlw	128
 10448   0020A2  6E09               	movwf	??___fladd^0,c
 10449   0020A4  5008               	movf	(___fladd@a+3)^0,w,c
 10450   0020A6  0A80               	xorlw	128
 10451   0020A8  5809               	subwfb	??___fladd^0,w,c
 10452   0020AA  B0D8               	btfsc	status,0,c
 10453   0020AC  EF5A  F010         	goto	u3071
 10454   0020B0  EF5C  F010         	goto	u3070
 10455   0020B4                     u3071:
 10456   0020B4  EF87  F010         	goto	l3678
 10457   0020B8                     u3070:
 10458   0020B8  5001               	movf	___fladd@b^0,w,c
 10459   0020BA  5C05               	subwf	___fladd@a^0,w,c
 10460   0020BC  6E09               	movwf	??___fladd^0,c
 10461   0020BE  5002               	movf	(___fladd@b+1)^0,w,c
 10462   0020C0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10463   0020C2  6E0A               	movwf	(??___fladd+1)^0,c
 10464   0020C4  5003               	movf	(___fladd@b+2)^0,w,c
 10465   0020C6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10466   0020C8  6E0B               	movwf	(??___fladd+2)^0,c
 10467   0020CA  5004               	movf	(___fladd@b+3)^0,w,c
 10468   0020CC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10469   0020CE  6E0C               	movwf	(??___fladd+3)^0,c
 10470   0020D0  0EFF               	movlw	255
 10471   0020D2  2409               	addwf	??___fladd^0,w,c
 10472   0020D4  6E01               	movwf	___fladd@b^0,c
 10473   0020D6  0EFF               	movlw	255
 10474   0020D8  200A               	addwfc	(??___fladd+1)^0,w,c
 10475   0020DA  6E02               	movwf	(___fladd@b+1)^0,c
 10476   0020DC  0EFF               	movlw	255
 10477   0020DE  200B               	addwfc	(??___fladd+2)^0,w,c
 10478   0020E0  6E03               	movwf	(___fladd@b+2)^0,c
 10479   0020E2  0EFF               	movlw	255
 10480   0020E4  200C               	addwfc	(??___fladd+3)^0,w,c
 10481   0020E6  6E04               	movwf	(___fladd@b+3)^0,c
 10482   0020E8  0E80               	movlw	128
 10483   0020EA  1A0D               	xorwf	___fladd@signs^0,f,c
 10484   0020EC  6C10               	negf	___fladd@grs^0,c
 10485   0020EE  5010               	movf	___fladd@grs^0,w,c
 10486   0020F0  A4D8               	btfss	status,2,c
 10487   0020F2  EF7D  F010         	goto	u3081
 10488   0020F6  EF7F  F010         	goto	u3080
 10489   0020FA                     u3081:
 10490   0020FA  EF8F  F010         	goto	l1223
 10491   0020FE                     u3080:
 10492   0020FE  0E01               	movlw	1
 10493   002100  2601               	addwf	___fladd@b^0,f,c
 10494   002102  0E00               	movlw	0
 10495   002104  2202               	addwfc	(___fladd@b+1)^0,f,c
 10496   002106  2203               	addwfc	(___fladd@b+2)^0,f,c
 10497   002108  2204               	addwfc	(___fladd@b+3)^0,f,c
 10498   00210A  EF8F  F010         	goto	l1223
 10499   00210E                     l3678:
 10500   00210E  5005               	movf	___fladd@a^0,w,c
 10501   002110  5E01               	subwf	___fladd@b^0,f,c
 10502   002112  5006               	movf	(___fladd@a+1)^0,w,c
 10503   002114  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10504   002116  5007               	movf	(___fladd@a+2)^0,w,c
 10505   002118  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10506   00211A  5008               	movf	(___fladd@a+3)^0,w,c
 10507   00211C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10508   00211E                     l1223:
 10509   00211E  5001               	movf	___fladd@b^0,w,c
 10510   002120  1002               	iorwf	(___fladd@b+1)^0,w,c
 10511   002122  1003               	iorwf	(___fladd@b+2)^0,w,c
 10512   002124  1004               	iorwf	(___fladd@b+3)^0,w,c
 10513   002126  A4D8               	btfss	status,2,c
 10514   002128  EF98  F010         	goto	u3091
 10515   00212C  EF9A  F010         	goto	u3090
 10516   002130                     u3091:
 10517   002130  EFCF  F010         	goto	l3702
 10518   002134                     u3090:
 10519   002134  5010               	movf	___fladd@grs^0,w,c
 10520   002136  A4D8               	btfss	status,2,c
 10521   002138  EFA0  F010         	goto	u3101
 10522   00213C  EFA2  F010         	goto	u3100
 10523   002140                     u3101:
 10524   002140  EFCF  F010         	goto	l3702
 10525   002144                     u3100:
 10526   002144  0E00               	movlw	0
 10527   002146  6E01               	movwf	?___fladd^0,c
 10528   002148  0E00               	movlw	0
 10529   00214A  6E02               	movwf	(?___fladd+1)^0,c
 10530   00214C  0E00               	movlw	0
 10531   00214E  6E03               	movwf	(?___fladd+2)^0,c
 10532   002150  0E00               	movlw	0
 10533   002152  6E04               	movwf	(?___fladd+3)^0,c
 10534   002154  EF6A  F011         	goto	l1215
 10535   002158                     l3686:
 10536   002158  90D8               	bcf	status,0,c
 10537   00215A  3601               	rlcf	___fladd@b^0,f,c
 10538   00215C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10539   00215E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10540   002160  3604               	rlcf	(___fladd@b+3)^0,f,c
 10541   002162  AE10               	btfss	___fladd@grs^0,7,c
 10542   002164  EFB6  F010         	goto	u3111
 10543   002168  EFB8  F010         	goto	u3110
 10544   00216C                     u3111:
 10545   00216C  EFB9  F010         	goto	l3692
 10546   002170                     u3110:
 10547   002170  8001               	bsf	___fladd@b^0,0,c
 10548   002172                     l3692:
 10549   002172  A010               	btfss	___fladd@grs^0,0,c
 10550   002174  EFBE  F010         	goto	u3121
 10551   002178  EFC0  F010         	goto	u3120
 10552   00217C                     u3121:
 10553   00217C  EFC4  F010         	goto	l3696
 10554   002180                     u3120:
 10555   002180  80D8               	bsf	status,0,c
 10556   002182  3610               	rlcf	___fladd@grs^0,f,c
 10557   002184  EFC6  F010         	goto	l3698
 10558   002188                     l3696:
 10559   002188  90D8               	bcf	status,0,c
 10560   00218A  3610               	rlcf	___fladd@grs^0,f,c
 10561   00218C                     l3698:
 10562   00218C  500F               	movf	___fladd@bexp^0,w,c
 10563   00218E  B4D8               	btfsc	status,2,c
 10564   002190  EFCC  F010         	goto	u3131
 10565   002194  EFCE  F010         	goto	u3130
 10566   002198                     u3131:
 10567   002198  EFCF  F010         	goto	l3702
 10568   00219C                     u3130:
 10569   00219C  060F               	decf	___fladd@bexp^0,f,c
 10570   00219E                     l3702:
 10571   00219E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10572   0021A0  EFD4  F010         	goto	u3141
 10573   0021A4  EFD6  F010         	goto	u3140
 10574   0021A8                     u3141:
 10575   0021A8  EFAC  F010         	goto	l3686
 10576   0021AC                     u3140:
 10577   0021AC                     l3704:
 10578   0021AC  0E00               	movlw	0
 10579   0021AE  6E0E               	movwf	___fladd@aexp^0,c
 10580   0021B0  AE10               	btfss	___fladd@grs^0,7,c
 10581   0021B2  EFDD  F010         	goto	u3151
 10582   0021B6  EFDF  F010         	goto	u3150
 10583   0021BA                     u3151:
 10584   0021BA  EFF7  F010         	goto	l1232
 10585   0021BE                     u3150:
 10586   0021BE  C010  F009         	movff	___fladd@grs,??___fladd
 10587   0021C2  0E7F               	movlw	127
 10588   0021C4  1609               	andwf	??___fladd^0,f,c
 10589   0021C6  B4D8               	btfsc	status,2,c
 10590   0021C8  EFE8  F010         	goto	u3161
 10591   0021CC  EFEA  F010         	goto	u3160
 10592   0021D0                     u3161:
 10593   0021D0  EFEE  F010         	goto	l1233
 10594   0021D4                     u3160:
 10595   0021D4                     l3710:
 10596   0021D4  0E01               	movlw	1
 10597   0021D6  6E0E               	movwf	___fladd@aexp^0,c
 10598   0021D8  EFF7  F010         	goto	l1232
 10599   0021DC                     l1233:
 10600   0021DC  A001               	btfss	___fladd@b^0,0,c
 10601   0021DE  EFF3  F010         	goto	u3171
 10602   0021E2  EFF5  F010         	goto	u3170
 10603   0021E6                     u3171:
 10604   0021E6  EFF7  F010         	goto	l1232
 10605   0021EA                     u3170:
 10606   0021EA  EFEA  F010         	goto	l3710
 10607   0021EE                     l1232:
 10608   0021EE  500E               	movf	___fladd@aexp^0,w,c
 10609   0021F0  B4D8               	btfsc	status,2,c
 10610   0021F2  EFFD  F010         	goto	u3181
 10611   0021F6  EFFF  F010         	goto	u3180
 10612   0021FA                     u3181:
 10613   0021FA  EF2A  F011         	goto	l3722
 10614   0021FE                     u3180:
 10615   0021FE  0E01               	movlw	1
 10616   002200  2601               	addwf	___fladd@b^0,f,c
 10617   002202  0E00               	movlw	0
 10618   002204  2202               	addwfc	(___fladd@b+1)^0,f,c
 10619   002206  2203               	addwfc	(___fladd@b+2)^0,f,c
 10620   002208  2204               	addwfc	(___fladd@b+3)^0,f,c
 10621   00220A  A004               	btfss	(___fladd@b+3)^0,0,c
 10622   00220C  EF0A  F011         	goto	u3191
 10623   002210  EF0C  F011         	goto	u3190
 10624   002214                     u3191:
 10625   002214  EF2A  F011         	goto	l3722
 10626   002218                     u3190:
 10627   002218  C001  F009         	movff	___fladd@b,??___fladd
 10628   00221C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10629   002220  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10630   002224  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10631   002228  340C               	rlcf	(??___fladd+3)^0,w,c
 10632   00222A  320C               	rrcf	(??___fladd+3)^0,f,c
 10633   00222C  320B               	rrcf	(??___fladd+2)^0,f,c
 10634   00222E  320A               	rrcf	(??___fladd+1)^0,f,c
 10635   002230  3209               	rrcf	??___fladd^0,f,c
 10636   002232  C009  F001         	movff	??___fladd,___fladd@b
 10637   002236  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10638   00223A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10639   00223E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10640   002242  280F               	incf	___fladd@bexp^0,w,c
 10641   002244  B4D8               	btfsc	status,2,c
 10642   002246  EF27  F011         	goto	u3201
 10643   00224A  EF29  F011         	goto	u3200
 10644   00224E                     u3201:
 10645   00224E  EF2A  F011         	goto	l3722
 10646   002252                     u3200:
 10647   002252  2A0F               	incf	___fladd@bexp^0,f,c
 10648   002254                     l3722:
 10649   002254  280F               	incf	___fladd@bexp^0,w,c
 10650   002256  B4D8               	btfsc	status,2,c
 10651   002258  EF30  F011         	goto	u3211
 10652   00225C  EF32  F011         	goto	u3210
 10653   002260                     u3211:
 10654   002260  EF3A  F011         	goto	l3726
 10655   002264                     u3210:
 10656   002264  500F               	movf	___fladd@bexp^0,w,c
 10657   002266  A4D8               	btfss	status,2,c
 10658   002268  EF38  F011         	goto	u3221
 10659   00226C  EF3A  F011         	goto	u3220
 10660   002270                     u3221:
 10661   002270  EF4C  F011         	goto	l3730
 10662   002274                     u3220:
 10663   002274                     l3726:
 10664   002274  0E00               	movlw	0
 10665   002276  6E01               	movwf	___fladd@b^0,c
 10666   002278  0E00               	movlw	0
 10667   00227A  6E02               	movwf	(___fladd@b+1)^0,c
 10668   00227C  0E00               	movlw	0
 10669   00227E  6E03               	movwf	(___fladd@b+2)^0,c
 10670   002280  0E00               	movlw	0
 10671   002282  6E04               	movwf	(___fladd@b+3)^0,c
 10672   002284  500F               	movf	___fladd@bexp^0,w,c
 10673   002286  A4D8               	btfss	status,2,c
 10674   002288  EF48  F011         	goto	u3231
 10675   00228C  EF4A  F011         	goto	u3230
 10676   002290                     u3231:
 10677   002290  EF4C  F011         	goto	l3730
 10678   002294                     u3230:
 10679   002294  0E00               	movlw	0
 10680   002296  6E0D               	movwf	___fladd@signs^0,c
 10681   002298                     l3730:
 10682   002298  A00F               	btfss	___fladd@bexp^0,0,c
 10683   00229A  EF51  F011         	goto	u3241
 10684   00229E  EF53  F011         	goto	u3240
 10685   0022A2                     u3241:
 10686   0022A2  EF56  F011         	goto	l3734
 10687   0022A6                     u3240:
 10688   0022A6  8E03               	bsf	(___fladd@b+2)^0,7,c
 10689   0022A8  EF57  F011         	goto	l3736
 10690   0022AC                     l3734:
 10691   0022AC  9E03               	bcf	(___fladd@b+2)^0,7,c
 10692   0022AE                     l3736:
 10693   0022AE  90D8               	bcf	status,0,c
 10694   0022B0  300F               	rrcf	___fladd@bexp^0,w,c
 10695   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10696   0022B4  AE0D               	btfss	___fladd@signs^0,7,c
 10697   0022B6  EF5F  F011         	goto	u3251
 10698   0022BA  EF61  F011         	goto	u3250
 10699   0022BE                     u3251:
 10700   0022BE  EF62  F011         	goto	l3742
 10701   0022C2                     u3250:
 10702   0022C2  8E04               	bsf	(___fladd@b+3)^0,7,c
 10703   0022C4                     l3742:
 10704   0022C4  C001  F001         	movff	___fladd@b,?___fladd
 10705   0022C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10706   0022CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10707   0022D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10708   0022D4                     l1215:
 10709   0022D4  0012               	return		;funcret
 10710   0022D6                     __end_of___fladd:
 10711                           	callstack 0
 10712                           
 10713 ;; *************** function ___flmul *****************
 10714 ;; Defined at:
 10715 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  b               4   49[COMRAM] unsigned char 
 10718 ;;  a               4   53[COMRAM] unsigned char 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  prod            4   68[COMRAM] struct .
 10721 ;;  grs             4   62[COMRAM] unsigned long 
 10722 ;;  temp            2   72[COMRAM] struct .
 10723 ;;  bexp            1   67[COMRAM] unsigned char 
 10724 ;;  aexp            1   66[COMRAM] unsigned char 
 10725 ;;  sign            1   61[COMRAM] unsigned char 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  4   49[COMRAM] unsigned char 
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0, prodl, prodh
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;Total ram usage:       25 bytes
 10740 ;; Hardware stack levels used: 1
 10741 ;; Hardware stack levels required when called: 1
 10742 ;; This function calls:
 10743 ;;		Nothing
 10744 ;; This function is called by:
 10745 ;;		_Colour_decider
 10746 ;;		_turnRight45
 10747 ;;		_turnLeft45
 10748 ;;		_reverseOneBlock
 10749 ;;		_ForwardOneBlock
 10750 ;;		_Forwardhalfblock
 10751 ;;		_Backhalfblock
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text65
 10756   0022D6                     __ptext65:
 10757                           	callstack 0
 10758   0022D6                     ___flmul:
 10759                           	callstack 28
 10760   0022D6  5035               	movf	(___flmul@b+3)^0,w,c
 10761   0022D8  0B80               	andlw	128
 10762   0022DA  6E3E               	movwf	___flmul@sign^0,c
 10763   0022DC  5035               	movf	(___flmul@b+3)^0,w,c
 10764   0022DE  2435               	addwf	(___flmul@b+3)^0,w,c
 10765   0022E0  6E44               	movwf	___flmul@bexp^0,c
 10766   0022E2  AE34               	btfss	(___flmul@b+2)^0,7,c
 10767   0022E4  EF76  F011         	goto	u3551
 10768   0022E8  EF78  F011         	goto	u3550
 10769   0022EC                     u3551:
 10770   0022EC  EF79  F011         	goto	l3998
 10771   0022F0                     u3550:
 10772   0022F0  8044               	bsf	___flmul@bexp^0,0,c
 10773   0022F2                     l3998:
 10774   0022F2  5044               	movf	___flmul@bexp^0,w,c
 10775   0022F4  B4D8               	btfsc	status,2,c
 10776   0022F6  EF7F  F011         	goto	u3561
 10777   0022FA  EF81  F011         	goto	u3560
 10778   0022FE                     u3561:
 10779   0022FE  EF94  F011         	goto	l4006
 10780   002302                     u3560:
 10781   002302  2844               	incf	___flmul@bexp^0,w,c
 10782   002304  A4D8               	btfss	status,2,c
 10783   002306  EF87  F011         	goto	u3571
 10784   00230A  EF89  F011         	goto	u3570
 10785   00230E                     u3571:
 10786   00230E  EF91  F011         	goto	l4004
 10787   002312                     u3570:
 10788   002312  0E00               	movlw	0
 10789   002314  6E32               	movwf	___flmul@b^0,c
 10790   002316  0E00               	movlw	0
 10791   002318  6E33               	movwf	(___flmul@b+1)^0,c
 10792   00231A  0E00               	movlw	0
 10793   00231C  6E34               	movwf	(___flmul@b+2)^0,c
 10794   00231E  0E00               	movlw	0
 10795   002320  6E35               	movwf	(___flmul@b+3)^0,c
 10796   002322                     l4004:
 10797   002322  8E34               	bsf	(___flmul@b+2)^0,7,c
 10798   002324  EF9C  F011         	goto	l4008
 10799   002328                     l4006:
 10800   002328  0E00               	movlw	0
 10801   00232A  6E32               	movwf	___flmul@b^0,c
 10802   00232C  0E00               	movlw	0
 10803   00232E  6E33               	movwf	(___flmul@b+1)^0,c
 10804   002330  0E00               	movlw	0
 10805   002332  6E34               	movwf	(___flmul@b+2)^0,c
 10806   002334  0E00               	movlw	0
 10807   002336  6E35               	movwf	(___flmul@b+3)^0,c
 10808   002338                     l4008:
 10809   002338  5039               	movf	(___flmul@a+3)^0,w,c
 10810   00233A  0B80               	andlw	128
 10811   00233C  1A3E               	xorwf	___flmul@sign^0,f,c
 10812   00233E  5039               	movf	(___flmul@a+3)^0,w,c
 10813   002340  2439               	addwf	(___flmul@a+3)^0,w,c
 10814   002342  6E43               	movwf	___flmul@aexp^0,c
 10815   002344  AE38               	btfss	(___flmul@a+2)^0,7,c
 10816   002346  EFA7  F011         	goto	u3581
 10817   00234A  EFA9  F011         	goto	u3580
 10818   00234E                     u3581:
 10819   00234E  EFAA  F011         	goto	l4016
 10820   002352                     u3580:
 10821   002352  8043               	bsf	___flmul@aexp^0,0,c
 10822   002354                     l4016:
 10823   002354  5043               	movf	___flmul@aexp^0,w,c
 10824   002356  B4D8               	btfsc	status,2,c
 10825   002358  EFB0  F011         	goto	u3591
 10826   00235C  EFB2  F011         	goto	u3590
 10827   002360                     u3591:
 10828   002360  EFC5  F011         	goto	l4024
 10829   002364                     u3590:
 10830   002364  2843               	incf	___flmul@aexp^0,w,c
 10831   002366  A4D8               	btfss	status,2,c
 10832   002368  EFB8  F011         	goto	u3601
 10833   00236C  EFBA  F011         	goto	u3600
 10834   002370                     u3601:
 10835   002370  EFC2  F011         	goto	l4022
 10836   002374                     u3600:
 10837   002374  0E00               	movlw	0
 10838   002376  6E36               	movwf	___flmul@a^0,c
 10839   002378  0E00               	movlw	0
 10840   00237A  6E37               	movwf	(___flmul@a+1)^0,c
 10841   00237C  0E00               	movlw	0
 10842   00237E  6E38               	movwf	(___flmul@a+2)^0,c
 10843   002380  0E00               	movlw	0
 10844   002382  6E39               	movwf	(___flmul@a+3)^0,c
 10845   002384                     l4022:
 10846   002384  8E38               	bsf	(___flmul@a+2)^0,7,c
 10847   002386  EFCD  F011         	goto	l1292
 10848   00238A                     l4024:
 10849   00238A  0E00               	movlw	0
 10850   00238C  6E36               	movwf	___flmul@a^0,c
 10851   00238E  0E00               	movlw	0
 10852   002390  6E37               	movwf	(___flmul@a+1)^0,c
 10853   002392  0E00               	movlw	0
 10854   002394  6E38               	movwf	(___flmul@a+2)^0,c
 10855   002396  0E00               	movlw	0
 10856   002398  6E39               	movwf	(___flmul@a+3)^0,c
 10857   00239A                     l1292:
 10858   00239A  5043               	movf	___flmul@aexp^0,w,c
 10859   00239C  B4D8               	btfsc	status,2,c
 10860   00239E  EFD3  F011         	goto	u3611
 10861   0023A2  EFD5  F011         	goto	u3610
 10862   0023A6                     u3611:
 10863   0023A6  EFDD  F011         	goto	l4028
 10864   0023AA                     u3610:
 10865   0023AA  5044               	movf	___flmul@bexp^0,w,c
 10866   0023AC  A4D8               	btfss	status,2,c
 10867   0023AE  EFDB  F011         	goto	u3621
 10868   0023B2  EFDD  F011         	goto	u3620
 10869   0023B6                     u3621:
 10870   0023B6  EFE7  F011         	goto	l4032
 10871   0023BA                     u3620:
 10872   0023BA                     l4028:
 10873   0023BA  0E00               	movlw	0
 10874   0023BC  6E32               	movwf	?___flmul^0,c
 10875   0023BE  0E00               	movlw	0
 10876   0023C0  6E33               	movwf	(?___flmul+1)^0,c
 10877   0023C2  0E00               	movlw	0
 10878   0023C4  6E34               	movwf	(?___flmul+2)^0,c
 10879   0023C6  0E00               	movlw	0
 10880   0023C8  6E35               	movwf	(?___flmul+3)^0,c
 10881   0023CA  EF7F  F013         	goto	l1296
 10882   0023CE                     l4032:
 10883   0023CE  5038               	movf	(___flmul@a+2)^0,w,c
 10884   0023D0  0232               	mulwf	___flmul@b^0,c
 10885   0023D2  CFF3 F049          	movff	prodl,___flmul@temp
 10886   0023D6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10887   0023DA  5049               	movf	___flmul@temp^0,w,c
 10888   0023DC  6E3F               	movwf	___flmul@grs^0,c
 10889   0023DE  6A40               	clrf	(___flmul@grs+1)^0,c
 10890   0023E0  6A41               	clrf	(___flmul@grs+2)^0,c
 10891   0023E2  6A42               	clrf	(___flmul@grs+3)^0,c
 10892   0023E4  504A               	movf	(___flmul@temp+1)^0,w,c
 10893   0023E6  6E45               	movwf	___flmul@prod^0,c
 10894   0023E8  6A46               	clrf	(___flmul@prod+1)^0,c
 10895   0023EA  6A47               	clrf	(___flmul@prod+2)^0,c
 10896   0023EC  6A48               	clrf	(___flmul@prod+3)^0,c
 10897   0023EE  5037               	movf	(___flmul@a+1)^0,w,c
 10898   0023F0  0233               	mulwf	(___flmul@b+1)^0,c
 10899   0023F2  CFF3 F049          	movff	prodl,___flmul@temp
 10900   0023F6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10901   0023FA  5049               	movf	___flmul@temp^0,w,c
 10902   0023FC  263F               	addwf	___flmul@grs^0,f,c
 10903   0023FE  0E00               	movlw	0
 10904   002400  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10905   002402  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10906   002404  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10907   002406  504A               	movf	(___flmul@temp+1)^0,w,c
 10908   002408  2645               	addwf	___flmul@prod^0,f,c
 10909   00240A  0E00               	movlw	0
 10910   00240C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10911   00240E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10912   002410  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10913   002412  5036               	movf	___flmul@a^0,w,c
 10914   002414  0234               	mulwf	(___flmul@b+2)^0,c
 10915   002416  CFF3 F049          	movff	prodl,___flmul@temp
 10916   00241A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10917   00241E  5049               	movf	___flmul@temp^0,w,c
 10918   002420  263F               	addwf	___flmul@grs^0,f,c
 10919   002422  0E00               	movlw	0
 10920   002424  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10921   002426  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10922   002428  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10923   00242A  504A               	movf	(___flmul@temp+1)^0,w,c
 10924   00242C  2645               	addwf	___flmul@prod^0,f,c
 10925   00242E  0E00               	movlw	0
 10926   002430  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10927   002432  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10928   002434  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10929   002436  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10930   00243A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10931   00243E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10932   002442  6A3F               	clrf	___flmul@grs^0,c
 10933   002444  5036               	movf	___flmul@a^0,w,c
 10934   002446  0233               	mulwf	(___flmul@b+1)^0,c
 10935   002448  CFF3 F049          	movff	prodl,___flmul@temp
 10936   00244C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10937   002450  5049               	movf	___flmul@temp^0,w,c
 10938   002452  263F               	addwf	___flmul@grs^0,f,c
 10939   002454  504A               	movf	(___flmul@temp+1)^0,w,c
 10940   002456  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10941   002458  0E00               	movlw	0
 10942   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10943   00245C  0E00               	movlw	0
 10944   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10945   002460  5037               	movf	(___flmul@a+1)^0,w,c
 10946   002462  0232               	mulwf	___flmul@b^0,c
 10947   002464  CFF3 F049          	movff	prodl,___flmul@temp
 10948   002468  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10949   00246C  5049               	movf	___flmul@temp^0,w,c
 10950   00246E  263F               	addwf	___flmul@grs^0,f,c
 10951   002470  504A               	movf	(___flmul@temp+1)^0,w,c
 10952   002472  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10953   002474  0E00               	movlw	0
 10954   002476  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10955   002478  0E00               	movlw	0
 10956   00247A  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10957   00247C  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10958   002480  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10959   002484  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10960   002488  6A3F               	clrf	___flmul@grs^0,c
 10961   00248A  5036               	movf	___flmul@a^0,w,c
 10962   00248C  0232               	mulwf	___flmul@b^0,c
 10963   00248E  CFF3 F049          	movff	prodl,___flmul@temp
 10964   002492  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10965   002496  5049               	movf	___flmul@temp^0,w,c
 10966   002498  263F               	addwf	___flmul@grs^0,f,c
 10967   00249A  504A               	movf	(___flmul@temp+1)^0,w,c
 10968   00249C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10969   00249E  0E00               	movlw	0
 10970   0024A0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10971   0024A2  0E00               	movlw	0
 10972   0024A4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10973   0024A6  5038               	movf	(___flmul@a+2)^0,w,c
 10974   0024A8  0233               	mulwf	(___flmul@b+1)^0,c
 10975   0024AA  CFF3 F049          	movff	prodl,___flmul@temp
 10976   0024AE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10977   0024B2  5049               	movf	___flmul@temp^0,w,c
 10978   0024B4  2645               	addwf	___flmul@prod^0,f,c
 10979   0024B6  504A               	movf	(___flmul@temp+1)^0,w,c
 10980   0024B8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10981   0024BA  0E00               	movlw	0
 10982   0024BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10983   0024BE  0E00               	movlw	0
 10984   0024C0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10985   0024C2  5037               	movf	(___flmul@a+1)^0,w,c
 10986   0024C4  0234               	mulwf	(___flmul@b+2)^0,c
 10987   0024C6  CFF3 F049          	movff	prodl,___flmul@temp
 10988   0024CA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10989   0024CE  5049               	movf	___flmul@temp^0,w,c
 10990   0024D0  2645               	addwf	___flmul@prod^0,f,c
 10991   0024D2  504A               	movf	(___flmul@temp+1)^0,w,c
 10992   0024D4  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10993   0024D6  0E00               	movlw	0
 10994   0024D8  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10995   0024DA  0E00               	movlw	0
 10996   0024DC  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10997   0024DE  5038               	movf	(___flmul@a+2)^0,w,c
 10998   0024E0  0234               	mulwf	(___flmul@b+2)^0,c
 10999   0024E2  CFF3 F049          	movff	prodl,___flmul@temp
 11000   0024E6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11001   0024EA  5049               	movf	___flmul@temp^0,w,c
 11002   0024EC  6E3A               	movwf	??___flmul^0,c
 11003   0024EE  504A               	movf	(___flmul@temp+1)^0,w,c
 11004   0024F0  6E3B               	movwf	(??___flmul+1)^0,c
 11005   0024F2  6A3C               	clrf	(??___flmul+2)^0,c
 11006   0024F4  6A3D               	clrf	(??___flmul+3)^0,c
 11007   0024F6  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11008   0024FA  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11009   0024FE  C03A  F03B         	movff	??___flmul,??___flmul+1
 11010   002502  6A3A               	clrf	??___flmul^0,c
 11011   002504  503A               	movf	??___flmul^0,w,c
 11012   002506  2645               	addwf	___flmul@prod^0,f,c
 11013   002508  503B               	movf	(??___flmul+1)^0,w,c
 11014   00250A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11015   00250C  503C               	movf	(??___flmul+2)^0,w,c
 11016   00250E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11017   002510  503D               	movf	(??___flmul+3)^0,w,c
 11018   002512  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11019   002514  C03F  F03A         	movff	___flmul@grs,??___flmul
 11020   002518  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11021   00251C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11022   002520  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11023   002524  0E19               	movlw	25
 11024   002526  EF9A  F012         	goto	u3630
 11025   00252A                     u3635:
 11026   00252A  90D8               	bcf	status,0,c
 11027   00252C  323D               	rrcf	(??___flmul+3)^0,f,c
 11028   00252E  323C               	rrcf	(??___flmul+2)^0,f,c
 11029   002530  323B               	rrcf	(??___flmul+1)^0,f,c
 11030   002532  323A               	rrcf	??___flmul^0,f,c
 11031   002534                     u3630:
 11032   002534  2EE8               	decfsz	wreg,f,c
 11033   002536  EF95  F012         	goto	u3635
 11034   00253A  503A               	movf	??___flmul^0,w,c
 11035   00253C  2645               	addwf	___flmul@prod^0,f,c
 11036   00253E  503B               	movf	(??___flmul+1)^0,w,c
 11037   002540  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11038   002542  503C               	movf	(??___flmul+2)^0,w,c
 11039   002544  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11040   002546  503D               	movf	(??___flmul+3)^0,w,c
 11041   002548  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11042   00254A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11043   00254E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11044   002552  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11045   002556  6A3F               	clrf	___flmul@grs^0,c
 11046   002558  5043               	movf	___flmul@aexp^0,w,c
 11047   00255A  C044  F03A         	movff	___flmul@bexp,??___flmul
 11048   00255E  6A3B               	clrf	(??___flmul+1)^0,c
 11049   002560  263A               	addwf	??___flmul^0,f,c
 11050   002562  0E00               	movlw	0
 11051   002564  223B               	addwfc	(??___flmul+1)^0,f,c
 11052   002566  0E82               	movlw	130
 11053   002568  243A               	addwf	??___flmul^0,w,c
 11054   00256A  6E49               	movwf	___flmul@temp^0,c
 11055   00256C  0EFF               	movlw	255
 11056   00256E  203B               	addwfc	(??___flmul+1)^0,w,c
 11057   002570  6E4A               	movwf	(___flmul@temp+1)^0,c
 11058   002572  EFD0  F012         	goto	l4080
 11059   002576                     l4074:
 11060   002576  90D8               	bcf	status,0,c
 11061   002578  3645               	rlcf	___flmul@prod^0,f,c
 11062   00257A  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11063   00257C  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11064   00257E  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11065   002580  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11066   002582  EFC5  F012         	goto	u3641
 11067   002586  EFC7  F012         	goto	u3640
 11068   00258A                     u3641:
 11069   00258A  EFC8  F012         	goto	l1299
 11070   00258E                     u3640:
 11071   00258E  8045               	bsf	___flmul@prod^0,0,c
 11072   002590                     l1299:
 11073   002590  90D8               	bcf	status,0,c
 11074   002592  363F               	rlcf	___flmul@grs^0,f,c
 11075   002594  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11076   002596  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11077   002598  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11078   00259A  0649               	decf	___flmul@temp^0,f,c
 11079   00259C  A0D8               	btfss	status,0,c
 11080   00259E  064A               	decf	(___flmul@temp+1)^0,f,c
 11081   0025A0                     l4080:
 11082   0025A0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11083   0025A2  EFD5  F012         	goto	u3651
 11084   0025A6  EFD7  F012         	goto	u3650
 11085   0025AA                     u3651:
 11086   0025AA  EFBB  F012         	goto	l4074
 11087   0025AE                     u3650:
 11088   0025AE  0E00               	movlw	0
 11089   0025B0  6E43               	movwf	___flmul@aexp^0,c
 11090   0025B2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11091   0025B4  EFDE  F012         	goto	u3661
 11092   0025B8  EFE0  F012         	goto	u3660
 11093   0025BC                     u3661:
 11094   0025BC  EF04  F013         	goto	l1301
 11095   0025C0                     u3660:
 11096   0025C0  0EFF               	movlw	255
 11097   0025C2  143F               	andwf	___flmul@grs^0,w,c
 11098   0025C4  6E3A               	movwf	??___flmul^0,c
 11099   0025C6  0EFF               	movlw	255
 11100   0025C8  1440               	andwf	(___flmul@grs+1)^0,w,c
 11101   0025CA  6E3B               	movwf	(??___flmul+1)^0,c
 11102   0025CC  0EFF               	movlw	255
 11103   0025CE  1441               	andwf	(___flmul@grs+2)^0,w,c
 11104   0025D0  6E3C               	movwf	(??___flmul+2)^0,c
 11105   0025D2  0E7F               	movlw	127
 11106   0025D4  1442               	andwf	(___flmul@grs+3)^0,w,c
 11107   0025D6  6E3D               	movwf	(??___flmul+3)^0,c
 11108   0025D8  503A               	movf	??___flmul^0,w,c
 11109   0025DA  103B               	iorwf	(??___flmul+1)^0,w,c
 11110   0025DC  103C               	iorwf	(??___flmul+2)^0,w,c
 11111   0025DE  103D               	iorwf	(??___flmul+3)^0,w,c
 11112   0025E0  B4D8               	btfsc	status,2,c
 11113   0025E2  EFF5  F012         	goto	u3671
 11114   0025E6  EFF7  F012         	goto	u3670
 11115   0025EA                     u3671:
 11116   0025EA  EFFB  F012         	goto	l1302
 11117   0025EE                     u3670:
 11118   0025EE                     l4088:
 11119   0025EE  0E01               	movlw	1
 11120   0025F0  6E43               	movwf	___flmul@aexp^0,c
 11121   0025F2  EF04  F013         	goto	l1301
 11122   0025F6                     l1302:
 11123   0025F6  A045               	btfss	___flmul@prod^0,0,c
 11124   0025F8  EF00  F013         	goto	u3681
 11125   0025FC  EF02  F013         	goto	u3680
 11126   002600                     u3681:
 11127   002600  EF04  F013         	goto	l1301
 11128   002604                     u3680:
 11129   002604  EFF7  F012         	goto	l4088
 11130   002608                     l1301:
 11131   002608  5043               	movf	___flmul@aexp^0,w,c
 11132   00260A  B4D8               	btfsc	status,2,c
 11133   00260C  EF0A  F013         	goto	u3691
 11134   002610  EF0C  F013         	goto	u3690
 11135   002614                     u3691:
 11136   002614  EF30  F013         	goto	l4100
 11137   002618                     u3690:
 11138   002618  0E01               	movlw	1
 11139   00261A  2645               	addwf	___flmul@prod^0,f,c
 11140   00261C  0E00               	movlw	0
 11141   00261E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11142   002620  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11143   002622  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11144   002624  A048               	btfss	(___flmul@prod+3)^0,0,c
 11145   002626  EF17  F013         	goto	u3701
 11146   00262A  EF19  F013         	goto	u3700
 11147   00262E                     u3701:
 11148   00262E  EF30  F013         	goto	l4100
 11149   002632                     u3700:
 11150   002632  C045  F03A         	movff	___flmul@prod,??___flmul
 11151   002636  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11152   00263A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11153   00263E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11154   002642  343D               	rlcf	(??___flmul+3)^0,w,c
 11155   002644  323D               	rrcf	(??___flmul+3)^0,f,c
 11156   002646  323C               	rrcf	(??___flmul+2)^0,f,c
 11157   002648  323B               	rrcf	(??___flmul+1)^0,f,c
 11158   00264A  323A               	rrcf	??___flmul^0,f,c
 11159   00264C  C03A  F045         	movff	??___flmul,___flmul@prod
 11160   002650  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11161   002654  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11162   002658  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11163   00265C  4A49               	infsnz	___flmul@temp^0,f,c
 11164   00265E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11165   002660                     l4100:
 11166   002660  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11167   002662  EF3B  F013         	goto	u3711
 11168   002666  504A               	movf	(___flmul@temp+1)^0,w,c
 11169   002668  E108               	bnz	u3710
 11170   00266A  2849               	incf	___flmul@temp^0,w,c
 11171   00266C  A0D8               	btfss	status,0,c
 11172   00266E  EF3B  F013         	goto	u3711
 11173   002672  EF3D  F013         	goto	u3710
 11174   002676                     u3711:
 11175   002676  EF47  F013         	goto	l4104
 11176   00267A                     u3710:
 11177   00267A  0E00               	movlw	0
 11178   00267C  6E45               	movwf	___flmul@prod^0,c
 11179   00267E  0E00               	movlw	0
 11180   002680  6E46               	movwf	(___flmul@prod+1)^0,c
 11181   002682  0E80               	movlw	128
 11182   002684  6E47               	movwf	(___flmul@prod+2)^0,c
 11183   002686  0E7F               	movlw	127
 11184   002688  6E48               	movwf	(___flmul@prod+3)^0,c
 11185   00268A  EF75  F013         	goto	l4116
 11186   00268E                     l4104:
 11187   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11188   002690  EF54  F013         	goto	u3720
 11189   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 11190   002696  E106               	bnz	u3721
 11191   002698  0449               	decf	___flmul@temp^0,w,c
 11192   00269A  B0D8               	btfsc	status,0,c
 11193   00269C  EF52  F013         	goto	u3721
 11194   0026A0  EF54  F013         	goto	u3720
 11195   0026A4                     u3721:
 11196   0026A4  EF60  F013         	goto	l1309
 11197   0026A8                     u3720:
 11198   0026A8  0E00               	movlw	0
 11199   0026AA  6E45               	movwf	___flmul@prod^0,c
 11200   0026AC  0E00               	movlw	0
 11201   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 11202   0026B0  0E00               	movlw	0
 11203   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 11204   0026B4  0E00               	movlw	0
 11205   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 11206   0026B8  0E00               	movlw	0
 11207   0026BA  6E3E               	movwf	___flmul@sign^0,c
 11208   0026BC  EF75  F013         	goto	l4116
 11209   0026C0                     l1309:
 11210   0026C0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11211   0026C4  0EFF               	movlw	255
 11212   0026C6  1645               	andwf	___flmul@prod^0,f,c
 11213   0026C8  0EFF               	movlw	255
 11214   0026CA  1646               	andwf	(___flmul@prod+1)^0,f,c
 11215   0026CC  0E7F               	movlw	127
 11216   0026CE  1647               	andwf	(___flmul@prod+2)^0,f,c
 11217   0026D0  0E00               	movlw	0
 11218   0026D2  1648               	andwf	(___flmul@prod+3)^0,f,c
 11219   0026D4  A044               	btfss	___flmul@bexp^0,0,c
 11220   0026D6  EF6F  F013         	goto	u3731
 11221   0026DA  EF71  F013         	goto	u3730
 11222   0026DE                     u3731:
 11223   0026DE  EF72  F013         	goto	l4114
 11224   0026E2                     u3730:
 11225   0026E2  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11226   0026E4                     l4114:
 11227   0026E4  90D8               	bcf	status,0,c
 11228   0026E6  3044               	rrcf	___flmul@bexp^0,w,c
 11229   0026E8  6E48               	movwf	(___flmul@prod+3)^0,c
 11230   0026EA                     l4116:
 11231   0026EA  503E               	movf	___flmul@sign^0,w,c
 11232   0026EC  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11233   0026EE  C045  F032         	movff	___flmul@prod,?___flmul
 11234   0026F2  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11235   0026F6  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11236   0026FA  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11237   0026FE                     l1296:
 11238   0026FE  0012               	return		;funcret
 11239   002700                     __end_of___flmul:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function ___flge *****************
 11243 ;; Defined at:
 11244 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  ff1             4    0[COMRAM] unsigned char 
 11247 ;;  ff2             4    4[COMRAM] unsigned char 
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;		None               void
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;Total ram usage:       12 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 1
 11266 ;; This function calls:
 11267 ;;		Nothing
 11268 ;; This function is called by:
 11269 ;;		_Colour_decider
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273                           	psect	text66
 11274   003A4E                     __ptext66:
 11275                           	callstack 0
 11276   003A4E                     ___flge:
 11277                           	callstack 28
 11278   003A4E  0E00               	movlw	0
 11279   003A50  1401               	andwf	___flge@ff1^0,w,c
 11280   003A52  6E09               	movwf	??___flge^0,c
 11281   003A54  0E00               	movlw	0
 11282   003A56  1402               	andwf	(___flge@ff1+1)^0,w,c
 11283   003A58  6E0A               	movwf	(??___flge+1)^0,c
 11284   003A5A  0E80               	movlw	128
 11285   003A5C  1403               	andwf	(___flge@ff1+2)^0,w,c
 11286   003A5E  6E0B               	movwf	(??___flge+2)^0,c
 11287   003A60  0E7F               	movlw	127
 11288   003A62  1404               	andwf	(___flge@ff1+3)^0,w,c
 11289   003A64  6E0C               	movwf	(??___flge+3)^0,c
 11290   003A66  5009               	movf	??___flge^0,w,c
 11291   003A68  100A               	iorwf	(??___flge+1)^0,w,c
 11292   003A6A  100B               	iorwf	(??___flge+2)^0,w,c
 11293   003A6C  100C               	iorwf	(??___flge+3)^0,w,c
 11294   003A6E  A4D8               	btfss	status,2,c
 11295   003A70  EF3C  F01D         	goto	u3771
 11296   003A74  EF3E  F01D         	goto	u3770
 11297   003A78                     u3771:
 11298   003A78  EF46  F01D         	goto	l4148
 11299   003A7C                     u3770:
 11300   003A7C  0E00               	movlw	0
 11301   003A7E  6E01               	movwf	___flge@ff1^0,c
 11302   003A80  0E00               	movlw	0
 11303   003A82  6E02               	movwf	(___flge@ff1+1)^0,c
 11304   003A84  0E00               	movlw	0
 11305   003A86  6E03               	movwf	(___flge@ff1+2)^0,c
 11306   003A88  0E00               	movlw	0
 11307   003A8A  6E04               	movwf	(___flge@ff1+3)^0,c
 11308   003A8C                     l4148:
 11309   003A8C  0E00               	movlw	0
 11310   003A8E  1405               	andwf	___flge@ff2^0,w,c
 11311   003A90  6E09               	movwf	??___flge^0,c
 11312   003A92  0E00               	movlw	0
 11313   003A94  1406               	andwf	(___flge@ff2+1)^0,w,c
 11314   003A96  6E0A               	movwf	(??___flge+1)^0,c
 11315   003A98  0E80               	movlw	128
 11316   003A9A  1407               	andwf	(___flge@ff2+2)^0,w,c
 11317   003A9C  6E0B               	movwf	(??___flge+2)^0,c
 11318   003A9E  0E7F               	movlw	127
 11319   003AA0  1408               	andwf	(___flge@ff2+3)^0,w,c
 11320   003AA2  6E0C               	movwf	(??___flge+3)^0,c
 11321   003AA4  5009               	movf	??___flge^0,w,c
 11322   003AA6  100A               	iorwf	(??___flge+1)^0,w,c
 11323   003AA8  100B               	iorwf	(??___flge+2)^0,w,c
 11324   003AAA  100C               	iorwf	(??___flge+3)^0,w,c
 11325   003AAC  A4D8               	btfss	status,2,c
 11326   003AAE  EF5B  F01D         	goto	u3781
 11327   003AB2  EF5D  F01D         	goto	u3780
 11328   003AB6                     u3781:
 11329   003AB6  EF65  F01D         	goto	l4152
 11330   003ABA                     u3780:
 11331   003ABA  0E00               	movlw	0
 11332   003ABC  6E05               	movwf	___flge@ff2^0,c
 11333   003ABE  0E00               	movlw	0
 11334   003AC0  6E06               	movwf	(___flge@ff2+1)^0,c
 11335   003AC2  0E00               	movlw	0
 11336   003AC4  6E07               	movwf	(___flge@ff2+2)^0,c
 11337   003AC6  0E00               	movlw	0
 11338   003AC8  6E08               	movwf	(___flge@ff2+3)^0,c
 11339   003ACA                     l4152:
 11340   003ACA  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11341   003ACC  EF6A  F01D         	goto	u3791
 11342   003AD0  EF6C  F01D         	goto	u3790
 11343   003AD4                     u3791:
 11344   003AD4  EF75  F01D         	goto	l4156
 11345   003AD8                     u3790:
 11346   003AD8  6C01               	negf	___flge@ff1^0,c
 11347   003ADA  1E02               	comf	(___flge@ff1+1)^0,f,c
 11348   003ADC  B0D8               	btfsc	status,0,c
 11349   003ADE  2A02               	incf	(___flge@ff1+1)^0,f,c
 11350   003AE0  1E03               	comf	(___flge@ff1+2)^0,f,c
 11351   003AE2  B0D8               	btfsc	status,0,c
 11352   003AE4  2A03               	incf	(___flge@ff1+2)^0,f,c
 11353   003AE6  0E80               	movlw	128
 11354   003AE8  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11355   003AEA                     l4156:
 11356   003AEA  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11357   003AEC  EF7A  F01D         	goto	u3801
 11358   003AF0  EF7C  F01D         	goto	u3800
 11359   003AF4                     u3801:
 11360   003AF4  EF85  F01D         	goto	l943
 11361   003AF8                     u3800:
 11362   003AF8  6C05               	negf	___flge@ff2^0,c
 11363   003AFA  1E06               	comf	(___flge@ff2+1)^0,f,c
 11364   003AFC  B0D8               	btfsc	status,0,c
 11365   003AFE  2A06               	incf	(___flge@ff2+1)^0,f,c
 11366   003B00  1E07               	comf	(___flge@ff2+2)^0,f,c
 11367   003B02  B0D8               	btfsc	status,0,c
 11368   003B04  2A07               	incf	(___flge@ff2+2)^0,f,c
 11369   003B06  0E80               	movlw	128
 11370   003B08  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11371   003B0A                     l943:
 11372   003B0A  0E00               	movlw	0
 11373   003B0C  1A01               	xorwf	___flge@ff1^0,f,c
 11374   003B0E  0E00               	movlw	0
 11375   003B10  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11376   003B12  0E00               	movlw	0
 11377   003B14  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11378   003B16  0E80               	movlw	128
 11379   003B18  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11380   003B1A  0E00               	movlw	0
 11381   003B1C  1A05               	xorwf	___flge@ff2^0,f,c
 11382   003B1E  0E00               	movlw	0
 11383   003B20  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11384   003B22  0E00               	movlw	0
 11385   003B24  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11386   003B26  0E80               	movlw	128
 11387   003B28  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11388   003B2A  5005               	movf	___flge@ff2^0,w,c
 11389   003B2C  5C01               	subwf	___flge@ff1^0,w,c
 11390   003B2E  5006               	movf	(___flge@ff2+1)^0,w,c
 11391   003B30  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11392   003B32  5007               	movf	(___flge@ff2+2)^0,w,c
 11393   003B34  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11394   003B36  5008               	movf	(___flge@ff2+3)^0,w,c
 11395   003B38  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11396   003B3A  B0D8               	btfsc	status,0,c
 11397   003B3C  EFA2  F01D         	goto	u3811
 11398   003B40  EFA4  F01D         	goto	u3810
 11399   003B44                     u3811:
 11400   003B44  EFA7  F01D         	goto	l4162
 11401   003B48                     u3810:
 11402   003B48  90D8               	bcf	status,0,c
 11403   003B4A  EFA8  F01D         	goto	l948
 11404   003B4E                     l4162:
 11405   003B4E  80D8               	bsf	status,0,c
 11406   003B50                     l948:
 11407   003B50  0012               	return		;funcret
 11408   003B52                     __end_of___flge:
 11409                           	callstack 0
 11410                           
 11411 ;; *************** function ___fleq *****************
 11412 ;; Defined at:
 11413 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  ff1             4   24[COMRAM] unsigned char 
 11416 ;;  ff2             4   28[COMRAM] unsigned char 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;		None
 11419 ;; Return value:  Size  Location     Type
 11420 ;;		None               void
 11421 ;; Registers used:
 11422 ;;		wreg, status,2, status,0
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11428 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11432 ;;Total ram usage:       12 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 1
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_Colour_decider
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text67
 11443   003CC6                     __ptext67:
 11444                           	callstack 0
 11445   003CC6                     ___fleq:
 11446                           	callstack 28
 11447   003CC6  0E00               	movlw	0
 11448   003CC8  1419               	andwf	___fleq@ff1^0,w,c
 11449   003CCA  6E21               	movwf	??___fleq^0,c
 11450   003CCC  0E00               	movlw	0
 11451   003CCE  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11452   003CD0  6E22               	movwf	(??___fleq+1)^0,c
 11453   003CD2  0E80               	movlw	128
 11454   003CD4  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11455   003CD6  6E23               	movwf	(??___fleq+2)^0,c
 11456   003CD8  0E7F               	movlw	127
 11457   003CDA  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11458   003CDC  6E24               	movwf	(??___fleq+3)^0,c
 11459   003CDE  5021               	movf	??___fleq^0,w,c
 11460   003CE0  1022               	iorwf	(??___fleq+1)^0,w,c
 11461   003CE2  1023               	iorwf	(??___fleq+2)^0,w,c
 11462   003CE4  1024               	iorwf	(??___fleq+3)^0,w,c
 11463   003CE6  A4D8               	btfss	status,2,c
 11464   003CE8  EF78  F01E         	goto	u3741
 11465   003CEC  EF7A  F01E         	goto	u3740
 11466   003CF0                     u3741:
 11467   003CF0  EF82  F01E         	goto	l4132
 11468   003CF4                     u3740:
 11469   003CF4  0E00               	movlw	0
 11470   003CF6  6E19               	movwf	___fleq@ff1^0,c
 11471   003CF8  0E00               	movlw	0
 11472   003CFA  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11473   003CFC  0E00               	movlw	0
 11474   003CFE  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11475   003D00  0E00               	movlw	0
 11476   003D02  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11477   003D04                     l4132:
 11478   003D04  0E00               	movlw	0
 11479   003D06  141D               	andwf	___fleq@ff2^0,w,c
 11480   003D08  6E21               	movwf	??___fleq^0,c
 11481   003D0A  0E00               	movlw	0
 11482   003D0C  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11483   003D0E  6E22               	movwf	(??___fleq+1)^0,c
 11484   003D10  0E80               	movlw	128
 11485   003D12  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11486   003D14  6E23               	movwf	(??___fleq+2)^0,c
 11487   003D16  0E7F               	movlw	127
 11488   003D18  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11489   003D1A  6E24               	movwf	(??___fleq+3)^0,c
 11490   003D1C  5021               	movf	??___fleq^0,w,c
 11491   003D1E  1022               	iorwf	(??___fleq+1)^0,w,c
 11492   003D20  1023               	iorwf	(??___fleq+2)^0,w,c
 11493   003D22  1024               	iorwf	(??___fleq+3)^0,w,c
 11494   003D24  A4D8               	btfss	status,2,c
 11495   003D26  EF97  F01E         	goto	u3751
 11496   003D2A  EF99  F01E         	goto	u3750
 11497   003D2E                     u3751:
 11498   003D2E  EFA1  F01E         	goto	l4136
 11499   003D32                     u3750:
 11500   003D32  0E00               	movlw	0
 11501   003D34  6E1D               	movwf	___fleq@ff2^0,c
 11502   003D36  0E00               	movlw	0
 11503   003D38  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11504   003D3A  0E00               	movlw	0
 11505   003D3C  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11506   003D3E  0E00               	movlw	0
 11507   003D40  6E20               	movwf	(___fleq@ff2+3)^0,c
 11508   003D42                     l4136:
 11509   003D42  501D               	movf	___fleq@ff2^0,w,c
 11510   003D44  1819               	xorwf	___fleq@ff1^0,w,c
 11511   003D46  E10F               	bnz	u3760
 11512   003D48  501E               	movf	(___fleq@ff2+1)^0,w,c
 11513   003D4A  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11514   003D4C  E10C               	bnz	u3760
 11515   003D4E  501F               	movf	(___fleq@ff2+2)^0,w,c
 11516   003D50  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11517   003D52  E109               	bnz	u3760
 11518   003D54  5020               	movf	(___fleq@ff2+3)^0,w,c
 11519   003D56  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11520   003D58  B4D8               	btfsc	status,2,c
 11521   003D5A  EFB1  F01E         	goto	u3761
 11522   003D5E  EFB3  F01E         	goto	u3760
 11523   003D62                     u3761:
 11524   003D62  EFB6  F01E         	goto	l4140
 11525   003D66                     u3760:
 11526   003D66  90D8               	bcf	status,0,c
 11527   003D68  EFB7  F01E         	goto	l937
 11528   003D6C                     l4140:
 11529   003D6C  80D8               	bsf	status,0,c
 11530   003D6E                     l937:
 11531   003D6E  0012               	return		;funcret
 11532   003D70                     __end_of___fleq:
 11533                           	callstack 0
 11534                           
 11535 ;; *************** function ___fldiv *****************
 11536 ;; Defined at:
 11537 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;  b               4   24[COMRAM] unsigned char 
 11540 ;;  a               4   28[COMRAM] unsigned char 
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  grs             4   43[COMRAM] unsigned long 
 11543 ;;  rem             4   36[COMRAM] unsigned long 
 11544 ;;  new_exp         2   41[COMRAM] short 
 11545 ;;  aexp            1   48[COMRAM] unsigned char 
 11546 ;;  bexp            1   47[COMRAM] unsigned char 
 11547 ;;  sign            1   40[COMRAM] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  4   24[COMRAM] unsigned char 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11558 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11560 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11561 ;;Total ram usage:       25 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 1
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_colour_rel
 11568 ;;		_Colour_decider
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text68
 11573   002700                     __ptext68:
 11574                           	callstack 0
 11575   002700                     ___fldiv:
 11576                           	callstack 28
 11577   002700  501C               	movf	(___fldiv@b+3)^0,w,c
 11578   002702  0B80               	andlw	128
 11579   002704  6E29               	movwf	___fldiv@sign^0,c
 11580   002706  501C               	movf	(___fldiv@b+3)^0,w,c
 11581   002708  241C               	addwf	(___fldiv@b+3)^0,w,c
 11582   00270A  6E30               	movwf	___fldiv@bexp^0,c
 11583   00270C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11584   00270E  EF8B  F013         	goto	u3321
 11585   002712  EF8D  F013         	goto	u3320
 11586   002716                     u3321:
 11587   002716  EF8E  F013         	goto	l3860
 11588   00271A                     u3320:
 11589   00271A  8030               	bsf	___fldiv@bexp^0,0,c
 11590   00271C                     l3860:
 11591   00271C  5030               	movf	___fldiv@bexp^0,w,c
 11592   00271E  B4D8               	btfsc	status,2,c
 11593   002720  EF94  F013         	goto	u3331
 11594   002724  EF96  F013         	goto	u3330
 11595   002728                     u3331:
 11596   002728  EFAB  F013         	goto	l3870
 11597   00272C                     u3330:
 11598   00272C  2830               	incf	___fldiv@bexp^0,w,c
 11599   00272E  A4D8               	btfss	status,2,c
 11600   002730  EF9C  F013         	goto	u3341
 11601   002734  EF9E  F013         	goto	u3340
 11602   002738                     u3341:
 11603   002738  EFA6  F013         	goto	l3866
 11604   00273C                     u3340:
 11605   00273C  0E00               	movlw	0
 11606   00273E  6E19               	movwf	___fldiv@b^0,c
 11607   002740  0E00               	movlw	0
 11608   002742  6E1A               	movwf	(___fldiv@b+1)^0,c
 11609   002744  0E00               	movlw	0
 11610   002746  6E1B               	movwf	(___fldiv@b+2)^0,c
 11611   002748  0E00               	movlw	0
 11612   00274A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11613   00274C                     l3866:
 11614   00274C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11615   00274E  0E00               	movlw	0
 11616   002750  6E1C               	movwf	(___fldiv@b+3)^0,c
 11617   002752  EFB3  F013         	goto	l3872
 11618   002756                     l3870:
 11619   002756  0E00               	movlw	0
 11620   002758  6E19               	movwf	___fldiv@b^0,c
 11621   00275A  0E00               	movlw	0
 11622   00275C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11623   00275E  0E00               	movlw	0
 11624   002760  6E1B               	movwf	(___fldiv@b+2)^0,c
 11625   002762  0E00               	movlw	0
 11626   002764  6E1C               	movwf	(___fldiv@b+3)^0,c
 11627   002766                     l3872:
 11628   002766  5020               	movf	(___fldiv@a+3)^0,w,c
 11629   002768  0B80               	andlw	128
 11630   00276A  1A29               	xorwf	___fldiv@sign^0,f,c
 11631   00276C  5020               	movf	(___fldiv@a+3)^0,w,c
 11632   00276E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11633   002770  6E31               	movwf	___fldiv@aexp^0,c
 11634   002772  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11635   002774  EFBE  F013         	goto	u3351
 11636   002778  EFC0  F013         	goto	u3350
 11637   00277C                     u3351:
 11638   00277C  EFC1  F013         	goto	l3880
 11639   002780                     u3350:
 11640   002780  8031               	bsf	___fldiv@aexp^0,0,c
 11641   002782                     l3880:
 11642   002782  5031               	movf	___fldiv@aexp^0,w,c
 11643   002784  B4D8               	btfsc	status,2,c
 11644   002786  EFC7  F013         	goto	u3361
 11645   00278A  EFC9  F013         	goto	u3360
 11646   00278E                     u3361:
 11647   00278E  EFDE  F013         	goto	l3890
 11648   002792                     u3360:
 11649   002792  2831               	incf	___fldiv@aexp^0,w,c
 11650   002794  A4D8               	btfss	status,2,c
 11651   002796  EFCF  F013         	goto	u3371
 11652   00279A  EFD1  F013         	goto	u3370
 11653   00279E                     u3371:
 11654   00279E  EFD9  F013         	goto	l3886
 11655   0027A2                     u3370:
 11656   0027A2  0E00               	movlw	0
 11657   0027A4  6E1D               	movwf	___fldiv@a^0,c
 11658   0027A6  0E00               	movlw	0
 11659   0027A8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11660   0027AA  0E00               	movlw	0
 11661   0027AC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11662   0027AE  0E00               	movlw	0
 11663   0027B0  6E20               	movwf	(___fldiv@a+3)^0,c
 11664   0027B2                     l3886:
 11665   0027B2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11666   0027B4  0E00               	movlw	0
 11667   0027B6  6E20               	movwf	(___fldiv@a+3)^0,c
 11668   0027B8  EFE6  F013         	goto	l3892
 11669   0027BC                     l3890:
 11670   0027BC  0E00               	movlw	0
 11671   0027BE  6E1D               	movwf	___fldiv@a^0,c
 11672   0027C0  0E00               	movlw	0
 11673   0027C2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11674   0027C4  0E00               	movlw	0
 11675   0027C6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11676   0027C8  0E00               	movlw	0
 11677   0027CA  6E20               	movwf	(___fldiv@a+3)^0,c
 11678   0027CC                     l3892:
 11679   0027CC  501D               	movf	___fldiv@a^0,w,c
 11680   0027CE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11681   0027D0  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11682   0027D2  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11683   0027D4  A4D8               	btfss	status,2,c
 11684   0027D6  EFEF  F013         	goto	u3381
 11685   0027DA  EFF1  F013         	goto	u3380
 11686   0027DE                     u3381:
 11687   0027DE  EF09  F014         	goto	l3904
 11688   0027E2                     u3380:
 11689   0027E2  0E00               	movlw	0
 11690   0027E4  6E19               	movwf	___fldiv@b^0,c
 11691   0027E6  0E00               	movlw	0
 11692   0027E8  6E1A               	movwf	(___fldiv@b+1)^0,c
 11693   0027EA  0E00               	movlw	0
 11694   0027EC  6E1B               	movwf	(___fldiv@b+2)^0,c
 11695   0027EE  0E00               	movlw	0
 11696   0027F0  6E1C               	movwf	(___fldiv@b+3)^0,c
 11697   0027F2  0E80               	movlw	128
 11698   0027F4  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11699   0027F6  0E7F               	movlw	127
 11700   0027F8  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11701   0027FA                     l3898:
 11702   0027FA  5029               	movf	___fldiv@sign^0,w,c
 11703   0027FC  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11704   0027FE  C019  F019         	movff	___fldiv@b,?___fldiv
 11705   002802  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11706   002806  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11707   00280A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11708   00280E  EF4C  F015         	goto	l1260
 11709   002812                     l3904:
 11710   002812  5030               	movf	___fldiv@bexp^0,w,c
 11711   002814  A4D8               	btfss	status,2,c
 11712   002816  EF0F  F014         	goto	u3391
 11713   00281A  EF11  F014         	goto	u3390
 11714   00281E                     u3391:
 11715   00281E  EF1B  F014         	goto	l3912
 11716   002822                     u3390:
 11717   002822  0E00               	movlw	0
 11718   002824  6E19               	movwf	?___fldiv^0,c
 11719   002826  0E00               	movlw	0
 11720   002828  6E1A               	movwf	(?___fldiv+1)^0,c
 11721   00282A  0E00               	movlw	0
 11722   00282C  6E1B               	movwf	(?___fldiv+2)^0,c
 11723   00282E  0E00               	movlw	0
 11724   002830  6E1C               	movwf	(?___fldiv+3)^0,c
 11725   002832  EF4C  F015         	goto	l1260
 11726   002836                     l3912:
 11727   002836  5031               	movf	___fldiv@aexp^0,w,c
 11728   002838  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11729   00283C  6A22               	clrf	(??___fldiv+1)^0,c
 11730   00283E  5E21               	subwf	??___fldiv^0,f,c
 11731   002840  0E00               	movlw	0
 11732   002842  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11733   002844  0E7F               	movlw	127
 11734   002846  2421               	addwf	??___fldiv^0,w,c
 11735   002848  6E2A               	movwf	___fldiv@new_exp^0,c
 11736   00284A  0E00               	movlw	0
 11737   00284C  2022               	addwfc	(??___fldiv+1)^0,w,c
 11738   00284E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11739   002850  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11740   002854  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11741   002858  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11742   00285C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11743   002860  0E00               	movlw	0
 11744   002862  6E19               	movwf	___fldiv@b^0,c
 11745   002864  0E00               	movlw	0
 11746   002866  6E1A               	movwf	(___fldiv@b+1)^0,c
 11747   002868  0E00               	movlw	0
 11748   00286A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11749   00286C  0E00               	movlw	0
 11750   00286E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11751   002870  0E00               	movlw	0
 11752   002872  6E2C               	movwf	___fldiv@grs^0,c
 11753   002874  0E00               	movlw	0
 11754   002876  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11755   002878  0E00               	movlw	0
 11756   00287A  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11757   00287C  0E00               	movlw	0
 11758   00287E  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11759   002880  0E00               	movlw	0
 11760   002882  6E31               	movwf	___fldiv@aexp^0,c
 11761   002884  EF7C  F014         	goto	l1262
 11762   002888                     l3922:
 11763   002888  5031               	movf	___fldiv@aexp^0,w,c
 11764   00288A  B4D8               	btfsc	status,2,c
 11765   00288C  EF4A  F014         	goto	u3401
 11766   002890  EF4C  F014         	goto	u3400
 11767   002894                     u3401:
 11768   002894  EF63  F014         	goto	l3930
 11769   002898                     u3400:
 11770   002898  90D8               	bcf	status,0,c
 11771   00289A  3625               	rlcf	___fldiv@rem^0,f,c
 11772   00289C  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11773   00289E  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11774   0028A0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11775   0028A2  90D8               	bcf	status,0,c
 11776   0028A4  3619               	rlcf	___fldiv@b^0,f,c
 11777   0028A6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11778   0028A8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11779   0028AA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11780   0028AC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11781   0028AE  EF5B  F014         	goto	u3411
 11782   0028B2  EF5D  F014         	goto	u3410
 11783   0028B6                     u3411:
 11784   0028B6  EF5E  F014         	goto	l1265
 11785   0028BA                     u3410:
 11786   0028BA  8019               	bsf	___fldiv@b^0,0,c
 11787   0028BC                     l1265:
 11788   0028BC  90D8               	bcf	status,0,c
 11789   0028BE  362C               	rlcf	___fldiv@grs^0,f,c
 11790   0028C0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11791   0028C2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11792   0028C4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11793   0028C6                     l3930:
 11794   0028C6  501D               	movf	___fldiv@a^0,w,c
 11795   0028C8  5C25               	subwf	___fldiv@rem^0,w,c
 11796   0028CA  501E               	movf	(___fldiv@a+1)^0,w,c
 11797   0028CC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11798   0028CE  501F               	movf	(___fldiv@a+2)^0,w,c
 11799   0028D0  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11800   0028D2  5020               	movf	(___fldiv@a+3)^0,w,c
 11801   0028D4  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11802   0028D6  A0D8               	btfss	status,0,c
 11803   0028D8  EF70  F014         	goto	u3421
 11804   0028DC  EF72  F014         	goto	u3420
 11805   0028E0                     u3421:
 11806   0028E0  EF7B  F014         	goto	l3936
 11807   0028E4                     u3420:
 11808   0028E4  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11809   0028E6  501D               	movf	___fldiv@a^0,w,c
 11810   0028E8  5E25               	subwf	___fldiv@rem^0,f,c
 11811   0028EA  501E               	movf	(___fldiv@a+1)^0,w,c
 11812   0028EC  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11813   0028EE  501F               	movf	(___fldiv@a+2)^0,w,c
 11814   0028F0  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11815   0028F2  5020               	movf	(___fldiv@a+3)^0,w,c
 11816   0028F4  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11817   0028F6                     l3936:
 11818   0028F6  2A31               	incf	___fldiv@aexp^0,f,c
 11819   0028F8                     l1262:
 11820   0028F8  0E19               	movlw	25
 11821   0028FA  6431               	cpfsgt	___fldiv@aexp^0,c
 11822   0028FC  EF82  F014         	goto	u3431
 11823   002900  EF84  F014         	goto	u3430
 11824   002904                     u3431:
 11825   002904  EF44  F014         	goto	l3922
 11826   002908                     u3430:
 11827   002908  5025               	movf	___fldiv@rem^0,w,c
 11828   00290A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11829   00290C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11830   00290E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11831   002910  B4D8               	btfsc	status,2,c
 11832   002912  EF8D  F014         	goto	u3441
 11833   002916  EF8F  F014         	goto	u3440
 11834   00291A                     u3441:
 11835   00291A  EFA7  F014         	goto	l3948
 11836   00291E                     u3440:
 11837   00291E  802C               	bsf	___fldiv@grs^0,0,c
 11838   002920  EFA7  F014         	goto	l3948
 11839   002924                     l3942:
 11840   002924  90D8               	bcf	status,0,c
 11841   002926  3619               	rlcf	___fldiv@b^0,f,c
 11842   002928  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11843   00292A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11844   00292C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11845   00292E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11846   002930  EF9C  F014         	goto	u3451
 11847   002934  EF9E  F014         	goto	u3450
 11848   002938                     u3451:
 11849   002938  EF9F  F014         	goto	l1271
 11850   00293C                     u3450:
 11851   00293C  8019               	bsf	___fldiv@b^0,0,c
 11852   00293E                     l1271:
 11853   00293E  90D8               	bcf	status,0,c
 11854   002940  362C               	rlcf	___fldiv@grs^0,f,c
 11855   002942  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11856   002944  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11857   002946  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11858   002948  062A               	decf	___fldiv@new_exp^0,f,c
 11859   00294A  A0D8               	btfss	status,0,c
 11860   00294C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11861   00294E                     l3948:
 11862   00294E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11863   002950  EFAC  F014         	goto	u3461
 11864   002954  EFAE  F014         	goto	u3460
 11865   002958                     u3461:
 11866   002958  EF92  F014         	goto	l3942
 11867   00295C                     u3460:
 11868   00295C  0E00               	movlw	0
 11869   00295E  6E31               	movwf	___fldiv@aexp^0,c
 11870   002960  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11871   002962  EFB5  F014         	goto	u3471
 11872   002966  EFB7  F014         	goto	u3470
 11873   00296A                     u3471:
 11874   00296A  EFDB  F014         	goto	l1273
 11875   00296E                     u3470:
 11876   00296E  0EFF               	movlw	255
 11877   002970  142C               	andwf	___fldiv@grs^0,w,c
 11878   002972  6E21               	movwf	??___fldiv^0,c
 11879   002974  0EFF               	movlw	255
 11880   002976  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11881   002978  6E22               	movwf	(??___fldiv+1)^0,c
 11882   00297A  0EFF               	movlw	255
 11883   00297C  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11884   00297E  6E23               	movwf	(??___fldiv+2)^0,c
 11885   002980  0E7F               	movlw	127
 11886   002982  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11887   002984  6E24               	movwf	(??___fldiv+3)^0,c
 11888   002986  5021               	movf	??___fldiv^0,w,c
 11889   002988  1022               	iorwf	(??___fldiv+1)^0,w,c
 11890   00298A  1023               	iorwf	(??___fldiv+2)^0,w,c
 11891   00298C  1024               	iorwf	(??___fldiv+3)^0,w,c
 11892   00298E  B4D8               	btfsc	status,2,c
 11893   002990  EFCC  F014         	goto	u3481
 11894   002994  EFCE  F014         	goto	u3480
 11895   002998                     u3481:
 11896   002998  EFD2  F014         	goto	l1274
 11897   00299C                     u3480:
 11898   00299C                     l3956:
 11899   00299C  0E01               	movlw	1
 11900   00299E  6E31               	movwf	___fldiv@aexp^0,c
 11901   0029A0  EFDB  F014         	goto	l1273
 11902   0029A4                     l1274:
 11903   0029A4  A019               	btfss	___fldiv@b^0,0,c
 11904   0029A6  EFD7  F014         	goto	u3491
 11905   0029AA  EFD9  F014         	goto	u3490
 11906   0029AE                     u3491:
 11907   0029AE  EFDB  F014         	goto	l1273
 11908   0029B2                     u3490:
 11909   0029B2  EFCE  F014         	goto	l3956
 11910   0029B6                     l1273:
 11911   0029B6  5031               	movf	___fldiv@aexp^0,w,c
 11912   0029B8  B4D8               	btfsc	status,2,c
 11913   0029BA  EFE1  F014         	goto	u3501
 11914   0029BE  EFE3  F014         	goto	u3500
 11915   0029C2                     u3501:
 11916   0029C2  EF07  F015         	goto	l3968
 11917   0029C6                     u3500:
 11918   0029C6  0E01               	movlw	1
 11919   0029C8  2619               	addwf	___fldiv@b^0,f,c
 11920   0029CA  0E00               	movlw	0
 11921   0029CC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11922   0029CE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11923   0029D0  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11924   0029D2  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11925   0029D4  EFEE  F014         	goto	u3511
 11926   0029D8  EFF0  F014         	goto	u3510
 11927   0029DC                     u3511:
 11928   0029DC  EF07  F015         	goto	l3968
 11929   0029E0                     u3510:
 11930   0029E0  C019  F021         	movff	___fldiv@b,??___fldiv
 11931   0029E4  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11932   0029E8  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11933   0029EC  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11934   0029F0  3424               	rlcf	(??___fldiv+3)^0,w,c
 11935   0029F2  3224               	rrcf	(??___fldiv+3)^0,f,c
 11936   0029F4  3223               	rrcf	(??___fldiv+2)^0,f,c
 11937   0029F6  3222               	rrcf	(??___fldiv+1)^0,f,c
 11938   0029F8  3221               	rrcf	??___fldiv^0,f,c
 11939   0029FA  C021  F019         	movff	??___fldiv,___fldiv@b
 11940   0029FE  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11941   002A02  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11942   002A06  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11943   002A0A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11944   002A0C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11945   002A0E                     l3968:
 11946   002A0E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11947   002A10  EF12  F015         	goto	u3521
 11948   002A14  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11949   002A16  E108               	bnz	u3520
 11950   002A18  282A               	incf	___fldiv@new_exp^0,w,c
 11951   002A1A  A0D8               	btfss	status,0,c
 11952   002A1C  EF12  F015         	goto	u3521
 11953   002A20  EF14  F015         	goto	u3520
 11954   002A24                     u3521:
 11955   002A24  EF1F  F015         	goto	l3972
 11956   002A28                     u3520:
 11957   002A28  0E00               	movlw	0
 11958   002A2A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11959   002A2C  682A               	setf	___fldiv@new_exp^0,c
 11960   002A2E  0E00               	movlw	0
 11961   002A30  6E19               	movwf	___fldiv@b^0,c
 11962   002A32  0E00               	movlw	0
 11963   002A34  6E1A               	movwf	(___fldiv@b+1)^0,c
 11964   002A36  0E00               	movlw	0
 11965   002A38  6E1B               	movwf	(___fldiv@b+2)^0,c
 11966   002A3A  0E00               	movlw	0
 11967   002A3C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11968   002A3E                     l3972:
 11969   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11970   002A40  EF2C  F015         	goto	u3530
 11971   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11972   002A46  E106               	bnz	u3531
 11973   002A48  042A               	decf	___fldiv@new_exp^0,w,c
 11974   002A4A  B0D8               	btfsc	status,0,c
 11975   002A4C  EF2A  F015         	goto	u3531
 11976   002A50  EF2C  F015         	goto	u3530
 11977   002A54                     u3531:
 11978   002A54  EF3A  F015         	goto	l3976
 11979   002A58                     u3530:
 11980   002A58  0E00               	movlw	0
 11981   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11982   002A5C  0E00               	movlw	0
 11983   002A5E  6E2A               	movwf	___fldiv@new_exp^0,c
 11984   002A60  0E00               	movlw	0
 11985   002A62  6E19               	movwf	___fldiv@b^0,c
 11986   002A64  0E00               	movlw	0
 11987   002A66  6E1A               	movwf	(___fldiv@b+1)^0,c
 11988   002A68  0E00               	movlw	0
 11989   002A6A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11990   002A6C  0E00               	movlw	0
 11991   002A6E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11992   002A70  0E00               	movlw	0
 11993   002A72  6E29               	movwf	___fldiv@sign^0,c
 11994   002A74                     l3976:
 11995   002A74  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11996   002A78  A030               	btfss	___fldiv@bexp^0,0,c
 11997   002A7A  EF41  F015         	goto	u3541
 11998   002A7E  EF43  F015         	goto	u3540
 11999   002A82                     u3541:
 12000   002A82  EF46  F015         	goto	l3982
 12001   002A86                     u3540:
 12002   002A86  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12003   002A88  EF47  F015         	goto	l3984
 12004   002A8C                     l3982:
 12005   002A8C  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12006   002A8E                     l3984:
 12007   002A8E  90D8               	bcf	status,0,c
 12008   002A90  3030               	rrcf	___fldiv@bexp^0,w,c
 12009   002A92  6E1C               	movwf	(___fldiv@b+3)^0,c
 12010   002A94  EFFD  F013         	goto	l3898
 12011   002A98                     l1260:
 12012   002A98  0012               	return		;funcret
 12013   002A9A                     __end_of___fldiv:
 12014                           	callstack 0
 12015                           
 12016 ;; *************** function _HighISR *****************
 12017 ;; Defined at:
 12018 ;;		line 59 in file "interrupts.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		None
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used: 1
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		Interrupt level 2
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	intcode
 12046   000008                     __pintcode:
 12047                           	callstack 0
 12048   000008                     _HighISR:
 12049                           	callstack 22
 12050                           
 12051                           ;incstack = 0
 12052   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12053   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12054   00000C  0011               	retfie		f
 12055   00000E                     __end_of_HighISR:
 12056                           	callstack 0
 12057                           
 12058                           	psect	rparam
 12059   000000                     
 12060                           	psect	temp
 12061   00005F                     btemp:
 12062                           	callstack 0
 12063   00005F                     	ds	1
 12064   000000                     int$flags	set	btemp
 12065   000000                     wtemp8	set	btemp+1
 12066   000000                     ttemp5	set	btemp+1
 12067   000000                     ttemp6	set	btemp+4
 12068   000000                     ttemp7	set	btemp+8
 12069                           
 12070                           	psect	idloc
 12071                           
 12072                           ;Config register IDLOC0 @ 0x200000
 12073                           ;	unspecified, using default values
 12074   200000                     	org	2097152
 12075   200000  0FFF               	dw	4095
 12076                           
 12077                           ;Config register IDLOC1 @ 0x200002
 12078                           ;	unspecified, using default values
 12079   200002                     	org	2097154
 12080   200002  0FFF               	dw	4095
 12081                           
 12082                           ;Config register IDLOC2 @ 0x200004
 12083                           ;	unspecified, using default values
 12084   200004                     	org	2097156
 12085   200004  0FFF               	dw	4095
 12086                           
 12087                           ;Config register IDLOC3 @ 0x200006
 12088                           ;	unspecified, using default values
 12089   200006                     	org	2097158
 12090   200006  0FFF               	dw	4095
 12091                           
 12092                           ;Config register IDLOC4 @ 0x200008
 12093                           ;	unspecified, using default values
 12094   200008                     	org	2097160
 12095   200008  0FFF               	dw	4095
 12096                           
 12097                           ;Config register IDLOC5 @ 0x20000A
 12098                           ;	unspecified, using default values
 12099   20000A                     	org	2097162
 12100   20000A  0FFF               	dw	4095
 12101                           
 12102                           ;Config register IDLOC6 @ 0x20000C
 12103                           ;	unspecified, using default values
 12104   20000C                     	org	2097164
 12105   20000C  0FFF               	dw	4095
 12106                           
 12107                           ;Config register IDLOC7 @ 0x20000E
 12108                           ;	unspecified, using default values
 12109   20000E                     	org	2097166
 12110   20000E  0FFF               	dw	4095
 12111                           
 12112                           	psect	config
 12113                           
 12114                           ;Config register CONFIG1L @ 0x300000
 12115                           ;	External Oscillator mode Selection bits
 12116                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12117                           ;	Power-up default value for COSC bits
 12118                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12119   300000                     	org	3145728
 12120   300000  AA                 	db	170
 12121                           
 12122                           ;Config register CONFIG1H @ 0x300001
 12123                           ;	unspecified, using default values
 12124                           ;	Clock Out Enable bit
 12125                           ;	CLKOUTEN = 0x1, unprogrammed default
 12126                           ;	Clock Switch Enable bit
 12127                           ;	CSWEN = 0x1, unprogrammed default
 12128                           ;	Fail-Safe Clock Monitor Enable bit
 12129                           ;	FCMEN = 0x1, unprogrammed default
 12130   300001                     	org	3145729
 12131   300001  FF                 	db	255
 12132                           
 12133                           ;Config register CONFIG2L @ 0x300002
 12134                           ;	unspecified, using default values
 12135                           ;	Master Clear Enable bit
 12136                           ;	MCLRE = 0x1, unprogrammed default
 12137                           ;	Power-up Timer Enable bit
 12138                           ;	PWRTE = 0x1, unprogrammed default
 12139                           ;	Low-power BOR enable bit
 12140                           ;	LPBOREN = 0x1, unprogrammed default
 12141                           ;	Brown-out Reset Enable bits
 12142                           ;	BOREN = 0x3, unprogrammed default
 12143   300002                     	org	3145730
 12144   300002  FF                 	db	255
 12145                           
 12146                           ;Config register CONFIG2H @ 0x300003
 12147                           ;	unspecified, using default values
 12148                           ;	Brown Out Reset Voltage selection bits
 12149                           ;	BORV = 0x3, unprogrammed default
 12150                           ;	ZCD Disable bit
 12151                           ;	ZCD = 0x1, unprogrammed default
 12152                           ;	PPSLOCK bit One-Way Set Enable bit
 12153                           ;	PPS1WAY = 0x1, unprogrammed default
 12154                           ;	Stack Full/Underflow Reset Enable bit
 12155                           ;	STVREN = 0x1, unprogrammed default
 12156                           ;	Debugger Enable bit
 12157                           ;	DEBUG = 0x1, unprogrammed default
 12158                           ;	Extended Instruction Set Enable bit
 12159                           ;	XINST = 0x1, unprogrammed default
 12160   300003                     	org	3145731
 12161   300003  FF                 	db	255
 12162                           
 12163                           ;Config register CONFIG3L @ 0x300004
 12164                           ;	WDT Period Select bits
 12165                           ;	WDTCPS = 0x1F, unprogrammed default
 12166                           ;	WDT operating mode
 12167                           ;	WDTE = OFF, WDT Disabled
 12168   300004                     	org	3145732
 12169   300004  9F                 	db	159
 12170                           
 12171                           ;Config register CONFIG3H @ 0x300005
 12172                           ;	unspecified, using default values
 12173                           ;	WDT Window Select bits
 12174                           ;	WDTCWS = 0x7, unprogrammed default
 12175                           ;	WDT input clock selector
 12176                           ;	WDTCCS = 0x7, unprogrammed default
 12177   300005                     	org	3145733
 12178   300005  FF                 	db	255
 12179                           
 12180                           ;Config register CONFIG4L @ 0x300006
 12181                           ;	unspecified, using default values
 12182                           ;	Write Protection Block 0
 12183                           ;	WRT0 = 0x1, unprogrammed default
 12184                           ;	Write Protection Block 1
 12185                           ;	WRT1 = 0x1, unprogrammed default
 12186                           ;	Write Protection Block 2
 12187                           ;	WRT2 = 0x1, unprogrammed default
 12188                           ;	Write Protection Block 3
 12189                           ;	WRT3 = 0x1, unprogrammed default
 12190                           ;	Write Protection Block 3
 12191                           ;	WRT4 = 0x1, unprogrammed default
 12192                           ;	Write Protection Block 3
 12193                           ;	WRT5 = 0x1, unprogrammed default
 12194                           ;	Write Protection Block 3
 12195                           ;	WRT6 = 0x1, unprogrammed default
 12196                           ;	Write Protection Block 3
 12197                           ;	WRT7 = 0x1, unprogrammed default
 12198   300006                     	org	3145734
 12199   300006  FF                 	db	255
 12200                           
 12201                           ;Config register CONFIG4H @ 0x300007
 12202                           ;	unspecified, using default values
 12203                           ;	Configuration Register Write Protection bit
 12204                           ;	WRTC = 0x1, unprogrammed default
 12205                           ;	Boot Block Write Protection bit
 12206                           ;	WRTB = 0x1, unprogrammed default
 12207                           ;	Data EEPROM Write Protection bit
 12208                           ;	WRTD = 0x1, unprogrammed default
 12209                           ;	Scanner Enable bit
 12210                           ;	SCANE = 0x1, unprogrammed default
 12211                           ;	Low Voltage Programming Enable bit
 12212                           ;	LVP = 0x1, unprogrammed default
 12213   300007                     	org	3145735
 12214   300007  FF                 	db	255
 12215                           
 12216                           ;Config register CONFIG5L @ 0x300008
 12217                           ;	unspecified, using default values
 12218                           ;	UserNVM Program Memory Code Protection bit
 12219                           ;	CP = 0x1, unprogrammed default
 12220                           ;	DataNVM Memory Code Protection bit
 12221                           ;	CPD = 0x1, unprogrammed default
 12222   300008                     	org	3145736
 12223   300008  FF                 	db	255
 12224                           
 12225                           ;Config register CONFIG5H @ 0x300009
 12226                           ;	unspecified, using default values
 12227   300009                     	org	3145737
 12228   300009  FF                 	db	255
 12229                           
 12230                           ;Config register CONFIG6L @ 0x30000A
 12231                           ;	unspecified, using default values
 12232                           ;	Table Read Protection Block 0
 12233                           ;	EBTR0 = 0x1, unprogrammed default
 12234                           ;	Table Read Protection Block 1
 12235                           ;	EBTR1 = 0x1, unprogrammed default
 12236                           ;	Table Read Protection Block 2
 12237                           ;	EBTR2 = 0x1, unprogrammed default
 12238                           ;	Table Read Protection Block 3
 12239                           ;	EBTR3 = 0x1, unprogrammed default
 12240                           ;	Table Read Protection Block 4
 12241                           ;	EBTR4 = 0x1, unprogrammed default
 12242                           ;	Table Read Protection Block 5
 12243                           ;	EBTR5 = 0x1, unprogrammed default
 12244                           ;	Table Read Protection Block 6
 12245                           ;	EBTR6 = 0x1, unprogrammed default
 12246                           ;	Table Read Protection Block 7
 12247                           ;	EBTR7 = 0x1, unprogrammed default
 12248   30000A                     	org	3145738
 12249   30000A  FF                 	db	255
 12250                           
 12251                           ;Config register CONFIG6H @ 0x30000B
 12252                           ;	unspecified, using default values
 12253                           ;	Boot Block Table Read Protection bit
 12254                           ;	EBTRB = 0x1, unprogrammed default
 12255   30000B                     	org	3145739
 12256   30000B  FF                 	db	255
 12257                           tosu	equ	0xFFF
 12258                           tosh	equ	0xFFE
 12259                           tosl	equ	0xFFD
 12260                           stkptr	equ	0xFFC
 12261                           pclatu	equ	0xFFB
 12262                           pclath	equ	0xFFA
 12263                           pcl	equ	0xFF9
 12264                           tblptru	equ	0xFF8
 12265                           tblptrh	equ	0xFF7
 12266                           tblptrl	equ	0xFF6
 12267                           tablat	equ	0xFF5
 12268                           prodh	equ	0xFF4
 12269                           prodl	equ	0xFF3
 12270                           indf0	equ	0xFEF
 12271                           postinc0	equ	0xFEE
 12272                           postdec0	equ	0xFED
 12273                           preinc0	equ	0xFEC
 12274                           plusw0	equ	0xFEB
 12275                           fsr0h	equ	0xFEA
 12276                           fsr0l	equ	0xFE9
 12277                           wreg	equ	0xFE8
 12278                           indf1	equ	0xFE7
 12279                           postinc1	equ	0xFE6
 12280                           postdec1	equ	0xFE5
 12281                           preinc1	equ	0xFE4
 12282                           plusw1	equ	0xFE3
 12283                           fsr1h	equ	0xFE2
 12284                           fsr1l	equ	0xFE1
 12285                           bsr	equ	0xFE0
 12286                           indf2	equ	0xFDF
 12287                           postinc2	equ	0xFDE
 12288                           postdec2	equ	0xFDD
 12289                           preinc2	equ	0xFDC
 12290                           plusw2	equ	0xFDB
 12291                           fsr2h	equ	0xFDA
 12292                           fsr2l	equ	0xFD9
 12293                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        9
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2486$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2433$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2433$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  326241
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  130413
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   15772
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15164
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   17748
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   17748
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   17140
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   17140
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   17900
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8096
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   24494
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8722
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   23886
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    8114
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    8722
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   21363
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2864
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      61        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 20:17:08 2023

               _color_read_Red 4902                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 48B2                   ___fldiv@sign 0029                _color_read_Blue 49A2  
                           l51 4900                             l60 49F0                             l45 480C  
                           l54 4950                             l63 44AC                             l48 4CEC  
                           l57 49A0                             l66 2DC6                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 4952  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 4D2A  
                          l140 4C58                            l212 4D42                            l143 4C5A  
                          l152 4D58                            l400 199E                            l161 4B0A  
                          l209 4D2E                            l146 4C80                            l218 4C2E  
                          l155 4D62                            l500 428A                            l149 4D6C  
                          l405 1DB8                            l158 4D4E                            l430 1E12  
                          l422 1DB4                            l272 4D78                            l524 3FE6  
                          l540 3F48                            l508 3EAA                            l516 3E0C  
                          l532 3CC4                            l543 466C                            l552 4560  
                          l546 46C4                            l570 444E                            l555 4506  
                          l643 3072                            l564 4B88                            l549 45BA  
                          l573 485E                            l637 3068                            l805 38FC  
                          l494 3798                            l558 4614                            l582 47BA  
                          l567 4BC6                            l591 4102                            l487 418A  
                          l576 48B0                            l672 4BE8                            l585 420C  
                          l666 4D0C                            l579 4768                            l675 4BFE  
                          l588 4074                            l669 4CA6                            l678 4CCC  
                          l943 3B0A                            l792 362C                            l937 3D6E  
                          l948 3B50                            _abs 4B0C                            _pad 428C  
                          _rel 01B2                            wreg 000FE8                   ___flmul@aexp 0043  
                 ___flmul@bexp 0044                   ___flmul@sign 003E                   ___flmul@temp 0049  
                 ___flmul@prod 0045                Colour_decider@i 007A                           ?_abs 0013  
                         l1301 2608                           l1302 25F6                           l1206 2004  
                         l1223 211E                           l1215 22D4                           l1207 1FF2  
                         l1232 21EE                           l1208 1FB8                           l1233 21DC  
                         l1401 32F0                           l1260 2A98                           l1340 33E0  
                         l1309 26C0                           l1333 3348                           l1421 4B4A  
                         l1262 28F8                           l1414 4A3E                           l1271 293E  
                         l4000 2302                           l1248 4A84                           l1336 34A4  
                         l1176 4378                           l3200 3B80                           l1408 3A4C  
                         l1273 29B6                           l1265 28BC                           l1169 4370  
                         l1433 3C1A                           l1441 4AC8                           l1274 29A4  
                         l4010 233E                           l4002 2312                           l3210 4CC4  
                         l1418 4B42                           l3202 3B9E                           l1347 343C  
                         l4100 2660                           l1292 239A                           l4020 2374  
                         l4012 2344                           l4004 2322                           l3220 4328  
                         l3300 360C                           l1444 4D76                           l3204 3BD4  
                         l1356 4716                           l4110 26D4                           l4102 267A  
                         l4022 2384                           l4014 2352                           l4006 2328  
                         l3230 4362                           l3222 4330                           l3214 4306  
                         l3310 37CC                           l1382 4304                           l1390 314E  
                         l4112 26E2                           l4104 268E                           l4040 2406  
                         l1296 26FE                           l4032 23CE                           l4024 238A  
                         l4016 2354                           l4008 2338                           l4200 3450  
                         l3232 4364                           l3224 433E                           l3216 430E  
                         l3208 4CA8                           l3400 3E7A                           l3320 3824  
                         l3312 37D0                           l3304 379A                           l3240 4AA4  
                         l4130 3CF4                           l4114 26E4                           l4106 26A8  
                         l4050 2450                           l4042 241E                           l4034 23DA  
                         l4026 23AA                           l4018 2364                           l4122 4A40  
                         l4202 3474                           l3234 436A                           l3226 4344  
                         l3218 4320                           l3250 36B2                           l3402 3E92  
                         l3410 3DB8                           l3330 38A6                           l3322 3838  
                         l3314 37DE                           l3306 379E                           l3242 4AA8  
                         l1378 42AE                           l1299 2590                           l1387 3100  
                         l4140 3D6C                           l4132 3D04                           l4108 26C4  
                         l4116 26EA                           l4060 24A6                           l4052 2460  
                         l4044 242A                           l4036 23E4                           l4028 23BA  
                         l4124 4A50                           l4204 3484                           l4300 1032  
                         l3228 435A                           l3252 36B6                           l3244 362E  
                         l3420 3ED0                           l3412 3DC4                           l3404 3D70  
                         l3500 4ACC                           l3260 34A6                           l3324 3846  
                         l3332 38AC                           l3316 37FE                           l3308 37AC  
                         l3236 4A86                           l3340 428C                           l4212 49F2  
                         l1389 3108                           l4134 3D32                           l4150 3ABA  
                         l4118 26EE                           l4070 254A                           l4062 24C2  
                         l4054 246C                           l4046 2436                           l4038 23FA  
                         l4206 3492                           l4310 1148                           l4302 1088  
                         l3254 36F8                           l3246 364A                           l3430 3F30  
                         l3422 3EE8                           l3406 3D94                           l3414 3DDC  
                         l4230 47E4                           l4222 47BC                           l3510 4B08  
                         l3502 4AD0                           l3270 34EA                           l3262 34AA  
                         l3334 38BC                           l3326 3874                           l3318 381C  
                         l3238 4A92                           l3350 42D2                           l3342 429A  
                         l4214 49FE                           l4136 3D42                           l4128 3CC6  
                         l4160 3B48                           l4152 3ACA                           l4144 3A4E  
                         l4080 25A0                           l4072 2558                           l4064 24CE  
                         l4056 247C                           l4048 2444                           l3600 1F2A  
                         l4208 3494                           l4320 127A                           l4312 1158  
                         l3256 3714                           l3248 369E                           l3424 3EF4  
                         l3416 3DF4                           l3408 3DAC                           l3520 4616  
                         l3360 4C6A                           l4240 47FE                           l4232 47EE  
                         l4224 47C0                           l3504 4AD8                           l3280 3540  
                         l3272 350A                           l3264 34B8                           l3336 38DC  
                         l3328 3894                           l3352 42F0                           l3344 42A6  
                         l3440 30D8                           l3432 3074                           l4216 4A1A  
                         l4138 3D66                           l4162 3B4E                           l4154 3AD8  
                         l4146 3A7C                           l4082 25AE                           l4074 2576  
                         l4066 24EA                           l4058 2496                           l3610 1F3E  
                         l3602 1F2E                           l4170 3312                           l4410 1702  
                         l4322 12F6                           l4314 1190                           l4306 1094  
                         l3258 3758                           l3370 3F9E                           l3362 3F4A  
                         l3426 3F00                           l3418 3EAC                           l3530 4698  
                         l3522 462A                           l4250 4808                           l4242 4800  
                         l4234 47F8                           l4226 47CA                           l3514 4BC8  
                         l3506 4AE0                           l3290 35C2                           l3282 3554  
                         l3274 350E                           l3266 34D8                           l3354 4B0C  
                         l3194 3B52                           l3346 42BA                           l3450 3136  
                         l3442 30F4                           l3434 3094                           l4218 4A36  
                         l4156 3AEA                           l4148 3A8C                           l4092 2618  
                         l4084 25B2                           l4076 2580                           l4068 2514  
                         l3700 219C                           l3620 1F52                           l3612 1F42  
                         l3604 1F32                           l4180 338A                           l4172 3358  
                         l4412 1734                           l4316 11A2                           l4324 134E  
                         l4308 10A8                           l3364 3F6E                           l3372 3FB6  
                         l3380 422A                           l3428 3F18                           l3532 4562  
                         l3524 4640                           l4252 480A                           l4244 4802  
                         l4236 47FA                           l4228 47DA                           l4260 2B9A  
                         l3540 44C2                           l3516 4BD4                           l4500 411A  
                         l3508 4B06                           l3292 35C4                           l3284 3562  
                         l3276 351A                           l3268 34DC                           l3356 4B26  
                         l3196 3B64                           l3348 42CE                           l3460 3166  
                         l3452 3142                           l3444 3110                           l3436 30A8  
                         l4158 3AF8                           l4094 2624                           l4086 25C0  
                         l4078 258E                           l3710 21D4                           l3702 219E  
                         l3630 1FB0                           l3614 1F46                           l3606 1F36  
                         l3622 1F56                           l3550 1E32                           l4190 3412  
                         l4182 3396                           l4174 336E                           l4166 32F4  
                         l4430 186C                           l4414 1766                           l4350 14CC  
                         l4326 1380                           l4334 13BE                           l4318 121E  
                         l4270 0E26                           l3374 3FCE                           l3366 3F86  
                         l3382 4236                           l3534 4576                           l3390 3E0E  
                         l3526 466E                           l3358 4C5A                           l4246 4804  
                         l4238 47FC                           l4262 2C2E                           l3542 44DA  
                         l3518 4BE4                           l4510 4164                           l4502 411C  
                         l4254 4450                           l3294 35D6                           l3286 3574  
                         l3278 3538                           l3198 3B76                           l3470 3272  
                         l3462 31E8                           l3454 314A                           l3446 3120  
                         l3438 30B8                           l4096 2632                           l4088 25EE  
                         l3720 2252                           l3704 21AC                           l3640 1FE6  
                         l3632 1FC6                           l3624 1F5A                           l3616 1F4A  
                         l3608 1F3A                           l3552 1E42                           l3560 1E6C  
                         l3544 1E16                           l4192 341E                           l4184 33C8  
                         l4168 3304                           l4416 1798                           l4424 17CE  
                         l4360 1548                           l4336 13F0                           l4344 142E  
                         l4328 13B2                           l4280 0EF4                           l4272 0E50  
                         l3368 3F92                           l3384 4242                           l3376 420E  
                         l3536 458E                           l3392 3E32                           l3528 4682  
                         l4248 4806                           l4264 2C62                           l4256 2A9A  
                         l4520 417E                           l4512 4166                           l4504 4132  
                         l3288 35A2                           l3296 35DC                           l3480 32D0  
                         l3472 3290                           l3464 31EE                           l3456 3156  
                         l3448 3126                           l4098 265C                           l3730 2298  
                         l3714 21FE                           l3722 2254                           l3706 21B0  
                         l3650 2036                           l3642 1FF0                           l3634 1FD2  
                         l3626 1F84                           l3618 1F4E                           l3570 1E9C  
                         l3562 1E7C                           l3554 1E52                           l3546 1E22  
                         l4194 342C                           l4186 33CA                           l4178 3382  
                         l4426 1800                           l4450 18F8                           l4346 1460  
                         l4370 1560                           l4338 1422                           l4290 0F82  
                         l4274 0E5C                           l3378 4212                           l3386 425A  
                         l4530 45BC                           l3394 3E4A                           l3490 4D4A  
                         l4266 2CFA                           l4258 2B66                           l3538 44AE  
                         l4522 4188                           l4514 4170                           l4506 4136  
                         l3810 49E8                           l3802 4952                           l3298 35EC  
                         l3474 32AA                           l3466 31F4                           l3458 3160  
                         l3900 27FE                           l3740 22C2                           l3732 22A6  
                         l3724 2264                           l3716 220A                           l3708 21BE  
                         l3660 2072                           l3652 2046                           l3644 2012  
                         l3636 1FD6                           l3628 1FA0                           l3580 1EDC  
                         l3572 1EAA                           l3564 1E82                           l3556 1E62  
                         l3548 1E30                           l4196 344A                           l4188 33D6  
                         l4428 1832                           l4372 1592                           l4348 1492  
                         l4292 0F8A                           l4276 0E8C                           l3388 4272  
                         l4532 45D0                           l3396 3E56                           l3484 4D64  
                         l3492 4D5A                           l4268 2D2E                           l4524 4C82  
                         l3820 4718                           l4516 4172                           l4508 415A  
                         l4460 4D24                           l3804 4998                           l3476 32BA  
                         l3468 3258                           l4540 46E0                           l4700 198A  
                         l3742 22C4                           l3734 22AC                           l3726 2274  
                         l3718 2218                           l3670 20B8                           l3662 2080  
                         l3654 2054                           l3646 2022                           l3638 1FE4  
                         l3590 1F16                           l3582 1EDE                           l3574 1EAC  
                         l3566 1E94                           l3558 1E64                           l4198 344C  
                         l4446 18EC                           l4438 18AA                           l4390 1650  
                         l4382 1606                           l4374 15C4                           l4366 1554  
                         l4358 150A                           l4294 0FDE                           l4286 0EFE  
                         l4278 0EC0                           l4534 45E8                           l3398 3E62  
                         l4550 4860                           l3486 4D68                           l3494 4D5E  
                         l4526 4C84                           l3822 43EA                           l3830 3C40  
                         l4518 417C                           l4462 4D26                           l4454 4D0E  
                         l3814 4D2E                           l4470 4C12                           l3478 32C0  
                         l3750 3930                           l4542 46E8                           l4710 19C8  
                         l4702 1992                           ?_pad 0011                           l3920 2880  
                         l3912 2836                           l3904 2812                           l3736 22AE  
                         l3728 2294                           l3680 2134                           l3672 20EC  
                         l3664 2082                           l3656 2062                           l3592 1F1A  
                         l3576 1EBC                           l3584 1EE6                           l3568 1E96  
                         l4384 1644                           l4296 1010                           l4288 0F50  
                         l4560 41E0                           l4552 418C                           l3488 4D46  
                         l4528 4C8A                           l3824 4B8A                           l3840 3CA0  
                         l3832 3C58                           l4464 4D28                           l4456 4D18  
                         l3496 4D50                           l3808 49A2                           l3816 4D3E  
                         l4472 4C16                           l3760 398C                           l3752 393E  
                         l4544 4704                           l4536 46C6                           l4800 1C88  
                         l4720 1A22                           l4712 19D0                           l4704 199A  
                         l3930 28C6                           l3922 2888                           l3914 2850  
                         l3906 2822                           l3738 22B4                           l3690 2170  
                         l3682 2144                           l3674 20EE                           l3666 208C  
                         l3658 206E                           l3594 1F1E                           l3586 1EF6  
                         l3578 1ECC                           l4394 165C                           l4298 1016  
                         l4554 41A0                           l4490 4D00                           l3826 476A  
                         l3818 4B4C                           l3850 3FE8                           l3842 3CB8  
                         l3834 3C64                           l4570 2E10                           l4562 2DC8  
                         l4458 4D1A                           l3498 4D54                           l4466 4C00  
                         l3762 39E2                           l3754 3944                           l3770 3A24  
                         l3746 38FE                           l4538 46D8                           l4810 1CCE  
                         l4802 1C9E                           l4730 1A70                           l4722 1A28  
                         l4714 19E4                           l4706 19AC                           l4650 190A  
                         l3940 291E                           l3932 28E4                           l3924 2898  
                         l3916 2860                           l3908 2822                           l3860 271C  
                         l3692 2172                           l3676 20FE                           l3668 2092  
                         l3596 1F22                           l3588 1F08                           l4396 168E  
                         l3844 4508                           l4556 41B8                           l4492 4D0A  
                         l4548 480E                           l3780 4C40                           l3852 4076  
                         l3836 3C70                           l3828 3C1C                           l4580 2EE4  
                         l4572 2E38                           l4564 2DD0                           l4468 4C04  
                         l3756 3954                           l3748 3922                           l4820 1D14  
                         l4804 1CB2                           l4812 1CE4                           l4740 1ABE  
                         l4732 1A8C                           l4724 1A2C                           l4716 19F0  
                         l4708 19C4                           l4660 1924                           l4652 190E  
                         l3950 295C                           l3942 2924                           l3934 28E6  
                         l3926 28AC                           l3918 2870                           l3862 272C  
                         l3870 2756                           l3854 2700                           l3694 2180  
                         l3686 2158                           l3678 210E                           l3598 1F26  
                         l4398 16C0                           l3846 451C                           l4558 41CC  
                         l4486 4CEE                           l3782 4C42                           l3838 3C88  
                         l4590 2FBC                           l4582 2F10                           l4574 2E64  
                         l4494 4104                           l3790 48B2                           l3766 3A12  
                         l3758 3970                           l4830 1D7C                           l4814 1CF8  
                         l4822 1D2A                           l4806 1CC6                           l4750 1B34  
                         l4734 1AA6                           l4742 1AD6                           l4726 1A40  
                         l4718 1A04                           l4670 1930                           l4662 1926  
                         l4654 1912                           l4646 1902                           l3960 29C6  
                         l3952 2960                           l3944 292E                           l3936 28F6  
                         l3928 28BA                           l3880 2782                           l3872 2766  
                         l3864 273C                           l3856 270C                           l3696 2188  
                         l3688 2162                           l3848 4534                           l4488 4CF6  
                         l3784 4C44                           l3776 4C30                           l4592 2FE6  
                         l4584 2F3A                           l4576 2E8E                           l4568 2DE2  
                         l4496 4116                           l3792 48F8                           l4832 1DA6  
                         l4824 1D3E                           l4816 1D0C                           l4808 1CCA  
                         l4760 1B70                           l4752 1B40                           l4744 1AF4  
                         l4736 1AAE                           l4728 1A54                           l4680 1942  
                         l4672 1932                           l4664 1928                           l4656 1916  
                         l4648 1906                           l3970 2A28                           l3962 29D2  
                         l3954 296E                           l3946 293C                           l3938 2908  
                         l3882 2792                           l3890 27BC                           l3874 276C  
                         l3866 274C                           l3858 271A                           l3698 218C  
                         l3786 4C46                           l3778 4C3A                           l4594 3012  
                         l4586 2F66                           l4578 2EBA                           l4498 4118  
                         l4834 1DC0                           l4826 1D56                           l4818 1D10  
                         l4770 1BB6                           l4754 1B54                           l4762 1B86  
                         l4746 1AFC                           l4738 1AB6                           l4690 1964  
                         l4682 194A                           l4674 1934                           l4666 192A  
                         l4658 1922                           l3980 2A86                           l3972 2A3E  
                         l3964 29E0                           l3956 299C                           l3948 294E  
                         l3892 27CC                           l3884 27A2                           l3876 2772  
                         l3868 274E                           l3788 4CD0                           l4596 303C  
                         l4588 2F90                           l3796 4902                           l4836 1DF2  
                         l4828 1D68                           l4780 1BFC                           l4764 1B9A  
                         l4772 1BCC                           l4756 1B68                           l4748 1B02  
                         l4692 1968                           l4684 1952                           l4676 193A  
                         l4668 192E                           l3982 2A8C                           l3974 2A58  
                         l3966 2A0A                           l3894 27E2                           l3886 27B2  
                         l3878 2780                           l4598 3068                           l3798 4948  
                         l4790 1C42                           l4774 1BE0                           l4782 1C12  
                         l4766 1BAE                           l4758 1B6C                           l4838 1DFE  
                         l4694 1970                           l4686 195A                           l4678 193E  
                         l3984 2A8E                           l3976 2A74                           l3968 2A0E  
                         l3896 27F2                           l3888 27B4                           l3992 22D6  
                         l4784 1C26                           l4792 1C58                           l4776 1BF4  
                         l4768 1BB2                           l4696 1978                           l4688 1960  
                         l3978 2A78                           l3898 27FA                           l3994 22E2  
                         l4794 1C6C                           l4786 1C3A                           l4778 1BF8  
                         l4698 1980                           l3996 22F0                           l4796 1C80  
                         l4788 1C3E                           l3998 22F2                           l4798 1C84  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 1FE4                           u3001 1FE0  
                         u3010 2004                           u3011 2000                           u3100 2144  
                         u3020 2012                           u3101 2140                           u3021 200E  
                         u3110 2170                           u3030 2022                           u3111 216C  
                         u3031 201E                           u3200 2252                           u3120 2180  
                         u3040 2054                           u4000 11A2                           u2400 4320  
                 _BAUD4CONbits 000EE9                           u3201 224E                           u3121 217C  
                         u3041 2050                           u4001 119E                           u2401 431C  
                         u3210 2264                           u3130 219C                           u3050 2062  
                         u4010 1380                           u2410 433E                           u3211 2260  
                         u3131 2198                           u3051 205E                           u4011 137C  
                         u2411 433A                           u3220 2274                           u3140 21AC  
                         u3060 2080                           u4100 1592                           u4020 13B2  
                         u2420 435A                           u3300 3CA0                           u2500 3562  
                         u3221 2270                           u3141 21A8                           u3061 207C  
                         u4101 158E                           u4021 13AE                           u2421 4356  
                         u3301 3C9C                           u2501 355E                           u3230 2294  
                         u3150 21BE                           u3070 20B8                           u4110 15C4  
                         u4030 13F0                           u3310 3CB8                           u2510 35A2  
                         u2430 4AC8                           u3231 2290                           u3151 21BA  
                         u3071 20B4                           u4111 15C0                           u4031 13EC  
                         u3311 3CB4                           u2511 359E                           u2431 4AC4  
                         u3400 2898                           u3320 271A                           u3240 22A6  
                         u3160 21D4                           u3080 20FE                           u4200 17CA  
                         u4120 1602                           u4040 1422                           u2440 364A  
                         u2520 35EC                           u2360 3B64                           u2600 42F0  
                         u3401 2894                           u3321 2716                           u3241 22A2  
                         u3161 21D0                           u3081 20FA                           u4201 17C6  
                         u4121 15FE                           u4041 141E                           u2441 3646  
                         u2521 35E8                           u2361 3B60                           u2601 42EC  
                         u3410 28BA                           u3330 272C                           u3250 22C2  
                         u3170 21EA                           u3090 2134                           u4210 1800  
                         u4130 1644                           u4050 1460                           u2450 3714  
                         u2530 37AC                           u2610 4B26                           u2370 3B76  
                         _T2PR 000FBC                           u3411 28B6                           u3331 2728  
                         u3251 22BE                           u3171 21E6                           u3091 2130  
                         u4211 17FC                           u4131 1640                           u4051 145C  
                         u2451 3710                           u2531 37A8                           u2611 4B22  
                         u2371 3B72                           u3500 29C6                           u3420 28E4  
                         u3340 273C                           u3180 21FE                           u4220 1832  
                         u4140 168E                           u4060 1492                           u2700 3DF4  
                         u2620 4C6A                           u4300 2DDE                           u2460 34B8  
                         u2540 37DE                           u2380 3B9E                           u3260 3922  
                         u3501 29C2                           u3421 28E0                           u3341 2738  
                         u3181 21FA                           u4221 182E                           u4141 168A  
                         u4061 148E                           u2701 3DF0                           u2621 4C66  
                         u4301 2DDA                           u2461 34B4                           u2541 37DA  
                         u2381 3B9A                           u3261 391E                           u3510 29E0  
                         u3430 2908                           u3350 2780                           u3190 2218  
                         u4230 186C                           u4150 16C0                           u4070 14CC  
                         u2710 3E0C                           u2630 4C80                           u4310 2E38  
                         u2470 34EA                           u2550 381C                           u2390 3BD4  
                         u3270 3970                           u3511 29DC                           u3431 2904  
                         u3351 277C                           u3191 2214                           u4231 1868  
                         u4151 16BC                           u4071 14C8                           u2711 3E08  
                         u2631 4C7C                           u4311 2E34                           u2471 34E6  
                         u2551 3818                           u2391 3BD0                           u3271 396C  
                         u3520 2A28                           u3440 291E                           u3360 2792  
                         u3600 2374                           u4240 18A6                           u4160 16FE  
                         u4080 1506                           u2640 3FCE                           u2720 3F30  
                         u4320 2E8E                           u2560 3846                           u2800 3272  
                         u3280 398C                           u3521 2A24                           u3441 291A  
                         u3361 278E                           u3601 2370                           u4241 18A2  
                         u4161 16FA                           u4081 1502                           u2641 3FCA  
                         u2721 3F2C                           u4321 2E8A                           u2481 3514  
                         u2561 3842                           u2801 326E                           u3281 3988  
                         u3530 2A58                           u3450 293C                           u3370 27A2  
                         u3610 23AA                           u4250 18E8                           u4170 1734  
                         u4090 1548                           u2650 3FE6                           u2730 3F48  
                         u4330 2EE4                           u3290 4D3E                           u2490 3538  
                         u2570 3874                           u2810 3290                           u3531 2A54  
                         u3451 2938                           u3371 279E                           u3611 23A6  
                         u4251 18E4                           u4171 1730                           u4091 1544  
                         u2651 3FE2                           u2731 3F44                           u4331 2EE0  
                         u3291 4D3A                           u2491 3534                           u2571 3870  
                         u2811 328C                           u3540 2A86                           u3460 295C  
                         u3380 27E2                           u3700 2632                           u3620 23BA  
                         u2900 1E94                           u4180 1766                           u2660 4272  
                         u4340 2F3A                           u4260 4C2E                           u2580 38BC  
                         u2820 32AA                           u2740 30A4                           u4500 1C26  
                         u3541 2A82                           u3461 2958                           u3381 27DE  
                         u3701 262E                           u3621 23B6                           u2901 1E90  
                         u4181 1762                           u2661 426E                           u4341 2F36  
                         u4261 4C2A                           u2581 38B8                           u2821 32A6  
                         u2741 309E                           u4501 1C22                           u3470 296E  
                         u3390 2822                           u3710 267A                           u3630 2534  
                         u3550 22F0                           u2910 1EAA                           u4190 1798  
                         u2670 428A                           u4350 2F90                           u2590 429A  
                         u2830 32BA                           u2750 30A6                           u4510 1C6C  
                         u4430 19AC                           u3471 296A                           u3391 281E  
                         u3711 2676                           u3551 22EC                           u2911 1EA6  
                         u4191 1794                           u2671 4286                           u4351 2F8C  
                         u2591 4296                           u2831 32B6                           u4511 1C68  
                         u4431 19A8                           u3480 299C                           u3800 3AF8  
                         u3720 26A8                           u3640 258E                           u3560 2302  
                         u2920 1EBC                           u2680 3E92                           u4360 2FE6  
                         u2840 4AF4                           u2760 30B8                           u4520 1CB2  
                         u4440 1A22                           u3481 2998                           u3801 3AF4  
                         u3721 26A4                           u3641 258A                           u3561 22FE  
                         u2921 1EB8                           u2681 3E8E                           u4361 2FE2  
                         u2841 4AEC                           u2761 30B4                           u4521 1CAE  
                         u4441 1A1E                           u3490 29B2                           u3810 3B48  
                         u3730 26E2                           u3650 25AE                           u3570 2312  
                         u2930 1ECC                           u2690 3EAA                           u4370 303C  
                         u2770 30F4                           u4530 1CF8                           u4450 1AA6  
                         u3491 29AE                           u3811 3B44                           u3731 26DE  
                         u3651 25AA                           u3635 252A                           u3571 230E  
                         u2931 1EC8                           u2691 3EA6                           u4371 3038  
                         u2771 30F0                           u4531 1CF4                           u4451 1AA2  
                         u3740 3CF4                           u3660 25C0                           u3580 2352  
                         u2940 1F08                           u3900 3484                           u3820 3304  
                         u2860 4BFE                           u2780 3120                           u4540 1D3E  
                         u4460 1AF4                           u3741 3CF0                           u3661 25BC  
                         u3581 234E                           u2941 1F04                           u3901 3480  
                         u3821 3300                           u2861 4BFA                           u2781 311C  
                         u4541 1D3A                           u4461 1AF0                           u3750 3D32  
                         u3670 25EE                           u3590 2364                           u2950 1F16  
                         u2870 1E30                           u3910 3492                           u3830 3312  
                         u2790 3136                           u4550 1D68                           u4470 1B54  
                         u3751 3D2E                           u3671 25EA                           u3591 2360  
                         u2951 1F12                           u2871 1E2C                           u3911 348E  
                         u3831 330E                           u2791 3132                           u4551 1D64  
                         u4471 1B50                           u3760 3D66                           u3680 2604  
                         u2960 1F84                           u2880 1E42                           u3840 336E  
                         u3920 4A36                           u4560 1E12                           u4480 1B9A  
                         u3761 3D62                           u3681 2600                           u2961 1F80  
                         u2881 1E3E                           u3841 336A                           u3921 4A32  
                         u4561 1E0E                           u4481 1B96                           u3770 3A7C  
                         u3690 2618                           u2970 1F9C                           u2890 1E52  
                         u3850 33C4                           u2858 4AF6                           u4490 1BE0  
                         u3771 3A78                           u3691 2614                           u2971 1F96  
                         u2891 1E4E                           u3851 33C0                           u3931 0E56  
                         u4491 1BDC                           u4707 19B6                           u3780 3ABA  
                         u2980 1F9E                           u3860 340E                           u3940 0F50  
                         u3781 3AB6                           u3861 340A                           u3941 0F4C  
                         u4717 1A5E                           u3790 3AD8                           u2990 1FC6  
                         u3870 342C                           u3950 0FDE                           u3791 3AD4  
                         u2991 1FC2                           u3871 3428                           u3951 0FDA  
                         u4807 3DCE                           u4727 1AC8                           u3880 343C  
                         u3960 1032                           u3881 3438                           u3961 102E  
                         u4817 41AA                           u4737 3C7A                           u3890 344A  
                         u3970 1088                           u3891 3446                           u3971 1084  
                         u4907 3F0A                           u4827 41EA                           u4747 4BDA  
                         u3980 10A8                           u3981 10A4                           u4917 45DA  
                         u4837 468C                           u4757 44CC                           u3990 1158  
                         u3991 1154                           u4927 4606                           u4847 46B6  
                         u4767 44F8                           u4937 424C                           u4857 3E6C  
                         u4777 47D0                           u4947 3FA8                           u4867 4526  
                         u4787 4634                           u4877 4552                           u4797 465E  
                         u4887 4580                           u4897 45AC                  _LightBlueMove 476A  
                         abs@a 0013                           _dbuf 0192                           _main 1902  
                         _dtoa 3074                           _prec 00F0                           _vals 01C7  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 420E                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 002A         __end_of_color_read_Red 4952  
              __end_of_HighISR 000E         __end_of_color_read_lum 4902                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 4B8A  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 4616                _RunOneBlockTime 01D1                __end_of___aodiv 362E  
              __end_of___fladd 22D6                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 38FE                __end_of___fldiv 2A9A                __end_of___flmul 2700  
              __end_of___flsub 4A86                    colour_rel@B 004A                    colour_rel@G 0046  
                        ?_stop 0014                    colour_rel@L 0036                    colour_rel@R 0042  
              __end_of___lwdiv 437A                          i2l277 000A                   vfpfcnvrt@fmt 0041  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3074  
      __end_of_sendCharSerial4 4D44     __end_of_I2C_2_Master_Start 4D6E     __end_of_I2C_2_Master_Write 4D50  
                 YellowMove@mL 0020                          _flags 00F4                   YellowMove@mR 0022  
                        _fputc 3B52                          _fputs 4A86                 delayed_ms@time 0001  
                        pad@fp 0011                          _power 01D5                          _width 015C  
                        _putch 4D76                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                   main@run_flag 00E8                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 4718        __end_of_color_read_Blue 49F2  
        _I2C_2_Master_RepStart 4D50               __end_of_BlueMove 4450                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 437A                _reverseOneBlock 4508                   __end_of_main 1E16  
                 __end_of_dtoa 32F2                   __end_of_stop 428C                _colour_rel$2836 003A  
              _colour_rel$2837 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 4076               __end_of_PinkMove 48B2                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 480E  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 4718  
             __end_of___xxtofl 34A6                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3A4E                         ___fleq 3CC6                      ??___aodiv 0011  
                main@temp_1191 00E6                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4CA8              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 43B2                         clear_1 43BE  
                       clear_2 43CA                         _motorL 00F5                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4A40  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 3EAC                     ___flge@ff1 0001  
                   _YellowMove 480E                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 43D8        __end_of_reverseOneBlock 4562  
     __end_of_color_read_Green 49A2         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4D78                 __pcstackCOMRAM 0001  
                _fullSpeedBack 3EAC                   __pidataBANK0 4D7A                   __pidataBANK1 4D6E  
                __end_of_fputc 3C1C                  __end_of_fputs 4ACA                  __end_of_putch 4D78  
            __end_of_GreenMove 4BC8            __end_of_Timer0_init 4D0E            __end_of_ReversePink 4104  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14352 0150          __end_of_reverseDetect 45BC                        ??_putch 0001  
                   __pbssBANK0 00F0                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 45BC                     _getTMR0val 4C82              __end_of_RetryMove 420E  
                    ?_PinkMove 0020              _color_writetoaddr 4CCE                     _delayed_ms 4BC8  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 0001  
                      ?___fleq 0019             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                   ?_turnRight45 001A          __end_of_timed_forward 3CC6  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2A9A  
      __end_of_Interrupts_init 4D7A         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 00EA                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4CEE                        _RedMove 4B4C  
           _I2C_2_Master_Start 4D64                     ??_PinkMove 0024                     _initUSART4 4D0E  
           _I2C_2_Master_Write 4D44                        __Hparam 0000                        _WayBack 0160  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4CEE  
                  RetryMove@mL 001A                    RetryMove@mR 001C        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4076  
                      ___aodiv 34A6                        ___fladd 1E16                        ___aomod 379A  
                      ___fldiv 2700                        ___flmul 22D6                        ___flsub 4A40  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 4306            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 437A                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 2DC8                        __ptext0 1902  
                      __ptext1 46C6                        __ptext2 49F2                        __ptext3 38FE  
                      __ptext4 3074                        __ptext5 428C                        __ptext6 4A86  
                      __ptext7 3B52                        __ptext8 4D76                        __ptext9 4B0C  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 46C6           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 43D8                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 00F2                    ?_delayed_ms 0001              __end_of_vfpfcnvrt 3A4E  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 01D3  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 4104  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3E0E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00EC                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 466E                 __end_of___flge 3B52  
               __end_of___fleq 3D70                 _fullSpeedAhead 3F4A                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4CCE  
     __end_of_Forwardhalfblock 4616                      _GreenMove 4B8A            start_initialization 437A  
                  __end_of_abs 4B4C                    __end_of_pad 4306                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 47BC                   ??_OrangeMove 0024            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 418C                    vfprintf@fmt 0053         __end_of_fullSpeedAhead 3FE8  
                     ??___flge 0009                       ??___fleq 0021                      _RetryMove 418C  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                  __pdataBANK0 00FE                    __pdataBANK1 01CF                _ForwardOneBlock 44AE  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 3FE8  
                    ___fldiv@a 001D                      ___fldiv@b 0019                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 476A  
                    ___flmul@a 0036                      ___flmul@b 0032                    __pbssCOMRAM 005B  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2514 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$2838 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 4860           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 44AE              _I2C_2_Master_Idle 4C5A  
            _I2C_2_Master_Init 4C30              _I2C_2_Master_Read 4ACA              _I2C_2_Master_Stop 4D5A  
                _low_threshold 015E                   _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0060               getTMR0val@moving 0001                 colour_rel@vals 0032  
            _sendStringSerial4 4C00            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 4508                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E26            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 38FE      __end_of_I2C_2_Master_Idle 4C82      __end_of_I2C_2_Master_Init 4C5A  
    __end_of_I2C_2_Master_Read 4B0C              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4D64  
                 setMotorPWM@m 000E                       _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 4CA8  
                 _TxBufReadCnt 005B                       _BlueMove 43EA                      _turnRight 3D70  
           __end_of_delayed_ms 4C00                      copy_data0 438E      __end_of_sendStringSerial4 4C30  
                 ??_colour_rel 0036                  _reverseDetect 4562  __end_of_I2C_2_Master_RepStart 4D5A  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 379A                   ??_initUSART4 0001  
                     _PinkMove 4860                       __Hrparam 0000         __end_of_Colour_decider 1902  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
        __end_of_fullSpeedBack 3F4A                   __Lsmallconst 0E00                    ??_RetryMove 001E  
                  _readColours 4450                ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2DC8  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                  _timed_forward 3C1C  
                   sprintf@fmt 0062              ?_Forwardhalfblock 001A                       ___xxtofl 32F2  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                   _Time_forward 0200  
              ___lwdiv@divisor 0009             __end_of_initUSART4 4D2C                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 379A  
                     __ptext11 34A6                       __ptext20 4ACA                       __ptext12 4C00  
                     __ptext21 4D0E                       __ptext13 4D2C                       __ptext30 4718  
                     __ptext22 4104                       __ptext14 4450                       __ptext31 476A  
                     __ptext23 2DC8                       __ptext15 48B2                       __ptext40 4D64  
                     __ptext32 4B8A                       __ptext24 3C1C                       __ptext16 4902  
                     __ptext41 4C5A                       __ptext33 43EA                       __ptext25 4BC8  
                     __ptext17 4952                       __ptext50 3E0E                       __ptext42 4C30  
                     __ptext34 4C82                       __ptext26 3FE8                       __ptext18 49A2  
                     __ptext51 4508                       __ptext43 480E                       __ptext35 2A9A  
                     __ptext27 4076                       __ptext19 4D50                       __ptext60 4306  
                     __ptext52 4562                       __ptext44 4616                       __ptext36 47BC  
                     __ptext28 44AE                       __ptext61 0E26                       __ptext53 3EAC  
                     __ptext45 3D70                       __ptext37 4CCE                       __ptext29 4B4C  
                     __ptext62 32F2                       __ptext54 4D78                       __ptext46 4CEE  
                     __ptext38 4D44                       __ptext63 4A40                       __ptext55 45BC  
                     __ptext47 418C                       __ptext39 4D5A                       __ptext64 1E16  
                     __ptext56 420E                       __ptext48 4860                       __ptext65 22D6  
                     __ptext57 3F4A                       __ptext49 466E                       __ptext66 3A4E  
                     __ptext58 362E                       __ptext67 3CC6                       __ptext59 4CA8  
                     __ptext68 2700                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 49F2                  ??_turnRight45 001E                       main@temp 00E4  
                     _turnLeft 3E0E               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                main@prev_colour 00EE  
                  _setMotorPWM 362E                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 006C                 _high_threshold 01CF  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 47BC                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 466E                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 46C6                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4D2C                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
