

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 14:48:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 06/04/2022 GMT
   102                           ; 
   103                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataBANK0
   137   0060F2                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   0060F2  041A               	dw	1050
   142                           
   143                           ;initializer for _Turn45Delay
   144   0060F4  0050               	dw	80
   145                           
   146                           ;initializer for _power
   147   0060F6  0032               	dw	50
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE0bits	set	3625
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _PIR0bits	set	3635
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  66                 	db	102	;'f'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  66                 	db	102	;'f'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  66                 	db	102	;'f'
   238   000E18  20                 	db	32
   239   000E19  6C                 	db	108	;'l'
   240   000E1A  75                 	db	117	;'u'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  3D                 	db	61	;'='
   243   000E1D  25                 	db	37
   244   000E1E  64                 	db	100	;'d'
   245   000E1F  20                 	db	32
   246   000E20  61                 	db	97	;'a'
   247   000E21  63                 	db	99	;'c'
   248   000E22  74                 	db	116	;'t'
   249   000E23  75                 	db	117	;'u'
   250   000E24  61                 	db	97	;'a'
   251   000E25  6C                 	db	108	;'l'
   252   000E26  5F                 	db	95	;'_'
   253   000E27  63                 	db	99	;'c'
   254   000E28  6F                 	db	111	;'o'
   255   000E29  6C                 	db	108	;'l'
   256   000E2A  6F                 	db	111	;'o'
   257   000E2B  75                 	db	117	;'u'
   258   000E2C  72                 	db	114	;'r'
   259   000E2D  3D                 	db	61	;'='
   260   000E2E  25                 	db	37
   261   000E2F  64                 	db	100	;'d'
   262   000E30  20                 	db	32
   263   000E31  0D                 	db	13
   264   000E32  0A                 	db	10
   265   000E33  00                 	db	0
   266   000E34                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E34  69                 	db	105	;'i'
   270   000E35  6E                 	db	110	;'n'
   271   000E36  66                 	db	102	;'f'
   272   000E37  00                 	db	0
   273   000E38                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E38  6E                 	db	110	;'n'
   277   000E39  61                 	db	97	;'a'
   278   000E3A  6E                 	db	110	;'n'
   279   000E3B  00                 	db	0
   280   000E3C  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   005C42                     __pcinit:
   286                           	callstack 0
   287   005C42                     start_initialization:
   288                           	callstack 0
   289   005C42                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (6 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   005C42  0EF2               	movlw	low __pidataBANK0
   295   005C44  6EF6               	movwf	tblptrl,c
   296   005C46  0E60               	movlw	high __pidataBANK0
   297   005C48  6EF7               	movwf	tblptrh,c
   298   005C4A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   005C4C  6EF8               	movwf	tblptru,c
   300   005C4E  EE00  F0F0         	lfsr	0,__pdataBANK0
   301   005C52  EE10 F006          	lfsr	1,6
   302   005C56                     copy_data0:
   303   005C56  0009               	tblrd		*+
   304   005C58  CFF5 FFEE          	movff	tablat,postinc0
   305   005C5C  50E5               	movf	postdec1,w,c
   306   005C5E  50E1               	movf	fsr1l,w,c
   307   005C60  E1FA               	bnz	copy_data0
   308                           
   309                           ; Clear objects allocated to BANK2 (240 bytes)
   310   005C62  EE02  F000         	lfsr	0,__pbssBANK2
   311   005C66  0EF0               	movlw	240
   312   005C68                     clear_0:
   313   005C68  6AEE               	clrf	postinc0,c
   314   005C6A  06E8               	decf	wreg,f,c
   315   005C6C  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK1 (114 bytes)
   318   005C6E  EE01  F000         	lfsr	0,__pbssBANK1
   319   005C72  0E72               	movlw	114
   320   005C74                     clear_1:
   321   005C74  6AEE               	clrf	postinc0,c
   322   005C76  06E8               	decf	wreg,f,c
   323   005C78  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to BANK0 (29 bytes)
   326   005C7A  EE00  F0D3         	lfsr	0,__pbssBANK0
   327   005C7E  0E1D               	movlw	29
   328   005C80                     clear_2:
   329   005C80  6AEE               	clrf	postinc0,c
   330   005C82  06E8               	decf	wreg,f,c
   331   005C84  E1FD               	bnz	clear_2
   332   005C86                     end_of_initialization:
   333                           	callstack 0
   334   005C86                     __end_of__initialization:
   335                           	callstack 0
   336   005C86  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   005C88  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   005C8A  0100               	movlb	0
   339   005C8C  EF4C  F011         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342   0000D3                     __pbssBANK0:
   343                           	callstack 0
   344   0000D3                     	ds	12
   345   0000DF                     floorf@F526:
   346                           	callstack 0
   347   0000DF                     	ds	4
   348   0000E3                     ___fpclassifyf@F465:
   349                           	callstack 0
   350   0000E3                     	ds	4
   351   0000E7                     _width:
   352                           	callstack 0
   353   0000E7                     	ds	2
   354   0000E9                     _prec:
   355                           	callstack 0
   356   0000E9                     	ds	2
   357   0000EB                     _flags:
   358                           	callstack 0
   359   0000EB                     	ds	1
   360   0000EC                     _TxBufReadCnt:
   361                           	callstack 0
   362   0000EC                     	ds	1
   363   0000ED                     _TxBufWriteCnt:
   364                           	callstack 0
   365   0000ED                     	ds	1
   366   0000EE                     _RxBufReadCnt:
   367                           	callstack 0
   368   0000EE                     	ds	1
   369   0000EF                     _RxBufWriteCnt:
   370                           	callstack 0
   371   0000EF                     	ds	1
   372                           
   373                           	psect	dataBANK0
   374   0000F0                     __pdataBANK0:
   375                           	callstack 0
   376   0000F0                     _RunOneBlockTime:
   377                           	callstack 0
   378   0000F0                     	ds	2
   379   0000F2                     _Turn45Delay:
   380                           	callstack 0
   381   0000F2                     	ds	2
   382   0000F4                     _power:
   383                           	callstack 0
   384   0000F4                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387   000100                     __pbssBANK1:
   388                           	callstack 0
   389   000100                     _EUSART4RXbuf:
   390                           	callstack 0
   391   000100                     	ds	20
   392   000114                     _move_count:
   393                           	callstack 0
   394   000114                     	ds	2
   395   000116                     _run_flag:
   396                           	callstack 0
   397   000116                     	ds	2
   398   000118                     _lost_flag:
   399                           	callstack 0
   400   000118                     	ds	2
   401   00011A                     _WayBack:
   402                           	callstack 0
   403   00011A                     	ds	50
   404   00014C                     _rel:
   405                           	callstack 0
   406   00014C                     	ds	12
   407   000158                     _motorR:
   408                           	callstack 0
   409   000158                     	ds	9
   410   000161                     _motorL:
   411                           	callstack 0
   412   000161                     	ds	9
   413   00016A                     _vals:
   414                           	callstack 0
   415   00016A                     	ds	8
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _EUSART4TXbuf:
   421                           	callstack 0
   422   000200                     	ds	60
   423   00023C                     _Time_forward:
   424                           	callstack 0
   425   00023C                     	ds	100
   426   0002A0                     _dbuf:
   427                           	callstack 0
   428   0002A0                     	ds	80
   429                           
   430                           	psect	cstackBANK1
   431   000172                     __pcstackBANK1:
   432                           	callstack 0
   433   000172                     main@buf:
   434                           	callstack 0
   435                           
   436                           ; 100 bytes @ 0x0
   437   000172                     	ds	100
   438   0001D6                     main@consecuitive:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x64
   442   0001D6                     	ds	2
   443   0001D8                     main@colour:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x66
   447   0001D8                     	ds	2
   448   0001DA                     main@lost_count:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x68
   452   0001DA                     	ds	2
   453   0001DC                     main@prev_colour:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x6A
   457   0001DC                     	ds	2
   458                           
   459                           	psect	cstackBANK0
   460   000060                     __pcstackBANK0:
   461                           	callstack 0
   462   000060                     efgtoa@fp:
   463                           	callstack 0
   464   000060                     colour_rel@L:
   465                           	callstack 0
   466   000060                     _Colour_decider$3205:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x0
   470   000060                     	ds	2
   471   000062                     efgtoa@f:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x2
   475   000062                     	ds	2
   476   000064                     Colour_decider@Cmax_i:
   477                           	callstack 0
   478   000064                     _colour_rel$3203:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x4
   482   000064                     	ds	2
   483   000066                     efgtoa@c:
   484                           	callstack 0
   485   000066                     Colour_decider@RGB_col:
   486                           	callstack 0
   487                           
   488                           ; 12 bytes @ 0x6
   489   000066                     	ds	1
   490   000067                     ??_efgtoa:
   491                           
   492                           ; 1 bytes @ 0x7
   493   000067                     	ds	1
   494   000068                     _colour_rel$3204:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x8
   498   000068                     	ds	1
   499   000069                     efgtoa@ne:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503   000069                     	ds	2
   504   00006B                     efgtoa@p:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508   00006B                     	ds	1
   509   00006C                     colour_rel@R:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0xC
   513   00006C                     	ds	1
   514   00006D                     efgtoa@t:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518   00006D                     	ds	2
   519   00006F                     _efgtoa$2852:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xF
   523   00006F                     	ds	1
   524   000070                     colour_rel@G:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x10
   528   000070                     	ds	1
   529   000071                     efgtoa@pp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x11
   533   000071                     	ds	1
   534   000072                     efgtoa@mode:
   535                           	callstack 0
   536   000072                     Colour_decider@Cmax:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x12
   540   000072                     	ds	1
   541   000073                     efgtoa@nmode:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x13
   545   000073                     	ds	1
   546   000074                     efgtoa@d:
   547                           	callstack 0
   548   000074                     colour_rel@B:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x14
   552   000074                     	ds	2
   553   000076                     efgtoa@m:
   554                           	callstack 0
   555   000076                     Colour_decider@Cmin:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x16
   559   000076                     	ds	2
   560   000078                     efgtoa@e:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564   000078                     	ds	2
   565   00007A                     Colour_decider@i:
   566                           	callstack 0
   567   00007A                     efgtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571   00007A                     	ds	2
   572   00007C                     Colour_decider@Hue:
   573                           	callstack 0
   574   00007C                     efgtoa@ou:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x1C
   578   00007C                     	ds	4
   579   000080                     efgtoa@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x20
   583   000080                     	ds	2
   584   000082                     efgtoa@h:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x22
   588   000082                     	ds	4
   589   000086                     efgtoa@l:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x26
   593   000086                     	ds	4
   594   00008A                     efgtoa@sign:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x2A
   598   00008A                     	ds	1
   599   00008B                     efgtoa@n:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x2B
   603   00008B                     	ds	2
   604   00008D                     efgtoa@g:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x2D
   608   00008D                     	ds	4
   609   000091                     efgtoa@u:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x31
   613   000091                     	ds	4
   614   000095                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x35
   618   000095                     	ds	2
   619   000097                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x37
   623   000097                     	ds	2
   624   000099                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x39
   628   000099                     	ds	2
   629   00009B                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x3B
   632   00009B                     	ds	2
   633   00009D                     vfpfcnvrt@convarg:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x3D
   637   00009D                     	ds	8
   638   0000A5                     vfpfcnvrt@c:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x45
   642   0000A5                     	ds	1
   643   0000A6                     vfpfcnvrt@cp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x46
   647   0000A6                     	ds	2
   648   0000A8                     ?_vfprintf:
   649                           	callstack 0
   650   0000A8                     vfprintf@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x48
   654   0000A8                     	ds	2
   655   0000AA                     vfprintf@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4A
   659   0000AA                     	ds	2
   660   0000AC                     vfprintf@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x4C
   664   0000AC                     	ds	2
   665   0000AE                     vfprintf@cfmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x4E
   669   0000AE                     	ds	2
   670   0000B0                     ?_sprintf:
   671                           	callstack 0
   672   0000B0                     sprintf@s:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x50
   676   0000B0                     	ds	2
   677   0000B2                     sprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x52
   681   0000B2                     	ds	18
   682   0000C4                     sprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x64
   686   0000C4                     	ds	2
   687   0000C6                     sprintf@f:
   688                           	callstack 0
   689                           
   690                           ; 11 bytes @ 0x66
   691   0000C6                     	ds	11
   692   0000D1                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x71
   695   0000D1                     	ds	2
   696                           
   697                           	psect	cstackCOMRAM
   698   000001                     __pcstackCOMRAM:
   699                           	callstack 0
   700   000001                     ??_getTMR0val:
   701   000001                     ??_I2C_2_Master_Idle:
   702   000001                     ?___fpclassifyf:
   703                           	callstack 0
   704   000001                     ?___wmul:
   705                           	callstack 0
   706   000001                     ?___fladd:
   707                           	callstack 0
   708   000001                     ?_labs:
   709                           	callstack 0
   710   000001                     ?___flneg:
   711                           	callstack 0
   712   000001                     ?___fltol:
   713                           	callstack 0
   714   000001                     ?___xxtofl:
   715                           	callstack 0
   716   000001                     ?___aodiv:
   717                           	callstack 0
   718   000001                     ?___aomod:
   719                           	callstack 0
   720   000001                     sendCharSerial4@charToSend:
   721                           	callstack 0
   722   000001                     initDCmotorsPWM@PWMperiod:
   723                           	callstack 0
   724   000001                     TurnDelay@Turn45Delay:
   725                           	callstack 0
   726   000001                     delayed_ms@time:
   727                           	callstack 0
   728   000001                     ___wmul@multiplier:
   729                           	callstack 0
   730   000001                     memcpy@d1:
   731                           	callstack 0
   732   000001                     fputc@c:
   733                           	callstack 0
   734   000001                     strcpy@dest:
   735                           	callstack 0
   736   000001                     ___flneg@f1:
   737                           	callstack 0
   738   000001                     ___fltol@f1:
   739                           	callstack 0
   740   000001                     ___fladd@b:
   741                           	callstack 0
   742   000001                     ___xxtofl@val:
   743                           	callstack 0
   744   000001                     ___fpclassifyf@x:
   745                           	callstack 0
   746   000001                     labs@a:
   747                           	callstack 0
   748   000001                     ___aodiv@dividend:
   749                           	callstack 0
   750   000001                     ___aomod@dividend:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x0
   754   000001                     	ds	1
   755   000002                     ??_I2C_2_Master_Read:
   756   000002                     I2C_2_Master_Write@data_byte:
   757                           	callstack 0
   758   000002                     sendStringSerial4@string:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x1
   762   000002                     	ds	1
   763   000003                     ??_delayed_ms:
   764   000003                     ??_TurnDelay:
   765   000003                     color_writetoaddr@value:
   766                           	callstack 0
   767   000003                     I2C_2_Master_Read@ack:
   768                           	callstack 0
   769   000003                     getTMR0val@temp:
   770                           	callstack 0
   771   000003                     ___wmul@multiplicand:
   772                           	callstack 0
   773   000003                     memcpy@s1:
   774                           	callstack 0
   775   000003                     fputc@fp:
   776                           	callstack 0
   777   000003                     strcpy@src:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x2
   781   000003                     	ds	1
   782   000004                     color_writetoaddr@address:
   783                           	callstack 0
   784   000004                     I2C_2_Master_Read@tmp:
   785                           	callstack 0
   786   000004                     delayed_ms@i:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x3
   790   000004                     	ds	1
   791   000005                     ??_fputc:
   792   000005                     ??___fpclassifyf:
   793   000005                     ??_labs:
   794   000005                     ??_color_click_init:
   795   000005                     ??___fltol:
   796   000005                     ??___xxtofl:
   797   000005                     ?_color_read_lum:
   798                           	callstack 0
   799   000005                     ?_color_read_Red:
   800                           	callstack 0
   801   000005                     ?_color_read_Green:
   802                           	callstack 0
   803   000005                     ?_color_read_Blue:
   804                           	callstack 0
   805   000005                     getTMR0val@moving:
   806                           	callstack 0
   807   000005                     ___wmul@product:
   808                           	callstack 0
   809   000005                     memcpy@n:
   810                           	callstack 0
   811   000005                     strcpy@s:
   812                           	callstack 0
   813   000005                     ___fladd@a:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x4
   817   000005                     	ds	2
   818   000007                     ??_color_read_lum:
   819   000007                     ??_color_read_Red:
   820   000007                     ??_color_read_Green:
   821   000007                     ??_color_read_Blue:
   822   000007                     ?___lwdiv:
   823                           	callstack 0
   824   000007                     ___lwdiv@dividend:
   825                           	callstack 0
   826   000007                     memcpy@d:
   827                           	callstack 0
   828   000007                     strcpy@d:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x6
   832   000007                     	ds	2
   833   000009                     ??___fladd:
   834   000009                     ___fltol@sign1:
   835                           	callstack 0
   836   000009                     ___xxtofl@sign:
   837                           	callstack 0
   838   000009                     ___lwdiv@divisor:
   839                           	callstack 0
   840   000009                     ___fpclassifyf@e:
   841                           	callstack 0
   842   000009                     memcpy@s:
   843                           	callstack 0
   844   000009                     ___aodiv@divisor:
   845                           	callstack 0
   846   000009                     ___aomod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x8
   850   000009                     	ds	1
   851   00000A                     ___fltol@exp1:
   852                           	callstack 0
   853   00000A                     ___xxtofl@exp:
   854                           	callstack 0
   855   00000A                     color_read_lum@tmp:
   856                           	callstack 0
   857   00000A                     color_read_Red@tmp:
   858                           	callstack 0
   859   00000A                     color_read_Green@tmp:
   860                           	callstack 0
   861   00000A                     color_read_Blue@tmp:
   862                           	callstack 0
   863   00000A                     fputs@s:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x9
   867   00000A                     	ds	1
   868   00000B                     memcpy@tmp:
   869                           	callstack 0
   870   00000B                     ___lwdiv@quotient:
   871                           	callstack 0
   872   00000B                     ___xxtofl@arg:
   873                           	callstack 0
   874   00000B                     ___fpclassifyf@u:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     readColours@vals:
   880                           	callstack 0
   881   00000C                     fputs@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0xB
   885   00000C                     	ds	1
   886   00000D                     ___lwdiv@counter:
   887                           	callstack 0
   888   00000D                     ___fladd@signs:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0xC
   892   00000D                     	ds	1
   893   00000E                     ___fladd@aexp:
   894                           	callstack 0
   895   00000E                     fputs@c:
   896                           	callstack 0
   897   00000E                     setMotorPWM@m:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xD
   901   00000E                     	ds	1
   902   00000F                     ___fladd@bexp:
   903                           	callstack 0
   904   00000F                     fputs@i:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0xE
   908   00000F                     	ds	1
   909   000010                     ??_setMotorPWM:
   910   000010                     ___fladd@grs:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0xF
   914   000010                     	ds	1
   915   000011                     ?___flmul:
   916                           	callstack 0
   917   000011                     ___aodiv@counter:
   918                           	callstack 0
   919   000011                     ___aomod@counter:
   920                           	callstack 0
   921   000011                     pad@fp:
   922                           	callstack 0
   923   000011                     ___flmul@b:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x10
   927   000011                     	ds	1
   928   000012                     setMotorPWM@posDuty:
   929                           	callstack 0
   930   000012                     ___aodiv@sign:
   931                           	callstack 0
   932   000012                     ___aomod@sign:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x11
   936   000012                     	ds	1
   937   000013                     ?_abs:
   938                           	callstack 0
   939   000013                     setMotorPWM@negDuty:
   940                           	callstack 0
   941   000013                     pad@buf:
   942                           	callstack 0
   943   000013                     abs@a:
   944                           	callstack 0
   945   000013                     ___aodiv@quotient:
   946                           	callstack 0
   947                           
   948                           ; 8 bytes @ 0x12
   949   000013                     	ds	1
   950   000014                     stop@mL:
   951                           	callstack 0
   952   000014                     turnLeft@mL:
   953                           	callstack 0
   954   000014                     turnRight@mL:
   955                           	callstack 0
   956   000014                     fullSpeedAhead@mL:
   957                           	callstack 0
   958   000014                     timed_forward@mL:
   959                           	callstack 0
   960   000014                     fullSpeedBack@mL:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x13
   964   000014                     	ds	1
   965   000015                     ??_abs:
   966   000015                     pad@p:
   967                           	callstack 0
   968   000015                     ___flmul@a:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x14
   972   000015                     	ds	1
   973   000016                     stop@mR:
   974                           	callstack 0
   975   000016                     turnLeft@mR:
   976                           	callstack 0
   977   000016                     turnRight@mR:
   978                           	callstack 0
   979   000016                     fullSpeedAhead@mR:
   980                           	callstack 0
   981   000016                     timed_forward@mR:
   982                           	callstack 0
   983   000016                     fullSpeedBack@mR:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x15
   987   000016                     	ds	1
   988   000017                     ??_pad:
   989                           
   990                           ; 1 bytes @ 0x16
   991   000017                     	ds	1
   992   000018                     ??_fullSpeedAhead:
   993   000018                     ??_stop:
   994   000018                     ??_turnLeft:
   995   000018                     ??_turnRight:
   996   000018                     ??_fullSpeedBack:
   997   000018                     timed_forward@time:
   998                           	callstack 0
   999   000018                     pad@i:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x17
  1003   000018                     	ds	1
  1004   000019                     ??___flmul:
  1005                           
  1006                           ; 1 bytes @ 0x18
  1007   000019                     	ds	1
  1008   00001A                     ??_timed_forward:
  1009   00001A                     turnRight45@mL:
  1010                           	callstack 0
  1011   00001A                     turnLeft45@mL:
  1012                           	callstack 0
  1013   00001A                     reverseDetect@mL:
  1014                           	callstack 0
  1015   00001A                     reverseOneBlock@mL:
  1016                           	callstack 0
  1017   00001A                     ForwardOneBlock@mL:
  1018                           	callstack 0
  1019   00001A                     Forwardhalfblock@mL:
  1020                           	callstack 0
  1021   00001A                     pad@w:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x19
  1025   00001A                     	ds	2
  1026   00001C                     turnRight45@mR:
  1027                           	callstack 0
  1028   00001C                     turnLeft45@mR:
  1029                           	callstack 0
  1030   00001C                     reverseDetect@mR:
  1031                           	callstack 0
  1032   00001C                     reverseOneBlock@mR:
  1033                           	callstack 0
  1034   00001C                     ForwardOneBlock@mR:
  1035                           	callstack 0
  1036   00001C                     Forwardhalfblock@mR:
  1037                           	callstack 0
  1038   00001C                     dtoa@fp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x1B
  1042   00001C                     	ds	1
  1043   00001D                     ___flmul@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x1C
  1047   00001D                     	ds	1
  1048   00001E                     ??_Forwardhalfblock:
  1049   00001E                     ??_turnRight45:
  1050   00001E                     ??_turnLeft45:
  1051   00001E                     ??_reverseDetect:
  1052   00001E                     ??_reverseOneBlock:
  1053   00001E                     ??_ForwardOneBlock:
  1054   00001E                     ___flmul@grs:
  1055                           	callstack 0
  1056   00001E                     dtoa@d:
  1057                           	callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x1D
  1060   00001E                     	ds	2
  1061   000020                     RedMove@mL:
  1062                           	callstack 0
  1063   000020                     GreenMove@mL:
  1064                           	callstack 0
  1065   000020                     BlueMove@mL:
  1066                           	callstack 0
  1067   000020                     YellowMove@mL:
  1068                           	callstack 0
  1069   000020                     PinkMove@mL:
  1070                           	callstack 0
  1071   000020                     OrangeMove@mL:
  1072                           	callstack 0
  1073   000020                     LightBlueMove@mL:
  1074                           	callstack 0
  1075   000020                     RetryMove@mL:
  1076                           	callstack 0
  1077   000020                     ReverseYellow@mL:
  1078                           	callstack 0
  1079   000020                     ReversePink@mL:
  1080                           	callstack 0
  1081   000020                     turnCalibration@mL:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x1F
  1085   000020                     	ds	2
  1086   000022                     ___flmul@aexp:
  1087                           	callstack 0
  1088   000022                     RedMove@mR:
  1089                           	callstack 0
  1090   000022                     GreenMove@mR:
  1091                           	callstack 0
  1092   000022                     BlueMove@mR:
  1093                           	callstack 0
  1094   000022                     YellowMove@mR:
  1095                           	callstack 0
  1096   000022                     PinkMove@mR:
  1097                           	callstack 0
  1098   000022                     OrangeMove@mR:
  1099                           	callstack 0
  1100   000022                     LightBlueMove@mR:
  1101                           	callstack 0
  1102   000022                     RetryMove@mR:
  1103                           	callstack 0
  1104   000022                     ReverseYellow@mR:
  1105                           	callstack 0
  1106   000022                     ReversePink@mR:
  1107                           	callstack 0
  1108   000022                     turnCalibration@mR:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x21
  1112   000022                     	ds	1
  1113   000023                     ___flmul@bexp:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x22
  1117   000023                     	ds	1
  1118   000024                     ??_turnCalibration:
  1119   000024                     ??_RetryMove:
  1120   000024                     go_Home@WayBack:
  1121                           	callstack 0
  1122   000024                     ___flmul@prod:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x23
  1126   000024                     	ds	2
  1127   000026                     ??_dtoa:
  1128   000026                     go_Home@Time_forward:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x25
  1132   000026                     	ds	2
  1133   000028                     ??_go_Home:
  1134   000028                     ___flmul@temp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x27
  1138   000028                     	ds	2
  1139   00002A                     ?___flsub:
  1140                           	callstack 0
  1141   00002A                     ___flge@ff1:
  1142                           	callstack 0
  1143   00002A                     ___flsub@b:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x29
  1147   00002A                     	ds	1
  1148   00002B                     go_Home@i:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x2A
  1152   00002B                     	ds	3
  1153   00002E                     _dtoa$2821:
  1154                           	callstack 0
  1155   00002E                     ___flge@ff2:
  1156                           	callstack 0
  1157   00002E                     ___flsub@a:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x2D
  1161   00002E                     	ds	2
  1162   000030                     dtoa@p:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x2F
  1166   000030                     	ds	2
  1167   000032                     ??___flge:
  1168   000032                     ?___fldiv:
  1169                           	callstack 0
  1170   000032                     dtoa@w:
  1171                           	callstack 0
  1172   000032                     ___fleq@ff1:
  1173                           	callstack 0
  1174   000032                     ___fldiv@b:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x31
  1178   000032                     	ds	2
  1179   000034                     dtoa@n:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x33
  1183   000034                     	ds	2
  1184   000036                     ___fleq@ff2:
  1185                           	callstack 0
  1186   000036                     ___fldiv@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x35
  1190   000036                     	ds	4
  1191   00003A                     ??___fldiv:
  1192   00003A                     ??___fleq:
  1193                           
  1194                           ; 1 bytes @ 0x39
  1195   00003A                     	ds	2
  1196   00003C                     dtoa@i:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3B
  1200   00003C                     	ds	2
  1201   00003E                     dtoa@s:
  1202                           	callstack 0
  1203   00003E                     ___fldiv@rem:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x3D
  1207   00003E                     	ds	4
  1208   000042                     ___fldiv@sign:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x41
  1212   000042                     	ds	1
  1213   000043                     ___fldiv@new_exp:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x42
  1217   000043                     	ds	2
  1218   000045                     ___fldiv@grs:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x44
  1222   000045                     	ds	4
  1223   000049                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x48
  1227   000049                     	ds	1
  1228   00004A                     ___fldiv@aexp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x49
  1232   00004A                     	ds	1
  1233   00004B                     ?_Colour_decider:
  1234                           	callstack 0
  1235   00004B                     ?_floorf:
  1236                           	callstack 0
  1237   00004B                     colour_rel@vals:
  1238                           	callstack 0
  1239   00004B                     Colour_decider@vals:
  1240                           	callstack 0
  1241   00004B                     floorf@x:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x4A
  1245   00004B                     	ds	2
  1246   00004D                     colour_rel@rel:
  1247                           	callstack 0
  1248   00004D                     Colour_decider@rel:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x4C
  1252   00004D                     	ds	2
  1253   00004F                     ??_floorf:
  1254   00004F                     ??_Colour_decider:
  1255                           
  1256                           ; 1 bytes @ 0x4E
  1257   00004F                     	ds	6
  1258   000055                     floorf@m:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x54
  1262   000055                     	ds	4
  1263   000059                     floorf@e:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x58
  1267   000059                     	ds	2
  1268   00005B                     floorf@u:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x5A
  1272   00005B                     	ds	4
  1273   00005F                     
  1274                           ; 1 bytes @ 0x5E
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 30 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  colour          2  102[BANK1 ] int 
  1285 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1286 ;;  prev_colour     2  106[BANK1 ] int 
  1287 ;;  lost_count      2  104[BANK1 ] int 
  1288 ;;  consecuitive    2  100[BANK1 ] int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;Total ram usage:      110 bytes
  1303 ;; Hardware stack levels required when called: 9
  1304 ;; This function calls:
  1305 ;;		_BlueMove
  1306 ;;		_Colour_decider
  1307 ;;		_Forwardhalfblock
  1308 ;;		_GreenMove
  1309 ;;		_I2C_2_Master_Init
  1310 ;;		_Interrupts_init
  1311 ;;		_LightBlueMove
  1312 ;;		_OrangeMove
  1313 ;;		_PinkMove
  1314 ;;		_RedMove
  1315 ;;		_RetryMove
  1316 ;;		_Timer0_init
  1317 ;;		_YellowMove
  1318 ;;		_color_click_init
  1319 ;;		_colour_rel
  1320 ;;		_fullSpeedAhead
  1321 ;;		_getTMR0val
  1322 ;;		_go_Home
  1323 ;;		_initDCmotorsPWM
  1324 ;;		_initUSART4
  1325 ;;		_readColours
  1326 ;;		_sendStringSerial4
  1327 ;;		_sprintf
  1328 ;;		_stop
  1329 ;;		_turnCalibration
  1330 ;; This function is called by:
  1331 ;;		Startup code after reset
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text0
  1336   002298                     __ptext0:
  1337                           	callstack 0
  1338   002298                     _main:
  1339                           	callstack 22
  1340   002298                     
  1341                           ;main.c: 31:     initUSART4();
  1342   002298  EC43  F030         	call	_initUSART4	;wreg free
  1343   00229C                     
  1344                           ;main.c: 32:     Interrupts_init();
  1345   00229C  EC64  F030         	call	_Interrupts_init	;wreg free
  1346   0022A0                     
  1347                           ;main.c: 33:     color_click_init();
  1348   0022A0  ECDE  F02C         	call	_color_click_init	;wreg free
  1349   0022A4                     
  1350                           ;main.c: 34:     I2C_2_Master_Init();
  1351   0022A4  ECE7  F02F         	call	_I2C_2_Master_Init	;wreg free
  1352   0022A8                     
  1353                           ;main.c: 35:     initDCmotorsPWM(200);
  1354   0022A8  0E00               	movlw	0
  1355   0022AA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1356   0022AC  0EC8               	movlw	200
  1357   0022AE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1358   0022B0  EC91  F029         	call	_initDCmotorsPWM	;wreg free
  1359   0022B4                     
  1360                           ;main.c: 36:     Timer0_init();
  1361   0022B4  EC33  F030         	call	_Timer0_init	;wreg free
  1362   0022B8                     
  1363                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1364   0022B8  9287               	bcf	135,1,c	;volatile
  1365   0022BA                     
  1366                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1367   0022BA  9881               	bcf	129,4,c	;volatile
  1368   0022BC                     
  1369                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1370   0022BC  9E86               	bcf	134,7,c	;volatile
  1371   0022BE                     
  1372                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1373   0022BE  8486               	bsf	134,2,c	;volatile
  1374   0022C0                     
  1375                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1376   0022C0  010E               	movlb	14	; () banked
  1377   0022C2  95B4               	bcf	180,2,b	;volatile
  1378   0022C4                     
  1379                           ; BSR set to: 14
  1380                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1381   0022C4  8686               	bsf	134,3,c	;volatile
  1382   0022C6                     
  1383                           ; BSR set to: 14
  1384                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1385   0022C6  97B4               	bcf	180,3,b	;volatile
  1386   0022C8                     
  1387                           ; BSR set to: 14
  1388                           ;main.c: 46:     LATGbits.LATG1=1;
  1389   0022C8  827F               	bsf	127,1,c	;volatile
  1390   0022CA                     
  1391                           ; BSR set to: 14
  1392                           ;main.c: 47:     LATAbits.LATA4=1;
  1393   0022CA  8879               	bsf	121,4,c	;volatile
  1394   0022CC                     
  1395                           ; BSR set to: 14
  1396                           ;main.c: 48:     LATFbits.LATF7=1;
  1397   0022CC  8E7E               	bsf	126,7,c	;volatile
  1398   0022CE                     
  1399                           ; BSR set to: 14
  1400                           ;main.c: 51:     LATDbits.LATD7=0;
  1401   0022CE  9E7C               	bcf	124,7,c	;volatile
  1402   0022D0                     
  1403                           ; BSR set to: 14
  1404                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1405   0022D0  9E84               	bcf	132,7,c	;volatile
  1406   0022D2                     
  1407                           ; BSR set to: 14
  1408                           ;main.c: 53:     LATHbits.LATH3=0;
  1409   0022D2  9680               	bcf	128,3,c	;volatile
  1410   0022D4                     
  1411                           ; BSR set to: 14
  1412                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1413   0022D4  9688               	bcf	136,3,c	;volatile
  1414   0022D6                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 57:     LATHbits.LATH0=0;
  1417   0022D6  9080               	bcf	128,0,c	;volatile
  1418   0022D8                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1421   0022D8  9088               	bcf	136,0,c	;volatile
  1422   0022DA                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 61:     LATFbits.LATF0=0;
  1425   0022DA  907E               	bcf	126,0,c	;volatile
  1426   0022DC                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1429   0022DC  9086               	bcf	134,0,c	;volatile
  1430   0022DE                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 65:     LATDbits.LATD4=0;
  1433   0022DE  987C               	bcf	124,4,c	;volatile
  1434   0022E0                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1437   0022E0  9884               	bcf	132,4,c	;volatile
  1438   0022E2                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 69:     LATDbits.LATD3=0;
  1441   0022E2  967C               	bcf	124,3,c	;volatile
  1442   0022E4                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1445   0022E4  9684               	bcf	132,3,c	;volatile
  1446   0022E6                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 74:     motorL.power=0;
  1449   0022E6  0E00               	movlw	0
  1450   0022E8  0101               	movlb	1	; () banked
  1451   0022EA  6F61               	movwf	_motorL& (0+255),b
  1452   0022EC                     
  1453                           ; BSR set to: 1
  1454                           ;main.c: 75:     motorL.direction=1;
  1455   0022EC  0E01               	movlw	1
  1456   0022EE  6F62               	movwf	(_motorL+1)& (0+255),b
  1457   0022F0                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 76:     motorL.brakemode=1;
  1460   0022F0  0E01               	movlw	1
  1461   0022F2  6F63               	movwf	(_motorL+2)& (0+255),b
  1462   0022F4                     
  1463                           ; BSR set to: 1
  1464                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1465   0022F4  0EAA               	movlw	170
  1466   0022F6  6F66               	movwf	(_motorL+5)& (0+255),b
  1467   0022F8  0E0F               	movlw	15
  1468   0022FA  6F67               	movwf	(_motorL+6)& (0+255),b
  1469   0022FC                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1472   0022FC  0EA6               	movlw	166
  1473   0022FE  6F68               	movwf	(_motorL+7)& (0+255),b
  1474   002300  0E0F               	movlw	15
  1475   002302  6F69               	movwf	(_motorL+8)& (0+255),b
  1476   002304                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 79:     motorL.PWMperiod=200;
  1479   002304  0E00               	movlw	0
  1480   002306  6F65               	movwf	(_motorL+4)& (0+255),b
  1481   002308  0EC8               	movlw	200
  1482   00230A  6F64               	movwf	(_motorL+3)& (0+255),b
  1483   00230C                     
  1484                           ; BSR set to: 1
  1485                           ;main.c: 80:     motorR.power=0;
  1486   00230C  0E00               	movlw	0
  1487   00230E  6F58               	movwf	_motorR& (0+255),b
  1488   002310                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 81:     motorR.direction=1;
  1491   002310  0E01               	movlw	1
  1492   002312  6F59               	movwf	(_motorR+1)& (0+255),b
  1493   002314                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 82:     motorR.brakemode=1;
  1496   002314  0E01               	movlw	1
  1497   002316  6F5A               	movwf	(_motorR+2)& (0+255),b
  1498   002318                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1501   002318  0E25               	movlw	37
  1502   00231A  6F5D               	movwf	(_motorR+5)& (0+255),b
  1503   00231C  0E0F               	movlw	15
  1504   00231E  6F5E               	movwf	(_motorR+6)& (0+255),b
  1505   002320                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1508   002320  0E21               	movlw	33
  1509   002322  6F5F               	movwf	(_motorR+7)& (0+255),b
  1510   002324  0E0F               	movlw	15
  1511   002326  6F60               	movwf	(_motorR+8)& (0+255),b
  1512   002328                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 85:     motorR.PWMperiod=200;
  1515   002328  0E00               	movlw	0
  1516   00232A  6F5C               	movwf	(_motorR+4)& (0+255),b
  1517   00232C  0EC8               	movlw	200
  1518   00232E  6F5B               	movwf	(_motorR+3)& (0+255),b
  1519   002330                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 88:     int prev_colour =0;
  1522   002330  0E00               	movlw	0
  1523   002332  6FDD               	movwf	(main@prev_colour+1)& (0+255),b
  1524   002334  0E00               	movlw	0
  1525   002336  6FDC               	movwf	main@prev_colour& (0+255),b
  1526   002338                     
  1527                           ; BSR set to: 1
  1528                           ;main.c: 89:     run_flag=1;
  1529   002338  0E00               	movlw	0
  1530   00233A  6F17               	movwf	(_run_flag+1)& (0+255),b
  1531   00233C  0E01               	movlw	1
  1532   00233E  6F16               	movwf	_run_flag& (0+255),b
  1533   002340                     
  1534                           ; BSR set to: 1
  1535                           ;main.c: 90:     move_count=-1;
  1536   002340  6914               	setf	_move_count& (0+255),b	;volatile
  1537   002342  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1538   002344                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 91:     int lost_count=0;
  1541   002344  0E00               	movlw	0
  1542   002346  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1543   002348  0E00               	movlw	0
  1544   00234A  6FDA               	movwf	main@lost_count& (0+255),b
  1545   00234C                     
  1546                           ; BSR set to: 1
  1547                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1548   00234C  0E61               	movlw	low _motorL
  1549   00234E  6E20               	movwf	turnCalibration@mL^0,c
  1550   002350  0E01               	movlw	high _motorL
  1551   002352  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1552   002354  0E58               	movlw	low _motorR
  1553   002356  6E22               	movwf	turnCalibration@mR^0,c
  1554   002358  0E01               	movlw	high _motorR
  1555   00235A  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1556   00235C  EC16  F021         	call	_turnCalibration	;wreg free
  1557   002360                     
  1558                           ;main.c: 94:     LATFbits.LATF0=0;
  1559   002360  907E               	bcf	126,0,c	;volatile
  1560   002362                     
  1561                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1562   002362  0E52               	movlw	82
  1563   002364  0100               	movlb	0	; () banked
  1564   002366  6FD2               	movwf	(??_main+1)& (0+255),b
  1565   002368  0E2B               	movlw	43
  1566   00236A  6FD1               	movwf	??_main& (0+255),b
  1567   00236C  0E00               	movlw	0
  1568   00236E                     u5887:
  1569   00236E  2EE8               	decfsz	wreg,f,c
  1570   002370  D7FE               	bra	u5887
  1571   002372  2FD1               	decfsz	??_main& (0+255),f,b
  1572   002374  D7FC               	bra	u5887
  1573   002376  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1574   002378  D7FA               	bra	u5887
  1575   00237A  F000               	nop	
  1576   00237C                     l356:
  1577   00237C  B48E               	btfsc	142,2,c	;volatile
  1578   00237E  EFC3  F011         	goto	u5661
  1579   002382  EFC5  F011         	goto	u5660
  1580   002386                     u5661:
  1581   002386  EFBE  F011         	goto	l356
  1582   00238A                     u5660:
  1583   00238A                     
  1584                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1585   00238A  0E52               	movlw	82
  1586   00238C  0100               	movlb	0	; () banked
  1587   00238E  6FD2               	movwf	(??_main+1)& (0+255),b
  1588   002390  0E2B               	movlw	43
  1589   002392  6FD1               	movwf	??_main& (0+255),b
  1590   002394  0E00               	movlw	0
  1591   002396                     u5897:
  1592   002396  2EE8               	decfsz	wreg,f,c
  1593   002398  D7FE               	bra	u5897
  1594   00239A  2FD1               	decfsz	??_main& (0+255),f,b
  1595   00239C  D7FC               	bra	u5897
  1596   00239E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1597   0023A0  D7FA               	bra	u5897
  1598   0023A2  F000               	nop	
  1599   0023A4                     
  1600                           ;main.c: 99:     T0CON0bits.T0EN=1;
  1601   0023A4  8ED5               	bsf	213,7,c	;volatile
  1602                           
  1603                           ;main.c: 100:     while (run_flag)
  1604   0023A6  EFF6  F013         	goto	l5883
  1605   0023AA                     l5733:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;main.c: 101:     {;main.c: 102:         consecuitive=0;
  1609   0023AA  0E00               	movlw	0
  1610   0023AC  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1611   0023AE  0E00               	movlw	0
  1612   0023B0  6FD6               	movwf	main@consecuitive& (0+255),b
  1613   0023B2                     
  1614                           ; BSR set to: 1
  1615                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1616   0023B2  0E61               	movlw	low _motorL
  1617   0023B4  6E14               	movwf	fullSpeedAhead@mL^0,c
  1618   0023B6  0E01               	movlw	high _motorL
  1619   0023B8  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1620   0023BA  0E58               	movlw	low _motorR
  1621   0023BC  6E16               	movwf	fullSpeedAhead@mR^0,c
  1622   0023BE  0E01               	movlw	high _motorR
  1623   0023C0  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1624   0023C2  EC42  F029         	call	_fullSpeedAhead	;wreg free
  1625   0023C6                     
  1626                           ;main.c: 106:         readColours(&vals);
  1627   0023C6  0E6A               	movlw	low _vals
  1628   0023C8  6E0C               	movwf	readColours@vals^0,c
  1629   0023CA  0E01               	movlw	high _vals
  1630   0023CC  6E0D               	movwf	(readColours@vals+1)^0,c
  1631   0023CE  EC57  F02B         	call	_readColours	;wreg free
  1632   0023D2                     
  1633                           ;main.c: 109:         colour_rel(&vals, &rel);
  1634   0023D2  0E6A               	movlw	low _vals
  1635   0023D4  6E4B               	movwf	colour_rel@vals^0,c
  1636   0023D6  0E01               	movlw	high _vals
  1637   0023D8  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1638   0023DA  0E4C               	movlw	low _rel
  1639   0023DC  6E4D               	movwf	colour_rel@rel^0,c
  1640   0023DE  0E01               	movlw	high _rel
  1641   0023E0  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1642   0023E2  EC44  F01A         	call	_colour_rel	;wreg free
  1643   0023E6                     
  1644                           ;main.c: 112:         if (vals.L>=350){
  1645   0023E6  0101               	movlb	1	; () banked
  1646   0023E8  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1647   0023EA  EF00  F012         	goto	u5671
  1648   0023EE  0E5E               	movlw	94
  1649   0023F0  5D70               	subwf	(_vals+6)& (0+255),w,b
  1650   0023F2  0E01               	movlw	1
  1651   0023F4  5971               	subwfb	(_vals+7)& (0+255),w,b
  1652   0023F6  A0D8               	btfss	status,0,c
  1653   0023F8  EF00  F012         	goto	u5671
  1654   0023FC  EF02  F012         	goto	u5670
  1655   002400                     u5671:
  1656   002400  EFDC  F013         	goto	l5875
  1657   002404                     u5670:
  1658   002404                     
  1659                           ; BSR set to: 1
  1660                           ;main.c: 113:             move_count++;
  1661   002404  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1662   002406  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1663   002408                     
  1664                           ; BSR set to: 1
  1665                           ;main.c: 114:             getTMR0val();
  1666   002408  EC26  F02B         	call	_getTMR0val	;wreg free
  1667   00240C                     
  1668                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1669   00240C  0E61               	movlw	low _motorL
  1670   00240E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1671   002410  0E01               	movlw	high _motorL
  1672   002412  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1673   002414  0E58               	movlw	low _motorR
  1674   002416  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1675   002418  0E01               	movlw	high _motorR
  1676   00241A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1677   00241C  ECB3  F02B         	call	_Forwardhalfblock	;wreg free
  1678   002420                     
  1679                           ;main.c: 118:             stop(&motorL, &motorR);
  1680   002420  0E61               	movlw	low _motorL
  1681   002422  6E14               	movwf	stop@mL^0,c
  1682   002424  0E01               	movlw	high _motorL
  1683   002426  6E15               	movwf	(stop@mL+1)^0,c
  1684   002428  0E58               	movlw	low _motorR
  1685   00242A  6E16               	movwf	stop@mR^0,c
  1686   00242C  0E01               	movlw	high _motorR
  1687   00242E  6E17               	movwf	(stop@mR+1)^0,c
  1688   002430  ECD5  F029         	call	_stop	;wreg free
  1689                           
  1690                           ;main.c: 123:             while (consecuitive<20){
  1691   002434  EF60  F012         	goto	l5767
  1692   002438                     l5751:
  1693                           
  1694                           ; BSR set to: 1
  1695                           ;main.c: 124:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1696   002438  0E09               	movlw	9
  1697   00243A  0100               	movlb	0	; () banked
  1698   00243C  6FD2               	movwf	(??_main+1)& (0+255),b
  1699   00243E  0E1E               	movlw	30
  1700   002440  6FD1               	movwf	??_main& (0+255),b
  1701   002442  0EE4               	movlw	228
  1702   002444                     u5907:
  1703   002444  2EE8               	decfsz	wreg,f,c
  1704   002446  D7FE               	bra	u5907
  1705   002448  2FD1               	decfsz	??_main& (0+255),f,b
  1706   00244A  D7FC               	bra	u5907
  1707   00244C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1708   00244E  D7FA               	bra	u5907
  1709   002450  F000               	nop	
  1710   002452                     
  1711                           ;main.c: 125:                 readColours(&vals);
  1712   002452  0E6A               	movlw	low _vals
  1713   002454  6E0C               	movwf	readColours@vals^0,c
  1714   002456  0E01               	movlw	high _vals
  1715   002458  6E0D               	movwf	(readColours@vals+1)^0,c
  1716   00245A  EC57  F02B         	call	_readColours	;wreg free
  1717   00245E                     
  1718                           ;main.c: 126:                 colour_rel(&vals, &rel);
  1719   00245E  0E6A               	movlw	low _vals
  1720   002460  6E4B               	movwf	colour_rel@vals^0,c
  1721   002462  0E01               	movlw	high _vals
  1722   002464  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1723   002466  0E4C               	movlw	low _rel
  1724   002468  6E4D               	movwf	colour_rel@rel^0,c
  1725   00246A  0E01               	movlw	high _rel
  1726   00246C  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1727   00246E  EC44  F01A         	call	_colour_rel	;wreg free
  1728   002472                     
  1729                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1730   002472  0E6A               	movlw	low _vals
  1731   002474  6E4B               	movwf	Colour_decider@vals^0,c
  1732   002476  0E01               	movlw	high _vals
  1733   002478  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1734   00247A  0E4C               	movlw	low _rel
  1735   00247C  6E4D               	movwf	Colour_decider@rel^0,c
  1736   00247E  0E01               	movlw	high _rel
  1737   002480  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1738   002482  EC1F  F007         	call	_Colour_decider	;wreg free
  1739   002486  C04B  F1D8         	movff	?_Colour_decider,main@colour
  1740   00248A  C04C  F1D9         	movff	?_Colour_decider+1,main@colour+1
  1741   00248E                     
  1742                           ;main.c: 128:                 if (colour==prev_colour){
  1743   00248E  0101               	movlb	1	; () banked
  1744   002490  51DC               	movf	main@prev_colour& (0+255),w,b
  1745   002492  19D8               	xorwf	main@colour& (0+255),w,b
  1746   002494  E107               	bnz	u5681
  1747   002496  51DD               	movf	(main@prev_colour+1)& (0+255),w,b
  1748   002498  19D9               	xorwf	(main@colour+1)& (0+255),w,b
  1749   00249A  A4D8               	btfss	status,2,c
  1750   00249C  EF52  F012         	goto	u5681
  1751   0024A0  EF54  F012         	goto	u5680
  1752   0024A4                     u5681:
  1753   0024A4  EF58  F012         	goto	l5763
  1754   0024A8                     u5680:
  1755   0024A8                     
  1756                           ; BSR set to: 1
  1757                           ;main.c: 129:                     consecuitive++;
  1758   0024A8  4BD6               	infsnz	main@consecuitive& (0+255),f,b
  1759   0024AA  2BD7               	incf	(main@consecuitive+1)& (0+255),f,b
  1760                           
  1761                           ;main.c: 130:                 }
  1762   0024AC  EF5C  F012         	goto	l5765
  1763   0024B0                     l5763:
  1764                           
  1765                           ; BSR set to: 1
  1766                           ;main.c: 132:                     consecuitive=0;
  1767   0024B0  0E00               	movlw	0
  1768   0024B2  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1769   0024B4  0E00               	movlw	0
  1770   0024B6  6FD6               	movwf	main@consecuitive& (0+255),b
  1771   0024B8                     l5765:
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;main.c: 134:                 prev_colour=colour;
  1775   0024B8  C1D8  F1DC         	movff	main@colour,main@prev_colour
  1776   0024BC  C1D9  F1DD         	movff	main@colour+1,main@prev_colour+1
  1777   0024C0                     l5767:
  1778                           
  1779                           ;main.c: 123:             while (consecuitive<20){
  1780   0024C0  0101               	movlb	1	; () banked
  1781   0024C2  BFD7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1782   0024C4  EF6D  F012         	goto	u5691
  1783   0024C8  51D7               	movf	(main@consecuitive+1)& (0+255),w,b
  1784   0024CA  E109               	bnz	u5690
  1785   0024CC  0E14               	movlw	20
  1786   0024CE  5DD6               	subwf	main@consecuitive& (0+255),w,b
  1787   0024D0  A0D8               	btfss	status,0,c
  1788   0024D2  EF6D  F012         	goto	u5691
  1789   0024D6  EF6F  F012         	goto	u5690
  1790   0024DA                     u5691:
  1791   0024DA  EF1C  F012         	goto	l5751
  1792   0024DE                     u5690:
  1793   0024DE                     
  1794                           ; BSR set to: 1
  1795                           ;main.c: 139:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1796   0024DE  0E72               	movlw	low main@buf
  1797   0024E0  0100               	movlb	0	; () banked
  1798   0024E2  6FB0               	movwf	sprintf@s& (0+255),b
  1799   0024E4  0E01               	movlw	high main@buf
  1800   0024E6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1801   0024E8  0E01               	movlw	low STR_1
  1802   0024EA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1803   0024EC  0E0E               	movlw	high STR_1
  1804   0024EE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1805   0024F0  C14C  F0B4         	movff	_rel,?_sprintf+4
  1806   0024F4  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1807   0024F8  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1808   0024FC  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1809   002500  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1810   002504  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1811   002508  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1812   00250C  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1813   002510  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1814   002514  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1815   002518  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1816   00251C  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1817   002520  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1818   002524  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1819   002528  C1DC  F0C2         	movff	main@prev_colour,?_sprintf+18
  1820   00252C  C1DD  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1821   002530  EC63  F02C         	call	_sprintf	;wreg free
  1822   002534                     
  1823                           ;main.c: 140:             sendStringSerial4(buf);
  1824   002534  0E72               	movlw	low main@buf
  1825   002536  6E02               	movwf	sendStringSerial4@string^0,c
  1826   002538  0E01               	movlw	high main@buf
  1827   00253A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1828   00253C  ECCF  F02F         	call	_sendStringSerial4	;wreg free
  1829   002540                     
  1830                           ;main.c: 142:             if (prev_colour==1){
  1831   002540  0101               	movlb	1	; () banked
  1832   002542  05DC               	decf	main@prev_colour& (0+255),w,b
  1833   002544  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1834   002546  A4D8               	btfss	status,2,c
  1835   002548  EFA8  F012         	goto	u5701
  1836   00254C  EFAA  F012         	goto	u5700
  1837   002550                     u5701:
  1838   002550  EFC7  F012         	goto	l5785
  1839   002554                     u5700:
  1840   002554                     
  1841                           ; BSR set to: 1
  1842                           ;main.c: 143:                 RedMove(&motorL, &motorR);
  1843   002554  0E61               	movlw	low _motorL
  1844   002556  6E20               	movwf	RedMove@mL^0,c
  1845   002558  0E01               	movlw	high _motorL
  1846   00255A  6E21               	movwf	(RedMove@mL+1)^0,c
  1847   00255C  0E58               	movlw	low _motorR
  1848   00255E  6E22               	movwf	RedMove@mR^0,c
  1849   002560  0E01               	movlw	high _motorR
  1850   002562  6E23               	movwf	(RedMove@mR+1)^0,c
  1851   002564  EC3E  F02F         	call	_RedMove	;wreg free
  1852   002568                     
  1853                           ;main.c: 144:                 TMR0H=0;
  1854   002568  0E00               	movlw	0
  1855   00256A  6ED4               	movwf	212,c	;volatile
  1856   00256C                     
  1857                           ;main.c: 145:                 TMR0L=0;
  1858   00256C  0E00               	movlw	0
  1859   00256E  6ED3               	movwf	211,c	;volatile
  1860   002570                     
  1861                           ;main.c: 146:                 WayBack[move_count]=1;
  1862   002570  0E1A               	movlw	low _WayBack
  1863   002572  0101               	movlb	1	; () banked
  1864   002574  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1865   002576  6ED9               	movwf	fsr2l,c
  1866   002578  0E01               	movlw	high _WayBack
  1867   00257A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1868   00257C  6EDA               	movwf	fsr2h,c
  1869   00257E  0E01               	movlw	1
  1870   002580  6EDF               	movwf	indf2,c
  1871   002582                     l5783:
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 147:                 lost_count=0;
  1875   002582  0E00               	movlw	0
  1876   002584  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1877   002586  0E00               	movlw	0
  1878   002588  6FDA               	movwf	main@lost_count& (0+255),b
  1879                           
  1880                           ;main.c: 148:             }
  1881   00258A  EFF6  F013         	goto	l5883
  1882   00258E                     l5785:
  1883                           
  1884                           ; BSR set to: 1
  1885   00258E  0E02               	movlw	2
  1886   002590  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1887   002592  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1888   002594  A4D8               	btfss	status,2,c
  1889   002596  EFCF  F012         	goto	u5711
  1890   00259A  EFD1  F012         	goto	u5710
  1891   00259E                     u5711:
  1892   00259E  EFEA  F012         	goto	l5797
  1893   0025A2                     u5710:
  1894   0025A2                     
  1895                           ; BSR set to: 1
  1896                           ;main.c: 150:                 OrangeMove(&motorL, &motorR);
  1897   0025A2  0E61               	movlw	low _motorL
  1898   0025A4  6E20               	movwf	OrangeMove@mL^0,c
  1899   0025A6  0E01               	movlw	high _motorL
  1900   0025A8  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1901   0025AA  0E58               	movlw	low _motorR
  1902   0025AC  6E22               	movwf	OrangeMove@mR^0,c
  1903   0025AE  0E01               	movlw	high _motorR
  1904   0025B0  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1905   0025B2  EC8C  F02C         	call	_OrangeMove	;wreg free
  1906   0025B6                     
  1907                           ;main.c: 151:                 TMR0H=0;
  1908   0025B6  0E00               	movlw	0
  1909   0025B8  6ED4               	movwf	212,c	;volatile
  1910   0025BA                     
  1911                           ;main.c: 152:                 TMR0L=0;
  1912   0025BA  0E00               	movlw	0
  1913   0025BC  6ED3               	movwf	211,c	;volatile
  1914   0025BE                     
  1915                           ;main.c: 153:                 WayBack[move_count]=2;
  1916   0025BE  0E1A               	movlw	low _WayBack
  1917   0025C0  0101               	movlb	1	; () banked
  1918   0025C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1919   0025C4  6ED9               	movwf	fsr2l,c
  1920   0025C6  0E01               	movlw	high _WayBack
  1921   0025C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1922   0025CA  6EDA               	movwf	fsr2h,c
  1923   0025CC  0E02               	movlw	2
  1924   0025CE  6EDF               	movwf	indf2,c
  1925   0025D0  EFC1  F012         	goto	l5783
  1926   0025D4                     l5797:
  1927                           
  1928                           ; BSR set to: 1
  1929   0025D4  0E03               	movlw	3
  1930   0025D6  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1931   0025D8  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1932   0025DA  A4D8               	btfss	status,2,c
  1933   0025DC  EFF2  F012         	goto	u5721
  1934   0025E0  EFF4  F012         	goto	u5720
  1935   0025E4                     u5721:
  1936   0025E4  EF0D  F013         	goto	l5809
  1937   0025E8                     u5720:
  1938   0025E8                     
  1939                           ; BSR set to: 1
  1940                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1941   0025E8  0E61               	movlw	low _motorL
  1942   0025EA  6E20               	movwf	YellowMove@mL^0,c
  1943   0025EC  0E01               	movlw	high _motorL
  1944   0025EE  6E21               	movwf	(YellowMove@mL+1)^0,c
  1945   0025F0  0E58               	movlw	low _motorR
  1946   0025F2  6E22               	movwf	YellowMove@mR^0,c
  1947   0025F4  0E01               	movlw	high _motorR
  1948   0025F6  6E23               	movwf	(YellowMove@mR+1)^0,c
  1949   0025F8  EC07  F02D         	call	_YellowMove	;wreg free
  1950   0025FC                     
  1951                           ;main.c: 158:                 TMR0H=0;
  1952   0025FC  0E00               	movlw	0
  1953   0025FE  6ED4               	movwf	212,c	;volatile
  1954   002600                     
  1955                           ;main.c: 159:                 TMR0L=0;
  1956   002600  0E00               	movlw	0
  1957   002602  6ED3               	movwf	211,c	;volatile
  1958   002604                     
  1959                           ;main.c: 160:                 WayBack[move_count]=3;
  1960   002604  0E1A               	movlw	low _WayBack
  1961   002606  0101               	movlb	1	; () banked
  1962   002608  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1963   00260A  6ED9               	movwf	fsr2l,c
  1964   00260C  0E01               	movlw	high _WayBack
  1965   00260E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1966   002610  6EDA               	movwf	fsr2h,c
  1967   002612  0E03               	movlw	3
  1968   002614  6EDF               	movwf	indf2,c
  1969   002616  EFC1  F012         	goto	l5783
  1970   00261A                     l5809:
  1971                           
  1972                           ; BSR set to: 1
  1973   00261A  0E04               	movlw	4
  1974   00261C  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1975   00261E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1976   002620  A4D8               	btfss	status,2,c
  1977   002622  EF15  F013         	goto	u5731
  1978   002626  EF17  F013         	goto	u5730
  1979   00262A                     u5731:
  1980   00262A  EF30  F013         	goto	l5821
  1981   00262E                     u5730:
  1982   00262E                     
  1983                           ; BSR set to: 1
  1984                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  1985   00262E  0E61               	movlw	low _motorL
  1986   002630  6E20               	movwf	BlueMove@mL^0,c
  1987   002632  0E01               	movlw	high _motorL
  1988   002634  6E21               	movwf	(BlueMove@mL+1)^0,c
  1989   002636  0E58               	movlw	low _motorR
  1990   002638  6E22               	movwf	BlueMove@mR^0,c
  1991   00263A  0E01               	movlw	high _motorR
  1992   00263C  6E23               	movwf	(BlueMove@mR+1)^0,c
  1993   00263E  ECF3  F02A         	call	_BlueMove	;wreg free
  1994   002642                     
  1995                           ;main.c: 165:                 TMR0H=0;
  1996   002642  0E00               	movlw	0
  1997   002644  6ED4               	movwf	212,c	;volatile
  1998   002646                     
  1999                           ;main.c: 166:                 TMR0L=0;
  2000   002646  0E00               	movlw	0
  2001   002648  6ED3               	movwf	211,c	;volatile
  2002   00264A                     
  2003                           ;main.c: 167:                 WayBack[move_count]=4;
  2004   00264A  0E1A               	movlw	low _WayBack
  2005   00264C  0101               	movlb	1	; () banked
  2006   00264E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2007   002650  6ED9               	movwf	fsr2l,c
  2008   002652  0E01               	movlw	high _WayBack
  2009   002654  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2010   002656  6EDA               	movwf	fsr2h,c
  2011   002658  0E04               	movlw	4
  2012   00265A  6EDF               	movwf	indf2,c
  2013   00265C  EFC1  F012         	goto	l5783
  2014   002660                     l5821:
  2015                           
  2016                           ; BSR set to: 1
  2017   002660  0E05               	movlw	5
  2018   002662  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2019   002664  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2020   002666  A4D8               	btfss	status,2,c
  2021   002668  EF38  F013         	goto	u5741
  2022   00266C  EF3A  F013         	goto	u5740
  2023   002670                     u5741:
  2024   002670  EF53  F013         	goto	l5833
  2025   002674                     u5740:
  2026   002674                     
  2027                           ; BSR set to: 1
  2028                           ;main.c: 171:                 GreenMove(&motorL, &motorR);
  2029   002674  0E61               	movlw	low _motorL
  2030   002676  6E20               	movwf	GreenMove@mL^0,c
  2031   002678  0E01               	movlw	high _motorL
  2032   00267A  6E21               	movwf	(GreenMove@mL+1)^0,c
  2033   00267C  0E58               	movlw	low _motorR
  2034   00267E  6E22               	movwf	GreenMove@mR^0,c
  2035   002680  0E01               	movlw	high _motorR
  2036   002682  6E23               	movwf	(GreenMove@mR+1)^0,c
  2037   002684  EC5D  F02F         	call	_GreenMove	;wreg free
  2038   002688                     
  2039                           ;main.c: 172:                 TMR0H=0;
  2040   002688  0E00               	movlw	0
  2041   00268A  6ED4               	movwf	212,c	;volatile
  2042   00268C                     
  2043                           ;main.c: 173:                 TMR0L=0;
  2044   00268C  0E00               	movlw	0
  2045   00268E  6ED3               	movwf	211,c	;volatile
  2046   002690                     
  2047                           ;main.c: 174:                 WayBack[move_count]=5;
  2048   002690  0E1A               	movlw	low _WayBack
  2049   002692  0101               	movlb	1	; () banked
  2050   002694  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2051   002696  6ED9               	movwf	fsr2l,c
  2052   002698  0E01               	movlw	high _WayBack
  2053   00269A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2054   00269C  6EDA               	movwf	fsr2h,c
  2055   00269E  0E05               	movlw	5
  2056   0026A0  6EDF               	movwf	indf2,c
  2057   0026A2  EFC1  F012         	goto	l5783
  2058   0026A6                     l5833:
  2059                           
  2060                           ; BSR set to: 1
  2061   0026A6  0E06               	movlw	6
  2062   0026A8  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2063   0026AA  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2064   0026AC  A4D8               	btfss	status,2,c
  2065   0026AE  EF5B  F013         	goto	u5751
  2066   0026B2  EF5D  F013         	goto	u5750
  2067   0026B6                     u5751:
  2068   0026B6  EF76  F013         	goto	l5845
  2069   0026BA                     u5750:
  2070   0026BA                     
  2071                           ; BSR set to: 1
  2072                           ;main.c: 178:                 LightBlueMove(&motorL, &motorR);
  2073   0026BA  0E61               	movlw	low _motorL
  2074   0026BC  6E20               	movwf	LightBlueMove@mL^0,c
  2075   0026BE  0E01               	movlw	high _motorL
  2076   0026C0  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2077   0026C2  0E58               	movlw	low _motorR
  2078   0026C4  6E22               	movwf	LightBlueMove@mR^0,c
  2079   0026C6  0E01               	movlw	high _motorR
  2080   0026C8  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2081   0026CA  ECB5  F02C         	call	_LightBlueMove	;wreg free
  2082   0026CE                     
  2083                           ;main.c: 179:                 TMR0H=0;
  2084   0026CE  0E00               	movlw	0
  2085   0026D0  6ED4               	movwf	212,c	;volatile
  2086   0026D2                     
  2087                           ;main.c: 180:                 TMR0L=0;
  2088   0026D2  0E00               	movlw	0
  2089   0026D4  6ED3               	movwf	211,c	;volatile
  2090   0026D6                     
  2091                           ;main.c: 181:                 WayBack[move_count]=6;
  2092   0026D6  0E1A               	movlw	low _WayBack
  2093   0026D8  0101               	movlb	1	; () banked
  2094   0026DA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2095   0026DC  6ED9               	movwf	fsr2l,c
  2096   0026DE  0E01               	movlw	high _WayBack
  2097   0026E0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2098   0026E2  6EDA               	movwf	fsr2h,c
  2099   0026E4  0E06               	movlw	6
  2100   0026E6  6EDF               	movwf	indf2,c
  2101   0026E8  EFC1  F012         	goto	l5783
  2102   0026EC                     l5845:
  2103                           
  2104                           ; BSR set to: 1
  2105   0026EC  0E07               	movlw	7
  2106   0026EE  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2107   0026F0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2108   0026F2  A4D8               	btfss	status,2,c
  2109   0026F4  EF7E  F013         	goto	u5761
  2110   0026F8  EF80  F013         	goto	u5760
  2111   0026FC                     u5761:
  2112   0026FC  EF99  F013         	goto	l5857
  2113   002700                     u5760:
  2114   002700                     
  2115                           ; BSR set to: 1
  2116                           ;main.c: 185:                 PinkMove(&motorL, &motorR);
  2117   002700  0E61               	movlw	low _motorL
  2118   002702  6E20               	movwf	PinkMove@mL^0,c
  2119   002704  0E01               	movlw	high _motorL
  2120   002706  6E21               	movwf	(PinkMove@mL+1)^0,c
  2121   002708  0E58               	movlw	low _motorR
  2122   00270A  6E22               	movwf	PinkMove@mR^0,c
  2123   00270C  0E01               	movlw	high _motorR
  2124   00270E  6E23               	movwf	(PinkMove@mR+1)^0,c
  2125   002710  EC30  F02D         	call	_PinkMove	;wreg free
  2126   002714                     
  2127                           ;main.c: 186:                 TMR0H=0;
  2128   002714  0E00               	movlw	0
  2129   002716  6ED4               	movwf	212,c	;volatile
  2130   002718                     
  2131                           ;main.c: 187:                 TMR0L=0;
  2132   002718  0E00               	movlw	0
  2133   00271A  6ED3               	movwf	211,c	;volatile
  2134   00271C                     
  2135                           ;main.c: 188:                 WayBack[move_count]=7;
  2136   00271C  0E1A               	movlw	low _WayBack
  2137   00271E  0101               	movlb	1	; () banked
  2138   002720  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2139   002722  6ED9               	movwf	fsr2l,c
  2140   002724  0E01               	movlw	high _WayBack
  2141   002726  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2142   002728  6EDA               	movwf	fsr2h,c
  2143   00272A  0E07               	movlw	7
  2144   00272C  6EDF               	movwf	indf2,c
  2145   00272E  EFC1  F012         	goto	l5783
  2146   002732                     l5857:
  2147                           
  2148                           ; BSR set to: 1
  2149   002732  0E0A               	movlw	10
  2150   002734  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2151   002736  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2152   002738  A4D8               	btfss	status,2,c
  2153   00273A  EFA1  F013         	goto	u5771
  2154   00273E  EFA3  F013         	goto	u5770
  2155   002742                     u5771:
  2156   002742  EFCF  F013         	goto	l5871
  2157   002746                     u5770:
  2158   002746                     
  2159                           ; BSR set to: 1
  2160                           ;main.c: 192:                 lost_count++;
  2161   002746  4BDA               	infsnz	main@lost_count& (0+255),f,b
  2162   002748  2BDB               	incf	(main@lost_count+1)& (0+255),f,b
  2163   00274A                     
  2164                           ; BSR set to: 1
  2165                           ;main.c: 193:                 if (lost_count>=3){
  2166   00274A  BFDB               	btfsc	(main@lost_count+1)& (0+255),7,b
  2167   00274C  EFB1  F013         	goto	u5781
  2168   002750  51DB               	movf	(main@lost_count+1)& (0+255),w,b
  2169   002752  E109               	bnz	u5780
  2170   002754  0E03               	movlw	3
  2171   002756  5DDA               	subwf	main@lost_count& (0+255),w,b
  2172   002758  A0D8               	btfss	status,0,c
  2173   00275A  EFB1  F013         	goto	u5781
  2174   00275E  EFB3  F013         	goto	u5780
  2175   002762                     u5781:
  2176   002762  EFBF  F013         	goto	l5865
  2177   002766                     u5780:
  2178   002766                     l5863:
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;main.c: 194:                     go_Home(WayBack, Time_forward);
  2182   002766  0E1A               	movlw	low _WayBack
  2183   002768  6E24               	movwf	go_Home@WayBack^0,c
  2184   00276A  0E01               	movlw	high _WayBack
  2185   00276C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2186   00276E  0E3C               	movlw	low _Time_forward
  2187   002770  6E26               	movwf	go_Home@Time_forward^0,c
  2188   002772  0E02               	movlw	high _Time_forward
  2189   002774  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2190   002776  EC5E  F01D         	call	_go_Home	;wreg free
  2191                           
  2192                           ;main.c: 195:                 }
  2193   00277A  EFF6  F013         	goto	l5883
  2194   00277E                     l5865:
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;main.c: 197:                     RetryMove(&motorL, &motorR);
  2198   00277E  0E61               	movlw	low _motorL
  2199   002780  6E20               	movwf	RetryMove@mL^0,c
  2200   002782  0E01               	movlw	high _motorL
  2201   002784  6E21               	movwf	(RetryMove@mL+1)^0,c
  2202   002786  0E58               	movlw	low _motorR
  2203   002788  6E22               	movwf	RetryMove@mR^0,c
  2204   00278A  0E01               	movlw	high _motorR
  2205   00278C  6E23               	movwf	(RetryMove@mR+1)^0,c
  2206   00278E  EC8B  F02A         	call	_RetryMove	;wreg free
  2207   002792                     
  2208                           ;main.c: 198:                     TMR0H=0;
  2209   002792  0E00               	movlw	0
  2210   002794  6ED4               	movwf	212,c	;volatile
  2211   002796                     
  2212                           ;main.c: 199:                     TMR0L=0;
  2213   002796  0E00               	movlw	0
  2214   002798  6ED3               	movwf	211,c	;volatile
  2215   00279A  EFF6  F013         	goto	l5883
  2216   00279E                     l5871:
  2217                           
  2218                           ; BSR set to: 1
  2219   00279E  51DC               	movf	main@prev_colour& (0+255),w,b
  2220   0027A0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2221   0027A2  A4D8               	btfss	status,2,c
  2222   0027A4  EFD6  F013         	goto	u5791
  2223   0027A8  EFD8  F013         	goto	u5790
  2224   0027AC                     u5791:
  2225   0027AC  EFDA  F013         	goto	l378
  2226   0027B0                     u5790:
  2227   0027B0  EFB3  F013         	goto	l5863
  2228   0027B4                     l378:
  2229                           
  2230                           ; BSR set to: 1
  2231   0027B4  EFF6  F013         	goto	l5883
  2232   0027B8                     l5875:
  2233                           
  2234                           ; BSR set to: 1
  2235   0027B8  5118               	movf	_lost_flag& (0+255),w,b
  2236   0027BA  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2237   0027BC  B4D8               	btfsc	status,2,c
  2238   0027BE  EFE3  F013         	goto	u5801
  2239   0027C2  EFE5  F013         	goto	u5800
  2240   0027C6                     u5801:
  2241   0027C6  EFF6  F013         	goto	l5883
  2242   0027CA                     u5800:
  2243   0027CA                     
  2244                           ; BSR set to: 1
  2245                           ;main.c: 206:             move_count++;
  2246   0027CA  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2247   0027CC  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2248   0027CE                     
  2249                           ; BSR set to: 1
  2250                           ;main.c: 207:             Time_forward[move_count]=65535;
  2251   0027CE  90D8               	bcf	status,0,c
  2252   0027D0  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2253   0027D2  6ED9               	movwf	fsr2l,c
  2254   0027D4  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2255   0027D6  6EDA               	movwf	fsr2h,c
  2256   0027D8  0E3C               	movlw	low _Time_forward
  2257   0027DA  26D9               	addwf	fsr2l,f,c
  2258   0027DC  0E02               	movlw	high _Time_forward
  2259   0027DE  22DA               	addwfc	fsr2h,f,c
  2260   0027E0  0EFF               	movlw	255
  2261   0027E2  6EDE               	movwf	postinc2,c
  2262   0027E4  0EFF               	movlw	255
  2263   0027E6  6EDD               	movwf	postdec2,c
  2264   0027E8  EFB3  F013         	goto	l5863
  2265   0027EC                     l5883:
  2266                           
  2267                           ;main.c: 100:     while (run_flag)
  2268   0027EC  0101               	movlb	1	; () banked
  2269   0027EE  5116               	movf	_run_flag& (0+255),w,b
  2270   0027F0  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2271   0027F2  A4D8               	btfss	status,2,c
  2272   0027F4  EFFE  F013         	goto	u5811
  2273   0027F8  EF00  F014         	goto	u5810
  2274   0027FC                     u5811:
  2275   0027FC  EFD5  F011         	goto	l5733
  2276   002800                     u5810:
  2277   002800                     
  2278                           ; BSR set to: 1
  2279   002800  EF1A  F000         	goto	start
  2280   002804                     __end_of_main:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _turnCalibration *****************
  2284 ;; Defined at:
  2285 ;;		line 356 in file "dc_motor.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2288 ;;		 -> motorL(9), 
  2289 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2290 ;;		 -> motorR(9), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;Total ram usage:        6 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 5
  2309 ;; This function calls:
  2310 ;;		_turnLeft45
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text1
  2317   00422C                     __ptext1:
  2318                           	callstack 0
  2319   00422C                     _turnCalibration:
  2320                           	callstack 25
  2321   00422C                     
  2322                           ;dc_motor.c: 357:     LATFbits.LATF0=1;
  2323   00422C  807E               	bsf	126,0,c	;volatile
  2324   00422E                     
  2325                           ;dc_motor.c: 358:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2326   00422E  0E52               	movlw	82
  2327   004230  6E25               	movwf	(??_turnCalibration+1)^0,c
  2328   004232  0E2B               	movlw	43
  2329   004234  6E24               	movwf	??_turnCalibration^0,c
  2330   004236  0E00               	movlw	0
  2331   004238                     u5917:
  2332   004238  2EE8               	decfsz	wreg,f,c
  2333   00423A  D7FE               	bra	u5917
  2334   00423C  2E24               	decfsz	??_turnCalibration^0,f,c
  2335   00423E  D7FC               	bra	u5917
  2336   004240  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2337   004242  D7FA               	bra	u5917
  2338   004244  D000               	nop2	
  2339                           
  2340                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2341   004246  EFDD  F021         	goto	l567
  2342   00424A                     l568:
  2343                           
  2344                           ;dc_motor.c: 361:         LATDbits.LATD3=1;
  2345   00424A  867C               	bsf	124,3,c	;volatile
  2346   00424C                     
  2347                           ;dc_motor.c: 363:         turnLeft45(&motorL, &motorR);
  2348   00424C  0E61               	movlw	low _motorL
  2349   00424E  6E1A               	movwf	turnLeft45@mL^0,c
  2350   004250  0E01               	movlw	high _motorL
  2351   004252  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2352   004254  0E58               	movlw	low _motorR
  2353   004256  6E1C               	movwf	turnLeft45@mR^0,c
  2354   004258  0E01               	movlw	high _motorR
  2355   00425A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2356   00425C  EC6F  F02E         	call	_turnLeft45	;wreg free
  2357                           
  2358                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2359   004260  0E61               	movlw	low _motorL
  2360   004262  6E1A               	movwf	turnLeft45@mL^0,c
  2361   004264  0E01               	movlw	high _motorL
  2362   004266  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2363   004268  0E58               	movlw	low _motorR
  2364   00426A  6E1C               	movwf	turnLeft45@mR^0,c
  2365   00426C  0E01               	movlw	high _motorR
  2366   00426E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2367   004270  EC6F  F02E         	call	_turnLeft45	;wreg free
  2368                           
  2369                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2370   004274  0E61               	movlw	low _motorL
  2371   004276  6E1A               	movwf	turnLeft45@mL^0,c
  2372   004278  0E01               	movlw	high _motorL
  2373   00427A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2374   00427C  0E58               	movlw	low _motorR
  2375   00427E  6E1C               	movwf	turnLeft45@mR^0,c
  2376   004280  0E01               	movlw	high _motorR
  2377   004282  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2378   004284  EC6F  F02E         	call	_turnLeft45	;wreg free
  2379                           
  2380                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2381   004288  0E61               	movlw	low _motorL
  2382   00428A  6E1A               	movwf	turnLeft45@mL^0,c
  2383   00428C  0E01               	movlw	high _motorL
  2384   00428E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2385   004290  0E58               	movlw	low _motorR
  2386   004292  6E1C               	movwf	turnLeft45@mR^0,c
  2387   004294  0E01               	movlw	high _motorR
  2388   004296  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2389   004298  EC6F  F02E         	call	_turnLeft45	;wreg free
  2390                           
  2391                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2392   00429C  EFC2  F021         	goto	l5537
  2393   0042A0                     l570:
  2394                           
  2395                           ;dc_motor.c: 371:               LATDbits.LATD4=1;
  2396   0042A0  887C               	bsf	124,4,c	;volatile
  2397   0042A2                     
  2398                           ;dc_motor.c: 372:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2399   0042A2  0EA3               	movlw	163
  2400   0042A4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2401   0042A6  0E57               	movlw	87
  2402   0042A8  6E24               	movwf	??_turnCalibration^0,c
  2403   0042AA  0E02               	movlw	2
  2404   0042AC                     u5927:
  2405   0042AC  2EE8               	decfsz	wreg,f,c
  2406   0042AE  D7FE               	bra	u5927
  2407   0042B0  2E24               	decfsz	??_turnCalibration^0,f,c
  2408   0042B2  D7FC               	bra	u5927
  2409   0042B4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2410   0042B6  D7FA               	bra	u5927
  2411   0042B8  D000               	nop2	
  2412                           
  2413                           ;dc_motor.c: 373:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2414   0042BA  A48E               	btfss	142,2,c	;volatile
  2415   0042BC  EF62  F021         	goto	u5461
  2416   0042C0  EF65  F021         	goto	u5460
  2417   0042C4                     u5461:
  2418   0042C4  0E01               	movlw	1
  2419   0042C6  EF66  F021         	goto	u5462
  2420   0042CA                     u5460:
  2421   0042CA  0E00               	movlw	0
  2422   0042CC                     u5462:
  2423   0042CC  6E24               	movwf	??_turnCalibration^0,c
  2424   0042CE  A68E               	btfss	142,3,c	;volatile
  2425   0042D0  EF6C  F021         	goto	u5471
  2426   0042D4  EF6F  F021         	goto	u5470
  2427   0042D8                     u5471:
  2428   0042D8  0E01               	movlw	1
  2429   0042DA  EF70  F021         	goto	u5472
  2430   0042DE                     u5470:
  2431   0042DE  0E00               	movlw	0
  2432   0042E0                     u5472:
  2433   0042E0  1424               	andwf	??_turnCalibration^0,w,c
  2434   0042E2  A0E8               	btfss	wreg,0,c
  2435   0042E4  EF76  F021         	goto	u5481
  2436   0042E8  EF78  F021         	goto	u5480
  2437   0042EC                     u5481:
  2438   0042EC  EF8A  F021         	goto	l571
  2439   0042F0                     u5480:
  2440   0042F0                     
  2441                           ;dc_motor.c: 374:                 LATHbits.LATH3=1;
  2442   0042F0  8680               	bsf	128,3,c	;volatile
  2443                           
  2444                           ;dc_motor.c: 375:                 LATDbits.LATD7=1;
  2445   0042F2  8E7C               	bsf	124,7,c	;volatile
  2446   0042F4                     
  2447                           ;dc_motor.c: 376:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2448   0042F4  0E52               	movlw	82
  2449   0042F6  6E25               	movwf	(??_turnCalibration+1)^0,c
  2450   0042F8  0E2B               	movlw	43
  2451   0042FA  6E24               	movwf	??_turnCalibration^0,c
  2452   0042FC  0E00               	movlw	0
  2453   0042FE                     u5937:
  2454   0042FE  2EE8               	decfsz	wreg,f,c
  2455   004300  D7FE               	bra	u5937
  2456   004302  2E24               	decfsz	??_turnCalibration^0,f,c
  2457   004304  D7FC               	bra	u5937
  2458   004306  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2459   004308  D7FA               	bra	u5937
  2460   00430A  D000               	nop2	
  2461   00430C                     
  2462                           ;dc_motor.c: 377:                 LATHbits.LATH3=0;
  2463   00430C  9680               	bcf	128,3,c	;volatile
  2464   00430E                     
  2465                           ;dc_motor.c: 378:                 LATDbits.LATD7=0;
  2466   00430E  9E7C               	bcf	124,7,c	;volatile
  2467                           
  2468                           ;dc_motor.c: 379:             }
  2469   004310  EFC2  F021         	goto	l5537
  2470   004314                     l571:
  2471   004314  B68E               	btfsc	142,3,c	;volatile
  2472   004316  EF8F  F021         	goto	u5491
  2473   00431A  EF91  F021         	goto	u5490
  2474   00431E                     u5491:
  2475   00431E  EFA6  F021         	goto	l573
  2476   004322                     u5490:
  2477   004322                     
  2478                           ;dc_motor.c: 382:                 Turn45Delay+=10;
  2479   004322  0E0A               	movlw	10
  2480   004324  0100               	movlb	0	; () banked
  2481   004326  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2482   004328  0E00               	movlw	0
  2483   00432A  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2484   00432C                     
  2485                           ; BSR set to: 0
  2486                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2487   00432C  8680               	bsf	128,3,c	;volatile
  2488   00432E                     
  2489                           ; BSR set to: 0
  2490                           ;dc_motor.c: 384:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2491   00432E  0E52               	movlw	82
  2492   004330  6E25               	movwf	(??_turnCalibration+1)^0,c
  2493   004332  0E2B               	movlw	43
  2494   004334  6E24               	movwf	??_turnCalibration^0,c
  2495   004336  0E00               	movlw	0
  2496   004338                     u5947:
  2497   004338  2EE8               	decfsz	wreg,f,c
  2498   00433A  D7FE               	bra	u5947
  2499   00433C  2E24               	decfsz	??_turnCalibration^0,f,c
  2500   00433E  D7FC               	bra	u5947
  2501   004340  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2502   004342  D7FA               	bra	u5947
  2503   004344  D000               	nop2	
  2504   004346                     
  2505                           ;dc_motor.c: 385:                 LATHbits.LATH3=0;
  2506   004346  9680               	bcf	128,3,c	;volatile
  2507                           
  2508                           ;dc_motor.c: 386:             }
  2509   004348  EFC2  F021         	goto	l5537
  2510   00434C                     l573:
  2511   00434C  B48E               	btfsc	142,2,c	;volatile
  2512   00434E  EFAB  F021         	goto	u5501
  2513   004352  EFAD  F021         	goto	u5500
  2514   004356                     u5501:
  2515   004356  EFC2  F021         	goto	l572
  2516   00435A                     u5500:
  2517   00435A                     
  2518                           ;dc_motor.c: 389:                 Turn45Delay-=10;
  2519   00435A  0100               	movlb	0	; () banked
  2520   00435C  0EF6               	movlw	246
  2521   00435E  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2522   004360  0EFF               	movlw	255
  2523   004362  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2524   004364                     
  2525                           ; BSR set to: 0
  2526                           ;dc_motor.c: 390:                 LATDbits.LATD7=1;
  2527   004364  8E7C               	bsf	124,7,c	;volatile
  2528   004366                     
  2529                           ; BSR set to: 0
  2530                           ;dc_motor.c: 391:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2531   004366  0E52               	movlw	82
  2532   004368  6E25               	movwf	(??_turnCalibration+1)^0,c
  2533   00436A  0E2B               	movlw	43
  2534   00436C  6E24               	movwf	??_turnCalibration^0,c
  2535   00436E  0E00               	movlw	0
  2536   004370                     u5957:
  2537   004370  2EE8               	decfsz	wreg,f,c
  2538   004372  D7FE               	bra	u5957
  2539   004374  2E24               	decfsz	??_turnCalibration^0,f,c
  2540   004376  D7FC               	bra	u5957
  2541   004378  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2542   00437A  D7FA               	bra	u5957
  2543   00437C  D000               	nop2	
  2544   00437E                     
  2545                           ;dc_motor.c: 392:                 LATDbits.LATD7=0;
  2546   00437E  9E7C               	bcf	124,7,c	;volatile
  2547   004380  EFC2  F021         	goto	l5537
  2548   004384                     l572:
  2549   004384                     l5537:
  2550                           
  2551                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2552   004384  A48E               	btfss	142,2,c	;volatile
  2553   004386  EFC7  F021         	goto	u5511
  2554   00438A  EFC9  F021         	goto	u5510
  2555   00438E                     u5511:
  2556   00438E  EFD0  F021         	goto	l578
  2557   004392                     u5510:
  2558   004392  B68E               	btfsc	142,3,c	;volatile
  2559   004394  EFCE  F021         	goto	u5521
  2560   004398  EFD0  F021         	goto	u5520
  2561   00439C                     u5521:
  2562   00439C  EF50  F021         	goto	l570
  2563   0043A0                     u5520:
  2564   0043A0                     l578:
  2565                           
  2566                           ;dc_motor.c: 395:         LATDbits.LATD4=0;
  2567   0043A0  987C               	bcf	124,4,c	;volatile
  2568   0043A2                     
  2569                           ;dc_motor.c: 396:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2570   0043A2  0EA3               	movlw	163
  2571   0043A4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2572   0043A6  0E57               	movlw	87
  2573   0043A8  6E24               	movwf	??_turnCalibration^0,c
  2574   0043AA  0E02               	movlw	2
  2575   0043AC                     u5967:
  2576   0043AC  2EE8               	decfsz	wreg,f,c
  2577   0043AE  D7FE               	bra	u5967
  2578   0043B0  2E24               	decfsz	??_turnCalibration^0,f,c
  2579   0043B2  D7FC               	bra	u5967
  2580   0043B4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2581   0043B6  D7FA               	bra	u5967
  2582   0043B8  D000               	nop2	
  2583   0043BA                     l567:
  2584                           
  2585                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2586   0043BA  A68E               	btfss	142,3,c	;volatile
  2587   0043BC  EFE2  F021         	goto	u5531
  2588   0043C0  EFE5  F021         	goto	u5530
  2589   0043C4                     u5531:
  2590   0043C4  0E01               	movlw	1
  2591   0043C6  EFE6  F021         	goto	u5532
  2592   0043CA                     u5530:
  2593   0043CA  0E00               	movlw	0
  2594   0043CC                     u5532:
  2595   0043CC  6E24               	movwf	??_turnCalibration^0,c
  2596   0043CE  A48E               	btfss	142,2,c	;volatile
  2597   0043D0  EFEC  F021         	goto	u5541
  2598   0043D4  EFEF  F021         	goto	u5540
  2599   0043D8                     u5541:
  2600   0043D8  0E01               	movlw	1
  2601   0043DA  EFF0  F021         	goto	u5542
  2602   0043DE                     u5540:
  2603   0043DE  0E00               	movlw	0
  2604   0043E0                     u5542:
  2605   0043E0  1424               	andwf	??_turnCalibration^0,w,c
  2606   0043E2  A0E8               	btfss	wreg,0,c
  2607   0043E4  EFF6  F021         	goto	u5551
  2608   0043E8  EFF8  F021         	goto	u5550
  2609   0043EC                     u5551:
  2610   0043EC  EF25  F021         	goto	l568
  2611   0043F0                     u5550:
  2612   0043F0                     
  2613                           ;dc_motor.c: 398:     LATDbits.LATD3=0;
  2614   0043F0  967C               	bcf	124,3,c	;volatile
  2615   0043F2                     
  2616                           ;dc_motor.c: 399:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2617   0043F2  0EA3               	movlw	163
  2618   0043F4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2619   0043F6  0E57               	movlw	87
  2620   0043F8  6E24               	movwf	??_turnCalibration^0,c
  2621   0043FA  0E02               	movlw	2
  2622   0043FC                     u5977:
  2623   0043FC  2EE8               	decfsz	wreg,f,c
  2624   0043FE  D7FE               	bra	u5977
  2625   004400  2E24               	decfsz	??_turnCalibration^0,f,c
  2626   004402  D7FC               	bra	u5977
  2627   004404  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2628   004406  D7FA               	bra	u5977
  2629   004408  D000               	nop2	
  2630   00440A  0012               	return		;funcret
  2631   00440C                     __end_of_turnCalibration:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _sprintf *****************
  2635 ;; Defined at:
  2636 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2639 ;;		 -> main@buf(100), 
  2640 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2641 ;;		 -> STR_1(51), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2644 ;;  ap              2  100[BANK0 ] PTR void [1]
  2645 ;;		 -> ?_sprintf(2), 
  2646 ;;  ret             2    0        int 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2   80[BANK0 ] int 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2656 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;Total ram usage:       33 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 8
  2663 ;; This function calls:
  2664 ;;		_vfprintf
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text2
  2671   0058C6                     __ptext2:
  2672                           	callstack 0
  2673   0058C6                     _sprintf:
  2674                           	callstack 22
  2675   0058C6  0EB4               	movlw	low (?_sprintf+4)
  2676   0058C8  0100               	movlb	0	; () banked
  2677   0058CA  6FC4               	movwf	sprintf@ap& (0+255),b
  2678   0058CC  0E00               	movlw	high (?_sprintf+4)
  2679   0058CE  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2680   0058D0  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2681   0058D4  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2682   0058D8                     
  2683                           ; BSR set to: 0
  2684   0058D8  0E00               	movlw	0
  2685   0058DA  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2686   0058DC  0E00               	movlw	0
  2687   0058DE  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2688   0058E0                     
  2689                           ; BSR set to: 0
  2690   0058E0  0E00               	movlw	0
  2691   0058E2  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2692   0058E4  0E00               	movlw	0
  2693   0058E6  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2694   0058E8                     
  2695                           ; BSR set to: 0
  2696   0058E8  0EC6               	movlw	low sprintf@f
  2697   0058EA  6FA8               	movwf	vfprintf@fp& (0+255),b
  2698   0058EC  0E00               	movlw	high sprintf@f
  2699   0058EE  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2700   0058F0  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2701   0058F4  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2702   0058F8  0EC4               	movlw	low sprintf@ap
  2703   0058FA  6FAC               	movwf	vfprintf@ap& (0+255),b
  2704   0058FC  0E00               	movlw	high sprintf@ap
  2705   0058FE  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2706   005900  EC38  F02C         	call	_vfprintf	;wreg free
  2707   005904  0100               	movlb	0	; () banked
  2708   005906  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2709   005908  25B0               	addwf	sprintf@s& (0+255),w,b
  2710   00590A  6ED9               	movwf	fsr2l,c
  2711   00590C  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2712   00590E  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2713   005910  6EDA               	movwf	fsr2h,c
  2714   005912  0E00               	movlw	0
  2715   005914  6EDF               	movwf	indf2,c
  2716   005916                     
  2717                           ; BSR set to: 0
  2718   005916  0012               	return		;funcret
  2719   005918                     __end_of_sprintf:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _vfprintf *****************
  2723 ;; Defined at:
  2724 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2727 ;;		 -> sprintf@f(11), 
  2728 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2729 ;;		 -> STR_1(51), 
  2730 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2731 ;;		 -> sprintf@ap(2), 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2734 ;;		 -> STR_1(51), 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2   72[BANK0 ] int 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2744 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;Total ram usage:        8 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 7
  2751 ;; This function calls:
  2752 ;;		_vfpfcnvrt
  2753 ;; This function is called by:
  2754 ;;		_sprintf
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text3
  2759   005870                     __ptext3:
  2760                           	callstack 0
  2761   005870                     _vfprintf:
  2762                           	callstack 22
  2763   005870                     
  2764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2765   005870  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2766   005874  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2769   005878  EF4D  F02C         	goto	l5225
  2770   00587C                     l5223:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2773   00587C  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2774   005880  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2775   005884  0EAE               	movlw	low vfprintf@cfmt
  2776   005886  0100               	movlb	0	; () banked
  2777   005888  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2778   00588A  0E00               	movlw	high vfprintf@cfmt
  2779   00588C  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2780   00588E  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2781   005892  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2782   005896  ECDB  F01B         	call	_vfpfcnvrt	;wreg free
  2783   00589A                     l5225:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2786   00589A  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2787   00589E  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2788   0058A2                     	if	0	;tblptru may be non-zero
  2789   0058A2                     	endif
  2790   0058A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2791   0058A2  0E00               	movlw	low (__mediumconst shr (0+16))
  2792   0058A4  6EF8               	movwf	tblptru,c
  2793   0058A6                     	endif
  2794   0058A6  0008               	tblrd		*
  2795   0058A8  50F5               	movf	tablat,w,c
  2796   0058AA  0900               	iorlw	0
  2797   0058AC  A4D8               	btfss	status,2,c
  2798   0058AE  EF5B  F02C         	goto	u5131
  2799   0058B2  EF5D  F02C         	goto	u5130
  2800   0058B6                     u5131:
  2801   0058B6  EF3E  F02C         	goto	l5223
  2802   0058BA                     u5130:
  2803   0058BA                     
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2805   0058BA  0E00               	movlw	0
  2806   0058BC  0100               	movlb	0	; () banked
  2807   0058BE  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2808   0058C0  0E00               	movlw	0
  2809   0058C2  6FA8               	movwf	?_vfprintf& (0+255),b
  2810   0058C4                     
  2811                           ; BSR set to: 0
  2812   0058C4  0012               	return		;funcret
  2813   0058C6                     __end_of_vfprintf:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _vfpfcnvrt *****************
  2817 ;; Defined at:
  2818 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2821 ;;		 -> sprintf@f(11), 
  2822 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2823 ;;		 -> vfprintf@cfmt(2), 
  2824 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2825 ;;		 -> sprintf@ap(2), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  convarg         8   61[BANK0 ] struct .
  2828 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2829 ;;		 -> STR_1(51), 
  2830 ;;  i               2    0        int 
  2831 ;;  done            2    0        int 
  2832 ;;  c               1   69[BANK0 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2842 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;Total ram usage:       19 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 6
  2849 ;; This function calls:
  2850 ;;		_dtoa
  2851 ;;		_efgtoa
  2852 ;;		_fputc
  2853 ;; This function is called by:
  2854 ;;		_vfprintf
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text4
  2859   0037B6                     __ptext4:
  2860                           	callstack 0
  2861   0037B6                     _vfpfcnvrt:
  2862                           	callstack 22
  2863   0037B6                     
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2865   0037B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866   0037BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867   0037BE  CFDE FFF6          	movff	postinc2,tblptrl
  2868   0037C2  CFDD FFF7          	movff	postdec2,tblptrh
  2869   0037C6                     	if	0	;tblptru may be non-zero
  2870   0037C6                     	endif
  2871   0037C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2872   0037C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2873   0037C8  6EF8               	movwf	tblptru,c
  2874   0037CA                     	endif
  2875   0037CA  0008               	tblrd		*
  2876   0037CC  50F5               	movf	tablat,w,c
  2877   0037CE  0A25               	xorlw	37
  2878   0037D0  A4D8               	btfss	status,2,c
  2879   0037D2  EFED  F01B         	goto	u4961
  2880   0037D6  EFEF  F01B         	goto	u4960
  2881   0037DA                     u4961:
  2882   0037DA  EF47  F01D         	goto	l5073
  2883   0037DE                     u4960:
  2884   0037DE                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2886   0037DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2887   0037E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2888   0037E6  2ADE               	incf	postinc2,f,c
  2889   0037E8  0E00               	movlw	0
  2890   0037EA  22DD               	addwfc	postdec2,f,c
  2891   0037EC                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2893   0037EC  0E00               	movlw	0
  2894   0037EE  0100               	movlb	0	; () banked
  2895   0037F0  6FE8               	movwf	(_width+1)& (0+255),b
  2896   0037F2  0E00               	movlw	0
  2897   0037F4  6FE7               	movwf	_width& (0+255),b
  2898   0037F6  C0E7  F0EB         	movff	_width,_flags
  2899   0037FA                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2902   0037FA  69E9               	setf	_prec& (0+255),b
  2903   0037FC  69EA               	setf	(_prec+1)& (0+255),b
  2904   0037FE                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2907   0037FE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2908   003802  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2909   003806  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2910   00380A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2911   00380E                     
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2914   00380E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2915   003812  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2916   003816                     	if	0	;tblptru may be non-zero
  2917   003816                     	endif
  2918   003816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2919   003816  0E00               	movlw	low (__mediumconst shr (0+16))
  2920   003818  6EF8               	movwf	tblptru,c
  2921   00381A                     	endif
  2922   00381A  0008               	tblrd		*
  2923   00381C  50F5               	movf	tablat,w,c
  2924   00381E  0A64               	xorlw	100
  2925   003820  B4D8               	btfsc	status,2,c
  2926   003822  EF15  F01C         	goto	u4971
  2927   003826  EF17  F01C         	goto	u4970
  2928   00382A                     u4971:
  2929   00382A  EF27  F01C         	goto	l5029
  2930   00382E                     u4970:
  2931   00382E                     
  2932                           ; BSR set to: 0
  2933   00382E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2934   003832  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2935   003836                     	if	0	;tblptru may be non-zero
  2936   003836                     	endif
  2937   003836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2938   003836  0E00               	movlw	low (__mediumconst shr (0+16))
  2939   003838  6EF8               	movwf	tblptru,c
  2940   00383A                     	endif
  2941   00383A  0008               	tblrd		*
  2942   00383C  50F5               	movf	tablat,w,c
  2943   00383E  0A69               	xorlw	105
  2944   003840  A4D8               	btfss	status,2,c
  2945   003842  EF25  F01C         	goto	u4981
  2946   003846  EF27  F01C         	goto	u4980
  2947   00384A                     u4981:
  2948   00384A  EF6A  F01C         	goto	l5035
  2949   00384E                     u4980:
  2950   00384E                     l5029:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2954   00384E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2955   003852  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2956   003856  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2957   00385A  0E02               	movlw	2
  2958   00385C  26DE               	addwf	postinc2,f,c
  2959   00385E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2960   003862  0E00               	movlw	0
  2961   003864  22DD               	addwfc	postdec2,f,c
  2962   003866  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2963   00386A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2964   00386E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2965   003872  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2966   003876  0E00               	movlw	0
  2967   003878  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2968   00387A  0EFF               	movlw	-1
  2969   00387C  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2970   00387E  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2971   003880  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2972   003882  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2973   003884  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2974   003886  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2977   003888  0E01               	movlw	1
  2978   00388A  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2979   00388C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2980   00388E  0E00               	movlw	0
  2981   003890  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2982   003892  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2983   003894  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2984   003898  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2985   00389C  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2986   0038A0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2987   0038A4                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2990   0038A4  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2991   0038A8  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2992   0038AC  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2993   0038B0  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2994   0038B4  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2995   0038B8  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2996   0038BC  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2997   0038C0  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2998   0038C4  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2999   0038C8  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3000   0038CC  ECCE  F01E         	call	_dtoa	;wreg free
  3001   0038D0  EF5D  F01D         	goto	l1466
  3002   0038D4                     l5035:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3006   0038D4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3007   0038D8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3008   0038DC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3009   0038E0  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3010   0038E4                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3013   0038E4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3014   0038E8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3015   0038EC                     	if	0	;tblptru may be non-zero
  3016   0038EC                     	endif
  3017   0038EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3018   0038EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3019   0038EE  6EF8               	movwf	tblptru,c
  3020   0038F0                     	endif
  3021   0038F0  0008               	tblrd		*
  3022   0038F2  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3025   0038F6  EF89  F01C         	goto	l5047
  3026   0038FA                     l5039:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3030   0038FA  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3031   0038FC  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3034   0038FE  EFA2  F01C         	goto	l5049
  3035   003902                     l5041:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3039   003902  0E6C               	movlw	108
  3040   003904  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3043   003906  EFA2  F01C         	goto	l5049
  3044   00390A                     l5043:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3048   00390A  0E00               	movlw	0
  3049   00390C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3052   00390E  EFA2  F01C         	goto	l5049
  3053   003912                     l5047:
  3054                           
  3055                           ; BSR set to: 0
  3056   003912  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3057   003914  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3058   003916  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3059                           
  3060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3061                           ; Switch size 1, requested type "simple"
  3062                           ; Number of cases is 1, Range of values is 0 to 0
  3063                           ; switch strategies available:
  3064                           ; Name         Instructions Cycles
  3065                           ; simple_byte            4     3 (average)
  3066                           ;	Chosen strategy is simple_byte
  3067   003918  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3068   00391A  0A00               	xorlw	0	; case 0
  3069   00391C  B4D8               	btfsc	status,2,c
  3070   00391E  EF93  F01C         	goto	l6025
  3071   003922  EF85  F01C         	goto	l5043
  3072   003926                     l6025:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ; Switch size 1, requested type "simple"
  3076                           ; Number of cases is 3, Range of values is 76 to 108
  3077                           ; switch strategies available:
  3078                           ; Name         Instructions Cycles
  3079                           ; simple_byte           10     6 (average)
  3080                           ;	Chosen strategy is simple_byte
  3081   003926  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3082   003928  0A4C               	xorlw	76	; case 76
  3083   00392A  B4D8               	btfsc	status,2,c
  3084   00392C  EF7D  F01C         	goto	l5039
  3085   003930  0A2A               	xorlw	42	; case 102
  3086   003932  B4D8               	btfsc	status,2,c
  3087   003934  EF81  F01C         	goto	l5041
  3088   003938  0A0A               	xorlw	10	; case 108
  3089   00393A  B4D8               	btfsc	status,2,c
  3090   00393C  EF7D  F01C         	goto	l5039
  3091   003940  EF85  F01C         	goto	l5043
  3092   003944                     l5049:
  3093                           
  3094                           ; BSR set to: 0
  3095   003944  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3096   003948  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3097   00394C                     	if	0	;tblptru may be non-zero
  3098   00394C                     	endif
  3099   00394C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3100   00394C  0E00               	movlw	low (__mediumconst shr (0+16))
  3101   00394E  6EF8               	movwf	tblptru,c
  3102   003950                     	endif
  3103   003950  0008               	tblrd		*
  3104   003952  50F5               	movf	tablat,w,c
  3105   003954  0A66               	xorlw	102
  3106   003956  A4D8               	btfss	status,2,c
  3107   003958  EFB0  F01C         	goto	u4991
  3108   00395C  EFB2  F01C         	goto	u4990
  3109   003960                     u4991:
  3110   003960  EF3E  F01D         	goto	l5069
  3111   003964                     u4990:
  3112   003964  EFE8  F01C         	goto	l5057
  3113   003968                     l5051:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3117   003968  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3118   00396C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3119   003970  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3120   003974  0E04               	movlw	4
  3121   003976  26DE               	addwf	postinc2,f,c
  3122   003978  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3123   00397C  0E00               	movlw	0
  3124   00397E  22DD               	addwfc	postdec2,f,c
  3125   003980  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3126   003984  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3127   003988  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3128   00398C  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3129   003990  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3130   003994  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3133   003998  EFFD  F01C         	goto	l5059
  3134   00399C                     l5053:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3138   00399C  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3139   0039A0  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3140   0039A4  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3141   0039A8  0E04               	movlw	4
  3142   0039AA  26DE               	addwf	postinc2,f,c
  3143   0039AC  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3144   0039B0  0E00               	movlw	0
  3145   0039B2  22DD               	addwfc	postdec2,f,c
  3146   0039B4  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3147   0039B8  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3148   0039BC  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3149   0039C0  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3150   0039C4  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3151   0039C8  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3154   0039CC  EFFD  F01C         	goto	l5059
  3155   0039D0                     l5057:
  3156                           
  3157                           ; BSR set to: 0
  3158   0039D0  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3159   0039D2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3160   0039D4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3161                           
  3162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3163                           ; Switch size 1, requested type "simple"
  3164                           ; Number of cases is 1, Range of values is 0 to 0
  3165                           ; switch strategies available:
  3166                           ; Name         Instructions Cycles
  3167                           ; simple_byte            4     3 (average)
  3168                           ;	Chosen strategy is simple_byte
  3169   0039D6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3170   0039D8  0A00               	xorlw	0	; case 0
  3171   0039DA  B4D8               	btfsc	status,2,c
  3172   0039DC  EFF2  F01C         	goto	l6027
  3173   0039E0  EFFD  F01C         	goto	l5059
  3174   0039E4                     l6027:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 2, Range of values is 76 to 108
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            7     4 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183   0039E4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3184   0039E6  0A4C               	xorlw	76	; case 76
  3185   0039E8  B4D8               	btfsc	status,2,c
  3186   0039EA  EFCE  F01C         	goto	l5053
  3187   0039EE  0A20               	xorlw	32	; case 108
  3188   0039F0  B4D8               	btfsc	status,2,c
  3189   0039F2  EFB4  F01C         	goto	l5051
  3190   0039F6  EFFD  F01C         	goto	l5059
  3191   0039FA                     l5059:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3195   0039FA  0E01               	movlw	1
  3196   0039FC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3197   0039FE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3198   003A00  0E00               	movlw	0
  3199   003A02  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3200   003A04  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3201   003A06  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3202   003A0A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3203   003A0E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3204   003A12  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3207   003A16  EF26  F01D         	goto	l5067
  3208   003A1A                     l5061:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3212   003A1A  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3213   003A1E  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3214   003A22  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3215   003A26  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3216   003A2A  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3217   003A2E  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3218   003A32  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3219   003A36  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3220   003A3A                     	if	0	;tblptru may be non-zero
  3221   003A3A                     	endif
  3222   003A3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3223   003A3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3224   003A3C  6EF8               	movwf	tblptru,c
  3225   003A3E                     	endif
  3226   003A3E  0008               	tblrd		*
  3227   003A40  CFF5 F066          	movff	tablat,efgtoa@c
  3228   003A44  EC4F  F00C         	call	_efgtoa	;wreg free
  3229   003A48  EF5D  F01D         	goto	l1466
  3230   003A4C                     l5067:
  3231                           
  3232                           ; BSR set to: 0
  3233   003A4C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3234   003A50  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3235   003A54                     	if	0	;tblptru may be non-zero
  3236   003A54                     	endif
  3237   003A54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3238   003A54  0E00               	movlw	low (__mediumconst shr (0+16))
  3239   003A56  6EF8               	movwf	tblptru,c
  3240   003A58                     	endif
  3241   003A58  0008               	tblrd		*
  3242   003A5A  50F5               	movf	tablat,w,c
  3243   003A5C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3244   003A5E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3245                           
  3246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 1, Range of values is 0 to 0
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            4     3 (average)
  3252                           ;	Chosen strategy is simple_byte
  3253   003A60  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3254   003A62  0A00               	xorlw	0	; case 0
  3255   003A64  B4D8               	btfsc	status,2,c
  3256   003A66  EF37  F01D         	goto	l6029
  3257   003A6A  EF3E  F01D         	goto	l5069
  3258   003A6E                     l6029:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ; Switch size 1, requested type "simple"
  3262                           ; Number of cases is 1, Range of values is 102 to 102
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte            4     3 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267   003A6E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3268   003A70  0A66               	xorlw	102	; case 102
  3269   003A72  B4D8               	btfsc	status,2,c
  3270   003A74  EF0D  F01D         	goto	l5061
  3271   003A78  EF3E  F01D         	goto	l5069
  3272   003A7C                     l5069:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3275   003A7C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3276   003A80  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3277   003A84  2ADE               	incf	postinc2,f,c
  3278   003A86  0E00               	movlw	0
  3279   003A88  22DD               	addwfc	postdec2,f,c
  3280   003A8A  EF5D  F01D         	goto	l1466
  3281   003A8E                     l5073:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3284   003A8E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3285   003A92  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3286   003A96  CFDE FFF6          	movff	postinc2,tblptrl
  3287   003A9A  CFDD FFF7          	movff	postdec2,tblptrh
  3288   003A9E                     	if	0	;tblptru may be non-zero
  3289   003A9E                     	endif
  3290   003A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3291   003A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  3292   003AA0  6EF8               	movwf	tblptru,c
  3293   003AA2                     	endif
  3294   003AA2  0008               	tblrd		*
  3295   003AA4  50F5               	movf	tablat,w,c
  3296   003AA6  6E01               	movwf	fputc@c^0,c
  3297   003AA8  6A02               	clrf	(fputc@c+1)^0,c
  3298   003AAA  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3299   003AAE  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3300   003AB2  EC90  F026         	call	_fputc	;wreg free
  3301   003AB6  EF3E  F01D         	goto	l5069
  3302   003ABA                     l1466:
  3303   003ABA  0012               	return		;funcret
  3304   003ABC                     __end_of_vfpfcnvrt:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _efgtoa *****************
  3308 ;; Defined at:
  3309 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3312 ;;		 -> sprintf@f(11), 
  3313 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3314 ;;  c               1    6[BANK0 ] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  u               4   49[BANK0 ] struct flui
  3317 ;;  g               4   45[BANK0 ] struct flui
  3318 ;;  l               4   38[BANK0 ] struct flui
  3319 ;;  h               4   34[BANK0 ] struct flui
  3320 ;;  ou              4   28[BANK0 ] struct flui
  3321 ;;  n               2   43[BANK0 ] int 
  3322 ;;  i               2   32[BANK0 ] int 
  3323 ;;  w               2   26[BANK0 ] int 
  3324 ;;  e               2   24[BANK0 ] int 
  3325 ;;  m               2   22[BANK0 ] int 
  3326 ;;  d               2   20[BANK0 ] int 
  3327 ;;  t               2   13[BANK0 ] int 
  3328 ;;  p               2   11[BANK0 ] int 
  3329 ;;  ne              2    9[BANK0 ] int 
  3330 ;;  sign            1   42[BANK0 ] unsigned char 
  3331 ;;  nmode           1   19[BANK0 ] unsigned char 
  3332 ;;  mode            1   18[BANK0 ] unsigned char 
  3333 ;;  pp              1   17[BANK0 ] unsigned char 
  3334 ;;  esign           1    0        unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3344 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;Total ram usage:       53 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 5
  3351 ;; This function calls:
  3352 ;;		___fladd
  3353 ;;		___fldiv
  3354 ;;		___fleq
  3355 ;;		___flge
  3356 ;;		___flmul
  3357 ;;		___flneg
  3358 ;;		___flsub
  3359 ;;		___fltol
  3360 ;;		___fpclassifyf
  3361 ;;		_floorf
  3362 ;;		_labs
  3363 ;;		_memcpy
  3364 ;;		_pad
  3365 ;;		_strcpy
  3366 ;; This function is called by:
  3367 ;;		_vfpfcnvrt
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text5
  3372   00189E                     __ptext5:
  3373                           	callstack 0
  3374   00189E                     _efgtoa:
  3375                           	callstack 22
  3376   00189E                     
  3377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3378   00189E  0E00               	movlw	0
  3379   0018A0  0100               	movlb	0	; () banked
  3380   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  3381   0018A4                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3384   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3385   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3386   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3387   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3388   0018B4                     
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3391   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3392   0018B6  EF61  F00C         	goto	u4610
  3393   0018BA  EF5F  F00C         	goto	u4611
  3394   0018BE                     u4611:
  3395   0018BE  EF75  F00C         	goto	l4739
  3396   0018C2                     u4610:
  3397   0018C2                     
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3400   0018C2  0E01               	movlw	1
  3401   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  3402   0018C6                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3405   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3406   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3407   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3408   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3409   0018D6  EC7C  F02F         	call	___flneg	;wreg free
  3410   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  3411   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3412   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3413   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3414   0018EA                     l4739:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3417   0018EA  0E00               	movlw	0
  3418   0018EC  0100               	movlb	0	; () banked
  3419   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3420   0018F0  0E00               	movlw	0
  3421   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  3422   0018F4                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3425   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  3426   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3427   0018FC                     
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3430   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  3431   0018FE  B4D8               	btfsc	status,2,c
  3432   001900  EF84  F00C         	goto	u4621
  3433   001904  EF86  F00C         	goto	u4620
  3434   001908                     u4621:
  3435   001908  EF9A  F00C         	goto	l4753
  3436   00190C                     u4620:
  3437   00190C                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3440   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  3441   00190E  A4D8               	btfss	status,2,c
  3442   001910  EF8C  F00C         	goto	u4631
  3443   001914  EF8E  F00C         	goto	u4630
  3444   001918                     u4631:
  3445   001918  EF94  F00C         	goto	l4749
  3446   00191C                     u4630:
  3447   00191C                     
  3448                           ; BSR set to: 0
  3449   00191C  0E00               	movlw	0
  3450   00191E  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3451   001920  0E2B               	movlw	43
  3452   001922  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3453   001924  EF98  F00C         	goto	l4751
  3454   001928                     l4749:
  3455                           
  3456                           ; BSR set to: 0
  3457   001928  0E00               	movlw	0
  3458   00192A  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3459   00192C  0E2D               	movlw	45
  3460   00192E  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3461   001930                     l4751:
  3462                           
  3463                           ; BSR set to: 0
  3464   001930  C06F  F08A         	movff	_efgtoa$2852,efgtoa@sign
  3465   001934                     l4753:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3469   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3470   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3471   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3472   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3473   001944  EC11  F026         	call	___fpclassifyf	;wreg free
  3474   001948  0401               	decf	?___fpclassifyf^0,w,c
  3475   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3476   00194C  A4D8               	btfss	status,2,c
  3477   00194E  EFAB  F00C         	goto	u4641
  3478   001952  EFAD  F00C         	goto	u4640
  3479   001956                     u4641:
  3480   001956  EFE0  F00C         	goto	l4771
  3481   00195A                     u4640:
  3482   00195A                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3484   00195A  0100               	movlb	0	; () banked
  3485   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  3486   00195E  B4D8               	btfsc	status,2,c
  3487   001960  EFB4  F00C         	goto	u4651
  3488   001964  EFB6  F00C         	goto	u4650
  3489   001968                     u4651:
  3490   001968  EFBF  F00C         	goto	l4763
  3491   00196C                     u4650:
  3492   00196C                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3495   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3496   001970                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3499   001970  077A               	decf	efgtoa@w& (0+255),f,b
  3500   001972  A0D8               	btfss	status,0,c
  3501   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3502   001976                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3505   001976  0E00               	movlw	0
  3506   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3507   00197A  0E01               	movlw	1
  3508   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  3509   00197E                     l4763:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3513   00197E  0EA0               	movlw	low _dbuf
  3514   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  3515   001982  6E01               	movwf	strcpy@dest^0,c
  3516   001984  0E02               	movlw	high _dbuf
  3517   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3518   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  3519   00198A  0E34               	movlw	low STR_2
  3520   00198C  6E03               	movwf	strcpy@src^0,c
  3521   00198E  0E0E               	movlw	high STR_2
  3522   001990  6E04               	movwf	(strcpy@src+1)^0,c
  3523   001992  ECB9  F02E         	call	_strcpy	;wreg free
  3524   001996                     l4765:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3527   001996  0100               	movlb	0	; () banked
  3528   001998  0EFD               	movlw	253
  3529   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  3530   00199C  0EFF               	movlw	255
  3531   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3532   0019A0                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3535   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  3536   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3537   0019A8  0EA0               	movlw	low _dbuf
  3538   0019AA  6E13               	movwf	pad@buf^0,c
  3539   0019AC  0E02               	movlw	high _dbuf
  3540   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  3541   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  3542   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3543   0019B8  EC14  F02A         	call	_pad	;wreg free
  3544   0019BC  EF4B  F011         	goto	l1418
  3545   0019C0                     l4771:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3548   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3549   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3550   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3551   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3552   0019D0  EC11  F026         	call	___fpclassifyf	;wreg free
  3553   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  3554   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3555   0019D8  A4D8               	btfss	status,2,c
  3556   0019DA  EFF1  F00C         	goto	u4661
  3557   0019DE  EFF3  F00C         	goto	u4660
  3558   0019E2                     u4661:
  3559   0019E2  EF13  F00D         	goto	l4789
  3560   0019E6                     u4660:
  3561   0019E6                     
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3563   0019E6  0100               	movlb	0	; () banked
  3564   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  3565   0019EA  B4D8               	btfsc	status,2,c
  3566   0019EC  EFFA  F00C         	goto	u4671
  3567   0019F0  EFFC  F00C         	goto	u4670
  3568   0019F4                     u4671:
  3569   0019F4  EF05  F00D         	goto	l4781
  3570   0019F8                     u4670:
  3571   0019F8                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3574   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3575   0019FC                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3578   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3579   0019FE  A0D8               	btfss	status,0,c
  3580   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3581   001A02                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3584   001A02  0E00               	movlw	0
  3585   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3586   001A06  0E01               	movlw	1
  3587   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3588   001A0A                     l4781:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3592   001A0A  0EA0               	movlw	low _dbuf
  3593   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3594   001A0E  6E01               	movwf	strcpy@dest^0,c
  3595   001A10  0E02               	movlw	high _dbuf
  3596   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3597   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3598   001A16  0E38               	movlw	low STR_5
  3599   001A18  6E03               	movwf	strcpy@src^0,c
  3600   001A1A  0E0E               	movlw	high STR_5
  3601   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3602   001A1E  ECB9  F02E         	call	_strcpy	;wreg free
  3603   001A22  EFCB  F00C         	goto	l4765
  3604   001A26                     l4789:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3607   001A26  0E00               	movlw	0
  3608   001A28  0100               	movlb	0	; () banked
  3609   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3610   001A2C  0E00               	movlw	0
  3611   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3612   001A30  0E80               	movlw	128
  3613   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3614   001A34  0E3F               	movlw	63
  3615   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3618   001A38  0E00               	movlw	0
  3619   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3620   001A3C  0E00               	movlw	0
  3621   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3622   001A40                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3625   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3626   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3627   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3628   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3629   001A50  0E00               	movlw	0
  3630   001A52  6E36               	movwf	___fleq@ff2^0,c
  3631   001A54  0E00               	movlw	0
  3632   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3633   001A58  0E00               	movlw	0
  3634   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3635   001A5C  0E00               	movlw	0
  3636   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3637   001A60  EC00  F028         	call	___fleq	;wreg free
  3638   001A64  B0D8               	btfsc	status,0,c
  3639   001A66  EF37  F00D         	goto	u4681
  3640   001A6A  EF39  F00D         	goto	u4680
  3641   001A6E                     u4681:
  3642   001A6E  EF18  F00E         	goto	l1421
  3643   001A72                     u4680:
  3644   001A72  EF46  F00D         	goto	l4797
  3645   001A76                     l1423:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3648   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3649   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3650   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3651   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3652   001A86                     
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3654   001A86  0100               	movlb	0	; () banked
  3655   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3656   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3657   001A8C                     l4797:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3660   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3661   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3662   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3663   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3664   001A9C  0E00               	movlw	0
  3665   001A9E  6E15               	movwf	___flmul@a^0,c
  3666   001AA0  0E00               	movlw	0
  3667   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3668   001AA4  0E20               	movlw	32
  3669   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3670   001AA8  0E41               	movlw	65
  3671   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3672   001AAC  EC62  F016         	call	___flmul	;wreg free
  3673   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3674   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3675   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3676   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3677   001AC0  0100               	movlb	0	; () banked
  3678   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3679   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3680   001AC6  6E01               	movwf	labs@a^0,c
  3681   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3682   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3683   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3684   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3685   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3686   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3687   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3688   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3689   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3690   001ADA  ECC0  F02A         	call	_labs	;wreg free
  3691   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3692   001AE0  EF7D  F00D         	goto	u4691
  3693   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3694   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3695   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3696   001AEA  E109               	bnz	u4690
  3697   001AEC  0E02               	movlw	2
  3698   001AEE  5C01               	subwf	?_labs^0,w,c
  3699   001AF0  A0D8               	btfss	status,0,c
  3700   001AF2  EF7D  F00D         	goto	u4691
  3701   001AF6  EF7F  F00D         	goto	u4690
  3702   001AFA                     u4691:
  3703   001AFA  EF3B  F00D         	goto	l1423
  3704   001AFE                     u4690:
  3705   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3706   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3707   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3708   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3709   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3710   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3711   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3712   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3713   001B1E  EC8F  F025         	call	___flge	;wreg free
  3714   001B22  A0D8               	btfss	status,0,c
  3715   001B24  EF96  F00D         	goto	u4701
  3716   001B28  EF98  F00D         	goto	u4700
  3717   001B2C                     u4701:
  3718   001B2C  EF3B  F00D         	goto	l1423
  3719   001B30                     u4700:
  3720   001B30                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3722   001B30  0100               	movlb	0	; () banked
  3723   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3724   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3725   001B36  6E01               	movwf	labs@a^0,c
  3726   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3727   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3728   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3729   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3730   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3731   001B42  6E03               	movwf	(labs@a+2)^0,c
  3732   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3733   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3734   001B48  6E04               	movwf	(labs@a+3)^0,c
  3735   001B4A  ECC0  F02A         	call	_labs	;wreg free
  3736   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3737   001B50  EFB7  F00D         	goto	u4710
  3738   001B54  5004               	movf	(?_labs+3)^0,w,c
  3739   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3740   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3741   001B5A  E107               	bnz	u4711
  3742   001B5C  0E02               	movlw	2
  3743   001B5E  5C01               	subwf	?_labs^0,w,c
  3744   001B60  B0D8               	btfsc	status,0,c
  3745   001B62  EFB5  F00D         	goto	u4711
  3746   001B66  EFB7  F00D         	goto	u4710
  3747   001B6A                     u4711:
  3748   001B6A  EFFF  F00D         	goto	l4815
  3749   001B6E                     u4710:
  3750   001B6E                     l4805:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3753   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3754   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3755   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3756   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3759   001B7E  EF18  F00E         	goto	l1421
  3760   001B82                     l4807:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3763   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3764   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3765   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3766   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3767   001B92  0E00               	movlw	0
  3768   001B94  6E36               	movwf	___fldiv@a^0,c
  3769   001B96  0E00               	movlw	0
  3770   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3771   001B9A  0E20               	movlw	32
  3772   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3773   001B9E  0E41               	movlw	65
  3774   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3775   001BA2  EC77  F018         	call	___fldiv	;wreg free
  3776   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3777   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3778   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3779   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3780   001BB6                     
  3781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3782   001BB6  0100               	movlb	0	; () banked
  3783   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3784   001BBA  A0D8               	btfss	status,0,c
  3785   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3786   001BBE                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3789   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3790   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3791   001BC2  6E01               	movwf	labs@a^0,c
  3792   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3793   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3794   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3795   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3796   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3797   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3798   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3799   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3800   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3801   001BD6  ECC0  F02A         	call	_labs	;wreg free
  3802   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3803   001BDC  EFFD  F00D         	goto	u4720
  3804   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3805   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3806   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3807   001BE6  E107               	bnz	u4721
  3808   001BE8  0E02               	movlw	2
  3809   001BEA  5C01               	subwf	?_labs^0,w,c
  3810   001BEC  B0D8               	btfsc	status,0,c
  3811   001BEE  EFFB  F00D         	goto	u4721
  3812   001BF2  EFFD  F00D         	goto	u4720
  3813   001BF6                     u4721:
  3814   001BF6  EFFF  F00D         	goto	l4815
  3815   001BFA                     u4720:
  3816   001BFA  EFB7  F00D         	goto	l4805
  3817   001BFE                     l4815:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3820   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3821   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3822   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3823   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3824   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3825   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3826   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3827   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3828   001C1E  EC8F  F025         	call	___flge	;wreg free
  3829   001C22  A0D8               	btfss	status,0,c
  3830   001C24  EF16  F00E         	goto	u4731
  3831   001C28  EF18  F00E         	goto	u4730
  3832   001C2C                     u4731:
  3833   001C2C  EFC1  F00D         	goto	l4807
  3834   001C30                     u4730:
  3835   001C30                     l1421:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3838   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3841   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3842   001C38                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3844   001C38  0100               	movlb	0	; () banked
  3845   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3846   001C3C  EF22  F00E         	goto	u4741
  3847   001C40  EF24  F00E         	goto	u4740
  3848   001C44                     u4741:
  3849   001C44  EF2A  F00E         	goto	l4821
  3850   001C48                     u4740:
  3851   001C48                     
  3852                           ; BSR set to: 0
  3853   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3854   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3855   001C50  EF2E  F00E         	goto	l4823
  3856   001C54                     l4821:
  3857                           
  3858                           ; BSR set to: 0
  3859   001C54  0E00               	movlw	0
  3860   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3861   001C58  0E06               	movlw	6
  3862   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3863   001C5C                     l4823:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3867   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3868   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3869   001C64                     
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3872   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3873   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3874   001C68                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3877   001C68  0E66               	movlw	102
  3878   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3879   001C6C  A4D8               	btfss	status,2,c
  3880   001C6E  EF3B  F00E         	goto	u4751
  3881   001C72  EF3D  F00E         	goto	u4750
  3882   001C76                     u4751:
  3883   001C76  EF5D  F00E         	goto	l4837
  3884   001C7A                     u4750:
  3885   001C7A                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3888   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3889   001C7C  EF44  F00E         	goto	u4760
  3890   001C80  EF42  F00E         	goto	u4761
  3891   001C84                     u4761:
  3892   001C84  EF50  F00E         	goto	l4833
  3893   001C88                     u4760:
  3894   001C88                     
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3897   001C88  0E00               	movlw	0
  3898   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3899   001C8C  0E00               	movlw	0
  3900   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3901   001C90  0E80               	movlw	128
  3902   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3903   001C94  0E3F               	movlw	63
  3904   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3907   001C98  0E00               	movlw	0
  3908   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3909   001C9C  0E00               	movlw	0
  3910   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3911   001CA0                     l4833:
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3915   001CA0  0E67               	movlw	103
  3916   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3917   001CA4  B4D8               	btfsc	status,2,c
  3918   001CA6  EF57  F00E         	goto	u4771
  3919   001CAA  EF59  F00E         	goto	u4770
  3920   001CAE                     u4771:
  3921   001CAE  EF5D  F00E         	goto	l4837
  3922   001CB2                     u4770:
  3923   001CB2                     
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3926   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3927   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3928   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3929   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3930   001CBA                     l4837:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3934   001CBA  0E00               	movlw	0
  3935   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3936   001CBE  0E00               	movlw	0
  3937   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3938   001CC2                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3941   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3942   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3943   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3944   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3945   001CD2                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3948   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3949   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3950   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3951   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3954   001CE2  EFEE  F00E         	goto	l4851
  3955   001CE6                     l4843:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3959   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3960   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3961   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3962   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3963   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3964   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3965   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3966   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3967   001D06  EC77  F018         	call	___fldiv	;wreg free
  3968   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3969   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3970   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3971   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3972   001D1A  EC0D  F020         	call	_floorf	;wreg free
  3973   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3974   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3975   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3976   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3979   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3980   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3981   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3982   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3983   001D3E  EC0C  F025         	call	___fltol	;wreg free
  3984   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3985   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3986   001D4A                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3988   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3989   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3990   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3991   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3992   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3993   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3994   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3995   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3996   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3997   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3998   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3999   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4000   001D7A  EC62  F016         	call	___flmul	;wreg free
  4001   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  4002   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4003   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4004   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4005   001D8E  EC96  F02E         	call	___flsub	;wreg free
  4006   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  4007   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4008   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4009   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4010   001DA2                     
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4012   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  4013   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4014   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4015   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4016   001DB2  0E00               	movlw	0
  4017   001DB4  6E36               	movwf	___fldiv@a^0,c
  4018   001DB6  0E00               	movlw	0
  4019   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  4020   001DBA  0E20               	movlw	32
  4021   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  4022   001DBE  0E41               	movlw	65
  4023   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  4024   001DC2  EC77  F018         	call	___fldiv	;wreg free
  4025   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  4026   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4027   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4028   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4029   001DD6                     
  4030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4031   001DD6  0100               	movlb	0	; () banked
  4032   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4033   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4034   001DDC                     l4851:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4038   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  4039   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4040   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4041   001DE2  0A80               	xorlw	128
  4042   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  4043   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4044   001DE8  0A80               	xorlw	128
  4045   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  4046   001DEC  A0D8               	btfss	status,0,c
  4047   001DEE  EFFB  F00E         	goto	u4781
  4048   001DF2  EFFD  F00E         	goto	u4780
  4049   001DF6                     u4781:
  4050   001DF6  EF73  F00E         	goto	l4843
  4051   001DFA                     u4780:
  4052   001DFA                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4055   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4056   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4057   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4058   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4059   001E0A  0E00               	movlw	0
  4060   001E0C  6E15               	movwf	___flmul@a^0,c
  4061   001E0E  0E00               	movlw	0
  4062   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  4063   001E12  0EA0               	movlw	160
  4064   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  4065   001E16  0E40               	movlw	64
  4066   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  4067   001E1A  EC62  F016         	call	___flmul	;wreg free
  4068   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  4069   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4070   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4071   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4072   001E2E                     
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4074   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4075   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4076   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4077   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4078   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4079   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4080   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4081   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4082   001E4E  EC8F  F025         	call	___flge	;wreg free
  4083   001E52  B0D8               	btfsc	status,0,c
  4084   001E54  EF2E  F00F         	goto	u4791
  4085   001E58  EF30  F00F         	goto	u4790
  4086   001E5C                     u4791:
  4087   001E5C  EF3B  F00F         	goto	l4859
  4088   001E60                     u4790:
  4089   001E60                     
  4090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4091   001E60  0E00               	movlw	0
  4092   001E62  0100               	movlb	0	; () banked
  4093   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  4094   001E66  0E00               	movlw	0
  4095   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4096   001E6A  0E00               	movlw	0
  4097   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4098   001E6E  0E00               	movlw	0
  4099   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4100                           
  4101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4102   001E72  EF64  F00F         	goto	l4865
  4103   001E76                     l4859:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4106   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4107   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4108   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4109   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4110   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4111   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4112   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4113   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4114   001E96  EC00  F028         	call	___fleq	;wreg free
  4115   001E9A  A0D8               	btfss	status,0,c
  4116   001E9C  EF52  F00F         	goto	u4801
  4117   001EA0  EF54  F00F         	goto	u4800
  4118   001EA4                     u4801:
  4119   001EA4  EF64  F00F         	goto	l4865
  4120   001EA8                     u4800:
  4121   001EA8  0100               	movlb	0	; () banked
  4122   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  4123   001EAC  EF5A  F00F         	goto	u4811
  4124   001EB0  EF5C  F00F         	goto	u4810
  4125   001EB4                     u4811:
  4126   001EB4  EF64  F00F         	goto	l4865
  4127   001EB8                     u4810:
  4128   001EB8                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4131   001EB8  0E00               	movlw	0
  4132   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  4133   001EBC  0E00               	movlw	0
  4134   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4135   001EC0  0E00               	movlw	0
  4136   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4137   001EC4  0E00               	movlw	0
  4138   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4139   001EC8                     l4865:
  4140                           
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4142   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  4143   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4144   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4145   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4146   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  4147   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4148   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4149   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4150   001EE8  EC02  F014         	call	___fladd	;wreg free
  4151   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  4152   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4153   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4154   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4155   001EFC                     
  4156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4157   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4158   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4159   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4160   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4161   001F0C  0E00               	movlw	0
  4162   001F0E  6E15               	movwf	___flmul@a^0,c
  4163   001F10  0E00               	movlw	0
  4164   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  4165   001F14  0E20               	movlw	32
  4166   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  4167   001F18  0E41               	movlw	65
  4168   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  4169   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4170   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4171   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4172   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4173   001F2C  EC62  F016         	call	___flmul	;wreg free
  4174   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  4175   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4176   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4177   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4178   001F40  EC8F  F025         	call	___flge	;wreg free
  4179   001F44  A0D8               	btfss	status,0,c
  4180   001F46  EFA7  F00F         	goto	u4821
  4181   001F4A  EFA9  F00F         	goto	u4820
  4182   001F4E                     u4821:
  4183   001F4E  EFD2  F00F         	goto	l4877
  4184   001F52                     u4820:
  4185   001F52                     
  4186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4187   001F52  0100               	movlb	0	; () banked
  4188   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4189   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4190   001F58                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4193   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4194   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4195   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4196   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4197   001F68  0E00               	movlw	0
  4198   001F6A  6E15               	movwf	___flmul@a^0,c
  4199   001F6C  0E00               	movlw	0
  4200   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  4201   001F70  0E20               	movlw	32
  4202   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  4203   001F74  0E41               	movlw	65
  4204   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  4205   001F78  EC62  F016         	call	___flmul	;wreg free
  4206   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4207   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4208   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4209   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4210   001F8C                     
  4211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4212   001F8C  0E66               	movlw	102
  4213   001F8E  0100               	movlb	0	; () banked
  4214   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4215   001F92  A4D8               	btfss	status,2,c
  4216   001F94  EFCE  F00F         	goto	u4831
  4217   001F98  EFD0  F00F         	goto	u4830
  4218   001F9C                     u4831:
  4219   001F9C  EFD2  F00F         	goto	l4877
  4220   001FA0                     u4830:
  4221   001FA0                     
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4224   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4225   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4226   001FA4                     l4877:
  4227                           
  4228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4229   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4230   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4231   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4232   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4233   001FB4                     
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4235   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4236   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4237   001FBC                     
  4238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4239   001FBC  0E00               	movlw	0
  4240   001FBE  0100               	movlb	0	; () banked
  4241   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  4242   001FC2                     
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4245   001FC2  0E00               	movlw	0
  4246   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4247   001FC6  0E00               	movlw	0
  4248   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  4249   001FCA                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4252   001FCA  0E00               	movlw	0
  4253   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4254   001FCE  0E00               	movlw	0
  4255   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4258   001FD2  EFD0  F010         	goto	l4927
  4259   001FD6                     l4887:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4263   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  4264   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4265   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4266   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4267   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  4268   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4269   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4270   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4271   001FF6  EC77  F018         	call	___fldiv	;wreg free
  4272   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  4273   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4274   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4275   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4276   00200A  EC0D  F020         	call	_floorf	;wreg free
  4277   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  4278   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4279   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4280   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4283   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4284   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4285   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4286   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4287   00202E  EC0C  F025         	call	___fltol	;wreg free
  4288   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  4289   002034  EF27  F010         	goto	u4840
  4290   002038  5002               	movf	(?___fltol+1)^0,w,c
  4291   00203A  E107               	bnz	u4841
  4292   00203C  0E0A               	movlw	10
  4293   00203E  5C01               	subwf	?___fltol^0,w,c
  4294   002040  B0D8               	btfsc	status,0,c
  4295   002042  EF25  F010         	goto	u4841
  4296   002046  EF27  F010         	goto	u4840
  4297   00204A                     u4841:
  4298   00204A  EF37  F010         	goto	l4891
  4299   00204E                     u4840:
  4300   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4301   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4302   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4303   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4304   00205E  EC0C  F025         	call	___fltol	;wreg free
  4305   002062  C001  F074         	movff	?___fltol,efgtoa@d
  4306   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4307   00206A  EF3C  F010         	goto	l1451
  4308   00206E                     l4891:
  4309   00206E  0E00               	movlw	0
  4310   002070  0100               	movlb	0	; () banked
  4311   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4312   002074  0E09               	movlw	9
  4313   002076  6F74               	movwf	efgtoa@d& (0+255),b
  4314   002078                     l1451:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4317   002078  0100               	movlb	0	; () banked
  4318   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  4319   00207C  A4D8               	btfss	status,2,c
  4320   00207E  EF43  F010         	goto	u4851
  4321   002082  EF45  F010         	goto	u4850
  4322   002086                     u4851:
  4323   002086  EF6D  F010         	goto	l4911
  4324   00208A                     u4850:
  4325   00208A                     
  4326                           ; BSR set to: 0
  4327   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4328   00208C  EF4C  F010         	goto	u4860
  4329   002090  EF4A  F010         	goto	u4861
  4330   002094                     u4861:
  4331   002094  EF6D  F010         	goto	l4911
  4332   002098                     u4860:
  4333   002098                     
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4336   002098  0EA0               	movlw	low _dbuf
  4337   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  4338   00209C  6ED9               	movwf	fsr2l,c
  4339   00209E  0E02               	movlw	high _dbuf
  4340   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4341   0020A2  6EDA               	movwf	fsr2h,c
  4342   0020A4  0E2E               	movlw	46
  4343   0020A6  6EDF               	movwf	indf2,c
  4344   0020A8                     
  4345                           ; BSR set to: 0
  4346   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4347   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4348   0020AC                     
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4351   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  4352   0020AE  A0D8               	btfss	status,0,c
  4353   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4354   0020B2                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4357   0020B2  0E01               	movlw	1
  4358   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  4359   0020B6  EF6D  F010         	goto	l4911
  4360   0020BA                     l4903:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4364   0020BA  0EA0               	movlw	low _dbuf
  4365   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  4366   0020BE  6ED9               	movwf	fsr2l,c
  4367   0020C0  0E02               	movlw	high _dbuf
  4368   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4369   0020C4  6EDA               	movwf	fsr2h,c
  4370   0020C6  0E30               	movlw	48
  4371   0020C8  6EDF               	movwf	indf2,c
  4372   0020CA                     
  4373                           ; BSR set to: 0
  4374   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4375   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4376   0020CE                     
  4377                           ; BSR set to: 0
  4378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4379   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  4380   0020D0  A0D8               	btfss	status,0,c
  4381   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4382   0020D4                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4385   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  4386   0020D6  A0D8               	btfss	status,0,c
  4387   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4388   0020DA                     l4911:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4392   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  4393   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4394   0020DE  A4D8               	btfss	status,2,c
  4395   0020E0  EF74  F010         	goto	u4871
  4396   0020E4  EF76  F010         	goto	u4870
  4397   0020E8                     u4871:
  4398   0020E8  EF5D  F010         	goto	l4903
  4399   0020EC                     u4870:
  4400   0020EC                     
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4403   0020EC  0EA0               	movlw	low _dbuf
  4404   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  4405   0020F0  6ED9               	movwf	fsr2l,c
  4406   0020F2  0E02               	movlw	high _dbuf
  4407   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4408   0020F6  6EDA               	movwf	fsr2h,c
  4409   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  4410   0020FA  0F30               	addlw	48
  4411   0020FC  6EDF               	movwf	indf2,c
  4412   0020FE                     
  4413                           ; BSR set to: 0
  4414   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4415   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4416   002102                     
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4419   002102  077A               	decf	efgtoa@w& (0+255),f,b
  4420   002104  A0D8               	btfss	status,0,c
  4421   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4422   002108                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4425   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  4426   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4427   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4428   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4429   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  4430   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4431   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4432   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4433   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  4434   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4435   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4436   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4437   002138  EC62  F016         	call	___flmul	;wreg free
  4438   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  4439   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4440   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4441   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4442   00214C  EC96  F02E         	call	___flsub	;wreg free
  4443   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  4444   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4445   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4446   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4447   002160                     
  4448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4449   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  4450   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4451   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4452   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4453   002170  0E00               	movlw	0
  4454   002172  6E36               	movwf	___fldiv@a^0,c
  4455   002174  0E00               	movlw	0
  4456   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  4457   002178  0E20               	movlw	32
  4458   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  4459   00217C  0E41               	movlw	65
  4460   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  4461   002180  EC77  F018         	call	___fldiv	;wreg free
  4462   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  4463   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4464   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4465   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4466   002194                     
  4467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4468   002194  0100               	movlb	0	; () banked
  4469   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  4470   002198  A0D8               	btfss	status,0,c
  4471   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4472   00219C                     
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4475   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4476   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4477   0021A0                     l4927:
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4481   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  4482   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  4483   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4484   0021A6  0A80               	xorlw	128
  4485   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  4486   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4487   0021AC  0A80               	xorlw	128
  4488   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  4489   0021B0  B0D8               	btfsc	status,0,c
  4490   0021B2  EFDD  F010         	goto	u4881
  4491   0021B6  EFDF  F010         	goto	u4880
  4492   0021BA                     u4881:
  4493   0021BA  EFED  F010         	goto	l4931
  4494   0021BE                     u4880:
  4495   0021BE                     
  4496                           ; BSR set to: 0
  4497   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4498   0021C0  EFEB  F010         	goto	u4891
  4499   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4500   0021C6  E109               	bnz	u4890
  4501   0021C8  0E4B               	movlw	75
  4502   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4503   0021CC  A0D8               	btfss	status,0,c
  4504   0021CE  EFEB  F010         	goto	u4891
  4505   0021D2  EFED  F010         	goto	u4890
  4506   0021D6                     u4891:
  4507   0021D6  EFEB  F00F         	goto	l4887
  4508   0021DA                     u4890:
  4509   0021DA                     l4931:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4513   0021DA  0E00               	movlw	0
  4514   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4515   0021DE  0E4F               	movlw	79
  4516   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  4517   0021E2                     
  4518                           ; BSR set to: 0
  4519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4520   0021E2  0EA0               	movlw	low _dbuf
  4521   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  4522   0021E6  6ED9               	movwf	fsr2l,c
  4523   0021E8  0E02               	movlw	high _dbuf
  4524   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4525   0021EC  6EDA               	movwf	fsr2h,c
  4526   0021EE  0E00               	movlw	0
  4527   0021F0  6EDF               	movwf	indf2,c
  4528   0021F2                     
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4531   0021F2  0EA0               	movlw	low _dbuf
  4532   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  4533   0021F6  0E02               	movlw	high _dbuf
  4534   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4535   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4536   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  4537   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4538   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4539   002202  5180               	movf	efgtoa@i& (0+255),w,b
  4540   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  4541   002206  6E01               	movwf	memcpy@d1^0,c
  4542   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4543   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4544   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  4545   00220E  0EA0               	movlw	low _dbuf
  4546   002210  6E03               	movwf	memcpy@s1^0,c
  4547   002212  0E02               	movlw	high _dbuf
  4548   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  4549   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  4550   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4551   00221E  EC59  F02D         	call	_memcpy	;wreg free
  4552   002222                     
  4553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4554   002222  0100               	movlb	0	; () banked
  4555   002224  518B               	movf	efgtoa@n& (0+255),w,b
  4556   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  4557   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  4558   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4559   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4560   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4561   002230                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4564   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  4565   002232  A4D8               	btfss	status,2,c
  4566   002234  EF1E  F011         	goto	u4901
  4567   002238  EF21  F011         	goto	u4900
  4568   00223C                     u4901:
  4569   00223C  0E01               	movlw	1
  4570   00223E  EF22  F011         	goto	u4910
  4571   002242                     u4900:
  4572   002242  0E00               	movlw	0
  4573   002244                     u4910:
  4574   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4575   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4576   002248                     
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4579   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4580   00224A  B4D8               	btfsc	status,2,c
  4581   00224C  EF2A  F011         	goto	u4921
  4582   002250  EF2C  F011         	goto	u4920
  4583   002254                     u4921:
  4584   002254  EF37  F011         	goto	l4945
  4585   002258                     u4920:
  4586   002258                     
  4587                           ; BSR set to: 0
  4588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4589   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4590   00225A  A0D8               	btfss	status,0,c
  4591   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4592   00225E  0EA0               	movlw	low _dbuf
  4593   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4594   002262  6ED9               	movwf	fsr2l,c
  4595   002264  0E02               	movlw	high _dbuf
  4596   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4597   002268  6EDA               	movwf	fsr2h,c
  4598   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4599   00226E                     l4945:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4603   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4604   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4605   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4606   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4607   002276                     
  4608                           ; BSR set to: 0
  4609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4610   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4611   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4612   00227E  0EA0               	movlw	low _dbuf
  4613   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4614   002282  6E13               	movwf	pad@buf^0,c
  4615   002284  0E02               	movlw	high _dbuf
  4616   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4617   002288  6E14               	movwf	(pad@buf+1)^0,c
  4618   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4619   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4620   002292  EC14  F02A         	call	_pad	;wreg free
  4621   002296                     l1418:
  4622   002296  0012               	return		;funcret
  4623   002298                     __end_of_efgtoa:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _strcpy *****************
  4627 ;; Defined at:
  4628 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4631 ;;		 -> dbuf(80), 
  4632 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4633 ;;		 -> STR_5(4), STR_2(4), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  d               2    6[COMRAM] PTR unsigned char 
  4636 ;;		 -> dbuf(80), 
  4637 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4638 ;;		 -> STR_5(4), STR_2(4), 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[COMRAM] PTR unsigned char 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:        8 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_efgtoa
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text6
  4663   005D72                     __ptext6:
  4664                           	callstack 0
  4665   005D72                     _strcpy:
  4666                           	callstack 25
  4667   005D72  C003  F005         	movff	strcpy@src,strcpy@s
  4668   005D76  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4669   005D7A  C001  F007         	movff	strcpy@dest,strcpy@d
  4670   005D7E  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4671   005D82                     l4551:
  4672   005D82  C005  FFF6         	movff	strcpy@s,tblptrl
  4673   005D86  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4674   005D8A  4A05               	infsnz	strcpy@s^0,f,c
  4675   005D8C  2A06               	incf	(strcpy@s+1)^0,f,c
  4676   005D8E                     	if	0	;tblptru may be non-zero
  4677   005D8E                     	endif
  4678   005D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4679   005D8E  0E00               	movlw	low (__mediumconst shr (0+16))
  4680   005D90  6EF8               	movwf	tblptru,c
  4681   005D92                     	endif
  4682   005D92  C007  FFD9         	movff	strcpy@d,fsr2l
  4683   005D96  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4684   005D9A  4A07               	infsnz	strcpy@d^0,f,c
  4685   005D9C  2A08               	incf	(strcpy@d+1)^0,f,c
  4686   005D9E  0008               	tblrd		*
  4687   005DA0  CFF5 FFDF          	movff	tablat,indf2
  4688   005DA4  50DF               	movf	indf2,w,c
  4689   005DA6  A4D8               	btfss	status,2,c
  4690   005DA8  EFD8  F02E         	goto	u4251
  4691   005DAC  EFDA  F02E         	goto	u4250
  4692   005DB0                     u4251:
  4693   005DB0  EFC1  F02E         	goto	l4551
  4694   005DB4                     u4250:
  4695   005DB4  0012               	return		;funcret
  4696   005DB6                     __end_of_strcpy:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _memcpy *****************
  4700 ;; Defined at:
  4701 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  d1              2    0[COMRAM] PTR void 
  4704 ;;		 -> dbuf(80), 
  4705 ;;  s1              2    2[COMRAM] PTR const void 
  4706 ;;		 -> dbuf(80), 
  4707 ;;  n               2    4[COMRAM] unsigned int 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4710 ;;		 -> dbuf(80), 
  4711 ;;  d               2    6[COMRAM] PTR unsigned char 
  4712 ;;		 -> dbuf(80), 
  4713 ;;  tmp             1   10[COMRAM] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    0[COMRAM] PTR void 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4723 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;Total ram usage:       11 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_efgtoa
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text7
  4738   005AB2                     __ptext7:
  4739                           	callstack 0
  4740   005AB2                     _memcpy:
  4741                           	callstack 25
  4742   005AB2  C003  F009         	movff	memcpy@s1,memcpy@s
  4743   005AB6  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4744   005ABA  C001  F007         	movff	memcpy@d1,memcpy@d
  4745   005ABE  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4746   005AC2  EF73  F02D         	goto	l4595
  4747   005AC6                     l4587:
  4748   005AC6  C009  FFD9         	movff	memcpy@s,fsr2l
  4749   005ACA  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4750   005ACE  50DF               	movf	indf2,w,c
  4751   005AD0  6E0B               	movwf	memcpy@tmp^0,c
  4752   005AD2  4A09               	infsnz	memcpy@s^0,f,c
  4753   005AD4  2A0A               	incf	(memcpy@s+1)^0,f,c
  4754   005AD6  C007  FFD9         	movff	memcpy@d,fsr2l
  4755   005ADA  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4756   005ADE  C00B  FFDF         	movff	memcpy@tmp,indf2
  4757   005AE2  4A07               	infsnz	memcpy@d^0,f,c
  4758   005AE4  2A08               	incf	(memcpy@d+1)^0,f,c
  4759   005AE6                     l4595:
  4760   005AE6  0605               	decf	memcpy@n^0,f,c
  4761   005AE8  A0D8               	btfss	status,0,c
  4762   005AEA  0606               	decf	(memcpy@n+1)^0,f,c
  4763   005AEC  2805               	incf	memcpy@n^0,w,c
  4764   005AEE  E106               	bnz	u4371
  4765   005AF0  2806               	incf	(memcpy@n+1)^0,w,c
  4766   005AF2  A4D8               	btfss	status,2,c
  4767   005AF4  EF7E  F02D         	goto	u4371
  4768   005AF8  EF80  F02D         	goto	u4370
  4769   005AFC                     u4371:
  4770   005AFC  EF63  F02D         	goto	l4587
  4771   005B00                     u4370:
  4772   005B00  0012               	return		;funcret
  4773   005B02                     __end_of_memcpy:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _labs *****************
  4777 ;; Defined at:
  4778 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  a               4    0[COMRAM] long 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  4    0[COMRAM] long 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;Total ram usage:        8 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 1
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_efgtoa
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text8
  4807   005580                     __ptext8:
  4808                           	callstack 0
  4809   005580                     _labs:
  4810                           	callstack 25
  4811   005580  BE04               	btfsc	(labs@a+3)^0,7,c
  4812   005582  EFCF  F02A         	goto	u4260
  4813   005586  5004               	movf	(labs@a+3)^0,w,c
  4814   005588  1003               	iorwf	(labs@a+2)^0,w,c
  4815   00558A  1002               	iorwf	(labs@a+1)^0,w,c
  4816   00558C  E106               	bnz	u4261
  4817   00558E  0401               	decf	labs@a^0,w,c
  4818   005590  B0D8               	btfsc	status,0,c
  4819   005592  EFCD  F02A         	goto	u4261
  4820   005596  EFCF  F02A         	goto	u4260
  4821   00559A                     u4261:
  4822   00559A  EFEA  F02A         	goto	l1523
  4823   00559E                     u4260:
  4824   00559E  C001  F005         	movff	labs@a,??_labs
  4825   0055A2  C002  F006         	movff	labs@a+1,??_labs+1
  4826   0055A6  C003  F007         	movff	labs@a+2,??_labs+2
  4827   0055AA  C004  F008         	movff	labs@a+3,??_labs+3
  4828   0055AE  1E05               	comf	??_labs^0,f,c
  4829   0055B0  1E06               	comf	(??_labs+1)^0,f,c
  4830   0055B2  1E07               	comf	(??_labs+2)^0,f,c
  4831   0055B4  1E08               	comf	(??_labs+3)^0,f,c
  4832   0055B6  2A05               	incf	??_labs^0,f,c
  4833   0055B8  0E00               	movlw	0
  4834   0055BA  2206               	addwfc	(??_labs+1)^0,f,c
  4835   0055BC  2207               	addwfc	(??_labs+2)^0,f,c
  4836   0055BE  2208               	addwfc	(??_labs+3)^0,f,c
  4837   0055C0  C005  F001         	movff	??_labs,?_labs
  4838   0055C4  C006  F002         	movff	??_labs+1,?_labs+1
  4839   0055C8  C007  F003         	movff	??_labs+2,?_labs+2
  4840   0055CC  C008  F004         	movff	??_labs+3,?_labs+3
  4841   0055D0  EFF2  F02A         	goto	l1526
  4842   0055D4                     l1523:
  4843   0055D4  C001  F001         	movff	labs@a,?_labs
  4844   0055D8  C002  F002         	movff	labs@a+1,?_labs+1
  4845   0055DC  C003  F003         	movff	labs@a+2,?_labs+2
  4846   0055E0  C004  F004         	movff	labs@a+3,?_labs+3
  4847   0055E4                     l1526:
  4848   0055E4  0012               	return		;funcret
  4849   0055E6                     __end_of_labs:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _floorf *****************
  4853 ;; Defined at:
  4854 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  x               4   74[COMRAM] float 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  u               4   90[COMRAM] struct .
  4859 ;;  m               4   84[COMRAM] unsigned long 
  4860 ;;  e               2   88[COMRAM] int 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  4   74[COMRAM] float 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;Total ram usage:       20 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_efgtoa
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text9
  4885   00401A                     __ptext9:
  4886                           	callstack 0
  4887   00401A                     _floorf:
  4888                           	callstack 25
  4889   00401A  C0DF  F05B         	movff	floorf@F526,floorf@u
  4890   00401E  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4891   004022  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4892   004026  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4893   00402A  C04B  F05B         	movff	floorf@x,floorf@u
  4894   00402E  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4895   004032  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4896   004036  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4897   00403A  0E81               	movlw	129
  4898   00403C  6E4F               	movwf	??_floorf^0,c
  4899   00403E  0EFF               	movlw	255
  4900   004040  6E50               	movwf	(??_floorf+1)^0,c
  4901   004042  C05B  F051         	movff	floorf@u,??_floorf+2
  4902   004046  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4903   00404A  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4904   00404E  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4905   004052  0E18               	movlw	24
  4906   004054  EF31  F020         	goto	u4270
  4907   004058                     u4275:
  4908   004058  90D8               	bcf	status,0,c
  4909   00405A  3254               	rrcf	(??_floorf+5)^0,f,c
  4910   00405C  3253               	rrcf	(??_floorf+4)^0,f,c
  4911   00405E  3252               	rrcf	(??_floorf+3)^0,f,c
  4912   004060  3251               	rrcf	(??_floorf+2)^0,f,c
  4913   004062                     u4270:
  4914   004062  2EE8               	decfsz	wreg,f,c
  4915   004064  EF2C  F020         	goto	u4275
  4916   004068  5051               	movf	(??_floorf+2)^0,w,c
  4917   00406A  244F               	addwf	??_floorf^0,w,c
  4918   00406C  6E59               	movwf	floorf@e^0,c
  4919   00406E  0E00               	movlw	0
  4920   004070  2050               	addwfc	(??_floorf+1)^0,w,c
  4921   004072  6E5A               	movwf	(floorf@e+1)^0,c
  4922   004074  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4923   004076  EF46  F020         	goto	u4281
  4924   00407A  505A               	movf	(floorf@e+1)^0,w,c
  4925   00407C  E109               	bnz	u4280
  4926   00407E  0E17               	movlw	23
  4927   004080  5C59               	subwf	floorf@e^0,w,c
  4928   004082  A0D8               	btfss	status,0,c
  4929   004084  EF46  F020         	goto	u4281
  4930   004088  EF48  F020         	goto	u4280
  4931   00408C                     u4281:
  4932   00408C  EF52  F020         	goto	l4563
  4933   004090                     u4280:
  4934   004090                     l4561:
  4935   004090  C04B  F04B         	movff	floorf@x,?_floorf
  4936   004094  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4937   004098  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4938   00409C  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4939   0040A0  EF15  F021         	goto	l1512
  4940   0040A4                     l4563:
  4941   0040A4  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4942   0040A6  EF57  F020         	goto	u4291
  4943   0040AA  EF59  F020         	goto	u4290
  4944   0040AE                     u4291:
  4945   0040AE  EFC9  F020         	goto	l4573
  4946   0040B2                     u4290:
  4947   0040B2  C059  F04F         	movff	floorf@e,??_floorf
  4948   0040B6  0EFF               	movlw	255
  4949   0040B8  6E50               	movwf	(??_floorf+1)^0,c
  4950   0040BA  0EFF               	movlw	255
  4951   0040BC  6E51               	movwf	(??_floorf+2)^0,c
  4952   0040BE  0E7F               	movlw	127
  4953   0040C0  6E52               	movwf	(??_floorf+3)^0,c
  4954   0040C2  0E00               	movlw	0
  4955   0040C4  6E53               	movwf	(??_floorf+4)^0,c
  4956   0040C6                     u4305:
  4957   0040C6  664F               	tstfsz	??_floorf^0,c
  4958   0040C8  EF68  F020         	goto	u4306
  4959   0040CC  EF70  F020         	goto	u4307
  4960   0040D0                     u4306:
  4961   0040D0  3453               	rlcf	(??_floorf+4)^0,w,c
  4962   0040D2  3253               	rrcf	(??_floorf+4)^0,f,c
  4963   0040D4  3252               	rrcf	(??_floorf+3)^0,f,c
  4964   0040D6  3251               	rrcf	(??_floorf+2)^0,f,c
  4965   0040D8  3250               	rrcf	(??_floorf+1)^0,f,c
  4966   0040DA  2E4F               	decfsz	??_floorf^0,f,c
  4967   0040DC  EF63  F020         	goto	u4305
  4968   0040E0                     u4307:
  4969   0040E0  C050  F055         	movff	??_floorf+1,floorf@m
  4970   0040E4  C051  F056         	movff	??_floorf+2,floorf@m+1
  4971   0040E8  C052  F057         	movff	??_floorf+3,floorf@m+2
  4972   0040EC  C053  F058         	movff	??_floorf+4,floorf@m+3
  4973   0040F0  5055               	movf	floorf@m^0,w,c
  4974   0040F2  145B               	andwf	floorf@u^0,w,c
  4975   0040F4  6E4F               	movwf	??_floorf^0,c
  4976   0040F6  5056               	movf	(floorf@m+1)^0,w,c
  4977   0040F8  145C               	andwf	(floorf@u+1)^0,w,c
  4978   0040FA  6E50               	movwf	(??_floorf+1)^0,c
  4979   0040FC  5057               	movf	(floorf@m+2)^0,w,c
  4980   0040FE  145D               	andwf	(floorf@u+2)^0,w,c
  4981   004100  6E51               	movwf	(??_floorf+2)^0,c
  4982   004102  5058               	movf	(floorf@m+3)^0,w,c
  4983   004104  145E               	andwf	(floorf@u+3)^0,w,c
  4984   004106  6E52               	movwf	(??_floorf+3)^0,c
  4985   004108  504F               	movf	??_floorf^0,w,c
  4986   00410A  1050               	iorwf	(??_floorf+1)^0,w,c
  4987   00410C  1051               	iorwf	(??_floorf+2)^0,w,c
  4988   00410E  1052               	iorwf	(??_floorf+3)^0,w,c
  4989   004110  A4D8               	btfss	status,2,c
  4990   004112  EF8D  F020         	goto	u4311
  4991   004116  EF8F  F020         	goto	u4310
  4992   00411A                     u4311:
  4993   00411A  EF91  F020         	goto	l4569
  4994   00411E                     u4310:
  4995   00411E  EF48  F020         	goto	l4561
  4996   004122                     l4569:
  4997   004122  C05B  F04F         	movff	floorf@u,??_floorf
  4998   004126  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4999   00412A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5000   00412E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5001   004132  0E20               	movlw	32
  5002   004134  EFA1  F020         	goto	u4320
  5003   004138                     u4325:
  5004   004138  90D8               	bcf	status,0,c
  5005   00413A  3252               	rrcf	(??_floorf+3)^0,f,c
  5006   00413C  3251               	rrcf	(??_floorf+2)^0,f,c
  5007   00413E  3250               	rrcf	(??_floorf+1)^0,f,c
  5008   004140  324F               	rrcf	??_floorf^0,f,c
  5009   004142                     u4320:
  5010   004142  2EE8               	decfsz	wreg,f,c
  5011   004144  EF9C  F020         	goto	u4325
  5012   004148  504F               	movf	??_floorf^0,w,c
  5013   00414A  1050               	iorwf	(??_floorf+1)^0,w,c
  5014   00414C  1051               	iorwf	(??_floorf+2)^0,w,c
  5015   00414E  1052               	iorwf	(??_floorf+3)^0,w,c
  5016   004150  B4D8               	btfsc	status,2,c
  5017   004152  EFAD  F020         	goto	u4331
  5018   004156  EFAF  F020         	goto	u4330
  5019   00415A                     u4331:
  5020   00415A  EFB7  F020         	goto	l1515
  5021   00415E                     u4330:
  5022   00415E  5055               	movf	floorf@m^0,w,c
  5023   004160  265B               	addwf	floorf@u^0,f,c
  5024   004162  5056               	movf	(floorf@m+1)^0,w,c
  5025   004164  225C               	addwfc	(floorf@u+1)^0,f,c
  5026   004166  5057               	movf	(floorf@m+2)^0,w,c
  5027   004168  225D               	addwfc	(floorf@u+2)^0,f,c
  5028   00416A  5058               	movf	(floorf@m+3)^0,w,c
  5029   00416C  225E               	addwfc	(floorf@u+3)^0,f,c
  5030   00416E                     l1515:
  5031   00416E  1C55               	comf	floorf@m^0,w,c
  5032   004170  6E4F               	movwf	??_floorf^0,c
  5033   004172  1C56               	comf	(floorf@m+1)^0,w,c
  5034   004174  6E50               	movwf	(??_floorf+1)^0,c
  5035   004176  1C57               	comf	(floorf@m+2)^0,w,c
  5036   004178  6E51               	movwf	(??_floorf+2)^0,c
  5037   00417A  1C58               	comf	(floorf@m+3)^0,w,c
  5038   00417C  6E52               	movwf	(??_floorf+3)^0,c
  5039   00417E  504F               	movf	??_floorf^0,w,c
  5040   004180  165B               	andwf	floorf@u^0,f,c
  5041   004182  5050               	movf	(??_floorf+1)^0,w,c
  5042   004184  165C               	andwf	(floorf@u+1)^0,f,c
  5043   004186  5051               	movf	(??_floorf+2)^0,w,c
  5044   004188  165D               	andwf	(floorf@u+2)^0,f,c
  5045   00418A  5052               	movf	(??_floorf+3)^0,w,c
  5046   00418C  165E               	andwf	(floorf@u+3)^0,f,c
  5047   00418E  EF0D  F021         	goto	l4581
  5048   004192                     l4573:
  5049   004192  C05B  F04F         	movff	floorf@u,??_floorf
  5050   004196  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5051   00419A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5052   00419E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5053   0041A2  0E20               	movlw	32
  5054   0041A4  EFD9  F020         	goto	u4340
  5055   0041A8                     u4345:
  5056   0041A8  90D8               	bcf	status,0,c
  5057   0041AA  3252               	rrcf	(??_floorf+3)^0,f,c
  5058   0041AC  3251               	rrcf	(??_floorf+2)^0,f,c
  5059   0041AE  3250               	rrcf	(??_floorf+1)^0,f,c
  5060   0041B0  324F               	rrcf	??_floorf^0,f,c
  5061   0041B2                     u4340:
  5062   0041B2  2EE8               	decfsz	wreg,f,c
  5063   0041B4  EFD4  F020         	goto	u4345
  5064   0041B8  504F               	movf	??_floorf^0,w,c
  5065   0041BA  1050               	iorwf	(??_floorf+1)^0,w,c
  5066   0041BC  1051               	iorwf	(??_floorf+2)^0,w,c
  5067   0041BE  1052               	iorwf	(??_floorf+3)^0,w,c
  5068   0041C0  A4D8               	btfss	status,2,c
  5069   0041C2  EFE5  F020         	goto	u4351
  5070   0041C6  EFE7  F020         	goto	u4350
  5071   0041CA                     u4351:
  5072   0041CA  EFF1  F020         	goto	l4577
  5073   0041CE                     u4350:
  5074   0041CE  0E00               	movlw	0
  5075   0041D0  6E5B               	movwf	floorf@u^0,c
  5076   0041D2  0E00               	movlw	0
  5077   0041D4  6E5C               	movwf	(floorf@u+1)^0,c
  5078   0041D6  0E00               	movlw	0
  5079   0041D8  6E5D               	movwf	(floorf@u+2)^0,c
  5080   0041DA  0E00               	movlw	0
  5081   0041DC  6E5E               	movwf	(floorf@u+3)^0,c
  5082   0041DE  EF0D  F021         	goto	l4581
  5083   0041E2                     l4577:
  5084   0041E2  90D8               	bcf	status,0,c
  5085   0041E4  345B               	rlcf	floorf@u^0,w,c
  5086   0041E6  6E4F               	movwf	??_floorf^0,c
  5087   0041E8  345C               	rlcf	(floorf@u+1)^0,w,c
  5088   0041EA  6E50               	movwf	(??_floorf+1)^0,c
  5089   0041EC  345D               	rlcf	(floorf@u+2)^0,w,c
  5090   0041EE  6E51               	movwf	(??_floorf+2)^0,c
  5091   0041F0  345E               	rlcf	(floorf@u+3)^0,w,c
  5092   0041F2  6E52               	movwf	(??_floorf+3)^0,c
  5093   0041F4  504F               	movf	??_floorf^0,w,c
  5094   0041F6  1050               	iorwf	(??_floorf+1)^0,w,c
  5095   0041F8  1051               	iorwf	(??_floorf+2)^0,w,c
  5096   0041FA  1052               	iorwf	(??_floorf+3)^0,w,c
  5097   0041FC  B4D8               	btfsc	status,2,c
  5098   0041FE  EF03  F021         	goto	u4361
  5099   004202  EF05  F021         	goto	u4360
  5100   004206                     u4361:
  5101   004206  EF0D  F021         	goto	l4581
  5102   00420A                     u4360:
  5103   00420A  0E00               	movlw	0
  5104   00420C  6E5B               	movwf	floorf@u^0,c
  5105   00420E  0E00               	movlw	0
  5106   004210  6E5C               	movwf	(floorf@u+1)^0,c
  5107   004212  0E80               	movlw	128
  5108   004214  6E5D               	movwf	(floorf@u+2)^0,c
  5109   004216  0EBF               	movlw	191
  5110   004218  6E5E               	movwf	(floorf@u+3)^0,c
  5111   00421A                     l4581:
  5112   00421A  C05B  F04B         	movff	floorf@u,?_floorf
  5113   00421E  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5114   004222  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5115   004226  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5116   00422A                     l1512:
  5117   00422A  0012               	return		;funcret
  5118   00422C                     __end_of_floorf:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function ___fpclassifyf *****************
  5122 ;; Defined at:
  5123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  x               4    0[COMRAM] float 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  u               4   10[COMRAM] struct .
  5128 ;;  e               2    8[COMRAM] int 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2    0[COMRAM] int 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;Total ram usage:       14 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 1
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_efgtoa
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text10
  5153   004C22                     __ptext10:
  5154                           	callstack 0
  5155   004C22                     ___fpclassifyf:
  5156                           	callstack 25
  5157   004C22  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5158   004C26  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5159   004C2A  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5160   004C2E  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5161   004C32  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5162   004C36  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5163   004C3A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5164   004C3E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5165   004C42  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5166   004C46  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5167   004C4A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5168   004C4E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5169   004C52  0E18               	movlw	24
  5170   004C54  EF31  F026         	goto	u4180
  5171   004C58                     u4185:
  5172   004C58  90D8               	bcf	status,0,c
  5173   004C5A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5174   004C5C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5175   004C5E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5176   004C60  3205               	rrcf	??___fpclassifyf^0,f,c
  5177   004C62                     u4180:
  5178   004C62  2EE8               	decfsz	wreg,f,c
  5179   004C64  EF2C  F026         	goto	u4185
  5180   004C68  5005               	movf	??___fpclassifyf^0,w,c
  5181   004C6A  6E09               	movwf	___fpclassifyf@e^0,c
  5182   004C6C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5183   004C6E  5009               	movf	___fpclassifyf@e^0,w,c
  5184   004C70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5185   004C72  A4D8               	btfss	status,2,c
  5186   004C74  EF3E  F026         	goto	u4191
  5187   004C78  EF40  F026         	goto	u4190
  5188   004C7C                     u4191:
  5189   004C7C  EF60  F026         	goto	l4539
  5190   004C80                     u4190:
  5191   004C80  90D8               	bcf	status,0,c
  5192   004C82  340B               	rlcf	___fpclassifyf@u^0,w,c
  5193   004C84  6E05               	movwf	??___fpclassifyf^0,c
  5194   004C86  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5195   004C88  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5196   004C8A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5197   004C8C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5198   004C8E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5199   004C90  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5200   004C92  5005               	movf	??___fpclassifyf^0,w,c
  5201   004C94  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5202   004C96  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5203   004C98  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5204   004C9A  A4D8               	btfss	status,2,c
  5205   004C9C  EF52  F026         	goto	u4201
  5206   004CA0  EF54  F026         	goto	u4200
  5207   004CA4                     u4201:
  5208   004CA4  EF5A  F026         	goto	l4535
  5209   004CA8                     u4200:
  5210   004CA8  0E00               	movlw	0
  5211   004CAA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5212   004CAC  0E02               	movlw	2
  5213   004CAE  6E01               	movwf	?___fpclassifyf^0,c
  5214   004CB0  EF8F  F026         	goto	l1498
  5215   004CB4                     l4535:
  5216   004CB4  0E00               	movlw	0
  5217   004CB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5218   004CB8  0E03               	movlw	3
  5219   004CBA  6E01               	movwf	?___fpclassifyf^0,c
  5220   004CBC  EF8F  F026         	goto	l1498
  5221   004CC0                     l4539:
  5222   004CC0  2809               	incf	___fpclassifyf@e^0,w,c
  5223   004CC2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5224   004CC4  A4D8               	btfss	status,2,c
  5225   004CC6  EF67  F026         	goto	u4211
  5226   004CCA  EF69  F026         	goto	u4210
  5227   004CCE                     u4211:
  5228   004CCE  EF8B  F026         	goto	l4545
  5229   004CD2                     u4210:
  5230   004CD2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5231   004CD6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5232   004CDA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5233   004CDE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5234   004CE2  0E09               	movlw	9
  5235   004CE4                     u4225:
  5236   004CE4  90D8               	bcf	status,0,c
  5237   004CE6  3605               	rlcf	??___fpclassifyf^0,f,c
  5238   004CE8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5239   004CEA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5240   004CEC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5241   004CEE  2EE8               	decfsz	wreg,f,c
  5242   004CF0  EF72  F026         	goto	u4225
  5243   004CF4  5005               	movf	??___fpclassifyf^0,w,c
  5244   004CF6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5245   004CF8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5246   004CFA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5247   004CFC  B4D8               	btfsc	status,2,c
  5248   004CFE  EF83  F026         	goto	u4231
  5249   004D02  EF86  F026         	goto	u4230
  5250   004D06                     u4231:
  5251   004D06  0E01               	movlw	1
  5252   004D08  EF87  F026         	goto	u4240
  5253   004D0C                     u4230:
  5254   004D0C  0E00               	movlw	0
  5255   004D0E                     u4240:
  5256   004D0E  6E01               	movwf	?___fpclassifyf^0,c
  5257   004D10  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5258   004D12  EF8F  F026         	goto	l1498
  5259   004D16                     l4545:
  5260   004D16  0E00               	movlw	0
  5261   004D18  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5262   004D1A  0E04               	movlw	4
  5263   004D1C  6E01               	movwf	?___fpclassifyf^0,c
  5264   004D1E                     l1498:
  5265   004D1E  0012               	return		;funcret
  5266   004D20                     __end_of___fpclassifyf:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function ___fltol *****************
  5270 ;; Defined at:
  5271 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  f1              4    0[COMRAM] int 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  exp1            1    9[COMRAM] unsigned char 
  5276 ;;  sign1           1    8[COMRAM] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  4    0[COMRAM] long 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;Total ram usage:       10 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_reverseOneBlock
  5297 ;;		_ForwardOneBlock
  5298 ;;		_Forwardhalfblock
  5299 ;;		_efgtoa
  5300 ;;		_Backhalfblock
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text11
  5305   004A18                     __ptext11:
  5306                           	callstack 0
  5307   004A18                     ___fltol:
  5308                           	callstack 25
  5309   004A18  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5310   004A1A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5311   004A1C  6E0A               	movwf	___fltol@exp1^0,c
  5312   004A1E  500A               	movf	___fltol@exp1^0,w,c
  5313   004A20  A4D8               	btfss	status,2,c
  5314   004A22  EF15  F025         	goto	u4081
  5315   004A26  EF17  F025         	goto	u4080
  5316   004A2A                     u4081:
  5317   004A2A  EF21  F025         	goto	l4471
  5318   004A2E                     u4080:
  5319   004A2E                     l4467:
  5320   004A2E  0E00               	movlw	0
  5321   004A30  6E01               	movwf	?___fltol^0,c
  5322   004A32  0E00               	movlw	0
  5323   004A34  6E02               	movwf	(?___fltol+1)^0,c
  5324   004A36  0E00               	movlw	0
  5325   004A38  6E03               	movwf	(?___fltol+2)^0,c
  5326   004A3A  0E00               	movlw	0
  5327   004A3C  6E04               	movwf	(?___fltol+3)^0,c
  5328   004A3E  EF8E  F025         	goto	l971
  5329   004A42                     l4471:
  5330   004A42  C001  F005         	movff	___fltol@f1,??___fltol
  5331   004A46  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5332   004A4A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5333   004A4E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5334   004A52  0E20               	movlw	32
  5335   004A54  EF31  F025         	goto	u4090
  5336   004A58                     u4095:
  5337   004A58  90D8               	bcf	status,0,c
  5338   004A5A  3208               	rrcf	(??___fltol+3)^0,f,c
  5339   004A5C  3207               	rrcf	(??___fltol+2)^0,f,c
  5340   004A5E  3206               	rrcf	(??___fltol+1)^0,f,c
  5341   004A60  3205               	rrcf	??___fltol^0,f,c
  5342   004A62                     u4090:
  5343   004A62  2EE8               	decfsz	wreg,f,c
  5344   004A64  EF2C  F025         	goto	u4095
  5345   004A68  5005               	movf	??___fltol^0,w,c
  5346   004A6A  6E09               	movwf	___fltol@sign1^0,c
  5347   004A6C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5348   004A6E  0EFF               	movlw	255
  5349   004A70  1601               	andwf	___fltol@f1^0,f,c
  5350   004A72  0EFF               	movlw	255
  5351   004A74  1602               	andwf	(___fltol@f1+1)^0,f,c
  5352   004A76  0EFF               	movlw	255
  5353   004A78  1603               	andwf	(___fltol@f1+2)^0,f,c
  5354   004A7A  0E00               	movlw	0
  5355   004A7C  1604               	andwf	(___fltol@f1+3)^0,f,c
  5356   004A7E  0E96               	movlw	150
  5357   004A80  5E0A               	subwf	___fltol@exp1^0,f,c
  5358   004A82  BE0A               	btfsc	___fltol@exp1^0,7,c
  5359   004A84  EF48  F025         	goto	u4100
  5360   004A88  EF46  F025         	goto	u4101
  5361   004A8C                     u4101:
  5362   004A8C  EF5E  F025         	goto	l4491
  5363   004A90                     u4100:
  5364   004A90  500A               	movf	___fltol@exp1^0,w,c
  5365   004A92  0A80               	xorlw	128
  5366   004A94  0F97               	addlw	151
  5367   004A96  B0D8               	btfsc	status,0,c
  5368   004A98  EF50  F025         	goto	u4111
  5369   004A9C  EF52  F025         	goto	u4110
  5370   004AA0                     u4111:
  5371   004AA0  EF54  F025         	goto	l4487
  5372   004AA4                     u4110:
  5373   004AA4  EF17  F025         	goto	l4467
  5374   004AA8                     l4487:
  5375   004AA8  90D8               	bcf	status,0,c
  5376   004AAA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5377   004AAC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5378   004AAE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5379   004AB0  3201               	rrcf	___fltol@f1^0,f,c
  5380   004AB2  3E0A               	incfsz	___fltol@exp1^0,f,c
  5381   004AB4  EF54  F025         	goto	l4487
  5382   004AB8  EF76  F025         	goto	l4501
  5383   004ABC                     l4491:
  5384   004ABC  0E1F               	movlw	31
  5385   004ABE  640A               	cpfsgt	___fltol@exp1^0,c
  5386   004AC0  EF64  F025         	goto	u4121
  5387   004AC4  EF66  F025         	goto	u4120
  5388   004AC8                     u4121:
  5389   004AC8  EF6E  F025         	goto	l4499
  5390   004ACC                     u4120:
  5391   004ACC  EF17  F025         	goto	l4467
  5392   004AD0                     l4497:
  5393   004AD0  90D8               	bcf	status,0,c
  5394   004AD2  3601               	rlcf	___fltol@f1^0,f,c
  5395   004AD4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5396   004AD6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5397   004AD8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5398   004ADA  060A               	decf	___fltol@exp1^0,f,c
  5399   004ADC                     l4499:
  5400   004ADC  500A               	movf	___fltol@exp1^0,w,c
  5401   004ADE  A4D8               	btfss	status,2,c
  5402   004AE0  EF74  F025         	goto	u4131
  5403   004AE4  EF76  F025         	goto	u4130
  5404   004AE8                     u4131:
  5405   004AE8  EF68  F025         	goto	l4497
  5406   004AEC                     u4130:
  5407   004AEC                     l4501:
  5408   004AEC  5009               	movf	___fltol@sign1^0,w,c
  5409   004AEE  B4D8               	btfsc	status,2,c
  5410   004AF0  EF7C  F025         	goto	u4141
  5411   004AF4  EF7E  F025         	goto	u4140
  5412   004AF8                     u4141:
  5413   004AF8  EF86  F025         	goto	l4505
  5414   004AFC                     u4140:
  5415   004AFC  1E04               	comf	(___fltol@f1+3)^0,f,c
  5416   004AFE  1E03               	comf	(___fltol@f1+2)^0,f,c
  5417   004B00  1E02               	comf	(___fltol@f1+1)^0,f,c
  5418   004B02  6C01               	negf	___fltol@f1^0,c
  5419   004B04  0E00               	movlw	0
  5420   004B06  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5421   004B08  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5422   004B0A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5423   004B0C                     l4505:
  5424   004B0C  C001  F001         	movff	___fltol@f1,?___fltol
  5425   004B10  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5426   004B14  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5427   004B18  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5428   004B1C                     l971:
  5429   004B1C  0012               	return		;funcret
  5430   004B1E                     __end_of___fltol:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function ___flneg *****************
  5434 ;; Defined at:
  5435 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  f1              4    0[COMRAM] long 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  4    0[COMRAM] long 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;Total ram usage:        4 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; Hardware stack levels required when called: 1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_efgtoa
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text12
  5464   005EF8                     __ptext12:
  5465                           	callstack 0
  5466   005EF8                     ___flneg:
  5467                           	callstack 25
  5468   005EF8  5001               	movf	___flneg@f1^0,w,c
  5469   005EFA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5470   005EFC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5471   005EFE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5472   005F00  B4D8               	btfsc	status,2,c
  5473   005F02  EF85  F02F         	goto	u4071
  5474   005F06  EF87  F02F         	goto	u4070
  5475   005F0A                     u4071:
  5476   005F0A  EF8F  F02F         	goto	l4461
  5477   005F0E                     u4070:
  5478   005F0E  0E00               	movlw	0
  5479   005F10  1A01               	xorwf	___flneg@f1^0,f,c
  5480   005F12  0E00               	movlw	0
  5481   005F14  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5482   005F16  0E00               	movlw	0
  5483   005F18  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5484   005F1A  0E80               	movlw	128
  5485   005F1C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5486   005F1E                     l4461:
  5487   005F1E  C001  F001         	movff	___flneg@f1,?___flneg
  5488   005F22  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5489   005F26  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5490   005F2A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5491   005F2E  0012               	return		;funcret
  5492   005F30                     __end_of___flneg:
  5493                           	callstack 0
  5494                           
  5495 ;; *************** function _dtoa *****************
  5496 ;; Defined at:
  5497 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5500 ;;		 -> sprintf@f(11), 
  5501 ;;  d               8   29[COMRAM] long long 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  n               8   51[COMRAM] long long 
  5504 ;;  i               2   59[COMRAM] int 
  5505 ;;  w               2   49[COMRAM] int 
  5506 ;;  p               2   47[COMRAM] int 
  5507 ;;  s               1   61[COMRAM] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:       35 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 5
  5524 ;; This function calls:
  5525 ;;		___aodiv
  5526 ;;		___aomod
  5527 ;;		_abs
  5528 ;;		_pad
  5529 ;; This function is called by:
  5530 ;;		_vfpfcnvrt
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text13
  5535   003D9C                     __ptext13:
  5536                           	callstack 0
  5537   003D9C                     _dtoa:
  5538                           	callstack 22
  5539   003D9C                     
  5540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5541   003D9C  C01E  F034         	movff	dtoa@d,dtoa@n
  5542   003DA0  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5543   003DA4  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5544   003DA8  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5545   003DAC  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5546   003DB0  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5547   003DB4  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5548   003DB8  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5549   003DBC                     
  5550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5551   003DBC  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5552   003DBE  EFE3  F01E         	goto	u4511
  5553   003DC2  EFE6  F01E         	goto	u4510
  5554   003DC6                     u4511:
  5555   003DC6  0E01               	movlw	1
  5556   003DC8  EFE7  F01E         	goto	u4520
  5557   003DCC                     u4510:
  5558   003DCC  0E00               	movlw	0
  5559   003DCE                     u4520:
  5560   003DCE  6E3E               	movwf	dtoa@s^0,c
  5561   003DD0                     
  5562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5563   003DD0  503E               	movf	dtoa@s^0,w,c
  5564   003DD2  B4D8               	btfsc	status,2,c
  5565   003DD4  EFEE  F01E         	goto	u4531
  5566   003DD8  EFF0  F01E         	goto	u4530
  5567   003DDC                     u4531:
  5568   003DDC  EF00  F01F         	goto	l4685
  5569   003DE0                     u4530:
  5570   003DE0                     
  5571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5572   003DE0  1E3B               	comf	(dtoa@n+7)^0,f,c
  5573   003DE2  1E3A               	comf	(dtoa@n+6)^0,f,c
  5574   003DE4  1E39               	comf	(dtoa@n+5)^0,f,c
  5575   003DE6  1E38               	comf	(dtoa@n+4)^0,f,c
  5576   003DE8  1E37               	comf	(dtoa@n+3)^0,f,c
  5577   003DEA  1E36               	comf	(dtoa@n+2)^0,f,c
  5578   003DEC  1E35               	comf	(dtoa@n+1)^0,f,c
  5579   003DEE  6C34               	negf	dtoa@n^0,c
  5580   003DF0  0E00               	movlw	0
  5581   003DF2  2235               	addwfc	(dtoa@n+1)^0,f,c
  5582   003DF4  2236               	addwfc	(dtoa@n+2)^0,f,c
  5583   003DF6  2237               	addwfc	(dtoa@n+3)^0,f,c
  5584   003DF8  2238               	addwfc	(dtoa@n+4)^0,f,c
  5585   003DFA  2239               	addwfc	(dtoa@n+5)^0,f,c
  5586   003DFC  223A               	addwfc	(dtoa@n+6)^0,f,c
  5587   003DFE  223B               	addwfc	(dtoa@n+7)^0,f,c
  5588   003E00                     l4685:
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5591   003E00  0100               	movlb	0	; () banked
  5592   003E02  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5593   003E04  EF0E  F01F         	goto	u4540
  5594   003E08  51EA               	movf	(_prec+1)& (0+255),w,b
  5595   003E0A  E106               	bnz	u4541
  5596   003E0C  05E9               	decf	_prec& (0+255),w,b
  5597   003E0E  B0D8               	btfsc	status,0,c
  5598   003E10  EF0C  F01F         	goto	u4541
  5599   003E14  EF0E  F01F         	goto	u4540
  5600   003E18                     u4541:
  5601   003E18  EF14  F01F         	goto	l1393
  5602   003E1C                     u4540:
  5603   003E1C                     
  5604                           ; BSR set to: 0
  5605   003E1C  0E00               	movlw	0
  5606   003E1E  6E31               	movwf	(dtoa@p+1)^0,c
  5607   003E20  0E01               	movlw	1
  5608   003E22  6E30               	movwf	dtoa@p^0,c
  5609   003E24  EF18  F01F         	goto	l1395
  5610   003E28                     l1393:
  5611                           
  5612                           ; BSR set to: 0
  5613   003E28  C0E9  F030         	movff	_prec,dtoa@p
  5614   003E2C  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5615   003E30                     l1395:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5619   003E30  C0E7  F032         	movff	_width,dtoa@w
  5620   003E34  C0E8  F033         	movff	_width+1,dtoa@w+1
  5621   003E38                     
  5622                           ; BSR set to: 0
  5623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5624   003E38  503E               	movf	dtoa@s^0,w,c
  5625   003E3A  B4D8               	btfsc	status,2,c
  5626   003E3C  EF22  F01F         	goto	u4551
  5627   003E40  EF24  F01F         	goto	u4550
  5628   003E44                     u4551:
  5629   003E44  EF3B  F01F         	goto	l1396
  5630   003E48                     u4550:
  5631   003E48                     
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5634   003E48  0632               	decf	dtoa@w^0,f,c
  5635   003E4A  A0D8               	btfss	status,0,c
  5636   003E4C  0633               	decf	(dtoa@w+1)^0,f,c
  5637   003E4E                     
  5638                           ; BSR set to: 0
  5639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5640   003E4E  503E               	movf	dtoa@s^0,w,c
  5641   003E50  A4D8               	btfss	status,2,c
  5642   003E52  EF2D  F01F         	goto	u4561
  5643   003E56  EF2F  F01F         	goto	u4560
  5644   003E5A                     u4561:
  5645   003E5A  EF35  F01F         	goto	l4697
  5646   003E5E                     u4560:
  5647   003E5E                     
  5648                           ; BSR set to: 0
  5649   003E5E  0E00               	movlw	0
  5650   003E60  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5651   003E62  0E2B               	movlw	43
  5652   003E64  6E2E               	movwf	_dtoa$2821^0,c
  5653   003E66  EF39  F01F         	goto	l4699
  5654   003E6A                     l4697:
  5655                           
  5656                           ; BSR set to: 0
  5657   003E6A  0E00               	movlw	0
  5658   003E6C  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5659   003E6E  0E2D               	movlw	45
  5660   003E70  6E2E               	movwf	_dtoa$2821^0,c
  5661   003E72                     l4699:
  5662                           
  5663                           ; BSR set to: 0
  5664   003E72  C02E  F03E         	movff	_dtoa$2821,dtoa@s
  5665   003E76                     l1396:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5669   003E76  0E00               	movlw	0
  5670   003E78  6E3D               	movwf	(dtoa@i+1)^0,c
  5671   003E7A  0E4F               	movlw	79
  5672   003E7C  6E3C               	movwf	dtoa@i^0,c
  5673   003E7E                     
  5674                           ; BSR set to: 0
  5675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5676   003E7E  0E00               	movlw	0
  5677   003E80  0102               	movlb	2	; () banked
  5678   003E82  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5681   003E84  EFC0  F01F         	goto	l4713
  5682   003E88                     l4703:
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5685   003E88  063C               	decf	dtoa@i^0,f,c
  5686   003E8A  A0D8               	btfss	status,0,c
  5687   003E8C  063D               	decf	(dtoa@i+1)^0,f,c
  5688   003E8E                     
  5689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5690   003E8E  0EA0               	movlw	low _dbuf
  5691   003E90  243C               	addwf	dtoa@i^0,w,c
  5692   003E92  6ED9               	movwf	fsr2l,c
  5693   003E94  0E02               	movlw	high _dbuf
  5694   003E96  203D               	addwfc	(dtoa@i+1)^0,w,c
  5695   003E98  6EDA               	movwf	fsr2h,c
  5696   003E9A  C034  F001         	movff	dtoa@n,___aomod@dividend
  5697   003E9E  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5698   003EA2  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5699   003EA6  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5700   003EAA  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5701   003EAE  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5702   003EB2  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5703   003EB6  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5704   003EBA  0E0A               	movlw	10
  5705   003EBC  6E09               	movwf	___aomod@divisor^0,c
  5706   003EBE  0E00               	movlw	0
  5707   003EC0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5708   003EC2  0E00               	movlw	0
  5709   003EC4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5710   003EC6  0E00               	movlw	0
  5711   003EC8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5712   003ECA  0E00               	movlw	0
  5713   003ECC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5714   003ECE  0E00               	movlw	0
  5715   003ED0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5716   003ED2  0E00               	movlw	0
  5717   003ED4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5718   003ED6  0E00               	movlw	0
  5719   003ED8  6E10               	movwf	(___aomod@divisor+7)^0,c
  5720   003EDA  EC5A  F024         	call	___aomod	;wreg free
  5721   003EDE  C001  F026         	movff	?___aomod,??_dtoa
  5722   003EE2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5723   003EE6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5724   003EEA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5725   003EEE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5726   003EF2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5727   003EF6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5728   003EFA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5729   003EFE  C026  F013         	movff	??_dtoa,abs@a
  5730   003F02  C027  F014         	movff	??_dtoa+1,abs@a+1
  5731   003F06  EC1E  F02F         	call	_abs	;wreg free
  5732   003F0A  5013               	movf	?_abs^0,w,c
  5733   003F0C  0F30               	addlw	48
  5734   003F0E  6EDF               	movwf	indf2,c
  5735   003F10                     
  5736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5737   003F10  0630               	decf	dtoa@p^0,f,c
  5738   003F12  A0D8               	btfss	status,0,c
  5739   003F14  0631               	decf	(dtoa@p+1)^0,f,c
  5740   003F16                     
  5741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5742   003F16  0632               	decf	dtoa@w^0,f,c
  5743   003F18  A0D8               	btfss	status,0,c
  5744   003F1A  0633               	decf	(dtoa@w+1)^0,f,c
  5745   003F1C                     
  5746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5747   003F1C  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5748   003F20  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5749   003F24  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5750   003F28  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5751   003F2C  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5752   003F30  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5753   003F34  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5754   003F38  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5755   003F3C  0E0A               	movlw	10
  5756   003F3E  6E09               	movwf	___aodiv@divisor^0,c
  5757   003F40  0E00               	movlw	0
  5758   003F42  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5759   003F44  0E00               	movlw	0
  5760   003F46  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5761   003F48  0E00               	movlw	0
  5762   003F4A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5763   003F4C  0E00               	movlw	0
  5764   003F4E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5765   003F50  0E00               	movlw	0
  5766   003F52  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5767   003F54  0E00               	movlw	0
  5768   003F56  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5769   003F58  0E00               	movlw	0
  5770   003F5A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5771   003F5C  ECE0  F022         	call	___aodiv	;wreg free
  5772   003F60  C001  F034         	movff	?___aodiv,dtoa@n
  5773   003F64  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5774   003F68  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5775   003F6C  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5776   003F70  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5777   003F74  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5778   003F78  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5779   003F7C  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5780   003F80                     l4713:
  5781                           
  5782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5783   003F80  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5784   003F82  EFCB  F01F         	goto	u4571
  5785   003F86  503D               	movf	(dtoa@i+1)^0,w,c
  5786   003F88  E108               	bnz	u4570
  5787   003F8A  043C               	decf	dtoa@i^0,w,c
  5788   003F8C  A0D8               	btfss	status,0,c
  5789   003F8E  EFCB  F01F         	goto	u4571
  5790   003F92  EFCD  F01F         	goto	u4570
  5791   003F96                     u4571:
  5792   003F96  EFE9  F01F         	goto	l4719
  5793   003F9A                     u4570:
  5794   003F9A  5034               	movf	dtoa@n^0,w,c
  5795   003F9C  1035               	iorwf	(dtoa@n+1)^0,w,c
  5796   003F9E  1036               	iorwf	(dtoa@n+2)^0,w,c
  5797   003FA0  1037               	iorwf	(dtoa@n+3)^0,w,c
  5798   003FA2  1038               	iorwf	(dtoa@n+4)^0,w,c
  5799   003FA4  1039               	iorwf	(dtoa@n+5)^0,w,c
  5800   003FA6  103A               	iorwf	(dtoa@n+6)^0,w,c
  5801   003FA8  103B               	iorwf	(dtoa@n+7)^0,w,c
  5802   003FAA  A4D8               	btfss	status,2,c
  5803   003FAC  EFDA  F01F         	goto	u4581
  5804   003FB0  EFDC  F01F         	goto	u4580
  5805   003FB4                     u4581:
  5806   003FB4  EF44  F01F         	goto	l4703
  5807   003FB8                     u4580:
  5808   003FB8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5809   003FBA  EFE9  F01F         	goto	u4590
  5810   003FBE  5031               	movf	(dtoa@p+1)^0,w,c
  5811   003FC0  E106               	bnz	u4591
  5812   003FC2  0430               	decf	dtoa@p^0,w,c
  5813   003FC4  B0D8               	btfsc	status,0,c
  5814   003FC6  EFE7  F01F         	goto	u4591
  5815   003FCA  EFE9  F01F         	goto	u4590
  5816   003FCE                     u4591:
  5817   003FCE  EF44  F01F         	goto	l4703
  5818   003FD2                     u4590:
  5819   003FD2                     l4719:
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5822   003FD2  503E               	movf	dtoa@s^0,w,c
  5823   003FD4  B4D8               	btfsc	status,2,c
  5824   003FD6  EFEF  F01F         	goto	u4601
  5825   003FDA  EFF1  F01F         	goto	u4600
  5826   003FDE                     u4601:
  5827   003FDE  EFFC  F01F         	goto	l4725
  5828   003FE2                     u4600:
  5829   003FE2                     
  5830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5831   003FE2  063C               	decf	dtoa@i^0,f,c
  5832   003FE4  A0D8               	btfss	status,0,c
  5833   003FE6  063D               	decf	(dtoa@i+1)^0,f,c
  5834   003FE8                     
  5835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5836   003FE8  0EA0               	movlw	low _dbuf
  5837   003FEA  243C               	addwf	dtoa@i^0,w,c
  5838   003FEC  6ED9               	movwf	fsr2l,c
  5839   003FEE  0E02               	movlw	high _dbuf
  5840   003FF0  203D               	addwfc	(dtoa@i+1)^0,w,c
  5841   003FF2  6EDA               	movwf	fsr2h,c
  5842   003FF4  C03E  FFDF         	movff	dtoa@s,indf2
  5843   003FF8                     l4725:
  5844                           
  5845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5846   003FF8  C01C  F011         	movff	dtoa@fp,pad@fp
  5847   003FFC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5848   004000  0EA0               	movlw	low _dbuf
  5849   004002  243C               	addwf	dtoa@i^0,w,c
  5850   004004  6E13               	movwf	pad@buf^0,c
  5851   004006  0E02               	movlw	high _dbuf
  5852   004008  203D               	addwfc	(dtoa@i+1)^0,w,c
  5853   00400A  6E14               	movwf	(pad@buf+1)^0,c
  5854   00400C  C032  F015         	movff	dtoa@w,pad@p
  5855   004010  C033  F016         	movff	dtoa@w+1,pad@p+1
  5856   004014  EC14  F02A         	call	_pad	;wreg free
  5857   004018  0012               	return		;funcret
  5858   00401A                     __end_of_dtoa:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function _pad *****************
  5862 ;; Defined at:
  5863 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5866 ;;		 -> sprintf@f(11), 
  5867 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5868 ;;		 -> dbuf(80), 
  5869 ;;  p               2   20[COMRAM] int 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  w               2   25[COMRAM] int 
  5872 ;;  i               2   23[COMRAM] int 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5882 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;Total ram usage:       11 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; Hardware stack levels required when called: 4
  5889 ;; This function calls:
  5890 ;;		_fputc
  5891 ;;		_fputs
  5892 ;; This function is called by:
  5893 ;;		_dtoa
  5894 ;;		_efgtoa
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text14
  5899   005428                     __ptext14:
  5900                           	callstack 0
  5901   005428                     _pad:
  5902                           	callstack 22
  5903   005428                     
  5904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5905   005428  BE16               	btfsc	(pad@p+1)^0,7,c
  5906   00542A  EF19  F02A         	goto	u4151
  5907   00542E  EF1B  F02A         	goto	u4150
  5908   005432                     u4151:
  5909   005432  EF21  F02A         	goto	l4513
  5910   005436                     u4150:
  5911   005436  C015  F01A         	movff	pad@p,pad@w
  5912   00543A  C016  F01B         	movff	pad@p+1,pad@w+1
  5913   00543E  EF25  F02A         	goto	l1384
  5914   005442                     l4513:
  5915   005442  0E00               	movlw	0
  5916   005444  6E1B               	movwf	(pad@w+1)^0,c
  5917   005446  0E00               	movlw	0
  5918   005448  6E1A               	movwf	pad@w^0,c
  5919   00544A                     l1384:
  5920                           
  5921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5922   00544A  0E00               	movlw	0
  5923   00544C  6E19               	movwf	(pad@i+1)^0,c
  5924   00544E  0E00               	movlw	0
  5925   005450  6E18               	movwf	pad@i^0,c
  5926                           
  5927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5928   005452  EF37  F02A         	goto	l4519
  5929   005456                     l4515:
  5930                           
  5931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5932   005456  0E00               	movlw	0
  5933   005458  6E02               	movwf	(fputc@c+1)^0,c
  5934   00545A  0E20               	movlw	32
  5935   00545C  6E01               	movwf	fputc@c^0,c
  5936   00545E  C011  F003         	movff	pad@fp,fputc@fp
  5937   005462  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5938   005466  EC90  F026         	call	_fputc	;wreg free
  5939   00546A                     
  5940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5941   00546A  4A18               	infsnz	pad@i^0,f,c
  5942   00546C  2A19               	incf	(pad@i+1)^0,f,c
  5943   00546E                     l4519:
  5944                           
  5945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5946   00546E  501A               	movf	pad@w^0,w,c
  5947   005470  5C18               	subwf	pad@i^0,w,c
  5948   005472  5019               	movf	(pad@i+1)^0,w,c
  5949   005474  0A80               	xorlw	128
  5950   005476  6E17               	movwf	??_pad^0,c
  5951   005478  501B               	movf	(pad@w+1)^0,w,c
  5952   00547A  0A80               	xorlw	128
  5953   00547C  5817               	subwfb	??_pad^0,w,c
  5954   00547E  A0D8               	btfss	status,0,c
  5955   005480  EF44  F02A         	goto	u4161
  5956   005484  EF46  F02A         	goto	u4160
  5957   005488                     u4161:
  5958   005488  EF2B  F02A         	goto	l4515
  5959   00548C                     u4160:
  5960   00548C                     
  5961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5962   00548C  C013  F00A         	movff	pad@buf,fputs@s
  5963   005490  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5964   005494  C011  F00C         	movff	pad@fp,fputs@fp
  5965   005498  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5966   00549C  ECDB  F02E         	call	_fputs	;wreg free
  5967   0054A0  0012               	return		;funcret
  5968   0054A2                     __end_of_pad:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _fputs *****************
  5972 ;; Defined at:
  5973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5976 ;;		 -> dbuf(80), 
  5977 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5978 ;;		 -> sprintf@f(11), 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  i               2   14[COMRAM] int 
  5981 ;;  c               1   13[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2    9[COMRAM] int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;Total ram usage:        7 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 3
  5998 ;; This function calls:
  5999 ;;		_fputc
  6000 ;; This function is called by:
  6001 ;;		_pad
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text15
  6006   005DB6                     __ptext15:
  6007                           	callstack 0
  6008   005DB6                     _fputs:
  6009                           	callstack 22
  6010   005DB6  0E00               	movlw	0
  6011   005DB8  6E10               	movwf	(fputs@i+1)^0,c
  6012   005DBA  0E00               	movlw	0
  6013   005DBC  6E0F               	movwf	fputs@i^0,c
  6014   005DBE  EFEC  F02E         	goto	l4047
  6015   005DC2                     l4043:
  6016   005DC2  C00E  F001         	movff	fputs@c,fputc@c
  6017   005DC6  6A02               	clrf	(fputc@c+1)^0,c
  6018   005DC8  C00C  F003         	movff	fputs@fp,fputc@fp
  6019   005DCC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6020   005DD0  EC90  F026         	call	_fputc	;wreg free
  6021   005DD4  4A0F               	infsnz	fputs@i^0,f,c
  6022   005DD6  2A10               	incf	(fputs@i+1)^0,f,c
  6023   005DD8                     l4047:
  6024   005DD8  500F               	movf	fputs@i^0,w,c
  6025   005DDA  240A               	addwf	fputs@s^0,w,c
  6026   005DDC  6ED9               	movwf	fsr2l,c
  6027   005DDE  5010               	movf	(fputs@i+1)^0,w,c
  6028   005DE0  200B               	addwfc	(fputs@s+1)^0,w,c
  6029   005DE2  6EDA               	movwf	fsr2h,c
  6030   005DE4  50DF               	movf	indf2,w,c
  6031   005DE6  6E0E               	movwf	fputs@c^0,c
  6032   005DE8  500E               	movf	fputs@c^0,w,c
  6033   005DEA  A4D8               	btfss	status,2,c
  6034   005DEC  EFFA  F02E         	goto	u3411
  6035   005DF0  EFFC  F02E         	goto	u3410
  6036   005DF4                     u3411:
  6037   005DF4  EFE1  F02E         	goto	l4043
  6038   005DF8                     u3410:
  6039   005DF8  0012               	return		;funcret
  6040   005DFA                     __end_of_fputs:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _fputc *****************
  6044 ;; Defined at:
  6045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  c               2    0[COMRAM] int 
  6048 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6049 ;;		 -> sprintf@f(11), 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  2    0[COMRAM] int 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;Total ram usage:        9 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 2
  6068 ;; This function calls:
  6069 ;;		_putch
  6070 ;; This function is called by:
  6071 ;;		_pad
  6072 ;;		_vfpfcnvrt
  6073 ;;		_fputs
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text16
  6078   004D20                     __ptext16:
  6079                           	callstack 0
  6080   004D20                     _fputc:
  6081                           	callstack 25
  6082   004D20  5003               	movf	fputc@fp^0,w,c
  6083   004D22  1004               	iorwf	(fputc@fp+1)^0,w,c
  6084   004D24  B4D8               	btfsc	status,2,c
  6085   004D26  EF97  F026         	goto	u2951
  6086   004D2A  EF99  F026         	goto	u2950
  6087   004D2E                     u2951:
  6088   004D2E  EFA2  F026         	goto	l3801
  6089   004D32                     u2950:
  6090   004D32  5003               	movf	fputc@fp^0,w,c
  6091   004D34  1004               	iorwf	(fputc@fp+1)^0,w,c
  6092   004D36  A4D8               	btfss	status,2,c
  6093   004D38  EFA0  F026         	goto	u2961
  6094   004D3C  EFA2  F026         	goto	u2960
  6095   004D40                     u2961:
  6096   004D40  EFA7  F026         	goto	l3803
  6097   004D44                     u2960:
  6098   004D44                     l3801:
  6099   004D44  5001               	movf	fputc@c^0,w,c
  6100   004D46  EC7C  F030         	call	_putch
  6101   004D4A  EFF4  F026         	goto	l1544
  6102   004D4E                     l3803:
  6103   004D4E  EE20 F009          	lfsr	2,9
  6104   004D52  5003               	movf	fputc@fp^0,w,c
  6105   004D54  26D9               	addwf	fsr2l,f,c
  6106   004D56  5004               	movf	(fputc@fp+1)^0,w,c
  6107   004D58  22DA               	addwfc	fsr2h,f,c
  6108   004D5A  50DE               	movf	postinc2,w,c
  6109   004D5C  10DE               	iorwf	postinc2,w,c
  6110   004D5E  B4D8               	btfsc	status,2,c
  6111   004D60  EFB4  F026         	goto	u2971
  6112   004D64  EFB6  F026         	goto	u2970
  6113   004D68                     u2971:
  6114   004D68  EFD1  F026         	goto	l3807
  6115   004D6C                     u2970:
  6116   004D6C  EE20 F009          	lfsr	2,9
  6117   004D70  5003               	movf	fputc@fp^0,w,c
  6118   004D72  26D9               	addwf	fsr2l,f,c
  6119   004D74  5004               	movf	(fputc@fp+1)^0,w,c
  6120   004D76  22DA               	addwfc	fsr2h,f,c
  6121   004D78  EE10 F003          	lfsr	1,3
  6122   004D7C  5003               	movf	fputc@fp^0,w,c
  6123   004D7E  26E1               	addwf	fsr1l,f,c
  6124   004D80  5004               	movf	(fputc@fp+1)^0,w,c
  6125   004D82  22E2               	addwfc	fsr1h,f,c
  6126   004D84  50DE               	movf	postinc2,w,c
  6127   004D86  5CE6               	subwf	postinc1,w,c
  6128   004D88  50E6               	movf	postinc1,w,c
  6129   004D8A  0A80               	xorlw	128
  6130   004D8C  6E09               	movwf	(??_fputc+4)^0,c
  6131   004D8E  50DE               	movf	postinc2,w,c
  6132   004D90  0A80               	xorlw	128
  6133   004D92  5809               	subwfb	(??_fputc+4)^0,w,c
  6134   004D94  B0D8               	btfsc	status,0,c
  6135   004D96  EFCF  F026         	goto	u2981
  6136   004D9A  EFD1  F026         	goto	u2980
  6137   004D9E                     u2981:
  6138   004D9E  EFF4  F026         	goto	l1544
  6139   004DA2                     u2980:
  6140   004DA2                     l3807:
  6141   004DA2  EE20 F003          	lfsr	2,3
  6142   004DA6  5003               	movf	fputc@fp^0,w,c
  6143   004DA8  26D9               	addwf	fsr2l,f,c
  6144   004DAA  5004               	movf	(fputc@fp+1)^0,w,c
  6145   004DAC  22DA               	addwfc	fsr2h,f,c
  6146   004DAE  CFDE F005          	movff	postinc2,??_fputc
  6147   004DB2  CFDD F006          	movff	postdec2,??_fputc+1
  6148   004DB6  C003  FFD9         	movff	fputc@fp,fsr2l
  6149   004DBA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6150   004DBE  CFDE F007          	movff	postinc2,??_fputc+2
  6151   004DC2  CFDD F008          	movff	postdec2,??_fputc+3
  6152   004DC6  5005               	movf	??_fputc^0,w,c
  6153   004DC8  2407               	addwf	(??_fputc+2)^0,w,c
  6154   004DCA  6ED9               	movwf	fsr2l,c
  6155   004DCC  5006               	movf	(??_fputc+1)^0,w,c
  6156   004DCE  2008               	addwfc	(??_fputc+3)^0,w,c
  6157   004DD0  6EDA               	movwf	fsr2h,c
  6158   004DD2  C001  FFDF         	movff	fputc@c,indf2
  6159   004DD6  EE20 F003          	lfsr	2,3
  6160   004DDA  5003               	movf	fputc@fp^0,w,c
  6161   004DDC  26D9               	addwf	fsr2l,f,c
  6162   004DDE  5004               	movf	(fputc@fp+1)^0,w,c
  6163   004DE0  22DA               	addwfc	fsr2h,f,c
  6164   004DE2  2ADE               	incf	postinc2,f,c
  6165   004DE4  0E00               	movlw	0
  6166   004DE6  22DD               	addwfc	postdec2,f,c
  6167   004DE8                     l1544:
  6168   004DE8  0012               	return		;funcret
  6169   004DEA                     __end_of_fputc:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function _putch *****************
  6173 ;; Defined at:
  6174 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  c               1    wreg     unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  c               1    0[COMRAM] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		wreg
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used: 1
  6194 ;; Hardware stack levels required when called: 1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_fputc
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text17
  6203   0060F8                     __ptext17:
  6204                           	callstack 0
  6205   0060F8                     _putch:
  6206                           	callstack 25
  6207   0060F8  0012               	return		;funcret
  6208   0060FA                     __end_of_putch:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _abs *****************
  6212 ;; Defined at:
  6213 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  a               2   18[COMRAM] int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2   18[COMRAM] int 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;Total ram usage:        4 bytes
  6232 ;; Hardware stack levels used: 1
  6233 ;; Hardware stack levels required when called: 1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_dtoa
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text18
  6242   005E3C                     __ptext18:
  6243                           	callstack 0
  6244   005E3C                     _abs:
  6245                           	callstack 25
  6246   005E3C  BE14               	btfsc	(abs@a+1)^0,7,c
  6247   005E3E  EF2B  F02F         	goto	u4170
  6248   005E42  5014               	movf	(abs@a+1)^0,w,c
  6249   005E44  E106               	bnz	u4171
  6250   005E46  0413               	decf	abs@a^0,w,c
  6251   005E48  B0D8               	btfsc	status,0,c
  6252   005E4A  EF29  F02F         	goto	u4171
  6253   005E4E  EF2B  F02F         	goto	u4170
  6254   005E52                     u4171:
  6255   005E52  EF39  F02F         	goto	l1503
  6256   005E56                     u4170:
  6257   005E56  C013  F015         	movff	abs@a,??_abs
  6258   005E5A  C014  F016         	movff	abs@a+1,??_abs+1
  6259   005E5E  1E15               	comf	??_abs^0,f,c
  6260   005E60  1E16               	comf	(??_abs+1)^0,f,c
  6261   005E62  4A15               	infsnz	??_abs^0,f,c
  6262   005E64  2A16               	incf	(??_abs+1)^0,f,c
  6263   005E66  C015  F013         	movff	??_abs,?_abs
  6264   005E6A  C016  F014         	movff	??_abs+1,?_abs+1
  6265   005E6E  EF3D  F02F         	goto	l1506
  6266   005E72                     l1503:
  6267   005E72  C013  F013         	movff	abs@a,?_abs
  6268   005E76  C014  F014         	movff	abs@a+1,?_abs+1
  6269   005E7A                     l1506:
  6270   005E7A  0012               	return		;funcret
  6271   005E7C                     __end_of_abs:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function ___aomod *****************
  6275 ;; Defined at:
  6276 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  dividend        8    0[COMRAM] long long 
  6279 ;;  divisor         8    8[COMRAM] long long 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  sign            1   17[COMRAM] unsigned char 
  6282 ;;  counter         1   16[COMRAM] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  8    0[COMRAM] long long 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6292 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;Total ram usage:       18 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 1
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_dtoa
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text19
  6307   0048B4                     __ptext19:
  6308                           	callstack 0
  6309   0048B4                     ___aomod:
  6310                           	callstack 25
  6311   0048B4  0E00               	movlw	0
  6312   0048B6  6E12               	movwf	___aomod@sign^0,c
  6313   0048B8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6314   0048BA  EF63  F024         	goto	u3510
  6315   0048BE  EF61  F024         	goto	u3511
  6316   0048C2                     u3511:
  6317   0048C2  EF75  F024         	goto	l4117
  6318   0048C6                     u3510:
  6319   0048C6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6320   0048C8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6321   0048CA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6322   0048CC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6323   0048CE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6324   0048D0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6325   0048D2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6326   0048D4  6C01               	negf	___aomod@dividend^0,c
  6327   0048D6  0E00               	movlw	0
  6328   0048D8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6329   0048DA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6330   0048DC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6331   0048DE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6332   0048E0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6333   0048E2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6334   0048E4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6335   0048E6  0E01               	movlw	1
  6336   0048E8  6E12               	movwf	___aomod@sign^0,c
  6337   0048EA                     l4117:
  6338   0048EA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6339   0048EC  EF7C  F024         	goto	u3520
  6340   0048F0  EF7A  F024         	goto	u3521
  6341   0048F4                     u3521:
  6342   0048F4  EF8C  F024         	goto	l4121
  6343   0048F8                     u3520:
  6344   0048F8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6345   0048FA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6346   0048FC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6347   0048FE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6348   004900  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6349   004902  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6350   004904  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6351   004906  6C09               	negf	___aomod@divisor^0,c
  6352   004908  0E00               	movlw	0
  6353   00490A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6354   00490C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6355   00490E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6356   004910  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6357   004912  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6358   004914  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6359   004916  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6360   004918                     l4121:
  6361   004918  5009               	movf	___aomod@divisor^0,w,c
  6362   00491A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6363   00491C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6364   00491E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6365   004920  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6366   004922  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6367   004924  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6368   004926  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6369   004928  B4D8               	btfsc	status,2,c
  6370   00492A  EF99  F024         	goto	u3531
  6371   00492E  EF9B  F024         	goto	u3530
  6372   004932                     u3531:
  6373   004932  EFE3  F024         	goto	l4137
  6374   004936                     u3530:
  6375   004936  0E01               	movlw	1
  6376   004938  6E11               	movwf	___aomod@counter^0,c
  6377   00493A  EFA9  F024         	goto	l4127
  6378   00493E                     l4125:
  6379   00493E  90D8               	bcf	status,0,c
  6380   004940  3609               	rlcf	___aomod@divisor^0,f,c
  6381   004942  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6382   004944  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6383   004946  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6384   004948  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6385   00494A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6386   00494C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6387   00494E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6388   004950  2A11               	incf	___aomod@counter^0,f,c
  6389   004952                     l4127:
  6390   004952  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6391   004954  EFAE  F024         	goto	u3541
  6392   004958  EFB0  F024         	goto	u3540
  6393   00495C                     u3541:
  6394   00495C  EF9F  F024         	goto	l4125
  6395   004960                     u3540:
  6396   004960                     l4129:
  6397   004960  5009               	movf	___aomod@divisor^0,w,c
  6398   004962  5C01               	subwf	___aomod@dividend^0,w,c
  6399   004964  500A               	movf	(___aomod@divisor+1)^0,w,c
  6400   004966  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6401   004968  500B               	movf	(___aomod@divisor+2)^0,w,c
  6402   00496A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6403   00496C  500C               	movf	(___aomod@divisor+3)^0,w,c
  6404   00496E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6405   004970  500D               	movf	(___aomod@divisor+4)^0,w,c
  6406   004972  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6407   004974  500E               	movf	(___aomod@divisor+5)^0,w,c
  6408   004976  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6409   004978  500F               	movf	(___aomod@divisor+6)^0,w,c
  6410   00497A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6411   00497C  5010               	movf	(___aomod@divisor+7)^0,w,c
  6412   00497E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6413   004980  A0D8               	btfss	status,0,c
  6414   004982  EFC5  F024         	goto	u3551
  6415   004986  EFC7  F024         	goto	u3550
  6416   00498A                     u3551:
  6417   00498A  EFD7  F024         	goto	l4133
  6418   00498E                     u3550:
  6419   00498E  5009               	movf	___aomod@divisor^0,w,c
  6420   004990  5E01               	subwf	___aomod@dividend^0,f,c
  6421   004992  500A               	movf	(___aomod@divisor+1)^0,w,c
  6422   004994  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6423   004996  500B               	movf	(___aomod@divisor+2)^0,w,c
  6424   004998  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6425   00499A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6426   00499C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6427   00499E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6428   0049A0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6429   0049A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  6430   0049A4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6431   0049A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  6432   0049A8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6433   0049AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  6434   0049AC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6435   0049AE                     l4133:
  6436   0049AE  90D8               	bcf	status,0,c
  6437   0049B0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6438   0049B2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6439   0049B4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6440   0049B6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6441   0049B8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6442   0049BA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6443   0049BC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6444   0049BE  3209               	rrcf	___aomod@divisor^0,f,c
  6445   0049C0  2E11               	decfsz	___aomod@counter^0,f,c
  6446   0049C2  EFB0  F024         	goto	l4129
  6447   0049C6                     l4137:
  6448   0049C6  5012               	movf	___aomod@sign^0,w,c
  6449   0049C8  B4D8               	btfsc	status,2,c
  6450   0049CA  EFE9  F024         	goto	u3561
  6451   0049CE  EFEB  F024         	goto	u3560
  6452   0049D2                     u3561:
  6453   0049D2  EFFB  F024         	goto	l4141
  6454   0049D6                     u3560:
  6455   0049D6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6456   0049D8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6457   0049DA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6458   0049DC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6459   0049DE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6460   0049E0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6461   0049E2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6462   0049E4  6C01               	negf	___aomod@dividend^0,c
  6463   0049E6  0E00               	movlw	0
  6464   0049E8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6465   0049EA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6466   0049EC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6467   0049EE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6468   0049F0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6469   0049F2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6470   0049F4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6471   0049F6                     l4141:
  6472   0049F6  C001  F001         	movff	___aomod@dividend,?___aomod
  6473   0049FA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6474   0049FE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6475   004A02  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6476   004A06  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6477   004A0A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6478   004A0E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6479   004A12  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6480   004A16  0012               	return		;funcret
  6481   004A18                     __end_of___aomod:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function ___aodiv *****************
  6485 ;; Defined at:
  6486 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  dividend        8    0[COMRAM] long long 
  6489 ;;  divisor         8    8[COMRAM] long long 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  quotient        8   18[COMRAM] long long 
  6492 ;;  sign            1   17[COMRAM] unsigned char 
  6493 ;;  counter         1   16[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  8    0[COMRAM] long long 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6503 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;Total ram usage:       26 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_dtoa
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text20
  6518   0045C0                     __ptext20:
  6519                           	callstack 0
  6520   0045C0                     ___aodiv:
  6521                           	callstack 25
  6522   0045C0  0E00               	movlw	0
  6523   0045C2  6E12               	movwf	___aodiv@sign^0,c
  6524   0045C4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6525   0045C6  EFE9  F022         	goto	u3440
  6526   0045CA  EFE7  F022         	goto	u3441
  6527   0045CE                     u3441:
  6528   0045CE  EFFB  F022         	goto	l4073
  6529   0045D2                     u3440:
  6530   0045D2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6531   0045D4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6532   0045D6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6533   0045D8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6534   0045DA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6535   0045DC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6536   0045DE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6537   0045E0  6C09               	negf	___aodiv@divisor^0,c
  6538   0045E2  0E00               	movlw	0
  6539   0045E4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6540   0045E6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6541   0045E8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6542   0045EA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6543   0045EC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6544   0045EE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6545   0045F0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6546   0045F2  0E01               	movlw	1
  6547   0045F4  6E12               	movwf	___aodiv@sign^0,c
  6548   0045F6                     l4073:
  6549   0045F6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6550   0045F8  EF02  F023         	goto	u3450
  6551   0045FC  EF00  F023         	goto	u3451
  6552   004600                     u3451:
  6553   004600  EF14  F023         	goto	l4079
  6554   004604                     u3450:
  6555   004604  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6556   004606  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6557   004608  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6558   00460A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6559   00460C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6560   00460E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6561   004610  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6562   004612  6C01               	negf	___aodiv@dividend^0,c
  6563   004614  0E00               	movlw	0
  6564   004616  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6565   004618  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6566   00461A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6567   00461C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6568   00461E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6569   004620  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6570   004622  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6571   004624  0E01               	movlw	1
  6572   004626  1A12               	xorwf	___aodiv@sign^0,f,c
  6573   004628                     l4079:
  6574   004628  EE20  F013         	lfsr	2,___aodiv@quotient
  6575   00462C  0E07               	movlw	7
  6576   00462E                     u3461:
  6577   00462E  6ADE               	clrf	postinc2,c
  6578   004630  06E8               	decf	wreg,f,c
  6579   004632  E2FD               	bc	u3461
  6580   004634  5009               	movf	___aodiv@divisor^0,w,c
  6581   004636  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6582   004638  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6583   00463A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6584   00463C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6585   00463E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6586   004640  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6587   004642  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6588   004644  B4D8               	btfsc	status,2,c
  6589   004646  EF27  F023         	goto	u3471
  6590   00464A  EF29  F023         	goto	u3470
  6591   00464E                     u3471:
  6592   00464E  EF7B  F023         	goto	l4101
  6593   004652                     u3470:
  6594   004652  0E01               	movlw	1
  6595   004654  6E11               	movwf	___aodiv@counter^0,c
  6596   004656  EF37  F023         	goto	l4087
  6597   00465A                     l4085:
  6598   00465A  90D8               	bcf	status,0,c
  6599   00465C  3609               	rlcf	___aodiv@divisor^0,f,c
  6600   00465E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6601   004660  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6602   004662  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6603   004664  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6604   004666  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6605   004668  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6606   00466A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6607   00466C  2A11               	incf	___aodiv@counter^0,f,c
  6608   00466E                     l4087:
  6609   00466E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6610   004670  EF3C  F023         	goto	u3481
  6611   004674  EF3E  F023         	goto	u3480
  6612   004678                     u3481:
  6613   004678  EF2D  F023         	goto	l4085
  6614   00467C                     u3480:
  6615   00467C                     l4089:
  6616   00467C  90D8               	bcf	status,0,c
  6617   00467E  3613               	rlcf	___aodiv@quotient^0,f,c
  6618   004680  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6619   004682  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6620   004684  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6621   004686  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6622   004688  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6623   00468A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6624   00468C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6625   00468E  5009               	movf	___aodiv@divisor^0,w,c
  6626   004690  5C01               	subwf	___aodiv@dividend^0,w,c
  6627   004692  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6628   004694  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6629   004696  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6630   004698  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6631   00469A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6632   00469C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6633   00469E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6634   0046A0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6635   0046A2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6636   0046A4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6637   0046A6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6638   0046A8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6639   0046AA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6640   0046AC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6641   0046AE  A0D8               	btfss	status,0,c
  6642   0046B0  EF5C  F023         	goto	u3491
  6643   0046B4  EF5E  F023         	goto	u3490
  6644   0046B8                     u3491:
  6645   0046B8  EF6F  F023         	goto	l4097
  6646   0046BC                     u3490:
  6647   0046BC  5009               	movf	___aodiv@divisor^0,w,c
  6648   0046BE  5E01               	subwf	___aodiv@dividend^0,f,c
  6649   0046C0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6650   0046C2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6651   0046C4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6652   0046C6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6653   0046C8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6654   0046CA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6655   0046CC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6656   0046CE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6657   0046D0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6658   0046D2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6659   0046D4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6660   0046D6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6661   0046D8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6662   0046DA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6663   0046DC  8013               	bsf	___aodiv@quotient^0,0,c
  6664   0046DE                     l4097:
  6665   0046DE  90D8               	bcf	status,0,c
  6666   0046E0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6667   0046E2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6668   0046E4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6669   0046E6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6670   0046E8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6671   0046EA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6672   0046EC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6673   0046EE  3209               	rrcf	___aodiv@divisor^0,f,c
  6674   0046F0  2E11               	decfsz	___aodiv@counter^0,f,c
  6675   0046F2  EF3E  F023         	goto	l4089
  6676   0046F6                     l4101:
  6677   0046F6  5012               	movf	___aodiv@sign^0,w,c
  6678   0046F8  B4D8               	btfsc	status,2,c
  6679   0046FA  EF81  F023         	goto	u3501
  6680   0046FE  EF83  F023         	goto	u3500
  6681   004702                     u3501:
  6682   004702  EF93  F023         	goto	l4105
  6683   004706                     u3500:
  6684   004706  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6685   004708  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6686   00470A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6687   00470C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6688   00470E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6689   004710  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6690   004712  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6691   004714  6C13               	negf	___aodiv@quotient^0,c
  6692   004716  0E00               	movlw	0
  6693   004718  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6694   00471A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6695   00471C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6696   00471E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6697   004720  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6698   004722  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6699   004724  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6700   004726                     l4105:
  6701   004726  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6702   00472A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6703   00472E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6704   004732  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6705   004736  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6706   00473A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6707   00473E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6708   004742  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6709   004746  0012               	return		;funcret
  6710   004748                     __end_of___aodiv:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function _sendStringSerial4 *****************
  6714 ;; Defined at:
  6715 ;;		line 33 in file "serial.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  string          2    1[COMRAM] PTR unsigned char 
  6718 ;;		 -> main@buf(100), 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:        2 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 2
  6737 ;; This function calls:
  6738 ;;		_sendCharSerial4
  6739 ;; This function is called by:
  6740 ;;		_main
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text21
  6745   005F9E                     __ptext21:
  6746                           	callstack 0
  6747   005F9E                     _sendStringSerial4:
  6748                           	callstack 28
  6749   005F9E                     
  6750                           ;serial.c: 34:     while (*string!=0){
  6751   005F9E  EFDA  F02F         	goto	l5463
  6752   005FA2                     l5459:
  6753                           
  6754                           ;serial.c: 35:         sendCharSerial4(*string++);
  6755   005FA2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6756   005FA6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6757   005FAA  50DF               	movf	indf2,w,c
  6758   005FAC  EC52  F030         	call	_sendCharSerial4
  6759   005FB0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6760   005FB2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6761   005FB4                     l5463:
  6762                           
  6763                           ;serial.c: 34:     while (*string!=0){
  6764   005FB4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6765   005FB8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6766   005FBC  50DF               	movf	indf2,w,c
  6767   005FBE  A4D8               	btfss	status,2,c
  6768   005FC0  EFE4  F02F         	goto	u5451
  6769   005FC4  EFE6  F02F         	goto	u5450
  6770   005FC8                     u5451:
  6771   005FC8  EFD1  F02F         	goto	l5459
  6772   005FCC                     u5450:
  6773   005FCC  0012               	return		;funcret
  6774   005FCE                     __end_of_sendStringSerial4:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function _sendCharSerial4 *****************
  6778 ;; Defined at:
  6779 ;;		line 26 in file "serial.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  charToSend      1    wreg     unsigned char 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  charToSend      1    0[COMRAM] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      void 
  6786 ;; Registers used:
  6787 ;;		wreg
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;Total ram usage:        1 bytes
  6798 ;; Hardware stack levels used: 1
  6799 ;; Hardware stack levels required when called: 1
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_sendStringSerial4
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text22
  6808   0060A4                     __ptext22:
  6809                           	callstack 0
  6810   0060A4                     _sendCharSerial4:
  6811                           	callstack 28
  6812                           
  6813                           ;incstack = 0
  6814                           ;sendCharSerial4@charToSend stored from wreg
  6815   0060A4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6816   0060A6                     l195:
  6817   0060A6  010E               	movlb	14	; () banked
  6818   0060A8  A537               	btfss	55,2,b	;volatile
  6819   0060AA  EF59  F030         	goto	u5001
  6820   0060AE  EF5B  F030         	goto	u5000
  6821   0060B2                     u5001:
  6822   0060B2  EF53  F030         	goto	l195
  6823   0060B6                     u5000:
  6824   0060B6                     
  6825                           ; BSR set to: 14
  6826                           ;serial.c: 28:     TX4REG = charToSend;
  6827   0060B6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6828   0060BA                     
  6829                           ; BSR set to: 14
  6830   0060BA  0012               	return		;funcret
  6831   0060BC                     __end_of_sendCharSerial4:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _readColours *****************
  6835 ;; Defined at:
  6836 ;;		line 105 in file "color.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  vals            2   11[COMRAM] PTR struct RGB
  6839 ;;		 -> vals(8), 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;Total ram usage:        2 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; Hardware stack levels required when called: 4
  6858 ;; This function calls:
  6859 ;;		_color_read_Blue
  6860 ;;		_color_read_Green
  6861 ;;		_color_read_Red
  6862 ;;		_color_read_lum
  6863 ;; This function is called by:
  6864 ;;		_main
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text23
  6869   0056AE                     __ptext23:
  6870                           	callstack 0
  6871   0056AE                     _readColours:
  6872                           	callstack 26
  6873   0056AE                     
  6874                           ;color.c: 107:     vals ->R = color_read_Red();
  6875   0056AE  ECA9  F02D         	call	_color_read_Red	;wreg free
  6876   0056B2  C00C  FFD9         	movff	readColours@vals,fsr2l
  6877   0056B6  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6878   0056BA  C005  FFDE         	movff	?_color_read_Red,postinc2
  6879   0056BE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6880                           
  6881                           ;color.c: 108:     vals ->B = color_read_Blue();
  6882   0056C2  ECF9  F02D         	call	_color_read_Blue	;wreg free
  6883   0056C6  EE20 F004          	lfsr	2,4
  6884   0056CA  500C               	movf	readColours@vals^0,w,c
  6885   0056CC  26D9               	addwf	fsr2l,f,c
  6886   0056CE  500D               	movf	(readColours@vals+1)^0,w,c
  6887   0056D0  22DA               	addwfc	fsr2h,f,c
  6888   0056D2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6889   0056D6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6890                           
  6891                           ;color.c: 109:     vals ->G = color_read_Green();
  6892   0056DA  ECD1  F02D         	call	_color_read_Green	;wreg free
  6893   0056DE  EE20 F002          	lfsr	2,2
  6894   0056E2  500C               	movf	readColours@vals^0,w,c
  6895   0056E4  26D9               	addwf	fsr2l,f,c
  6896   0056E6  500D               	movf	(readColours@vals+1)^0,w,c
  6897   0056E8  22DA               	addwfc	fsr2h,f,c
  6898   0056EA  C005  FFDE         	movff	?_color_read_Green,postinc2
  6899   0056EE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6900                           
  6901                           ;color.c: 110:     vals ->L = color_read_lum();
  6902   0056F2  EC81  F02D         	call	_color_read_lum	;wreg free
  6903   0056F6  EE20 F006          	lfsr	2,6
  6904   0056FA  500C               	movf	readColours@vals^0,w,c
  6905   0056FC  26D9               	addwf	fsr2l,f,c
  6906   0056FE  500D               	movf	(readColours@vals+1)^0,w,c
  6907   005700  22DA               	addwfc	fsr2h,f,c
  6908   005702  C005  FFDE         	movff	?_color_read_lum,postinc2
  6909   005706  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6910   00570A  0012               	return		;funcret
  6911   00570C                     __end_of_readColours:
  6912                           	callstack 0
  6913                           
  6914 ;; *************** function _color_read_lum *****************
  6915 ;; Defined at:
  6916 ;;		line 49 in file "color.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  tmp             2    9[COMRAM] unsigned int 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  2    4[COMRAM] unsigned int 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;Total ram usage:        7 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; Hardware stack levels required when called: 3
  6937 ;; This function calls:
  6938 ;;		_I2C_2_Master_Read
  6939 ;;		_I2C_2_Master_RepStart
  6940 ;;		_I2C_2_Master_Start
  6941 ;;		_I2C_2_Master_Stop
  6942 ;;		_I2C_2_Master_Write
  6943 ;; This function is called by:
  6944 ;;		_readColours
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text24
  6949   005B02                     __ptext24:
  6950                           	callstack 0
  6951   005B02                     _color_read_lum:
  6952                           	callstack 26
  6953   005B02                     
  6954                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6955   005B02  EC74  F030         	call	_I2C_2_Master_Start	;wreg free
  6956                           
  6957                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6958   005B06  0E52               	movlw	82
  6959   005B08  EC5E  F030         	call	_I2C_2_Master_Write
  6960                           
  6961                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6962   005B0C  0EB4               	movlw	180
  6963   005B0E  EC5E  F030         	call	_I2C_2_Master_Write
  6964                           
  6965                           ;color.c: 55:  I2C_2_Master_RepStart();
  6966   005B12  EC6A  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6967                           
  6968                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6969   005B16  0E53               	movlw	83
  6970   005B18  EC5E  F030         	call	_I2C_2_Master_Write
  6971                           
  6972                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6973   005B1C  0E01               	movlw	1
  6974   005B1E  ECFD  F02E         	call	_I2C_2_Master_Read
  6975   005B22  6E07               	movwf	??_color_read_lum^0,c
  6976   005B24  5007               	movf	??_color_read_lum^0,w,c
  6977   005B26  6E0A               	movwf	color_read_lum@tmp^0,c
  6978   005B28  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6979                           
  6980                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6981   005B2A  0E00               	movlw	0
  6982   005B2C  ECFD  F02E         	call	_I2C_2_Master_Read
  6983   005B30  6E07               	movwf	??_color_read_lum^0,c
  6984   005B32  5007               	movf	??_color_read_lum^0,w,c
  6985   005B34  6E09               	movwf	(??_color_read_lum+2)^0,c
  6986   005B36  6A08               	clrf	(??_color_read_lum+1)^0,c
  6987   005B38  500A               	movf	color_read_lum@tmp^0,w,c
  6988   005B3A  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6989   005B3C  6E0A               	movwf	color_read_lum@tmp^0,c
  6990   005B3E  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6991   005B40  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6992   005B42  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6993                           
  6994                           ;color.c: 59:  I2C_2_Master_Stop();
  6995   005B44  EC6F  F030         	call	_I2C_2_Master_Stop	;wreg free
  6996   005B48                     
  6997                           ;color.c: 60:  return tmp;
  6998   005B48  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6999   005B4C  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7000   005B50  0012               	return		;funcret
  7001   005B52                     __end_of_color_read_lum:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function _color_read_Red *****************
  7005 ;; Defined at:
  7006 ;;		line 63 in file "color.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  tmp             2    9[COMRAM] unsigned int 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2    4[COMRAM] unsigned int 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;Total ram usage:        7 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 3
  7027 ;; This function calls:
  7028 ;;		_I2C_2_Master_Read
  7029 ;;		_I2C_2_Master_RepStart
  7030 ;;		_I2C_2_Master_Start
  7031 ;;		_I2C_2_Master_Stop
  7032 ;;		_I2C_2_Master_Write
  7033 ;; This function is called by:
  7034 ;;		_readColours
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text25
  7039   005B52                     __ptext25:
  7040                           	callstack 0
  7041   005B52                     _color_read_Red:
  7042                           	callstack 26
  7043   005B52                     
  7044                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7045   005B52  EC74  F030         	call	_I2C_2_Master_Start	;wreg free
  7046                           
  7047                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7048   005B56  0E52               	movlw	82
  7049   005B58  EC5E  F030         	call	_I2C_2_Master_Write
  7050                           
  7051                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7052   005B5C  0EB6               	movlw	182
  7053   005B5E  EC5E  F030         	call	_I2C_2_Master_Write
  7054                           
  7055                           ;color.c: 69:  I2C_2_Master_RepStart();
  7056   005B62  EC6A  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7057                           
  7058                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7059   005B66  0E53               	movlw	83
  7060   005B68  EC5E  F030         	call	_I2C_2_Master_Write
  7061                           
  7062                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7063   005B6C  0E01               	movlw	1
  7064   005B6E  ECFD  F02E         	call	_I2C_2_Master_Read
  7065   005B72  6E07               	movwf	??_color_read_Red^0,c
  7066   005B74  5007               	movf	??_color_read_Red^0,w,c
  7067   005B76  6E0A               	movwf	color_read_Red@tmp^0,c
  7068   005B78  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7069                           
  7070                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7071   005B7A  0E00               	movlw	0
  7072   005B7C  ECFD  F02E         	call	_I2C_2_Master_Read
  7073   005B80  6E07               	movwf	??_color_read_Red^0,c
  7074   005B82  5007               	movf	??_color_read_Red^0,w,c
  7075   005B84  6E09               	movwf	(??_color_read_Red+2)^0,c
  7076   005B86  6A08               	clrf	(??_color_read_Red+1)^0,c
  7077   005B88  500A               	movf	color_read_Red@tmp^0,w,c
  7078   005B8A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7079   005B8C  6E0A               	movwf	color_read_Red@tmp^0,c
  7080   005B8E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7081   005B90  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7082   005B92  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7083                           
  7084                           ;color.c: 73:  I2C_2_Master_Stop();
  7085   005B94  EC6F  F030         	call	_I2C_2_Master_Stop	;wreg free
  7086   005B98                     
  7087                           ;color.c: 74:  return tmp;
  7088   005B98  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7089   005B9C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7090   005BA0  0012               	return		;funcret
  7091   005BA2                     __end_of_color_read_Red:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _color_read_Green *****************
  7095 ;; Defined at:
  7096 ;;		line 76 in file "color.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  tmp             2    9[COMRAM] unsigned int 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    4[COMRAM] unsigned int 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;Total ram usage:        7 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 3
  7117 ;; This function calls:
  7118 ;;		_I2C_2_Master_Read
  7119 ;;		_I2C_2_Master_RepStart
  7120 ;;		_I2C_2_Master_Start
  7121 ;;		_I2C_2_Master_Stop
  7122 ;;		_I2C_2_Master_Write
  7123 ;; This function is called by:
  7124 ;;		_readColours
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text26
  7129   005BA2                     __ptext26:
  7130                           	callstack 0
  7131   005BA2                     _color_read_Green:
  7132                           	callstack 26
  7133   005BA2                     
  7134                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7135   005BA2  EC74  F030         	call	_I2C_2_Master_Start	;wreg free
  7136                           
  7137                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7138   005BA6  0E52               	movlw	82
  7139   005BA8  EC5E  F030         	call	_I2C_2_Master_Write
  7140                           
  7141                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7142   005BAC  0EB8               	movlw	184
  7143   005BAE  EC5E  F030         	call	_I2C_2_Master_Write
  7144                           
  7145                           ;color.c: 82:  I2C_2_Master_RepStart();
  7146   005BB2  EC6A  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7147                           
  7148                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7149   005BB6  0E53               	movlw	83
  7150   005BB8  EC5E  F030         	call	_I2C_2_Master_Write
  7151                           
  7152                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7153   005BBC  0E01               	movlw	1
  7154   005BBE  ECFD  F02E         	call	_I2C_2_Master_Read
  7155   005BC2  6E07               	movwf	??_color_read_Green^0,c
  7156   005BC4  5007               	movf	??_color_read_Green^0,w,c
  7157   005BC6  6E0A               	movwf	color_read_Green@tmp^0,c
  7158   005BC8  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7159                           
  7160                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7161   005BCA  0E00               	movlw	0
  7162   005BCC  ECFD  F02E         	call	_I2C_2_Master_Read
  7163   005BD0  6E07               	movwf	??_color_read_Green^0,c
  7164   005BD2  5007               	movf	??_color_read_Green^0,w,c
  7165   005BD4  6E09               	movwf	(??_color_read_Green+2)^0,c
  7166   005BD6  6A08               	clrf	(??_color_read_Green+1)^0,c
  7167   005BD8  500A               	movf	color_read_Green@tmp^0,w,c
  7168   005BDA  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7169   005BDC  6E0A               	movwf	color_read_Green@tmp^0,c
  7170   005BDE  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7171   005BE0  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7172   005BE2  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7173                           
  7174                           ;color.c: 86:  I2C_2_Master_Stop();
  7175   005BE4  EC6F  F030         	call	_I2C_2_Master_Stop	;wreg free
  7176   005BE8                     
  7177                           ;color.c: 87:  return tmp;
  7178   005BE8  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7179   005BEC  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7180   005BF0  0012               	return		;funcret
  7181   005BF2                     __end_of_color_read_Green:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _color_read_Blue *****************
  7185 ;; Defined at:
  7186 ;;		line 90 in file "color.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;		None
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  tmp             2    9[COMRAM] unsigned int 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  2    4[COMRAM] unsigned int 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;Total ram usage:        7 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; Hardware stack levels required when called: 3
  7207 ;; This function calls:
  7208 ;;		_I2C_2_Master_Read
  7209 ;;		_I2C_2_Master_RepStart
  7210 ;;		_I2C_2_Master_Start
  7211 ;;		_I2C_2_Master_Stop
  7212 ;;		_I2C_2_Master_Write
  7213 ;; This function is called by:
  7214 ;;		_readColours
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text27
  7219   005BF2                     __ptext27:
  7220                           	callstack 0
  7221   005BF2                     _color_read_Blue:
  7222                           	callstack 26
  7223   005BF2                     
  7224                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7225   005BF2  EC74  F030         	call	_I2C_2_Master_Start	;wreg free
  7226                           
  7227                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7228   005BF6  0E52               	movlw	82
  7229   005BF8  EC5E  F030         	call	_I2C_2_Master_Write
  7230                           
  7231                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7232   005BFC  0EBA               	movlw	186
  7233   005BFE  EC5E  F030         	call	_I2C_2_Master_Write
  7234                           
  7235                           ;color.c: 96:  I2C_2_Master_RepStart();
  7236   005C02  EC6A  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7237                           
  7238                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7239   005C06  0E53               	movlw	83
  7240   005C08  EC5E  F030         	call	_I2C_2_Master_Write
  7241                           
  7242                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7243   005C0C  0E01               	movlw	1
  7244   005C0E  ECFD  F02E         	call	_I2C_2_Master_Read
  7245   005C12  6E07               	movwf	??_color_read_Blue^0,c
  7246   005C14  5007               	movf	??_color_read_Blue^0,w,c
  7247   005C16  6E0A               	movwf	color_read_Blue@tmp^0,c
  7248   005C18  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7249                           
  7250                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7251   005C1A  0E00               	movlw	0
  7252   005C1C  ECFD  F02E         	call	_I2C_2_Master_Read
  7253   005C20  6E07               	movwf	??_color_read_Blue^0,c
  7254   005C22  5007               	movf	??_color_read_Blue^0,w,c
  7255   005C24  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7256   005C26  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7257   005C28  500A               	movf	color_read_Blue@tmp^0,w,c
  7258   005C2A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7259   005C2C  6E0A               	movwf	color_read_Blue@tmp^0,c
  7260   005C2E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7261   005C30  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7262   005C32  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7263                           
  7264                           ;color.c: 100:  I2C_2_Master_Stop();
  7265   005C34  EC6F  F030         	call	_I2C_2_Master_Stop	;wreg free
  7266   005C38                     
  7267                           ;color.c: 101:  return tmp;
  7268   005C38  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7269   005C3C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7270   005C40  0012               	return		;funcret
  7271   005C42                     __end_of_color_read_Blue:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _I2C_2_Master_RepStart *****************
  7275 ;; Defined at:
  7276 ;;		line 33 in file "i2c.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; Hardware stack levels required when called: 2
  7297 ;; This function calls:
  7298 ;;		_I2C_2_Master_Idle
  7299 ;; This function is called by:
  7300 ;;		_color_read_lum
  7301 ;;		_color_read_Red
  7302 ;;		_color_read_Green
  7303 ;;		_color_read_Blue
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text28
  7308   0060D4                     __ptext28:
  7309                           	callstack 0
  7310   0060D4                     _I2C_2_Master_RepStart:
  7311                           	callstack 26
  7312   0060D4                     
  7313                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7314   0060D4  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7315   0060D8                     
  7316                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7317   0060D8  010E               	movlb	14	; () banked
  7318   0060DA  83DA               	bsf	218,1,b	;volatile
  7319   0060DC                     
  7320                           ; BSR set to: 14
  7321   0060DC  0012               	return		;funcret
  7322   0060DE                     __end_of_I2C_2_Master_RepStart:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function _I2C_2_Master_Read *****************
  7326 ;; Defined at:
  7327 ;;		line 51 in file "i2c.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  ack             1    wreg     unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  ack             1    2[COMRAM] unsigned char 
  7332 ;;  tmp             1    3[COMRAM] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      unsigned char 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2, status,0, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;Total ram usage:        3 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; Hardware stack levels required when called: 2
  7349 ;; This function calls:
  7350 ;;		_I2C_2_Master_Idle
  7351 ;; This function is called by:
  7352 ;;		_color_read_lum
  7353 ;;		_color_read_Red
  7354 ;;		_color_read_Green
  7355 ;;		_color_read_Blue
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text29
  7360   005DFA                     __ptext29:
  7361                           	callstack 0
  7362   005DFA                     _I2C_2_Master_Read:
  7363                           	callstack 26
  7364                           
  7365                           ; BSR set to: 14
  7366                           ;incstack = 0
  7367                           ;I2C_2_Master_Read@ack stored from wreg
  7368   005DFA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7369   005DFC                     
  7370                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7371   005DFC  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7372   005E00                     
  7373                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7374   005E00  010E               	movlb	14	; () banked
  7375   005E02  87DA               	bsf	218,3,b	;volatile
  7376                           
  7377                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7378   005E04  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7379   005E08                     
  7380                           ;i2c.c: 57:   tmp = SSP2BUF;
  7381   005E08  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7382                           
  7383                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7384   005E0C  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7385   005E10                     
  7386                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7387   005E10  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7388   005E12  B4D8               	btfsc	status,2,c
  7389   005E14  EF0E  F02F         	goto	u4931
  7390   005E18  EF12  F02F         	goto	u4930
  7391   005E1C                     u4931:
  7392   005E1C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7393   005E1E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7394   005E20  EF13  F02F         	goto	u4948
  7395   005E24                     u4930:
  7396   005E24  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7397   005E26                     u4948:
  7398   005E26  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7399   005E28  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7400   005E2A  010E               	movlb	14	; () banked
  7401   005E2C  51DA               	movf	218,w,b	;volatile
  7402   005E2E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7403   005E30  0BDF               	andlw	-33
  7404   005E32  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7405   005E34  6FDA               	movwf	218,b	;volatile
  7406   005E36                     
  7407                           ; BSR set to: 14
  7408                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7409   005E36  89DA               	bsf	218,4,b	;volatile
  7410   005E38                     
  7411                           ; BSR set to: 14
  7412                           ;i2c.c: 61:   return tmp;
  7413   005E38  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7414   005E3A                     
  7415                           ; BSR set to: 14
  7416   005E3A  0012               	return		;funcret
  7417   005E3C                     __end_of_I2C_2_Master_Read:
  7418                           	callstack 0
  7419                           
  7420 ;; *************** function _initUSART4 *****************
  7421 ;; Defined at:
  7422 ;;		line 4 in file "serial.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;Total ram usage:        0 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 1
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_main
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text30
  7451   006086                     __ptext30:
  7452                           	callstack 0
  7453   006086                     _initUSART4:
  7454                           	callstack 29
  7455   006086                     
  7456                           ;serial.c: 5:     RC0PPS = 0x12;
  7457   006086  0E12               	movlw	18
  7458   006088  010E               	movlb	14	; () banked
  7459   00608A  6F62               	movwf	98,b	;volatile
  7460                           
  7461                           ;serial.c: 6:     RX4PPS = 0x11;
  7462   00608C  0E11               	movlw	17
  7463   00608E  6F15               	movwf	21,b	;volatile
  7464   006090                     
  7465                           ; BSR set to: 14
  7466                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7467   006090  97E9               	bcf	233,3,b	;volatile
  7468   006092                     
  7469                           ; BSR set to: 14
  7470                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7471   006092  95E8               	bcf	232,2,b	;volatile
  7472                           
  7473                           ;serial.c: 9:     SP4BRGL = 51;
  7474   006094  0E33               	movlw	51
  7475   006096  6FE5               	movwf	229,b	;volatile
  7476                           
  7477                           ;serial.c: 10:     SP4BRGH = 0;
  7478   006098  0E00               	movlw	0
  7479   00609A  6FE6               	movwf	230,b	;volatile
  7480   00609C                     
  7481                           ; BSR set to: 14
  7482                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7483   00609C  89E7               	bsf	231,4,b	;volatile
  7484   00609E                     
  7485                           ; BSR set to: 14
  7486                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7487   00609E  8BE8               	bsf	232,5,b	;volatile
  7488   0060A0                     
  7489                           ; BSR set to: 14
  7490                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7491   0060A0  8FE7               	bsf	231,7,b	;volatile
  7492   0060A2                     
  7493                           ; BSR set to: 14
  7494   0060A2  0012               	return		;funcret
  7495   0060A4                     __end_of_initUSART4:
  7496                           	callstack 0
  7497                           
  7498 ;; *************** function _initDCmotorsPWM *****************
  7499 ;; Defined at:
  7500 ;;		line 6 in file "dc_motor.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;		None
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      void 
  7507 ;; Registers used:
  7508 ;;		wreg, status,2
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;Total ram usage:        2 bytes
  7519 ;; Hardware stack levels used: 1
  7520 ;; Hardware stack levels required when called: 1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_main
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text31
  7529   005322                     __ptext31:
  7530                           	callstack 0
  7531   005322                     _initDCmotorsPWM:
  7532                           	callstack 29
  7533   005322                     
  7534                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7535   005322  0E05               	movlw	5
  7536   005324  010E               	movlb	14	; () banked
  7537   005326  6F74               	movwf	116,b	;volatile
  7538                           
  7539                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7540   005328  0E06               	movlw	6
  7541   00532A  6F76               	movwf	118,b	;volatile
  7542                           
  7543                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7544   00532C  0E07               	movlw	7
  7545   00532E  6F69               	movwf	105,b	;volatile
  7546                           
  7547                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7548   005330  0E08               	movlw	8
  7549   005332  6F88               	movwf	136,b	;volatile
  7550   005334                     
  7551                           ; BSR set to: 14
  7552                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7553   005334  9485               	bcf	133,2,c	;volatile
  7554   005336                     
  7555                           ; BSR set to: 14
  7556                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7557   005336  9885               	bcf	133,4,c	;volatile
  7558   005338                     
  7559                           ; BSR set to: 14
  7560                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7561   005338  9E83               	bcf	131,7,c	;volatile
  7562   00533A                     
  7563                           ; BSR set to: 14
  7564                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7565   00533A  9C87               	bcf	135,6,c	;volatile
  7566                           
  7567                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7568   00533C  50BD               	movf	189,w,c	;volatile
  7569   00533E  0B8F               	andlw	-113
  7570   005340  0930               	iorlw	48
  7571   005342  6EBD               	movwf	189,c	;volatile
  7572                           
  7573                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7574   005344  0EE0               	movlw	-32
  7575   005346  16BE               	andwf	190,f,c	;volatile
  7576                           
  7577                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7578   005348  50BF               	movf	191,w,c	;volatile
  7579   00534A  0BF0               	andlw	-16
  7580   00534C  0901               	iorlw	1
  7581   00534E  6EBF               	movwf	191,c	;volatile
  7582   005350                     
  7583                           ; BSR set to: 14
  7584                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7585   005350  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7586   005354                     
  7587                           ; BSR set to: 14
  7588                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7589   005354  8EBD               	bsf	189,7,c	;volatile
  7590                           
  7591                           ;dc_motor.c: 34:     CCPR1H=0;
  7592   005356  0E00               	movlw	0
  7593   005358  6EAA               	movwf	170,c	;volatile
  7594                           
  7595                           ;dc_motor.c: 35:     CCPR2H=0;
  7596   00535A  0E00               	movlw	0
  7597   00535C  6EA6               	movwf	166,c	;volatile
  7598                           
  7599                           ;dc_motor.c: 36:     CCPR3H=0;
  7600   00535E  0E00               	movlw	0
  7601   005360  010F               	movlb	15	; () banked
  7602   005362  6F25               	movwf	37,b	;volatile
  7603                           
  7604                           ;dc_motor.c: 37:     CCPR4H=0;
  7605   005364  0E00               	movlw	0
  7606   005366  6F21               	movwf	33,b	;volatile
  7607                           
  7608                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7609   005368  0EFC               	movlw	-4
  7610   00536A  16AD               	andwf	173,f,c	;volatile
  7611                           
  7612                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7613   00536C  0EF3               	movlw	-13
  7614   00536E  16AD               	andwf	173,f,c	;volatile
  7615                           
  7616                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7617   005370  0ECF               	movlw	-49
  7618   005372  16AD               	andwf	173,f,c	;volatile
  7619                           
  7620                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7621   005374  0E3F               	movlw	-193
  7622   005376  16AD               	andwf	173,f,c	;volatile
  7623   005378                     
  7624                           ; BSR set to: 15
  7625                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7626   005378  88AB               	bsf	171,4,c	;volatile
  7627                           
  7628                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7629   00537A  50AB               	movf	171,w,c	;volatile
  7630   00537C  0BF0               	andlw	-16
  7631   00537E  090C               	iorlw	12
  7632   005380  6EAB               	movwf	171,c	;volatile
  7633   005382                     
  7634                           ; BSR set to: 15
  7635                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7636   005382  8EAB               	bsf	171,7,c	;volatile
  7637   005384                     
  7638                           ; BSR set to: 15
  7639                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7640   005384  88A7               	bsf	167,4,c	;volatile
  7641                           
  7642                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7643   005386  50A7               	movf	167,w,c	;volatile
  7644   005388  0BF0               	andlw	-16
  7645   00538A  090C               	iorlw	12
  7646   00538C  6EA7               	movwf	167,c	;volatile
  7647   00538E                     
  7648                           ; BSR set to: 15
  7649                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7650   00538E  8EA7               	bsf	167,7,c	;volatile
  7651   005390                     
  7652                           ; BSR set to: 15
  7653                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7654   005390  8926               	bsf	38,4,b	;volatile
  7655                           
  7656                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7657   005392  5126               	movf	38,w,b	;volatile
  7658   005394  0BF0               	andlw	-16
  7659   005396  090C               	iorlw	12
  7660   005398  6F26               	movwf	38,b	;volatile
  7661   00539A                     
  7662                           ; BSR set to: 15
  7663                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7664   00539A  8F26               	bsf	38,7,b	;volatile
  7665   00539C                     
  7666                           ; BSR set to: 15
  7667                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7668   00539C  8922               	bsf	34,4,b	;volatile
  7669                           
  7670                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7671   00539E  5122               	movf	34,w,b	;volatile
  7672   0053A0  0BF0               	andlw	-16
  7673   0053A2  090C               	iorlw	12
  7674   0053A4  6F22               	movwf	34,b	;volatile
  7675   0053A6                     
  7676                           ; BSR set to: 15
  7677                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7678   0053A6  8F22               	bsf	34,7,b	;volatile
  7679   0053A8                     
  7680                           ; BSR set to: 15
  7681   0053A8  0012               	return		;funcret
  7682   0053AA                     __end_of_initDCmotorsPWM:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _go_Home *****************
  7686 ;; Defined at:
  7687 ;;		line 4 in file "Memory.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7690 ;;		 -> WayBack(50), 
  7691 ;;  Time_forward    2   37[COMRAM] PTR int 
  7692 ;;		 -> Time_forward(100), 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  i               2   42[COMRAM] int 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;Total ram usage:        9 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 6
  7711 ;; This function calls:
  7712 ;;		_BlueMove
  7713 ;;		_GreenMove
  7714 ;;		_LightBlueMove
  7715 ;;		_OrangeMove
  7716 ;;		_RedMove
  7717 ;;		_ReversePink
  7718 ;;		_ReverseYellow
  7719 ;;		_reverseDetect
  7720 ;;		_stop
  7721 ;;		_timed_forward
  7722 ;; This function is called by:
  7723 ;;		_main
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text32
  7728   003ABC                     __ptext32:
  7729                           	callstack 0
  7730   003ABC                     _go_Home:
  7731                           	callstack 24
  7732   003ABC                     
  7733                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7734   003ABC  0E61               	movlw	low _motorL
  7735   003ABE  6E20               	movwf	BlueMove@mL^0,c
  7736   003AC0  0E01               	movlw	high _motorL
  7737   003AC2  6E21               	movwf	(BlueMove@mL+1)^0,c
  7738   003AC4  0E58               	movlw	low _motorR
  7739   003AC6  6E22               	movwf	BlueMove@mR^0,c
  7740   003AC8  0E01               	movlw	high _motorR
  7741   003ACA  6E23               	movwf	(BlueMove@mR+1)^0,c
  7742   003ACC  ECF3  F02A         	call	_BlueMove	;wreg free
  7743   003AD0                     
  7744                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7745   003AD0  9ED5               	bcf	213,7,c	;volatile
  7746   003AD2                     
  7747                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7748   003AD2  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7749   003AD6  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7750   003ADA                     l5581:
  7751   003ADA  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7752   003ADC  EF74  F01D         	goto	u5570
  7753   003AE0  EF72  F01D         	goto	u5571
  7754   003AE4                     u5571:
  7755   003AE4  EF76  F01D         	goto	l5585
  7756   003AE8                     u5570:
  7757   003AE8  EFCD  F01E         	goto	l638
  7758   003AEC                     l5585:
  7759                           
  7760                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7761   003AEC  0E61               	movlw	low _motorL
  7762   003AEE  6E14               	movwf	timed_forward@mL^0,c
  7763   003AF0  0E01               	movlw	high _motorL
  7764   003AF2  6E15               	movwf	(timed_forward@mL+1)^0,c
  7765   003AF4  0E58               	movlw	low _motorR
  7766   003AF6  6E16               	movwf	timed_forward@mR^0,c
  7767   003AF8  0E01               	movlw	high _motorR
  7768   003AFA  6E17               	movwf	(timed_forward@mR+1)^0,c
  7769   003AFC  90D8               	bcf	status,0,c
  7770   003AFE  342B               	rlcf	go_Home@i^0,w,c
  7771   003B00  6ED9               	movwf	fsr2l,c
  7772   003B02  342C               	rlcf	(go_Home@i+1)^0,w,c
  7773   003B04  6EDA               	movwf	fsr2h,c
  7774   003B06  5026               	movf	go_Home@Time_forward^0,w,c
  7775   003B08  26D9               	addwf	fsr2l,f,c
  7776   003B0A  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7777   003B0C  22DA               	addwfc	fsr2h,f,c
  7778   003B0E  CFDE F018          	movff	postinc2,timed_forward@time
  7779   003B12  CFDD F019          	movff	postdec2,timed_forward@time+1
  7780   003B16  ECAB  F027         	call	_timed_forward	;wreg free
  7781   003B1A                     
  7782                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7783   003B1A  502B               	movf	go_Home@i^0,w,c
  7784   003B1C  2424               	addwf	go_Home@WayBack^0,w,c
  7785   003B1E  6E28               	movwf	??_go_Home^0,c
  7786   003B20  502C               	movf	(go_Home@i+1)^0,w,c
  7787   003B22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7788   003B24  6E29               	movwf	(??_go_Home+1)^0,c
  7789   003B26  0EFF               	movlw	255
  7790   003B28  2428               	addwf	??_go_Home^0,w,c
  7791   003B2A  6ED9               	movwf	fsr2l,c
  7792   003B2C  0EFF               	movlw	255
  7793   003B2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7794   003B30  6EDA               	movwf	fsr2h,c
  7795   003B32  04DE               	decf	postinc2,w,c
  7796   003B34  A4D8               	btfss	status,2,c
  7797   003B36  EF9F  F01D         	goto	u5581
  7798   003B3A  EFA1  F01D         	goto	u5580
  7799   003B3E                     u5581:
  7800   003B3E  EFB7  F01D         	goto	l5591
  7801   003B42                     u5580:
  7802   003B42                     
  7803                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7804   003B42  0E61               	movlw	low _motorL
  7805   003B44  6E1A               	movwf	reverseDetect@mL^0,c
  7806   003B46  0E01               	movlw	high _motorL
  7807   003B48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7808   003B4A  0E58               	movlw	low _motorR
  7809   003B4C  6E1C               	movwf	reverseDetect@mR^0,c
  7810   003B4E  0E01               	movlw	high _motorR
  7811   003B50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7812   003B52  EC86  F02B         	call	_reverseDetect	;wreg free
  7813                           
  7814                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7815   003B56  0E61               	movlw	low _motorL
  7816   003B58  6E20               	movwf	GreenMove@mL^0,c
  7817   003B5A  0E01               	movlw	high _motorL
  7818   003B5C  6E21               	movwf	(GreenMove@mL+1)^0,c
  7819   003B5E  0E58               	movlw	low _motorR
  7820   003B60  6E22               	movwf	GreenMove@mR^0,c
  7821   003B62  0E01               	movlw	high _motorR
  7822   003B64  6E23               	movwf	(GreenMove@mR+1)^0,c
  7823   003B66  EC5D  F02F         	call	_GreenMove	;wreg free
  7824                           
  7825                           ;Memory.c: 14:         }
  7826   003B6A  EFB9  F01E         	goto	l626
  7827   003B6E                     l5591:
  7828   003B6E  502B               	movf	go_Home@i^0,w,c
  7829   003B70  2424               	addwf	go_Home@WayBack^0,w,c
  7830   003B72  6E28               	movwf	??_go_Home^0,c
  7831   003B74  502C               	movf	(go_Home@i+1)^0,w,c
  7832   003B76  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7833   003B78  6E29               	movwf	(??_go_Home+1)^0,c
  7834   003B7A  0EFF               	movlw	255
  7835   003B7C  2428               	addwf	??_go_Home^0,w,c
  7836   003B7E  6ED9               	movwf	fsr2l,c
  7837   003B80  0EFF               	movlw	255
  7838   003B82  2029               	addwfc	(??_go_Home+1)^0,w,c
  7839   003B84  6EDA               	movwf	fsr2h,c
  7840   003B86  0E02               	movlw	2
  7841   003B88  18DE               	xorwf	postinc2,w,c
  7842   003B8A  A4D8               	btfss	status,2,c
  7843   003B8C  EFCA  F01D         	goto	u5591
  7844   003B90  EFCC  F01D         	goto	u5590
  7845   003B94                     u5591:
  7846   003B94  EFE2  F01D         	goto	l5595
  7847   003B98                     u5590:
  7848   003B98                     
  7849                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7850   003B98  0E61               	movlw	low _motorL
  7851   003B9A  6E1A               	movwf	reverseDetect@mL^0,c
  7852   003B9C  0E01               	movlw	high _motorL
  7853   003B9E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7854   003BA0  0E58               	movlw	low _motorR
  7855   003BA2  6E1C               	movwf	reverseDetect@mR^0,c
  7856   003BA4  0E01               	movlw	high _motorR
  7857   003BA6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7858   003BA8  EC86  F02B         	call	_reverseDetect	;wreg free
  7859                           
  7860                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7861   003BAC  0E61               	movlw	low _motorL
  7862   003BAE  6E20               	movwf	LightBlueMove@mL^0,c
  7863   003BB0  0E01               	movlw	high _motorL
  7864   003BB2  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7865   003BB4  0E58               	movlw	low _motorR
  7866   003BB6  6E22               	movwf	LightBlueMove@mR^0,c
  7867   003BB8  0E01               	movlw	high _motorR
  7868   003BBA  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7869   003BBC  ECB5  F02C         	call	_LightBlueMove	;wreg free
  7870                           
  7871                           ;Memory.c: 18:         }
  7872   003BC0  EFB9  F01E         	goto	l626
  7873   003BC4                     l5595:
  7874   003BC4  502B               	movf	go_Home@i^0,w,c
  7875   003BC6  2424               	addwf	go_Home@WayBack^0,w,c
  7876   003BC8  6E28               	movwf	??_go_Home^0,c
  7877   003BCA  502C               	movf	(go_Home@i+1)^0,w,c
  7878   003BCC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7879   003BCE  6E29               	movwf	(??_go_Home+1)^0,c
  7880   003BD0  0EFF               	movlw	255
  7881   003BD2  2428               	addwf	??_go_Home^0,w,c
  7882   003BD4  6ED9               	movwf	fsr2l,c
  7883   003BD6  0EFF               	movlw	255
  7884   003BD8  2029               	addwfc	(??_go_Home+1)^0,w,c
  7885   003BDA  6EDA               	movwf	fsr2h,c
  7886   003BDC  0E03               	movlw	3
  7887   003BDE  18DE               	xorwf	postinc2,w,c
  7888   003BE0  A4D8               	btfss	status,2,c
  7889   003BE2  EFF5  F01D         	goto	u5601
  7890   003BE6  EFF7  F01D         	goto	u5600
  7891   003BEA                     u5601:
  7892   003BEA  EF0D  F01E         	goto	l5599
  7893   003BEE                     u5600:
  7894   003BEE                     
  7895                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7896   003BEE  0E61               	movlw	low _motorL
  7897   003BF0  6E1A               	movwf	reverseDetect@mL^0,c
  7898   003BF2  0E01               	movlw	high _motorL
  7899   003BF4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7900   003BF6  0E58               	movlw	low _motorR
  7901   003BF8  6E1C               	movwf	reverseDetect@mR^0,c
  7902   003BFA  0E01               	movlw	high _motorR
  7903   003BFC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7904   003BFE  EC86  F02B         	call	_reverseDetect	;wreg free
  7905                           
  7906                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7907   003C02  0E61               	movlw	low _motorL
  7908   003C04  6E20               	movwf	ReverseYellow@mL^0,c
  7909   003C06  0E01               	movlw	high _motorL
  7910   003C08  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7911   003C0A  0E58               	movlw	low _motorR
  7912   003C0C  6E22               	movwf	ReverseYellow@mR^0,c
  7913   003C0E  0E01               	movlw	high _motorR
  7914   003C10  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7915   003C12  ECF5  F026         	call	_ReverseYellow	;wreg free
  7916                           
  7917                           ;Memory.c: 22:         }
  7918   003C16  EFB9  F01E         	goto	l626
  7919   003C1A                     l5599:
  7920   003C1A  502B               	movf	go_Home@i^0,w,c
  7921   003C1C  2424               	addwf	go_Home@WayBack^0,w,c
  7922   003C1E  6E28               	movwf	??_go_Home^0,c
  7923   003C20  502C               	movf	(go_Home@i+1)^0,w,c
  7924   003C22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7925   003C24  6E29               	movwf	(??_go_Home+1)^0,c
  7926   003C26  0EFF               	movlw	255
  7927   003C28  2428               	addwf	??_go_Home^0,w,c
  7928   003C2A  6ED9               	movwf	fsr2l,c
  7929   003C2C  0EFF               	movlw	255
  7930   003C2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7931   003C30  6EDA               	movwf	fsr2h,c
  7932   003C32  0E04               	movlw	4
  7933   003C34  18DE               	xorwf	postinc2,w,c
  7934   003C36  A4D8               	btfss	status,2,c
  7935   003C38  EF20  F01E         	goto	u5611
  7936   003C3C  EF22  F01E         	goto	u5610
  7937   003C40                     u5611:
  7938   003C40  EF38  F01E         	goto	l5603
  7939   003C44                     u5610:
  7940   003C44                     
  7941                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7942   003C44  0E61               	movlw	low _motorL
  7943   003C46  6E1A               	movwf	reverseDetect@mL^0,c
  7944   003C48  0E01               	movlw	high _motorL
  7945   003C4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7946   003C4C  0E58               	movlw	low _motorR
  7947   003C4E  6E1C               	movwf	reverseDetect@mR^0,c
  7948   003C50  0E01               	movlw	high _motorR
  7949   003C52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7950   003C54  EC86  F02B         	call	_reverseDetect	;wreg free
  7951                           
  7952                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7953   003C58  0E61               	movlw	low _motorL
  7954   003C5A  6E20               	movwf	BlueMove@mL^0,c
  7955   003C5C  0E01               	movlw	high _motorL
  7956   003C5E  6E21               	movwf	(BlueMove@mL+1)^0,c
  7957   003C60  0E58               	movlw	low _motorR
  7958   003C62  6E22               	movwf	BlueMove@mR^0,c
  7959   003C64  0E01               	movlw	high _motorR
  7960   003C66  6E23               	movwf	(BlueMove@mR+1)^0,c
  7961   003C68  ECF3  F02A         	call	_BlueMove	;wreg free
  7962                           
  7963                           ;Memory.c: 26:         }
  7964   003C6C  EFB9  F01E         	goto	l626
  7965   003C70                     l5603:
  7966   003C70  502B               	movf	go_Home@i^0,w,c
  7967   003C72  2424               	addwf	go_Home@WayBack^0,w,c
  7968   003C74  6E28               	movwf	??_go_Home^0,c
  7969   003C76  502C               	movf	(go_Home@i+1)^0,w,c
  7970   003C78  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7971   003C7A  6E29               	movwf	(??_go_Home+1)^0,c
  7972   003C7C  0EFF               	movlw	255
  7973   003C7E  2428               	addwf	??_go_Home^0,w,c
  7974   003C80  6ED9               	movwf	fsr2l,c
  7975   003C82  0EFF               	movlw	255
  7976   003C84  2029               	addwfc	(??_go_Home+1)^0,w,c
  7977   003C86  6EDA               	movwf	fsr2h,c
  7978   003C88  0E05               	movlw	5
  7979   003C8A  18DE               	xorwf	postinc2,w,c
  7980   003C8C  A4D8               	btfss	status,2,c
  7981   003C8E  EF4B  F01E         	goto	u5621
  7982   003C92  EF4D  F01E         	goto	u5620
  7983   003C96                     u5621:
  7984   003C96  EF63  F01E         	goto	l5607
  7985   003C9A                     u5620:
  7986   003C9A                     
  7987                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7988   003C9A  0E61               	movlw	low _motorL
  7989   003C9C  6E1A               	movwf	reverseDetect@mL^0,c
  7990   003C9E  0E01               	movlw	high _motorL
  7991   003CA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7992   003CA2  0E58               	movlw	low _motorR
  7993   003CA4  6E1C               	movwf	reverseDetect@mR^0,c
  7994   003CA6  0E01               	movlw	high _motorR
  7995   003CA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7996   003CAA  EC86  F02B         	call	_reverseDetect	;wreg free
  7997                           
  7998                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  7999   003CAE  0E61               	movlw	low _motorL
  8000   003CB0  6E20               	movwf	RedMove@mL^0,c
  8001   003CB2  0E01               	movlw	high _motorL
  8002   003CB4  6E21               	movwf	(RedMove@mL+1)^0,c
  8003   003CB6  0E58               	movlw	low _motorR
  8004   003CB8  6E22               	movwf	RedMove@mR^0,c
  8005   003CBA  0E01               	movlw	high _motorR
  8006   003CBC  6E23               	movwf	(RedMove@mR+1)^0,c
  8007   003CBE  EC3E  F02F         	call	_RedMove	;wreg free
  8008                           
  8009                           ;Memory.c: 30:         }
  8010   003CC2  EFB9  F01E         	goto	l626
  8011   003CC6                     l5607:
  8012   003CC6  502B               	movf	go_Home@i^0,w,c
  8013   003CC8  2424               	addwf	go_Home@WayBack^0,w,c
  8014   003CCA  6E28               	movwf	??_go_Home^0,c
  8015   003CCC  502C               	movf	(go_Home@i+1)^0,w,c
  8016   003CCE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8017   003CD0  6E29               	movwf	(??_go_Home+1)^0,c
  8018   003CD2  0EFF               	movlw	255
  8019   003CD4  2428               	addwf	??_go_Home^0,w,c
  8020   003CD6  6ED9               	movwf	fsr2l,c
  8021   003CD8  0EFF               	movlw	255
  8022   003CDA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8023   003CDC  6EDA               	movwf	fsr2h,c
  8024   003CDE  0E06               	movlw	6
  8025   003CE0  18DE               	xorwf	postinc2,w,c
  8026   003CE2  A4D8               	btfss	status,2,c
  8027   003CE4  EF76  F01E         	goto	u5631
  8028   003CE8  EF78  F01E         	goto	u5630
  8029   003CEC                     u5631:
  8030   003CEC  EF8E  F01E         	goto	l5611
  8031   003CF0                     u5630:
  8032   003CF0                     
  8033                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8034   003CF0  0E61               	movlw	low _motorL
  8035   003CF2  6E1A               	movwf	reverseDetect@mL^0,c
  8036   003CF4  0E01               	movlw	high _motorL
  8037   003CF6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8038   003CF8  0E58               	movlw	low _motorR
  8039   003CFA  6E1C               	movwf	reverseDetect@mR^0,c
  8040   003CFC  0E01               	movlw	high _motorR
  8041   003CFE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8042   003D00  EC86  F02B         	call	_reverseDetect	;wreg free
  8043                           
  8044                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8045   003D04  0E61               	movlw	low _motorL
  8046   003D06  6E20               	movwf	OrangeMove@mL^0,c
  8047   003D08  0E01               	movlw	high _motorL
  8048   003D0A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8049   003D0C  0E58               	movlw	low _motorR
  8050   003D0E  6E22               	movwf	OrangeMove@mR^0,c
  8051   003D10  0E01               	movlw	high _motorR
  8052   003D12  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8053   003D14  EC8C  F02C         	call	_OrangeMove	;wreg free
  8054                           
  8055                           ;Memory.c: 34:         }
  8056   003D18  EFB9  F01E         	goto	l626
  8057   003D1C                     l5611:
  8058   003D1C  502B               	movf	go_Home@i^0,w,c
  8059   003D1E  2424               	addwf	go_Home@WayBack^0,w,c
  8060   003D20  6E28               	movwf	??_go_Home^0,c
  8061   003D22  502C               	movf	(go_Home@i+1)^0,w,c
  8062   003D24  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8063   003D26  6E29               	movwf	(??_go_Home+1)^0,c
  8064   003D28  0EFF               	movlw	255
  8065   003D2A  2428               	addwf	??_go_Home^0,w,c
  8066   003D2C  6ED9               	movwf	fsr2l,c
  8067   003D2E  0EFF               	movlw	255
  8068   003D30  2029               	addwfc	(??_go_Home+1)^0,w,c
  8069   003D32  6EDA               	movwf	fsr2h,c
  8070   003D34  0E07               	movlw	7
  8071   003D36  18DE               	xorwf	postinc2,w,c
  8072   003D38  A4D8               	btfss	status,2,c
  8073   003D3A  EFA1  F01E         	goto	u5641
  8074   003D3E  EFA3  F01E         	goto	u5640
  8075   003D42                     u5641:
  8076   003D42  EFB9  F01E         	goto	l632
  8077   003D46                     u5640:
  8078   003D46                     
  8079                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8080   003D46  0E61               	movlw	low _motorL
  8081   003D48  6E1A               	movwf	reverseDetect@mL^0,c
  8082   003D4A  0E01               	movlw	high _motorL
  8083   003D4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8084   003D4E  0E58               	movlw	low _motorR
  8085   003D50  6E1C               	movwf	reverseDetect@mR^0,c
  8086   003D52  0E01               	movlw	high _motorR
  8087   003D54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8088   003D56  EC86  F02B         	call	_reverseDetect	;wreg free
  8089                           
  8090                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8091   003D5A  0E61               	movlw	low _motorL
  8092   003D5C  6E20               	movwf	ReversePink@mL^0,c
  8093   003D5E  0E01               	movlw	high _motorL
  8094   003D60  6E21               	movwf	(ReversePink@mL+1)^0,c
  8095   003D62  0E58               	movlw	low _motorR
  8096   003D64  6E22               	movwf	ReversePink@mR^0,c
  8097   003D66  0E01               	movlw	high _motorR
  8098   003D68  6E23               	movwf	(ReversePink@mR+1)^0,c
  8099   003D6A  EC50  F027         	call	_ReversePink	;wreg free
  8100   003D6E  EFB9  F01E         	goto	l626
  8101   003D72                     l632:
  8102   003D72                     l626:
  8103                           
  8104                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8105   003D72  0E61               	movlw	low _motorL
  8106   003D74  6E14               	movwf	stop@mL^0,c
  8107   003D76  0E01               	movlw	high _motorL
  8108   003D78  6E15               	movwf	(stop@mL+1)^0,c
  8109   003D7A  0E58               	movlw	low _motorR
  8110   003D7C  6E16               	movwf	stop@mR^0,c
  8111   003D7E  0E01               	movlw	high _motorR
  8112   003D80  6E17               	movwf	(stop@mR+1)^0,c
  8113   003D82  ECD5  F029         	call	_stop	;wreg free
  8114   003D86                     
  8115                           ;Memory.c: 40:         run_flag=0;
  8116   003D86  0E00               	movlw	0
  8117   003D88  0101               	movlb	1	; () banked
  8118   003D8A  6F17               	movwf	(_run_flag+1)& (0+255),b
  8119   003D8C  0E00               	movlw	0
  8120   003D8E  6F16               	movwf	_run_flag& (0+255),b
  8121   003D90                     
  8122                           ; BSR set to: 1
  8123                           ;Memory.c: 43:   }
  8124   003D90  062B               	decf	go_Home@i^0,f,c
  8125   003D92  A0D8               	btfss	status,0,c
  8126   003D94  062C               	decf	(go_Home@i+1)^0,f,c
  8127   003D96  EF6D  F01D         	goto	l5581
  8128   003D9A                     l638:
  8129   003D9A  0012               	return		;funcret
  8130   003D9C                     __end_of_go_Home:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _timed_forward *****************
  8134 ;; Defined at:
  8135 ;;		line 165 in file "dc_motor.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8138 ;;		 -> motorL(9), 
  8139 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8140 ;;		 -> motorR(9), 
  8141 ;;  time            2   23[COMRAM] int 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;Total ram usage:        8 bytes
  8158 ;; Hardware stack levels used: 1
  8159 ;; Hardware stack levels required when called: 3
  8160 ;; This function calls:
  8161 ;;		_delayed_ms
  8162 ;;		_setMotorPWM
  8163 ;; This function is called by:
  8164 ;;		_go_Home
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text33
  8169   004F56                     __ptext33:
  8170                           	callstack 0
  8171   004F56                     _timed_forward:
  8172                           	callstack 26
  8173   004F56                     
  8174                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8175   004F56  EE20 F001          	lfsr	2,1
  8176   004F5A  5014               	movf	timed_forward@mL^0,w,c
  8177   004F5C  26D9               	addwf	fsr2l,f,c
  8178   004F5E  5015               	movf	(timed_forward@mL+1)^0,w,c
  8179   004F60  22DA               	addwfc	fsr2h,f,c
  8180   004F62  0E01               	movlw	1
  8181   004F64  6EDF               	movwf	indf2,c
  8182                           
  8183                           ;dc_motor.c: 169:     mR->direction =1;
  8184   004F66  EE20 F001          	lfsr	2,1
  8185   004F6A  5016               	movf	timed_forward@mR^0,w,c
  8186   004F6C  26D9               	addwf	fsr2l,f,c
  8187   004F6E  5017               	movf	(timed_forward@mR+1)^0,w,c
  8188   004F70  22DA               	addwfc	fsr2h,f,c
  8189   004F72  0E01               	movlw	1
  8190   004F74  6EDF               	movwf	indf2,c
  8191                           
  8192                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8193   004F76  EFE1  F027         	goto	l5159
  8194   004F7A                     l5151:
  8195                           
  8196                           ;dc_motor.c: 172:         mL->power+=10;
  8197   004F7A  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8198   004F7E  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8199   004F82  0E0A               	movlw	10
  8200   004F84  26DF               	addwf	indf2,f,c
  8201                           
  8202                           ;dc_motor.c: 173:         mR->power+=10;
  8203   004F86  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8204   004F8A  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8205   004F8E  0E0A               	movlw	10
  8206   004F90  26DF               	addwf	indf2,f,c
  8207   004F92                     
  8208                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8209   004F92  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8210   004F96  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8211   004F9A  ECA4  F023         	call	_setMotorPWM	;wreg free
  8212   004F9E                     
  8213                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8214   004F9E  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8215   004FA2  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8216   004FA6  ECA4  F023         	call	_setMotorPWM	;wreg free
  8217   004FAA                     
  8218                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8219   004FAA  0E02               	movlw	2
  8220   004FAC  6E1B               	movwf	(??_timed_forward+1)^0,c
  8221   004FAE  0EA0               	movlw	160
  8222   004FB0  6E1A               	movwf	??_timed_forward^0,c
  8223   004FB2  0E92               	movlw	146
  8224   004FB4                     u5987:
  8225   004FB4  2EE8               	decfsz	wreg,f,c
  8226   004FB6  D7FE               	bra	u5987
  8227   004FB8  2E1A               	decfsz	??_timed_forward^0,f,c
  8228   004FBA  D7FC               	bra	u5987
  8229   004FBC  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8230   004FBE  D7FA               	bra	u5987
  8231   004FC0  D000               	nop2	
  8232   004FC2                     l5159:
  8233   004FC2  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8234   004FC6  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8235   004FCA  0E32               	movlw	50
  8236   004FCC  60DF               	cpfslt	indf2,c
  8237   004FCE  EFEB  F027         	goto	u5011
  8238   004FD2  EFED  F027         	goto	u5010
  8239   004FD6                     u5011:
  8240   004FD6  EFF9  F027         	goto	l5163
  8241   004FDA                     u5010:
  8242   004FDA  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8243   004FDE  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8244   004FE2  0E31               	movlw	49
  8245   004FE4  64DF               	cpfsgt	indf2,c
  8246   004FE6  EFF7  F027         	goto	u5021
  8247   004FEA  EFF9  F027         	goto	u5020
  8248   004FEE                     u5021:
  8249   004FEE  EFBD  F027         	goto	l5151
  8250   004FF2                     u5020:
  8251   004FF2                     l5163:
  8252                           
  8253                           ;dc_motor.c: 181:     delayed_ms(time);
  8254   004FF2  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8255   004FF6  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8256   004FFA  EC98  F02F         	call	_delayed_ms	;wreg free
  8257   004FFE  0012               	return		;funcret
  8258   005000                     __end_of_timed_forward:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _delayed_ms *****************
  8262 ;; Defined at:
  8263 ;;		line 43 in file "timers.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  time            2    0[COMRAM] int 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  i               2    3[COMRAM] unsigned int 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        5 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_timed_forward
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text34
  8292   005F30                     __ptext34:
  8293                           	callstack 0
  8294   005F30                     _delayed_ms:
  8295                           	callstack 27
  8296   005F30                     
  8297                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8298   005F30  0E00               	movlw	0
  8299   005F32  6E05               	movwf	(delayed_ms@i+1)^0,c
  8300   005F34  0E00               	movlw	0
  8301   005F36  6E04               	movwf	delayed_ms@i^0,c
  8302   005F38  EFA8  F02F         	goto	l668
  8303   005F3C                     l4983:
  8304                           
  8305                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8306   005F3C  0E0B               	movlw	11
  8307   005F3E  6E03               	movwf	??_delayed_ms^0,c
  8308   005F40  0E62               	movlw	98
  8309   005F42                     u5997:
  8310   005F42  2EE8               	decfsz	wreg,f,c
  8311   005F44  D7FE               	bra	u5997
  8312   005F46  2E03               	decfsz	??_delayed_ms^0,f,c
  8313   005F48  D7FC               	bra	u5997
  8314   005F4A  D000               	nop2	
  8315   005F4C                     
  8316                           ;timers.c: 46:     }
  8317   005F4C  4A04               	infsnz	delayed_ms@i^0,f,c
  8318   005F4E  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8319   005F50                     l668:
  8320   005F50  5001               	movf	delayed_ms@time^0,w,c
  8321   005F52  5C04               	subwf	delayed_ms@i^0,w,c
  8322   005F54  5002               	movf	(delayed_ms@time+1)^0,w,c
  8323   005F56  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8324   005F58  A0D8               	btfss	status,0,c
  8325   005F5A  EFB1  F02F         	goto	u4951
  8326   005F5E  EFB3  F02F         	goto	u4950
  8327   005F62                     u4951:
  8328   005F62  EF9E  F02F         	goto	l4983
  8329   005F66                     u4950:
  8330   005F66  0012               	return		;funcret
  8331   005F68                     __end_of_delayed_ms:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _ReverseYellow *****************
  8335 ;; Defined at:
  8336 ;;		line 333 in file "dc_motor.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8339 ;;		 -> motorL(9), 
  8340 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8341 ;;		 -> motorR(9), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;Total ram usage:        4 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 5
  8360 ;; This function calls:
  8361 ;;		_ForwardOneBlock
  8362 ;;		_reverseDetect
  8363 ;;		_turnRight45
  8364 ;; This function is called by:
  8365 ;;		_go_Home
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text35
  8370   004DEA                     __ptext35:
  8371                           	callstack 0
  8372   004DEA                     _ReverseYellow:
  8373                           	callstack 24
  8374   004DEA                     
  8375                           ;dc_motor.c: 334:     reverseDetect(&motorL, &motorR);
  8376   004DEA  0E61               	movlw	low _motorL
  8377   004DEC  6E1A               	movwf	reverseDetect@mL^0,c
  8378   004DEE  0E01               	movlw	high _motorL
  8379   004DF0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8380   004DF2  0E58               	movlw	low _motorR
  8381   004DF4  6E1C               	movwf	reverseDetect@mR^0,c
  8382   004DF6  0E01               	movlw	high _motorR
  8383   004DF8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8384   004DFA  EC86  F02B         	call	_reverseDetect	;wreg free
  8385                           
  8386                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
  8387   004DFE  0E61               	movlw	low _motorL
  8388   004E00  6E1A               	movwf	turnRight45@mL^0,c
  8389   004E02  0E01               	movlw	high _motorL
  8390   004E04  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8391   004E06  0E58               	movlw	low _motorR
  8392   004E08  6E1C               	movwf	turnRight45@mR^0,c
  8393   004E0A  0E01               	movlw	high _motorR
  8394   004E0C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8395   004E0E  EC48  F02E         	call	_turnRight45	;wreg free
  8396                           
  8397                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8398   004E12  0E61               	movlw	low _motorL
  8399   004E14  6E1A               	movwf	turnRight45@mL^0,c
  8400   004E16  0E01               	movlw	high _motorL
  8401   004E18  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8402   004E1A  0E58               	movlw	low _motorR
  8403   004E1C  6E1C               	movwf	turnRight45@mR^0,c
  8404   004E1E  0E01               	movlw	high _motorR
  8405   004E20  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8406   004E22  EC48  F02E         	call	_turnRight45	;wreg free
  8407                           
  8408                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  8409   004E26  0E61               	movlw	low _motorL
  8410   004E28  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8411   004E2A  0E01               	movlw	high _motorL
  8412   004E2C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8413   004E2E  0E58               	movlw	low _motorR
  8414   004E30  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8415   004E32  0E01               	movlw	high _motorR
  8416   004E34  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8417   004E36  ECE0  F02B         	call	_ForwardOneBlock	;wreg free
  8418                           
  8419                           ;dc_motor.c: 338:     reverseDetect(&motorL, &motorR);
  8420   004E3A  0E61               	movlw	low _motorL
  8421   004E3C  6E1A               	movwf	reverseDetect@mL^0,c
  8422   004E3E  0E01               	movlw	high _motorL
  8423   004E40  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8424   004E42  0E58               	movlw	low _motorR
  8425   004E44  6E1C               	movwf	reverseDetect@mR^0,c
  8426   004E46  0E01               	movlw	high _motorR
  8427   004E48  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8428   004E4A  EC86  F02B         	call	_reverseDetect	;wreg free
  8429                           
  8430                           ;dc_motor.c: 339:     turnRight45(&motorL, &motorR);
  8431   004E4E  0E61               	movlw	low _motorL
  8432   004E50  6E1A               	movwf	turnRight45@mL^0,c
  8433   004E52  0E01               	movlw	high _motorL
  8434   004E54  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8435   004E56  0E58               	movlw	low _motorR
  8436   004E58  6E1C               	movwf	turnRight45@mR^0,c
  8437   004E5A  0E01               	movlw	high _motorR
  8438   004E5C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8439   004E5E  EC48  F02E         	call	_turnRight45	;wreg free
  8440                           
  8441                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8442   004E62  0E61               	movlw	low _motorL
  8443   004E64  6E1A               	movwf	turnRight45@mL^0,c
  8444   004E66  0E01               	movlw	high _motorL
  8445   004E68  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8446   004E6A  0E58               	movlw	low _motorR
  8447   004E6C  6E1C               	movwf	turnRight45@mR^0,c
  8448   004E6E  0E01               	movlw	high _motorR
  8449   004E70  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8450   004E72  EC48  F02E         	call	_turnRight45	;wreg free
  8451                           
  8452                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8453   004E76  0E61               	movlw	low _motorL
  8454   004E78  6E1A               	movwf	turnRight45@mL^0,c
  8455   004E7A  0E01               	movlw	high _motorL
  8456   004E7C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8457   004E7E  0E58               	movlw	low _motorR
  8458   004E80  6E1C               	movwf	turnRight45@mR^0,c
  8459   004E82  0E01               	movlw	high _motorR
  8460   004E84  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8461   004E86  EC48  F02E         	call	_turnRight45	;wreg free
  8462                           
  8463                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8464   004E8A  0E61               	movlw	low _motorL
  8465   004E8C  6E1A               	movwf	turnRight45@mL^0,c
  8466   004E8E  0E01               	movlw	high _motorL
  8467   004E90  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8468   004E92  0E58               	movlw	low _motorR
  8469   004E94  6E1C               	movwf	turnRight45@mR^0,c
  8470   004E96  0E01               	movlw	high _motorR
  8471   004E98  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8472   004E9A  EC48  F02E         	call	_turnRight45	;wreg free
  8473   004E9E  0012               	return		;funcret
  8474   004EA0                     __end_of_ReverseYellow:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function _ReversePink *****************
  8478 ;; Defined at:
  8479 ;;		line 344 in file "dc_motor.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8482 ;;		 -> motorL(9), 
  8483 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8484 ;;		 -> motorR(9), 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;Total ram usage:        4 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; Hardware stack levels required when called: 5
  8503 ;; This function calls:
  8504 ;;		_ForwardOneBlock
  8505 ;;		_reverseDetect
  8506 ;;		_turnLeft45
  8507 ;; This function is called by:
  8508 ;;		_go_Home
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text36
  8513   004EA0                     __ptext36:
  8514                           	callstack 0
  8515   004EA0                     _ReversePink:
  8516                           	callstack 24
  8517   004EA0                     
  8518                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  8519   004EA0  0E61               	movlw	low _motorL
  8520   004EA2  6E1A               	movwf	reverseDetect@mL^0,c
  8521   004EA4  0E01               	movlw	high _motorL
  8522   004EA6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8523   004EA8  0E58               	movlw	low _motorR
  8524   004EAA  6E1C               	movwf	reverseDetect@mR^0,c
  8525   004EAC  0E01               	movlw	high _motorR
  8526   004EAE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8527   004EB0  EC86  F02B         	call	_reverseDetect	;wreg free
  8528                           
  8529                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
  8530   004EB4  0E61               	movlw	low _motorL
  8531   004EB6  6E1A               	movwf	turnLeft45@mL^0,c
  8532   004EB8  0E01               	movlw	high _motorL
  8533   004EBA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8534   004EBC  0E58               	movlw	low _motorR
  8535   004EBE  6E1C               	movwf	turnLeft45@mR^0,c
  8536   004EC0  0E01               	movlw	high _motorR
  8537   004EC2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8538   004EC4  EC6F  F02E         	call	_turnLeft45	;wreg free
  8539                           
  8540                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8541   004EC8  0E61               	movlw	low _motorL
  8542   004ECA  6E1A               	movwf	turnLeft45@mL^0,c
  8543   004ECC  0E01               	movlw	high _motorL
  8544   004ECE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8545   004ED0  0E58               	movlw	low _motorR
  8546   004ED2  6E1C               	movwf	turnLeft45@mR^0,c
  8547   004ED4  0E01               	movlw	high _motorR
  8548   004ED6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8549   004ED8  EC6F  F02E         	call	_turnLeft45	;wreg free
  8550                           
  8551                           ;dc_motor.c: 348:     ForwardOneBlock(&motorL, &motorR);
  8552   004EDC  0E61               	movlw	low _motorL
  8553   004EDE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8554   004EE0  0E01               	movlw	high _motorL
  8555   004EE2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8556   004EE4  0E58               	movlw	low _motorR
  8557   004EE6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8558   004EE8  0E01               	movlw	high _motorR
  8559   004EEA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8560   004EEC  ECE0  F02B         	call	_ForwardOneBlock	;wreg free
  8561                           
  8562                           ;dc_motor.c: 349:     reverseDetect(&motorL, &motorR);
  8563   004EF0  0E61               	movlw	low _motorL
  8564   004EF2  6E1A               	movwf	reverseDetect@mL^0,c
  8565   004EF4  0E01               	movlw	high _motorL
  8566   004EF6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8567   004EF8  0E58               	movlw	low _motorR
  8568   004EFA  6E1C               	movwf	reverseDetect@mR^0,c
  8569   004EFC  0E01               	movlw	high _motorR
  8570   004EFE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8571   004F00  EC86  F02B         	call	_reverseDetect	;wreg free
  8572                           
  8573                           ;dc_motor.c: 350:     turnLeft45(&motorL, &motorR);
  8574   004F04  0E61               	movlw	low _motorL
  8575   004F06  6E1A               	movwf	turnLeft45@mL^0,c
  8576   004F08  0E01               	movlw	high _motorL
  8577   004F0A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8578   004F0C  0E58               	movlw	low _motorR
  8579   004F0E  6E1C               	movwf	turnLeft45@mR^0,c
  8580   004F10  0E01               	movlw	high _motorR
  8581   004F12  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8582   004F14  EC6F  F02E         	call	_turnLeft45	;wreg free
  8583                           
  8584                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8585   004F18  0E61               	movlw	low _motorL
  8586   004F1A  6E1A               	movwf	turnLeft45@mL^0,c
  8587   004F1C  0E01               	movlw	high _motorL
  8588   004F1E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8589   004F20  0E58               	movlw	low _motorR
  8590   004F22  6E1C               	movwf	turnLeft45@mR^0,c
  8591   004F24  0E01               	movlw	high _motorR
  8592   004F26  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8593   004F28  EC6F  F02E         	call	_turnLeft45	;wreg free
  8594                           
  8595                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8596   004F2C  0E61               	movlw	low _motorL
  8597   004F2E  6E1A               	movwf	turnLeft45@mL^0,c
  8598   004F30  0E01               	movlw	high _motorL
  8599   004F32  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8600   004F34  0E58               	movlw	low _motorR
  8601   004F36  6E1C               	movwf	turnLeft45@mR^0,c
  8602   004F38  0E01               	movlw	high _motorR
  8603   004F3A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8604   004F3C  EC6F  F02E         	call	_turnLeft45	;wreg free
  8605                           
  8606                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8607   004F40  0E61               	movlw	low _motorL
  8608   004F42  6E1A               	movwf	turnLeft45@mL^0,c
  8609   004F44  0E01               	movlw	high _motorL
  8610   004F46  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8611   004F48  0E58               	movlw	low _motorR
  8612   004F4A  6E1C               	movwf	turnLeft45@mR^0,c
  8613   004F4C  0E01               	movlw	high _motorR
  8614   004F4E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8615   004F50  EC6F  F02E         	call	_turnLeft45	;wreg free
  8616   004F54  0012               	return		;funcret
  8617   004F56                     __end_of_ReversePink:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _ForwardOneBlock *****************
  8621 ;; Defined at:
  8622 ;;		line 238 in file "dc_motor.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8625 ;;		 -> motorL(9), 
  8626 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8627 ;;		 -> motorR(9), 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8643 ;;Total ram usage:        6 bytes
  8644 ;; Hardware stack levels used: 1
  8645 ;; Hardware stack levels required when called: 4
  8646 ;; This function calls:
  8647 ;;		_fullSpeedAhead
  8648 ;;		_stop
  8649 ;; This function is called by:
  8650 ;;		_ReverseYellow
  8651 ;;		_ReversePink
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text37
  8656   0057C0                     __ptext37:
  8657                           	callstack 0
  8658   0057C0                     _ForwardOneBlock:
  8659                           	callstack 24
  8660   0057C0                     
  8661                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8662   0057C0  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8663   0057C4  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8664   0057C8  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8665   0057CC  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8666   0057D0  EC42  F029         	call	_fullSpeedAhead	;wreg free
  8667   0057D4                     
  8668                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8669   0057D4  0E56               	movlw	86
  8670   0057D6  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8671   0057D8  0E3A               	movlw	58
  8672   0057DA  6E1E               	movwf	??_ForwardOneBlock^0,c
  8673   0057DC  0EF4               	movlw	244
  8674   0057DE                     u6007:
  8675   0057DE  2EE8               	decfsz	wreg,f,c
  8676   0057E0  D7FE               	bra	u6007
  8677   0057E2  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8678   0057E4  D7FC               	bra	u6007
  8679   0057E6  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8680   0057E8  D7FA               	bra	u6007
  8681   0057EA                     
  8682                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8683   0057EA  0E61               	movlw	low _motorL
  8684   0057EC  6E14               	movwf	stop@mL^0,c
  8685   0057EE  0E01               	movlw	high _motorL
  8686   0057F0  6E15               	movwf	(stop@mL+1)^0,c
  8687   0057F2  0E58               	movlw	low _motorR
  8688   0057F4  6E16               	movwf	stop@mR^0,c
  8689   0057F6  0E01               	movlw	high _motorR
  8690   0057F8  6E17               	movwf	(stop@mR+1)^0,c
  8691   0057FA  ECD5  F029         	call	_stop	;wreg free
  8692                           
  8693                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8694   0057FE  0E05               	movlw	5
  8695   005800  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8696   005802  0E0F               	movlw	15
  8697   005804  6E1E               	movwf	??_ForwardOneBlock^0,c
  8698   005806  0EF1               	movlw	241
  8699   005808                     u6017:
  8700   005808  2EE8               	decfsz	wreg,f,c
  8701   00580A  D7FE               	bra	u6017
  8702   00580C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8703   00580E  D7FC               	bra	u6017
  8704   005810  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8705   005812  D7FA               	bra	u6017
  8706   005814  F000               	nop	
  8707   005816  0012               	return		;funcret
  8708   005818                     __end_of_ForwardOneBlock:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _RedMove *****************
  8712 ;; Defined at:
  8713 ;;		line 262 in file "dc_motor.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8716 ;;		 -> motorL(9), 
  8717 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8718 ;;		 -> motorR(9), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;Total ram usage:        4 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 5
  8737 ;; This function calls:
  8738 ;;		_reverseDetect
  8739 ;;		_turnRight45
  8740 ;; This function is called by:
  8741 ;;		_main
  8742 ;;		_go_Home
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text38
  8747   005E7C                     __ptext38:
  8748                           	callstack 0
  8749   005E7C                     _RedMove:
  8750                           	callstack 24
  8751   005E7C                     
  8752                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8753   005E7C  0E61               	movlw	low _motorL
  8754   005E7E  6E1A               	movwf	reverseDetect@mL^0,c
  8755   005E80  0E01               	movlw	high _motorL
  8756   005E82  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8757   005E84  0E58               	movlw	low _motorR
  8758   005E86  6E1C               	movwf	reverseDetect@mR^0,c
  8759   005E88  0E01               	movlw	high _motorR
  8760   005E8A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8761   005E8C  EC86  F02B         	call	_reverseDetect	;wreg free
  8762                           
  8763                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8764   005E90  0E61               	movlw	low _motorL
  8765   005E92  6E1A               	movwf	turnRight45@mL^0,c
  8766   005E94  0E01               	movlw	high _motorL
  8767   005E96  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8768   005E98  0E58               	movlw	low _motorR
  8769   005E9A  6E1C               	movwf	turnRight45@mR^0,c
  8770   005E9C  0E01               	movlw	high _motorR
  8771   005E9E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8772   005EA0  EC48  F02E         	call	_turnRight45	;wreg free
  8773                           
  8774                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8775   005EA4  0E61               	movlw	low _motorL
  8776   005EA6  6E1A               	movwf	turnRight45@mL^0,c
  8777   005EA8  0E01               	movlw	high _motorL
  8778   005EAA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8779   005EAC  0E58               	movlw	low _motorR
  8780   005EAE  6E1C               	movwf	turnRight45@mR^0,c
  8781   005EB0  0E01               	movlw	high _motorR
  8782   005EB2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8783   005EB4  EC48  F02E         	call	_turnRight45	;wreg free
  8784   005EB8  0012               	return		;funcret
  8785   005EBA                     __end_of_RedMove:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function _OrangeMove *****************
  8789 ;; Defined at:
  8790 ;;		line 308 in file "dc_motor.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8793 ;;		 -> motorL(9), 
  8794 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8795 ;;		 -> motorR(9), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;Total ram usage:        4 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 5
  8814 ;; This function calls:
  8815 ;;		_reverseDetect
  8816 ;;		_turnRight45
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;;		_go_Home
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text39
  8824   005918                     __ptext39:
  8825                           	callstack 0
  8826   005918                     _OrangeMove:
  8827                           	callstack 24
  8828   005918                     
  8829                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8830   005918  0E61               	movlw	low _motorL
  8831   00591A  6E1A               	movwf	reverseDetect@mL^0,c
  8832   00591C  0E01               	movlw	high _motorL
  8833   00591E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8834   005920  0E58               	movlw	low _motorR
  8835   005922  6E1C               	movwf	reverseDetect@mR^0,c
  8836   005924  0E01               	movlw	high _motorR
  8837   005926  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8838   005928  EC86  F02B         	call	_reverseDetect	;wreg free
  8839                           
  8840                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8841   00592C  0E61               	movlw	low _motorL
  8842   00592E  6E1A               	movwf	turnRight45@mL^0,c
  8843   005930  0E01               	movlw	high _motorL
  8844   005932  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8845   005934  0E58               	movlw	low _motorR
  8846   005936  6E1C               	movwf	turnRight45@mR^0,c
  8847   005938  0E01               	movlw	high _motorR
  8848   00593A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8849   00593C  EC48  F02E         	call	_turnRight45	;wreg free
  8850                           
  8851                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8852   005940  0E61               	movlw	low _motorL
  8853   005942  6E1A               	movwf	turnRight45@mL^0,c
  8854   005944  0E01               	movlw	high _motorL
  8855   005946  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8856   005948  0E58               	movlw	low _motorR
  8857   00594A  6E1C               	movwf	turnRight45@mR^0,c
  8858   00594C  0E01               	movlw	high _motorR
  8859   00594E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8860   005950  EC48  F02E         	call	_turnRight45	;wreg free
  8861                           
  8862                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8863   005954  0E61               	movlw	low _motorL
  8864   005956  6E1A               	movwf	turnRight45@mL^0,c
  8865   005958  0E01               	movlw	high _motorL
  8866   00595A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8867   00595C  0E58               	movlw	low _motorR
  8868   00595E  6E1C               	movwf	turnRight45@mR^0,c
  8869   005960  0E01               	movlw	high _motorR
  8870   005962  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8871   005964  EC48  F02E         	call	_turnRight45	;wreg free
  8872   005968  0012               	return		;funcret
  8873   00596A                     __end_of_OrangeMove:
  8874                           	callstack 0
  8875                           
  8876 ;; *************** function _LightBlueMove *****************
  8877 ;; Defined at:
  8878 ;;		line 317 in file "dc_motor.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8881 ;;		 -> motorL(9), 
  8882 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8883 ;;		 -> motorR(9), 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;Total ram usage:        4 bytes
  8900 ;; Hardware stack levels used: 1
  8901 ;; Hardware stack levels required when called: 5
  8902 ;; This function calls:
  8903 ;;		_reverseDetect
  8904 ;;		_turnLeft45
  8905 ;; This function is called by:
  8906 ;;		_main
  8907 ;;		_go_Home
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text40
  8912   00596A                     __ptext40:
  8913                           	callstack 0
  8914   00596A                     _LightBlueMove:
  8915                           	callstack 24
  8916   00596A                     
  8917                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8918   00596A  0E61               	movlw	low _motorL
  8919   00596C  6E1A               	movwf	reverseDetect@mL^0,c
  8920   00596E  0E01               	movlw	high _motorL
  8921   005970  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8922   005972  0E58               	movlw	low _motorR
  8923   005974  6E1C               	movwf	reverseDetect@mR^0,c
  8924   005976  0E01               	movlw	high _motorR
  8925   005978  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8926   00597A  EC86  F02B         	call	_reverseDetect	;wreg free
  8927                           
  8928                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8929   00597E  0E61               	movlw	low _motorL
  8930   005980  6E1A               	movwf	turnLeft45@mL^0,c
  8931   005982  0E01               	movlw	high _motorL
  8932   005984  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8933   005986  0E58               	movlw	low _motorR
  8934   005988  6E1C               	movwf	turnLeft45@mR^0,c
  8935   00598A  0E01               	movlw	high _motorR
  8936   00598C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8937   00598E  EC6F  F02E         	call	_turnLeft45	;wreg free
  8938                           
  8939                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8940   005992  0E61               	movlw	low _motorL
  8941   005994  6E1A               	movwf	turnLeft45@mL^0,c
  8942   005996  0E01               	movlw	high _motorL
  8943   005998  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8944   00599A  0E58               	movlw	low _motorR
  8945   00599C  6E1C               	movwf	turnLeft45@mR^0,c
  8946   00599E  0E01               	movlw	high _motorR
  8947   0059A0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8948   0059A2  EC6F  F02E         	call	_turnLeft45	;wreg free
  8949                           
  8950                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8951   0059A6  0E61               	movlw	low _motorL
  8952   0059A8  6E1A               	movwf	turnLeft45@mL^0,c
  8953   0059AA  0E01               	movlw	high _motorL
  8954   0059AC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8955   0059AE  0E58               	movlw	low _motorR
  8956   0059B0  6E1C               	movwf	turnLeft45@mR^0,c
  8957   0059B2  0E01               	movlw	high _motorR
  8958   0059B4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8959   0059B6  EC6F  F02E         	call	_turnLeft45	;wreg free
  8960   0059BA  0012               	return		;funcret
  8961   0059BC                     __end_of_LightBlueMove:
  8962                           	callstack 0
  8963                           
  8964 ;; *************** function _GreenMove *****************
  8965 ;; Defined at:
  8966 ;;		line 270 in file "dc_motor.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8969 ;;		 -> motorL(9), 
  8970 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8971 ;;		 -> motorR(9), 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;Total ram usage:        4 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 5
  8990 ;; This function calls:
  8991 ;;		_reverseDetect
  8992 ;;		_turnLeft45
  8993 ;; This function is called by:
  8994 ;;		_main
  8995 ;;		_go_Home
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text41
  9000   005EBA                     __ptext41:
  9001                           	callstack 0
  9002   005EBA                     _GreenMove:
  9003                           	callstack 24
  9004   005EBA                     
  9005                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9006   005EBA  0E61               	movlw	low _motorL
  9007   005EBC  6E1A               	movwf	reverseDetect@mL^0,c
  9008   005EBE  0E01               	movlw	high _motorL
  9009   005EC0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9010   005EC2  0E58               	movlw	low _motorR
  9011   005EC4  6E1C               	movwf	reverseDetect@mR^0,c
  9012   005EC6  0E01               	movlw	high _motorR
  9013   005EC8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9014   005ECA  EC86  F02B         	call	_reverseDetect	;wreg free
  9015                           
  9016                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9017   005ECE  0E61               	movlw	low _motorL
  9018   005ED0  6E1A               	movwf	turnLeft45@mL^0,c
  9019   005ED2  0E01               	movlw	high _motorL
  9020   005ED4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9021   005ED6  0E58               	movlw	low _motorR
  9022   005ED8  6E1C               	movwf	turnLeft45@mR^0,c
  9023   005EDA  0E01               	movlw	high _motorR
  9024   005EDC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9025   005EDE  EC6F  F02E         	call	_turnLeft45	;wreg free
  9026                           
  9027                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9028   005EE2  0E61               	movlw	low _motorL
  9029   005EE4  6E1A               	movwf	turnLeft45@mL^0,c
  9030   005EE6  0E01               	movlw	high _motorL
  9031   005EE8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9032   005EEA  0E58               	movlw	low _motorR
  9033   005EEC  6E1C               	movwf	turnLeft45@mR^0,c
  9034   005EEE  0E01               	movlw	high _motorR
  9035   005EF0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9036   005EF2  EC6F  F02E         	call	_turnLeft45	;wreg free
  9037   005EF6  0012               	return		;funcret
  9038   005EF8                     __end_of_GreenMove:
  9039                           	callstack 0
  9040                           
  9041 ;; *************** function _BlueMove *****************
  9042 ;; Defined at:
  9043 ;;		line 278 in file "dc_motor.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9046 ;;		 -> motorL(9), 
  9047 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9048 ;;		 -> motorR(9), 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  1    wreg      void 
  9053 ;; Registers used:
  9054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;Total ram usage:        4 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; Hardware stack levels required when called: 5
  9067 ;; This function calls:
  9068 ;;		_reverseDetect
  9069 ;;		_turnRight45
  9070 ;; This function is called by:
  9071 ;;		_main
  9072 ;;		_go_Home
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text42
  9077   0055E6                     __ptext42:
  9078                           	callstack 0
  9079   0055E6                     _BlueMove:
  9080                           	callstack 24
  9081   0055E6                     
  9082                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9083   0055E6  0E61               	movlw	low _motorL
  9084   0055E8  6E1A               	movwf	reverseDetect@mL^0,c
  9085   0055EA  0E01               	movlw	high _motorL
  9086   0055EC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9087   0055EE  0E58               	movlw	low _motorR
  9088   0055F0  6E1C               	movwf	reverseDetect@mR^0,c
  9089   0055F2  0E01               	movlw	high _motorR
  9090   0055F4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9091   0055F6  EC86  F02B         	call	_reverseDetect	;wreg free
  9092                           
  9093                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9094   0055FA  0E61               	movlw	low _motorL
  9095   0055FC  6E1A               	movwf	turnRight45@mL^0,c
  9096   0055FE  0E01               	movlw	high _motorL
  9097   005600  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9098   005602  0E58               	movlw	low _motorR
  9099   005604  6E1C               	movwf	turnRight45@mR^0,c
  9100   005606  0E01               	movlw	high _motorR
  9101   005608  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9102   00560A  EC48  F02E         	call	_turnRight45	;wreg free
  9103                           
  9104                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9105   00560E  0E61               	movlw	low _motorL
  9106   005610  6E1A               	movwf	turnRight45@mL^0,c
  9107   005612  0E01               	movlw	high _motorL
  9108   005614  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9109   005616  0E58               	movlw	low _motorR
  9110   005618  6E1C               	movwf	turnRight45@mR^0,c
  9111   00561A  0E01               	movlw	high _motorR
  9112   00561C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9113   00561E  EC48  F02E         	call	_turnRight45	;wreg free
  9114                           
  9115                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9116   005622  0E61               	movlw	low _motorL
  9117   005624  6E1A               	movwf	turnRight45@mL^0,c
  9118   005626  0E01               	movlw	high _motorL
  9119   005628  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9120   00562A  0E58               	movlw	low _motorR
  9121   00562C  6E1C               	movwf	turnRight45@mR^0,c
  9122   00562E  0E01               	movlw	high _motorR
  9123   005630  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9124   005632  EC48  F02E         	call	_turnRight45	;wreg free
  9125                           
  9126                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9127   005636  0E61               	movlw	low _motorL
  9128   005638  6E1A               	movwf	turnRight45@mL^0,c
  9129   00563A  0E01               	movlw	high _motorL
  9130   00563C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9131   00563E  0E58               	movlw	low _motorR
  9132   005640  6E1C               	movwf	turnRight45@mR^0,c
  9133   005642  0E01               	movlw	high _motorR
  9134   005644  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9135   005646  EC48  F02E         	call	_turnRight45	;wreg free
  9136   00564A  0012               	return		;funcret
  9137   00564C                     __end_of_BlueMove:
  9138                           	callstack 0
  9139                           
  9140 ;; *************** function _getTMR0val *****************
  9141 ;; Defined at:
  9142 ;;		line 28 in file "timers.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;		None
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  moving          2    4[COMRAM] int 
  9147 ;;  temp            2    2[COMRAM] unsigned int 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9161 ;;Total ram usage:        6 bytes
  9162 ;; Hardware stack levels used: 1
  9163 ;; Hardware stack levels required when called: 1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_main
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text43
  9172   00564C                     __ptext43:
  9173                           	callstack 0
  9174   00564C                     _getTMR0val:
  9175                           	callstack 29
  9176   00564C                     
  9177                           ;timers.c: 30:     unsigned int temp= TMR0L;
  9178   00564C  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  9179   005650  6A04               	clrf	(getTMR0val@temp+1)^0,c
  9180   005652                     
  9181                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  9182   005652  5003               	movf	getTMR0val@temp^0,w,c
  9183   005654  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  9184   005658  6A02               	clrf	(??_getTMR0val+1)^0,c
  9185   00565A  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  9186   00565E  6A01               	clrf	??_getTMR0val^0,c
  9187   005660  1001               	iorwf	??_getTMR0val^0,w,c
  9188   005662  6E05               	movwf	getTMR0val@moving^0,c
  9189   005664  5002               	movf	(??_getTMR0val+1)^0,w,c
  9190   005666  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9191                           
  9192                           ;timers.c: 33:     if (moving>700){
  9193   005668  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  9194   00566A  EF40  F02B         	goto	u5561
  9195   00566E  0EBD               	movlw	189
  9196   005670  5C05               	subwf	getTMR0val@moving^0,w,c
  9197   005672  0E02               	movlw	2
  9198   005674  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  9199   005676  A0D8               	btfss	status,0,c
  9200   005678  EF40  F02B         	goto	u5561
  9201   00567C  EF42  F02B         	goto	u5560
  9202   005680                     u5561:
  9203   005680  EF48  F02B         	goto	l5551
  9204   005684                     u5560:
  9205   005684                     
  9206                           ;timers.c: 34:         moving=moving-700;
  9207   005684  0E44               	movlw	68
  9208   005686  2405               	addwf	getTMR0val@moving^0,w,c
  9209   005688  6E05               	movwf	getTMR0val@moving^0,c
  9210   00568A  0EFD               	movlw	253
  9211   00568C  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  9212   00568E  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9213   005690                     l5551:
  9214                           
  9215                           ;timers.c: 37:     Time_forward[move_count]=moving;
  9216   005690  90D8               	bcf	status,0,c
  9217   005692  0101               	movlb	1	; () banked
  9218   005694  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9219   005696  6ED9               	movwf	fsr2l,c
  9220   005698  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9221   00569A  6EDA               	movwf	fsr2h,c
  9222   00569C  0E3C               	movlw	low _Time_forward
  9223   00569E  26D9               	addwf	fsr2l,f,c
  9224   0056A0  0E02               	movlw	high _Time_forward
  9225   0056A2  22DA               	addwfc	fsr2h,f,c
  9226   0056A4  C005  FFDE         	movff	getTMR0val@moving,postinc2
  9227   0056A8  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  9228   0056AC                     
  9229                           ; BSR set to: 1
  9230   0056AC  0012               	return		;funcret
  9231   0056AE                     __end_of_getTMR0val:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _colour_rel *****************
  9235 ;; Defined at:
  9236 ;;		line 114 in file "color.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  vals            2   74[COMRAM] PTR struct RGB
  9239 ;;		 -> vals(8), 
  9240 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9241 ;;		 -> rel(12), 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  B               4   20[BANK0 ] float 
  9244 ;;  G               4   16[BANK0 ] float 
  9245 ;;  R               4   12[BANK0 ] float 
  9246 ;;  L               4    0[BANK0 ] float 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;Total ram usage:       28 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 2
  9263 ;; This function calls:
  9264 ;;		___fladd
  9265 ;;		___fldiv
  9266 ;;		___xxtofl
  9267 ;; This function is called by:
  9268 ;;		_main
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text44
  9273   003488                     __ptext44:
  9274                           	callstack 0
  9275   003488                     _colour_rel:
  9276                           	callstack 28
  9277   003488                     
  9278                           ;color.c: 115:     float R = vals->R;
  9279   003488  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9280   00348C  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9281   003490  CFDE F001          	movff	postinc2,___xxtofl@val
  9282   003494  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9283   003498  0E00               	movlw	0
  9284   00349A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9285   00349C  0EFF               	movlw	-1
  9286   00349E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9287   0034A0  6E04               	movwf	(___xxtofl@val+3)^0,c
  9288   0034A2  0E01               	movlw	1
  9289   0034A4  EC06  F022         	call	___xxtofl
  9290   0034A8  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9291   0034AC  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9292   0034B0  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9293   0034B4  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9294                           
  9295                           ;color.c: 116:     float G = vals->G;
  9296   0034B8  EE20 F002          	lfsr	2,2
  9297   0034BC  504B               	movf	colour_rel@vals^0,w,c
  9298   0034BE  26D9               	addwf	fsr2l,f,c
  9299   0034C0  504C               	movf	(colour_rel@vals+1)^0,w,c
  9300   0034C2  22DA               	addwfc	fsr2h,f,c
  9301   0034C4  CFDE F001          	movff	postinc2,___xxtofl@val
  9302   0034C8  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9303   0034CC  0E00               	movlw	0
  9304   0034CE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9305   0034D0  0EFF               	movlw	-1
  9306   0034D2  6E03               	movwf	(___xxtofl@val+2)^0,c
  9307   0034D4  6E04               	movwf	(___xxtofl@val+3)^0,c
  9308   0034D6  0E01               	movlw	1
  9309   0034D8  EC06  F022         	call	___xxtofl
  9310   0034DC  C001  F070         	movff	?___xxtofl,colour_rel@G
  9311   0034E0  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9312   0034E4  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9313   0034E8  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9314                           
  9315                           ;color.c: 117:     float B = vals->B;
  9316   0034EC  EE20 F004          	lfsr	2,4
  9317   0034F0  504B               	movf	colour_rel@vals^0,w,c
  9318   0034F2  26D9               	addwf	fsr2l,f,c
  9319   0034F4  504C               	movf	(colour_rel@vals+1)^0,w,c
  9320   0034F6  22DA               	addwfc	fsr2h,f,c
  9321   0034F8  CFDE F001          	movff	postinc2,___xxtofl@val
  9322   0034FC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9323   003500  0E00               	movlw	0
  9324   003502  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9325   003504  0EFF               	movlw	-1
  9326   003506  6E03               	movwf	(___xxtofl@val+2)^0,c
  9327   003508  6E04               	movwf	(___xxtofl@val+3)^0,c
  9328   00350A  0E01               	movlw	1
  9329   00350C  EC06  F022         	call	___xxtofl
  9330   003510  C001  F074         	movff	?___xxtofl,colour_rel@B
  9331   003514  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9332   003518  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9333   00351C  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9334                           
  9335                           ;color.c: 118:     float L = vals->L;
  9336   003520  EE20 F006          	lfsr	2,6
  9337   003524  504B               	movf	colour_rel@vals^0,w,c
  9338   003526  26D9               	addwf	fsr2l,f,c
  9339   003528  504C               	movf	(colour_rel@vals+1)^0,w,c
  9340   00352A  22DA               	addwfc	fsr2h,f,c
  9341   00352C  CFDE F001          	movff	postinc2,___xxtofl@val
  9342   003530  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9343   003534  0E00               	movlw	0
  9344   003536  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9345   003538  0EFF               	movlw	-1
  9346   00353A  6E03               	movwf	(___xxtofl@val+2)^0,c
  9347   00353C  6E04               	movwf	(___xxtofl@val+3)^0,c
  9348   00353E  0E01               	movlw	1
  9349   003540  EC06  F022         	call	___xxtofl
  9350   003544  C001  F060         	movff	?___xxtofl,colour_rel@L
  9351   003548  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9352   00354C  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9353   003550  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9354   003554                     
  9355                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9356   003554  C070  F005         	movff	colour_rel@G,___fladd@a
  9357   003558  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9358   00355C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9359   003560  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9360   003564  C06C  F001         	movff	colour_rel@R,___fladd@b
  9361   003568  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9362   00356C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9363   003570  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9364   003574  EC02  F014         	call	___fladd	;wreg free
  9365   003578  C001  F064         	movff	?___fladd,_colour_rel$3203
  9366   00357C  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9367   003580  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9368   003584  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9369   003588                     
  9370                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9371   003588  C074  F005         	movff	colour_rel@B,___fladd@a
  9372   00358C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9373   003590  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9374   003594  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9375   003598  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9376   00359C  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9377   0035A0  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9378   0035A4  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9379   0035A8  EC02  F014         	call	___fladd	;wreg free
  9380   0035AC  C001  F068         	movff	?___fladd,_colour_rel$3204
  9381   0035B0  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9382   0035B4  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9383   0035B8  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9384                           
  9385                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9386   0035BC  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9387   0035C0  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9388   0035C4  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9389   0035C8  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9390   0035CC  C060  F005         	movff	colour_rel@L,___fladd@a
  9391   0035D0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9392   0035D4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9393   0035D8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9394   0035DC  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9395   0035E0  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9396   0035E4  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9397   0035E8  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9398   0035EC  EC02  F014         	call	___fladd	;wreg free
  9399   0035F0  C001  F036         	movff	?___fladd,___fldiv@a
  9400   0035F4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9401   0035F8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9402   0035FC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9403   003600  EC77  F018         	call	___fldiv	;wreg free
  9404   003604  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9405   003608  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9406   00360C  C032  FFDE         	movff	?___fldiv,postinc2
  9407   003610  C033  FFDE         	movff	?___fldiv+1,postinc2
  9408   003614  C034  FFDE         	movff	?___fldiv+2,postinc2
  9409   003618  C035  FFDE         	movff	?___fldiv+3,postinc2
  9410   00361C                     
  9411                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9412   00361C  C070  F005         	movff	colour_rel@G,___fladd@a
  9413   003620  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9414   003624  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9415   003628  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9416   00362C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9417   003630  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9418   003634  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9419   003638  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9420   00363C  EC02  F014         	call	___fladd	;wreg free
  9421   003640  C001  F064         	movff	?___fladd,_colour_rel$3203
  9422   003644  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9423   003648  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9424   00364C  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9425   003650                     
  9426                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9427   003650  C074  F005         	movff	colour_rel@B,___fladd@a
  9428   003654  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9429   003658  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9430   00365C  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9431   003660  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9432   003664  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9433   003668  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9434   00366C  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9435   003670  EC02  F014         	call	___fladd	;wreg free
  9436   003674  C001  F068         	movff	?___fladd,_colour_rel$3204
  9437   003678  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9438   00367C  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9439   003680  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9440                           
  9441                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9442   003684  C074  F032         	movff	colour_rel@B,___fldiv@b
  9443   003688  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9444   00368C  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9445   003690  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9446   003694  C060  F005         	movff	colour_rel@L,___fladd@a
  9447   003698  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9448   00369C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9449   0036A0  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9450   0036A4  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9451   0036A8  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9452   0036AC  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9453   0036B0  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9454   0036B4  EC02  F014         	call	___fladd	;wreg free
  9455   0036B8  C001  F036         	movff	?___fladd,___fldiv@a
  9456   0036BC  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9457   0036C0  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9458   0036C4  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9459   0036C8  EC77  F018         	call	___fldiv	;wreg free
  9460   0036CC  EE20 F008          	lfsr	2,8
  9461   0036D0  504D               	movf	colour_rel@rel^0,w,c
  9462   0036D2  26D9               	addwf	fsr2l,f,c
  9463   0036D4  504E               	movf	(colour_rel@rel+1)^0,w,c
  9464   0036D6  22DA               	addwfc	fsr2h,f,c
  9465   0036D8  C032  FFDE         	movff	?___fldiv,postinc2
  9466   0036DC  C033  FFDE         	movff	?___fldiv+1,postinc2
  9467   0036E0  C034  FFDE         	movff	?___fldiv+2,postinc2
  9468   0036E4  C035  FFDE         	movff	?___fldiv+3,postinc2
  9469   0036E8                     
  9470                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9471   0036E8  C070  F005         	movff	colour_rel@G,___fladd@a
  9472   0036EC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9473   0036F0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9474   0036F4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9475   0036F8  C06C  F001         	movff	colour_rel@R,___fladd@b
  9476   0036FC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9477   003700  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9478   003704  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9479   003708  EC02  F014         	call	___fladd	;wreg free
  9480   00370C  C001  F064         	movff	?___fladd,_colour_rel$3203
  9481   003710  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9482   003714  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9483   003718  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9484   00371C                     
  9485                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9486   00371C  C074  F005         	movff	colour_rel@B,___fladd@a
  9487   003720  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9488   003724  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9489   003728  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9490   00372C  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9491   003730  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9492   003734  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9493   003738  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9494   00373C  EC02  F014         	call	___fladd	;wreg free
  9495   003740  C001  F068         	movff	?___fladd,_colour_rel$3204
  9496   003744  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9497   003748  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9498   00374C  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9499                           
  9500                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9501   003750  C070  F032         	movff	colour_rel@G,___fldiv@b
  9502   003754  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9503   003758  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9504   00375C  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9505   003760  C060  F005         	movff	colour_rel@L,___fladd@a
  9506   003764  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9507   003768  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9508   00376C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9509   003770  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9510   003774  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9511   003778  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9512   00377C  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9513   003780  EC02  F014         	call	___fladd	;wreg free
  9514   003784  C001  F036         	movff	?___fladd,___fldiv@a
  9515   003788  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9516   00378C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9517   003790  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9518   003794  EC77  F018         	call	___fldiv	;wreg free
  9519   003798  EE20 F004          	lfsr	2,4
  9520   00379C  504D               	movf	colour_rel@rel^0,w,c
  9521   00379E  26D9               	addwf	fsr2l,f,c
  9522   0037A0  504E               	movf	(colour_rel@rel+1)^0,w,c
  9523   0037A2  22DA               	addwfc	fsr2h,f,c
  9524   0037A4  C032  FFDE         	movff	?___fldiv,postinc2
  9525   0037A8  C033  FFDE         	movff	?___fldiv+1,postinc2
  9526   0037AC  C034  FFDE         	movff	?___fldiv+2,postinc2
  9527   0037B0  C035  FFDE         	movff	?___fldiv+3,postinc2
  9528   0037B4  0012               	return		;funcret
  9529   0037B6                     __end_of_colour_rel:
  9530                           	callstack 0
  9531                           
  9532 ;; *************** function _color_click_init *****************
  9533 ;; Defined at:
  9534 ;;		line 7 in file "color.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;		None
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg, status,2, status,0, cstack
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9552 ;;Total ram usage:        1 bytes
  9553 ;; Hardware stack levels used: 1
  9554 ;; Hardware stack levels required when called: 4
  9555 ;; This function calls:
  9556 ;;		_I2C_2_Master_Init
  9557 ;;		_color_writetoaddr
  9558 ;; This function is called by:
  9559 ;;		_main
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text45
  9564   0059BC                     __ptext45:
  9565                           	callstack 0
  9566   0059BC                     _color_click_init:
  9567                           	callstack 26
  9568   0059BC                     
  9569                           ;color.c: 10:     I2C_2_Master_Init();
  9570   0059BC  ECE7  F02F         	call	_I2C_2_Master_Init	;wreg free
  9571   0059C0                     
  9572                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9573   0059C0  0E01               	movlw	1
  9574   0059C2  6E03               	movwf	color_writetoaddr@value^0,c
  9575   0059C4  0E00               	movlw	0
  9576   0059C6  EC23  F030         	call	_color_writetoaddr
  9577   0059CA                     
  9578                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9579   0059CA  0E3F               	movlw	63
  9580   0059CC  6E05               	movwf	??_color_click_init^0,c
  9581   0059CE  0E55               	movlw	85
  9582   0059D0                     u6027:
  9583   0059D0  2EE8               	decfsz	wreg,f,c
  9584   0059D2  D7FE               	bra	u6027
  9585   0059D4  2E05               	decfsz	??_color_click_init^0,f,c
  9586   0059D6  D7FC               	bra	u6027
  9587   0059D8  F000               	nop	
  9588   0059DA                     
  9589                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9590   0059DA  0E03               	movlw	3
  9591   0059DC  6E03               	movwf	color_writetoaddr@value^0,c
  9592   0059DE  0E00               	movlw	0
  9593   0059E0  EC23  F030         	call	_color_writetoaddr
  9594   0059E4                     
  9595                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9596   0059E4  0ED5               	movlw	213
  9597   0059E6  6E03               	movwf	color_writetoaddr@value^0,c
  9598   0059E8  0E01               	movlw	1
  9599   0059EA  EC23  F030         	call	_color_writetoaddr
  9600   0059EE                     
  9601                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9602   0059EE  0E00               	movlw	0
  9603   0059F0  6E03               	movwf	color_writetoaddr@value^0,c
  9604   0059F2  0E0F               	movlw	15
  9605   0059F4  EC23  F030         	call	_color_writetoaddr
  9606   0059F8                     
  9607                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9608   0059F8  9287               	bcf	135,1,c	;volatile
  9609   0059FA                     
  9610                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9611   0059FA  9881               	bcf	129,4,c	;volatile
  9612   0059FC                     
  9613                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9614   0059FC  9E86               	bcf	134,7,c	;volatile
  9615   0059FE                     
  9616                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9617   0059FE  9684               	bcf	132,3,c	;volatile
  9618   005A00                     
  9619                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9620   005A00  9884               	bcf	132,4,c	;volatile
  9621   005A02                     
  9622                           ;color.c: 28:     LATGbits.LATG1=0;
  9623   005A02  927F               	bcf	127,1,c	;volatile
  9624   005A04                     
  9625                           ;color.c: 29:     LATFbits.LATF7=0;
  9626   005A04  9E7E               	bcf	126,7,c	;volatile
  9627   005A06                     
  9628                           ;color.c: 30:     LATAbits.LATA4=0;
  9629   005A06  9879               	bcf	121,4,c	;volatile
  9630   005A08                     
  9631                           ;color.c: 32:     LATDbits.LATD3=0;
  9632   005A08  967C               	bcf	124,3,c	;volatile
  9633   005A0A                     
  9634                           ;color.c: 33:     LATDbits.LATD4=0;
  9635   005A0A  987C               	bcf	124,4,c	;volatile
  9636   005A0C  0012               	return		;funcret
  9637   005A0E                     __end_of_color_click_init:
  9638                           	callstack 0
  9639                           
  9640 ;; *************** function _color_writetoaddr *****************
  9641 ;; Defined at:
  9642 ;;		line 41 in file "color.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  address         1    wreg     unsigned char 
  9645 ;;  value           1    2[COMRAM] unsigned char 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  address         1    3[COMRAM] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;Total ram usage:        2 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; Hardware stack levels required when called: 3
  9664 ;; This function calls:
  9665 ;;		_I2C_2_Master_Start
  9666 ;;		_I2C_2_Master_Stop
  9667 ;;		_I2C_2_Master_Write
  9668 ;; This function is called by:
  9669 ;;		_color_click_init
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text46
  9674   006046                     __ptext46:
  9675                           	callstack 0
  9676   006046                     _color_writetoaddr:
  9677                           	callstack 26
  9678                           
  9679                           ;incstack = 0
  9680                           ;color_writetoaddr@address stored from wreg
  9681   006046  6E04               	movwf	color_writetoaddr@address^0,c
  9682   006048                     
  9683                           ;color.c: 42:     I2C_2_Master_Start();
  9684   006048  EC74  F030         	call	_I2C_2_Master_Start	;wreg free
  9685                           
  9686                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9687   00604C  0E52               	movlw	82
  9688   00604E  EC5E  F030         	call	_I2C_2_Master_Write
  9689                           
  9690                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9691   006052  5004               	movf	color_writetoaddr@address^0,w,c
  9692   006054  0980               	iorlw	128
  9693   006056  EC5E  F030         	call	_I2C_2_Master_Write
  9694                           
  9695                           ;color.c: 45:     I2C_2_Master_Write(value);
  9696   00605A  5003               	movf	color_writetoaddr@value^0,w,c
  9697   00605C  EC5E  F030         	call	_I2C_2_Master_Write
  9698                           
  9699                           ;color.c: 46:     I2C_2_Master_Stop();
  9700   006060  EC6F  F030         	call	_I2C_2_Master_Stop	;wreg free
  9701   006064  0012               	return		;funcret
  9702   006066                     __end_of_color_writetoaddr:
  9703                           	callstack 0
  9704                           
  9705 ;; *************** function _I2C_2_Master_Write *****************
  9706 ;; Defined at:
  9707 ;;		line 45 in file "i2c.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  data_byte       1    wreg     unsigned char 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  data_byte       1    1[COMRAM] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;Total ram usage:        1 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; Hardware stack levels required when called: 2
  9728 ;; This function calls:
  9729 ;;		_I2C_2_Master_Idle
  9730 ;; This function is called by:
  9731 ;;		_color_writetoaddr
  9732 ;;		_color_read_lum
  9733 ;;		_color_read_Red
  9734 ;;		_color_read_Green
  9735 ;;		_color_read_Blue
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text47
  9740   0060BC                     __ptext47:
  9741                           	callstack 0
  9742   0060BC                     _I2C_2_Master_Write:
  9743                           	callstack 26
  9744                           
  9745                           ;incstack = 0
  9746                           ;I2C_2_Master_Write@data_byte stored from wreg
  9747   0060BC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9748   0060BE                     
  9749                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9750   0060BE  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9751   0060C2                     
  9752                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9753   0060C2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9754   0060C6  0012               	return		;funcret
  9755   0060C8                     __end_of_I2C_2_Master_Write:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _I2C_2_Master_Stop *****************
  9759 ;; Defined at:
  9760 ;;		line 39 in file "i2c.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 2
  9781 ;; This function calls:
  9782 ;;		_I2C_2_Master_Idle
  9783 ;; This function is called by:
  9784 ;;		_color_writetoaddr
  9785 ;;		_color_read_lum
  9786 ;;		_color_read_Red
  9787 ;;		_color_read_Green
  9788 ;;		_color_read_Blue
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text48
  9793   0060DE                     __ptext48:
  9794                           	callstack 0
  9795   0060DE                     _I2C_2_Master_Stop:
  9796                           	callstack 26
  9797   0060DE                     
  9798                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9799   0060DE  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9800   0060E2                     
  9801                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9802   0060E2  010E               	movlb	14	; () banked
  9803   0060E4  85DA               	bsf	218,2,b	;volatile
  9804   0060E6                     
  9805                           ; BSR set to: 14
  9806   0060E6  0012               	return		;funcret
  9807   0060E8                     __end_of_I2C_2_Master_Stop:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _I2C_2_Master_Start *****************
  9811 ;; Defined at:
  9812 ;;		line 27 in file "i2c.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 2
  9833 ;; This function calls:
  9834 ;;		_I2C_2_Master_Idle
  9835 ;; This function is called by:
  9836 ;;		_color_writetoaddr
  9837 ;;		_color_read_lum
  9838 ;;		_color_read_Red
  9839 ;;		_color_read_Green
  9840 ;;		_color_read_Blue
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text49
  9845   0060E8                     __ptext49:
  9846                           	callstack 0
  9847   0060E8                     _I2C_2_Master_Start:
  9848                           	callstack 26
  9849   0060E8                     
  9850                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9851   0060E8  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9852   0060EC                     
  9853                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9854   0060EC  010E               	movlb	14	; () banked
  9855   0060EE  81DA               	bsf	218,0,b	;volatile
  9856   0060F0                     
  9857                           ; BSR set to: 14
  9858   0060F0  0012               	return		;funcret
  9859   0060F2                     __end_of_I2C_2_Master_Start:
  9860                           	callstack 0
  9861                           
  9862 ;; *************** function _I2C_2_Master_Idle *****************
  9863 ;; Defined at:
  9864 ;;		line 22 in file "i2c.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, status,2, status,0
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9882 ;;Total ram usage:        1 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 1
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_I2C_2_Master_Start
  9889 ;;		_I2C_2_Master_RepStart
  9890 ;;		_I2C_2_Master_Stop
  9891 ;;		_I2C_2_Master_Write
  9892 ;;		_I2C_2_Master_Read
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text50
  9897   005FF8                     __ptext50:
  9898                           	callstack 0
  9899   005FF8                     _I2C_2_Master_Idle:
  9900                           	callstack 26
  9901   005FF8                     l133:
  9902   005FF8  010E               	movlb	14	; () banked
  9903   005FFA  B5D8               	btfsc	216,2,b	;volatile
  9904   005FFC  EF02  F030         	goto	u4381
  9905   006000  EF04  F030         	goto	u4380
  9906   006004                     u4381:
  9907   006004  EFFC  F02F         	goto	l133
  9908   006008                     u4380:
  9909   006008                     
  9910                           ; BSR set to: 14
  9911   006008  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9912   00600C  0E1F               	movlw	31
  9913   00600E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9914   006010  A4D8               	btfss	status,2,c
  9915   006012  EF0D  F030         	goto	u4391
  9916   006016  EF0F  F030         	goto	u4390
  9917   00601A                     u4391:
  9918   00601A  EFFC  F02F         	goto	l133
  9919   00601E                     u4390:
  9920   00601E                     
  9921                           ; BSR set to: 14
  9922   00601E  0012               	return		;funcret
  9923   006020                     __end_of_I2C_2_Master_Idle:
  9924                           	callstack 0
  9925                           
  9926 ;; *************** function _I2C_2_Master_Init *****************
  9927 ;; Defined at:
  9928 ;;		line 4 in file "i2c.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      void 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; Hardware stack levels required when called: 1
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_color_click_init
  9953 ;;		_main
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text51
  9958   005FCE                     __ptext51:
  9959                           	callstack 0
  9960   005FCE                     _I2C_2_Master_Init:
  9961                           	callstack 28
  9962   005FCE                     
  9963                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9964   005FCE  010E               	movlb	14	; () banked
  9965   005FD0  51D9               	movf	217,w,b	;volatile
  9966   005FD2  0BF0               	andlw	-16
  9967   005FD4  0908               	iorlw	8
  9968   005FD6  6FD9               	movwf	217,b	;volatile
  9969   005FD8                     
  9970                           ; BSR set to: 14
  9971                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9972   005FD8  8BD9               	bsf	217,5,b	;volatile
  9973                           
  9974                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9975   005FDA  0E9F               	movlw	159
  9976   005FDC  6FD6               	movwf	214,b	;volatile
  9977   005FDE                     
  9978                           ; BSR set to: 14
  9979                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9980   005FDE  8A84               	bsf	132,5,c	;volatile
  9981   005FE0                     
  9982                           ; BSR set to: 14
  9983                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9984   005FE0  8C84               	bsf	132,6,c	;volatile
  9985   005FE2                     
  9986                           ; BSR set to: 14
  9987                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9988   005FE2  9BA7               	bcf	167,5,b	;volatile
  9989   005FE4                     
  9990                           ; BSR set to: 14
  9991                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9992   005FE4  9DA7               	bcf	167,6,b	;volatile
  9993                           
  9994                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9995   005FE6  0E1D               	movlw	29
  9996   005FE8  6F1D               	movwf	29,b	;volatile
  9997                           
  9998                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9999   005FEA  0E1E               	movlw	30
 10000   005FEC  6F1C               	movwf	28,b	;volatile
 10001                           
 10002                           ;i2c.c: 18:   RD5PPS=0x1C;
 10003   005FEE  0E1C               	movlw	28
 10004   005FF0  6F6F               	movwf	111,b	;volatile
 10005                           
 10006                           ;i2c.c: 19:   RD6PPS=0x1B;
 10007   005FF2  0E1B               	movlw	27
 10008   005FF4  6F70               	movwf	112,b	;volatile
 10009   005FF6                     
 10010                           ; BSR set to: 14
 10011   005FF6  0012               	return		;funcret
 10012   005FF8                     __end_of_I2C_2_Master_Init:
 10013                           	callstack 0
 10014                           
 10015 ;; *************** function _YellowMove *****************
 10016 ;; Defined at:
 10017 ;;		line 288 in file "dc_motor.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10020 ;;		 -> motorL(9), 
 10021 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10022 ;;		 -> motorR(9), 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;Total ram usage:        4 bytes
 10039 ;; Hardware stack levels used: 1
 10040 ;; Hardware stack levels required when called: 5
 10041 ;; This function calls:
 10042 ;;		_reverseDetect
 10043 ;;		_reverseOneBlock
 10044 ;;		_turnRight45
 10045 ;; This function is called by:
 10046 ;;		_main
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text52
 10051   005A0E                     __ptext52:
 10052                           	callstack 0
 10053   005A0E                     _YellowMove:
 10054                           	callstack 25
 10055   005A0E                     
 10056                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10057   005A0E  0E61               	movlw	low _motorL
 10058   005A10  6E1A               	movwf	reverseDetect@mL^0,c
 10059   005A12  0E01               	movlw	high _motorL
 10060   005A14  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10061   005A16  0E58               	movlw	low _motorR
 10062   005A18  6E1C               	movwf	reverseDetect@mR^0,c
 10063   005A1A  0E01               	movlw	high _motorR
 10064   005A1C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10065   005A1E  EC86  F02B         	call	_reverseDetect	;wreg free
 10066                           
 10067                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10068   005A22  0E61               	movlw	low _motorL
 10069   005A24  6E1A               	movwf	reverseOneBlock@mL^0,c
 10070   005A26  0E01               	movlw	high _motorL
 10071   005A28  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10072   005A2A  0E58               	movlw	low _motorR
 10073   005A2C  6E1C               	movwf	reverseOneBlock@mR^0,c
 10074   005A2E  0E01               	movlw	high _motorR
 10075   005A30  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10076   005A32  EC0C  F02C         	call	_reverseOneBlock	;wreg free
 10077                           
 10078                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10079   005A36  0E61               	movlw	low _motorL
 10080   005A38  6E1A               	movwf	turnRight45@mL^0,c
 10081   005A3A  0E01               	movlw	high _motorL
 10082   005A3C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10083   005A3E  0E58               	movlw	low _motorR
 10084   005A40  6E1C               	movwf	turnRight45@mR^0,c
 10085   005A42  0E01               	movlw	high _motorR
 10086   005A44  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10087   005A46  EC48  F02E         	call	_turnRight45	;wreg free
 10088                           
 10089                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10090   005A4A  0E61               	movlw	low _motorL
 10091   005A4C  6E1A               	movwf	turnRight45@mL^0,c
 10092   005A4E  0E01               	movlw	high _motorL
 10093   005A50  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10094   005A52  0E58               	movlw	low _motorR
 10095   005A54  6E1C               	movwf	turnRight45@mR^0,c
 10096   005A56  0E01               	movlw	high _motorR
 10097   005A58  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10098   005A5A  EC48  F02E         	call	_turnRight45	;wreg free
 10099   005A5E  0012               	return		;funcret
 10100   005A60                     __end_of_YellowMove:
 10101                           	callstack 0
 10102                           
 10103 ;; *************** function _turnRight45 *****************
 10104 ;; Defined at:
 10105 ;;		line 211 in file "dc_motor.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10108 ;;		 -> motorL(9), 
 10109 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10110 ;;		 -> motorR(9), 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;Total ram usage:        6 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; Hardware stack levels required when called: 4
 10129 ;; This function calls:
 10130 ;;		_TurnDelay
 10131 ;;		_stop
 10132 ;;		_turnRight
 10133 ;; This function is called by:
 10134 ;;		_RedMove
 10135 ;;		_BlueMove
 10136 ;;		_YellowMove
 10137 ;;		_OrangeMove
 10138 ;;		_ReverseYellow
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text53
 10143   005C90                     __ptext53:
 10144                           	callstack 0
 10145   005C90                     _turnRight45:
 10146                           	callstack 24
 10147   005C90                     
 10148                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10149   005C90  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10150   005C94  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10151   005C98  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10152   005C9C  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10153   005CA0  EC55  F028         	call	_turnRight	;wreg free
 10154   005CA4                     
 10155                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10156   005CA4  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10157   005CA8  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10158   005CAC  ECB4  F02F         	call	_TurnDelay	;wreg free
 10159   005CB0                     
 10160                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10161   005CB0  0E61               	movlw	low _motorL
 10162   005CB2  6E14               	movwf	stop@mL^0,c
 10163   005CB4  0E01               	movlw	high _motorL
 10164   005CB6  6E15               	movwf	(stop@mL+1)^0,c
 10165   005CB8  0E58               	movlw	low _motorR
 10166   005CBA  6E16               	movwf	stop@mR^0,c
 10167   005CBC  0E01               	movlw	high _motorR
 10168   005CBE  6E17               	movwf	(stop@mR+1)^0,c
 10169   005CC0  ECD5  F029         	call	_stop	;wreg free
 10170   005CC4                     
 10171                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10172   005CC4  0E05               	movlw	5
 10173   005CC6  6E1F               	movwf	(??_turnRight45+1)^0,c
 10174   005CC8  0E0F               	movlw	15
 10175   005CCA  6E1E               	movwf	??_turnRight45^0,c
 10176   005CCC  0EF1               	movlw	241
 10177   005CCE                     u6037:
 10178   005CCE  2EE8               	decfsz	wreg,f,c
 10179   005CD0  D7FE               	bra	u6037
 10180   005CD2  2E1E               	decfsz	??_turnRight45^0,f,c
 10181   005CD4  D7FC               	bra	u6037
 10182   005CD6  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10183   005CD8  D7FA               	bra	u6037
 10184   005CDA  F000               	nop	
 10185   005CDC  0012               	return		;funcret
 10186   005CDE                     __end_of_turnRight45:
 10187                           	callstack 0
 10188                           
 10189 ;; *************** function _turnRight *****************
 10190 ;; Defined at:
 10191 ;;		line 129 in file "dc_motor.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10194 ;;		 -> motorL(9), 
 10195 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10196 ;;		 -> motorR(9), 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;Total ram usage:        6 bytes
 10213 ;; Hardware stack levels used: 1
 10214 ;; Hardware stack levels required when called: 3
 10215 ;; This function calls:
 10216 ;;		_setMotorPWM
 10217 ;; This function is called by:
 10218 ;;		_turnRight45
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text54
 10223   0050AA                     __ptext54:
 10224                           	callstack 0
 10225   0050AA                     _turnRight:
 10226                           	callstack 24
 10227   0050AA                     
 10228                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10229   0050AA  EE20 F001          	lfsr	2,1
 10230   0050AE  5014               	movf	turnRight@mL^0,w,c
 10231   0050B0  26D9               	addwf	fsr2l,f,c
 10232   0050B2  5015               	movf	(turnRight@mL+1)^0,w,c
 10233   0050B4  22DA               	addwfc	fsr2h,f,c
 10234   0050B6  0E01               	movlw	1
 10235   0050B8  6EDF               	movwf	indf2,c
 10236                           
 10237                           ;dc_motor.c: 132:     mR->direction =0;
 10238   0050BA  EE20 F001          	lfsr	2,1
 10239   0050BE  5016               	movf	turnRight@mR^0,w,c
 10240   0050C0  26D9               	addwf	fsr2l,f,c
 10241   0050C2  5017               	movf	(turnRight@mR+1)^0,w,c
 10242   0050C4  22DA               	addwfc	fsr2h,f,c
 10243   0050C6  0E00               	movlw	0
 10244   0050C8  6EDF               	movwf	indf2,c
 10245                           
 10246                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10247   0050CA  EF8B  F028         	goto	l4653
 10248   0050CE                     l4645:
 10249                           
 10250                           ;dc_motor.c: 136:         mL->power+=10;
 10251   0050CE  C014  FFD9         	movff	turnRight@mL,fsr2l
 10252   0050D2  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10253   0050D6  0E0A               	movlw	10
 10254   0050D8  26DF               	addwf	indf2,f,c
 10255                           
 10256                           ;dc_motor.c: 137:         mR->power+=10;
 10257   0050DA  C016  FFD9         	movff	turnRight@mR,fsr2l
 10258   0050DE  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10259   0050E2  0E0A               	movlw	10
 10260   0050E4  26DF               	addwf	indf2,f,c
 10261   0050E6                     
 10262                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10263   0050E6  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10264   0050EA  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10265   0050EE  ECA4  F023         	call	_setMotorPWM	;wreg free
 10266   0050F2                     
 10267                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10268   0050F2  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10269   0050F6  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10270   0050FA  ECA4  F023         	call	_setMotorPWM	;wreg free
 10271   0050FE                     
 10272                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10273   0050FE  0E02               	movlw	2
 10274   005100  6E19               	movwf	(??_turnRight+1)^0,c
 10275   005102  0EA0               	movlw	160
 10276   005104  6E18               	movwf	??_turnRight^0,c
 10277   005106  0E92               	movlw	146
 10278   005108                     u6047:
 10279   005108  2EE8               	decfsz	wreg,f,c
 10280   00510A  D7FE               	bra	u6047
 10281   00510C  2E18               	decfsz	??_turnRight^0,f,c
 10282   00510E  D7FC               	bra	u6047
 10283   005110  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10284   005112  D7FA               	bra	u6047
 10285   005114  D000               	nop2	
 10286   005116                     l4653:
 10287   005116  C014  FFD9         	movff	turnRight@mL,fsr2l
 10288   00511A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10289   00511E  0E32               	movlw	50
 10290   005120  60DF               	cpfslt	indf2,c
 10291   005122  EF95  F028         	goto	u4461
 10292   005126  EF97  F028         	goto	u4460
 10293   00512A                     u4461:
 10294   00512A  EFA3  F028         	goto	l483
 10295   00512E                     u4460:
 10296   00512E  C016  FFD9         	movff	turnRight@mR,fsr2l
 10297   005132  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10298   005136  0E31               	movlw	49
 10299   005138  64DF               	cpfsgt	indf2,c
 10300   00513A  EFA1  F028         	goto	u4471
 10301   00513E  EFA3  F028         	goto	u4470
 10302   005142                     u4471:
 10303   005142  EF67  F028         	goto	l4645
 10304   005146                     u4470:
 10305   005146                     l483:
 10306   005146  0012               	return		;funcret
 10307   005148                     __end_of_turnRight:
 10308                           	callstack 0
 10309                           
 10310 ;; *************** function _Timer0_init *****************
 10311 ;; Defined at:
 10312 ;;		line 8 in file "timers.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;		None
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;		None
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, status,2
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10330 ;;Total ram usage:        0 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 1
 10333 ;; This function calls:
 10334 ;;		Nothing
 10335 ;; This function is called by:
 10336 ;;		_main
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text55
 10341   006066                     __ptext55:
 10342                           	callstack 0
 10343   006066                     _Timer0_init:
 10344                           	callstack 29
 10345   006066                     
 10346                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10347   006066  50D6               	movf	214,w,c	;volatile
 10348   006068  0B1F               	andlw	-225
 10349   00606A  0940               	iorlw	64
 10350   00606C  6ED6               	movwf	214,c	;volatile
 10351   00606E                     
 10352                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10353   00606E  88D6               	bsf	214,4,c	;volatile
 10354                           
 10355                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 10356   006070  50D6               	movf	214,w,c	;volatile
 10357   006072  0BF0               	andlw	-16
 10358   006074  090D               	iorlw	13
 10359   006076  6ED6               	movwf	214,c	;volatile
 10360   006078                     
 10361                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10362   006078  88D5               	bsf	213,4,c	;volatile
 10363                           
 10364                           ;timers.c: 16:     TMR0H=0;
 10365   00607A  0E00               	movlw	0
 10366   00607C  6ED4               	movwf	212,c	;volatile
 10367                           
 10368                           ;timers.c: 17:     TMR0L=0;
 10369   00607E  0E00               	movlw	0
 10370   006080  6ED3               	movwf	211,c	;volatile
 10371   006082                     
 10372                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10373   006082  9ED5               	bcf	213,7,c	;volatile
 10374   006084  0012               	return		;funcret
 10375   006086                     __end_of_Timer0_init:
 10376                           	callstack 0
 10377                           
 10378 ;; *************** function _RetryMove *****************
 10379 ;; Defined at:
 10380 ;;		line 325 in file "dc_motor.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10383 ;;		 -> motorL(9), 
 10384 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10385 ;;		 -> motorR(9), 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10401 ;;Total ram usage:        6 bytes
 10402 ;; Hardware stack levels used: 1
 10403 ;; Hardware stack levels required when called: 5
 10404 ;; This function calls:
 10405 ;;		_fullSpeedAhead
 10406 ;;		_reverseDetect
 10407 ;;		_stop
 10408 ;; This function is called by:
 10409 ;;		_main
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text56
 10414   005516                     __ptext56:
 10415                           	callstack 0
 10416   005516                     _RetryMove:
 10417                           	callstack 25
 10418   005516                     
 10419                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10420   005516  0E61               	movlw	low _motorL
 10421   005518  6E1A               	movwf	reverseDetect@mL^0,c
 10422   00551A  0E01               	movlw	high _motorL
 10423   00551C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10424   00551E  0E58               	movlw	low _motorR
 10425   005520  6E1C               	movwf	reverseDetect@mR^0,c
 10426   005522  0E01               	movlw	high _motorR
 10427   005524  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10428   005526  EC86  F02B         	call	_reverseDetect	;wreg free
 10429                           
 10430                           ;dc_motor.c: 327:     stop(&motorL, &motorR);
 10431   00552A  0E61               	movlw	low _motorL
 10432   00552C  6E14               	movwf	stop@mL^0,c
 10433   00552E  0E01               	movlw	high _motorL
 10434   005530  6E15               	movwf	(stop@mL+1)^0,c
 10435   005532  0E58               	movlw	low _motorR
 10436   005534  6E16               	movwf	stop@mR^0,c
 10437   005536  0E01               	movlw	high _motorR
 10438   005538  6E17               	movwf	(stop@mR+1)^0,c
 10439   00553A  ECD5  F029         	call	_stop	;wreg free
 10440                           
 10441                           ;dc_motor.c: 328:     fullSpeedAhead(mL,mR);
 10442   00553E  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10443   005542  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10444   005546  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10445   00554A  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10446   00554E  EC42  F029         	call	_fullSpeedAhead	;wreg free
 10447   005552                     
 10448                           ;dc_motor.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10449   005552  0E29               	movlw	41
 10450   005554  6E25               	movwf	(??_RetryMove+1)^0,c
 10451   005556  0E96               	movlw	150
 10452   005558  6E24               	movwf	??_RetryMove^0,c
 10453   00555A  0E7F               	movlw	127
 10454   00555C                     u6057:
 10455   00555C  2EE8               	decfsz	wreg,f,c
 10456   00555E  D7FE               	bra	u6057
 10457   005560  2E24               	decfsz	??_RetryMove^0,f,c
 10458   005562  D7FC               	bra	u6057
 10459   005564  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10460   005566  D7FA               	bra	u6057
 10461   005568  F000               	nop	
 10462   00556A                     
 10463                           ;dc_motor.c: 330:     stop(&motorL, &motorR);
 10464   00556A  0E61               	movlw	low _motorL
 10465   00556C  6E14               	movwf	stop@mL^0,c
 10466   00556E  0E01               	movlw	high _motorL
 10467   005570  6E15               	movwf	(stop@mL+1)^0,c
 10468   005572  0E58               	movlw	low _motorR
 10469   005574  6E16               	movwf	stop@mR^0,c
 10470   005576  0E01               	movlw	high _motorR
 10471   005578  6E17               	movwf	(stop@mR+1)^0,c
 10472   00557A  ECD5  F029         	call	_stop	;wreg free
 10473   00557E  0012               	return		;funcret
 10474   005580                     __end_of_RetryMove:
 10475                           	callstack 0
 10476                           
 10477 ;; *************** function _PinkMove *****************
 10478 ;; Defined at:
 10479 ;;		line 298 in file "dc_motor.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10482 ;;		 -> motorL(9), 
 10483 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10484 ;;		 -> motorR(9), 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;		None
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  1    wreg      void 
 10489 ;; Registers used:
 10490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10500 ;;Total ram usage:        4 bytes
 10501 ;; Hardware stack levels used: 1
 10502 ;; Hardware stack levels required when called: 5
 10503 ;; This function calls:
 10504 ;;		_reverseDetect
 10505 ;;		_reverseOneBlock
 10506 ;;		_turnLeft45
 10507 ;; This function is called by:
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text57
 10513   005A60                     __ptext57:
 10514                           	callstack 0
 10515   005A60                     _PinkMove:
 10516                           	callstack 25
 10517   005A60                     
 10518                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10519   005A60  0E61               	movlw	low _motorL
 10520   005A62  6E1A               	movwf	reverseDetect@mL^0,c
 10521   005A64  0E01               	movlw	high _motorL
 10522   005A66  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10523   005A68  0E58               	movlw	low _motorR
 10524   005A6A  6E1C               	movwf	reverseDetect@mR^0,c
 10525   005A6C  0E01               	movlw	high _motorR
 10526   005A6E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10527   005A70  EC86  F02B         	call	_reverseDetect	;wreg free
 10528                           
 10529                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10530   005A74  0E61               	movlw	low _motorL
 10531   005A76  6E1A               	movwf	reverseOneBlock@mL^0,c
 10532   005A78  0E01               	movlw	high _motorL
 10533   005A7A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10534   005A7C  0E58               	movlw	low _motorR
 10535   005A7E  6E1C               	movwf	reverseOneBlock@mR^0,c
 10536   005A80  0E01               	movlw	high _motorR
 10537   005A82  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10538   005A84  EC0C  F02C         	call	_reverseOneBlock	;wreg free
 10539                           
 10540                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10541   005A88  0E61               	movlw	low _motorL
 10542   005A8A  6E1A               	movwf	turnLeft45@mL^0,c
 10543   005A8C  0E01               	movlw	high _motorL
 10544   005A8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10545   005A90  0E58               	movlw	low _motorR
 10546   005A92  6E1C               	movwf	turnLeft45@mR^0,c
 10547   005A94  0E01               	movlw	high _motorR
 10548   005A96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10549   005A98  EC6F  F02E         	call	_turnLeft45	;wreg free
 10550                           
 10551                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10552   005A9C  0E61               	movlw	low _motorL
 10553   005A9E  6E1A               	movwf	turnLeft45@mL^0,c
 10554   005AA0  0E01               	movlw	high _motorL
 10555   005AA2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10556   005AA4  0E58               	movlw	low _motorR
 10557   005AA6  6E1C               	movwf	turnLeft45@mR^0,c
 10558   005AA8  0E01               	movlw	high _motorR
 10559   005AAA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10560   005AAC  EC6F  F02E         	call	_turnLeft45	;wreg free
 10561   005AB0  0012               	return		;funcret
 10562   005AB2                     __end_of_PinkMove:
 10563                           	callstack 0
 10564                           
 10565 ;; *************** function _turnLeft45 *****************
 10566 ;; Defined at:
 10567 ;;		line 218 in file "dc_motor.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10570 ;;		 -> motorL(9), 
 10571 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10572 ;;		 -> motorR(9), 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;Total ram usage:        6 bytes
 10589 ;; Hardware stack levels used: 1
 10590 ;; Hardware stack levels required when called: 4
 10591 ;; This function calls:
 10592 ;;		_TurnDelay
 10593 ;;		_stop
 10594 ;;		_turnLeft
 10595 ;; This function is called by:
 10596 ;;		_GreenMove
 10597 ;;		_PinkMove
 10598 ;;		_LightBlueMove
 10599 ;;		_ReversePink
 10600 ;;		_turnCalibration
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text58
 10605   005CDE                     __ptext58:
 10606                           	callstack 0
 10607   005CDE                     _turnLeft45:
 10608                           	callstack 25
 10609   005CDE                     
 10610                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10611   005CDE  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10612   005CE2  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10613   005CE6  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10614   005CEA  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10615   005CEE  ECA4  F028         	call	_turnLeft	;wreg free
 10616   005CF2                     
 10617                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10618   005CF2  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10619   005CF6  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10620   005CFA  ECB4  F02F         	call	_TurnDelay	;wreg free
 10621   005CFE                     
 10622                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10623   005CFE  0E61               	movlw	low _motorL
 10624   005D00  6E14               	movwf	stop@mL^0,c
 10625   005D02  0E01               	movlw	high _motorL
 10626   005D04  6E15               	movwf	(stop@mL+1)^0,c
 10627   005D06  0E58               	movlw	low _motorR
 10628   005D08  6E16               	movwf	stop@mR^0,c
 10629   005D0A  0E01               	movlw	high _motorR
 10630   005D0C  6E17               	movwf	(stop@mR+1)^0,c
 10631   005D0E  ECD5  F029         	call	_stop	;wreg free
 10632   005D12                     
 10633                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10634   005D12  0E05               	movlw	5
 10635   005D14  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10636   005D16  0E0F               	movlw	15
 10637   005D18  6E1E               	movwf	??_turnLeft45^0,c
 10638   005D1A  0EF1               	movlw	241
 10639   005D1C                     u6067:
 10640   005D1C  2EE8               	decfsz	wreg,f,c
 10641   005D1E  D7FE               	bra	u6067
 10642   005D20  2E1E               	decfsz	??_turnLeft45^0,f,c
 10643   005D22  D7FC               	bra	u6067
 10644   005D24  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10645   005D26  D7FA               	bra	u6067
 10646   005D28  F000               	nop	
 10647   005D2A  0012               	return		;funcret
 10648   005D2C                     __end_of_turnLeft45:
 10649                           	callstack 0
 10650                           
 10651 ;; *************** function _turnLeft *****************
 10652 ;; Defined at:
 10653 ;;		line 111 in file "dc_motor.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10656 ;;		 -> motorL(9), 
 10657 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10658 ;;		 -> motorR(9), 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10674 ;;Total ram usage:        6 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 3
 10677 ;; This function calls:
 10678 ;;		_setMotorPWM
 10679 ;; This function is called by:
 10680 ;;		_turnLeft45
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text59
 10685   005148                     __ptext59:
 10686                           	callstack 0
 10687   005148                     _turnLeft:
 10688                           	callstack 25
 10689   005148                     
 10690                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10691   005148  EE20 F001          	lfsr	2,1
 10692   00514C  5014               	movf	turnLeft@mL^0,w,c
 10693   00514E  26D9               	addwf	fsr2l,f,c
 10694   005150  5015               	movf	(turnLeft@mL+1)^0,w,c
 10695   005152  22DA               	addwfc	fsr2h,f,c
 10696   005154  0E00               	movlw	0
 10697   005156  6EDF               	movwf	indf2,c
 10698                           
 10699                           ;dc_motor.c: 114:     mR->direction =1;
 10700   005158  EE20 F001          	lfsr	2,1
 10701   00515C  5016               	movf	turnLeft@mR^0,w,c
 10702   00515E  26D9               	addwf	fsr2l,f,c
 10703   005160  5017               	movf	(turnLeft@mR+1)^0,w,c
 10704   005162  22DA               	addwfc	fsr2h,f,c
 10705   005164  0E01               	movlw	1
 10706   005166  6EDF               	movwf	indf2,c
 10707                           
 10708                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10709   005168  EFDA  F028         	goto	l4639
 10710   00516C                     l4631:
 10711                           
 10712                           ;dc_motor.c: 118:         mL->power+=10;
 10713   00516C  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10714   005170  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10715   005174  0E0A               	movlw	10
 10716   005176  26DF               	addwf	indf2,f,c
 10717                           
 10718                           ;dc_motor.c: 119:         mR->power+=10;
 10719   005178  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10720   00517C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10721   005180  0E0A               	movlw	10
 10722   005182  26DF               	addwf	indf2,f,c
 10723   005184                     
 10724                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10725   005184  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10726   005188  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10727   00518C  ECA4  F023         	call	_setMotorPWM	;wreg free
 10728   005190                     
 10729                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10730   005190  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10731   005194  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10732   005198  ECA4  F023         	call	_setMotorPWM	;wreg free
 10733   00519C                     
 10734                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10735   00519C  0E02               	movlw	2
 10736   00519E  6E19               	movwf	(??_turnLeft+1)^0,c
 10737   0051A0  0EA0               	movlw	160
 10738   0051A2  6E18               	movwf	??_turnLeft^0,c
 10739   0051A4  0E92               	movlw	146
 10740   0051A6                     u6077:
 10741   0051A6  2EE8               	decfsz	wreg,f,c
 10742   0051A8  D7FE               	bra	u6077
 10743   0051AA  2E18               	decfsz	??_turnLeft^0,f,c
 10744   0051AC  D7FC               	bra	u6077
 10745   0051AE  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10746   0051B0  D7FA               	bra	u6077
 10747   0051B2  D000               	nop2	
 10748   0051B4                     l4639:
 10749   0051B4  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10750   0051B8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10751   0051BC  0E32               	movlw	50
 10752   0051BE  60DF               	cpfslt	indf2,c
 10753   0051C0  EFE4  F028         	goto	u4441
 10754   0051C4  EFE6  F028         	goto	u4440
 10755   0051C8                     u4441:
 10756   0051C8  EFF2  F028         	goto	l475
 10757   0051CC                     u4440:
 10758   0051CC  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10759   0051D0  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10760   0051D4  0E31               	movlw	49
 10761   0051D6  64DF               	cpfsgt	indf2,c
 10762   0051D8  EFF0  F028         	goto	u4451
 10763   0051DC  EFF2  F028         	goto	u4450
 10764   0051E0                     u4451:
 10765   0051E0  EFB6  F028         	goto	l4631
 10766   0051E4                     u4450:
 10767   0051E4                     l475:
 10768   0051E4  0012               	return		;funcret
 10769   0051E6                     __end_of_turnLeft:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _TurnDelay *****************
 10773 ;; Defined at:
 10774 ;;		line 204 in file "dc_motor.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  Turn45Delay     2    0[COMRAM] int 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      void 
 10781 ;; Registers used:
 10782 ;;		wreg, status,2, status,0
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;Total ram usage:        3 bytes
 10793 ;; Hardware stack levels used: 1
 10794 ;; Hardware stack levels required when called: 1
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_turnRight45
 10799 ;;		_turnLeft45
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text60
 10804   005F68                     __ptext60:
 10805                           	callstack 0
 10806   005F68                     _TurnDelay:
 10807                           	callstack 27
 10808   005F68                     
 10809                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10810   005F68  EFC1  F02F         	goto	l510
 10811   005F6C                     l4673:
 10812                           
 10813                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10814   005F6C  0E15               	movlw	21
 10815   005F6E  6E03               	movwf	??_TurnDelay^0,c
 10816   005F70  0EC6               	movlw	198
 10817   005F72                     u6087:
 10818   005F72  2EE8               	decfsz	wreg,f,c
 10819   005F74  D7FE               	bra	u6087
 10820   005F76  2E03               	decfsz	??_TurnDelay^0,f,c
 10821   005F78  D7FC               	bra	u6087
 10822   005F7A  D000               	nop2	
 10823   005F7C                     
 10824                           ;dc_motor.c: 207:         Turn45Delay--;
 10825   005F7C  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10826   005F7E  A0D8               	btfss	status,0,c
 10827   005F80  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10828   005F82                     l510:
 10829                           
 10830                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10831   005F82  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10832   005F84  EFCE  F02F         	goto	u4500
 10833   005F88  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10834   005F8A  E106               	bnz	u4501
 10835   005F8C  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10836   005F8E  B0D8               	btfsc	status,0,c
 10837   005F90  EFCC  F02F         	goto	u4501
 10838   005F94  EFCE  F02F         	goto	u4500
 10839   005F98                     u4501:
 10840   005F98  EFB6  F02F         	goto	l4673
 10841   005F9C                     u4500:
 10842   005F9C  0012               	return		;funcret
 10843   005F9E                     __end_of_TurnDelay:
 10844                           	callstack 0
 10845                           
 10846 ;; *************** function _reverseOneBlock *****************
 10847 ;; Defined at:
 10848 ;;		line 232 in file "dc_motor.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10851 ;;		 -> motorL(9), 
 10852 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10853 ;;		 -> motorR(9), 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10869 ;;Total ram usage:        6 bytes
 10870 ;; Hardware stack levels used: 1
 10871 ;; Hardware stack levels required when called: 4
 10872 ;; This function calls:
 10873 ;;		_fullSpeedBack
 10874 ;;		_stop
 10875 ;; This function is called by:
 10876 ;;		_YellowMove
 10877 ;;		_PinkMove
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text61
 10882   005818                     __ptext61:
 10883                           	callstack 0
 10884   005818                     _reverseOneBlock:
 10885                           	callstack 25
 10886   005818                     
 10887                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10888   005818  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10889   00581C  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10890   005820  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10891   005824  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10892   005828  ECF3  F028         	call	_fullSpeedBack	;wreg free
 10893   00582C                     
 10894                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10895   00582C  0E56               	movlw	86
 10896   00582E  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10897   005830  0E3A               	movlw	58
 10898   005832  6E1E               	movwf	??_reverseOneBlock^0,c
 10899   005834  0EF4               	movlw	244
 10900   005836                     u6097:
 10901   005836  2EE8               	decfsz	wreg,f,c
 10902   005838  D7FE               	bra	u6097
 10903   00583A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10904   00583C  D7FC               	bra	u6097
 10905   00583E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10906   005840  D7FA               	bra	u6097
 10907   005842                     
 10908                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10909   005842  0E61               	movlw	low _motorL
 10910   005844  6E14               	movwf	stop@mL^0,c
 10911   005846  0E01               	movlw	high _motorL
 10912   005848  6E15               	movwf	(stop@mL+1)^0,c
 10913   00584A  0E58               	movlw	low _motorR
 10914   00584C  6E16               	movwf	stop@mR^0,c
 10915   00584E  0E01               	movlw	high _motorR
 10916   005850  6E17               	movwf	(stop@mR+1)^0,c
 10917   005852  ECD5  F029         	call	_stop	;wreg free
 10918                           
 10919                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10920   005856  0E05               	movlw	5
 10921   005858  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10922   00585A  0E0F               	movlw	15
 10923   00585C  6E1E               	movwf	??_reverseOneBlock^0,c
 10924   00585E  0EF1               	movlw	241
 10925   005860                     u6107:
 10926   005860  2EE8               	decfsz	wreg,f,c
 10927   005862  D7FE               	bra	u6107
 10928   005864  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10929   005866  D7FC               	bra	u6107
 10930   005868  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10931   00586A  D7FA               	bra	u6107
 10932   00586C  F000               	nop	
 10933   00586E  0012               	return		;funcret
 10934   005870                     __end_of_reverseOneBlock:
 10935                           	callstack 0
 10936                           
 10937 ;; *************** function _reverseDetect *****************
 10938 ;; Defined at:
 10939 ;;		line 225 in file "dc_motor.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10942 ;;		 -> motorL(9), 
 10943 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10944 ;;		 -> motorR(9), 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10960 ;;Total ram usage:        6 bytes
 10961 ;; Hardware stack levels used: 1
 10962 ;; Hardware stack levels required when called: 4
 10963 ;; This function calls:
 10964 ;;		_fullSpeedBack
 10965 ;;		_stop
 10966 ;; This function is called by:
 10967 ;;		_RedMove
 10968 ;;		_GreenMove
 10969 ;;		_BlueMove
 10970 ;;		_YellowMove
 10971 ;;		_PinkMove
 10972 ;;		_OrangeMove
 10973 ;;		_LightBlueMove
 10974 ;;		_RetryMove
 10975 ;;		_ReverseYellow
 10976 ;;		_ReversePink
 10977 ;;		_go_Home
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text62
 10982   00570C                     __ptext62:
 10983                           	callstack 0
 10984   00570C                     _reverseDetect:
 10985                           	callstack 25
 10986   00570C                     
 10987                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10988   00570C  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10989   005710  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10990   005714  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10991   005718  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10992   00571C  ECF3  F028         	call	_fullSpeedBack	;wreg free
 10993   005720                     
 10994                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10995   005720  0E11               	movlw	17
 10996   005722  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10997   005724  0E3C               	movlw	60
 10998   005726  6E1E               	movwf	??_reverseDetect^0,c
 10999   005728  0ECB               	movlw	203
 11000   00572A                     u6117:
 11001   00572A  2EE8               	decfsz	wreg,f,c
 11002   00572C  D7FE               	bra	u6117
 11003   00572E  2E1E               	decfsz	??_reverseDetect^0,f,c
 11004   005730  D7FC               	bra	u6117
 11005   005732  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11006   005734  D7FA               	bra	u6117
 11007   005736  F000               	nop	
 11008   005738                     
 11009                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11010   005738  0E61               	movlw	low _motorL
 11011   00573A  6E14               	movwf	stop@mL^0,c
 11012   00573C  0E01               	movlw	high _motorL
 11013   00573E  6E15               	movwf	(stop@mL+1)^0,c
 11014   005740  0E58               	movlw	low _motorR
 11015   005742  6E16               	movwf	stop@mR^0,c
 11016   005744  0E01               	movlw	high _motorR
 11017   005746  6E17               	movwf	(stop@mR+1)^0,c
 11018   005748  ECD5  F029         	call	_stop	;wreg free
 11019                           
 11020                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11021   00574C  0E05               	movlw	5
 11022   00574E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11023   005750  0E0F               	movlw	15
 11024   005752  6E1E               	movwf	??_reverseDetect^0,c
 11025   005754  0EF1               	movlw	241
 11026   005756                     u6127:
 11027   005756  2EE8               	decfsz	wreg,f,c
 11028   005758  D7FE               	bra	u6127
 11029   00575A  2E1E               	decfsz	??_reverseDetect^0,f,c
 11030   00575C  D7FC               	bra	u6127
 11031   00575E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11032   005760  D7FA               	bra	u6127
 11033   005762  F000               	nop	
 11034   005764  0012               	return		;funcret
 11035   005766                     __end_of_reverseDetect:
 11036                           	callstack 0
 11037                           
 11038 ;; *************** function _fullSpeedBack *****************
 11039 ;; Defined at:
 11040 ;;		line 185 in file "dc_motor.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11043 ;;		 -> motorL(9), 
 11044 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11045 ;;		 -> motorR(9), 
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1    wreg      void 
 11050 ;; Registers used:
 11051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11061 ;;Total ram usage:        6 bytes
 11062 ;; Hardware stack levels used: 1
 11063 ;; Hardware stack levels required when called: 3
 11064 ;; This function calls:
 11065 ;;		_setMotorPWM
 11066 ;; This function is called by:
 11067 ;;		_reverseDetect
 11068 ;;		_reverseOneBlock
 11069 ;;		_Backhalfblock
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text63
 11074   0051E6                     __ptext63:
 11075                           	callstack 0
 11076   0051E6                     _fullSpeedBack:
 11077                           	callstack 25
 11078   0051E6                     
 11079                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11080   0051E6  EE20 F001          	lfsr	2,1
 11081   0051EA  5014               	movf	fullSpeedBack@mL^0,w,c
 11082   0051EC  26D9               	addwf	fsr2l,f,c
 11083   0051EE  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11084   0051F0  22DA               	addwfc	fsr2h,f,c
 11085   0051F2  0E00               	movlw	0
 11086   0051F4  6EDF               	movwf	indf2,c
 11087                           
 11088                           ;dc_motor.c: 189:     mR->direction =0;
 11089   0051F6  EE20 F001          	lfsr	2,1
 11090   0051FA  5016               	movf	fullSpeedBack@mR^0,w,c
 11091   0051FC  26D9               	addwf	fsr2l,f,c
 11092   0051FE  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11093   005200  22DA               	addwfc	fsr2h,f,c
 11094   005202  0E00               	movlw	0
 11095   005204  6EDF               	movwf	indf2,c
 11096                           
 11097                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11098   005206  EF29  F029         	goto	l4667
 11099   00520A                     l4659:
 11100                           
 11101                           ;dc_motor.c: 192:         mL->power+=10;
 11102   00520A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11103   00520E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11104   005212  0E0A               	movlw	10
 11105   005214  26DF               	addwf	indf2,f,c
 11106                           
 11107                           ;dc_motor.c: 193:         mR->power+=10;
 11108   005216  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11109   00521A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11110   00521E  0E0A               	movlw	10
 11111   005220  26DF               	addwf	indf2,f,c
 11112   005222                     
 11113                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11114   005222  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11115   005226  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11116   00522A  ECA4  F023         	call	_setMotorPWM	;wreg free
 11117   00522E                     
 11118                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11119   00522E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11120   005232  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11121   005236  ECA4  F023         	call	_setMotorPWM	;wreg free
 11122   00523A                     
 11123                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11124   00523A  0E02               	movlw	2
 11125   00523C  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11126   00523E  0EA0               	movlw	160
 11127   005240  6E18               	movwf	??_fullSpeedBack^0,c
 11128   005242  0E92               	movlw	146
 11129   005244                     u6137:
 11130   005244  2EE8               	decfsz	wreg,f,c
 11131   005246  D7FE               	bra	u6137
 11132   005248  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11133   00524A  D7FC               	bra	u6137
 11134   00524C  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11135   00524E  D7FA               	bra	u6137
 11136   005250  D000               	nop2	
 11137   005252                     l4667:
 11138   005252  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11139   005256  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11140   00525A  0E32               	movlw	50
 11141   00525C  60DF               	cpfslt	indf2,c
 11142   00525E  EF33  F029         	goto	u4481
 11143   005262  EF35  F029         	goto	u4480
 11144   005266                     u4481:
 11145   005266  EF41  F029         	goto	l507
 11146   00526A                     u4480:
 11147   00526A  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11148   00526E  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11149   005272  0E31               	movlw	49
 11150   005274  64DF               	cpfsgt	indf2,c
 11151   005276  EF3F  F029         	goto	u4491
 11152   00527A  EF41  F029         	goto	u4490
 11153   00527E                     u4491:
 11154   00527E  EF05  F029         	goto	l4659
 11155   005282                     u4490:
 11156   005282                     l507:
 11157   005282  0012               	return		;funcret
 11158   005284                     __end_of_fullSpeedBack:
 11159                           	callstack 0
 11160                           
 11161 ;; *************** function _Interrupts_init *****************
 11162 ;; Defined at:
 11163 ;;		line 9 in file "interrupts.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;		None
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;		None
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  1    wreg      void 
 11170 ;; Registers used:
 11171 ;;		None
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;Total ram usage:        0 bytes
 11182 ;; Hardware stack levels used: 1
 11183 ;; Hardware stack levels required when called: 1
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_main
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text64
 11192   0060C8                     __ptext64:
 11193                           	callstack 0
 11194   0060C8                     _Interrupts_init:
 11195                           	callstack 29
 11196   0060C8                     
 11197                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11198   0060C8  9AF2               	bcf	242,5,c	;volatile
 11199                           
 11200                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11201   0060CA  9CF2               	bcf	242,6,c	;volatile
 11202                           
 11203                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11204   0060CC  8EF2               	bsf	242,7,c	;volatile
 11205                           
 11206                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11207   0060CE  010E               	movlb	14	; () banked
 11208   0060D0  8B29               	bsf	41,5,b	;volatile
 11209   0060D2                     
 11210                           ; BSR set to: 14
 11211   0060D2  0012               	return		;funcret
 11212   0060D4                     __end_of_Interrupts_init:
 11213                           	callstack 0
 11214                           
 11215 ;; *************** function _Forwardhalfblock *****************
 11216 ;; Defined at:
 11217 ;;		line 245 in file "dc_motor.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11220 ;;		 -> motorL(9), 
 11221 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11222 ;;		 -> motorR(9), 
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;Total ram usage:        6 bytes
 11239 ;; Hardware stack levels used: 1
 11240 ;; Hardware stack levels required when called: 4
 11241 ;; This function calls:
 11242 ;;		_fullSpeedAhead
 11243 ;;		_stop
 11244 ;; This function is called by:
 11245 ;;		_main
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text65
 11250   005766                     __ptext65:
 11251                           	callstack 0
 11252   005766                     _Forwardhalfblock:
 11253                           	callstack 26
 11254   005766                     
 11255                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11256   005766  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11257   00576A  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11258   00576E  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11259   005772  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11260   005776  EC42  F029         	call	_fullSpeedAhead	;wreg free
 11261   00577A                     
 11262                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11263   00577A  0E2B               	movlw	43
 11264   00577C  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11265   00577E  0E9D               	movlw	157
 11266   005780  6E1E               	movwf	??_Forwardhalfblock^0,c
 11267   005782  0EF9               	movlw	249
 11268   005784                     u6147:
 11269   005784  2EE8               	decfsz	wreg,f,c
 11270   005786  D7FE               	bra	u6147
 11271   005788  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11272   00578A  D7FC               	bra	u6147
 11273   00578C  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11274   00578E  D7FA               	bra	u6147
 11275   005790  F000               	nop	
 11276   005792                     
 11277                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11278   005792  0E61               	movlw	low _motorL
 11279   005794  6E14               	movwf	stop@mL^0,c
 11280   005796  0E01               	movlw	high _motorL
 11281   005798  6E15               	movwf	(stop@mL+1)^0,c
 11282   00579A  0E58               	movlw	low _motorR
 11283   00579C  6E16               	movwf	stop@mR^0,c
 11284   00579E  0E01               	movlw	high _motorR
 11285   0057A0  6E17               	movwf	(stop@mR+1)^0,c
 11286   0057A2  ECD5  F029         	call	_stop	;wreg free
 11287                           
 11288                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11289   0057A6  0E05               	movlw	5
 11290   0057A8  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11291   0057AA  0E0F               	movlw	15
 11292   0057AC  6E1E               	movwf	??_Forwardhalfblock^0,c
 11293   0057AE  0EF1               	movlw	241
 11294   0057B0                     u6157:
 11295   0057B0  2EE8               	decfsz	wreg,f,c
 11296   0057B2  D7FE               	bra	u6157
 11297   0057B4  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11298   0057B6  D7FC               	bra	u6157
 11299   0057B8  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11300   0057BA  D7FA               	bra	u6157
 11301   0057BC  F000               	nop	
 11302   0057BE  0012               	return		;funcret
 11303   0057C0                     __end_of_Forwardhalfblock:
 11304                           	callstack 0
 11305                           
 11306 ;; *************** function _stop *****************
 11307 ;; Defined at:
 11308 ;;		line 93 in file "dc_motor.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11311 ;;		 -> motorL(9), 
 11312 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11313 ;;		 -> motorR(9), 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;Total ram usage:        6 bytes
 11330 ;; Hardware stack levels used: 1
 11331 ;; Hardware stack levels required when called: 3
 11332 ;; This function calls:
 11333 ;;		_setMotorPWM
 11334 ;; This function is called by:
 11335 ;;		_main
 11336 ;;		_turnRight45
 11337 ;;		_turnLeft45
 11338 ;;		_reverseDetect
 11339 ;;		_reverseOneBlock
 11340 ;;		_ForwardOneBlock
 11341 ;;		_Forwardhalfblock
 11342 ;;		_RetryMove
 11343 ;;		_go_Home
 11344 ;;		_Backhalfblock
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text66
 11349   0053AA                     __ptext66:
 11350                           	callstack 0
 11351   0053AA                     _stop:
 11352                           	callstack 25
 11353   0053AA                     
 11354                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11355   0053AA  EFFB  F029         	goto	l4625
 11356   0053AE                     l4617:
 11357                           
 11358                           ;dc_motor.c: 97:         mL->power-=10;
 11359   0053AE  C014  FFD9         	movff	stop@mL,fsr2l
 11360   0053B2  C015  FFDA         	movff	stop@mL+1,fsr2h
 11361   0053B6  0E0A               	movlw	10
 11362   0053B8  5EDF               	subwf	indf2,f,c
 11363                           
 11364                           ;dc_motor.c: 98:         mR->power-=10;
 11365   0053BA  C016  FFD9         	movff	stop@mR,fsr2l
 11366   0053BE  C017  FFDA         	movff	stop@mR+1,fsr2h
 11367   0053C2  0E0A               	movlw	10
 11368   0053C4  5EDF               	subwf	indf2,f,c
 11369   0053C6                     
 11370                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11371   0053C6  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11372   0053CA  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11373   0053CE  ECA4  F023         	call	_setMotorPWM	;wreg free
 11374   0053D2                     
 11375                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11376   0053D2  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11377   0053D6  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11378   0053DA  ECA4  F023         	call	_setMotorPWM	;wreg free
 11379   0053DE                     
 11380                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11381   0053DE  0E02               	movlw	2
 11382   0053E0  6E19               	movwf	(??_stop+1)^0,c
 11383   0053E2  0EA0               	movlw	160
 11384   0053E4  6E18               	movwf	??_stop^0,c
 11385   0053E6  0E92               	movlw	146
 11386   0053E8                     u6167:
 11387   0053E8  2EE8               	decfsz	wreg,f,c
 11388   0053EA  D7FE               	bra	u6167
 11389   0053EC  2E18               	decfsz	??_stop^0,f,c
 11390   0053EE  D7FC               	bra	u6167
 11391   0053F0  2E19               	decfsz	(??_stop+1)^0,f,c
 11392   0053F2  D7FA               	bra	u6167
 11393   0053F4  D000               	nop2	
 11394   0053F6                     l4625:
 11395                           
 11396                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11397   0053F6  C014  FFD9         	movff	stop@mL,fsr2l
 11398   0053FA  C015  FFDA         	movff	stop@mL+1,fsr2h
 11399   0053FE  50DF               	movf	indf2,w,c
 11400   005400  A4D8               	btfss	status,2,c
 11401   005402  EF05  F02A         	goto	u4421
 11402   005406  EF07  F02A         	goto	u4420
 11403   00540A                     u4421:
 11404   00540A  EFD7  F029         	goto	l4617
 11405   00540E                     u4420:
 11406   00540E  C016  FFD9         	movff	stop@mR,fsr2l
 11407   005412  C017  FFDA         	movff	stop@mR+1,fsr2h
 11408   005416  50DF               	movf	indf2,w,c
 11409   005418  A4D8               	btfss	status,2,c
 11410   00541A  EF11  F02A         	goto	u4431
 11411   00541E  EF13  F02A         	goto	u4430
 11412   005422                     u4431:
 11413   005422  EFD7  F029         	goto	l4617
 11414   005426                     u4430:
 11415   005426  0012               	return		;funcret
 11416   005428                     __end_of_stop:
 11417                           	callstack 0
 11418                           
 11419 ;; *************** function _fullSpeedAhead *****************
 11420 ;; Defined at:
 11421 ;;		line 147 in file "dc_motor.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11424 ;;		 -> motorL(9), 
 11425 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11426 ;;		 -> motorR(9), 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11442 ;;Total ram usage:        6 bytes
 11443 ;; Hardware stack levels used: 1
 11444 ;; Hardware stack levels required when called: 3
 11445 ;; This function calls:
 11446 ;;		_setMotorPWM
 11447 ;; This function is called by:
 11448 ;;		_main
 11449 ;;		_ForwardOneBlock
 11450 ;;		_Forwardhalfblock
 11451 ;;		_RetryMove
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text67
 11456   005284                     __ptext67:
 11457                           	callstack 0
 11458   005284                     _fullSpeedAhead:
 11459                           	callstack 24
 11460   005284                     
 11461                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11462   005284  EE20 F001          	lfsr	2,1
 11463   005288  5014               	movf	fullSpeedAhead@mL^0,w,c
 11464   00528A  26D9               	addwf	fsr2l,f,c
 11465   00528C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11466   00528E  22DA               	addwfc	fsr2h,f,c
 11467   005290  0E01               	movlw	1
 11468   005292  6EDF               	movwf	indf2,c
 11469                           
 11470                           ;dc_motor.c: 151:     mR->direction =1;
 11471   005294  EE20 F001          	lfsr	2,1
 11472   005298  5016               	movf	fullSpeedAhead@mR^0,w,c
 11473   00529A  26D9               	addwf	fsr2l,f,c
 11474   00529C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11475   00529E  22DA               	addwfc	fsr2h,f,c
 11476   0052A0  0E01               	movlw	1
 11477   0052A2  6EDF               	movwf	indf2,c
 11478                           
 11479                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11480   0052A4  EF78  F029         	goto	l4611
 11481   0052A8                     l4603:
 11482                           
 11483                           ;dc_motor.c: 154:         mL->power+=10;
 11484   0052A8  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11485   0052AC  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11486   0052B0  0E0A               	movlw	10
 11487   0052B2  26DF               	addwf	indf2,f,c
 11488                           
 11489                           ;dc_motor.c: 155:         mR->power+=10;
 11490   0052B4  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11491   0052B8  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11492   0052BC  0E0A               	movlw	10
 11493   0052BE  26DF               	addwf	indf2,f,c
 11494   0052C0                     
 11495                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11496   0052C0  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11497   0052C4  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11498   0052C8  ECA4  F023         	call	_setMotorPWM	;wreg free
 11499   0052CC                     
 11500                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11501   0052CC  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11502   0052D0  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11503   0052D4  ECA4  F023         	call	_setMotorPWM	;wreg free
 11504   0052D8                     
 11505                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11506   0052D8  0E02               	movlw	2
 11507   0052DA  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11508   0052DC  0EA0               	movlw	160
 11509   0052DE  6E18               	movwf	??_fullSpeedAhead^0,c
 11510   0052E0  0E92               	movlw	146
 11511   0052E2                     u6177:
 11512   0052E2  2EE8               	decfsz	wreg,f,c
 11513   0052E4  D7FE               	bra	u6177
 11514   0052E6  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11515   0052E8  D7FC               	bra	u6177
 11516   0052EA  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11517   0052EC  D7FA               	bra	u6177
 11518   0052EE  D000               	nop2	
 11519   0052F0                     l4611:
 11520   0052F0  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11521   0052F4  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11522   0052F8  0E32               	movlw	50
 11523   0052FA  60DF               	cpfslt	indf2,c
 11524   0052FC  EF82  F029         	goto	u4401
 11525   005300  EF84  F029         	goto	u4400
 11526   005304                     u4401:
 11527   005304  EF90  F029         	goto	l491
 11528   005308                     u4400:
 11529   005308  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11530   00530C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11531   005310  0E31               	movlw	49
 11532   005312  64DF               	cpfsgt	indf2,c
 11533   005314  EF8E  F029         	goto	u4411
 11534   005318  EF90  F029         	goto	u4410
 11535   00531C                     u4411:
 11536   00531C  EF54  F029         	goto	l4603
 11537   005320                     u4410:
 11538   005320                     l491:
 11539   005320  0012               	return		;funcret
 11540   005322                     __end_of_fullSpeedAhead:
 11541                           	callstack 0
 11542                           
 11543 ;; *************** function _setMotorPWM *****************
 11544 ;; Defined at:
 11545 ;;		line 68 in file "dc_motor.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11548 ;;		 -> motorR(9), motorL(9), 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  negDuty         1   18[COMRAM] unsigned char 
 11551 ;;  posDuty         1   17[COMRAM] unsigned char 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11565 ;;Total ram usage:        6 bytes
 11566 ;; Hardware stack levels used: 1
 11567 ;; Hardware stack levels required when called: 2
 11568 ;; This function calls:
 11569 ;;		___lwdiv
 11570 ;;		___wmul
 11571 ;; This function is called by:
 11572 ;;		_stop
 11573 ;;		_turnLeft
 11574 ;;		_turnRight
 11575 ;;		_fullSpeedAhead
 11576 ;;		_timed_forward
 11577 ;;		_fullSpeedBack
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text68
 11582   004748                     __ptext68:
 11583                           	callstack 0
 11584   004748                     _setMotorPWM:
 11585                           	callstack 25
 11586   004748                     
 11587                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11588   004748  EE20 F002          	lfsr	2,2
 11589   00474C  500E               	movf	setMotorPWM@m^0,w,c
 11590   00474E  26D9               	addwf	fsr2l,f,c
 11591   004750  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11592   004752  22DA               	addwfc	fsr2h,f,c
 11593   004754  50DF               	movf	indf2,w,c
 11594   004756  B4D8               	btfsc	status,2,c
 11595   004758  EFB0  F023         	goto	u3421
 11596   00475C  EFB2  F023         	goto	u3420
 11597   004760                     u3421:
 11598   004760  EFE6  F023         	goto	l4055
 11599   004764                     u3420:
 11600   004764                     
 11601                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11602   004764  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11603   004768  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11604   00476C  50DF               	movf	indf2,w,c
 11605   00476E  6E10               	movwf	??_setMotorPWM^0,c
 11606   004770  5010               	movf	??_setMotorPWM^0,w,c
 11607   004772  6E01               	movwf	___wmul@multiplier^0,c
 11608   004774  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11609   004776  EE20 F003          	lfsr	2,3
 11610   00477A  500E               	movf	setMotorPWM@m^0,w,c
 11611   00477C  26D9               	addwf	fsr2l,f,c
 11612   00477E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11613   004780  22DA               	addwfc	fsr2h,f,c
 11614   004782  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11615   004786  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11616   00478A  EC10  F030         	call	___wmul	;wreg free
 11617   00478E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11618   004792  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11619   004796  0E00               	movlw	0
 11620   004798  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11621   00479A  0E64               	movlw	100
 11622   00479C  6E09               	movwf	___lwdiv@divisor^0,c
 11623   00479E  EC51  F02A         	call	___lwdiv	;wreg free
 11624   0047A2  EE20 F003          	lfsr	2,3
 11625   0047A6  500E               	movf	setMotorPWM@m^0,w,c
 11626   0047A8  26D9               	addwf	fsr2l,f,c
 11627   0047AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11628   0047AC  22DA               	addwfc	fsr2h,f,c
 11629   0047AE  50DF               	movf	indf2,w,c
 11630   0047B0  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11631   0047B2  5007               	movf	?___lwdiv^0,w,c
 11632   0047B4  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11633   0047B6  6E12               	movwf	setMotorPWM@posDuty^0,c
 11634   0047B8                     
 11635                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11636   0047B8  EE20 F003          	lfsr	2,3
 11637   0047BC  500E               	movf	setMotorPWM@m^0,w,c
 11638   0047BE  26D9               	addwf	fsr2l,f,c
 11639   0047C0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11640   0047C2  22DA               	addwfc	fsr2h,f,c
 11641   0047C4  50DF               	movf	indf2,w,c
 11642   0047C6  6E13               	movwf	setMotorPWM@negDuty^0,c
 11643                           
 11644                           ;dc_motor.c: 75:     }
 11645   0047C8  EF09  F024         	goto	l4059
 11646   0047CC                     l4055:
 11647                           
 11648                           ;dc_motor.c: 77:         posDuty=0;
 11649   0047CC  0E00               	movlw	0
 11650   0047CE  6E12               	movwf	setMotorPWM@posDuty^0,c
 11651   0047D0                     
 11652                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11653   0047D0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11654   0047D4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11655   0047D8  50DF               	movf	indf2,w,c
 11656   0047DA  6E10               	movwf	??_setMotorPWM^0,c
 11657   0047DC  5010               	movf	??_setMotorPWM^0,w,c
 11658   0047DE  6E01               	movwf	___wmul@multiplier^0,c
 11659   0047E0  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11660   0047E2  EE20 F003          	lfsr	2,3
 11661   0047E6  500E               	movf	setMotorPWM@m^0,w,c
 11662   0047E8  26D9               	addwf	fsr2l,f,c
 11663   0047EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11664   0047EC  22DA               	addwfc	fsr2h,f,c
 11665   0047EE  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11666   0047F2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11667   0047F6  EC10  F030         	call	___wmul	;wreg free
 11668   0047FA  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11669   0047FE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11670   004802  0E00               	movlw	0
 11671   004804  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11672   004806  0E64               	movlw	100
 11673   004808  6E09               	movwf	___lwdiv@divisor^0,c
 11674   00480A  EC51  F02A         	call	___lwdiv	;wreg free
 11675   00480E  5007               	movf	?___lwdiv^0,w,c
 11676   004810  6E13               	movwf	setMotorPWM@negDuty^0,c
 11677   004812                     l4059:
 11678                           
 11679                           ;dc_motor.c: 81:     if (m->direction) {
 11680   004812  EE20 F001          	lfsr	2,1
 11681   004816  500E               	movf	setMotorPWM@m^0,w,c
 11682   004818  26D9               	addwf	fsr2l,f,c
 11683   00481A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11684   00481C  22DA               	addwfc	fsr2h,f,c
 11685   00481E  50DF               	movf	indf2,w,c
 11686   004820  B4D8               	btfsc	status,2,c
 11687   004822  EF15  F024         	goto	u3431
 11688   004826  EF17  F024         	goto	u3430
 11689   00482A                     u3431:
 11690   00482A  EF39  F024         	goto	l4063
 11691   00482E                     u3430:
 11692   00482E                     
 11693                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11694   00482E  EE20 F005          	lfsr	2,5
 11695   004832  500E               	movf	setMotorPWM@m^0,w,c
 11696   004834  26D9               	addwf	fsr2l,f,c
 11697   004836  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11698   004838  22DA               	addwfc	fsr2h,f,c
 11699   00483A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11700   00483E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11701   004842  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11702   004846  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11703   00484A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11704                           
 11705                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11706   00484E  EE20 F007          	lfsr	2,7
 11707   004852  500E               	movf	setMotorPWM@m^0,w,c
 11708   004854  26D9               	addwf	fsr2l,f,c
 11709   004856  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11710   004858  22DA               	addwfc	fsr2h,f,c
 11711   00485A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11712   00485E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11713   004862  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11714   004866  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11715   00486A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11716                           
 11717                           ;dc_motor.c: 86:     } else {
 11718   00486E  EF59  F024         	goto	l461
 11719   004872                     l4063:
 11720                           
 11721                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11722   004872  EE20 F005          	lfsr	2,5
 11723   004876  500E               	movf	setMotorPWM@m^0,w,c
 11724   004878  26D9               	addwf	fsr2l,f,c
 11725   00487A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11726   00487C  22DA               	addwfc	fsr2h,f,c
 11727   00487E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11728   004882  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11729   004886  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11730   00488A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11731   00488E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11732                           
 11733                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11734   004892  EE20 F007          	lfsr	2,7
 11735   004896  500E               	movf	setMotorPWM@m^0,w,c
 11736   004898  26D9               	addwf	fsr2l,f,c
 11737   00489A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11738   00489C  22DA               	addwfc	fsr2h,f,c
 11739   00489E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11740   0048A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11741   0048A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11742   0048AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11743   0048AE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11744   0048B2                     l461:
 11745   0048B2  0012               	return		;funcret
 11746   0048B4                     __end_of_setMotorPWM:
 11747                           	callstack 0
 11748                           
 11749 ;; *************** function ___wmul *****************
 11750 ;; Defined at:
 11751 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;  multiplier      2    0[COMRAM] unsigned int 
 11754 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;  product         2    4[COMRAM] unsigned int 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  2    0[COMRAM] unsigned int 
 11759 ;; Registers used:
 11760 ;;		wreg, status,2, status,0, prodl, prodh
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11770 ;;Total ram usage:        6 bytes
 11771 ;; Hardware stack levels used: 1
 11772 ;; Hardware stack levels required when called: 1
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_setMotorPWM
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text69
 11781   006020                     __ptext69:
 11782                           	callstack 0
 11783   006020                     ___wmul:
 11784                           	callstack 25
 11785   006020  5001               	movf	___wmul@multiplier^0,w,c
 11786   006022  0203               	mulwf	___wmul@multiplicand^0,c
 11787   006024  CFF3 F005          	movff	prodl,___wmul@product
 11788   006028  CFF4 F006          	movff	prodh,___wmul@product+1
 11789   00602C  5001               	movf	___wmul@multiplier^0,w,c
 11790   00602E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11791   006030  50F3               	movf	243,w,c
 11792   006032  2606               	addwf	(___wmul@product+1)^0,f,c
 11793   006034  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11794   006036  0203               	mulwf	___wmul@multiplicand^0,c
 11795   006038  50F3               	movf	243,w,c
 11796   00603A  2606               	addwf	(___wmul@product+1)^0,f,c
 11797   00603C  C005  F001         	movff	___wmul@product,?___wmul
 11798   006040  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11799   006044  0012               	return		;funcret
 11800   006046                     __end_of___wmul:
 11801                           	callstack 0
 11802                           
 11803 ;; *************** function ___lwdiv *****************
 11804 ;; Defined at:
 11805 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;  dividend        2    6[COMRAM] unsigned int 
 11808 ;;  divisor         2    8[COMRAM] unsigned int 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  quotient        2   10[COMRAM] unsigned int 
 11811 ;;  counter         1   12[COMRAM] unsigned char 
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  2    6[COMRAM] unsigned int 
 11814 ;; Registers used:
 11815 ;;		wreg, status,2, status,0
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11822 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11824 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11825 ;;Total ram usage:        7 bytes
 11826 ;; Hardware stack levels used: 1
 11827 ;; Hardware stack levels required when called: 1
 11828 ;; This function calls:
 11829 ;;		Nothing
 11830 ;; This function is called by:
 11831 ;;		_setMotorPWM
 11832 ;; This function uses a non-reentrant model
 11833 ;;
 11834                           
 11835                           	psect	text70
 11836   0054A2                     __ptext70:
 11837                           	callstack 0
 11838   0054A2                     ___lwdiv:
 11839                           	callstack 25
 11840   0054A2  0E00               	movlw	0
 11841   0054A4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11842   0054A6  0E00               	movlw	0
 11843   0054A8  6E0B               	movwf	___lwdiv@quotient^0,c
 11844   0054AA  5009               	movf	___lwdiv@divisor^0,w,c
 11845   0054AC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11846   0054AE  B4D8               	btfsc	status,2,c
 11847   0054B0  EF5C  F02A         	goto	u3381
 11848   0054B4  EF5E  F02A         	goto	u3380
 11849   0054B8                     u3381:
 11850   0054B8  EF86  F02A         	goto	l1165
 11851   0054BC                     u3380:
 11852   0054BC  0E01               	movlw	1
 11853   0054BE  6E0D               	movwf	___lwdiv@counter^0,c
 11854   0054C0  EF66  F02A         	goto	l4027
 11855   0054C4                     l4025:
 11856   0054C4  90D8               	bcf	status,0,c
 11857   0054C6  3609               	rlcf	___lwdiv@divisor^0,f,c
 11858   0054C8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11859   0054CA  2A0D               	incf	___lwdiv@counter^0,f,c
 11860   0054CC                     l4027:
 11861   0054CC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11862   0054CE  EF6B  F02A         	goto	u3391
 11863   0054D2  EF6D  F02A         	goto	u3390
 11864   0054D6                     u3391:
 11865   0054D6  EF62  F02A         	goto	l4025
 11866   0054DA                     u3390:
 11867   0054DA                     l4029:
 11868   0054DA  90D8               	bcf	status,0,c
 11869   0054DC  360B               	rlcf	___lwdiv@quotient^0,f,c
 11870   0054DE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11871   0054E0  5009               	movf	___lwdiv@divisor^0,w,c
 11872   0054E2  5C07               	subwf	___lwdiv@dividend^0,w,c
 11873   0054E4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11874   0054E6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11875   0054E8  A0D8               	btfss	status,0,c
 11876   0054EA  EF79  F02A         	goto	u3401
 11877   0054EE  EF7B  F02A         	goto	u3400
 11878   0054F2                     u3401:
 11879   0054F2  EF80  F02A         	goto	l4037
 11880   0054F6                     u3400:
 11881   0054F6  5009               	movf	___lwdiv@divisor^0,w,c
 11882   0054F8  5E07               	subwf	___lwdiv@dividend^0,f,c
 11883   0054FA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11884   0054FC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11885   0054FE  800B               	bsf	___lwdiv@quotient^0,0,c
 11886   005500                     l4037:
 11887   005500  90D8               	bcf	status,0,c
 11888   005502  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11889   005504  3209               	rrcf	___lwdiv@divisor^0,f,c
 11890   005506  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11891   005508  EF6D  F02A         	goto	l4029
 11892   00550C                     l1165:
 11893   00550C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11894   005510  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11895   005514  0012               	return		;funcret
 11896   005516                     __end_of___lwdiv:
 11897                           	callstack 0
 11898                           
 11899 ;; *************** function _Colour_decider *****************
 11900 ;; Defined at:
 11901 ;;		line 125 in file "color.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  vals            2   74[COMRAM] PTR struct RGB
 11904 ;;		 -> vals(8), 
 11905 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11906 ;;		 -> rel(12), 
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;  RGB_col        12    6[BANK0 ] float [3]
 11909 ;;  Hue             4   28[BANK0 ] float 
 11910 ;;  Cmin            4   22[BANK0 ] float 
 11911 ;;  Cmax            4   18[BANK0 ] float 
 11912 ;;  i               2   26[BANK0 ] int 
 11913 ;;  Cmax_i          2    4[BANK0 ] int 
 11914 ;; Return value:  Size  Location     Type
 11915 ;;                  2   74[COMRAM] int 
 11916 ;; Registers used:
 11917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11918 ;; Tracked objects:
 11919 ;;		On entry : 0/0
 11920 ;;		On exit  : 0/0
 11921 ;;		Unchanged: 0/0
 11922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11924 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11926 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11927 ;;Total ram usage:       38 bytes
 11928 ;; Hardware stack levels used: 1
 11929 ;; Hardware stack levels required when called: 3
 11930 ;; This function calls:
 11931 ;;		___fladd
 11932 ;;		___fldiv
 11933 ;;		___fleq
 11934 ;;		___flge
 11935 ;;		___flmul
 11936 ;;		___flsub
 11937 ;;		___xxtofl
 11938 ;; This function is called by:
 11939 ;;		_main
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text71
 11944   000E3E                     __ptext71:
 11945                           	callstack 0
 11946   000E3E                     _Colour_decider:
 11947                           	callstack 27
 11948   000E3E                     
 11949                           ;color.c: 126:     float Cmax = 0;
 11950   000E3E  0E00               	movlw	0
 11951   000E40  0100               	movlb	0	; () banked
 11952   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11953   000E44  0E00               	movlw	0
 11954   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11955   000E48  0E00               	movlw	0
 11956   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11957   000E4C  0E00               	movlw	0
 11958   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11959                           
 11960                           ;color.c: 127:     float Cmin= 100000;
 11961   000E50  0E00               	movlw	0
 11962   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11963   000E54  0E50               	movlw	80
 11964   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11965   000E58  0EC3               	movlw	195
 11966   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11967   000E5C  0E47               	movlw	71
 11968   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11969                           
 11970                           ;color.c: 128:     int Cmax_i =4;
 11971   000E60  0E00               	movlw	0
 11972   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11973   000E64  0E04               	movlw	4
 11974   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11975   000E68                     
 11976                           ; BSR set to: 0
 11977                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11978   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11979   000E6C  0E0B               	movlw	11
 11980   000E6E                     u5141:
 11981   000E6E  6ADE               	clrf	postinc2,c
 11982   000E70  06E8               	decf	wreg,f,c
 11983   000E72  E2FD               	bc	u5141
 11984   000E74                     
 11985                           ; BSR set to: 0
 11986   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11987   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11988   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 11989   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11990   000E84  0E00               	movlw	0
 11991   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11992   000E88  0EFF               	movlw	-1
 11993   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 11994   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 11995   000E8E  0E01               	movlw	1
 11996   000E90  EC06  F022         	call	___xxtofl
 11997   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11998   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11999   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12000   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12001   000EA4  EE20 F002          	lfsr	2,2
 12002   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 12003   000EAA  26D9               	addwf	fsr2l,f,c
 12004   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12005   000EAE  22DA               	addwfc	fsr2h,f,c
 12006   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 12007   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12008   000EB8  0E00               	movlw	0
 12009   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12010   000EBC  0EFF               	movlw	-1
 12011   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 12012   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12013   000EC2  0E01               	movlw	1
 12014   000EC4  EC06  F022         	call	___xxtofl
 12015   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12016   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12017   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12018   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12019   000ED8  EE20 F004          	lfsr	2,4
 12020   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 12021   000EDE  26D9               	addwf	fsr2l,f,c
 12022   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12023   000EE2  22DA               	addwfc	fsr2h,f,c
 12024   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 12025   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12026   000EEC  0E00               	movlw	0
 12027   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12028   000EF0  0EFF               	movlw	-1
 12029   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12030   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12031   000EF6  0E01               	movlw	1
 12032   000EF8  EC06  F022         	call	___xxtofl
 12033   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12034   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12035   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12036   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12037   000F0C                     
 12038                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12039   000F0C  0E00               	movlw	0
 12040   000F0E  0100               	movlb	0	; () banked
 12041   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12042   000F12  0E00               	movlw	0
 12043   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 12044   000F16                     l5295:
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12048   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12049   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12050   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12051   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12052   000F26  0E66               	movlw	low Colour_decider@RGB_col
 12053   000F28  6E4F               	movwf	??_Colour_decider^0,c
 12054   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 12055   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 12056   000F2E  90D8               	bcf	status,0,c
 12057   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12058   000F32  6ED9               	movwf	fsr2l,c
 12059   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12060   000F36  6EDA               	movwf	fsr2h,c
 12061   000F38  90D8               	bcf	status,0,c
 12062   000F3A  36D9               	rlcf	fsr2l,f,c
 12063   000F3C  36DA               	rlcf	fsr2h,f,c
 12064   000F3E  504F               	movf	??_Colour_decider^0,w,c
 12065   000F40  26D9               	addwf	fsr2l,f,c
 12066   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 12067   000F44  22DA               	addwfc	fsr2h,f,c
 12068   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 12069   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12070   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12071   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12072   000F56  EC8F  F025         	call	___flge	;wreg free
 12073   000F5A  B0D8               	btfsc	status,0,c
 12074   000F5C  EFB2  F007         	goto	u5151
 12075   000F60  EFB4  F007         	goto	u5150
 12076   000F64                     u5151:
 12077   000F64  EFD1  F007         	goto	l5301
 12078   000F68                     u5150:
 12079   000F68                     
 12080                           ;color.c: 137:             Cmax=RGB_col[i];
 12081   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12082   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12083   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12084   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12085   000F70  90D8               	bcf	status,0,c
 12086   000F72  0100               	movlb	0	; () banked
 12087   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12088   000F76  6ED9               	movwf	fsr2l,c
 12089   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12090   000F7A  6EDA               	movwf	fsr2h,c
 12091   000F7C  90D8               	bcf	status,0,c
 12092   000F7E  36D9               	rlcf	fsr2l,f,c
 12093   000F80  36DA               	rlcf	fsr2h,f,c
 12094   000F82  504F               	movf	??_Colour_decider^0,w,c
 12095   000F84  26D9               	addwf	fsr2l,f,c
 12096   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12097   000F88  22DA               	addwfc	fsr2h,f,c
 12098   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12099   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12100   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12101   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12102   000F9A                     
 12103                           ; BSR set to: 0
 12104                           ;color.c: 138:             Cmax_i=i;
 12105   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12106   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12107   000FA2                     l5301:
 12108                           
 12109                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12110   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12111   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12112   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12113   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12114   000FAA  90D8               	bcf	status,0,c
 12115   000FAC  0100               	movlb	0	; () banked
 12116   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12117   000FB0  6ED9               	movwf	fsr2l,c
 12118   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12119   000FB4  6EDA               	movwf	fsr2h,c
 12120   000FB6  90D8               	bcf	status,0,c
 12121   000FB8  36D9               	rlcf	fsr2l,f,c
 12122   000FBA  36DA               	rlcf	fsr2h,f,c
 12123   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12124   000FBE  26D9               	addwf	fsr2l,f,c
 12125   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12126   000FC2  22DA               	addwfc	fsr2h,f,c
 12127   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12128   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12129   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12130   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12131   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12132   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12133   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12134   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12135   000FE4  EC8F  F025         	call	___flge	;wreg free
 12136   000FE8  B0D8               	btfsc	status,0,c
 12137   000FEA  EFF9  F007         	goto	u5161
 12138   000FEE  EFFB  F007         	goto	u5160
 12139   000FF2                     u5161:
 12140   000FF2  EF14  F008         	goto	l5305
 12141   000FF6                     u5160:
 12142   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12143   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12144   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12145   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12146   000FFE  90D8               	bcf	status,0,c
 12147   001000  0100               	movlb	0	; () banked
 12148   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12149   001004  6ED9               	movwf	fsr2l,c
 12150   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12151   001008  6EDA               	movwf	fsr2h,c
 12152   00100A  90D8               	bcf	status,0,c
 12153   00100C  36D9               	rlcf	fsr2l,f,c
 12154   00100E  36DA               	rlcf	fsr2h,f,c
 12155   001010  504F               	movf	??_Colour_decider^0,w,c
 12156   001012  26D9               	addwf	fsr2l,f,c
 12157   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12158   001016  22DA               	addwfc	fsr2h,f,c
 12159   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12160   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12161   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12162   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12163   001028                     l5305:
 12164                           
 12165                           ;color.c: 141:     }
 12166   001028  0100               	movlb	0	; () banked
 12167   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12168   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12169   00102E                     
 12170                           ; BSR set to: 0
 12171   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12172   001030  EF23  F008         	goto	u5171
 12173   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12174   001036  E109               	bnz	u5170
 12175   001038  0E03               	movlw	3
 12176   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12177   00103C  A0D8               	btfss	status,0,c
 12178   00103E  EF23  F008         	goto	u5171
 12179   001042  EF25  F008         	goto	u5170
 12180   001046                     u5171:
 12181   001046  EF8B  F007         	goto	l5295
 12182   00104A                     u5170:
 12183   00104A                     
 12184                           ; BSR set to: 0
 12185                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12186   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12187   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12188   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12189   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12190   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12191   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12192   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12193   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12194   00106A  EC96  F02E         	call	___flsub	;wreg free
 12195   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12196   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12197   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12198   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12199   00107E  0E00               	movlw	0
 12200   001080  6E36               	movwf	___fleq@ff2^0,c
 12201   001082  0E00               	movlw	0
 12202   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12203   001086  0E00               	movlw	0
 12204   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12205   00108A  0E00               	movlw	0
 12206   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12207   00108E  EC00  F028         	call	___fleq	;wreg free
 12208   001092  A0D8               	btfss	status,0,c
 12209   001094  EF4E  F008         	goto	u5181
 12210   001098  EF50  F008         	goto	u5180
 12211   00109C                     u5181:
 12212   00109C  EF56  F008         	goto	l5315
 12213   0010A0                     u5180:
 12214   0010A0                     l5311:
 12215   0010A0  0E00               	movlw	0
 12216   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12217   0010A4  0E00               	movlw	0
 12218   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12219   0010A8  EF4E  F00C         	goto	l76
 12220   0010AC                     l5315:
 12221                           
 12222                           ;color.c: 146:     if (Cmax_i==0){
 12223   0010AC  0100               	movlb	0	; () banked
 12224   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12225   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12226   0010B2  A4D8               	btfss	status,2,c
 12227   0010B4  EF5E  F008         	goto	u5191
 12228   0010B8  EF60  F008         	goto	u5190
 12229   0010BC                     u5191:
 12230   0010BC  EFD4  F008         	goto	l5323
 12231   0010C0                     u5190:
 12232   0010C0                     
 12233                           ; BSR set to: 0
 12234                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12235   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12236   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12237   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12238   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12239   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12240   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12241   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12242   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12243   0010E0  EC96  F02E         	call	___flsub	;wreg free
 12244   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12245   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12246   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12247   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12248   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12249   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12250   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12251   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12252   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12253   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12254   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12255   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12256   001114  EC96  F02E         	call	___flsub	;wreg free
 12257   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12258   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12259   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12260   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12261   001128  EC77  F018         	call	___fldiv	;wreg free
 12262   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12263   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12264   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12265   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12266   00113C  0E00               	movlw	0
 12267   00113E  6E15               	movwf	___flmul@a^0,c
 12268   001140  0E00               	movlw	0
 12269   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12270   001144  0E70               	movlw	112
 12271   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12272   001148  0E42               	movlw	66
 12273   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12274   00114C  EC62  F016         	call	___flmul	;wreg free
 12275   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12276   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12277   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12278   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12279   001160                     
 12280                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12281   001160  0100               	movlb	0	; () banked
 12282   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12283   001164  EFB8  F008         	goto	u5200
 12284   001168  EFB6  F008         	goto	u5201
 12285   00116C                     u5201:
 12286   00116C  EFB3  F009         	goto	l5333
 12287   001170                     u5200:
 12288   001170                     
 12289                           ; BSR set to: 0
 12290   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12291   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12292   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12293   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12294   001180  0E00               	movlw	0
 12295   001182  6E05               	movwf	___fladd@a^0,c
 12296   001184  0E00               	movlw	0
 12297   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12298   001188  0EB4               	movlw	180
 12299   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12300   00118C  0E43               	movlw	67
 12301   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12302   001190  EC02  F014         	call	___fladd	;wreg free
 12303   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12304   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12305   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12306   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12307   0011A4  EFB3  F009         	goto	l5333
 12308   0011A8                     l5323:
 12309                           
 12310                           ; BSR set to: 0
 12311   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12312   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12313   0011AC  A4D8               	btfss	status,2,c
 12314   0011AE  EFDB  F008         	goto	u5211
 12315   0011B2  EFDD  F008         	goto	u5210
 12316   0011B6                     u5211:
 12317   0011B6  EF49  F009         	goto	l5329
 12318   0011BA                     u5210:
 12319   0011BA                     
 12320                           ; BSR set to: 0
 12321                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12322   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12323   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12324   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12325   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12326   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12327   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12328   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12329   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12330   0011DA  EC96  F02E         	call	___flsub	;wreg free
 12331   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12332   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12333   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12334   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12335   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12336   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12337   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12338   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12339   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12340   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12341   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12342   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12343   00120E  EC96  F02E         	call	___flsub	;wreg free
 12344   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12345   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12346   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12347   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12348   001222  EC77  F018         	call	___fldiv	;wreg free
 12349   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12350   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12351   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12352   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12353   001236                     
 12354                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12355   001236  0E00               	movlw	0
 12356   001238  6E05               	movwf	___fladd@a^0,c
 12357   00123A  0E00               	movlw	0
 12358   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12359   00123E  0E00               	movlw	0
 12360   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12361   001242  0E40               	movlw	64
 12362   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12363   001246  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12364   00124A  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12365   00124E  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12366   001252  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12367   001256  EC02  F014         	call	___fladd	;wreg free
 12368   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12369   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12370   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12371   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12372   00126A  0E00               	movlw	0
 12373   00126C  6E15               	movwf	___flmul@a^0,c
 12374   00126E  0E00               	movlw	0
 12375   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12376   001272  0E70               	movlw	112
 12377   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12378   001276  0E42               	movlw	66
 12379   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12380   00127A  EC62  F016         	call	___flmul	;wreg free
 12381   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12382   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12383   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12384   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12385                           
 12386                           ;color.c: 155:     }
 12387   00128E  EFB3  F009         	goto	l5333
 12388   001292                     l5329:
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12392   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12393   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12394   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12395   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12396   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12397   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12398   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12399   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12400   0012B2  EC96  F02E         	call	___flsub	;wreg free
 12401   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12402   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12403   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12404   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12405   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12406   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12407   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12408   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12409   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12410   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12411   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12412   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12413   0012E6  EC96  F02E         	call	___flsub	;wreg free
 12414   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12415   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12416   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12417   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12418   0012FA  EC77  F018         	call	___fldiv	;wreg free
 12419   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12420   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12421   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12422   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12423   00130E                     
 12424                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12425   00130E  0E00               	movlw	0
 12426   001310  6E05               	movwf	___fladd@a^0,c
 12427   001312  0E00               	movlw	0
 12428   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12429   001316  0E80               	movlw	128
 12430   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12431   00131A  0E40               	movlw	64
 12432   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12433   00131E  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12434   001322  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12435   001326  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12436   00132A  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12437   00132E  EC02  F014         	call	___fladd	;wreg free
 12438   001332  C001  F011         	movff	?___fladd,___flmul@b
 12439   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12440   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12441   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12442   001342  0E00               	movlw	0
 12443   001344  6E15               	movwf	___flmul@a^0,c
 12444   001346  0E00               	movlw	0
 12445   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12446   00134A  0E70               	movlw	112
 12447   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12448   00134E  0E42               	movlw	66
 12449   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12450   001352  EC62  F016         	call	___flmul	;wreg free
 12451   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12452   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12453   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12454   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12455   001366                     l5333:
 12456                           
 12457                           ;color.c: 162:     if ((330<=Hue)&(Hue<=360)){
 12458   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12459   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12460   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12461   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12462   001376  0E00               	movlw	0
 12463   001378  6E2E               	movwf	___flge@ff2^0,c
 12464   00137A  0E00               	movlw	0
 12465   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12466   00137E  0EA5               	movlw	165
 12467   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12468   001382  0E43               	movlw	67
 12469   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12470   001386  EC8F  F025         	call	___flge	;wreg free
 12471   00138A  A0D8               	btfss	status,0,c
 12472   00138C  EFCA  F009         	goto	u5221
 12473   001390  EFCC  F009         	goto	u5220
 12474   001394                     u5221:
 12475   001394  EFEB  F009         	goto	l5343
 12476   001398                     u5220:
 12477   001398  0E00               	movlw	0
 12478   00139A  6E2A               	movwf	___flge@ff1^0,c
 12479   00139C  0E00               	movlw	0
 12480   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12481   0013A0  0EB4               	movlw	180
 12482   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12483   0013A4  0E43               	movlw	67
 12484   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12485   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12486   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12487   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12488   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12489   0013B8  EC8F  F025         	call	___flge	;wreg free
 12490   0013BC  A0D8               	btfss	status,0,c
 12491   0013BE  EFE3  F009         	goto	u5231
 12492   0013C2  EFE5  F009         	goto	u5230
 12493   0013C6                     u5231:
 12494   0013C6  EFEB  F009         	goto	l5343
 12495   0013CA                     u5230:
 12496   0013CA                     
 12497                           ;color.c: 163:         return 1;
 12498   0013CA  0E00               	movlw	0
 12499   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12500   0013CE  0E01               	movlw	1
 12501   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12502   0013D2  EF4E  F00C         	goto	l76
 12503   0013D6                     l5343:
 12504   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12505   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12506   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12507   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12508   0013E6  0E00               	movlw	0
 12509   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12510   0013EA  0E00               	movlw	0
 12511   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12512   0013EE  0EA0               	movlw	160
 12513   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12514   0013F2  0E40               	movlw	64
 12515   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12516   0013F6  EC8F  F025         	call	___flge	;wreg free
 12517   0013FA  A0D8               	btfss	status,0,c
 12518   0013FC  EF02  F00A         	goto	u5241
 12519   001400  EF04  F00A         	goto	u5240
 12520   001404                     u5241:
 12521   001404  EF23  F00A         	goto	l5353
 12522   001408                     u5240:
 12523   001408  0E00               	movlw	0
 12524   00140A  6E2A               	movwf	___flge@ff1^0,c
 12525   00140C  0E00               	movlw	0
 12526   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12527   001410  0E30               	movlw	48
 12528   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12529   001414  0E41               	movlw	65
 12530   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12531   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12532   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12533   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12534   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12535   001428  EC8F  F025         	call	___flge	;wreg free
 12536   00142C  A0D8               	btfss	status,0,c
 12537   00142E  EF1B  F00A         	goto	u5251
 12538   001432  EF1D  F00A         	goto	u5250
 12539   001436                     u5251:
 12540   001436  EF23  F00A         	goto	l5353
 12541   00143A                     u5250:
 12542   00143A                     
 12543                           ;color.c: 167:         return 2;
 12544   00143A  0E00               	movlw	0
 12545   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12546   00143E  0E02               	movlw	2
 12547   001440  6E4B               	movwf	?_Colour_decider^0,c
 12548   001442  EF4E  F00C         	goto	l76
 12549   001446                     l5353:
 12550   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12551   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12552   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12553   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12554   001456  0E00               	movlw	0
 12555   001458  6E2E               	movwf	___flge@ff2^0,c
 12556   00145A  0E00               	movlw	0
 12557   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12558   00145E  0E90               	movlw	144
 12559   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12560   001462  0E41               	movlw	65
 12561   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12562   001466  EC8F  F025         	call	___flge	;wreg free
 12563   00146A  A0D8               	btfss	status,0,c
 12564   00146C  EF3A  F00A         	goto	u5261
 12565   001470  EF3C  F00A         	goto	u5260
 12566   001474                     u5261:
 12567   001474  EFF0  F00A         	goto	l5383
 12568   001478                     u5260:
 12569   001478  0E00               	movlw	0
 12570   00147A  6E2A               	movwf	___flge@ff1^0,c
 12571   00147C  0E00               	movlw	0
 12572   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12573   001480  0EC8               	movlw	200
 12574   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12575   001484  0E41               	movlw	65
 12576   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12577   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12578   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12579   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12580   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12581   001498  EC8F  F025         	call	___flge	;wreg free
 12582   00149C  A0D8               	btfss	status,0,c
 12583   00149E  EF53  F00A         	goto	u5271
 12584   0014A2  EF55  F00A         	goto	u5270
 12585   0014A6                     u5271:
 12586   0014A6  EFF0  F00A         	goto	l5383
 12587   0014AA                     u5270:
 12588   0014AA                     
 12589                           ;color.c: 172:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12590   0014AA  0EB8               	movlw	184
 12591   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12592   0014AE  0E1E               	movlw	30
 12593   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12594   0014B2  0E85               	movlw	133
 12595   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12596   0014B6  0E3E               	movlw	62
 12597   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12598   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12599   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12600   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12601   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12602   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12603   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12604   0014D2  EC8F  F025         	call	___flge	;wreg free
 12605   0014D6  A0D8               	btfss	status,0,c
 12606   0014D8  EF70  F00A         	goto	u5281
 12607   0014DC  EF72  F00A         	goto	u5280
 12608   0014E0                     u5281:
 12609   0014E0  EFA8  F00A         	goto	l5369
 12610   0014E4                     u5280:
 12611   0014E4  0ECD               	movlw	205
 12612   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12613   0014E8  0ECC               	movlw	204
 12614   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12615   0014EC  0ECC               	movlw	204
 12616   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12617   0014F0  0E3D               	movlw	61
 12618   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12619   0014F4  EE20 F008          	lfsr	2,8
 12620   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12621   0014FA  26D9               	addwf	fsr2l,f,c
 12622   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12623   0014FE  22DA               	addwfc	fsr2h,f,c
 12624   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12625   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12626   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12627   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12628   001510  EC8F  F025         	call	___flge	;wreg free
 12629   001514  B0D8               	btfsc	status,0,c
 12630   001516  EF8F  F00A         	goto	u5291
 12631   00151A  EF91  F00A         	goto	u5290
 12632   00151E                     u5291:
 12633   00151E  EFA8  F00A         	goto	l5369
 12634   001522                     u5290:
 12635   001522  EE20 F006          	lfsr	2,6
 12636   001526  504B               	movf	Colour_decider@vals^0,w,c
 12637   001528  26D9               	addwf	fsr2l,f,c
 12638   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12639   00152C  22DA               	addwfc	fsr2h,f,c
 12640   00152E  0E01               	movlw	1
 12641   001530  BEDB               	btfsc	plusw2,7,c
 12642   001532  EFA4  F00A         	goto	u5301
 12643   001536  0EE9               	movlw	233
 12644   001538  5CDE               	subwf	postinc2,w,c
 12645   00153A  0E03               	movlw	3
 12646   00153C  58DE               	subwfb	postinc2,w,c
 12647   00153E  A0D8               	btfss	status,0,c
 12648   001540  EFA4  F00A         	goto	u5301
 12649   001544  EFA6  F00A         	goto	u5300
 12650   001548                     u5301:
 12651   001548  EFA8  F00A         	goto	l5369
 12652   00154C                     u5300:
 12653   00154C  EF50  F008         	goto	l5311
 12654   001550                     l5369:
 12655   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12656   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12657   001558  CFDE F02A          	movff	postinc2,___flge@ff1
 12658   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12659   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12660   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12661   001568  0EB8               	movlw	184
 12662   00156A  6E2E               	movwf	___flge@ff2^0,c
 12663   00156C  0E1E               	movlw	30
 12664   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12665   001570  0E85               	movlw	133
 12666   001572  6E30               	movwf	(___flge@ff2+2)^0,c
 12667   001574  0E3E               	movlw	62
 12668   001576  6E31               	movwf	(___flge@ff2+3)^0,c
 12669   001578  EC8F  F025         	call	___flge	;wreg free
 12670   00157C  A0D8               	btfss	status,0,c
 12671   00157E  EFC3  F00A         	goto	u5311
 12672   001582  EFC5  F00A         	goto	u5310
 12673   001586                     u5311:
 12674   001586  EFEA  F00A         	goto	l5379
 12675   00158A                     u5310:
 12676   00158A  EE20 F008          	lfsr	2,8
 12677   00158E  504D               	movf	Colour_decider@rel^0,w,c
 12678   001590  26D9               	addwf	fsr2l,f,c
 12679   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12680   001594  22DA               	addwfc	fsr2h,f,c
 12681   001596  CFDE F02A          	movff	postinc2,___flge@ff1
 12682   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12683   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12684   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12685   0015A6  0ECD               	movlw	205
 12686   0015A8  6E2E               	movwf	___flge@ff2^0,c
 12687   0015AA  0ECC               	movlw	204
 12688   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12689   0015AE  0ECC               	movlw	204
 12690   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12691   0015B2  0E3D               	movlw	61
 12692   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12693   0015B6  EC8F  F025         	call	___flge	;wreg free
 12694   0015BA  B0D8               	btfsc	status,0,c
 12695   0015BC  EFE2  F00A         	goto	u5321
 12696   0015C0  EFE4  F00A         	goto	u5320
 12697   0015C4                     u5321:
 12698   0015C4  EFEA  F00A         	goto	l5379
 12699   0015C8                     u5320:
 12700   0015C8                     
 12701                           ;color.c: 176:             return 3;
 12702   0015C8  0E00               	movlw	0
 12703   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12704   0015CC  0E03               	movlw	3
 12705   0015CE  6E4B               	movwf	?_Colour_decider^0,c
 12706   0015D0  EF4E  F00C         	goto	l76
 12707   0015D4                     l5379:
 12708                           
 12709                           ;color.c: 179:             return 10;
 12710   0015D4  0E00               	movlw	0
 12711   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12712   0015D8  0E0A               	movlw	10
 12713   0015DA  6E4B               	movwf	?_Colour_decider^0,c
 12714   0015DC  EF4E  F00C         	goto	l76
 12715   0015E0                     l5383:
 12716   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12717   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12718   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12719   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12720   0015F0  0E00               	movlw	0
 12721   0015F2  6E2E               	movwf	___flge@ff2^0,c
 12722   0015F4  0E00               	movlw	0
 12723   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12724   0015F8  0EAA               	movlw	170
 12725   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12726   0015FC  0E42               	movlw	66
 12727   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12728   001600  EC8F  F025         	call	___flge	;wreg free
 12729   001604  A0D8               	btfss	status,0,c
 12730   001606  EF07  F00B         	goto	u5331
 12731   00160A  EF09  F00B         	goto	u5330
 12732   00160E                     u5331:
 12733   00160E  EF28  F00B         	goto	l5393
 12734   001612                     u5330:
 12735   001612  0E00               	movlw	0
 12736   001614  6E2A               	movwf	___flge@ff1^0,c
 12737   001616  0E00               	movlw	0
 12738   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
 12739   00161A  0E20               	movlw	32
 12740   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12741   00161E  0E43               	movlw	67
 12742   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
 12743   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12744   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12745   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12746   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12747   001632  EC8F  F025         	call	___flge	;wreg free
 12748   001636  A0D8               	btfss	status,0,c
 12749   001638  EF20  F00B         	goto	u5341
 12750   00163C  EF22  F00B         	goto	u5340
 12751   001640                     u5341:
 12752   001640  EF28  F00B         	goto	l5393
 12753   001644                     u5340:
 12754   001644                     
 12755                           ;color.c: 185:         return 4;
 12756   001644  0E00               	movlw	0
 12757   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12758   001648  0E04               	movlw	4
 12759   00164A  6E4B               	movwf	?_Colour_decider^0,c
 12760   00164C  EF4E  F00C         	goto	l76
 12761   001650                     l5393:
 12762   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12763   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12764   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12765   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12766   001660  0E00               	movlw	0
 12767   001662  6E2E               	movwf	___flge@ff2^0,c
 12768   001664  0E00               	movlw	0
 12769   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
 12770   001668  0E70               	movlw	112
 12771   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
 12772   00166C  0E42               	movlw	66
 12773   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
 12774   001670  EC8F  F025         	call	___flge	;wreg free
 12775   001674  A0D8               	btfss	status,0,c
 12776   001676  EF3F  F00B         	goto	u5351
 12777   00167A  EF41  F00B         	goto	u5350
 12778   00167E                     u5351:
 12779   00167E  EFE2  F00B         	goto	l5421
 12780   001682                     u5350:
 12781   001682  0E00               	movlw	0
 12782   001684  6E2A               	movwf	___flge@ff1^0,c
 12783   001686  0E00               	movlw	0
 12784   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
 12785   00168A  0E9A               	movlw	154
 12786   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12787   00168E  0E42               	movlw	66
 12788   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
 12789   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12790   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12791   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12792   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12793   0016A2  EC8F  F025         	call	___flge	;wreg free
 12794   0016A6  A0D8               	btfss	status,0,c
 12795   0016A8  EF58  F00B         	goto	u5361
 12796   0016AC  EF5A  F00B         	goto	u5360
 12797   0016B0                     u5361:
 12798   0016B0  EFE2  F00B         	goto	l5421
 12799   0016B4                     u5360:
 12800   0016B4                     
 12801                           ;color.c: 190:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12802   0016B4  EE20 F008          	lfsr	2,8
 12803   0016B8  504D               	movf	Colour_decider@rel^0,w,c
 12804   0016BA  26D9               	addwf	fsr2l,f,c
 12805   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12806   0016BE  22DA               	addwfc	fsr2h,f,c
 12807   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
 12808   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12809   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12810   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12811   0016D0  0E8F               	movlw	143
 12812   0016D2  6E2E               	movwf	___flge@ff2^0,c
 12813   0016D4  0EC2               	movlw	194
 12814   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12815   0016D8  0EF5               	movlw	245
 12816   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
 12817   0016DC  0E3D               	movlw	61
 12818   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
 12819   0016E0  EC8F  F025         	call	___flge	;wreg free
 12820   0016E4  A0D8               	btfss	status,0,c
 12821   0016E6  EF77  F00B         	goto	u5371
 12822   0016EA  EF79  F00B         	goto	u5370
 12823   0016EE                     u5371:
 12824   0016EE  EF9E  F00B         	goto	l5407
 12825   0016F2                     u5370:
 12826   0016F2  EE20 F004          	lfsr	2,4
 12827   0016F6  504D               	movf	Colour_decider@rel^0,w,c
 12828   0016F8  26D9               	addwf	fsr2l,f,c
 12829   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12830   0016FC  22DA               	addwfc	fsr2h,f,c
 12831   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
 12832   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12833   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12834   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12835   00170E  0E3D               	movlw	61
 12836   001710  6E2E               	movwf	___flge@ff2^0,c
 12837   001712  0E0A               	movlw	10
 12838   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
 12839   001716  0E57               	movlw	87
 12840   001718  6E30               	movwf	(___flge@ff2+2)^0,c
 12841   00171A  0E3E               	movlw	62
 12842   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
 12843   00171E  EC8F  F025         	call	___flge	;wreg free
 12844   001722  B0D8               	btfsc	status,0,c
 12845   001724  EF96  F00B         	goto	u5381
 12846   001728  EF98  F00B         	goto	u5380
 12847   00172C                     u5381:
 12848   00172C  EF9E  F00B         	goto	l5407
 12849   001730                     u5380:
 12850   001730                     
 12851                           ;color.c: 191:             return 6;
 12852   001730  0E00               	movlw	0
 12853   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12854   001734  0E06               	movlw	6
 12855   001736  6E4B               	movwf	?_Colour_decider^0,c
 12856   001738  EF4E  F00C         	goto	l76
 12857   00173C                     l5407:
 12858   00173C  EE20 F008          	lfsr	2,8
 12859   001740  504D               	movf	Colour_decider@rel^0,w,c
 12860   001742  26D9               	addwf	fsr2l,f,c
 12861   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12862   001746  22DA               	addwfc	fsr2h,f,c
 12863   001748  CFDE F02A          	movff	postinc2,___flge@ff1
 12864   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12865   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12866   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12867   001758  0E8F               	movlw	143
 12868   00175A  6E2E               	movwf	___flge@ff2^0,c
 12869   00175C  0EC2               	movlw	194
 12870   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12871   001760  0EF5               	movlw	245
 12872   001762  6E30               	movwf	(___flge@ff2+2)^0,c
 12873   001764  0E3D               	movlw	61
 12874   001766  6E31               	movwf	(___flge@ff2+3)^0,c
 12875   001768  EC8F  F025         	call	___flge	;wreg free
 12876   00176C  B0D8               	btfsc	status,0,c
 12877   00176E  EFBB  F00B         	goto	u5391
 12878   001772  EFBD  F00B         	goto	u5390
 12879   001776                     u5391:
 12880   001776  EFEA  F00A         	goto	l5379
 12881   00177A                     u5390:
 12882   00177A  0E3D               	movlw	61
 12883   00177C  6E2A               	movwf	___flge@ff1^0,c
 12884   00177E  0E0A               	movlw	10
 12885   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
 12886   001782  0E57               	movlw	87
 12887   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
 12888   001786  0E3E               	movlw	62
 12889   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
 12890   00178A  EE20 F004          	lfsr	2,4
 12891   00178E  504D               	movf	Colour_decider@rel^0,w,c
 12892   001790  26D9               	addwf	fsr2l,f,c
 12893   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12894   001794  22DA               	addwfc	fsr2h,f,c
 12895   001796  CFDE F02E          	movff	postinc2,___flge@ff2
 12896   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12897   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12898   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12899   0017A6  EC8F  F025         	call	___flge	;wreg free
 12900   0017AA  B0D8               	btfsc	status,0,c
 12901   0017AC  EFDA  F00B         	goto	u5401
 12902   0017B0  EFDC  F00B         	goto	u5400
 12903   0017B4                     u5401:
 12904   0017B4  EFEA  F00A         	goto	l5379
 12905   0017B8                     u5400:
 12906   0017B8                     
 12907                           ;color.c: 194:             return 5;
 12908   0017B8  0E00               	movlw	0
 12909   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12910   0017BC  0E05               	movlw	5
 12911   0017BE  6E4B               	movwf	?_Colour_decider^0,c
 12912   0017C0  EF4E  F00C         	goto	l76
 12913   0017C4                     l5421:
 12914   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12915   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12916   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12917   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12918   0017D4  0E00               	movlw	0
 12919   0017D6  6E2E               	movwf	___flge@ff2^0,c
 12920   0017D8  0E00               	movlw	0
 12921   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12922   0017DC  0E40               	movlw	64
 12923   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
 12924   0017E0  0E41               	movlw	65
 12925   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
 12926   0017E4  EC8F  F025         	call	___flge	;wreg free
 12927   0017E8  A0D8               	btfss	status,0,c
 12928   0017EA  EFF9  F00B         	goto	u5411
 12929   0017EE  EFFB  F00B         	goto	u5410
 12930   0017F2                     u5411:
 12931   0017F2  EF1A  F00C         	goto	l5431
 12932   0017F6                     u5410:
 12933   0017F6  0E00               	movlw	0
 12934   0017F8  6E2A               	movwf	___flge@ff1^0,c
 12935   0017FA  0E00               	movlw	0
 12936   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12937   0017FE  0E88               	movlw	136
 12938   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
 12939   001802  0E41               	movlw	65
 12940   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
 12941   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12942   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12943   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12944   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12945   001816  EC8F  F025         	call	___flge	;wreg free
 12946   00181A  A0D8               	btfss	status,0,c
 12947   00181C  EF12  F00C         	goto	u5421
 12948   001820  EF14  F00C         	goto	u5420
 12949   001824                     u5421:
 12950   001824  EF1A  F00C         	goto	l5431
 12951   001828                     u5420:
 12952   001828                     
 12953                           ;color.c: 203:             return 7;
 12954   001828  0E00               	movlw	0
 12955   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12956   00182C  0E07               	movlw	7
 12957   00182E  6E4B               	movwf	?_Colour_decider^0,c
 12958   001830  EF4E  F00C         	goto	l76
 12959   001834                     l5431:
 12960   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12961   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12962   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12963   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12964   001844  0E00               	movlw	0
 12965   001846  6E2E               	movwf	___flge@ff2^0,c
 12966   001848  0E00               	movlw	0
 12967   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12968   00184C  0EB0               	movlw	176
 12969   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
 12970   001850  0E41               	movlw	65
 12971   001852  6E31               	movwf	(___flge@ff2+3)^0,c
 12972   001854  EC8F  F025         	call	___flge	;wreg free
 12973   001858  A0D8               	btfss	status,0,c
 12974   00185A  EF31  F00C         	goto	u5431
 12975   00185E  EF33  F00C         	goto	u5430
 12976   001862                     u5431:
 12977   001862  EFEA  F00A         	goto	l5379
 12978   001866                     u5430:
 12979   001866  0E00               	movlw	0
 12980   001868  6E2A               	movwf	___flge@ff1^0,c
 12981   00186A  0E00               	movlw	0
 12982   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
 12983   00186E  0EC0               	movlw	192
 12984   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
 12985   001872  0E41               	movlw	65
 12986   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
 12987   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12988   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12989   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12990   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12991   001886  EC8F  F025         	call	___flge	;wreg free
 12992   00188A  A0D8               	btfss	status,0,c
 12993   00188C  EF4A  F00C         	goto	u5441
 12994   001890  EF4C  F00C         	goto	u5440
 12995   001894                     u5441:
 12996   001894  EFEA  F00A         	goto	l5379
 12997   001898                     u5440:
 12998   001898  EF50  F008         	goto	l5311
 12999   00189C                     l76:
 13000   00189C  0012               	return		;funcret
 13001   00189E                     __end_of_Colour_decider:
 13002                           	callstack 0
 13003                           
 13004 ;; *************** function ___xxtofl *****************
 13005 ;; Defined at:
 13006 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13007 ;; Parameters:    Size  Location     Type
 13008 ;;  sign            1    wreg     unsigned char 
 13009 ;;  val             4    0[COMRAM] long 
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;  sign            1    8[COMRAM] unsigned char 
 13012 ;;  arg             4   10[COMRAM] unsigned long 
 13013 ;;  exp             1    9[COMRAM] unsigned char 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  4    0[COMRAM] unsigned char 
 13016 ;; Registers used:
 13017 ;;		wreg, status,2, status,0
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13024 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13026 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13027 ;;Total ram usage:       14 bytes
 13028 ;; Hardware stack levels used: 1
 13029 ;; Hardware stack levels required when called: 1
 13030 ;; This function calls:
 13031 ;;		Nothing
 13032 ;; This function is called by:
 13033 ;;		_colour_rel
 13034 ;;		_Colour_decider
 13035 ;;		_reverseOneBlock
 13036 ;;		_ForwardOneBlock
 13037 ;;		_Forwardhalfblock
 13038 ;;		_Backhalfblock
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	text72
 13043   00440C                     __ptext72:
 13044                           	callstack 0
 13045   00440C                     ___xxtofl:
 13046                           	callstack 28
 13047                           
 13048                           ;incstack = 0
 13049                           ;___xxtofl@sign stored from wreg
 13050   00440C  6E09               	movwf	___xxtofl@sign^0,c
 13051   00440E  5009               	movf	___xxtofl@sign^0,w,c
 13052   004410  B4D8               	btfsc	status,2,c
 13053   004412  EF0D  F022         	goto	u5031
 13054   004416  EF0F  F022         	goto	u5030
 13055   00441A                     u5031:
 13056   00441A  EF31  F022         	goto	l1329
 13057   00441E                     u5030:
 13058   00441E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13059   004420  EF16  F022         	goto	u5040
 13060   004424  EF14  F022         	goto	u5041
 13061   004428                     u5041:
 13062   004428  EF31  F022         	goto	l1329
 13063   00442C                     u5040:
 13064   00442C  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13065   004430  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13066   004434  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13067   004438  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13068   00443C  1E05               	comf	??___xxtofl^0,f,c
 13069   00443E  1E06               	comf	(??___xxtofl+1)^0,f,c
 13070   004440  1E07               	comf	(??___xxtofl+2)^0,f,c
 13071   004442  1E08               	comf	(??___xxtofl+3)^0,f,c
 13072   004444  2A05               	incf	??___xxtofl^0,f,c
 13073   004446  0E00               	movlw	0
 13074   004448  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13075   00444A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13076   00444C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13077   00444E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13078   004452  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13079   004456  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13080   00445A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13081   00445E  EF39  F022         	goto	l5181
 13082   004462                     l1329:
 13083   004462  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13084   004466  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13085   00446A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13086   00446E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13087   004472                     l5181:
 13088   004472  5001               	movf	___xxtofl@val^0,w,c
 13089   004474  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13090   004476  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13091   004478  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13092   00447A  A4D8               	btfss	status,2,c
 13093   00447C  EF42  F022         	goto	u5051
 13094   004480  EF44  F022         	goto	u5050
 13095   004484                     u5051:
 13096   004484  EF4E  F022         	goto	l5187
 13097   004488                     u5050:
 13098   004488  0E00               	movlw	0
 13099   00448A  6E01               	movwf	?___xxtofl^0,c
 13100   00448C  0E00               	movlw	0
 13101   00448E  6E02               	movwf	(?___xxtofl+1)^0,c
 13102   004490  0E00               	movlw	0
 13103   004492  6E03               	movwf	(?___xxtofl+2)^0,c
 13104   004494  0E00               	movlw	0
 13105   004496  6E04               	movwf	(?___xxtofl+3)^0,c
 13106   004498  EFDF  F022         	goto	l1332
 13107   00449C                     l5187:
 13108   00449C  0E96               	movlw	150
 13109   00449E  6E0A               	movwf	___xxtofl@exp^0,c
 13110   0044A0  EF58  F022         	goto	l5191
 13111   0044A4                     l5189:
 13112   0044A4  2A0A               	incf	___xxtofl@exp^0,f,c
 13113   0044A6  90D8               	bcf	status,0,c
 13114   0044A8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13115   0044AA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13116   0044AC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13117   0044AE  320B               	rrcf	___xxtofl@arg^0,f,c
 13118   0044B0                     l5191:
 13119   0044B0  0E00               	movlw	0
 13120   0044B2  140B               	andwf	___xxtofl@arg^0,w,c
 13121   0044B4  6E05               	movwf	??___xxtofl^0,c
 13122   0044B6  0E00               	movlw	0
 13123   0044B8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13124   0044BA  6E06               	movwf	(??___xxtofl+1)^0,c
 13125   0044BC  0E00               	movlw	0
 13126   0044BE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13127   0044C0  6E07               	movwf	(??___xxtofl+2)^0,c
 13128   0044C2  0EFE               	movlw	254
 13129   0044C4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13130   0044C6  6E08               	movwf	(??___xxtofl+3)^0,c
 13131   0044C8  5005               	movf	??___xxtofl^0,w,c
 13132   0044CA  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13133   0044CC  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13134   0044CE  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13135   0044D0  A4D8               	btfss	status,2,c
 13136   0044D2  EF6D  F022         	goto	u5061
 13137   0044D6  EF6F  F022         	goto	u5060
 13138   0044DA                     u5061:
 13139   0044DA  EF52  F022         	goto	l5189
 13140   0044DE                     u5060:
 13141   0044DE  EF7D  F022         	goto	l1336
 13142   0044E2                     l5193:
 13143   0044E2  2A0A               	incf	___xxtofl@exp^0,f,c
 13144   0044E4  0E01               	movlw	1
 13145   0044E6  260B               	addwf	___xxtofl@arg^0,f,c
 13146   0044E8  0E00               	movlw	0
 13147   0044EA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13148   0044EC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13149   0044EE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13150   0044F0  90D8               	bcf	status,0,c
 13151   0044F2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13152   0044F4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13153   0044F6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13154   0044F8  320B               	rrcf	___xxtofl@arg^0,f,c
 13155   0044FA                     l1336:
 13156   0044FA  0E00               	movlw	0
 13157   0044FC  140B               	andwf	___xxtofl@arg^0,w,c
 13158   0044FE  6E05               	movwf	??___xxtofl^0,c
 13159   004500  0E00               	movlw	0
 13160   004502  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13161   004504  6E06               	movwf	(??___xxtofl+1)^0,c
 13162   004506  0E00               	movlw	0
 13163   004508  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13164   00450A  6E07               	movwf	(??___xxtofl+2)^0,c
 13165   00450C  0EFF               	movlw	255
 13166   00450E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13167   004510  6E08               	movwf	(??___xxtofl+3)^0,c
 13168   004512  5005               	movf	??___xxtofl^0,w,c
 13169   004514  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13170   004516  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13171   004518  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13172   00451A  A4D8               	btfss	status,2,c
 13173   00451C  EF92  F022         	goto	u5071
 13174   004520  EF94  F022         	goto	u5070
 13175   004524                     u5071:
 13176   004524  EF71  F022         	goto	l5193
 13177   004528                     u5070:
 13178   004528  EF9C  F022         	goto	l5201
 13179   00452C                     l5199:
 13180   00452C  060A               	decf	___xxtofl@exp^0,f,c
 13181   00452E  90D8               	bcf	status,0,c
 13182   004530  360B               	rlcf	___xxtofl@arg^0,f,c
 13183   004532  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13184   004534  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13185   004536  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13186   004538                     l5201:
 13187   004538  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13188   00453A  EFA1  F022         	goto	u5081
 13189   00453E  EFA3  F022         	goto	u5080
 13190   004542                     u5081:
 13191   004542  EFAB  F022         	goto	l1343
 13192   004546                     u5080:
 13193   004546  0E02               	movlw	2
 13194   004548  600A               	cpfslt	___xxtofl@exp^0,c
 13195   00454A  EFA9  F022         	goto	u5091
 13196   00454E  EFAB  F022         	goto	u5090
 13197   004552                     u5091:
 13198   004552  EF96  F022         	goto	l5199
 13199   004556                     u5090:
 13200   004556                     l1343:
 13201   004556  B00A               	btfsc	___xxtofl@exp^0,0,c
 13202   004558  EFB0  F022         	goto	u5101
 13203   00455C  EFB2  F022         	goto	u5100
 13204   004560                     u5101:
 13205   004560  EFB3  F022         	goto	l5207
 13206   004564                     u5100:
 13207   004564  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13208   004566                     l5207:
 13209   004566  90D8               	bcf	status,0,c
 13210   004568  320A               	rrcf	___xxtofl@exp^0,f,c
 13211   00456A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13212   00456E  6A06               	clrf	(??___xxtofl+1)^0,c
 13213   004570  6A07               	clrf	(??___xxtofl+2)^0,c
 13214   004572  6A08               	clrf	(??___xxtofl+3)^0,c
 13215   004574  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13216   004578  6A07               	clrf	(??___xxtofl+2)^0,c
 13217   00457A  6A06               	clrf	(??___xxtofl+1)^0,c
 13218   00457C  6A05               	clrf	??___xxtofl^0,c
 13219   00457E  5005               	movf	??___xxtofl^0,w,c
 13220   004580  120B               	iorwf	___xxtofl@arg^0,f,c
 13221   004582  5006               	movf	(??___xxtofl+1)^0,w,c
 13222   004584  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13223   004586  5007               	movf	(??___xxtofl+2)^0,w,c
 13224   004588  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13225   00458A  5008               	movf	(??___xxtofl+3)^0,w,c
 13226   00458C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13227   00458E  5009               	movf	___xxtofl@sign^0,w,c
 13228   004590  B4D8               	btfsc	status,2,c
 13229   004592  EFCD  F022         	goto	u5111
 13230   004596  EFCF  F022         	goto	u5110
 13231   00459A                     u5111:
 13232   00459A  EFD7  F022         	goto	l5217
 13233   00459E                     u5110:
 13234   00459E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13235   0045A0  EFD6  F022         	goto	u5120
 13236   0045A4  EFD4  F022         	goto	u5121
 13237   0045A8                     u5121:
 13238   0045A8  EFD7  F022         	goto	l5217
 13239   0045AC                     u5120:
 13240   0045AC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13241   0045AE                     l5217:
 13242   0045AE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13243   0045B2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13244   0045B6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13245   0045BA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13246   0045BE                     l1332:
 13247   0045BE  0012               	return		;funcret
 13248   0045C0                     __end_of___xxtofl:
 13249                           	callstack 0
 13250                           
 13251 ;; *************** function ___flsub *****************
 13252 ;; Defined at:
 13253 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;  b               4   41[COMRAM] unsigned char 
 13256 ;;  a               4   45[COMRAM] unsigned char 
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;		None
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  4   41[COMRAM] unsigned char 
 13261 ;; Registers used:
 13262 ;;		wreg, status,2, status,0, cstack
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 0/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13268 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13271 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13272 ;;Total ram usage:        8 bytes
 13273 ;; Hardware stack levels used: 1
 13274 ;; Hardware stack levels required when called: 2
 13275 ;; This function calls:
 13276 ;;		___fladd
 13277 ;; This function is called by:
 13278 ;;		_Colour_decider
 13279 ;;		_efgtoa
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           	psect	text73
 13284   005D2C                     __ptext73:
 13285                           	callstack 0
 13286   005D2C                     ___flsub:
 13287                           	callstack 24
 13288   005D2C  0E00               	movlw	0
 13289   005D2E  1A2E               	xorwf	___flsub@a^0,f,c
 13290   005D30  0E00               	movlw	0
 13291   005D32  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13292   005D34  0E00               	movlw	0
 13293   005D36  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13294   005D38  0E80               	movlw	128
 13295   005D3A  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13296   005D3C  C02A  F001         	movff	___flsub@b,___fladd@b
 13297   005D40  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13298   005D44  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13299   005D48  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13300   005D4C  C02E  F005         	movff	___flsub@a,___fladd@a
 13301   005D50  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13302   005D54  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13303   005D58  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13304   005D5C  EC02  F014         	call	___fladd	;wreg free
 13305   005D60  C001  F02A         	movff	?___fladd,?___flsub
 13306   005D64  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13307   005D68  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13308   005D6C  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13309   005D70  0012               	return		;funcret
 13310   005D72                     __end_of___flsub:
 13311                           	callstack 0
 13312                           
 13313 ;; *************** function ___fladd *****************
 13314 ;; Defined at:
 13315 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  b               4    0[COMRAM] unsigned char 
 13318 ;;  a               4    4[COMRAM] unsigned char 
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;  grs             1   15[COMRAM] unsigned char 
 13321 ;;  bexp            1   14[COMRAM] unsigned char 
 13322 ;;  aexp            1   13[COMRAM] unsigned char 
 13323 ;;  signs           1   12[COMRAM] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  4    0[COMRAM] unsigned char 
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13334 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13336 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;Total ram usage:       16 bytes
 13338 ;; Hardware stack levels used: 1
 13339 ;; Hardware stack levels required when called: 1
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_colour_rel
 13344 ;;		_Colour_decider
 13345 ;;		___flsub
 13346 ;;		_efgtoa
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text74
 13351   002804                     __ptext74:
 13352                           	callstack 0
 13353   002804                     ___fladd:
 13354                           	callstack 24
 13355   002804  5004               	movf	(___fladd@b+3)^0,w,c
 13356   002806  0B80               	andlw	128
 13357   002808  6E0D               	movwf	___fladd@signs^0,c
 13358   00280A  5004               	movf	(___fladd@b+3)^0,w,c
 13359   00280C  2404               	addwf	(___fladd@b+3)^0,w,c
 13360   00280E  6E0F               	movwf	___fladd@bexp^0,c
 13361   002810  AE03               	btfss	(___fladd@b+2)^0,7,c
 13362   002812  EF0D  F014         	goto	u2991
 13363   002816  EF0F  F014         	goto	u2990
 13364   00281A                     u2991:
 13365   00281A  EF10  F014         	goto	l3823
 13366   00281E                     u2990:
 13367   00281E  800F               	bsf	___fladd@bexp^0,0,c
 13368   002820                     l3823:
 13369   002820  500F               	movf	___fladd@bexp^0,w,c
 13370   002822  B4D8               	btfsc	status,2,c
 13371   002824  EF16  F014         	goto	u3001
 13372   002828  EF18  F014         	goto	u3000
 13373   00282C                     u3001:
 13374   00282C  EF2D  F014         	goto	l3833
 13375   002830                     u3000:
 13376   002830  280F               	incf	___fladd@bexp^0,w,c
 13377   002832  A4D8               	btfss	status,2,c
 13378   002834  EF1E  F014         	goto	u3011
 13379   002838  EF20  F014         	goto	u3010
 13380   00283C                     u3011:
 13381   00283C  EF28  F014         	goto	l3829
 13382   002840                     u3010:
 13383   002840  0E00               	movlw	0
 13384   002842  6E01               	movwf	___fladd@b^0,c
 13385   002844  0E00               	movlw	0
 13386   002846  6E02               	movwf	(___fladd@b+1)^0,c
 13387   002848  0E00               	movlw	0
 13388   00284A  6E03               	movwf	(___fladd@b+2)^0,c
 13389   00284C  0E00               	movlw	0
 13390   00284E  6E04               	movwf	(___fladd@b+3)^0,c
 13391   002850                     l3829:
 13392   002850  8E03               	bsf	(___fladd@b+2)^0,7,c
 13393   002852  0E00               	movlw	0
 13394   002854  6E04               	movwf	(___fladd@b+3)^0,c
 13395   002856  EF35  F014         	goto	l3835
 13396   00285A                     l3833:
 13397   00285A  0E00               	movlw	0
 13398   00285C  6E01               	movwf	___fladd@b^0,c
 13399   00285E  0E00               	movlw	0
 13400   002860  6E02               	movwf	(___fladd@b+1)^0,c
 13401   002862  0E00               	movlw	0
 13402   002864  6E03               	movwf	(___fladd@b+2)^0,c
 13403   002866  0E00               	movlw	0
 13404   002868  6E04               	movwf	(___fladd@b+3)^0,c
 13405   00286A                     l3835:
 13406   00286A  5008               	movf	(___fladd@a+3)^0,w,c
 13407   00286C  0B80               	andlw	128
 13408   00286E  6E0E               	movwf	___fladd@aexp^0,c
 13409   002870  500D               	movf	___fladd@signs^0,w,c
 13410   002872  180E               	xorwf	___fladd@aexp^0,w,c
 13411   002874  B4D8               	btfsc	status,2,c
 13412   002876  EF3F  F014         	goto	u3021
 13413   00287A  EF41  F014         	goto	u3020
 13414   00287E                     u3021:
 13415   00287E  EF42  F014         	goto	l3841
 13416   002882                     u3020:
 13417   002882  8C0D               	bsf	___fladd@signs^0,6,c
 13418   002884                     l3841:
 13419   002884  5008               	movf	(___fladd@a+3)^0,w,c
 13420   002886  2408               	addwf	(___fladd@a+3)^0,w,c
 13421   002888  6E0E               	movwf	___fladd@aexp^0,c
 13422   00288A  AE07               	btfss	(___fladd@a+2)^0,7,c
 13423   00288C  EF4A  F014         	goto	u3031
 13424   002890  EF4C  F014         	goto	u3030
 13425   002894                     u3031:
 13426   002894  EF4D  F014         	goto	l3847
 13427   002898                     u3030:
 13428   002898  800E               	bsf	___fladd@aexp^0,0,c
 13429   00289A                     l3847:
 13430   00289A  500E               	movf	___fladd@aexp^0,w,c
 13431   00289C  B4D8               	btfsc	status,2,c
 13432   00289E  EF53  F014         	goto	u3041
 13433   0028A2  EF55  F014         	goto	u3040
 13434   0028A6                     u3041:
 13435   0028A6  EF6A  F014         	goto	l3857
 13436   0028AA                     u3040:
 13437   0028AA  280E               	incf	___fladd@aexp^0,w,c
 13438   0028AC  A4D8               	btfss	status,2,c
 13439   0028AE  EF5B  F014         	goto	u3051
 13440   0028B2  EF5D  F014         	goto	u3050
 13441   0028B6                     u3051:
 13442   0028B6  EF65  F014         	goto	l3853
 13443   0028BA                     u3050:
 13444   0028BA  0E00               	movlw	0
 13445   0028BC  6E05               	movwf	___fladd@a^0,c
 13446   0028BE  0E00               	movlw	0
 13447   0028C0  6E06               	movwf	(___fladd@a+1)^0,c
 13448   0028C2  0E00               	movlw	0
 13449   0028C4  6E07               	movwf	(___fladd@a+2)^0,c
 13450   0028C6  0E00               	movlw	0
 13451   0028C8  6E08               	movwf	(___fladd@a+3)^0,c
 13452   0028CA                     l3853:
 13453   0028CA  8E07               	bsf	(___fladd@a+2)^0,7,c
 13454   0028CC  0E00               	movlw	0
 13455   0028CE  6E08               	movwf	(___fladd@a+3)^0,c
 13456   0028D0  EF72  F014         	goto	l3859
 13457   0028D4                     l3857:
 13458   0028D4  0E00               	movlw	0
 13459   0028D6  6E05               	movwf	___fladd@a^0,c
 13460   0028D8  0E00               	movlw	0
 13461   0028DA  6E06               	movwf	(___fladd@a+1)^0,c
 13462   0028DC  0E00               	movlw	0
 13463   0028DE  6E07               	movwf	(___fladd@a+2)^0,c
 13464   0028E0  0E00               	movlw	0
 13465   0028E2  6E08               	movwf	(___fladd@a+3)^0,c
 13466   0028E4                     l3859:
 13467   0028E4  500F               	movf	___fladd@bexp^0,w,c
 13468   0028E6  5C0E               	subwf	___fladd@aexp^0,w,c
 13469   0028E8  B0D8               	btfsc	status,0,c
 13470   0028EA  EF79  F014         	goto	u3061
 13471   0028EE  EF7B  F014         	goto	u3060
 13472   0028F2                     u3061:
 13473   0028F2  EFA2  F014         	goto	l3895
 13474   0028F6                     u3060:
 13475   0028F6  AC0D               	btfss	___fladd@signs^0,6,c
 13476   0028F8  EF80  F014         	goto	u3071
 13477   0028FC  EF82  F014         	goto	u3070
 13478   002900                     u3071:
 13479   002900  EF84  F014         	goto	l3865
 13480   002904                     u3070:
 13481   002904  0E80               	movlw	128
 13482   002906  1A0D               	xorwf	___fladd@signs^0,f,c
 13483   002908                     l3865:
 13484   002908  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13485   00290C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13486   002910  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13487   002914  C001  F010         	movff	___fladd@b,___fladd@grs
 13488   002918  C005  F001         	movff	___fladd@a,___fladd@b
 13489   00291C  C010  F005         	movff	___fladd@grs,___fladd@a
 13490   002920  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13491   002924  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13492   002928  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13493   00292C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13494   002930  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13495   002934  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13496   002938  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13497   00293C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13498   002940  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13499   002944                     l3895:
 13500   002944  0E00               	movlw	0
 13501   002946  6E10               	movwf	___fladd@grs^0,c
 13502   002948  500F               	movf	___fladd@bexp^0,w,c
 13503   00294A  C00E  F009         	movff	___fladd@aexp,??___fladd
 13504   00294E  6A0A               	clrf	(??___fladd+1)^0,c
 13505   002950  5E09               	subwf	??___fladd^0,f,c
 13506   002952  0E00               	movlw	0
 13507   002954  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13508   002956  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13509   002958  EFB7  F014         	goto	u3081
 13510   00295C  500A               	movf	(??___fladd+1)^0,w,c
 13511   00295E  E109               	bnz	u3080
 13512   002960  0E1A               	movlw	26
 13513   002962  5C09               	subwf	??___fladd^0,w,c
 13514   002964  A0D8               	btfss	status,0,c
 13515   002966  EFB7  F014         	goto	u3081
 13516   00296A  EFB9  F014         	goto	u3080
 13517   00296E                     u3081:
 13518   00296E  EFF0  F014         	goto	l1203
 13519   002972                     u3080:
 13520   002972  5001               	movf	___fladd@b^0,w,c
 13521   002974  1002               	iorwf	(___fladd@b+1)^0,w,c
 13522   002976  1003               	iorwf	(___fladd@b+2)^0,w,c
 13523   002978  1004               	iorwf	(___fladd@b+3)^0,w,c
 13524   00297A  A4D8               	btfss	status,2,c
 13525   00297C  EFC2  F014         	goto	u3091
 13526   002980  EFC5  F014         	goto	u3090
 13527   002984                     u3091:
 13528   002984  0E01               	movlw	1
 13529   002986  EFC6  F014         	goto	u3100
 13530   00298A                     u3090:
 13531   00298A  0E00               	movlw	0
 13532   00298C                     u3100:
 13533   00298C  6E10               	movwf	___fladd@grs^0,c
 13534   00298E  0E00               	movlw	0
 13535   002990  6E01               	movwf	___fladd@b^0,c
 13536   002992  0E00               	movlw	0
 13537   002994  6E02               	movwf	(___fladd@b+1)^0,c
 13538   002996  0E00               	movlw	0
 13539   002998  6E03               	movwf	(___fladd@b+2)^0,c
 13540   00299A  0E00               	movlw	0
 13541   00299C  6E04               	movwf	(___fladd@b+3)^0,c
 13542   00299E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13543   0029A2  EFF9  F014         	goto	l1202
 13544   0029A6                     l1204:
 13545   0029A6  A010               	btfss	___fladd@grs^0,0,c
 13546   0029A8  EFD8  F014         	goto	u3111
 13547   0029AC  EFDA  F014         	goto	u3110
 13548   0029B0                     u3111:
 13549   0029B0  EFE0  F014         	goto	l3907
 13550   0029B4                     u3110:
 13551   0029B4  90D8               	bcf	status,0,c
 13552   0029B6  3010               	rrcf	___fladd@grs^0,w,c
 13553   0029B8  0901               	iorlw	1
 13554   0029BA  6E10               	movwf	___fladd@grs^0,c
 13555   0029BC  EFE2  F014         	goto	l3909
 13556   0029C0                     l3907:
 13557   0029C0  90D8               	bcf	status,0,c
 13558   0029C2  3210               	rrcf	___fladd@grs^0,f,c
 13559   0029C4                     l3909:
 13560   0029C4  A001               	btfss	___fladd@b^0,0,c
 13561   0029C6  EFE7  F014         	goto	u3121
 13562   0029CA  EFE9  F014         	goto	u3120
 13563   0029CE                     u3121:
 13564   0029CE  EFEA  F014         	goto	l3913
 13565   0029D2                     u3120:
 13566   0029D2  8E10               	bsf	___fladd@grs^0,7,c
 13567   0029D4                     l3913:
 13568   0029D4  3404               	rlcf	(___fladd@b+3)^0,w,c
 13569   0029D6  3204               	rrcf	(___fladd@b+3)^0,f,c
 13570   0029D8  3203               	rrcf	(___fladd@b+2)^0,f,c
 13571   0029DA  3202               	rrcf	(___fladd@b+1)^0,f,c
 13572   0029DC  3201               	rrcf	___fladd@b^0,f,c
 13573   0029DE  2A0F               	incf	___fladd@bexp^0,f,c
 13574   0029E0                     l1203:
 13575   0029E0  500E               	movf	___fladd@aexp^0,w,c
 13576   0029E2  5C0F               	subwf	___fladd@bexp^0,w,c
 13577   0029E4  A0D8               	btfss	status,0,c
 13578   0029E6  EFF7  F014         	goto	u3131
 13579   0029EA  EFF9  F014         	goto	u3130
 13580   0029EE                     u3131:
 13581   0029EE  EFD3  F014         	goto	l1204
 13582   0029F2                     u3130:
 13583   0029F2                     l1202:
 13584   0029F2  BC0D               	btfsc	___fladd@signs^0,6,c
 13585   0029F4  EFFE  F014         	goto	u3141
 13586   0029F8  EF00  F015         	goto	u3140
 13587   0029FC                     u3141:
 13588   0029FC  EF40  F015         	goto	l3941
 13589   002A00                     u3140:
 13590   002A00  500F               	movf	___fladd@bexp^0,w,c
 13591   002A02  A4D8               	btfss	status,2,c
 13592   002A04  EF06  F015         	goto	u3151
 13593   002A08  EF08  F015         	goto	u3150
 13594   002A0C                     u3151:
 13595   002A0C  EF12  F015         	goto	l3923
 13596   002A10                     u3150:
 13597   002A10  0E00               	movlw	0
 13598   002A12  6E01               	movwf	?___fladd^0,c
 13599   002A14  0E00               	movlw	0
 13600   002A16  6E02               	movwf	(?___fladd+1)^0,c
 13601   002A18  0E00               	movlw	0
 13602   002A1A  6E03               	movwf	(?___fladd+2)^0,c
 13603   002A1C  0E00               	movlw	0
 13604   002A1E  6E04               	movwf	(?___fladd+3)^0,c
 13605   002A20  EF61  F016         	goto	l1211
 13606   002A24                     l3923:
 13607   002A24  5005               	movf	___fladd@a^0,w,c
 13608   002A26  2601               	addwf	___fladd@b^0,f,c
 13609   002A28  5006               	movf	(___fladd@a+1)^0,w,c
 13610   002A2A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13611   002A2C  5007               	movf	(___fladd@a+2)^0,w,c
 13612   002A2E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13613   002A30  5008               	movf	(___fladd@a+3)^0,w,c
 13614   002A32  2204               	addwfc	(___fladd@b+3)^0,f,c
 13615   002A34  A004               	btfss	(___fladd@b+3)^0,0,c
 13616   002A36  EF1F  F015         	goto	u3161
 13617   002A3A  EF21  F015         	goto	u3160
 13618   002A3E                     u3161:
 13619   002A3E  EFCD  F015         	goto	l3977
 13620   002A42                     u3160:
 13621   002A42  A010               	btfss	___fladd@grs^0,0,c
 13622   002A44  EF26  F015         	goto	u3171
 13623   002A48  EF28  F015         	goto	u3170
 13624   002A4C                     u3171:
 13625   002A4C  EF2E  F015         	goto	l3931
 13626   002A50                     u3170:
 13627   002A50  90D8               	bcf	status,0,c
 13628   002A52  3010               	rrcf	___fladd@grs^0,w,c
 13629   002A54  0901               	iorlw	1
 13630   002A56  6E10               	movwf	___fladd@grs^0,c
 13631   002A58  EF30  F015         	goto	l3933
 13632   002A5C                     l3931:
 13633   002A5C  90D8               	bcf	status,0,c
 13634   002A5E  3210               	rrcf	___fladd@grs^0,f,c
 13635   002A60                     l3933:
 13636   002A60  A001               	btfss	___fladd@b^0,0,c
 13637   002A62  EF35  F015         	goto	u3181
 13638   002A66  EF37  F015         	goto	u3180
 13639   002A6A                     u3181:
 13640   002A6A  EF38  F015         	goto	l3937
 13641   002A6E                     u3180:
 13642   002A6E  8E10               	bsf	___fladd@grs^0,7,c
 13643   002A70                     l3937:
 13644   002A70  3404               	rlcf	(___fladd@b+3)^0,w,c
 13645   002A72  3204               	rrcf	(___fladd@b+3)^0,f,c
 13646   002A74  3203               	rrcf	(___fladd@b+2)^0,f,c
 13647   002A76  3202               	rrcf	(___fladd@b+1)^0,f,c
 13648   002A78  3201               	rrcf	___fladd@b^0,f,c
 13649   002A7A  2A0F               	incf	___fladd@bexp^0,f,c
 13650   002A7C  EFCD  F015         	goto	l3977
 13651   002A80                     l3941:
 13652   002A80  5005               	movf	___fladd@a^0,w,c
 13653   002A82  5C01               	subwf	___fladd@b^0,w,c
 13654   002A84  5006               	movf	(___fladd@a+1)^0,w,c
 13655   002A86  5802               	subwfb	(___fladd@b+1)^0,w,c
 13656   002A88  5007               	movf	(___fladd@a+2)^0,w,c
 13657   002A8A  5803               	subwfb	(___fladd@b+2)^0,w,c
 13658   002A8C  5004               	movf	(___fladd@b+3)^0,w,c
 13659   002A8E  0A80               	xorlw	128
 13660   002A90  6E09               	movwf	??___fladd^0,c
 13661   002A92  5008               	movf	(___fladd@a+3)^0,w,c
 13662   002A94  0A80               	xorlw	128
 13663   002A96  5809               	subwfb	??___fladd^0,w,c
 13664   002A98  B0D8               	btfsc	status,0,c
 13665   002A9A  EF51  F015         	goto	u3191
 13666   002A9E  EF53  F015         	goto	u3190
 13667   002AA2                     u3191:
 13668   002AA2  EF7E  F015         	goto	l3951
 13669   002AA6                     u3190:
 13670   002AA6  5001               	movf	___fladd@b^0,w,c
 13671   002AA8  5C05               	subwf	___fladd@a^0,w,c
 13672   002AAA  6E09               	movwf	??___fladd^0,c
 13673   002AAC  5002               	movf	(___fladd@b+1)^0,w,c
 13674   002AAE  5806               	subwfb	(___fladd@a+1)^0,w,c
 13675   002AB0  6E0A               	movwf	(??___fladd+1)^0,c
 13676   002AB2  5003               	movf	(___fladd@b+2)^0,w,c
 13677   002AB4  5807               	subwfb	(___fladd@a+2)^0,w,c
 13678   002AB6  6E0B               	movwf	(??___fladd+2)^0,c
 13679   002AB8  5004               	movf	(___fladd@b+3)^0,w,c
 13680   002ABA  5808               	subwfb	(___fladd@a+3)^0,w,c
 13681   002ABC  6E0C               	movwf	(??___fladd+3)^0,c
 13682   002ABE  0EFF               	movlw	255
 13683   002AC0  2409               	addwf	??___fladd^0,w,c
 13684   002AC2  6E01               	movwf	___fladd@b^0,c
 13685   002AC4  0EFF               	movlw	255
 13686   002AC6  200A               	addwfc	(??___fladd+1)^0,w,c
 13687   002AC8  6E02               	movwf	(___fladd@b+1)^0,c
 13688   002ACA  0EFF               	movlw	255
 13689   002ACC  200B               	addwfc	(??___fladd+2)^0,w,c
 13690   002ACE  6E03               	movwf	(___fladd@b+2)^0,c
 13691   002AD0  0EFF               	movlw	255
 13692   002AD2  200C               	addwfc	(??___fladd+3)^0,w,c
 13693   002AD4  6E04               	movwf	(___fladd@b+3)^0,c
 13694   002AD6  0E80               	movlw	128
 13695   002AD8  1A0D               	xorwf	___fladd@signs^0,f,c
 13696   002ADA  6C10               	negf	___fladd@grs^0,c
 13697   002ADC  5010               	movf	___fladd@grs^0,w,c
 13698   002ADE  A4D8               	btfss	status,2,c
 13699   002AE0  EF74  F015         	goto	u3201
 13700   002AE4  EF76  F015         	goto	u3200
 13701   002AE8                     u3201:
 13702   002AE8  EF86  F015         	goto	l1219
 13703   002AEC                     u3200:
 13704   002AEC  0E01               	movlw	1
 13705   002AEE  2601               	addwf	___fladd@b^0,f,c
 13706   002AF0  0E00               	movlw	0
 13707   002AF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13708   002AF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13709   002AF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13710   002AF8  EF86  F015         	goto	l1219
 13711   002AFC                     l3951:
 13712   002AFC  5005               	movf	___fladd@a^0,w,c
 13713   002AFE  5E01               	subwf	___fladd@b^0,f,c
 13714   002B00  5006               	movf	(___fladd@a+1)^0,w,c
 13715   002B02  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13716   002B04  5007               	movf	(___fladd@a+2)^0,w,c
 13717   002B06  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13718   002B08  5008               	movf	(___fladd@a+3)^0,w,c
 13719   002B0A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13720   002B0C                     l1219:
 13721   002B0C  5001               	movf	___fladd@b^0,w,c
 13722   002B0E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13723   002B10  1003               	iorwf	(___fladd@b+2)^0,w,c
 13724   002B12  1004               	iorwf	(___fladd@b+3)^0,w,c
 13725   002B14  A4D8               	btfss	status,2,c
 13726   002B16  EF8F  F015         	goto	u3211
 13727   002B1A  EF91  F015         	goto	u3210
 13728   002B1E                     u3211:
 13729   002B1E  EFC6  F015         	goto	l3975
 13730   002B22                     u3210:
 13731   002B22  5010               	movf	___fladd@grs^0,w,c
 13732   002B24  A4D8               	btfss	status,2,c
 13733   002B26  EF97  F015         	goto	u3221
 13734   002B2A  EF99  F015         	goto	u3220
 13735   002B2E                     u3221:
 13736   002B2E  EFC6  F015         	goto	l3975
 13737   002B32                     u3220:
 13738   002B32  0E00               	movlw	0
 13739   002B34  6E01               	movwf	?___fladd^0,c
 13740   002B36  0E00               	movlw	0
 13741   002B38  6E02               	movwf	(?___fladd+1)^0,c
 13742   002B3A  0E00               	movlw	0
 13743   002B3C  6E03               	movwf	(?___fladd+2)^0,c
 13744   002B3E  0E00               	movlw	0
 13745   002B40  6E04               	movwf	(?___fladd+3)^0,c
 13746   002B42  EF61  F016         	goto	l1211
 13747   002B46                     l3959:
 13748   002B46  90D8               	bcf	status,0,c
 13749   002B48  3601               	rlcf	___fladd@b^0,f,c
 13750   002B4A  3602               	rlcf	(___fladd@b+1)^0,f,c
 13751   002B4C  3603               	rlcf	(___fladd@b+2)^0,f,c
 13752   002B4E  3604               	rlcf	(___fladd@b+3)^0,f,c
 13753   002B50  AE10               	btfss	___fladd@grs^0,7,c
 13754   002B52  EFAD  F015         	goto	u3231
 13755   002B56  EFAF  F015         	goto	u3230
 13756   002B5A                     u3231:
 13757   002B5A  EFB0  F015         	goto	l3965
 13758   002B5E                     u3230:
 13759   002B5E  8001               	bsf	___fladd@b^0,0,c
 13760   002B60                     l3965:
 13761   002B60  A010               	btfss	___fladd@grs^0,0,c
 13762   002B62  EFB5  F015         	goto	u3241
 13763   002B66  EFB7  F015         	goto	u3240
 13764   002B6A                     u3241:
 13765   002B6A  EFBB  F015         	goto	l3969
 13766   002B6E                     u3240:
 13767   002B6E  80D8               	bsf	status,0,c
 13768   002B70  3610               	rlcf	___fladd@grs^0,f,c
 13769   002B72  EFBD  F015         	goto	l3971
 13770   002B76                     l3969:
 13771   002B76  90D8               	bcf	status,0,c
 13772   002B78  3610               	rlcf	___fladd@grs^0,f,c
 13773   002B7A                     l3971:
 13774   002B7A  500F               	movf	___fladd@bexp^0,w,c
 13775   002B7C  B4D8               	btfsc	status,2,c
 13776   002B7E  EFC3  F015         	goto	u3251
 13777   002B82  EFC5  F015         	goto	u3250
 13778   002B86                     u3251:
 13779   002B86  EFC6  F015         	goto	l3975
 13780   002B8A                     u3250:
 13781   002B8A  060F               	decf	___fladd@bexp^0,f,c
 13782   002B8C                     l3975:
 13783   002B8C  AE03               	btfss	(___fladd@b+2)^0,7,c
 13784   002B8E  EFCB  F015         	goto	u3261
 13785   002B92  EFCD  F015         	goto	u3260
 13786   002B96                     u3261:
 13787   002B96  EFA3  F015         	goto	l3959
 13788   002B9A                     u3260:
 13789   002B9A                     l3977:
 13790   002B9A  0E00               	movlw	0
 13791   002B9C  6E0E               	movwf	___fladd@aexp^0,c
 13792   002B9E  AE10               	btfss	___fladd@grs^0,7,c
 13793   002BA0  EFD4  F015         	goto	u3271
 13794   002BA4  EFD6  F015         	goto	u3270
 13795   002BA8                     u3271:
 13796   002BA8  EFEE  F015         	goto	l1228
 13797   002BAC                     u3270:
 13798   002BAC  C010  F009         	movff	___fladd@grs,??___fladd
 13799   002BB0  0E7F               	movlw	127
 13800   002BB2  1609               	andwf	??___fladd^0,f,c
 13801   002BB4  B4D8               	btfsc	status,2,c
 13802   002BB6  EFDF  F015         	goto	u3281
 13803   002BBA  EFE1  F015         	goto	u3280
 13804   002BBE                     u3281:
 13805   002BBE  EFE5  F015         	goto	l1229
 13806   002BC2                     u3280:
 13807   002BC2                     l3983:
 13808   002BC2  0E01               	movlw	1
 13809   002BC4  6E0E               	movwf	___fladd@aexp^0,c
 13810   002BC6  EFEE  F015         	goto	l1228
 13811   002BCA                     l1229:
 13812   002BCA  A001               	btfss	___fladd@b^0,0,c
 13813   002BCC  EFEA  F015         	goto	u3291
 13814   002BD0  EFEC  F015         	goto	u3290
 13815   002BD4                     u3291:
 13816   002BD4  EFEE  F015         	goto	l1228
 13817   002BD8                     u3290:
 13818   002BD8  EFE1  F015         	goto	l3983
 13819   002BDC                     l1228:
 13820   002BDC  500E               	movf	___fladd@aexp^0,w,c
 13821   002BDE  B4D8               	btfsc	status,2,c
 13822   002BE0  EFF4  F015         	goto	u3301
 13823   002BE4  EFF6  F015         	goto	u3300
 13824   002BE8                     u3301:
 13825   002BE8  EF21  F016         	goto	l3995
 13826   002BEC                     u3300:
 13827   002BEC  0E01               	movlw	1
 13828   002BEE  2601               	addwf	___fladd@b^0,f,c
 13829   002BF0  0E00               	movlw	0
 13830   002BF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13831   002BF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13832   002BF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13833   002BF8  A004               	btfss	(___fladd@b+3)^0,0,c
 13834   002BFA  EF01  F016         	goto	u3311
 13835   002BFE  EF03  F016         	goto	u3310
 13836   002C02                     u3311:
 13837   002C02  EF21  F016         	goto	l3995
 13838   002C06                     u3310:
 13839   002C06  C001  F009         	movff	___fladd@b,??___fladd
 13840   002C0A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13841   002C0E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13842   002C12  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13843   002C16  340C               	rlcf	(??___fladd+3)^0,w,c
 13844   002C18  320C               	rrcf	(??___fladd+3)^0,f,c
 13845   002C1A  320B               	rrcf	(??___fladd+2)^0,f,c
 13846   002C1C  320A               	rrcf	(??___fladd+1)^0,f,c
 13847   002C1E  3209               	rrcf	??___fladd^0,f,c
 13848   002C20  C009  F001         	movff	??___fladd,___fladd@b
 13849   002C24  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13850   002C28  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13851   002C2C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13852   002C30  280F               	incf	___fladd@bexp^0,w,c
 13853   002C32  B4D8               	btfsc	status,2,c
 13854   002C34  EF1E  F016         	goto	u3321
 13855   002C38  EF20  F016         	goto	u3320
 13856   002C3C                     u3321:
 13857   002C3C  EF21  F016         	goto	l3995
 13858   002C40                     u3320:
 13859   002C40  2A0F               	incf	___fladd@bexp^0,f,c
 13860   002C42                     l3995:
 13861   002C42  280F               	incf	___fladd@bexp^0,w,c
 13862   002C44  B4D8               	btfsc	status,2,c
 13863   002C46  EF27  F016         	goto	u3331
 13864   002C4A  EF29  F016         	goto	u3330
 13865   002C4E                     u3331:
 13866   002C4E  EF31  F016         	goto	l3999
 13867   002C52                     u3330:
 13868   002C52  500F               	movf	___fladd@bexp^0,w,c
 13869   002C54  A4D8               	btfss	status,2,c
 13870   002C56  EF2F  F016         	goto	u3341
 13871   002C5A  EF31  F016         	goto	u3340
 13872   002C5E                     u3341:
 13873   002C5E  EF43  F016         	goto	l4003
 13874   002C62                     u3340:
 13875   002C62                     l3999:
 13876   002C62  0E00               	movlw	0
 13877   002C64  6E01               	movwf	___fladd@b^0,c
 13878   002C66  0E00               	movlw	0
 13879   002C68  6E02               	movwf	(___fladd@b+1)^0,c
 13880   002C6A  0E00               	movlw	0
 13881   002C6C  6E03               	movwf	(___fladd@b+2)^0,c
 13882   002C6E  0E00               	movlw	0
 13883   002C70  6E04               	movwf	(___fladd@b+3)^0,c
 13884   002C72  500F               	movf	___fladd@bexp^0,w,c
 13885   002C74  A4D8               	btfss	status,2,c
 13886   002C76  EF3F  F016         	goto	u3351
 13887   002C7A  EF41  F016         	goto	u3350
 13888   002C7E                     u3351:
 13889   002C7E  EF43  F016         	goto	l4003
 13890   002C82                     u3350:
 13891   002C82  0E00               	movlw	0
 13892   002C84  6E0D               	movwf	___fladd@signs^0,c
 13893   002C86                     l4003:
 13894   002C86  A00F               	btfss	___fladd@bexp^0,0,c
 13895   002C88  EF48  F016         	goto	u3361
 13896   002C8C  EF4A  F016         	goto	u3360
 13897   002C90                     u3361:
 13898   002C90  EF4D  F016         	goto	l4007
 13899   002C94                     u3360:
 13900   002C94  8E03               	bsf	(___fladd@b+2)^0,7,c
 13901   002C96  EF4E  F016         	goto	l4009
 13902   002C9A                     l4007:
 13903   002C9A  9E03               	bcf	(___fladd@b+2)^0,7,c
 13904   002C9C                     l4009:
 13905   002C9C  90D8               	bcf	status,0,c
 13906   002C9E  300F               	rrcf	___fladd@bexp^0,w,c
 13907   002CA0  6E04               	movwf	(___fladd@b+3)^0,c
 13908   002CA2  AE0D               	btfss	___fladd@signs^0,7,c
 13909   002CA4  EF56  F016         	goto	u3371
 13910   002CA8  EF58  F016         	goto	u3370
 13911   002CAC                     u3371:
 13912   002CAC  EF59  F016         	goto	l4015
 13913   002CB0                     u3370:
 13914   002CB0  8E04               	bsf	(___fladd@b+3)^0,7,c
 13915   002CB2                     l4015:
 13916   002CB2  C001  F001         	movff	___fladd@b,?___fladd
 13917   002CB6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13918   002CBA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13919   002CBE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13920   002CC2                     l1211:
 13921   002CC2  0012               	return		;funcret
 13922   002CC4                     __end_of___fladd:
 13923                           	callstack 0
 13924                           
 13925 ;; *************** function ___flmul *****************
 13926 ;; Defined at:
 13927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  b               4   16[COMRAM] unsigned char 
 13930 ;;  a               4   20[COMRAM] unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  prod            4   35[COMRAM] struct .
 13933 ;;  grs             4   29[COMRAM] unsigned long 
 13934 ;;  temp            2   39[COMRAM] struct .
 13935 ;;  bexp            1   34[COMRAM] unsigned char 
 13936 ;;  aexp            1   33[COMRAM] unsigned char 
 13937 ;;  sign            1   28[COMRAM] unsigned char 
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4   16[COMRAM] unsigned char 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0, prodl, prodh
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13948 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13950 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13951 ;;Total ram usage:       25 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; Hardware stack levels required when called: 1
 13954 ;; This function calls:
 13955 ;;		Nothing
 13956 ;; This function is called by:
 13957 ;;		_Colour_decider
 13958 ;;		_reverseOneBlock
 13959 ;;		_ForwardOneBlock
 13960 ;;		_Forwardhalfblock
 13961 ;;		_efgtoa
 13962 ;;		_Backhalfblock
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966                           	psect	text75
 13967   002CC4                     __ptext75:
 13968                           	callstack 0
 13969   002CC4                     ___flmul:
 13970                           	callstack 25
 13971   002CC4  5014               	movf	(___flmul@b+3)^0,w,c
 13972   002CC6  0B80               	andlw	128
 13973   002CC8  6E1D               	movwf	___flmul@sign^0,c
 13974   002CCA  5014               	movf	(___flmul@b+3)^0,w,c
 13975   002CCC  2414               	addwf	(___flmul@b+3)^0,w,c
 13976   002CCE  6E23               	movwf	___flmul@bexp^0,c
 13977   002CD0  AE13               	btfss	(___flmul@b+2)^0,7,c
 13978   002CD2  EF6D  F016         	goto	u3801
 13979   002CD6  EF6F  F016         	goto	u3800
 13980   002CDA                     u3801:
 13981   002CDA  EF70  F016         	goto	l4289
 13982   002CDE                     u3800:
 13983   002CDE  8023               	bsf	___flmul@bexp^0,0,c
 13984   002CE0                     l4289:
 13985   002CE0  5023               	movf	___flmul@bexp^0,w,c
 13986   002CE2  B4D8               	btfsc	status,2,c
 13987   002CE4  EF76  F016         	goto	u3811
 13988   002CE8  EF78  F016         	goto	u3810
 13989   002CEC                     u3811:
 13990   002CEC  EF8B  F016         	goto	l4297
 13991   002CF0                     u3810:
 13992   002CF0  2823               	incf	___flmul@bexp^0,w,c
 13993   002CF2  A4D8               	btfss	status,2,c
 13994   002CF4  EF7E  F016         	goto	u3821
 13995   002CF8  EF80  F016         	goto	u3820
 13996   002CFC                     u3821:
 13997   002CFC  EF88  F016         	goto	l4295
 13998   002D00                     u3820:
 13999   002D00  0E00               	movlw	0
 14000   002D02  6E11               	movwf	___flmul@b^0,c
 14001   002D04  0E00               	movlw	0
 14002   002D06  6E12               	movwf	(___flmul@b+1)^0,c
 14003   002D08  0E00               	movlw	0
 14004   002D0A  6E13               	movwf	(___flmul@b+2)^0,c
 14005   002D0C  0E00               	movlw	0
 14006   002D0E  6E14               	movwf	(___flmul@b+3)^0,c
 14007   002D10                     l4295:
 14008   002D10  8E13               	bsf	(___flmul@b+2)^0,7,c
 14009   002D12  EF93  F016         	goto	l4299
 14010   002D16                     l4297:
 14011   002D16  0E00               	movlw	0
 14012   002D18  6E11               	movwf	___flmul@b^0,c
 14013   002D1A  0E00               	movlw	0
 14014   002D1C  6E12               	movwf	(___flmul@b+1)^0,c
 14015   002D1E  0E00               	movlw	0
 14016   002D20  6E13               	movwf	(___flmul@b+2)^0,c
 14017   002D22  0E00               	movlw	0
 14018   002D24  6E14               	movwf	(___flmul@b+3)^0,c
 14019   002D26                     l4299:
 14020   002D26  5018               	movf	(___flmul@a+3)^0,w,c
 14021   002D28  0B80               	andlw	128
 14022   002D2A  1A1D               	xorwf	___flmul@sign^0,f,c
 14023   002D2C  5018               	movf	(___flmul@a+3)^0,w,c
 14024   002D2E  2418               	addwf	(___flmul@a+3)^0,w,c
 14025   002D30  6E22               	movwf	___flmul@aexp^0,c
 14026   002D32  AE17               	btfss	(___flmul@a+2)^0,7,c
 14027   002D34  EF9E  F016         	goto	u3831
 14028   002D38  EFA0  F016         	goto	u3830
 14029   002D3C                     u3831:
 14030   002D3C  EFA1  F016         	goto	l4307
 14031   002D40                     u3830:
 14032   002D40  8022               	bsf	___flmul@aexp^0,0,c
 14033   002D42                     l4307:
 14034   002D42  5022               	movf	___flmul@aexp^0,w,c
 14035   002D44  B4D8               	btfsc	status,2,c
 14036   002D46  EFA7  F016         	goto	u3841
 14037   002D4A  EFA9  F016         	goto	u3840
 14038   002D4E                     u3841:
 14039   002D4E  EFBC  F016         	goto	l4315
 14040   002D52                     u3840:
 14041   002D52  2822               	incf	___flmul@aexp^0,w,c
 14042   002D54  A4D8               	btfss	status,2,c
 14043   002D56  EFAF  F016         	goto	u3851
 14044   002D5A  EFB1  F016         	goto	u3850
 14045   002D5E                     u3851:
 14046   002D5E  EFB9  F016         	goto	l4313
 14047   002D62                     u3850:
 14048   002D62  0E00               	movlw	0
 14049   002D64  6E15               	movwf	___flmul@a^0,c
 14050   002D66  0E00               	movlw	0
 14051   002D68  6E16               	movwf	(___flmul@a+1)^0,c
 14052   002D6A  0E00               	movlw	0
 14053   002D6C  6E17               	movwf	(___flmul@a+2)^0,c
 14054   002D6E  0E00               	movlw	0
 14055   002D70  6E18               	movwf	(___flmul@a+3)^0,c
 14056   002D72                     l4313:
 14057   002D72  8E17               	bsf	(___flmul@a+2)^0,7,c
 14058   002D74  EFC4  F016         	goto	l1288
 14059   002D78                     l4315:
 14060   002D78  0E00               	movlw	0
 14061   002D7A  6E15               	movwf	___flmul@a^0,c
 14062   002D7C  0E00               	movlw	0
 14063   002D7E  6E16               	movwf	(___flmul@a+1)^0,c
 14064   002D80  0E00               	movlw	0
 14065   002D82  6E17               	movwf	(___flmul@a+2)^0,c
 14066   002D84  0E00               	movlw	0
 14067   002D86  6E18               	movwf	(___flmul@a+3)^0,c
 14068   002D88                     l1288:
 14069   002D88  5022               	movf	___flmul@aexp^0,w,c
 14070   002D8A  B4D8               	btfsc	status,2,c
 14071   002D8C  EFCA  F016         	goto	u3861
 14072   002D90  EFCC  F016         	goto	u3860
 14073   002D94                     u3861:
 14074   002D94  EFD4  F016         	goto	l4319
 14075   002D98                     u3860:
 14076   002D98  5023               	movf	___flmul@bexp^0,w,c
 14077   002D9A  A4D8               	btfss	status,2,c
 14078   002D9C  EFD2  F016         	goto	u3871
 14079   002DA0  EFD4  F016         	goto	u3870
 14080   002DA4                     u3871:
 14081   002DA4  EFDE  F016         	goto	l4323
 14082   002DA8                     u3870:
 14083   002DA8                     l4319:
 14084   002DA8  0E00               	movlw	0
 14085   002DAA  6E11               	movwf	?___flmul^0,c
 14086   002DAC  0E00               	movlw	0
 14087   002DAE  6E12               	movwf	(?___flmul+1)^0,c
 14088   002DB0  0E00               	movlw	0
 14089   002DB2  6E13               	movwf	(?___flmul+2)^0,c
 14090   002DB4  0E00               	movlw	0
 14091   002DB6  6E14               	movwf	(?___flmul+3)^0,c
 14092   002DB8  EF76  F018         	goto	l1292
 14093   002DBC                     l4323:
 14094   002DBC  5017               	movf	(___flmul@a+2)^0,w,c
 14095   002DBE  0211               	mulwf	___flmul@b^0,c
 14096   002DC0  CFF3 F028          	movff	prodl,___flmul@temp
 14097   002DC4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14098   002DC8  5028               	movf	___flmul@temp^0,w,c
 14099   002DCA  6E1E               	movwf	___flmul@grs^0,c
 14100   002DCC  6A1F               	clrf	(___flmul@grs+1)^0,c
 14101   002DCE  6A20               	clrf	(___flmul@grs+2)^0,c
 14102   002DD0  6A21               	clrf	(___flmul@grs+3)^0,c
 14103   002DD2  5029               	movf	(___flmul@temp+1)^0,w,c
 14104   002DD4  6E24               	movwf	___flmul@prod^0,c
 14105   002DD6  6A25               	clrf	(___flmul@prod+1)^0,c
 14106   002DD8  6A26               	clrf	(___flmul@prod+2)^0,c
 14107   002DDA  6A27               	clrf	(___flmul@prod+3)^0,c
 14108   002DDC  5016               	movf	(___flmul@a+1)^0,w,c
 14109   002DDE  0212               	mulwf	(___flmul@b+1)^0,c
 14110   002DE0  CFF3 F028          	movff	prodl,___flmul@temp
 14111   002DE4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14112   002DE8  5028               	movf	___flmul@temp^0,w,c
 14113   002DEA  261E               	addwf	___flmul@grs^0,f,c
 14114   002DEC  0E00               	movlw	0
 14115   002DEE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14116   002DF0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14117   002DF2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14118   002DF4  5029               	movf	(___flmul@temp+1)^0,w,c
 14119   002DF6  2624               	addwf	___flmul@prod^0,f,c
 14120   002DF8  0E00               	movlw	0
 14121   002DFA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14122   002DFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14123   002DFE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14124   002E00  5015               	movf	___flmul@a^0,w,c
 14125   002E02  0213               	mulwf	(___flmul@b+2)^0,c
 14126   002E04  CFF3 F028          	movff	prodl,___flmul@temp
 14127   002E08  CFF4 F029          	movff	prodh,___flmul@temp+1
 14128   002E0C  5028               	movf	___flmul@temp^0,w,c
 14129   002E0E  261E               	addwf	___flmul@grs^0,f,c
 14130   002E10  0E00               	movlw	0
 14131   002E12  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14132   002E14  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14133   002E16  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14134   002E18  5029               	movf	(___flmul@temp+1)^0,w,c
 14135   002E1A  2624               	addwf	___flmul@prod^0,f,c
 14136   002E1C  0E00               	movlw	0
 14137   002E1E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14138   002E20  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14139   002E22  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14140   002E24  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14141   002E28  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14142   002E2C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14143   002E30  6A1E               	clrf	___flmul@grs^0,c
 14144   002E32  5015               	movf	___flmul@a^0,w,c
 14145   002E34  0212               	mulwf	(___flmul@b+1)^0,c
 14146   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 14147   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14148   002E3E  5028               	movf	___flmul@temp^0,w,c
 14149   002E40  261E               	addwf	___flmul@grs^0,f,c
 14150   002E42  5029               	movf	(___flmul@temp+1)^0,w,c
 14151   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14152   002E46  0E00               	movlw	0
 14153   002E48  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14154   002E4A  0E00               	movlw	0
 14155   002E4C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14156   002E4E  5016               	movf	(___flmul@a+1)^0,w,c
 14157   002E50  0211               	mulwf	___flmul@b^0,c
 14158   002E52  CFF3 F028          	movff	prodl,___flmul@temp
 14159   002E56  CFF4 F029          	movff	prodh,___flmul@temp+1
 14160   002E5A  5028               	movf	___flmul@temp^0,w,c
 14161   002E5C  261E               	addwf	___flmul@grs^0,f,c
 14162   002E5E  5029               	movf	(___flmul@temp+1)^0,w,c
 14163   002E60  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14164   002E62  0E00               	movlw	0
 14165   002E64  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14166   002E66  0E00               	movlw	0
 14167   002E68  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14168   002E6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14169   002E6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14170   002E72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14171   002E76  6A1E               	clrf	___flmul@grs^0,c
 14172   002E78  5015               	movf	___flmul@a^0,w,c
 14173   002E7A  0211               	mulwf	___flmul@b^0,c
 14174   002E7C  CFF3 F028          	movff	prodl,___flmul@temp
 14175   002E80  CFF4 F029          	movff	prodh,___flmul@temp+1
 14176   002E84  5028               	movf	___flmul@temp^0,w,c
 14177   002E86  261E               	addwf	___flmul@grs^0,f,c
 14178   002E88  5029               	movf	(___flmul@temp+1)^0,w,c
 14179   002E8A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14180   002E8C  0E00               	movlw	0
 14181   002E8E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14182   002E90  0E00               	movlw	0
 14183   002E92  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14184   002E94  5017               	movf	(___flmul@a+2)^0,w,c
 14185   002E96  0212               	mulwf	(___flmul@b+1)^0,c
 14186   002E98  CFF3 F028          	movff	prodl,___flmul@temp
 14187   002E9C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14188   002EA0  5028               	movf	___flmul@temp^0,w,c
 14189   002EA2  2624               	addwf	___flmul@prod^0,f,c
 14190   002EA4  5029               	movf	(___flmul@temp+1)^0,w,c
 14191   002EA6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14192   002EA8  0E00               	movlw	0
 14193   002EAA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14194   002EAC  0E00               	movlw	0
 14195   002EAE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14196   002EB0  5016               	movf	(___flmul@a+1)^0,w,c
 14197   002EB2  0213               	mulwf	(___flmul@b+2)^0,c
 14198   002EB4  CFF3 F028          	movff	prodl,___flmul@temp
 14199   002EB8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14200   002EBC  5028               	movf	___flmul@temp^0,w,c
 14201   002EBE  2624               	addwf	___flmul@prod^0,f,c
 14202   002EC0  5029               	movf	(___flmul@temp+1)^0,w,c
 14203   002EC2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14204   002EC4  0E00               	movlw	0
 14205   002EC6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14206   002EC8  0E00               	movlw	0
 14207   002ECA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14208   002ECC  5017               	movf	(___flmul@a+2)^0,w,c
 14209   002ECE  0213               	mulwf	(___flmul@b+2)^0,c
 14210   002ED0  CFF3 F028          	movff	prodl,___flmul@temp
 14211   002ED4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14212   002ED8  5028               	movf	___flmul@temp^0,w,c
 14213   002EDA  6E19               	movwf	??___flmul^0,c
 14214   002EDC  5029               	movf	(___flmul@temp+1)^0,w,c
 14215   002EDE  6E1A               	movwf	(??___flmul+1)^0,c
 14216   002EE0  6A1B               	clrf	(??___flmul+2)^0,c
 14217   002EE2  6A1C               	clrf	(??___flmul+3)^0,c
 14218   002EE4  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14219   002EE8  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14220   002EEC  C019  F01A         	movff	??___flmul,??___flmul+1
 14221   002EF0  6A19               	clrf	??___flmul^0,c
 14222   002EF2  5019               	movf	??___flmul^0,w,c
 14223   002EF4  2624               	addwf	___flmul@prod^0,f,c
 14224   002EF6  501A               	movf	(??___flmul+1)^0,w,c
 14225   002EF8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14226   002EFA  501B               	movf	(??___flmul+2)^0,w,c
 14227   002EFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14228   002EFE  501C               	movf	(??___flmul+3)^0,w,c
 14229   002F00  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14230   002F02  C01E  F019         	movff	___flmul@grs,??___flmul
 14231   002F06  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14232   002F0A  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14233   002F0E  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14234   002F12  0E19               	movlw	25
 14235   002F14  EF91  F017         	goto	u3880
 14236   002F18                     u3885:
 14237   002F18  90D8               	bcf	status,0,c
 14238   002F1A  321C               	rrcf	(??___flmul+3)^0,f,c
 14239   002F1C  321B               	rrcf	(??___flmul+2)^0,f,c
 14240   002F1E  321A               	rrcf	(??___flmul+1)^0,f,c
 14241   002F20  3219               	rrcf	??___flmul^0,f,c
 14242   002F22                     u3880:
 14243   002F22  2EE8               	decfsz	wreg,f,c
 14244   002F24  EF8C  F017         	goto	u3885
 14245   002F28  5019               	movf	??___flmul^0,w,c
 14246   002F2A  2624               	addwf	___flmul@prod^0,f,c
 14247   002F2C  501A               	movf	(??___flmul+1)^0,w,c
 14248   002F2E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14249   002F30  501B               	movf	(??___flmul+2)^0,w,c
 14250   002F32  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14251   002F34  501C               	movf	(??___flmul+3)^0,w,c
 14252   002F36  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14253   002F38  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14254   002F3C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14255   002F40  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14256   002F44  6A1E               	clrf	___flmul@grs^0,c
 14257   002F46  5022               	movf	___flmul@aexp^0,w,c
 14258   002F48  C023  F019         	movff	___flmul@bexp,??___flmul
 14259   002F4C  6A1A               	clrf	(??___flmul+1)^0,c
 14260   002F4E  2619               	addwf	??___flmul^0,f,c
 14261   002F50  0E00               	movlw	0
 14262   002F52  221A               	addwfc	(??___flmul+1)^0,f,c
 14263   002F54  0E82               	movlw	130
 14264   002F56  2419               	addwf	??___flmul^0,w,c
 14265   002F58  6E28               	movwf	___flmul@temp^0,c
 14266   002F5A  0EFF               	movlw	255
 14267   002F5C  201A               	addwfc	(??___flmul+1)^0,w,c
 14268   002F5E  6E29               	movwf	(___flmul@temp+1)^0,c
 14269   002F60  EFC7  F017         	goto	l4371
 14270   002F64                     l4365:
 14271   002F64  90D8               	bcf	status,0,c
 14272   002F66  3624               	rlcf	___flmul@prod^0,f,c
 14273   002F68  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14274   002F6A  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14275   002F6C  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14276   002F6E  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14277   002F70  EFBC  F017         	goto	u3891
 14278   002F74  EFBE  F017         	goto	u3890
 14279   002F78                     u3891:
 14280   002F78  EFBF  F017         	goto	l1295
 14281   002F7C                     u3890:
 14282   002F7C  8024               	bsf	___flmul@prod^0,0,c
 14283   002F7E                     l1295:
 14284   002F7E  90D8               	bcf	status,0,c
 14285   002F80  361E               	rlcf	___flmul@grs^0,f,c
 14286   002F82  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14287   002F84  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14288   002F86  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14289   002F88  0628               	decf	___flmul@temp^0,f,c
 14290   002F8A  A0D8               	btfss	status,0,c
 14291   002F8C  0629               	decf	(___flmul@temp+1)^0,f,c
 14292   002F8E                     l4371:
 14293   002F8E  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14294   002F90  EFCC  F017         	goto	u3901
 14295   002F94  EFCE  F017         	goto	u3900
 14296   002F98                     u3901:
 14297   002F98  EFB2  F017         	goto	l4365
 14298   002F9C                     u3900:
 14299   002F9C  0E00               	movlw	0
 14300   002F9E  6E22               	movwf	___flmul@aexp^0,c
 14301   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14302   002FA2  EFD5  F017         	goto	u3911
 14303   002FA6  EFD7  F017         	goto	u3910
 14304   002FAA                     u3911:
 14305   002FAA  EFFB  F017         	goto	l1297
 14306   002FAE                     u3910:
 14307   002FAE  0EFF               	movlw	255
 14308   002FB0  141E               	andwf	___flmul@grs^0,w,c
 14309   002FB2  6E19               	movwf	??___flmul^0,c
 14310   002FB4  0EFF               	movlw	255
 14311   002FB6  141F               	andwf	(___flmul@grs+1)^0,w,c
 14312   002FB8  6E1A               	movwf	(??___flmul+1)^0,c
 14313   002FBA  0EFF               	movlw	255
 14314   002FBC  1420               	andwf	(___flmul@grs+2)^0,w,c
 14315   002FBE  6E1B               	movwf	(??___flmul+2)^0,c
 14316   002FC0  0E7F               	movlw	127
 14317   002FC2  1421               	andwf	(___flmul@grs+3)^0,w,c
 14318   002FC4  6E1C               	movwf	(??___flmul+3)^0,c
 14319   002FC6  5019               	movf	??___flmul^0,w,c
 14320   002FC8  101A               	iorwf	(??___flmul+1)^0,w,c
 14321   002FCA  101B               	iorwf	(??___flmul+2)^0,w,c
 14322   002FCC  101C               	iorwf	(??___flmul+3)^0,w,c
 14323   002FCE  B4D8               	btfsc	status,2,c
 14324   002FD0  EFEC  F017         	goto	u3921
 14325   002FD4  EFEE  F017         	goto	u3920
 14326   002FD8                     u3921:
 14327   002FD8  EFF2  F017         	goto	l1298
 14328   002FDC                     u3920:
 14329   002FDC                     l4379:
 14330   002FDC  0E01               	movlw	1
 14331   002FDE  6E22               	movwf	___flmul@aexp^0,c
 14332   002FE0  EFFB  F017         	goto	l1297
 14333   002FE4                     l1298:
 14334   002FE4  A024               	btfss	___flmul@prod^0,0,c
 14335   002FE6  EFF7  F017         	goto	u3931
 14336   002FEA  EFF9  F017         	goto	u3930
 14337   002FEE                     u3931:
 14338   002FEE  EFFB  F017         	goto	l1297
 14339   002FF2                     u3930:
 14340   002FF2  EFEE  F017         	goto	l4379
 14341   002FF6                     l1297:
 14342   002FF6  5022               	movf	___flmul@aexp^0,w,c
 14343   002FF8  B4D8               	btfsc	status,2,c
 14344   002FFA  EF01  F018         	goto	u3941
 14345   002FFE  EF03  F018         	goto	u3940
 14346   003002                     u3941:
 14347   003002  EF27  F018         	goto	l4391
 14348   003006                     u3940:
 14349   003006  0E01               	movlw	1
 14350   003008  2624               	addwf	___flmul@prod^0,f,c
 14351   00300A  0E00               	movlw	0
 14352   00300C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14353   00300E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14354   003010  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14355   003012  A027               	btfss	(___flmul@prod+3)^0,0,c
 14356   003014  EF0E  F018         	goto	u3951
 14357   003018  EF10  F018         	goto	u3950
 14358   00301C                     u3951:
 14359   00301C  EF27  F018         	goto	l4391
 14360   003020                     u3950:
 14361   003020  C024  F019         	movff	___flmul@prod,??___flmul
 14362   003024  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14363   003028  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14364   00302C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14365   003030  341C               	rlcf	(??___flmul+3)^0,w,c
 14366   003032  321C               	rrcf	(??___flmul+3)^0,f,c
 14367   003034  321B               	rrcf	(??___flmul+2)^0,f,c
 14368   003036  321A               	rrcf	(??___flmul+1)^0,f,c
 14369   003038  3219               	rrcf	??___flmul^0,f,c
 14370   00303A  C019  F024         	movff	??___flmul,___flmul@prod
 14371   00303E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14372   003042  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14373   003046  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14374   00304A  4A28               	infsnz	___flmul@temp^0,f,c
 14375   00304C  2A29               	incf	(___flmul@temp+1)^0,f,c
 14376   00304E                     l4391:
 14377   00304E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14378   003050  EF32  F018         	goto	u3961
 14379   003054  5029               	movf	(___flmul@temp+1)^0,w,c
 14380   003056  E108               	bnz	u3960
 14381   003058  2828               	incf	___flmul@temp^0,w,c
 14382   00305A  A0D8               	btfss	status,0,c
 14383   00305C  EF32  F018         	goto	u3961
 14384   003060  EF34  F018         	goto	u3960
 14385   003064                     u3961:
 14386   003064  EF3E  F018         	goto	l4395
 14387   003068                     u3960:
 14388   003068  0E00               	movlw	0
 14389   00306A  6E24               	movwf	___flmul@prod^0,c
 14390   00306C  0E00               	movlw	0
 14391   00306E  6E25               	movwf	(___flmul@prod+1)^0,c
 14392   003070  0E80               	movlw	128
 14393   003072  6E26               	movwf	(___flmul@prod+2)^0,c
 14394   003074  0E7F               	movlw	127
 14395   003076  6E27               	movwf	(___flmul@prod+3)^0,c
 14396   003078  EF6C  F018         	goto	l4407
 14397   00307C                     l4395:
 14398   00307C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14399   00307E  EF4B  F018         	goto	u3970
 14400   003082  5029               	movf	(___flmul@temp+1)^0,w,c
 14401   003084  E106               	bnz	u3971
 14402   003086  0428               	decf	___flmul@temp^0,w,c
 14403   003088  B0D8               	btfsc	status,0,c
 14404   00308A  EF49  F018         	goto	u3971
 14405   00308E  EF4B  F018         	goto	u3970
 14406   003092                     u3971:
 14407   003092  EF57  F018         	goto	l1305
 14408   003096                     u3970:
 14409   003096  0E00               	movlw	0
 14410   003098  6E24               	movwf	___flmul@prod^0,c
 14411   00309A  0E00               	movlw	0
 14412   00309C  6E25               	movwf	(___flmul@prod+1)^0,c
 14413   00309E  0E00               	movlw	0
 14414   0030A0  6E26               	movwf	(___flmul@prod+2)^0,c
 14415   0030A2  0E00               	movlw	0
 14416   0030A4  6E27               	movwf	(___flmul@prod+3)^0,c
 14417   0030A6  0E00               	movlw	0
 14418   0030A8  6E1D               	movwf	___flmul@sign^0,c
 14419   0030AA  EF6C  F018         	goto	l4407
 14420   0030AE                     l1305:
 14421   0030AE  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14422   0030B2  0EFF               	movlw	255
 14423   0030B4  1624               	andwf	___flmul@prod^0,f,c
 14424   0030B6  0EFF               	movlw	255
 14425   0030B8  1625               	andwf	(___flmul@prod+1)^0,f,c
 14426   0030BA  0E7F               	movlw	127
 14427   0030BC  1626               	andwf	(___flmul@prod+2)^0,f,c
 14428   0030BE  0E00               	movlw	0
 14429   0030C0  1627               	andwf	(___flmul@prod+3)^0,f,c
 14430   0030C2  A023               	btfss	___flmul@bexp^0,0,c
 14431   0030C4  EF66  F018         	goto	u3981
 14432   0030C8  EF68  F018         	goto	u3980
 14433   0030CC                     u3981:
 14434   0030CC  EF69  F018         	goto	l4405
 14435   0030D0                     u3980:
 14436   0030D0  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14437   0030D2                     l4405:
 14438   0030D2  90D8               	bcf	status,0,c
 14439   0030D4  3023               	rrcf	___flmul@bexp^0,w,c
 14440   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 14441   0030D8                     l4407:
 14442   0030D8  501D               	movf	___flmul@sign^0,w,c
 14443   0030DA  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14444   0030DC  C024  F011         	movff	___flmul@prod,?___flmul
 14445   0030E0  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14446   0030E4  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14447   0030E8  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14448   0030EC                     l1292:
 14449   0030EC  0012               	return		;funcret
 14450   0030EE                     __end_of___flmul:
 14451                           	callstack 0
 14452                           
 14453 ;; *************** function ___flge *****************
 14454 ;; Defined at:
 14455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14456 ;; Parameters:    Size  Location     Type
 14457 ;;  ff1             4   41[COMRAM] unsigned char 
 14458 ;;  ff2             4   45[COMRAM] unsigned char 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;		None
 14461 ;; Return value:  Size  Location     Type
 14462 ;;		None               void
 14463 ;; Registers used:
 14464 ;;		wreg, status,2, status,0
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14473 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14474 ;;Total ram usage:       12 bytes
 14475 ;; Hardware stack levels used: 1
 14476 ;; Hardware stack levels required when called: 1
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_Colour_decider
 14481 ;;		_efgtoa
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           
 14485                           	psect	text76
 14486   004B1E                     __ptext76:
 14487                           	callstack 0
 14488   004B1E                     ___flge:
 14489                           	callstack 25
 14490   004B1E  0E00               	movlw	0
 14491   004B20  142A               	andwf	___flge@ff1^0,w,c
 14492   004B22  6E32               	movwf	??___flge^0,c
 14493   004B24  0E00               	movlw	0
 14494   004B26  142B               	andwf	(___flge@ff1+1)^0,w,c
 14495   004B28  6E33               	movwf	(??___flge+1)^0,c
 14496   004B2A  0E80               	movlw	128
 14497   004B2C  142C               	andwf	(___flge@ff1+2)^0,w,c
 14498   004B2E  6E34               	movwf	(??___flge+2)^0,c
 14499   004B30  0E7F               	movlw	127
 14500   004B32  142D               	andwf	(___flge@ff1+3)^0,w,c
 14501   004B34  6E35               	movwf	(??___flge+3)^0,c
 14502   004B36  5032               	movf	??___flge^0,w,c
 14503   004B38  1033               	iorwf	(??___flge+1)^0,w,c
 14504   004B3A  1034               	iorwf	(??___flge+2)^0,w,c
 14505   004B3C  1035               	iorwf	(??___flge+3)^0,w,c
 14506   004B3E  A4D8               	btfss	status,2,c
 14507   004B40  EFA4  F025         	goto	u4021
 14508   004B44  EFA6  F025         	goto	u4020
 14509   004B48                     u4021:
 14510   004B48  EFAE  F025         	goto	l4439
 14511   004B4C                     u4020:
 14512   004B4C  0E00               	movlw	0
 14513   004B4E  6E2A               	movwf	___flge@ff1^0,c
 14514   004B50  0E00               	movlw	0
 14515   004B52  6E2B               	movwf	(___flge@ff1+1)^0,c
 14516   004B54  0E00               	movlw	0
 14517   004B56  6E2C               	movwf	(___flge@ff1+2)^0,c
 14518   004B58  0E00               	movlw	0
 14519   004B5A  6E2D               	movwf	(___flge@ff1+3)^0,c
 14520   004B5C                     l4439:
 14521   004B5C  0E00               	movlw	0
 14522   004B5E  142E               	andwf	___flge@ff2^0,w,c
 14523   004B60  6E32               	movwf	??___flge^0,c
 14524   004B62  0E00               	movlw	0
 14525   004B64  142F               	andwf	(___flge@ff2+1)^0,w,c
 14526   004B66  6E33               	movwf	(??___flge+1)^0,c
 14527   004B68  0E80               	movlw	128
 14528   004B6A  1430               	andwf	(___flge@ff2+2)^0,w,c
 14529   004B6C  6E34               	movwf	(??___flge+2)^0,c
 14530   004B6E  0E7F               	movlw	127
 14531   004B70  1431               	andwf	(___flge@ff2+3)^0,w,c
 14532   004B72  6E35               	movwf	(??___flge+3)^0,c
 14533   004B74  5032               	movf	??___flge^0,w,c
 14534   004B76  1033               	iorwf	(??___flge+1)^0,w,c
 14535   004B78  1034               	iorwf	(??___flge+2)^0,w,c
 14536   004B7A  1035               	iorwf	(??___flge+3)^0,w,c
 14537   004B7C  A4D8               	btfss	status,2,c
 14538   004B7E  EFC3  F025         	goto	u4031
 14539   004B82  EFC5  F025         	goto	u4030
 14540   004B86                     u4031:
 14541   004B86  EFCD  F025         	goto	l4443
 14542   004B8A                     u4030:
 14543   004B8A  0E00               	movlw	0
 14544   004B8C  6E2E               	movwf	___flge@ff2^0,c
 14545   004B8E  0E00               	movlw	0
 14546   004B90  6E2F               	movwf	(___flge@ff2+1)^0,c
 14547   004B92  0E00               	movlw	0
 14548   004B94  6E30               	movwf	(___flge@ff2+2)^0,c
 14549   004B96  0E00               	movlw	0
 14550   004B98  6E31               	movwf	(___flge@ff2+3)^0,c
 14551   004B9A                     l4443:
 14552   004B9A  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14553   004B9C  EFD2  F025         	goto	u4041
 14554   004BA0  EFD4  F025         	goto	u4040
 14555   004BA4                     u4041:
 14556   004BA4  EFDD  F025         	goto	l4447
 14557   004BA8                     u4040:
 14558   004BA8  6C2A               	negf	___flge@ff1^0,c
 14559   004BAA  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14560   004BAC  B0D8               	btfsc	status,0,c
 14561   004BAE  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14562   004BB0  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14563   004BB2  B0D8               	btfsc	status,0,c
 14564   004BB4  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14565   004BB6  0E80               	movlw	128
 14566   004BB8  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14567   004BBA                     l4447:
 14568   004BBA  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14569   004BBC  EFE2  F025         	goto	u4051
 14570   004BC0  EFE4  F025         	goto	u4050
 14571   004BC4                     u4051:
 14572   004BC4  EFED  F025         	goto	l939
 14573   004BC8                     u4050:
 14574   004BC8  6C2E               	negf	___flge@ff2^0,c
 14575   004BCA  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14576   004BCC  B0D8               	btfsc	status,0,c
 14577   004BCE  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14578   004BD0  1E30               	comf	(___flge@ff2+2)^0,f,c
 14579   004BD2  B0D8               	btfsc	status,0,c
 14580   004BD4  2A30               	incf	(___flge@ff2+2)^0,f,c
 14581   004BD6  0E80               	movlw	128
 14582   004BD8  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14583   004BDA                     l939:
 14584   004BDA  0E00               	movlw	0
 14585   004BDC  1A2A               	xorwf	___flge@ff1^0,f,c
 14586   004BDE  0E00               	movlw	0
 14587   004BE0  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14588   004BE2  0E00               	movlw	0
 14589   004BE4  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14590   004BE6  0E80               	movlw	128
 14591   004BE8  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14592   004BEA  0E00               	movlw	0
 14593   004BEC  1A2E               	xorwf	___flge@ff2^0,f,c
 14594   004BEE  0E00               	movlw	0
 14595   004BF0  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14596   004BF2  0E00               	movlw	0
 14597   004BF4  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14598   004BF6  0E80               	movlw	128
 14599   004BF8  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14600   004BFA  502E               	movf	___flge@ff2^0,w,c
 14601   004BFC  5C2A               	subwf	___flge@ff1^0,w,c
 14602   004BFE  502F               	movf	(___flge@ff2+1)^0,w,c
 14603   004C00  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14604   004C02  5030               	movf	(___flge@ff2+2)^0,w,c
 14605   004C04  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14606   004C06  5031               	movf	(___flge@ff2+3)^0,w,c
 14607   004C08  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14608   004C0A  B0D8               	btfsc	status,0,c
 14609   004C0C  EF0A  F026         	goto	u4061
 14610   004C10  EF0C  F026         	goto	u4060
 14611   004C14                     u4061:
 14612   004C14  EF0F  F026         	goto	l4453
 14613   004C18                     u4060:
 14614   004C18  90D8               	bcf	status,0,c
 14615   004C1A  EF10  F026         	goto	l944
 14616   004C1E                     l4453:
 14617   004C1E  80D8               	bsf	status,0,c
 14618   004C20                     l944:
 14619   004C20  0012               	return		;funcret
 14620   004C22                     __end_of___flge:
 14621                           	callstack 0
 14622                           
 14623 ;; *************** function ___fleq *****************
 14624 ;; Defined at:
 14625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  ff1             4   49[COMRAM] unsigned char 
 14628 ;;  ff2             4   53[COMRAM] unsigned char 
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;		None
 14631 ;; Return value:  Size  Location     Type
 14632 ;;		None               void
 14633 ;; Registers used:
 14634 ;;		wreg, status,2, status,0
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14640 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14643 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14644 ;;Total ram usage:       12 bytes
 14645 ;; Hardware stack levels used: 1
 14646 ;; Hardware stack levels required when called: 1
 14647 ;; This function calls:
 14648 ;;		Nothing
 14649 ;; This function is called by:
 14650 ;;		_Colour_decider
 14651 ;;		_efgtoa
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655                           	psect	text77
 14656   005000                     __ptext77:
 14657                           	callstack 0
 14658   005000                     ___fleq:
 14659                           	callstack 25
 14660   005000  0E00               	movlw	0
 14661   005002  1432               	andwf	___fleq@ff1^0,w,c
 14662   005004  6E3A               	movwf	??___fleq^0,c
 14663   005006  0E00               	movlw	0
 14664   005008  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14665   00500A  6E3B               	movwf	(??___fleq+1)^0,c
 14666   00500C  0E80               	movlw	128
 14667   00500E  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14668   005010  6E3C               	movwf	(??___fleq+2)^0,c
 14669   005012  0E7F               	movlw	127
 14670   005014  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14671   005016  6E3D               	movwf	(??___fleq+3)^0,c
 14672   005018  503A               	movf	??___fleq^0,w,c
 14673   00501A  103B               	iorwf	(??___fleq+1)^0,w,c
 14674   00501C  103C               	iorwf	(??___fleq+2)^0,w,c
 14675   00501E  103D               	iorwf	(??___fleq+3)^0,w,c
 14676   005020  A4D8               	btfss	status,2,c
 14677   005022  EF15  F028         	goto	u3991
 14678   005026  EF17  F028         	goto	u3990
 14679   00502A                     u3991:
 14680   00502A  EF1F  F028         	goto	l4423
 14681   00502E                     u3990:
 14682   00502E  0E00               	movlw	0
 14683   005030  6E32               	movwf	___fleq@ff1^0,c
 14684   005032  0E00               	movlw	0
 14685   005034  6E33               	movwf	(___fleq@ff1+1)^0,c
 14686   005036  0E00               	movlw	0
 14687   005038  6E34               	movwf	(___fleq@ff1+2)^0,c
 14688   00503A  0E00               	movlw	0
 14689   00503C  6E35               	movwf	(___fleq@ff1+3)^0,c
 14690   00503E                     l4423:
 14691   00503E  0E00               	movlw	0
 14692   005040  1436               	andwf	___fleq@ff2^0,w,c
 14693   005042  6E3A               	movwf	??___fleq^0,c
 14694   005044  0E00               	movlw	0
 14695   005046  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14696   005048  6E3B               	movwf	(??___fleq+1)^0,c
 14697   00504A  0E80               	movlw	128
 14698   00504C  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14699   00504E  6E3C               	movwf	(??___fleq+2)^0,c
 14700   005050  0E7F               	movlw	127
 14701   005052  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14702   005054  6E3D               	movwf	(??___fleq+3)^0,c
 14703   005056  503A               	movf	??___fleq^0,w,c
 14704   005058  103B               	iorwf	(??___fleq+1)^0,w,c
 14705   00505A  103C               	iorwf	(??___fleq+2)^0,w,c
 14706   00505C  103D               	iorwf	(??___fleq+3)^0,w,c
 14707   00505E  A4D8               	btfss	status,2,c
 14708   005060  EF34  F028         	goto	u4001
 14709   005064  EF36  F028         	goto	u4000
 14710   005068                     u4001:
 14711   005068  EF3E  F028         	goto	l4427
 14712   00506C                     u4000:
 14713   00506C  0E00               	movlw	0
 14714   00506E  6E36               	movwf	___fleq@ff2^0,c
 14715   005070  0E00               	movlw	0
 14716   005072  6E37               	movwf	(___fleq@ff2+1)^0,c
 14717   005074  0E00               	movlw	0
 14718   005076  6E38               	movwf	(___fleq@ff2+2)^0,c
 14719   005078  0E00               	movlw	0
 14720   00507A  6E39               	movwf	(___fleq@ff2+3)^0,c
 14721   00507C                     l4427:
 14722   00507C  5036               	movf	___fleq@ff2^0,w,c
 14723   00507E  1832               	xorwf	___fleq@ff1^0,w,c
 14724   005080  E10F               	bnz	u4010
 14725   005082  5037               	movf	(___fleq@ff2+1)^0,w,c
 14726   005084  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14727   005086  E10C               	bnz	u4010
 14728   005088  5038               	movf	(___fleq@ff2+2)^0,w,c
 14729   00508A  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14730   00508C  E109               	bnz	u4010
 14731   00508E  5039               	movf	(___fleq@ff2+3)^0,w,c
 14732   005090  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14733   005092  B4D8               	btfsc	status,2,c
 14734   005094  EF4E  F028         	goto	u4011
 14735   005098  EF50  F028         	goto	u4010
 14736   00509C                     u4011:
 14737   00509C  EF53  F028         	goto	l4431
 14738   0050A0                     u4010:
 14739   0050A0  90D8               	bcf	status,0,c
 14740   0050A2  EF54  F028         	goto	l933
 14741   0050A6                     l4431:
 14742   0050A6  80D8               	bsf	status,0,c
 14743   0050A8                     l933:
 14744   0050A8  0012               	return		;funcret
 14745   0050AA                     __end_of___fleq:
 14746                           	callstack 0
 14747                           
 14748 ;; *************** function ___fldiv *****************
 14749 ;; Defined at:
 14750 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;  b               4   49[COMRAM] unsigned char 
 14753 ;;  a               4   53[COMRAM] unsigned char 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;  grs             4   68[COMRAM] unsigned long 
 14756 ;;  rem             4   61[COMRAM] unsigned long 
 14757 ;;  new_exp         2   66[COMRAM] short 
 14758 ;;  aexp            1   73[COMRAM] unsigned char 
 14759 ;;  bexp            1   72[COMRAM] unsigned char 
 14760 ;;  sign            1   65[COMRAM] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  4   49[COMRAM] unsigned char 
 14763 ;; Registers used:
 14764 ;;		wreg, status,2, status,0
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14771 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14773 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14774 ;;Total ram usage:       25 bytes
 14775 ;; Hardware stack levels used: 1
 14776 ;; Hardware stack levels required when called: 1
 14777 ;; This function calls:
 14778 ;;		Nothing
 14779 ;; This function is called by:
 14780 ;;		_colour_rel
 14781 ;;		_Colour_decider
 14782 ;;		_efgtoa
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text78
 14787   0030EE                     __ptext78:
 14788                           	callstack 0
 14789   0030EE                     ___fldiv:
 14790                           	callstack 25
 14791   0030EE  5035               	movf	(___fldiv@b+3)^0,w,c
 14792   0030F0  0B80               	andlw	128
 14793   0030F2  6E42               	movwf	___fldiv@sign^0,c
 14794   0030F4  5035               	movf	(___fldiv@b+3)^0,w,c
 14795   0030F6  2435               	addwf	(___fldiv@b+3)^0,w,c
 14796   0030F8  6E49               	movwf	___fldiv@bexp^0,c
 14797   0030FA  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14798   0030FC  EF82  F018         	goto	u3571
 14799   003100  EF84  F018         	goto	u3570
 14800   003104                     u3571:
 14801   003104  EF85  F018         	goto	l4151
 14802   003108                     u3570:
 14803   003108  8049               	bsf	___fldiv@bexp^0,0,c
 14804   00310A                     l4151:
 14805   00310A  5049               	movf	___fldiv@bexp^0,w,c
 14806   00310C  B4D8               	btfsc	status,2,c
 14807   00310E  EF8B  F018         	goto	u3581
 14808   003112  EF8D  F018         	goto	u3580
 14809   003116                     u3581:
 14810   003116  EFA2  F018         	goto	l4161
 14811   00311A                     u3580:
 14812   00311A  2849               	incf	___fldiv@bexp^0,w,c
 14813   00311C  A4D8               	btfss	status,2,c
 14814   00311E  EF93  F018         	goto	u3591
 14815   003122  EF95  F018         	goto	u3590
 14816   003126                     u3591:
 14817   003126  EF9D  F018         	goto	l4157
 14818   00312A                     u3590:
 14819   00312A  0E00               	movlw	0
 14820   00312C  6E32               	movwf	___fldiv@b^0,c
 14821   00312E  0E00               	movlw	0
 14822   003130  6E33               	movwf	(___fldiv@b+1)^0,c
 14823   003132  0E00               	movlw	0
 14824   003134  6E34               	movwf	(___fldiv@b+2)^0,c
 14825   003136  0E00               	movlw	0
 14826   003138  6E35               	movwf	(___fldiv@b+3)^0,c
 14827   00313A                     l4157:
 14828   00313A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14829   00313C  0E00               	movlw	0
 14830   00313E  6E35               	movwf	(___fldiv@b+3)^0,c
 14831   003140  EFAA  F018         	goto	l4163
 14832   003144                     l4161:
 14833   003144  0E00               	movlw	0
 14834   003146  6E32               	movwf	___fldiv@b^0,c
 14835   003148  0E00               	movlw	0
 14836   00314A  6E33               	movwf	(___fldiv@b+1)^0,c
 14837   00314C  0E00               	movlw	0
 14838   00314E  6E34               	movwf	(___fldiv@b+2)^0,c
 14839   003150  0E00               	movlw	0
 14840   003152  6E35               	movwf	(___fldiv@b+3)^0,c
 14841   003154                     l4163:
 14842   003154  5039               	movf	(___fldiv@a+3)^0,w,c
 14843   003156  0B80               	andlw	128
 14844   003158  1A42               	xorwf	___fldiv@sign^0,f,c
 14845   00315A  5039               	movf	(___fldiv@a+3)^0,w,c
 14846   00315C  2439               	addwf	(___fldiv@a+3)^0,w,c
 14847   00315E  6E4A               	movwf	___fldiv@aexp^0,c
 14848   003160  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14849   003162  EFB5  F018         	goto	u3601
 14850   003166  EFB7  F018         	goto	u3600
 14851   00316A                     u3601:
 14852   00316A  EFB8  F018         	goto	l4171
 14853   00316E                     u3600:
 14854   00316E  804A               	bsf	___fldiv@aexp^0,0,c
 14855   003170                     l4171:
 14856   003170  504A               	movf	___fldiv@aexp^0,w,c
 14857   003172  B4D8               	btfsc	status,2,c
 14858   003174  EFBE  F018         	goto	u3611
 14859   003178  EFC0  F018         	goto	u3610
 14860   00317C                     u3611:
 14861   00317C  EFD5  F018         	goto	l4181
 14862   003180                     u3610:
 14863   003180  284A               	incf	___fldiv@aexp^0,w,c
 14864   003182  A4D8               	btfss	status,2,c
 14865   003184  EFC6  F018         	goto	u3621
 14866   003188  EFC8  F018         	goto	u3620
 14867   00318C                     u3621:
 14868   00318C  EFD0  F018         	goto	l4177
 14869   003190                     u3620:
 14870   003190  0E00               	movlw	0
 14871   003192  6E36               	movwf	___fldiv@a^0,c
 14872   003194  0E00               	movlw	0
 14873   003196  6E37               	movwf	(___fldiv@a+1)^0,c
 14874   003198  0E00               	movlw	0
 14875   00319A  6E38               	movwf	(___fldiv@a+2)^0,c
 14876   00319C  0E00               	movlw	0
 14877   00319E  6E39               	movwf	(___fldiv@a+3)^0,c
 14878   0031A0                     l4177:
 14879   0031A0  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14880   0031A2  0E00               	movlw	0
 14881   0031A4  6E39               	movwf	(___fldiv@a+3)^0,c
 14882   0031A6  EFDD  F018         	goto	l4183
 14883   0031AA                     l4181:
 14884   0031AA  0E00               	movlw	0
 14885   0031AC  6E36               	movwf	___fldiv@a^0,c
 14886   0031AE  0E00               	movlw	0
 14887   0031B0  6E37               	movwf	(___fldiv@a+1)^0,c
 14888   0031B2  0E00               	movlw	0
 14889   0031B4  6E38               	movwf	(___fldiv@a+2)^0,c
 14890   0031B6  0E00               	movlw	0
 14891   0031B8  6E39               	movwf	(___fldiv@a+3)^0,c
 14892   0031BA                     l4183:
 14893   0031BA  5036               	movf	___fldiv@a^0,w,c
 14894   0031BC  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14895   0031BE  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14896   0031C0  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14897   0031C2  A4D8               	btfss	status,2,c
 14898   0031C4  EFE6  F018         	goto	u3631
 14899   0031C8  EFE8  F018         	goto	u3630
 14900   0031CC                     u3631:
 14901   0031CC  EF00  F019         	goto	l4195
 14902   0031D0                     u3630:
 14903   0031D0  0E00               	movlw	0
 14904   0031D2  6E32               	movwf	___fldiv@b^0,c
 14905   0031D4  0E00               	movlw	0
 14906   0031D6  6E33               	movwf	(___fldiv@b+1)^0,c
 14907   0031D8  0E00               	movlw	0
 14908   0031DA  6E34               	movwf	(___fldiv@b+2)^0,c
 14909   0031DC  0E00               	movlw	0
 14910   0031DE  6E35               	movwf	(___fldiv@b+3)^0,c
 14911   0031E0  0E80               	movlw	128
 14912   0031E2  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14913   0031E4  0E7F               	movlw	127
 14914   0031E6  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14915   0031E8                     l4189:
 14916   0031E8  5042               	movf	___fldiv@sign^0,w,c
 14917   0031EA  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14918   0031EC  C032  F032         	movff	___fldiv@b,?___fldiv
 14919   0031F0  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14920   0031F4  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14921   0031F8  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14922   0031FC  EF43  F01A         	goto	l1256
 14923   003200                     l4195:
 14924   003200  5049               	movf	___fldiv@bexp^0,w,c
 14925   003202  A4D8               	btfss	status,2,c
 14926   003204  EF06  F019         	goto	u3641
 14927   003208  EF08  F019         	goto	u3640
 14928   00320C                     u3641:
 14929   00320C  EF12  F019         	goto	l4203
 14930   003210                     u3640:
 14931   003210  0E00               	movlw	0
 14932   003212  6E32               	movwf	?___fldiv^0,c
 14933   003214  0E00               	movlw	0
 14934   003216  6E33               	movwf	(?___fldiv+1)^0,c
 14935   003218  0E00               	movlw	0
 14936   00321A  6E34               	movwf	(?___fldiv+2)^0,c
 14937   00321C  0E00               	movlw	0
 14938   00321E  6E35               	movwf	(?___fldiv+3)^0,c
 14939   003220  EF43  F01A         	goto	l1256
 14940   003224                     l4203:
 14941   003224  504A               	movf	___fldiv@aexp^0,w,c
 14942   003226  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14943   00322A  6A3B               	clrf	(??___fldiv+1)^0,c
 14944   00322C  5E3A               	subwf	??___fldiv^0,f,c
 14945   00322E  0E00               	movlw	0
 14946   003230  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14947   003232  0E7F               	movlw	127
 14948   003234  243A               	addwf	??___fldiv^0,w,c
 14949   003236  6E43               	movwf	___fldiv@new_exp^0,c
 14950   003238  0E00               	movlw	0
 14951   00323A  203B               	addwfc	(??___fldiv+1)^0,w,c
 14952   00323C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14953   00323E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14954   003242  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14955   003246  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14956   00324A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14957   00324E  0E00               	movlw	0
 14958   003250  6E32               	movwf	___fldiv@b^0,c
 14959   003252  0E00               	movlw	0
 14960   003254  6E33               	movwf	(___fldiv@b+1)^0,c
 14961   003256  0E00               	movlw	0
 14962   003258  6E34               	movwf	(___fldiv@b+2)^0,c
 14963   00325A  0E00               	movlw	0
 14964   00325C  6E35               	movwf	(___fldiv@b+3)^0,c
 14965   00325E  0E00               	movlw	0
 14966   003260  6E45               	movwf	___fldiv@grs^0,c
 14967   003262  0E00               	movlw	0
 14968   003264  6E46               	movwf	(___fldiv@grs+1)^0,c
 14969   003266  0E00               	movlw	0
 14970   003268  6E47               	movwf	(___fldiv@grs+2)^0,c
 14971   00326A  0E00               	movlw	0
 14972   00326C  6E48               	movwf	(___fldiv@grs+3)^0,c
 14973   00326E  0E00               	movlw	0
 14974   003270  6E4A               	movwf	___fldiv@aexp^0,c
 14975   003272  EF73  F019         	goto	l1258
 14976   003276                     l4213:
 14977   003276  504A               	movf	___fldiv@aexp^0,w,c
 14978   003278  B4D8               	btfsc	status,2,c
 14979   00327A  EF41  F019         	goto	u3651
 14980   00327E  EF43  F019         	goto	u3650
 14981   003282                     u3651:
 14982   003282  EF5A  F019         	goto	l4221
 14983   003286                     u3650:
 14984   003286  90D8               	bcf	status,0,c
 14985   003288  363E               	rlcf	___fldiv@rem^0,f,c
 14986   00328A  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14987   00328C  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14988   00328E  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14989   003290  90D8               	bcf	status,0,c
 14990   003292  3632               	rlcf	___fldiv@b^0,f,c
 14991   003294  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14992   003296  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14993   003298  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14994   00329A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14995   00329C  EF52  F019         	goto	u3661
 14996   0032A0  EF54  F019         	goto	u3660
 14997   0032A4                     u3661:
 14998   0032A4  EF55  F019         	goto	l1261
 14999   0032A8                     u3660:
 15000   0032A8  8032               	bsf	___fldiv@b^0,0,c
 15001   0032AA                     l1261:
 15002   0032AA  90D8               	bcf	status,0,c
 15003   0032AC  3645               	rlcf	___fldiv@grs^0,f,c
 15004   0032AE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15005   0032B0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15006   0032B2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15007   0032B4                     l4221:
 15008   0032B4  5036               	movf	___fldiv@a^0,w,c
 15009   0032B6  5C3E               	subwf	___fldiv@rem^0,w,c
 15010   0032B8  5037               	movf	(___fldiv@a+1)^0,w,c
 15011   0032BA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15012   0032BC  5038               	movf	(___fldiv@a+2)^0,w,c
 15013   0032BE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15014   0032C0  5039               	movf	(___fldiv@a+3)^0,w,c
 15015   0032C2  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15016   0032C4  A0D8               	btfss	status,0,c
 15017   0032C6  EF67  F019         	goto	u3671
 15018   0032CA  EF69  F019         	goto	u3670
 15019   0032CE                     u3671:
 15020   0032CE  EF72  F019         	goto	l4227
 15021   0032D2                     u3670:
 15022   0032D2  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15023   0032D4  5036               	movf	___fldiv@a^0,w,c
 15024   0032D6  5E3E               	subwf	___fldiv@rem^0,f,c
 15025   0032D8  5037               	movf	(___fldiv@a+1)^0,w,c
 15026   0032DA  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15027   0032DC  5038               	movf	(___fldiv@a+2)^0,w,c
 15028   0032DE  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15029   0032E0  5039               	movf	(___fldiv@a+3)^0,w,c
 15030   0032E2  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15031   0032E4                     l4227:
 15032   0032E4  2A4A               	incf	___fldiv@aexp^0,f,c
 15033   0032E6                     l1258:
 15034   0032E6  0E19               	movlw	25
 15035   0032E8  644A               	cpfsgt	___fldiv@aexp^0,c
 15036   0032EA  EF79  F019         	goto	u3681
 15037   0032EE  EF7B  F019         	goto	u3680
 15038   0032F2                     u3681:
 15039   0032F2  EF3B  F019         	goto	l4213
 15040   0032F6                     u3680:
 15041   0032F6  503E               	movf	___fldiv@rem^0,w,c
 15042   0032F8  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15043   0032FA  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15044   0032FC  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15045   0032FE  B4D8               	btfsc	status,2,c
 15046   003300  EF84  F019         	goto	u3691
 15047   003304  EF86  F019         	goto	u3690
 15048   003308                     u3691:
 15049   003308  EF9E  F019         	goto	l4239
 15050   00330C                     u3690:
 15051   00330C  8045               	bsf	___fldiv@grs^0,0,c
 15052   00330E  EF9E  F019         	goto	l4239
 15053   003312                     l4233:
 15054   003312  90D8               	bcf	status,0,c
 15055   003314  3632               	rlcf	___fldiv@b^0,f,c
 15056   003316  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15057   003318  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15058   00331A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15059   00331C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15060   00331E  EF93  F019         	goto	u3701
 15061   003322  EF95  F019         	goto	u3700
 15062   003326                     u3701:
 15063   003326  EF96  F019         	goto	l1267
 15064   00332A                     u3700:
 15065   00332A  8032               	bsf	___fldiv@b^0,0,c
 15066   00332C                     l1267:
 15067   00332C  90D8               	bcf	status,0,c
 15068   00332E  3645               	rlcf	___fldiv@grs^0,f,c
 15069   003330  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15070   003332  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15071   003334  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15072   003336  0643               	decf	___fldiv@new_exp^0,f,c
 15073   003338  A0D8               	btfss	status,0,c
 15074   00333A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15075   00333C                     l4239:
 15076   00333C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15077   00333E  EFA3  F019         	goto	u3711
 15078   003342  EFA5  F019         	goto	u3710
 15079   003346                     u3711:
 15080   003346  EF89  F019         	goto	l4233
 15081   00334A                     u3710:
 15082   00334A  0E00               	movlw	0
 15083   00334C  6E4A               	movwf	___fldiv@aexp^0,c
 15084   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15085   003350  EFAC  F019         	goto	u3721
 15086   003354  EFAE  F019         	goto	u3720
 15087   003358                     u3721:
 15088   003358  EFD2  F019         	goto	l1269
 15089   00335C                     u3720:
 15090   00335C  0EFF               	movlw	255
 15091   00335E  1445               	andwf	___fldiv@grs^0,w,c
 15092   003360  6E3A               	movwf	??___fldiv^0,c
 15093   003362  0EFF               	movlw	255
 15094   003364  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15095   003366  6E3B               	movwf	(??___fldiv+1)^0,c
 15096   003368  0EFF               	movlw	255
 15097   00336A  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15098   00336C  6E3C               	movwf	(??___fldiv+2)^0,c
 15099   00336E  0E7F               	movlw	127
 15100   003370  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15101   003372  6E3D               	movwf	(??___fldiv+3)^0,c
 15102   003374  503A               	movf	??___fldiv^0,w,c
 15103   003376  103B               	iorwf	(??___fldiv+1)^0,w,c
 15104   003378  103C               	iorwf	(??___fldiv+2)^0,w,c
 15105   00337A  103D               	iorwf	(??___fldiv+3)^0,w,c
 15106   00337C  B4D8               	btfsc	status,2,c
 15107   00337E  EFC3  F019         	goto	u3731
 15108   003382  EFC5  F019         	goto	u3730
 15109   003386                     u3731:
 15110   003386  EFC9  F019         	goto	l1270
 15111   00338A                     u3730:
 15112   00338A                     l4247:
 15113   00338A  0E01               	movlw	1
 15114   00338C  6E4A               	movwf	___fldiv@aexp^0,c
 15115   00338E  EFD2  F019         	goto	l1269
 15116   003392                     l1270:
 15117   003392  A032               	btfss	___fldiv@b^0,0,c
 15118   003394  EFCE  F019         	goto	u3741
 15119   003398  EFD0  F019         	goto	u3740
 15120   00339C                     u3741:
 15121   00339C  EFD2  F019         	goto	l1269
 15122   0033A0                     u3740:
 15123   0033A0  EFC5  F019         	goto	l4247
 15124   0033A4                     l1269:
 15125   0033A4  504A               	movf	___fldiv@aexp^0,w,c
 15126   0033A6  B4D8               	btfsc	status,2,c
 15127   0033A8  EFD8  F019         	goto	u3751
 15128   0033AC  EFDA  F019         	goto	u3750
 15129   0033B0                     u3751:
 15130   0033B0  EFFE  F019         	goto	l4259
 15131   0033B4                     u3750:
 15132   0033B4  0E01               	movlw	1
 15133   0033B6  2632               	addwf	___fldiv@b^0,f,c
 15134   0033B8  0E00               	movlw	0
 15135   0033BA  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15136   0033BC  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15137   0033BE  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15138   0033C0  A035               	btfss	(___fldiv@b+3)^0,0,c
 15139   0033C2  EFE5  F019         	goto	u3761
 15140   0033C6  EFE7  F019         	goto	u3760
 15141   0033CA                     u3761:
 15142   0033CA  EFFE  F019         	goto	l4259
 15143   0033CE                     u3760:
 15144   0033CE  C032  F03A         	movff	___fldiv@b,??___fldiv
 15145   0033D2  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15146   0033D6  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15147   0033DA  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15148   0033DE  343D               	rlcf	(??___fldiv+3)^0,w,c
 15149   0033E0  323D               	rrcf	(??___fldiv+3)^0,f,c
 15150   0033E2  323C               	rrcf	(??___fldiv+2)^0,f,c
 15151   0033E4  323B               	rrcf	(??___fldiv+1)^0,f,c
 15152   0033E6  323A               	rrcf	??___fldiv^0,f,c
 15153   0033E8  C03A  F032         	movff	??___fldiv,___fldiv@b
 15154   0033EC  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15155   0033F0  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15156   0033F4  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15157   0033F8  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15158   0033FA  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15159   0033FC                     l4259:
 15160   0033FC  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15161   0033FE  EF09  F01A         	goto	u3771
 15162   003402  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15163   003404  E108               	bnz	u3770
 15164   003406  2843               	incf	___fldiv@new_exp^0,w,c
 15165   003408  A0D8               	btfss	status,0,c
 15166   00340A  EF09  F01A         	goto	u3771
 15167   00340E  EF0B  F01A         	goto	u3770
 15168   003412                     u3771:
 15169   003412  EF16  F01A         	goto	l4263
 15170   003416                     u3770:
 15171   003416  0E00               	movlw	0
 15172   003418  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15173   00341A  6843               	setf	___fldiv@new_exp^0,c
 15174   00341C  0E00               	movlw	0
 15175   00341E  6E32               	movwf	___fldiv@b^0,c
 15176   003420  0E00               	movlw	0
 15177   003422  6E33               	movwf	(___fldiv@b+1)^0,c
 15178   003424  0E00               	movlw	0
 15179   003426  6E34               	movwf	(___fldiv@b+2)^0,c
 15180   003428  0E00               	movlw	0
 15181   00342A  6E35               	movwf	(___fldiv@b+3)^0,c
 15182   00342C                     l4263:
 15183   00342C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15184   00342E  EF23  F01A         	goto	u3780
 15185   003432  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15186   003434  E106               	bnz	u3781
 15187   003436  0443               	decf	___fldiv@new_exp^0,w,c
 15188   003438  B0D8               	btfsc	status,0,c
 15189   00343A  EF21  F01A         	goto	u3781
 15190   00343E  EF23  F01A         	goto	u3780
 15191   003442                     u3781:
 15192   003442  EF31  F01A         	goto	l4267
 15193   003446                     u3780:
 15194   003446  0E00               	movlw	0
 15195   003448  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15196   00344A  0E00               	movlw	0
 15197   00344C  6E43               	movwf	___fldiv@new_exp^0,c
 15198   00344E  0E00               	movlw	0
 15199   003450  6E32               	movwf	___fldiv@b^0,c
 15200   003452  0E00               	movlw	0
 15201   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 15202   003456  0E00               	movlw	0
 15203   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 15204   00345A  0E00               	movlw	0
 15205   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 15206   00345E  0E00               	movlw	0
 15207   003460  6E42               	movwf	___fldiv@sign^0,c
 15208   003462                     l4267:
 15209   003462  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15210   003466  A049               	btfss	___fldiv@bexp^0,0,c
 15211   003468  EF38  F01A         	goto	u3791
 15212   00346C  EF3A  F01A         	goto	u3790
 15213   003470                     u3791:
 15214   003470  EF3D  F01A         	goto	l4273
 15215   003474                     u3790:
 15216   003474  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15217   003476  EF3E  F01A         	goto	l4275
 15218   00347A                     l4273:
 15219   00347A  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15220   00347C                     l4275:
 15221   00347C  90D8               	bcf	status,0,c
 15222   00347E  3049               	rrcf	___fldiv@bexp^0,w,c
 15223   003480  6E35               	movwf	(___fldiv@b+3)^0,c
 15224   003482  EFF4  F018         	goto	l4189
 15225   003486                     l1256:
 15226   003486  0012               	return		;funcret
 15227   003488                     __end_of___fldiv:
 15228                           	callstack 0
 15229                           
 15230 ;; *************** function _HighISR *****************
 15231 ;; Defined at:
 15232 ;;		line 23 in file "interrupts.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;		None
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;		None
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      void 
 15239 ;; Registers used:
 15240 ;;		wreg, status,2
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/0
 15243 ;;		On exit  : 0/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15250 ;;Total ram usage:        0 bytes
 15251 ;; Hardware stack levels used: 1
 15252 ;; This function calls:
 15253 ;;		Nothing
 15254 ;; This function is called by:
 15255 ;;		Interrupt level 2
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	intcode
 15260   000008                     __pintcode:
 15261                           	callstack 0
 15262   000008                     _HighISR:
 15263                           	callstack 22
 15264                           
 15265                           ;incstack = 0
 15266   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15267   00000A                     
 15268                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15269   00000A  010E               	movlb	14	; () banked
 15270   00000C  AB33               	btfss	51,5,b	;volatile
 15271   00000E  EF0B  F000         	goto	i2u565_41
 15272   000012  EF0D  F000         	goto	i2u565_40
 15273   000016                     i2u565_41:
 15274   000016  EF18  F000         	goto	i2l225
 15275   00001A                     i2u565_40:
 15276   00001A                     
 15277                           ; BSR set to: 14
 15278                           ;interrupts.c: 26:         TMR0H=0;
 15279   00001A  0E00               	movlw	0
 15280   00001C  6ED4               	movwf	212,c	;volatile
 15281                           
 15282                           ;interrupts.c: 27:         TMR0L=0;
 15283   00001E  0E00               	movlw	0
 15284   000020  6ED3               	movwf	211,c	;volatile
 15285                           
 15286                           ;interrupts.c: 28:         lost_flag=1;
 15287   000022  0E00               	movlw	0
 15288   000024  0101               	movlb	1	; () banked
 15289   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15290   000028  0E01               	movlw	1
 15291   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15292   00002C                     
 15293                           ; BSR set to: 1
 15294                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15295   00002C  010E               	movlb	14	; () banked
 15296   00002E  9B33               	bcf	51,5,b	;volatile
 15297   000030                     i2l225:
 15298                           
 15299                           ; BSR set to: 14
 15300   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15301   000032  0011               	retfie		f
 15302   000034                     __end_of_HighISR:
 15303                           	callstack 0
 15304                           
 15305                           	psect	rparam
 15306   000000                     
 15307                           	psect	temp
 15308   00005F                     btemp:
 15309                           	callstack 0
 15310   00005F                     	ds	1
 15311   000000                     int$flags	set	btemp
 15312   000000                     wtemp8	set	btemp+1
 15313   000000                     ttemp5	set	btemp+1
 15314   000000                     ttemp6	set	btemp+4
 15315   000000                     ttemp7	set	btemp+8
 15316                           
 15317                           	psect	idloc
 15318                           
 15319                           ;Config register IDLOC0 @ 0x200000
 15320                           ;	unspecified, using default values
 15321   200000                     	org	2097152
 15322   200000  0FFF               	dw	4095
 15323                           
 15324                           ;Config register IDLOC1 @ 0x200002
 15325                           ;	unspecified, using default values
 15326   200002                     	org	2097154
 15327   200002  0FFF               	dw	4095
 15328                           
 15329                           ;Config register IDLOC2 @ 0x200004
 15330                           ;	unspecified, using default values
 15331   200004                     	org	2097156
 15332   200004  0FFF               	dw	4095
 15333                           
 15334                           ;Config register IDLOC3 @ 0x200006
 15335                           ;	unspecified, using default values
 15336   200006                     	org	2097158
 15337   200006  0FFF               	dw	4095
 15338                           
 15339                           ;Config register IDLOC4 @ 0x200008
 15340                           ;	unspecified, using default values
 15341   200008                     	org	2097160
 15342   200008  0FFF               	dw	4095
 15343                           
 15344                           ;Config register IDLOC5 @ 0x20000A
 15345                           ;	unspecified, using default values
 15346   20000A                     	org	2097162
 15347   20000A  0FFF               	dw	4095
 15348                           
 15349                           ;Config register IDLOC6 @ 0x20000C
 15350                           ;	unspecified, using default values
 15351   20000C                     	org	2097164
 15352   20000C  0FFF               	dw	4095
 15353                           
 15354                           ;Config register IDLOC7 @ 0x20000E
 15355                           ;	unspecified, using default values
 15356   20000E                     	org	2097166
 15357   20000E  0FFF               	dw	4095
 15358                           
 15359                           	psect	config
 15360                           
 15361                           ;Config register CONFIG1L @ 0x300000
 15362                           ;	External Oscillator mode Selection bits
 15363                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15364                           ;	Power-up default value for COSC bits
 15365                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15366   300000                     	org	3145728
 15367   300000  AA                 	db	170
 15368                           
 15369                           ;Config register CONFIG1H @ 0x300001
 15370                           ;	unspecified, using default values
 15371                           ;	Clock Out Enable bit
 15372                           ;	CLKOUTEN = 0x1, unprogrammed default
 15373                           ;	Clock Switch Enable bit
 15374                           ;	CSWEN = 0x1, unprogrammed default
 15375                           ;	Fail-Safe Clock Monitor Enable bit
 15376                           ;	FCMEN = 0x1, unprogrammed default
 15377   300001                     	org	3145729
 15378   300001  FF                 	db	255
 15379                           
 15380                           ;Config register CONFIG2L @ 0x300002
 15381                           ;	unspecified, using default values
 15382                           ;	Master Clear Enable bit
 15383                           ;	MCLRE = 0x1, unprogrammed default
 15384                           ;	Power-up Timer Enable bit
 15385                           ;	PWRTE = 0x1, unprogrammed default
 15386                           ;	Low-power BOR enable bit
 15387                           ;	LPBOREN = 0x1, unprogrammed default
 15388                           ;	Brown-out Reset Enable bits
 15389                           ;	BOREN = 0x3, unprogrammed default
 15390   300002                     	org	3145730
 15391   300002  FF                 	db	255
 15392                           
 15393                           ;Config register CONFIG2H @ 0x300003
 15394                           ;	unspecified, using default values
 15395                           ;	Brown Out Reset Voltage selection bits
 15396                           ;	BORV = 0x3, unprogrammed default
 15397                           ;	ZCD Disable bit
 15398                           ;	ZCD = 0x1, unprogrammed default
 15399                           ;	PPSLOCK bit One-Way Set Enable bit
 15400                           ;	PPS1WAY = 0x1, unprogrammed default
 15401                           ;	Stack Full/Underflow Reset Enable bit
 15402                           ;	STVREN = 0x1, unprogrammed default
 15403                           ;	Debugger Enable bit
 15404                           ;	DEBUG = 0x1, unprogrammed default
 15405                           ;	Extended Instruction Set Enable bit
 15406                           ;	XINST = 0x1, unprogrammed default
 15407   300003                     	org	3145731
 15408   300003  FF                 	db	255
 15409                           
 15410                           ;Config register CONFIG3L @ 0x300004
 15411                           ;	WDT Period Select bits
 15412                           ;	WDTCPS = 0x1F, unprogrammed default
 15413                           ;	WDT operating mode
 15414                           ;	WDTE = OFF, WDT Disabled
 15415   300004                     	org	3145732
 15416   300004  9F                 	db	159
 15417                           
 15418                           ;Config register CONFIG3H @ 0x300005
 15419                           ;	unspecified, using default values
 15420                           ;	WDT Window Select bits
 15421                           ;	WDTCWS = 0x7, unprogrammed default
 15422                           ;	WDT input clock selector
 15423                           ;	WDTCCS = 0x7, unprogrammed default
 15424   300005                     	org	3145733
 15425   300005  FF                 	db	255
 15426                           
 15427                           ;Config register CONFIG4L @ 0x300006
 15428                           ;	unspecified, using default values
 15429                           ;	Write Protection Block 0
 15430                           ;	WRT0 = 0x1, unprogrammed default
 15431                           ;	Write Protection Block 1
 15432                           ;	WRT1 = 0x1, unprogrammed default
 15433                           ;	Write Protection Block 2
 15434                           ;	WRT2 = 0x1, unprogrammed default
 15435                           ;	Write Protection Block 3
 15436                           ;	WRT3 = 0x1, unprogrammed default
 15437                           ;	Write Protection Block 3
 15438                           ;	WRT4 = 0x1, unprogrammed default
 15439                           ;	Write Protection Block 3
 15440                           ;	WRT5 = 0x1, unprogrammed default
 15441                           ;	Write Protection Block 3
 15442                           ;	WRT6 = 0x1, unprogrammed default
 15443                           ;	Write Protection Block 3
 15444                           ;	WRT7 = 0x1, unprogrammed default
 15445   300006                     	org	3145734
 15446   300006  FF                 	db	255
 15447                           
 15448                           ;Config register CONFIG4H @ 0x300007
 15449                           ;	unspecified, using default values
 15450                           ;	Configuration Register Write Protection bit
 15451                           ;	WRTC = 0x1, unprogrammed default
 15452                           ;	Boot Block Write Protection bit
 15453                           ;	WRTB = 0x1, unprogrammed default
 15454                           ;	Data EEPROM Write Protection bit
 15455                           ;	WRTD = 0x1, unprogrammed default
 15456                           ;	Scanner Enable bit
 15457                           ;	SCANE = 0x1, unprogrammed default
 15458                           ;	Low Voltage Programming Enable bit
 15459                           ;	LVP = 0x1, unprogrammed default
 15460   300007                     	org	3145735
 15461   300007  FF                 	db	255
 15462                           
 15463                           ;Config register CONFIG5L @ 0x300008
 15464                           ;	unspecified, using default values
 15465                           ;	UserNVM Program Memory Code Protection bit
 15466                           ;	CP = 0x1, unprogrammed default
 15467                           ;	DataNVM Memory Code Protection bit
 15468                           ;	CPD = 0x1, unprogrammed default
 15469   300008                     	org	3145736
 15470   300008  FF                 	db	255
 15471                           
 15472                           ;Config register CONFIG5H @ 0x300009
 15473                           ;	unspecified, using default values
 15474   300009                     	org	3145737
 15475   300009  FF                 	db	255
 15476                           
 15477                           ;Config register CONFIG6L @ 0x30000A
 15478                           ;	unspecified, using default values
 15479                           ;	Table Read Protection Block 0
 15480                           ;	EBTR0 = 0x1, unprogrammed default
 15481                           ;	Table Read Protection Block 1
 15482                           ;	EBTR1 = 0x1, unprogrammed default
 15483                           ;	Table Read Protection Block 2
 15484                           ;	EBTR2 = 0x1, unprogrammed default
 15485                           ;	Table Read Protection Block 3
 15486                           ;	EBTR3 = 0x1, unprogrammed default
 15487                           ;	Table Read Protection Block 4
 15488                           ;	EBTR4 = 0x1, unprogrammed default
 15489                           ;	Table Read Protection Block 5
 15490                           ;	EBTR5 = 0x1, unprogrammed default
 15491                           ;	Table Read Protection Block 6
 15492                           ;	EBTR6 = 0x1, unprogrammed default
 15493                           ;	Table Read Protection Block 7
 15494                           ;	EBTR7 = 0x1, unprogrammed default
 15495   30000A                     	org	3145738
 15496   30000A  FF                 	db	255
 15497                           
 15498                           ;Config register CONFIG6H @ 0x30000B
 15499                           ;	unspecified, using default values
 15500                           ;	Boot Block Table Read Protection bit
 15501                           ;	EBTRB = 0x1, unprogrammed default
 15502   30000B                     	org	3145739
 15503   30000B  FF                 	db	255
 15504                           tosu	equ	0xFFF
 15505                           tosh	equ	0xFFE
 15506                           tosl	equ	0xFFD
 15507                           stkptr	equ	0xFFC
 15508                           pclatu	equ	0xFFB
 15509                           pclath	equ	0xFFA
 15510                           pcl	equ	0xFF9
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           indf0	equ	0xFEF
 15518                           postinc0	equ	0xFEE
 15519                           postdec0	equ	0xFED
 15520                           preinc0	equ	0xFEC
 15521                           plusw0	equ	0xFEB
 15522                           fsr0h	equ	0xFEA
 15523                           fsr0l	equ	0xFE9
 15524                           wreg	equ	0xFE8
 15525                           indf1	equ	0xFE7
 15526                           postinc1	equ	0xFE6
 15527                           postdec1	equ	0xFE5
 15528                           preinc1	equ	0xFE4
 15529                           plusw1	equ	0xFE3
 15530                           fsr1h	equ	0xFE2
 15531                           fsr1l	equ	0xFE1
 15532                           bsr	equ	0xFE0
 15533                           indf2	equ	0xFDF
 15534                           postinc2	equ	0xFDE
 15535                           postdec2	equ	0xFDD
 15536                           preinc2	equ	0xFDC
 15537                           plusw2	equ	0xFDB
 15538                           fsr2h	equ	0xFDA
 15539                           fsr2l	equ	0xFD9
 15540                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    108     222
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2709$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2709$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411479
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23701
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 14:48:52 2023

               _color_read_Red 5B52                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B02                   ___fldiv@sign 0042                _color_read_Blue 5BF2  
                           l51 5B50                             l60 5C40                             l45 5A0C  
                           l54 5BA0                             l63 570A                             l48 6064  
                           l57 5BF0                             l66 37B4                             l76 189C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 422C  
             _color_read_Green 5BA2                readColours@vals 000C              ??_Interrupts_init 0001  
                          l130 5FF6                            l204 5FCC                            l133 5FF8  
                          l142 60DC                            l151 5E3A                            l136 601E  
                          l145 60E6                            l219 60D2                            l139 60F0  
                          l148 60C6                            l510 5F82                            l513 5F9C  
                          l522 5764                            l186 60A2                            l531 57BE  
                          l507 5282                            l195 60A6                            l516 5CDC  
                          l540 5EF6                            l356 237C                            l461 48B2  
                          l525 586E                            l454 53A8                            l198 60BA  
                          l519 5D2A                            l543 564A                            l552 5968  
                          l528 5816                            l632 3D72                            l537 5EB8  
                          l561 4E9E                            l801 4A16                            l546 5A5E  
                          l626 3D72                            l570 42A0                            l378 27B4  
                          l491 5320                            l467 5426                            l475 51E4  
                          l483 5146                            l555 59BA                            l571 4314  
                          l564 4F54                            l580 440A                            l572 4384  
                          l549 5AB0                            l661 6084                            l573 434C  
                          l389 2800                            l558 557E                            l638 3D9A  
                          l671 5F66                            l567 43BA                            l568 424A  
                          l665 56AC                            l674 6044                            l578 43A0  
                          l499 4FFE                            l579 43F0                            l668 5F50  
                          l933 50A8                            l944 4C20                            l939 4BDA  
                          l971 4B1C                            l788 4746                            l948 5F2E  
                          _abs 5E3C                            _pad 5428                            _rel 014C  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1202 29F2  
                         l1211 2CC2                           l1203 29E0                           ?_abs 0013  
                         l1204 29A6                           l1305 30AE                           l1219 2B0C  
                         l1228 2BDC                           l1244 5D70                           l1332 45BE  
                         l1172 5514                           l1261 32AA                           l1229 2BCA  
                         l1165 550C                           l1421 1C30                           l1270 3392  
                         l1343 4556                           l1503 5E72                           l1407 4018  
                         l1423 1A76                           l1256 3486                           l1336 44FA  
                         l1512 422A                           l1352 5916                           l4001 2C82  
                         l1329 4462                           l1258 32E6                           l1506 5E7A  
                         l1418 2296                           l1267 332C                           l4011 2CA2  
                         l4003 2C86                           l1515 416E                           l1523 55D4  
                         l1451 2078                           l1292 30EC                           l1532 5B00  
                         l1269 33A4                           l4013 2CB0                           l4005 2C94  
                         l4021 54AA                           l4101 46F6                           l1526 55E4  
                         l1295 2F7E                           l4015 2CB2                           l4007 2C9A  
                         l4031 54E0                           l4023 54BC                           l4103 4706  
                         l4111 48B8                           l1288 2D88                           l1544 4DE8  
                         l1552 5DF8                           l1384 544A                           l1297 2FF6  
                         l4009 2C9C                           l4033 54F6                           l4025 54C4  
                         l5001 5D12                           l4105 4726                           l4121 4918  
                         l4113 48C6                           l4041 5DB6                           l1393 3E28  
                         l1561 5DB4                           l1298 2FE4                           l1466 3ABA  
                         l4211 326E                           l4203 3224                           l4035 54FE  
                         l4027 54CC                           l4019 54A2                           l4051 4764  
                         l5003 570C                           l5011 57D4                           l4131 498E  
                         l4123 4936                           l4115 48E6                           l1555 60F8  
                         l4043 5DC2                           l1395 3E30                           l1388 54A0  
                         l1396 3E76                           l4221 32B4                           l4213 3276  
                         l4205 323E                           l4301 2D2C                           l4037 5500  
                         l4029 54DA                           l4061 482E                           l4053 47B8  
                         l5005 5720                           l5101 5FDE                           l5013 57EA  
                         l4141 49F6                           l4133 49AE                           l4125 493E  
                         l4117 48EA                           l4109 48B4                           l4045 5DD4  
                         l5021 37FA                           l4231 330C                           l4223 32D2  
                         l4215 3286                           l4207 324E                           l4151 310A  
                         l4311 2D62                           l4303 2D32                           l4039 5506  
                         l4063 4872                           l4055 47CC                           l5007 5738  
                         l5103 5FE0                           l5111 5B02                           l4071 45F2  
                         l4135 49C0                           l4127 4952                           l4119 48F8  
                         l4047 5DD8                           l5031 38A4                           l5023 37FE  
                         l5015 37B6                           l1488 58C4                           l4241 334A  
                         l4233 3312                           l4225 32D4                           l4217 329A  
                         l4209 325E                           l4153 311A                           l4161 3144  
                         l4145 30EE                           l4401 30C2                           l4313 2D72  
                         l4305 2D40                           l5201 4538                           l4057 47D0  
                         l4049 4748                           l5105 5FE2                           l5009 57C0  
                         l5113 5B48                           l4081 4634                           l4073 45F6  
                         l4065 45C0                           l4129 4960                           l4137 49C6  
                         l5041 3902                           l5025 380E                           l5017 37DE  
                         l1498 4D1E                           l4251 33B4                           l4243 334E  
                         l4235 331C                           l4227 32E4                           l4219 32A8  
                         l4171 3170                           l4163 3154                           l4155 312A  
                         l4147 30FA                           l4403 30D0                           l4331 2DF4  
                         l4323 2DBC                           l4315 2D78                           l4307 2D42  
                         l5211 458E                           l5203 4546                           l4059 4812  
                         l5107 5FE4                           l5131 5C38                           l5123 5BA2  
                         l4091 468E                           l4083 4652                           l4075 4604  
                         l4067 45C4                           l4139 49D6                           l5051 3968  
                         l5043 390A                           l5035 38D4                           l5027 382E  
                         l5019 37EC                           l4261 3416                           l4253 33C0  
                         l4245 335C                           l4237 332A                           l4229 32F6  
                         l4173 3180                           l4181 31AA                           l4165 315A  
                         l4157 313A                           l4149 3108                           l4421 502E  
                         l4405 30D2                           l4341 2E3E                           l4333 2E0C  
                         l4325 2DC8                           l4317 2D98                           l4309 2D52  
                         l4413 5D2C                           l5213 459E                           l5205 4564  
                         l5301 0FA2                           l5109 6048                           l5141 5918  
                         l5125 5BE8                           l5117 5B52                           l4093 46BC  
                         l4085 465A                           l4077 4624                           l4069 45D2  
                         l4501 4AEC                           l5061 3A1A                           l5053 399C  
                         l5037 38E4                           l5029 384E                           l5221 5870  
                         l4271 3474                           l4263 342C                           l4255 33CE  
                         l4247 338A                           l4239 333C                           l4191 31EC  
                         l4183 31BA                           l4175 3190                           l4167 3160  
                         l4159 313C                           l4431 50A6                           l4423 503E  
                         l4407 30D8                           l4351 2E94                           l4343 2E4E  
                         l4335 2E18                           l4327 2DD2                           l4319 2DA8  
                         l4415 5D3C                           l5215 45AC                           l5207 4566  
                         l5311 10A0                           l5303 0FF6                           l5231 59BC  
                         l5143 55E6                           l5151 4F7A                           l5119 5B98  
                         l5135 60A6                           l4095 46DC                           l4087 466E  
                         l4079 4628                           l4511 5436                           l4503 4AFC  
                         l5039 38FA                           l5047 3912                           l5223 587C  
                         l4273 347A                           l4265 3446                           l4257 33F8  
                         l4185 31D0                           l4177 31A0                           l4169 316E  
                         l4425 506C                           l4441 4B8A                           l4409 30DC  
                         l4361 2F38                           l4353 2EB0                           l4345 2E5A  
                         l4337 2E24                           l4329 2DE8                           l5217 45AE  
                         l5209 456A                           l5401 1730                           l5321 1170  
                         l5305 1028                           l4601 5284                           l5241 59EE  
                         l5233 59C0                           l5145 5EBA                           l5161 4FDA  
                         l5153 4F92                           l5129 5BF2                           l5137 60B6  
                         l4097 46DE                           l4089 467C                           l3801 4D44  
                         l4521 548C                           l4513 5442                           l4505 4B0C  
                         l5057 39D0                           l6025 3926                           l5049 3944  
                         l5073 3A8E                           l5225 589A                           l4275 347C  
                         l4267 3462                           l4259 33FC                           l4187 31E0  
                         l4195 3200                           l4179 31A2                           l4427 507C  
                         l4419 5000                           l4451 4C18                           l4443 4B9A  
                         l4435 4B1E                           l4371 2F8E                           l4363 2F46  
                         l4355 2EBC                           l4347 2E6A                           l4339 2E32  
                         l4291 2CF0                           l4283 2CC4                           l5411 17B8  
                         l5331 130E                           l5323 11A8                           l5315 10AC  
                         l5307 102E                           l3811 6020                           l4603 52A8  
                         l4611 52F0                           l5251 5A00                           l5243 59F8  
                         l5235 59CA                           l5147 596A                           l5139 5E7C  
                         l5171 4DEA                           l5163 4FF2                           l5155 4F9E  
                         l4099 46F0                           l4523 5E3C                           l3803 4D4E  
                         l4515 5456                           l4531 4C80                           l5067 3A4C  
                         l6027 39E4                           l5059 39FA                           l5227 58BA  
                         l4269 3466                           l4197 3210                           l4189 31E8  
                         l4429 50A0                           l4453 4C1E                           l4445 4BA8  
                         l4437 4B4C                           l4373 2F9C                           l4365 2F64  
                         l4357 2ED8                           l4349 2E84                           l4293 2D00  
                         l4285 2CD0                           l3901 298E                           l3821 281E  
                         l5181 4472                           l5421 17C4                           l5325 11BA  
                         l5333 1366                           l5317 10C0                           l5309 104A  
                         l3813 603C                           l4613 5308                           l4605 52C0  
                         l4621 53D2                           l5165 5818                           l5501 6078  
                         l5261 5A0A                           l5253 5A02                           l5245 59FA  
                         l5237 59DA                           l5173 4EA0                           l5157 4FAA  
                         l5149 4F56                           l4525 5E56                           l3805 4D6C  
                         l4517 546A                           l4509 5428                           l4701 3E7E  
                         l4461 5F1E                           l4541 4CD2                           l4533 4CA8  
                         l6029 3A6E                           l5069 3A7C                           ?_pad 0011  
                         l4199 3210                           l4447 4BBA                           l4439 4B5C  
                         l4383 3006                           l4391 304E                           l4375 2FA0  
                         l4367 2F6E                           l4359 2F02                           l4295 2D10  
                         l4287 2CDE                           l3911 29D2                           l3903 299E  
                         l3831 2852                           l3823 2820                           l5191 44B0  
                         l5183 4488                           l5175 440E                           l5423 17F6  
                         l5431 1834                           l5407 173C                           l5335 1398  
                         l5343 13D6                           l5327 1236                           l5319 1160  
                         l4607 52CC                           l4623 53DE                           l4615 53AA  
                         l5167 582C                           l4631 516C                           l5503 6082  
                         l5255 5A04                           l5247 59FC                           l5239 59E4  
                         l5271 361C                           l5159 4FC2                           l5263 56AE  
                         l3807 4DA2                           l4519 546E                           l4711 3F1C  
                         l4703 3E88                           l4471 4A42                           l4535 4CB4  
                         l4527 4C22                           l4551 5D82                           l5511 42A2  
                         l4449 4BC8                           l4393 3068                           l4385 3012  
                         l4377 2FAE                           l4369 2F7C                           l4297 2D16  
                         l4289 2CE0                           l3913 29D4                           l3905 29B4  
                         l3841 2884                           l3825 2830                           l3833 285A  
                         l3817 2804                           l5193 44E2                           l5177 441E  
                         l5433 1866                           l5425 1828                           l5409 177A  
                         l5361 1522                           l5345 1408                           l5353 1446  
                         l5337 13CA                           l5329 1292                           l5281 0E68  
                         l4609 52D8                           l4617 53AE                           l4625 53F6  
                         l5169 5842                           l4641 51CC                           l4633 5184  
                         l5097 5FCE                           l5257 5A06                           l5249 59FE  
                         l5273 3650                           l5265 3488                           l5601 3C44  
                         l4721 3FE2                           l4705 3E8E                           l4713 3F80  
                         l4457 5EF8                           l4481 4A90                           l4473 4A6C  
                         l4465 4A18                           l4545 4D16                           l4529 4C42  
                         l4561 4090                           l4553 5580                           l4801 1AFE  
                         l5521 4322                           l5513 42F0                           l5505 422C  
                         l4395 307C                           l4387 3020                           l4379 2FDC  
                         l4299 2D26                           l3931 2A5C                           l3923 2A24  
                         l3915 29DE                           l3907 29C0                           l3851 28BA  
                         l3843 288A                           l3835 286A                           l3827 2840  
                         l3819 2810                           l5195 44E4                           l5187 449C  
                         l5179 442C                           l5371 158A                           l5355 1478  
                         l5347 143A                           l5283 0E74                           l4627 540E  
                         l4619 53C6                           l4635 5190                           l4651 50FE  
                         l4643 50AA                           l5099 5FD8                           l5259 5A08  
                         l5275 36E8                           l5267 3554                           l5611 3D1C  
                         l5603 3C70                           l5451 609C                           l4723 3FE8  
                         l4715 3F9A                           l4707 3F10                           l4459 5F0E  
                         l4491 4ABC                           l4475 4A6E                           l4467 4A2E  
                         l4539 4CC0                           l4571 415E                           l4563 40A4  
                         l4555 559E                           l4811 1BBE                           l4803 1B30  
                         l4731 18A4                           l5531 4364                           l5523 432C  
                         l5515 42F4                           l5507 422E                           l4397 3096  
                         l4389 304A                           l3933 2A60                           l3925 2A34  
                         l3917 2A00                           l3941 2A80                           l3909 29C4  
                         l3861 28F6                           l3853 28CA                           l3845 2898  
                         l3837 2870                           l3829 2850                           l5197 44F0  
                         l5189 44A4                           l5373 15C8                           l5357 14AA  
                         l5285 0EA4                           l4661 5222                           l4637 519C  
                         l4629 5148                           l5621 5516                           l4645 50CE  
                         l4653 5116                           l5277 371C                           l5269 3588  
                         l5613 3D46                           l5605 3C9A                           l5453 609E  
                         l5445 6086                           l5461 5FB0                           l4725 3FF8  
                         l4717 3FB8                           l4709 3F16                           l4477 4A7E  
                         l4581 421A                           l4565 40B2                           l4573 4192  
                         l4557 401A                           l4549 5D72                           l4901 20B2  
                         l4821 1C54                           l4805 1B6E                           l4741 18F4  
                         l4733 18B4                           l5541 43A2                           l5533 4366  
                         l5525 432E                           l5517 430C                           l5509 424C  
                         l5701 230C                           l4399 30B2                           l3943 2AA6  
                         l3951 2AFC                           l3935 2A6E                           l3927 2A42  
                         l3919 2A10                           l3871 2914                           l3863 2904  
                         l3855 28CC                           l3847 289A                           l3839 2882  
                         l5199 452C                           l5359 14E4                           l5383 15E0  
                         l5295 0F16                           l5287 0ED8                           l5279 0E3E  
                         l4663 522E                           l4671 5F68                           l4639 51B4  
                         l5623 5552                           l4655 512E                           l4647 50E6  
                         l5551 5690                           l5615 3D86                           l5607 3CC6  
                         l5471 5336                           l5455 60A0                           l5447 6090  
                         l5463 5FB4                           l4719 3FD2                           l4487 4AA8  
                         l4479 4A82                           l4575 41CE                           l4559 403A  
                         l4591 5AD6                           l4903 20BA                           l4911 20DA  
                         l4831 1C88                           l4823 1C5C                           l4807 1B82  
                         l4815 1BFE                           l4751 1930                           l4743 18FC  
                         l4735 18C2                           l5543 43F2                           l5535 437E  
                         l5527 4346                           l5519 430E                           l5711 2328  
                         l5703 2310                           l3961 2B50                           l3953 2B22  
                         l3945 2ADA                           l3937 2A70                           l3929 2A50  
                         l3881 2928                           l3873 2918                           l3865 2908  
                         l3849 28AA                           l3857 28D4                           l5385 1612  
                         l5393 1650                           l5369 1550                           l5297 0F68  
                         l5289 0F0C                           l5553 5766                           l5465 60C8  
                         l4665 523A                           l4657 51E6                           l4673 5F6C  
                         l5625 556A                           l4649 50F2                           l5545 564C  
                         l5617 3D90                           l5609 3CF0                           l5481 5378  
                         l5473 5338                           l5449 6092                           l5457 5F9E  
                         l4681 3DD0                           l4497 4AD0                           l4489 4AB2  
                         l4577 41E2                           l4569 4122                           l4593 5AE2  
                         l4585 5AB2                           l4921 2160                           l4913 20EC  
                         l4905 20CA                           l4841 1CD2                           l4833 1CA0  
                         l4825 1C64                           l4817 1C38                           l4809 1BB6  
                         l4761 1976                           l4745 190C                           l4753 1934  
                         l4737 18C6                           l4729 189E                           l5561 58D8  
                         l5529 435A                           l5537 4384                           l5801 25FC  
                         l5721 2344                           l5713 2330                           l5705 2314  
                         l5641 22A8                           l5633 2298                           l3971 2B7A  
                         l3963 2B5E                           l3955 2B32                           l3947 2ADC  
                         l3939 2A7A                           l3891 293C                           l3883 292C  
                         l3875 291C                           l3867 290C                           l3859 28E4  
                         l5395 1682                           l5387 1644                           l5379 15D4  
                         l5299 0F9A                           l5555 577A                           l4659 520A  
                         l4667 5252                           l4675 5F7C                           l5571 5A0E  
                         l5547 5652                           l5491 539A                           l5483 5382  
                         l5475 533A                           l5467 5322                           l5459 5FA2  
                         l4691 3E48                           l4683 3DE0                           l4499 4ADC  
                         l4579 420A                           l4587 5AC6                           l4595 5AE6  
                         l4931 21DA                           l4923 2194                           l4915 20FE  
                         l4907 20CE                           l4843 1CE6                           l4851 1DDC  
                         l4835 1CB2                           l4827 1C68                           l4819 1C48  
                         l4763 197E                           l4755 195A                           l4771 19C0  
                         l4747 191C                           l4739 18EA                           l5563 58E0  
                         l5539 4392                           l5811 262E                           l5803 2600  
                         l5731 23A4                           l5723 234C                           l5715 2330  
                         l5707 2318                           l5651 22BE                           l5643 22B4  
                         l5635 229C                           l3981 2BAC                           l3973 2B8A  
                         l3965 2B60                           l3949 2AEC                           l3893 2940  
                         l3885 2930                           l3877 2920                           l3869 2910  
                         l5397 16B4                           l5557 5792                           l4669 526A  
                         l5573 5A60                           l4597 5FF8                           l5549 5684  
                         l5581 3ADA                           l5493 539C                           l5485 5384  
                         l5477 5350                           l5469 5334                           l3797 4D20  
                         l4693 3E4E                           l4685 3E00                           l4677 3D9C  
                         l4589 5AD2                           l4941 2248                           l4933 21E2  
                         l4925 219C                           l4917 2102                           l4909 20D4  
                         l4861 1EA8                           l4853 1DFA                           l4845 1D4A  
                         l4829 1C7A                           l4837 1CBA                           l4781 1A0A  
                         l4773 19E6                           l4765 1996                           l4757 196C  
                         l4749 1928                           l5565 58E8                           l5813 2642  
                         l5821 2660                           l5805 2604                           l5741 23E6  
                         l5733 23AA                           l5725 2360                           l5717 2338  
                         l5709 2320                           l5661 22CA                           l5653 22C0  
                         l5645 22B8                           l5637 22A0                           l3991 2C06  
                         l3983 2BC2                           l3967 2B6E                           l3959 2B46  
                         l3975 2B8C                           l3887 2934                           l3879 2924  
                         l3895 2944                           l5399 16F2                           l4599 6008  
                         l4951 60E8                           l5591 3B6E                           l5575 3ABC  
                         l5495 53A6                           l5487 538E                           l5479 5354  
                         l3799 4D32                           l4695 3E5E                           l4687 3E1C  
                         l4679 3DBC                           l4943 2258                           l4935 21F2  
                         l4919 2108                           l4927 21A0                           l4871 1F58  
                         l4863 1EB8                           l4855 1E2E                           l4847 1DA2  
                         l4839 1CC2                           l4791 1A40                           l4775 19F8  
                         l4767 19A0                           l4759 1970                           l5567 5904  
                         l5559 58C6                           l5823 2674                           l5815 2646  
                         l5751 2438                           l5743 2404                           l5735 23B2  
                         l5727 2362                           l5719 2340                           l5671 22D4  
                         l5663 22CC                           l5655 22C4                           l5647 22BA  
                         l5639 22A4                           l3993 2C40                           l3969 2B76  
                         l3977 2B9A                           l3897 2948                           l3889 2938  
                         l5497 6066                           l4953 60EC                           l4961 60E2  
                         l5593 3B98                           l5585 3AEC                           l5577 3AD0  
                         l5489 5390                           l4697 3E6A                           l4689 3E38  
                         l4945 226E                           l4937 2222                           l4929 21BE  
                         l4881 1FBC                           l4873 1F8C                           l4865 1EC8  
                         l4857 1E60                           l4849 1DD6                           l4777 19FC  
                         l5841 26D6                           l5825 2688                           l5833 26A6  
                         l5817 264A                           l5809 261A                           l5761 24A8  
                         l5753 2452                           l5745 2408                           l5737 23C6  
                         l5729 238A                           l5681 22DE                           l5673 22D6  
                         l5665 22CE                           l5657 22C6                           l5649 22BC  
                         l3987 2BEC                           l3995 2C42                           l3979 2B9E  
                         l3899 2972                           l5499 606E                           l4955 60BE  
                         l5595 3BC4                           l5587 3B1A                           l5579 3AD2  
                         l4971 5E08                           l4963 60D4                           l4699 3E72  
                         l4947 2276                           l4939 2230                           l4891 206E  
                         l4883 1FC2                           l4875 1FA0                           l4867 1EFC  
                         l4859 1E76                           l4795 1A86                           l4779 1A02  
                         l5851 2718                           l5835 26BA                           l5827 268C  
                         l5771 2534                           l5763 24B0                           l5755 245E  
                         l5747 240C                           l5739 23D2                           l5691 22EC  
                         l5683 22E0                           l5675 22D8                           l5667 22D0  
                         l5659 22C8                           l3997 2C52                           l3989 2BF8  
                         l4957 60C2                           l4981 5F30                           l5597 3BEE  
                         l5589 3B42                           l4973 5E10                           l4965 60D8  
                         l4893 208A                           l4885 1FCA                           l4869 1F52  
                         l4877 1FA4                           l4797 1A8C                           l4789 1A26  
                         l5861 274A                           l5853 271C                           l5837 26CE  
                         l5845 26EC                           l5829 2690                           l5781 2570  
                         l5773 2540                           l5765 24B8                           l5757 2472  
                         l5749 2420                           l5693 22F0                           l5685 22E2  
                         l5677 22DA                           l5669 22D2                           l3999 2C62  
                         l4991 5CB0                           l4959 60DE                           l4983 5F3C  
                         l5599 3C1A                           l4975 5E36                           l4967 5DFC  
                         l4895 2098                           l4887 1FD6                           l4879 1FB4  
                         l4799 1AC0                           l5863 2766                           l5871 279E  
                         l5847 2700                           l5839 26D2                           l5791 25BA  
                         l5783 2582                           l5775 2554                           l5759 248E  
                         l5767 24C0                           l5695 22F4                           l5687 22E4  
                         l5679 22DC                           l4993 5CC4                           l4985 5F4C  
                         l4977 5E38                           l4969 5E00                           l4897 20A8  
                         l4889 204E                           l5865 277E                           l5849 2714  
                         l5857 2732                           l5793 25BE                           l5777 2568  
                         l5785 258E                           l5769 24DE                           l5697 22FC  
                         l5689 22E6                           l4995 5CDE                           l4987 5C90  
                         l4899 20AC                           l5867 2792                           l5859 2746  
                         l5787 25A2                           l5779 256C                           l5875 27B8  
                         l5883 27EC                           l5699 2304                           l4997 5CF2  
                         l4989 5CA4                           l5877 27CA                           l5869 2796  
                         l5789 25B6                           l5797 25D4                           l4999 5CFE  
                         l5879 27CE                           l5799 25E8                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E34  
                         STR_5 0E38                           u3000 2830                           u3001 282C  
                         u3010 2840                           u3011 283C                           u3100 298C  
                         u3020 2882                           u3021 287E                           u3110 29B4  
                         u3030 2898                           u3111 29B0                           u3031 2894  
                         u4000 506C                           u3200 2AEC                           u3120 29D2  
                         u3040 28AA                   _BAUD4CONbits 000EE9                           u4001 5068  
                         u3201 2AE8                           u3121 29CE                           u3041 28A6  
                         u4010 50A0                           u3210 2B22                           u3130 29F2  
                         u3050 28BA                           u4011 509C                           u3211 2B1E  
                         u3131 29EE                           u3051 28B6                           u4020 4B4C  
                         u3300 2BEC                           u3220 2B32                           u3140 2A00  
                         u3060 28F6                           u4100 4A90                           u4021 4B48  
                         u3301 2BE8                           u3221 2B2E                           u3141 29FC  
                         u3061 28F2                           u4101 4A8C                           u4030 4B8A  
                         u3310 2C06                           u3230 2B5E                           u3150 2A10  
                         u3070 2904                           u4110 4AA4                           u4031 4B86  
                         u3311 2C02                           u3231 2B5A                           u3151 2A0C  
                         u3071 2900                           u4111 4AA0                           u4040 4BA8  
                         u3320 2C40                           u3240 2B6E                           u3160 2A42  
                         u3080 2972                           u3400 54F6                           u5000 60B6  
                         u4120 4ACC                           u4200 4CA8                           u4041 4BA4  
                         u3321 2C3C                           u3241 2B6A                           u3161 2A3E  
                         u3081 296E                           u3401 54F2                           u5001 60B2  
                         u4121 4AC8                           u4201 4CA4                           u4050 4BC8  
                         u3330 2C52                           u3250 2B8A                           u3170 2A50  
                         u3090 298A                           u5010 4FDA                           u3410 5DF8  
                         u4130 4AEC                           u4210 4CD2                           _T2PR 000FBC  
                         u4051 4BC4                           u3331 2C4E                           u3251 2B86  
                         u3171 2A4C                           u3091 2984                           u5011 4FD6  
                         u3411 5DF4                           u4131 4AE8                           u4211 4CCE  
                         u4060 4C18                           u3340 2C62                           u3260 2B9A  
                         u3180 2A6E                           u5100 4564                           u3420 4764  
                         u5020 4FF2                           u3500 4706                           u4140 4AFC  
                         u4061 4C14                           u3341 2C5E                           u3261 2B96  
                         u3181 2A6A                           u5101 4560                           u3421 4760  
                         u5021 4FEE                           u3501 4702                           u4141 4AF8  
                         u3350 2C82                           u3270 2BAC                           u3190 2AA6  
                         u5110 459E                           u5030 441E                           u3430 482E  
                         u3510 48C6                           u4150 5436                           u4070 5F0E  
                         u4230 4D0C                           u4310 411E                           u3351 2C7E  
                         u3271 2BA8                           u3191 2AA2                           u5111 459A  
                         u5031 441A                           u3431 482A                           u3511 48C2  
                         u4151 5432                           u4071 5F0A                           u4231 4D06  
                         u4311 411A                           u3600 316E                           u3360 2C94  
                         u3280 2BC2                           u5120 45AC                           u5040 442C  
                         u5200 1170                           u4400 5308                           u3440 45D2  
                         u3520 48F8                           u4160 548C                           u4080 4A2E  
                         u4240 4D0E                           u4320 4142                           u3601 316A  
                         u3361 2C90                           u3281 2BBE                           u5121 45A8  
                         u5041 4428                           u5201 116C                           u4401 5304  
                         u3441 45CE                           u3521 48F4                           u4161 5488  
                         u4081 4A2A                           u4225 4CE4                           u4305 40C6  
                         u3610 3180                           u3370 2CB0                           u3290 2BD8  
                         u5050 4488                           u5210 11BA                           u4410 5320  
                         u3450 4604                           u3530 4936                           u4170 5E56  
                         u4090 4A62                           u4330 415E                           u4306 40D0  
                         u4250 5DB4                           u5130 58BA                           u3611 317C  
                         u3371 2CAC                           u3291 2BD4                           u5051 4484  
                         u5211 11B6                           u4411 531C                           u3451 4600  
                         u3531 4932                           u4171 5E52                           u4331 415A  
                         u4307 40E0                           u4251 5DB0                           u5131 58B6  
                         u3700 332A                           u3620 3190                           u5060 44DE  
                         u5300 154C                           u5220 1398                           u3380 54BC  
                         u4420 540E                           u4500 5F9C                           u3540 4960  
                         u4180 4C62                           u4340 41B2                           u4260 559E  
                         u3701 3326                           u3621 318C                           u5061 44DA  
                         u5301 1548                           u5221 1394                           u5141 0E6E  
                         u3381 54B8                           u4421 540A                           u4501 5F98  
                         u3461 462E                           u3541 495C                           u4325 4138  
                         u4261 559A                           u3710 334A                           u3630 31D0  
                         u5070 4528                           u5310 158A                           u5230 13CA  
                         u5150 0F68                           u3390 54DA                           u4430 5426  
                         u3470 4652                           u3550 498E                           u4510 3DCC  
                         u4190 4C80                           u4350 41CE                           u4270 4062  
                         u3711 3346                           u3631 31CC                           u5071 4524  
                         u5311 1586                           u5231 13C6                           u5151 0F64  
                         u3391 54D6                           u4431 5422                           u6007 57DE  
                         u3471 464E                           u3551 498A                           u4511 3DC6  
                         u4095 4A58                           u4191 4C7C                           u4351 41CA  
                         u3720 335C                           u3640 3210                           u3800 2CDE  
                         u5080 4546                           u5400 17B8                           u5320 15C8  
                         u5240 1408                           u5160 0FF6                           u4440 51CC  
                         u3480 467C                           u3560 49D6                           u4600 3FE2  
                         u4520 3DCE                           u4360 420A                           u4280 4090  
                         u3721 3358                           u3641 320C                           u3801 2CDA  
                         u5081 4542                           u5401 17B4                           u5321 15C4  
                         u5241 1404                           u5161 0FF2                           u4441 51C8  
                         u6017 5808                           u3481 4678                           u3561 49D2  
                         u4601 3FDE                           u4185 4C58                           u4361 4206  
                         u4345 41A8                           u4281 408C                           u3730 338A  
                         u3650 3286                           u3570 3108                           u3810 2CF0  
                         u5090 4556                           u5410 17F6                           u5330 1612  
                         u5250 143A                           u5170 104A                           u4450 51E4  
                         u3490 46BC                           u4530 3DE0                           u4290 40B2  
                         u4370 5B00                           u4610 18C2                           u3731 3386  
                         u3651 3282                           u3571 3104                           u3811 2CEC  
                         u5091 4552                           u5411 17F2                           u5331 160E  
                         u5251 1436                           u5171 1046                           u6107 5860  
                         u4451 51E0                           u6027 59D0                           u3491 46B8  
                         u4531 3DDC                           u4291 40AE                           u4275 4058  
                         u4371 5AFC                           u4611 18BE                           u3740 33A0  
                         u3660 32A8                           u3580 311A                           u3900 2F9C  
                         u3820 2D00                           u5420 1828                           u5340 1644  
                         u5260 1478                           u5180 10A0                           u4460 512E  
                         u4380 6008                           u4540 3E1C                           u4700 1B30  
                         u4620 190C                           u5500 435A                           u3741 339C  
                         u3661 32A4                           u3581 3116                           u3901 2F98  
                         u3821 2CFC                           u5421 1824                           u5341 1640  
                         u5261 1474                           u5181 109C                           u6117 572A  
                         u4461 512A                           u6037 5CCE                           u4381 6004  
                         u4541 3E18                           u4701 1B2C                           u4621 1908  
                         u5501 4356                           u3750 33B4                           u3670 32D2  
                         u3590 312A                           u3910 2FAE                           u3830 2D40  
                         u5430 1866                           u5350 1682                           u5270 14AA  
                         u5190 10C0                           u4470 5146                           u4390 601E  
                         u2950 4D32                           u4550 3E48                           u4710 1B6E  
                         u4630 191C                           u5510 4392                           u3751 33B0  
                         u3671 32CE                           u3591 3126                           u3911 2FAA  
                         u3831 2D3C                           u5431 1862                           u5351 167E  
                         u5271 14A6                           u5191 10BC                           u6127 5756  
                         u4471 5142                           u6047 5108                           u4391 601A  
                         u2951 4D2E                           u4551 3E44                           u4711 1B6A  
                         u4631 1918                           u5511 438E                           u3760 33CE  
                         u3680 32F6                           u3920 2FDC                           u3840 2D52  
                         u5440 1898                           u5360 16B4                           u5280 14E4  
                         u4480 526A                           u5600 3BEE                           u2960 4D44  
                         u4560 3E5E                           u4800 1EA8                           u4720 1BFA  
                         u4640 195A                           u5520 43A0                           u3761 33CA  
                         u3681 32F2                           u3921 2FD8                           u3841 2D4E  
                         u5441 1894                           u5361 16B0                           u5281 14E0  
                         u4481 5266                           u6137 5244                           u6057 555C  
                         u5601 3BEA                           u2961 4D40                           u4561 3E5A  
                         u4801 1EA4                           u4721 1BF6                           u4641 1956  
                         u5521 439C                           u3770 3416                           u3690 330C  
                         u3930 2FF2                           u3850 2D62                           u5370 16F2  
                         u5290 1522                           u4490 5282                           u5610 3C44  
                         u5450 5FCC                           u2970 4D6C                           u4570 3F9A  
                         u4810 1EB8                           u4730 1C30                           u4650 196C  
                         u5530 43CA                           u3771 3412                           u3691 3308  
                         u3931 2FEE                           u3851 2D5E                           u5371 16EE  
                         u5291 151E                           u6147 5784                           u4491 527E  
                         u6067 5D1C                           u5611 3C40                           u5451 5FC8  
                         u2971 4D68                           u4571 3F96                           u4811 1EB4  
                         u4731 1C2C                           u4651 1968                           u5531 43C4  
                         u3780 3446                           u3940 3006                           u3860 2D98  
                         u5380 1730                           u5620 3C9A                           u2980 4DA2  
                         u4580 3FB8                           u4900 2242                           u4820 1F52  
                         u4740 1C48                           u4660 19E6                           u5540 43DE  
                         u5532 43CC                           u5460 42CA                           u5700 2554  
                         u3781 3442                           u3941 3002                           u3861 2D94  
                         u5381 172C                           u6157 57B0                           u6077 51A6  
                         u5621 3C96                           u2981 4D9E                           u4581 3FB4  
                         u4901 223C                           u4821 1F4E                           u4741 1C44  
                         u4661 19E2                           u5541 43D8                           u5461 42C4  
                         u5701 2550                           u3790 3474                           u3950 3020  
                         u3870 2DA8                           u2990 281E                           u5390 177A  
                         u5630 3CF0                           u4590 3FD2                           u4910 2244  
                         u4830 1FA0                           u4750 1C7A                           u4670 19F8  
                         u5550 43F0                           u5542 43E0                           u5470 42DE  
                         u5462 42CC                           u5710 25A2                           u3791 3470  
                         u3951 301C                           u3871 2DA4                           u2991 281A  
                         u5391 1776                           u6167 53E8                           u6087 5F72  
                         u5631 3CEC                           u4591 3FCE                           u4831 1F9C  
                         u4751 1C76                           u4671 19F4                           u5551 43EC  
                         u5471 42D8                           u5711 259E                           u3960 3068  
                         u3880 2F22                           u5560 5684                           u5640 3D46  
                         u4920 2258                           u4840 204E                           u4760 1C88  
                         u4680 1A72                           u5480 42F0                           u5472 42E0  
                         u5800 27CA                           u5720 25E8                           u3961 3064  
                         u6177 52E2                           u6097 5836                           u5561 5680  
                         u5641 3D42                           u4921 2254                           u4841 204A  
                         u4761 1C84                           u4681 1A6E                           u5481 42EC  
                         u5801 27C6                           u5721 25E4                           u3970 3096  
                         u3890 2F7C                           u5570 3AE8                           u4930 5E24  
                         u4850 208A                           u4770 1CB2                           u4690 1AFE  
                         u5490 4322                           u5810 2800                           u5730 262E  
                         u3971 3092                           u3891 2F78                           u5571 3AE4  
                         u4931 5E1C                           u4851 2086                           u4771 1CAE  
                         u4691 1AFA                           u5491 431E                           u5811 27FC  
                         u5731 262A                           u3980 30D0                           u5580 3B42  
                         u4860 2098                           u4780 1DFA                           u5740 2674  
                         u5660 238A                           u3981 30CC                           u3885 2F18  
                         u5581 3B3E                           u4861 2094                           u4781 1DF6  
                         u5741 2670                           u5661 2386                           u3990 502E  
                         u4950 5F66                           u5590 3B98                           u4870 20EC  
                         u4790 1E60                           u5750 26BA                           u5670 2404  
                         u3991 502A                           u4951 5F62                           u5591 3B94  
                         u4871 20E8                           u4791 1E5C                           u5751 26B6  
                         u5671 2400                           u4880 21BE                           u4960 37DE  
                         u5760 2700                           u5680 24A8                           u4881 21BA  
                         u4961 37DA                           u5761 26FC                           u5681 24A4  
                         u4890 21DA                           u4970 382E                           u5770 2746  
                         u5690 24DE                           u4891 21D6                           u4971 382A  
                         u5771 2742                           u5691 24DA                           u5907 2444  
                         u4948 5E26                           u4980 384E                           u5780 2766  
                         u4981 384A                           u5917 4238                           u5781 2762  
                         u4990 3964                           u5790 27B0                           u4991 3960  
                         u5927 42AC                           u5791 27AC                           u5937 42FE  
                         u5947 4338                           u5957 4370                           u5967 43AC  
                         u5887 236E                           u5977 43FC                           u5897 2396  
                         u5987 4FB4                           u5997 5F42                  _LightBlueMove 596A  
                         abs@a 0013                           _dbuf 02A0                           _labs 5580  
                         _main 2298                           _dtoa 3D9C                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 53AA                  ___fpclassifyf 4C22  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5BA2                __end_of_HighISR 0034  
       __end_of_color_read_lum 5B52                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5EBA                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5C90  
              _RunOneBlockTime 00F0                  ___fltol@sign1 0009                __end_of___aodiv 4748  
                        ?_labs 0001                __end_of___fladd 2CC4                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4A18                __end_of___fldiv 3488  
              __end_of___flneg 5F30                __end_of___flmul 30EE                __end_of___flsub 5D72  
              __end_of___fltol 4B1E                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5516                          i2l225 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3D9C  
      __end_of_sendCharSerial4 60BC     __end_of_I2C_2_Master_Start 60F2     __end_of_I2C_2_Master_Write 60C8  
                 YellowMove@mL 0020                          _flags 00EB                   YellowMove@mR 0022  
                        _fputc 4D20                          _fputs 5DB6                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F4  
                        _width 00E7                          _putch 60F8                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 5918  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5C42          _I2C_2_Master_RepStart 60D4  
             __end_of_BlueMove 564C                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5C42  
      __end_of_turnCalibration 440C                _reverseOneBlock 5818                   __end_of_labs 55E6  
                 __end_of_main 2804                   __end_of_dtoa 401A                   __end_of_stop 5428  
              _colour_rel$3203 0064                _colour_rel$3204 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 4EA0  
             __end_of_PinkMove 5AB2                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                       i2l5631 002C                         i2l5627 000A                         i2l5629 001A  
                    ??_HighISR 0001       __end_of_color_click_init 5A0E                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 5918               __end_of___xxtofl 45C0  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4B1E  
                       ___fleq 5000                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 6020              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 189E                      ??___lwdiv 000B                         _floorf 401A  
                       _memcpy 5AB2                         clear_0 5C68                         clear_1 5C74  
                       clear_2 5C80                         _motorL 0161                         _motorR 0158  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5D72                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 58C6                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 51E6  
                   ___flge@ff1 002A                     _YellowMove 5A0E                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5C86        __end_of_reverseOneBlock 5870                     ___flneg@f1 0001  
     __end_of_color_read_Green 5BF2         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 60C8  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 51E6  
                 __pidataBANK0 60F2                  __end_of_fputc 4DEA                  __end_of_fputs 5DFA  
                __end_of_putch 60FA              __end_of_GreenMove 5EF8            __end_of_Timer0_init 6086  
          __end_of_ReversePink 4F56                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 00D3          __end_of_reverseDetect 5766  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 5766                     _getTMR0val 564C  
            __end_of_RetryMove 5580                      ?_PinkMove 0020              _color_writetoaddr 6046  
                   _delayed_ms 5F30                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 5F9E          __end_of_timed_forward 5000            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 3488  
      __end_of_Interrupts_init 60D4         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01D6                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 6066                        _RedMove 5E7C  
           _I2C_2_Master_Start 60E8                     ??_PinkMove 0024                     _initUSART4 6086  
           _I2C_2_Master_Write 60BC                        __Hparam 0000                        _WayBack 011A  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 6066  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4EA0  
                      ___aodiv 45C0                        ___fladd 2804                        ___aomod 48B4  
                      ___fldiv 30EE                        ___flneg 5EF8                        ___flmul 2CC4  
                      ___flsub 5D2C                        ___fltol 4A18            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 54A2            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 5C42                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3ABC                        __ptext0 2298                        __ptext1 422C  
                      __ptext2 58C6                        __ptext3 5870                        __ptext4 37B6  
                      __ptext5 189E                        __ptext6 5D72                        __ptext7 5AB2  
                      __ptext8 5580                        __ptext9 401A                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                 main@lost_count 01DA                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00EF  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 58C6  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5C86  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3ABC                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F2                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 5322  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 5148                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01D8  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5CDE  
               __end_of___flge 4C22                 __end_of___fleq 50AA                 _fullSpeedAhead 5284  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 6046                 __end_of_efgtoa 2298                 __end_of_floorf 422C  
               __end_of_memcpy 5B02                     floorf@F526 00DF       __end_of_Forwardhalfblock 57C0  
                    _GreenMove 5EBA                 __end_of_strcpy 5DB6            start_initialization 5C42  
                  __end_of_abs 5E7C                    __end_of_pad 54A2                  _TxBufWriteCnt 00ED  
        __end_of_LightBlueMove 59BC                   ??_OrangeMove 0024          __end_of___fpclassifyf 4D20  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 53AA                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 5322                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 5516                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F0  
              _ForwardOneBlock 57C0                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4DEA                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 596A                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 5F68  
                __pcstackBANK0 0060                  __pcstackBANK1 0172               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2852 006F               ___lwdiv@dividend 0007  
                    _dtoa$2821 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3205 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5A60  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 570C              _I2C_2_Master_Idle 5FF8              _I2C_2_Master_Init 5FCE  
            _I2C_2_Master_Read 5DFA              _I2C_2_Master_Stop 60DE                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0005                 colour_rel@vals 004B              _sendStringSerial4 5F9E  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001                       _PIE0bits 000E29  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 5818                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0118  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u565_40 001A  
                     i2u565_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E3E            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37B6      __end_of_I2C_2_Master_Idle 6020  
    __end_of_I2C_2_Master_Init 5FF8      __end_of_I2C_2_Master_Read 5E3C              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 60E8                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 56AE  
                 _TxBufReadCnt 00EC                       _BlueMove 55E6                      _turnRight 50AA  
           __end_of_delayed_ms 5F68                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5C56      __end_of_sendStringSerial4 5FCE                   ??_colour_rel 004F  
                _reverseDetect 570C  __end_of_I2C_2_Master_RepStart 60DE             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 48B4                   ??_initUSART4 0001                       _PinkMove 5A60  
                     __Hrparam 0000         __end_of_Colour_decider 189E                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5284                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 56AE                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 37B6  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4F56                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 440C                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 60A4                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4C22                       __ptext11 4A18  
                     __ptext20 45C0                       __ptext12 5EF8                       __ptext21 5F9E  
                     __ptext13 3D9C                       __ptext30 6086                       __ptext22 60A4  
                     __ptext14 5428                       __ptext31 5322                       __ptext23 56AE  
                     __ptext15 5DB6                       __ptext40 596A                       __ptext32 3ABC  
                     __ptext24 5B02                       __ptext16 4D20                       __ptext41 5EBA  
                     __ptext33 4F56                       __ptext25 5B52                       __ptext17 60F8  
                     __ptext50 5FF8                       __ptext42 55E6                       __ptext34 5F30  
                     __ptext26 5BA2                       __ptext18 5E3C                       __ptext51 5FCE  
                     __ptext43 564C                       __ptext35 4DEA                       __ptext27 5BF2  
                     __ptext19 48B4                       __ptext60 5F68                       __ptext52 5A0E  
                     __ptext44 3488                       __ptext36 4EA0                       __ptext28 60D4  
                     __ptext61 5818                       __ptext53 5C90                       __ptext45 59BC  
                     __ptext37 57C0                       __ptext29 5DFA                       __ptext70 54A2  
                     __ptext62 570C                       __ptext54 50AA                       __ptext46 6046  
                     __ptext38 5E7C                       __ptext71 0E3E                       __ptext63 51E6  
                     __ptext55 6066                       __ptext47 60BC                       __ptext39 5918  
                     __ptext72 440C                       __ptext64 60C8                       __ptext56 5516  
                     __ptext48 60DE                       __ptext73 5D2C                       __ptext65 5766  
                     __ptext57 5A60                       __ptext49 60E8                       __ptext74 2804  
                     __ptext66 53AA                       __ptext58 5CDE                       __ptext75 2CC4  
                     __ptext67 5284                       __ptext59 5148                       __ptext76 4B1E  
                     __ptext68 4748                       __ptext77 5000                       __ptext69 6020  
                     __ptext78 30EE                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 5870  
                     _run_flag 0116                  ??_turnRight45 001E                       _turnLeft 5148  
             ___aomod@dividend 0001                 ?_timed_forward 0014                    delayed_ms@i 0004  
            ??_reverseOneBlock 001E                     _INTCONbits 000FF2                main@prev_colour 01DC  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 4748  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4               ??_fullSpeedAhead 0018                      strcpy@src 0003  
               getTMR0val@temp 0003                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                    efgtoa@nmode 0073                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 009B                ___aomod@counter 0011               _color_click_init 59BC  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 5CDE                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 5D2C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 60A4  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
