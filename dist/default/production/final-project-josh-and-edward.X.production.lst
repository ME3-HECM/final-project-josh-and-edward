

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 01:01:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106   000000                     
   107                           ; Generated 06/04/2022 GMT
   108                           ; 
   109                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution. Publication is not required when
   123                           ;        this file is used in an embedded application.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC18F67K40 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141   000000                     
   142                           	psect	idataBANK0
   143   00610A                     __pidataBANK0:
   144                           	callstack 0
   145                           
   146                           ;initializer for _RunOneBlockTime
   147   00610A  041A               	dw	1050
   148                           
   149                           ;initializer for _Turn45Delay
   150   00610C  003C               	dw	60
   151                           
   152                           ;initializer for _power
   153   00610E  0032               	dw	50
   154                           
   155                           	psect	idataBANK1
   156   006110                     __pidataBANK1:
   157                           	callstack 0
   158                           
   159                           ;initializer for _run_flag
   160   006110  0001               	dw	1
   161                           
   162                           ;initializer for _move_count
   163   006112  FFFF               	dw	65535
   164   000000                     _LATHbits	set	3968
   165   000000                     _TRISEbits	set	3973
   166   000000                     _TX4REG	set	3812
   167   000000                     _RC4STAbits	set	3815
   168   000000                     _SP4BRGH	set	3814
   169   000000                     _SSP2CON2bits	set	3802
   170   000000                     _RX4PPS	set	3605
   171   000000                     _SSP2CLKPPS	set	3612
   172   000000                     _SSP2DATPPS	set	3613
   173   000000                     _ANSELDbits	set	3751
   174   000000                     _SSP2ADD	set	3798
   175   000000                     _SSP2CON1bits	set	3801
   176   000000                     _LATAbits	set	3961
   177   000000                     _LATFbits	set	3966
   178   000000                     _LATGbits	set	3967
   179   000000                     _TRISAbits	set	3969
   180   000000                     _TRISGbits	set	3975
   181   000000                     _TRISHbits	set	3976
   182   000000                     _PORTFbits	set	3982
   183   000000                     _TMR0L	set	4051
   184   000000                     _TMR0H	set	4052
   185   000000                     _INTCONbits	set	4082
   186   000000                     _CCPR2H	set	4006
   187   000000                     _CCPR1H	set	4010
   188   000000                     _TRISCbits	set	3971
   189   000000                     _TRISDbits	set	3972
   190   000000                     _TRISFbits	set	3974
   191   000000                     _LATDbits	set	3964
   192   000000                     _RC4REG	set	3811
   193   000000                     _SP4BRGL	set	3813
   194   000000                     _TX4STAbits	set	3816
   195   000000                     _BAUD4CONbits	set	3817
   196   000000                     _SSP2CON2	set	3802
   197   000000                     _SSP2STAT	set	3800
   198   000000                     _ANSELFbits	set	3764
   199   000000                     _SSP2BUF	set	3797
   200   000000                     _PIE0bits	set	3625
   201   000000                     _PIR4bits	set	3639
   202   000000                     _RC0PPS	set	3682
   203   000000                     _RD5PPS	set	3695
   204   000000                     _RE2PPS	set	3700
   205   000000                     _RD6PPS	set	3696
   206   000000                     _RC7PPS	set	3689
   207   000000                     _CCPR4H	set	3873
   208   000000                     _CCPR3H	set	3877
   209   000000                     _PIR0bits	set	3635
   210   000000                     _T0CON1bits	set	4054
   211   000000                     _T0CON0bits	set	4053
   212   000000                     _CCP1CONbits	set	4011
   213   000000                     _CCPTMRS0bits	set	4013
   214   000000                     _T2PR	set	4028
   215   000000                     _T2CONbits	set	4029
   216   000000                     _CCP2CONbits	set	4007
   217   000000                     _CCP3CONbits	set	3878
   218   000000                     _CCP4CONbits	set	3874
   219   000000                     _RE4PPS	set	3702
   220   000000                     _RG6PPS	set	3720
   221   000000                     _T2CLKCONbits	set	4031
   222   000000                     _T2HLTbits	set	4030
   223                           
   224                           	psect	smallconst
   225   000E00                     __psmallconst:
   226                           	callstack 0
   227   000E00  00                 	db	0
   228   000E01                     STR_1:
   229                           
   230                           ; BSR set to: 14
   231   000E01  72                 	db	114	;'r'
   232   000E02  65                 	db	101	;'e'
   233   000E03  64                 	db	100	;'d'
   234   000E04  3D                 	db	61	;'='
   235   000E05  25                 	db	37
   236   000E06  66                 	db	102	;'f'
   237   000E07  20                 	db	32
   238   000E08  67                 	db	103	;'g'
   239   000E09  72                 	db	114	;'r'
   240   000E0A  65                 	db	101	;'e'
   241   000E0B  65                 	db	101	;'e'
   242   000E0C  6E                 	db	110	;'n'
   243   000E0D  3D                 	db	61	;'='
   244   000E0E  25                 	db	37
   245   000E0F  66                 	db	102	;'f'
   246   000E10  20                 	db	32
   247   000E11  62                 	db	98	;'b'
   248   000E12  6C                 	db	108	;'l'
   249   000E13  75                 	db	117	;'u'
   250   000E14  65                 	db	101	;'e'
   251   000E15  3D                 	db	61	;'='
   252   000E16  25                 	db	37
   253   000E17  66                 	db	102	;'f'
   254   000E18  20                 	db	32
   255   000E19  6C                 	db	108	;'l'
   256   000E1A  75                 	db	117	;'u'
   257   000E1B  6D                 	db	109	;'m'
   258   000E1C  3D                 	db	61	;'='
   259   000E1D  25                 	db	37
   260   000E1E  64                 	db	100	;'d'
   261   000E1F  20                 	db	32
   262   000E20  61                 	db	97	;'a'
   263   000E21  63                 	db	99	;'c'
   264   000E22  74                 	db	116	;'t'
   265   000E23  75                 	db	117	;'u'
   266   000E24  61                 	db	97	;'a'
   267   000E25  6C                 	db	108	;'l'
   268   000E26  5F                 	db	95	;'_'
   269   000E27  63                 	db	99	;'c'
   270   000E28  6F                 	db	111	;'o'
   271   000E29  6C                 	db	108	;'l'
   272   000E2A  6F                 	db	111	;'o'
   273   000E2B  75                 	db	117	;'u'
   274   000E2C  72                 	db	114	;'r'
   275   000E2D  3D                 	db	61	;'='
   276   000E2E  25                 	db	37
   277   000E2F  64                 	db	100	;'d'
   278   000E30  20                 	db	32
   279   000E31  0D                 	db	13
   280   000E32  0A                 	db	10
   281   000E33  00                 	db	0
   282   000E34                     STR_2:
   283                           
   284                           ; BSR set to: 14
   285   000E34  69                 	db	105	;'i'
   286   000E35  6E                 	db	110	;'n'
   287   000E36  66                 	db	102	;'f'
   288   000E37  00                 	db	0
   289   000E38                     STR_5:
   290                           
   291                           ; BSR set to: 14
   292   000E38  6E                 	db	110	;'n'
   293   000E39  61                 	db	97	;'a'
   294   000E3A  6E                 	db	110	;'n'
   295   000E3B  00                 	db	0
   296   000E3C  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   0054DC                     __pcinit:
   302                           	callstack 0
   303   0054DC                     start_initialization:
   304                           	callstack 0
   305   0054DC                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK1 (4 bytes)
   309                           ; load TBLPTR registers with __pidataBANK1
   310   0054DC  0E10               	movlw	low __pidataBANK1
   311   0054DE  6EF6               	movwf	tblptrl,c
   312   0054E0  0E61               	movlw	high __pidataBANK1
   313   0054E2  6EF7               	movwf	tblptrh,c
   314   0054E4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   315   0054E6  6EF8               	movwf	tblptru,c
   316   0054E8  EE01  F0D4         	lfsr	0,__pdataBANK1
   317   0054EC  EE10 F004          	lfsr	1,4
   318   0054F0                     copy_data0:
   319   0054F0  0009               	tblrd		*+
   320   0054F2  CFF5 FFEE          	movff	tablat,postinc0
   321   0054F6  50E5               	movf	postdec1,w,c
   322   0054F8  50E1               	movf	fsr1l,w,c
   323   0054FA  E1FA               	bnz	copy_data0
   324                           
   325                           ; Initialize objects allocated to BANK0 (6 bytes)
   326                           ; load TBLPTR registers with __pidataBANK0
   327   0054FC  0E0A               	movlw	low __pidataBANK0
   328   0054FE  6EF6               	movwf	tblptrl,c
   329   005500  0E61               	movlw	high __pidataBANK0
   330   005502  6EF7               	movwf	tblptrh,c
   331   005504  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   332   005506  6EF8               	movwf	tblptru,c
   333   005508  EE00  F0F6         	lfsr	0,__pdataBANK0
   334   00550C  EE10 F006          	lfsr	1,6
   335   005510                     copy_data1:
   336   005510  0009               	tblrd		*+
   337   005512  CFF5 FFEE          	movff	tablat,postinc0
   338   005516  50E5               	movf	postdec1,w,c
   339   005518  50E1               	movf	fsr1l,w,c
   340   00551A  E1FA               	bnz	copy_data1
   341                           
   342                           ; Clear objects allocated to BANK2 (240 bytes)
   343   00551C  EE02  F000         	lfsr	0,__pbssBANK2
   344   005520  0EF0               	movlw	240
   345   005522                     clear_0:
   346   005522  6AEE               	clrf	postinc0,c
   347   005524  06E8               	decf	wreg,f,c
   348   005526  E1FD               	bnz	clear_0
   349                           
   350                           ; Clear objects allocated to BANK1 (110 bytes)
   351   005528  EE01  F000         	lfsr	0,__pbssBANK1
   352   00552C  0E6E               	movlw	110
   353   00552E                     clear_1:
   354   00552E  6AEE               	clrf	postinc0,c
   355   005530  06E8               	decf	wreg,f,c
   356   005532  E1FD               	bnz	clear_1
   357                           
   358                           ; Clear objects allocated to BANK0 (35 bytes)
   359   005534  EE00  F0D3         	lfsr	0,__pbssBANK0
   360   005538  0E23               	movlw	35
   361   00553A                     clear_2:
   362   00553A  6AEE               	clrf	postinc0,c
   363   00553C  06E8               	decf	wreg,f,c
   364   00553E  E1FD               	bnz	clear_2
   365   005540                     end_of_initialization:
   366                           	callstack 0
   367   005540                     __end_of__initialization:
   368                           	callstack 0
   369   005540  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370   005542  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371   005544  0100               	movlb	0
   372   005546  EF93  F01E         	goto	_main	;jump to C main() function
   373                           
   374                           	psect	bssBANK0
   375   0000D3                     __pbssBANK0:
   376                           	callstack 0
   377   0000D3                     	ds	12
   378   0000DF                     floorf@F526:
   379                           	callstack 0
   380   0000DF                     	ds	4
   381   0000E3                     ___fpclassifyf@F465:
   382                           	callstack 0
   383   0000E3                     	ds	4
   384   0000E7                     _width:
   385                           	callstack 0
   386   0000E7                     	ds	2
   387   0000E9                     _prec:
   388                           	callstack 0
   389   0000E9                     	ds	2
   390   0000EB                     _lost_count:
   391                           	callstack 0
   392   0000EB                     	ds	2
   393   0000ED                     _consecuitive:
   394                           	callstack 0
   395   0000ED                     	ds	2
   396   0000EF                     _prev_colour:
   397                           	callstack 0
   398   0000EF                     	ds	2
   399   0000F1                     _flags:
   400                           	callstack 0
   401   0000F1                     	ds	1
   402   0000F2                     _TxBufReadCnt:
   403                           	callstack 0
   404   0000F2                     	ds	1
   405   0000F3                     _TxBufWriteCnt:
   406                           	callstack 0
   407   0000F3                     	ds	1
   408   0000F4                     _RxBufReadCnt:
   409                           	callstack 0
   410   0000F4                     	ds	1
   411   0000F5                     _RxBufWriteCnt:
   412                           	callstack 0
   413   0000F5                     	ds	1
   414                           
   415                           	psect	dataBANK0
   416   0000F6                     __pdataBANK0:
   417                           	callstack 0
   418   0000F6                     _RunOneBlockTime:
   419                           	callstack 0
   420   0000F6                     	ds	2
   421   0000F8                     _Turn45Delay:
   422                           	callstack 0
   423   0000F8                     	ds	2
   424   0000FA                     _power:
   425                           	callstack 0
   426   0000FA                     	ds	2
   427                           
   428                           	psect	bssBANK1
   429   000100                     __pbssBANK1:
   430                           	callstack 0
   431   000100                     _EUSART4RXbuf:
   432                           	callstack 0
   433   000100                     	ds	20
   434   000114                     _lost_flag:
   435                           	callstack 0
   436   000114                     	ds	2
   437   000116                     _WayBack:
   438                           	callstack 0
   439   000116                     	ds	50
   440   000148                     _rel:
   441                           	callstack 0
   442   000148                     	ds	12
   443   000154                     _motorR:
   444                           	callstack 0
   445   000154                     	ds	9
   446   00015D                     _motorL:
   447                           	callstack 0
   448   00015D                     	ds	9
   449   000166                     _vals:
   450                           	callstack 0
   451   000166                     	ds	8
   452                           
   453                           	psect	dataBANK1
   454   0001D4                     __pdataBANK1:
   455                           	callstack 0
   456   0001D4                     _run_flag:
   457                           	callstack 0
   458   0001D4                     	ds	2
   459   0001D6                     _move_count:
   460                           	callstack 0
   461   0001D6                     	ds	2
   462                           
   463                           	psect	bssBANK2
   464   000200                     __pbssBANK2:
   465                           	callstack 0
   466   000200                     _EUSART4TXbuf:
   467                           	callstack 0
   468   000200                     	ds	60
   469   00023C                     _Time_forward:
   470                           	callstack 0
   471   00023C                     	ds	100
   472   0002A0                     _dbuf:
   473                           	callstack 0
   474   0002A0                     	ds	80
   475                           
   476                           	psect	cstackBANK1
   477   00016E                     __pcstackBANK1:
   478                           	callstack 0
   479   00016E                     main@buf:
   480                           	callstack 0
   481                           
   482                           ; 100 bytes @ 0x0
   483   00016E                     	ds	100
   484   0001D2                     main@recognized_colour:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x64
   488   0001D2                     	ds	2
   489                           
   490                           	psect	cstackBANK0
   491   000060                     __pcstackBANK0:
   492                           	callstack 0
   493   000060                     efgtoa@fp:
   494                           	callstack 0
   495   000060                     colour_rel@L:
   496                           	callstack 0
   497   000060                     _Colour_decider$3265:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x0
   501   000060                     	ds	2
   502   000062                     efgtoa@f:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x2
   506   000062                     	ds	2
   507   000064                     Colour_decider@Cmax_i:
   508                           	callstack 0
   509   000064                     _colour_rel$3263:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513   000064                     	ds	2
   514   000066                     efgtoa@c:
   515                           	callstack 0
   516   000066                     Colour_decider@RGB_col:
   517                           	callstack 0
   518                           
   519                           ; 12 bytes @ 0x6
   520   000066                     	ds	1
   521   000067                     ??_efgtoa:
   522                           
   523                           ; 1 bytes @ 0x7
   524   000067                     	ds	1
   525   000068                     _colour_rel$3264:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x8
   529   000068                     	ds	1
   530   000069                     efgtoa@ne:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534   000069                     	ds	2
   535   00006B                     efgtoa@p:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xB
   539   00006B                     	ds	1
   540   00006C                     colour_rel@R:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0xC
   544   00006C                     	ds	1
   545   00006D                     efgtoa@t:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0xD
   549   00006D                     	ds	2
   550   00006F                     _efgtoa$2894:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xF
   554   00006F                     	ds	1
   555   000070                     colour_rel@G:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x10
   559   000070                     	ds	1
   560   000071                     efgtoa@pp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x11
   564   000071                     	ds	1
   565   000072                     efgtoa@mode:
   566                           	callstack 0
   567   000072                     Colour_decider@Cmax:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x12
   571   000072                     	ds	1
   572   000073                     efgtoa@nmode:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x13
   576   000073                     	ds	1
   577   000074                     efgtoa@d:
   578                           	callstack 0
   579   000074                     colour_rel@B:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x14
   583   000074                     	ds	2
   584   000076                     efgtoa@m:
   585                           	callstack 0
   586   000076                     Colour_decider@Cmin:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x16
   590   000076                     	ds	2
   591   000078                     efgtoa@e:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x18
   595   000078                     	ds	2
   596   00007A                     Colour_decider@i:
   597                           	callstack 0
   598   00007A                     efgtoa@w:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x1A
   602   00007A                     	ds	2
   603   00007C                     Colour_decider@Hue:
   604                           	callstack 0
   605   00007C                     efgtoa@ou:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x1C
   609   00007C                     	ds	4
   610   000080                     efgtoa@i:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x20
   614   000080                     	ds	2
   615   000082                     efgtoa@h:
   616                           	callstack 0
   617                           
   618                           ; 4 bytes @ 0x22
   619   000082                     	ds	4
   620   000086                     efgtoa@l:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x26
   624   000086                     	ds	4
   625   00008A                     efgtoa@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x2A
   629   00008A                     	ds	1
   630   00008B                     efgtoa@n:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2B
   634   00008B                     	ds	2
   635   00008D                     efgtoa@g:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x2D
   639   00008D                     	ds	4
   640   000091                     efgtoa@u:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x31
   644   000091                     	ds	4
   645   000095                     vfpfcnvrt@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x35
   649   000095                     	ds	2
   650   000097                     vfpfcnvrt@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x37
   654   000097                     	ds	2
   655   000099                     vfpfcnvrt@ap:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x39
   659   000099                     	ds	2
   660   00009B                     ??_vfpfcnvrt:
   661                           
   662                           ; 1 bytes @ 0x3B
   663   00009B                     	ds	2
   664   00009D                     vfpfcnvrt@convarg:
   665                           	callstack 0
   666                           
   667                           ; 8 bytes @ 0x3D
   668   00009D                     	ds	8
   669   0000A5                     vfpfcnvrt@c:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x45
   673   0000A5                     	ds	1
   674   0000A6                     vfpfcnvrt@cp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x46
   678   0000A6                     	ds	2
   679   0000A8                     ?_vfprintf:
   680                           	callstack 0
   681   0000A8                     vfprintf@fp:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x48
   685   0000A8                     	ds	2
   686   0000AA                     vfprintf@fmt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x4A
   690   0000AA                     	ds	2
   691   0000AC                     vfprintf@ap:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4C
   695   0000AC                     	ds	2
   696   0000AE                     vfprintf@cfmt:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4E
   700   0000AE                     	ds	2
   701   0000B0                     ?_sprintf:
   702                           	callstack 0
   703   0000B0                     sprintf@s:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x50
   707   0000B0                     	ds	2
   708   0000B2                     sprintf@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x52
   712   0000B2                     	ds	18
   713   0000C4                     sprintf@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x64
   717   0000C4                     	ds	2
   718   0000C6                     sprintf@f:
   719                           	callstack 0
   720                           
   721                           ; 11 bytes @ 0x66
   722   0000C6                     	ds	11
   723   0000D1                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x71
   726   0000D1                     	ds	2
   727                           
   728                           	psect	cstackCOMRAM
   729   000001                     __pcstackCOMRAM:
   730                           	callstack 0
   731   000001                     ??_getTMR0val:
   732   000001                     ??_I2C_2_Master_Idle:
   733   000001                     ?___fpclassifyf:
   734                           	callstack 0
   735   000001                     ?___wmul:
   736                           	callstack 0
   737   000001                     ?___fladd:
   738                           	callstack 0
   739   000001                     ?_labs:
   740                           	callstack 0
   741   000001                     ?___flneg:
   742                           	callstack 0
   743   000001                     ?___fltol:
   744                           	callstack 0
   745   000001                     ?___xxtofl:
   746                           	callstack 0
   747   000001                     ?___aodiv:
   748                           	callstack 0
   749   000001                     ?___aomod:
   750                           	callstack 0
   751   000001                     sendCharSerial4@charToSend:
   752                           	callstack 0
   753   000001                     initDCmotorsPWM@PWMperiod:
   754                           	callstack 0
   755   000001                     TurnDelay@Turn45Delay:
   756                           	callstack 0
   757   000001                     delayed_ms@time:
   758                           	callstack 0
   759   000001                     ___wmul@multiplier:
   760                           	callstack 0
   761   000001                     memcpy@d1:
   762                           	callstack 0
   763   000001                     fputc@c:
   764                           	callstack 0
   765   000001                     strcpy@dest:
   766                           	callstack 0
   767   000001                     ___flneg@f1:
   768                           	callstack 0
   769   000001                     ___fltol@f1:
   770                           	callstack 0
   771   000001                     ___fladd@b:
   772                           	callstack 0
   773   000001                     ___xxtofl@val:
   774                           	callstack 0
   775   000001                     ___fpclassifyf@x:
   776                           	callstack 0
   777   000001                     labs@a:
   778                           	callstack 0
   779   000001                     ___aodiv@dividend:
   780                           	callstack 0
   781   000001                     ___aomod@dividend:
   782                           	callstack 0
   783                           
   784                           ; 8 bytes @ 0x0
   785   000001                     	ds	1
   786   000002                     ??_I2C_2_Master_Read:
   787   000002                     I2C_2_Master_Write@data_byte:
   788                           	callstack 0
   789   000002                     sendStringSerial4@string:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x1
   793   000002                     	ds	1
   794   000003                     ??_delayed_ms:
   795   000003                     ??_TurnDelay:
   796   000003                     color_writetoaddr@value:
   797                           	callstack 0
   798   000003                     I2C_2_Master_Read@ack:
   799                           	callstack 0
   800   000003                     getTMR0val@temp:
   801                           	callstack 0
   802   000003                     ___wmul@multiplicand:
   803                           	callstack 0
   804   000003                     memcpy@s1:
   805                           	callstack 0
   806   000003                     fputc@fp:
   807                           	callstack 0
   808   000003                     strcpy@src:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x2
   812   000003                     	ds	1
   813   000004                     color_writetoaddr@address:
   814                           	callstack 0
   815   000004                     I2C_2_Master_Read@tmp:
   816                           	callstack 0
   817   000004                     delayed_ms@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3
   821   000004                     	ds	1
   822   000005                     ??_fputc:
   823   000005                     ??___fpclassifyf:
   824   000005                     ??_labs:
   825   000005                     ??_color_click_init:
   826   000005                     ??___fltol:
   827   000005                     ??___xxtofl:
   828   000005                     ?_color_read_lum:
   829                           	callstack 0
   830   000005                     ?_color_read_Red:
   831                           	callstack 0
   832   000005                     ?_color_read_Green:
   833                           	callstack 0
   834   000005                     ?_color_read_Blue:
   835                           	callstack 0
   836   000005                     getTMR0val@moving:
   837                           	callstack 0
   838   000005                     ___wmul@product:
   839                           	callstack 0
   840   000005                     memcpy@n:
   841                           	callstack 0
   842   000005                     strcpy@s:
   843                           	callstack 0
   844   000005                     ___fladd@a:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x4
   848   000005                     	ds	2
   849   000007                     ??_color_read_lum:
   850   000007                     ??_color_read_Red:
   851   000007                     ??_color_read_Green:
   852   000007                     ??_color_read_Blue:
   853   000007                     ?___lwdiv:
   854                           	callstack 0
   855   000007                     ___lwdiv@dividend:
   856                           	callstack 0
   857   000007                     memcpy@d:
   858                           	callstack 0
   859   000007                     strcpy@d:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x6
   863   000007                     	ds	2
   864   000009                     ??___fladd:
   865   000009                     ___fltol@sign1:
   866                           	callstack 0
   867   000009                     ___xxtofl@sign:
   868                           	callstack 0
   869   000009                     ___lwdiv@divisor:
   870                           	callstack 0
   871   000009                     ___fpclassifyf@e:
   872                           	callstack 0
   873   000009                     memcpy@s:
   874                           	callstack 0
   875   000009                     ___aodiv@divisor:
   876                           	callstack 0
   877   000009                     ___aomod@divisor:
   878                           	callstack 0
   879                           
   880                           ; 8 bytes @ 0x8
   881   000009                     	ds	1
   882   00000A                     ___fltol@exp1:
   883                           	callstack 0
   884   00000A                     ___xxtofl@exp:
   885                           	callstack 0
   886   00000A                     color_read_lum@tmp:
   887                           	callstack 0
   888   00000A                     color_read_Red@tmp:
   889                           	callstack 0
   890   00000A                     color_read_Green@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Blue@tmp:
   893                           	callstack 0
   894   00000A                     fputs@s:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x9
   898   00000A                     	ds	1
   899   00000B                     memcpy@tmp:
   900                           	callstack 0
   901   00000B                     ___lwdiv@quotient:
   902                           	callstack 0
   903   00000B                     ___xxtofl@arg:
   904                           	callstack 0
   905   00000B                     ___fpclassifyf@u:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0xA
   909   00000B                     	ds	1
   910   00000C                     readColours@vals:
   911                           	callstack 0
   912   00000C                     fputs@fp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xB
   916   00000C                     	ds	1
   917   00000D                     ___lwdiv@counter:
   918                           	callstack 0
   919   00000D                     ___fladd@signs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0xC
   923   00000D                     	ds	1
   924   00000E                     ___fladd@aexp:
   925                           	callstack 0
   926   00000E                     fputs@c:
   927                           	callstack 0
   928   00000E                     setMotorPWM@m:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xD
   932   00000E                     	ds	1
   933   00000F                     ___fladd@bexp:
   934                           	callstack 0
   935   00000F                     fputs@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xE
   939   00000F                     	ds	1
   940   000010                     ??_setMotorPWM:
   941   000010                     ___fladd@grs:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0xF
   945   000010                     	ds	1
   946   000011                     ?___flmul:
   947                           	callstack 0
   948   000011                     ___aodiv@counter:
   949                           	callstack 0
   950   000011                     ___aomod@counter:
   951                           	callstack 0
   952   000011                     pad@fp:
   953                           	callstack 0
   954   000011                     ___flmul@b:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x10
   958   000011                     	ds	1
   959   000012                     setMotorPWM@posDuty:
   960                           	callstack 0
   961   000012                     ___aodiv@sign:
   962                           	callstack 0
   963   000012                     ___aomod@sign:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x11
   967   000012                     	ds	1
   968   000013                     ?_abs:
   969                           	callstack 0
   970   000013                     setMotorPWM@negDuty:
   971                           	callstack 0
   972   000013                     pad@buf:
   973                           	callstack 0
   974   000013                     abs@a:
   975                           	callstack 0
   976   000013                     ___aodiv@quotient:
   977                           	callstack 0
   978                           
   979                           ; 8 bytes @ 0x12
   980   000013                     	ds	1
   981   000014                     stop@mL:
   982                           	callstack 0
   983   000014                     turnLeft@mL:
   984                           	callstack 0
   985   000014                     turnRight@mL:
   986                           	callstack 0
   987   000014                     fullSpeedAhead@mL:
   988                           	callstack 0
   989   000014                     timed_forward@mL:
   990                           	callstack 0
   991   000014                     fullSpeedBack@mL:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x13
   995   000014                     	ds	1
   996   000015                     ??_abs:
   997   000015                     pad@p:
   998                           	callstack 0
   999   000015                     ___flmul@a:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x14
  1003   000015                     	ds	1
  1004   000016                     stop@mR:
  1005                           	callstack 0
  1006   000016                     turnLeft@mR:
  1007                           	callstack 0
  1008   000016                     turnRight@mR:
  1009                           	callstack 0
  1010   000016                     fullSpeedAhead@mR:
  1011                           	callstack 0
  1012   000016                     timed_forward@mR:
  1013                           	callstack 0
  1014   000016                     fullSpeedBack@mR:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x15
  1018   000016                     	ds	1
  1019   000017                     ??_pad:
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022   000017                     	ds	1
  1023   000018                     ??_fullSpeedAhead:
  1024   000018                     ??_stop:
  1025   000018                     ??_turnLeft:
  1026   000018                     ??_turnRight:
  1027   000018                     ??_fullSpeedBack:
  1028   000018                     timed_forward@time:
  1029                           	callstack 0
  1030   000018                     pad@i:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x17
  1034   000018                     	ds	1
  1035   000019                     ??___flmul:
  1036                           
  1037                           ; 1 bytes @ 0x18
  1038   000019                     	ds	1
  1039   00001A                     ??_timed_forward:
  1040   00001A                     turnRight45@mL:
  1041                           	callstack 0
  1042   00001A                     turnLeft45@mL:
  1043                           	callstack 0
  1044   00001A                     reverseDetect@mL:
  1045                           	callstack 0
  1046   00001A                     reverseOneBlock@mL:
  1047                           	callstack 0
  1048   00001A                     ForwardOneBlock@mL:
  1049                           	callstack 0
  1050   00001A                     Forwardhalfblock@mL:
  1051                           	callstack 0
  1052   00001A                     pad@w:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x19
  1056   00001A                     	ds	2
  1057   00001C                     turnRight45@mR:
  1058                           	callstack 0
  1059   00001C                     turnLeft45@mR:
  1060                           	callstack 0
  1061   00001C                     reverseDetect@mR:
  1062                           	callstack 0
  1063   00001C                     reverseOneBlock@mR:
  1064                           	callstack 0
  1065   00001C                     ForwardOneBlock@mR:
  1066                           	callstack 0
  1067   00001C                     Forwardhalfblock@mR:
  1068                           	callstack 0
  1069   00001C                     dtoa@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x1B
  1073   00001C                     	ds	1
  1074   00001D                     ___flmul@sign:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x1C
  1078   00001D                     	ds	1
  1079   00001E                     ??_Forwardhalfblock:
  1080   00001E                     ??_turnRight45:
  1081   00001E                     ??_turnLeft45:
  1082   00001E                     ??_reverseDetect:
  1083   00001E                     ??_reverseOneBlock:
  1084   00001E                     ??_ForwardOneBlock:
  1085   00001E                     ___flmul@grs:
  1086                           	callstack 0
  1087   00001E                     dtoa@d:
  1088                           	callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x1D
  1091   00001E                     	ds	2
  1092   000020                     RedMove@mL:
  1093                           	callstack 0
  1094   000020                     GreenMove@mL:
  1095                           	callstack 0
  1096   000020                     BlueMove@mL:
  1097                           	callstack 0
  1098   000020                     YellowMove@mL:
  1099                           	callstack 0
  1100   000020                     PinkMove@mL:
  1101                           	callstack 0
  1102   000020                     OrangeMove@mL:
  1103                           	callstack 0
  1104   000020                     LightBlueMove@mL:
  1105                           	callstack 0
  1106   000020                     RetryMove@mL:
  1107                           	callstack 0
  1108   000020                     ReverseYellow@mL:
  1109                           	callstack 0
  1110   000020                     ReversePink@mL:
  1111                           	callstack 0
  1112   000020                     turnCalibration@mL:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x1F
  1116   000020                     	ds	2
  1117   000022                     ___flmul@aexp:
  1118                           	callstack 0
  1119   000022                     RedMove@mR:
  1120                           	callstack 0
  1121   000022                     GreenMove@mR:
  1122                           	callstack 0
  1123   000022                     BlueMove@mR:
  1124                           	callstack 0
  1125   000022                     YellowMove@mR:
  1126                           	callstack 0
  1127   000022                     PinkMove@mR:
  1128                           	callstack 0
  1129   000022                     OrangeMove@mR:
  1130                           	callstack 0
  1131   000022                     LightBlueMove@mR:
  1132                           	callstack 0
  1133   000022                     RetryMove@mR:
  1134                           	callstack 0
  1135   000022                     ReverseYellow@mR:
  1136                           	callstack 0
  1137   000022                     ReversePink@mR:
  1138                           	callstack 0
  1139   000022                     turnCalibration@mR:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x21
  1143   000022                     	ds	1
  1144   000023                     ___flmul@bexp:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x22
  1148   000023                     	ds	1
  1149   000024                     ??_turnCalibration:
  1150   000024                     ??_RetryMove:
  1151   000024                     go_Home@WayBack:
  1152                           	callstack 0
  1153   000024                     ___flmul@prod:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x23
  1157   000024                     	ds	2
  1158   000026                     ??_dtoa:
  1159   000026                     go_Home@Time_forward:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x25
  1163   000026                     	ds	2
  1164   000028                     ??_go_Home:
  1165   000028                     ___flmul@temp:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x27
  1169   000028                     	ds	2
  1170   00002A                     ?___flsub:
  1171                           	callstack 0
  1172   00002A                     ___flge@ff1:
  1173                           	callstack 0
  1174   00002A                     ___flsub@b:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x29
  1178   00002A                     	ds	1
  1179   00002B                     go_Home@i:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x2A
  1183   00002B                     	ds	2
  1184   00002D                     colour_move@recognized_colour:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x2C
  1188   00002D                     	ds	1
  1189   00002E                     _dtoa$2863:
  1190                           	callstack 0
  1191   00002E                     ___flge@ff2:
  1192                           	callstack 0
  1193   00002E                     ___flsub@a:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x2D
  1197   00002E                     	ds	1
  1198   00002F                     
  1199                           ; 1 bytes @ 0x2E
  1200   00002F                     	ds	1
  1201   000030                     dtoa@p:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x2F
  1205   000030                     	ds	2
  1206   000032                     ??___flge:
  1207   000032                     ?___fldiv:
  1208                           	callstack 0
  1209   000032                     dtoa@w:
  1210                           	callstack 0
  1211   000032                     ___fleq@ff1:
  1212                           	callstack 0
  1213   000032                     ___fldiv@b:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x31
  1217   000032                     	ds	2
  1218   000034                     dtoa@n:
  1219                           	callstack 0
  1220                           
  1221                           ; 8 bytes @ 0x33
  1222   000034                     	ds	2
  1223   000036                     ___fleq@ff2:
  1224                           	callstack 0
  1225   000036                     ___fldiv@a:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x35
  1229   000036                     	ds	4
  1230   00003A                     ??___fldiv:
  1231   00003A                     ??___fleq:
  1232                           
  1233                           ; 1 bytes @ 0x39
  1234   00003A                     	ds	2
  1235   00003C                     dtoa@i:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x3B
  1239   00003C                     	ds	2
  1240   00003E                     dtoa@s:
  1241                           	callstack 0
  1242   00003E                     ___fldiv@rem:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x3D
  1246   00003E                     	ds	4
  1247   000042                     ___fldiv@sign:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x41
  1251   000042                     	ds	1
  1252   000043                     ___fldiv@new_exp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x42
  1256   000043                     	ds	2
  1257   000045                     ___fldiv@grs:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x44
  1261   000045                     	ds	4
  1262   000049                     ___fldiv@bexp:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x48
  1266   000049                     	ds	1
  1267   00004A                     ___fldiv@aexp:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x49
  1271   00004A                     	ds	1
  1272   00004B                     ?_Colour_decider:
  1273                           	callstack 0
  1274   00004B                     ?_floorf:
  1275                           	callstack 0
  1276   00004B                     colour_rel@vals:
  1277                           	callstack 0
  1278   00004B                     Colour_decider@vals:
  1279                           	callstack 0
  1280   00004B                     floorf@x:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x4A
  1284   00004B                     	ds	2
  1285   00004D                     colour_rel@rel:
  1286                           	callstack 0
  1287   00004D                     Colour_decider@rel:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x4C
  1291   00004D                     	ds	2
  1292   00004F                     ??_floorf:
  1293   00004F                     ??_Colour_decider:
  1294                           
  1295                           ; 1 bytes @ 0x4E
  1296   00004F                     	ds	2
  1297   000051                     ?_consecutive_read:
  1298                           	callstack 0
  1299   000051                     consecutive_read@vals:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x50
  1303   000051                     	ds	2
  1304   000053                     consecutive_read@rel:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x52
  1308   000053                     	ds	2
  1309   000055                     ??_consecutive_read:
  1310   000055                     floorf@m:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x54
  1314   000055                     	ds	2
  1315   000057                     consecutive_read@colour:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x56
  1319   000057                     	ds	2
  1320   000059                     floorf@e:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x58
  1324   000059                     	ds	2
  1325   00005B                     floorf@u:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x5A
  1329   00005B                     	ds	4
  1330   00005F                     
  1331                           ; 1 bytes @ 0x5E
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 33 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  recognized_c    2  100[BANK1 ] int 
  1342 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;Total ram usage:      104 bytes
  1357 ;; Hardware stack levels required when called: 9
  1358 ;; This function calls:
  1359 ;;		_Buttons_init
  1360 ;;		_Forwardhalfblock
  1361 ;;		_I2C_2_Master_Init
  1362 ;;		_Interrupts_init
  1363 ;;		_LED_init
  1364 ;;		_Timer0_init
  1365 ;;		_color_click_init
  1366 ;;		_colour_move
  1367 ;;		_colour_rel
  1368 ;;		_consecutive_read
  1369 ;;		_fullSpeedAhead
  1370 ;;		_getTMR0val
  1371 ;;		_go_Home
  1372 ;;		_initDCmotorsPWM
  1373 ;;		_initUSART4
  1374 ;;		_readColours
  1375 ;;		_sendStringSerial4
  1376 ;;		_sprintf
  1377 ;;		_stop
  1378 ;;		_turnCalibration
  1379 ;; This function is called by:
  1380 ;;		Startup code after reset
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text0
  1385   003D26                     __ptext0:
  1386                           	callstack 0
  1387   003D26                     _main:
  1388                           	callstack 22
  1389   003D26                     
  1390                           ;main.c: 34:     initUSART4();
  1391   003D26  EC49  F030         	call	_initUSART4	;wreg free
  1392   003D2A                     
  1393                           ;main.c: 35:     Interrupts_init();
  1394   003D2A  EC6A  F030         	call	_Interrupts_init	;wreg free
  1395   003D2E                     
  1396                           ;main.c: 36:     color_click_init();
  1397   003D2E  EC4A  F02D         	call	_color_click_init	;wreg free
  1398   003D32                     
  1399                           ;main.c: 37:     I2C_2_Master_Init();
  1400   003D32  ECDA  F02F         	call	_I2C_2_Master_Init	;wreg free
  1401   003D36                     
  1402                           ;main.c: 38:     LED_init();
  1403   003D36  EC03  F030         	call	_LED_init	;wreg free
  1404   003D3A                     
  1405                           ;main.c: 39:     Buttons_init();
  1406   003D3A  EC70  F030         	call	_Buttons_init	;wreg free
  1407   003D3E                     
  1408                           ;main.c: 40:     initDCmotorsPWM(200);
  1409   003D3E  0E00               	movlw	0
  1410   003D40  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1411   003D42  0EC8               	movlw	200
  1412   003D44  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1413   003D46  EC74  F029         	call	_initDCmotorsPWM	;wreg free
  1414   003D4A                     
  1415                           ;main.c: 41:     Timer0_init();
  1416   003D4A  EC39  F030         	call	_Timer0_init	;wreg free
  1417   003D4E                     
  1418                           ;main.c: 43:     motorL.power=0;
  1419   003D4E  0E00               	movlw	0
  1420   003D50  0101               	movlb	1	; () banked
  1421   003D52  6F5D               	movwf	_motorL& (0+255),b
  1422   003D54                     
  1423                           ; BSR set to: 1
  1424                           ;main.c: 44:     motorL.direction=1;
  1425   003D54  0E01               	movlw	1
  1426   003D56  6F5E               	movwf	(_motorL+1)& (0+255),b
  1427   003D58                     
  1428                           ; BSR set to: 1
  1429                           ;main.c: 45:     motorL.brakemode=1;
  1430   003D58  0E01               	movlw	1
  1431   003D5A  6F5F               	movwf	(_motorL+2)& (0+255),b
  1432   003D5C                     
  1433                           ; BSR set to: 1
  1434                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1435   003D5C  0EAA               	movlw	170
  1436   003D5E  6F62               	movwf	(_motorL+5)& (0+255),b
  1437   003D60  0E0F               	movlw	15
  1438   003D62  6F63               	movwf	(_motorL+6)& (0+255),b
  1439   003D64                     
  1440                           ; BSR set to: 1
  1441                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1442   003D64  0EA6               	movlw	166
  1443   003D66  6F64               	movwf	(_motorL+7)& (0+255),b
  1444   003D68  0E0F               	movlw	15
  1445   003D6A  6F65               	movwf	(_motorL+8)& (0+255),b
  1446   003D6C                     
  1447                           ; BSR set to: 1
  1448                           ;main.c: 48:     motorL.PWMperiod=200;
  1449   003D6C  0E00               	movlw	0
  1450   003D6E  6F61               	movwf	(_motorL+4)& (0+255),b
  1451   003D70  0EC8               	movlw	200
  1452   003D72  6F60               	movwf	(_motorL+3)& (0+255),b
  1453   003D74                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 49:     motorR.power=0;
  1456   003D74  0E00               	movlw	0
  1457   003D76  6F54               	movwf	_motorR& (0+255),b
  1458   003D78                     
  1459                           ; BSR set to: 1
  1460                           ;main.c: 50:     motorR.direction=1;
  1461   003D78  0E01               	movlw	1
  1462   003D7A  6F55               	movwf	(_motorR+1)& (0+255),b
  1463   003D7C                     
  1464                           ; BSR set to: 1
  1465                           ;main.c: 51:     motorR.brakemode=1;
  1466   003D7C  0E01               	movlw	1
  1467   003D7E  6F56               	movwf	(_motorR+2)& (0+255),b
  1468   003D80                     
  1469                           ; BSR set to: 1
  1470                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1471   003D80  0E25               	movlw	37
  1472   003D82  6F59               	movwf	(_motorR+5)& (0+255),b
  1473   003D84  0E0F               	movlw	15
  1474   003D86  6F5A               	movwf	(_motorR+6)& (0+255),b
  1475   003D88                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1478   003D88  0E21               	movlw	33
  1479   003D8A  6F5B               	movwf	(_motorR+7)& (0+255),b
  1480   003D8C  0E0F               	movlw	15
  1481   003D8E  6F5C               	movwf	(_motorR+8)& (0+255),b
  1482   003D90                     
  1483                           ; BSR set to: 1
  1484                           ;main.c: 54:     motorR.PWMperiod=200;
  1485   003D90  0E00               	movlw	0
  1486   003D92  6F58               	movwf	(_motorR+4)& (0+255),b
  1487   003D94  0EC8               	movlw	200
  1488   003D96  6F57               	movwf	(_motorR+3)& (0+255),b
  1489   003D98                     
  1490                           ; BSR set to: 1
  1491                           ;main.c: 56:     char buf[100];;main.c: 61:     turnCalibration(&motorL,&motorR);
  1492   003D98  0E5D               	movlw	low _motorL
  1493   003D9A  6E20               	movwf	turnCalibration@mL^0,c
  1494   003D9C  0E01               	movlw	high _motorL
  1495   003D9E  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1496   003DA0  0E54               	movlw	low _motorR
  1497   003DA2  6E22               	movwf	turnCalibration@mR^0,c
  1498   003DA4  0E01               	movlw	high _motorR
  1499   003DA6  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1500   003DA8  EC94  F021         	call	_turnCalibration	;wreg free
  1501   003DAC                     
  1502                           ;main.c: 63:     LATFbits.LATF0=0;
  1503   003DAC  907E               	bcf	126,0,c	;volatile
  1504   003DAE                     
  1505                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1506   003DAE  0E52               	movlw	82
  1507   003DB0  0100               	movlb	0	; () banked
  1508   003DB2  6FD2               	movwf	(??_main+1)& (0+255),b
  1509   003DB4  0E2B               	movlw	43
  1510   003DB6  6FD1               	movwf	??_main& (0+255),b
  1511   003DB8  0E00               	movlw	0
  1512   003DBA                     u5847:
  1513   003DBA  2EE8               	decfsz	wreg,f,c
  1514   003DBC  D7FE               	bra	u5847
  1515   003DBE  2FD1               	decfsz	??_main& (0+255),f,b
  1516   003DC0  D7FC               	bra	u5847
  1517   003DC2  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1518   003DC4  D7FA               	bra	u5847
  1519   003DC6  F000               	nop	
  1520   003DC8                     l342:
  1521   003DC8  B48E               	btfsc	142,2,c	;volatile
  1522   003DCA  EFE9  F01E         	goto	u5741
  1523   003DCE  EFEB  F01E         	goto	u5740
  1524   003DD2                     u5741:
  1525   003DD2  EFE4  F01E         	goto	l342
  1526   003DD6                     u5740:
  1527   003DD6                     
  1528                           ;main.c: 68:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1529   003DD6  0E52               	movlw	82
  1530   003DD8  0100               	movlb	0	; () banked
  1531   003DDA  6FD2               	movwf	(??_main+1)& (0+255),b
  1532   003DDC  0E2B               	movlw	43
  1533   003DDE  6FD1               	movwf	??_main& (0+255),b
  1534   003DE0  0E00               	movlw	0
  1535   003DE2                     u5857:
  1536   003DE2  2EE8               	decfsz	wreg,f,c
  1537   003DE4  D7FE               	bra	u5857
  1538   003DE6  2FD1               	decfsz	??_main& (0+255),f,b
  1539   003DE8  D7FC               	bra	u5857
  1540   003DEA  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1541   003DEC  D7FA               	bra	u5857
  1542   003DEE  F000               	nop	
  1543   003DF0                     
  1544                           ;main.c: 70:     T0CON0bits.T0EN=1;
  1545   003DF0  8ED5               	bsf	213,7,c	;volatile
  1546                           
  1547                           ;main.c: 71:     while (run_flag)
  1548   003DF2  EFA5  F01F         	goto	l5887
  1549   003DF6                     l5855:
  1550                           
  1551                           ; BSR set to: 1
  1552                           ;main.c: 72:     {;main.c: 75:         fullSpeedAhead(&motorL,&motorR);
  1553   003DF6  0E5D               	movlw	low _motorL
  1554   003DF8  6E14               	movwf	fullSpeedAhead@mL^0,c
  1555   003DFA  0E01               	movlw	high _motorL
  1556   003DFC  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1557   003DFE  0E54               	movlw	low _motorR
  1558   003E00  6E16               	movwf	fullSpeedAhead@mR^0,c
  1559   003E02  0E01               	movlw	high _motorR
  1560   003E04  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1561   003E06  EC25  F029         	call	_fullSpeedAhead	;wreg free
  1562   003E0A                     
  1563                           ;main.c: 77:         readColours(&vals);
  1564   003E0A  0E66               	movlw	low _vals
  1565   003E0C  6E0C               	movwf	readColours@vals^0,c
  1566   003E0E  0E01               	movlw	high _vals
  1567   003E10  6E0D               	movwf	(readColours@vals+1)^0,c
  1568   003E12  EC71  F02B         	call	_readColours	;wreg free
  1569   003E16                     
  1570                           ;main.c: 80:         colour_rel(&vals, &rel);
  1571   003E16  0E66               	movlw	low _vals
  1572   003E18  6E4B               	movwf	colour_rel@vals^0,c
  1573   003E1A  0E01               	movlw	high _vals
  1574   003E1C  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1575   003E1E  0E48               	movlw	low _rel
  1576   003E20  6E4D               	movwf	colour_rel@rel^0,c
  1577   003E22  0E01               	movlw	high _rel
  1578   003E24  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1579   003E26  EC8E  F017         	call	_colour_rel	;wreg free
  1580   003E2A                     
  1581                           ;main.c: 83:         if (vals.L>=500){
  1582   003E2A  0101               	movlb	1	; () banked
  1583   003E2C  BF6D               	btfsc	(_vals+7)& (0+255),7,b
  1584   003E2E  EF22  F01F         	goto	u5751
  1585   003E32  0EF4               	movlw	244
  1586   003E34  5D6C               	subwf	(_vals+6)& (0+255),w,b
  1587   003E36  0E01               	movlw	1
  1588   003E38  596D               	subwfb	(_vals+7)& (0+255),w,b
  1589   003E3A  A0D8               	btfss	status,0,c
  1590   003E3C  EF22  F01F         	goto	u5751
  1591   003E40  EF24  F01F         	goto	u5750
  1592   003E44                     u5751:
  1593   003E44  EF83  F01F         	goto	l5879
  1594   003E48                     u5750:
  1595   003E48                     
  1596                           ; BSR set to: 1
  1597                           ;main.c: 84:             move_count++;
  1598   003E48  4BD6               	infsnz	_move_count& (0+255),f,b	;volatile
  1599   003E4A  2BD7               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1600   003E4C                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 85:             getTMR0val();
  1603   003E4C  EC40  F02B         	call	_getTMR0val	;wreg free
  1604   003E50                     
  1605                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1606   003E50  0E5D               	movlw	low _motorL
  1607   003E52  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1608   003E54  0E01               	movlw	high _motorL
  1609   003E56  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1610   003E58  0E54               	movlw	low _motorR
  1611   003E5A  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1612   003E5C  0E01               	movlw	high _motorR
  1613   003E5E  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1614   003E60  ECCD  F02B         	call	_Forwardhalfblock	;wreg free
  1615   003E64                     
  1616                           ;main.c: 89:             stop(&motorL, &motorR);
  1617   003E64  0E5D               	movlw	low _motorL
  1618   003E66  6E14               	movwf	stop@mL^0,c
  1619   003E68  0E01               	movlw	high _motorL
  1620   003E6A  6E15               	movwf	(stop@mL+1)^0,c
  1621   003E6C  0E54               	movlw	low _motorR
  1622   003E6E  6E16               	movwf	stop@mR^0,c
  1623   003E70  0E01               	movlw	high _motorR
  1624   003E72  6E17               	movwf	(stop@mR+1)^0,c
  1625   003E74  ECB8  F029         	call	_stop	;wreg free
  1626   003E78                     
  1627                           ;main.c: 92:             int recognized_colour = consecutive_read(&vals, &rel);
  1628   003E78  0E66               	movlw	low _vals
  1629   003E7A  6E51               	movwf	consecutive_read@vals^0,c
  1630   003E7C  0E01               	movlw	high _vals
  1631   003E7E  6E52               	movwf	(consecutive_read@vals+1)^0,c
  1632   003E80  0E48               	movlw	low _rel
  1633   003E82  6E53               	movwf	consecutive_read@rel^0,c
  1634   003E84  0E01               	movlw	high _rel
  1635   003E86  6E54               	movwf	(consecutive_read@rel+1)^0,c
  1636   003E88  EC35  F027         	call	_consecutive_read	;wreg free
  1637   003E8C  C051  F1D2         	movff	?_consecutive_read,main@recognized_colour
  1638   003E90  C052  F1D3         	movff	?_consecutive_read+1,main@recognized_colour+1
  1639   003E94                     
  1640                           ;main.c: 95:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \r
      +                          \n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1641   003E94  0E6E               	movlw	low main@buf
  1642   003E96  0100               	movlb	0	; () banked
  1643   003E98  6FB0               	movwf	sprintf@s& (0+255),b
  1644   003E9A  0E01               	movlw	high main@buf
  1645   003E9C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1646   003E9E  0E01               	movlw	low STR_1
  1647   003EA0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1648   003EA2  0E0E               	movlw	high STR_1
  1649   003EA4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1650   003EA6  C148  F0B4         	movff	_rel,?_sprintf+4
  1651   003EAA  C149  F0B5         	movff	_rel+1,?_sprintf+5
  1652   003EAE  C14A  F0B6         	movff	_rel+2,?_sprintf+6
  1653   003EB2  C14B  F0B7         	movff	_rel+3,?_sprintf+7
  1654   003EB6  C14C  F0B8         	movff	_rel+4,?_sprintf+8
  1655   003EBA  C14D  F0B9         	movff	_rel+5,?_sprintf+9
  1656   003EBE  C14E  F0BA         	movff	_rel+6,?_sprintf+10
  1657   003EC2  C14F  F0BB         	movff	_rel+7,?_sprintf+11
  1658   003EC6  C150  F0BC         	movff	_rel+8,?_sprintf+12
  1659   003ECA  C151  F0BD         	movff	_rel+9,?_sprintf+13
  1660   003ECE  C152  F0BE         	movff	_rel+10,?_sprintf+14
  1661   003ED2  C153  F0BF         	movff	_rel+11,?_sprintf+15
  1662   003ED6  C16C  F0C0         	movff	_vals+6,?_sprintf+16
  1663   003EDA  C16D  F0C1         	movff	_vals+7,?_sprintf+17
  1664   003EDE  C0EF  F0C2         	movff	_prev_colour,?_sprintf+18
  1665   003EE2  C0F0  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1666   003EE6  EC7D  F02C         	call	_sprintf	;wreg free
  1667   003EEA                     
  1668                           ;main.c: 96:             sendStringSerial4(buf);
  1669   003EEA  0E6E               	movlw	low main@buf
  1670   003EEC  6E02               	movwf	sendStringSerial4@string^0,c
  1671   003EEE  0E01               	movlw	high main@buf
  1672   003EF0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1673   003EF2  ECC2  F02F         	call	_sendStringSerial4	;wreg free
  1674   003EF6                     
  1675                           ;main.c: 98:             colour_move (recognized_colour);
  1676   003EF6  C1D2  F02D         	movff	main@recognized_colour,colour_move@recognized_colour
  1677   003EFA  C1D3  F02E         	movff	main@recognized_colour+1,colour_move@recognized_colour+1
  1678   003EFE  EC57  F01D         	call	_colour_move	;wreg free
  1679                           
  1680                           ;main.c: 100:         }else if (lost_flag){
  1681   003F02  EFA5  F01F         	goto	l5887
  1682   003F06                     l5879:
  1683                           
  1684                           ; BSR set to: 1
  1685   003F06  5114               	movf	_lost_flag& (0+255),w,b
  1686   003F08  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1687   003F0A  B4D8               	btfsc	status,2,c
  1688   003F0C  EF8A  F01F         	goto	u5761
  1689   003F10  EF8C  F01F         	goto	u5760
  1690   003F14                     u5761:
  1691   003F14  EFA5  F01F         	goto	l5887
  1692   003F18                     u5760:
  1693   003F18                     
  1694                           ; BSR set to: 1
  1695                           ;main.c: 101:             move_count++;
  1696   003F18  4BD6               	infsnz	_move_count& (0+255),f,b	;volatile
  1697   003F1A  2BD7               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1698   003F1C                     
  1699                           ; BSR set to: 1
  1700                           ;main.c: 102:             Time_forward[move_count]=65535;
  1701   003F1C  90D8               	bcf	status,0,c
  1702   003F1E  35D6               	rlcf	_move_count& (0+255),w,b	;volatile
  1703   003F20  6ED9               	movwf	fsr2l,c
  1704   003F22  35D7               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1705   003F24  6EDA               	movwf	fsr2h,c
  1706   003F26  0E3C               	movlw	low _Time_forward
  1707   003F28  26D9               	addwf	fsr2l,f,c
  1708   003F2A  0E02               	movlw	high _Time_forward
  1709   003F2C  22DA               	addwfc	fsr2h,f,c
  1710   003F2E  0EFF               	movlw	255
  1711   003F30  6EDE               	movwf	postinc2,c
  1712   003F32  0EFF               	movlw	255
  1713   003F34  6EDD               	movwf	postdec2,c
  1714   003F36                     
  1715                           ; BSR set to: 1
  1716                           ;main.c: 103:             go_Home(WayBack, Time_forward);
  1717   003F36  0E16               	movlw	low _WayBack
  1718   003F38  6E24               	movwf	go_Home@WayBack^0,c
  1719   003F3A  0E01               	movlw	high _WayBack
  1720   003F3C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1721   003F3E  0E3C               	movlw	low _Time_forward
  1722   003F40  6E26               	movwf	go_Home@Time_forward^0,c
  1723   003F42  0E02               	movlw	high _Time_forward
  1724   003F44  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1725   003F46  ECA8  F01A         	call	_go_Home	;wreg free
  1726   003F4A                     l5887:
  1727                           
  1728                           ;main.c: 71:     while (run_flag)
  1729   003F4A  0101               	movlb	1	; () banked
  1730   003F4C  51D4               	movf	_run_flag& (0+255),w,b
  1731   003F4E  11D5               	iorwf	(_run_flag+1)& (0+255),w,b
  1732   003F50  A4D8               	btfss	status,2,c
  1733   003F52  EFAD  F01F         	goto	u5771
  1734   003F56  EFAF  F01F         	goto	u5770
  1735   003F5A                     u5771:
  1736   003F5A  EFFB  F01E         	goto	l5855
  1737   003F5E                     u5770:
  1738   003F5E                     
  1739                           ; BSR set to: 1
  1740   003F5E  EF1A  F000         	goto	start
  1741   003F62                     __end_of_main:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _turnCalibration *****************
  1745 ;; Defined at:
  1746 ;;		line 357 in file "dc_motor.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1749 ;;		 -> motorL(9), 
  1750 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1751 ;;		 -> motorR(9), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:        6 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 5
  1770 ;; This function calls:
  1771 ;;		_turnLeft45
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text1
  1778   004328                     __ptext1:
  1779                           	callstack 0
  1780   004328                     _turnCalibration:
  1781                           	callstack 25
  1782   004328                     
  1783                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  1784   004328  807E               	bsf	126,0,c	;volatile
  1785   00432A                     
  1786                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1787   00432A  0E52               	movlw	82
  1788   00432C  6E25               	movwf	(??_turnCalibration+1)^0,c
  1789   00432E  0E2B               	movlw	43
  1790   004330  6E24               	movwf	??_turnCalibration^0,c
  1791   004332  0E00               	movlw	0
  1792   004334                     u5867:
  1793   004334  2EE8               	decfsz	wreg,f,c
  1794   004336  D7FE               	bra	u5867
  1795   004338  2E24               	decfsz	??_turnCalibration^0,f,c
  1796   00433A  D7FC               	bra	u5867
  1797   00433C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1798   00433E  D7FA               	bra	u5867
  1799   004340  D000               	nop2	
  1800                           
  1801                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1802   004342  EF4E  F022         	goto	l5665
  1803   004346                     l534:
  1804                           
  1805                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  1806   004346  867C               	bsf	124,3,c	;volatile
  1807   004348                     
  1808                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  1809   004348  0E5D               	movlw	low _motorL
  1810   00434A  6E1A               	movwf	turnLeft45@mL^0,c
  1811   00434C  0E01               	movlw	high _motorL
  1812   00434E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1813   004350  0E54               	movlw	low _motorR
  1814   004352  6E1C               	movwf	turnLeft45@mR^0,c
  1815   004354  0E01               	movlw	high _motorR
  1816   004356  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1817   004358  EC62  F02E         	call	_turnLeft45	;wreg free
  1818                           
  1819                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  1820   00435C  0E5D               	movlw	low _motorL
  1821   00435E  6E1A               	movwf	turnLeft45@mL^0,c
  1822   004360  0E01               	movlw	high _motorL
  1823   004362  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1824   004364  0E54               	movlw	low _motorR
  1825   004366  6E1C               	movwf	turnLeft45@mR^0,c
  1826   004368  0E01               	movlw	high _motorR
  1827   00436A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1828   00436C  EC62  F02E         	call	_turnLeft45	;wreg free
  1829                           
  1830                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  1831   004370  0E5D               	movlw	low _motorL
  1832   004372  6E1A               	movwf	turnLeft45@mL^0,c
  1833   004374  0E01               	movlw	high _motorL
  1834   004376  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1835   004378  0E54               	movlw	low _motorR
  1836   00437A  6E1C               	movwf	turnLeft45@mR^0,c
  1837   00437C  0E01               	movlw	high _motorR
  1838   00437E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1839   004380  EC62  F02E         	call	_turnLeft45	;wreg free
  1840                           
  1841                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  1842   004384  0E5D               	movlw	low _motorL
  1843   004386  6E1A               	movwf	turnLeft45@mL^0,c
  1844   004388  0E01               	movlw	high _motorL
  1845   00438A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1846   00438C  0E54               	movlw	low _motorR
  1847   00438E  6E1C               	movwf	turnLeft45@mR^0,c
  1848   004390  0E01               	movlw	high _motorR
  1849   004392  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1850   004394  EC62  F02E         	call	_turnLeft45	;wreg free
  1851                           
  1852                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1853   004398  EF33  F022         	goto	l5659
  1854   00439C                     l536:
  1855                           
  1856                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  1857   00439C  887C               	bsf	124,4,c	;volatile
  1858   00439E                     
  1859                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1860   00439E  0EA3               	movlw	163
  1861   0043A0  6E25               	movwf	(??_turnCalibration+1)^0,c
  1862   0043A2  0E57               	movlw	87
  1863   0043A4  6E24               	movwf	??_turnCalibration^0,c
  1864   0043A6  0E02               	movlw	2
  1865   0043A8                     u5877:
  1866   0043A8  2EE8               	decfsz	wreg,f,c
  1867   0043AA  D7FE               	bra	u5877
  1868   0043AC  2E24               	decfsz	??_turnCalibration^0,f,c
  1869   0043AE  D7FC               	bra	u5877
  1870   0043B0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1871   0043B2  D7FA               	bra	u5877
  1872   0043B4  D000               	nop2	
  1873   0043B6                     
  1874                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1875   0043B6  B68E               	btfsc	142,3,c	;volatile
  1876   0043B8  EFE0  F021         	goto	u5541
  1877   0043BC  EFE2  F021         	goto	u5540
  1878   0043C0                     u5541:
  1879   0043C0  EFFB  F021         	goto	l537
  1880   0043C4                     u5540:
  1881   0043C4  B48E               	btfsc	142,2,c	;volatile
  1882   0043C6  EFE7  F021         	goto	u5551
  1883   0043CA  EFE9  F021         	goto	u5550
  1884   0043CE                     u5551:
  1885   0043CE  EFFB  F021         	goto	l537
  1886   0043D2                     u5550:
  1887   0043D2                     
  1888                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  1889   0043D2  8680               	bsf	128,3,c	;volatile
  1890                           
  1891                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  1892   0043D4  8E7C               	bsf	124,7,c	;volatile
  1893   0043D6                     
  1894                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1895   0043D6  0E52               	movlw	82
  1896   0043D8  6E25               	movwf	(??_turnCalibration+1)^0,c
  1897   0043DA  0E2B               	movlw	43
  1898   0043DC  6E24               	movwf	??_turnCalibration^0,c
  1899   0043DE  0E00               	movlw	0
  1900   0043E0                     u5887:
  1901   0043E0  2EE8               	decfsz	wreg,f,c
  1902   0043E2  D7FE               	bra	u5887
  1903   0043E4  2E24               	decfsz	??_turnCalibration^0,f,c
  1904   0043E6  D7FC               	bra	u5887
  1905   0043E8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1906   0043EA  D7FA               	bra	u5887
  1907   0043EC  D000               	nop2	
  1908   0043EE                     
  1909                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  1910   0043EE  9680               	bcf	128,3,c	;volatile
  1911   0043F0                     
  1912                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  1913   0043F0  9E7C               	bcf	124,7,c	;volatile
  1914                           
  1915                           ;dc_motor.c: 380:             }
  1916   0043F2  EF33  F022         	goto	l5659
  1917   0043F6                     l537:
  1918   0043F6  B68E               	btfsc	142,3,c	;volatile
  1919   0043F8  EF00  F022         	goto	u5561
  1920   0043FC  EF02  F022         	goto	u5560
  1921   004400                     u5561:
  1922   004400  EF17  F022         	goto	l539
  1923   004404                     u5560:
  1924   004404                     
  1925                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  1926   004404  0E0A               	movlw	10
  1927   004406  0100               	movlb	0	; () banked
  1928   004408  27F8               	addwf	_Turn45Delay& (0+255),f,b
  1929   00440A  0E00               	movlw	0
  1930   00440C  23F9               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  1931   00440E                     
  1932                           ; BSR set to: 0
  1933                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  1934   00440E  8680               	bsf	128,3,c	;volatile
  1935   004410                     
  1936                           ; BSR set to: 0
  1937                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1938   004410  0E52               	movlw	82
  1939   004412  6E25               	movwf	(??_turnCalibration+1)^0,c
  1940   004414  0E2B               	movlw	43
  1941   004416  6E24               	movwf	??_turnCalibration^0,c
  1942   004418  0E00               	movlw	0
  1943   00441A                     u5897:
  1944   00441A  2EE8               	decfsz	wreg,f,c
  1945   00441C  D7FE               	bra	u5897
  1946   00441E  2E24               	decfsz	??_turnCalibration^0,f,c
  1947   004420  D7FC               	bra	u5897
  1948   004422  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1949   004424  D7FA               	bra	u5897
  1950   004426  D000               	nop2	
  1951   004428                     
  1952                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  1953   004428  9680               	bcf	128,3,c	;volatile
  1954                           
  1955                           ;dc_motor.c: 387:             }
  1956   00442A  EF33  F022         	goto	l5659
  1957   00442E                     l539:
  1958   00442E  B48E               	btfsc	142,2,c	;volatile
  1959   004430  EF1C  F022         	goto	u5571
  1960   004434  EF1E  F022         	goto	u5570
  1961   004438                     u5571:
  1962   004438  EF33  F022         	goto	l538
  1963   00443C                     u5570:
  1964   00443C                     
  1965                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  1966   00443C  0100               	movlb	0	; () banked
  1967   00443E  0EF6               	movlw	246
  1968   004440  27F8               	addwf	_Turn45Delay& (0+255),f,b
  1969   004442  0EFF               	movlw	255
  1970   004444  23F9               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  1971   004446                     
  1972                           ; BSR set to: 0
  1973                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  1974   004446  8E7C               	bsf	124,7,c	;volatile
  1975   004448                     
  1976                           ; BSR set to: 0
  1977                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1978   004448  0E52               	movlw	82
  1979   00444A  6E25               	movwf	(??_turnCalibration+1)^0,c
  1980   00444C  0E2B               	movlw	43
  1981   00444E  6E24               	movwf	??_turnCalibration^0,c
  1982   004450  0E00               	movlw	0
  1983   004452                     u5907:
  1984   004452  2EE8               	decfsz	wreg,f,c
  1985   004454  D7FE               	bra	u5907
  1986   004456  2E24               	decfsz	??_turnCalibration^0,f,c
  1987   004458  D7FC               	bra	u5907
  1988   00445A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1989   00445C  D7FA               	bra	u5907
  1990   00445E  D000               	nop2	
  1991   004460                     
  1992                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  1993   004460  9E7C               	bcf	124,7,c	;volatile
  1994   004462  EF33  F022         	goto	l5659
  1995   004466                     l538:
  1996   004466                     l5659:
  1997                           
  1998                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1999   004466  A48E               	btfss	142,2,c	;volatile
  2000   004468  EF38  F022         	goto	u5581
  2001   00446C  EF3A  F022         	goto	u5580
  2002   004470                     u5581:
  2003   004470  EF41  F022         	goto	l544
  2004   004474                     u5580:
  2005   004474  B68E               	btfsc	142,3,c	;volatile
  2006   004476  EF3F  F022         	goto	u5591
  2007   00447A  EF41  F022         	goto	u5590
  2008   00447E                     u5591:
  2009   00447E  EFCE  F021         	goto	l536
  2010   004482                     u5590:
  2011   004482                     l544:
  2012                           
  2013                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2014   004482  987C               	bcf	124,4,c	;volatile
  2015   004484                     
  2016                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2017   004484  0EA3               	movlw	163
  2018   004486  6E25               	movwf	(??_turnCalibration+1)^0,c
  2019   004488  0E57               	movlw	87
  2020   00448A  6E24               	movwf	??_turnCalibration^0,c
  2021   00448C  0E02               	movlw	2
  2022   00448E                     u5917:
  2023   00448E  2EE8               	decfsz	wreg,f,c
  2024   004490  D7FE               	bra	u5917
  2025   004492  2E24               	decfsz	??_turnCalibration^0,f,c
  2026   004494  D7FC               	bra	u5917
  2027   004496  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2028   004498  D7FA               	bra	u5917
  2029   00449A  D000               	nop2	
  2030   00449C                     l5665:
  2031                           
  2032                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2033   00449C  B48E               	btfsc	142,2,c	;volatile
  2034   00449E  EF53  F022         	goto	u5601
  2035   0044A2  EF55  F022         	goto	u5600
  2036   0044A6                     u5601:
  2037   0044A6  EFA3  F021         	goto	l534
  2038   0044AA                     u5600:
  2039   0044AA  B68E               	btfsc	142,3,c	;volatile
  2040   0044AC  EF5A  F022         	goto	u5611
  2041   0044B0  EF5C  F022         	goto	u5610
  2042   0044B4                     u5611:
  2043   0044B4  EFA3  F021         	goto	l534
  2044   0044B8                     u5610:
  2045   0044B8                     
  2046                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2047   0044B8  967C               	bcf	124,3,c	;volatile
  2048   0044BA                     
  2049                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2050   0044BA  0EA3               	movlw	163
  2051   0044BC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2052   0044BE  0E57               	movlw	87
  2053   0044C0  6E24               	movwf	??_turnCalibration^0,c
  2054   0044C2  0E02               	movlw	2
  2055   0044C4                     u5927:
  2056   0044C4  2EE8               	decfsz	wreg,f,c
  2057   0044C6  D7FE               	bra	u5927
  2058   0044C8  2E24               	decfsz	??_turnCalibration^0,f,c
  2059   0044CA  D7FC               	bra	u5927
  2060   0044CC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2061   0044CE  D7FA               	bra	u5927
  2062   0044D0  D000               	nop2	
  2063   0044D2  0012               	return		;funcret
  2064   0044D4                     __end_of_turnCalibration:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _sprintf *****************
  2068 ;; Defined at:
  2069 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2072 ;;		 -> main@buf(100), 
  2073 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2074 ;;		 -> STR_1(51), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2077 ;;  ap              2  100[BANK0 ] PTR void [1]
  2078 ;;		 -> ?_sprintf(2), 
  2079 ;;  ret             2    0        int 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2   80[BANK0 ] int 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2089 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;Total ram usage:       33 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 8
  2096 ;; This function calls:
  2097 ;;		_vfprintf
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text2
  2104   0058FA                     __ptext2:
  2105                           	callstack 0
  2106   0058FA                     _sprintf:
  2107                           	callstack 22
  2108   0058FA  0EB4               	movlw	low (?_sprintf+4)
  2109   0058FC  0100               	movlb	0	; () banked
  2110   0058FE  6FC4               	movwf	sprintf@ap& (0+255),b
  2111   005900  0E00               	movlw	high (?_sprintf+4)
  2112   005902  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2113   005904  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2114   005908  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2115   00590C                     
  2116                           ; BSR set to: 0
  2117   00590C  0E00               	movlw	0
  2118   00590E  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2119   005910  0E00               	movlw	0
  2120   005912  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2121   005914                     
  2122                           ; BSR set to: 0
  2123   005914  0E00               	movlw	0
  2124   005916  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2125   005918  0E00               	movlw	0
  2126   00591A  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2127   00591C                     
  2128                           ; BSR set to: 0
  2129   00591C  0EC6               	movlw	low sprintf@f
  2130   00591E  6FA8               	movwf	vfprintf@fp& (0+255),b
  2131   005920  0E00               	movlw	high sprintf@f
  2132   005922  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2133   005924  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2134   005928  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2135   00592C  0EC4               	movlw	low sprintf@ap
  2136   00592E  6FAC               	movwf	vfprintf@ap& (0+255),b
  2137   005930  0E00               	movlw	high sprintf@ap
  2138   005932  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2139   005934  EC52  F02C         	call	_vfprintf	;wreg free
  2140   005938  0100               	movlb	0	; () banked
  2141   00593A  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2142   00593C  25B0               	addwf	sprintf@s& (0+255),w,b
  2143   00593E  6ED9               	movwf	fsr2l,c
  2144   005940  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2145   005942  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2146   005944  6EDA               	movwf	fsr2h,c
  2147   005946  0E00               	movlw	0
  2148   005948  6EDF               	movwf	indf2,c
  2149   00594A                     
  2150                           ; BSR set to: 0
  2151   00594A  0012               	return		;funcret
  2152   00594C                     __end_of_sprintf:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _vfprintf *****************
  2156 ;; Defined at:
  2157 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2160 ;;		 -> sprintf@f(11), 
  2161 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2162 ;;		 -> STR_1(51), 
  2163 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2164 ;;		 -> sprintf@ap(2), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2167 ;;		 -> STR_1(51), 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2   72[BANK0 ] int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2177 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;Total ram usage:        8 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 7
  2184 ;; This function calls:
  2185 ;;		_vfpfcnvrt
  2186 ;; This function is called by:
  2187 ;;		_sprintf
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text3
  2192   0058A4                     __ptext3:
  2193                           	callstack 0
  2194   0058A4                     _vfprintf:
  2195                           	callstack 22
  2196   0058A4                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2198   0058A4  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2199   0058A8  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2202   0058AC  EF67  F02C         	goto	l5501
  2203   0058B0                     l5499:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2206   0058B0  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2207   0058B4  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2208   0058B8  0EAE               	movlw	low vfprintf@cfmt
  2209   0058BA  0100               	movlb	0	; () banked
  2210   0058BC  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2211   0058BE  0E00               	movlw	high vfprintf@cfmt
  2212   0058C0  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2213   0058C2  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2214   0058C6  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2215   0058CA  EC25  F019         	call	_vfpfcnvrt	;wreg free
  2216   0058CE                     l5501:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2219   0058CE  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2220   0058D2  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2221   0058D6                     	if	0	;tblptru may be non-zero
  2222   0058D6                     	endif
  2223   0058D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2224   0058D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2225   0058D8  6EF8               	movwf	tblptru,c
  2226   0058DA                     	endif
  2227   0058DA  0008               	tblrd		*
  2228   0058DC  50F5               	movf	tablat,w,c
  2229   0058DE  0900               	iorlw	0
  2230   0058E0  A4D8               	btfss	status,2,c
  2231   0058E2  EF75  F02C         	goto	u5501
  2232   0058E6  EF77  F02C         	goto	u5500
  2233   0058EA                     u5501:
  2234   0058EA  EF58  F02C         	goto	l5499
  2235   0058EE                     u5500:
  2236   0058EE                     
  2237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2238   0058EE  0E00               	movlw	0
  2239   0058F0  0100               	movlb	0	; () banked
  2240   0058F2  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2241   0058F4  0E00               	movlw	0
  2242   0058F6  6FA8               	movwf	?_vfprintf& (0+255),b
  2243   0058F8                     
  2244                           ; BSR set to: 0
  2245   0058F8  0012               	return		;funcret
  2246   0058FA                     __end_of_vfprintf:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _vfpfcnvrt *****************
  2250 ;; Defined at:
  2251 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2254 ;;		 -> sprintf@f(11), 
  2255 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2256 ;;		 -> vfprintf@cfmt(2), 
  2257 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2258 ;;		 -> sprintf@ap(2), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  convarg         8   61[BANK0 ] struct .
  2261 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2262 ;;		 -> STR_1(51), 
  2263 ;;  i               2    0        int 
  2264 ;;  done            2    0        int 
  2265 ;;  c               1   69[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2275 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;Total ram usage:       19 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 6
  2282 ;; This function calls:
  2283 ;;		_dtoa
  2284 ;;		_efgtoa
  2285 ;;		_fputc
  2286 ;; This function is called by:
  2287 ;;		_vfprintf
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text4
  2292   00324A                     __ptext4:
  2293                           	callstack 0
  2294   00324A                     _vfpfcnvrt:
  2295                           	callstack 22
  2296   00324A                     
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2298   00324A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299   00324E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300   003252  CFDE FFF6          	movff	postinc2,tblptrl
  2301   003256  CFDD FFF7          	movff	postdec2,tblptrh
  2302   00325A                     	if	0	;tblptru may be non-zero
  2303   00325A                     	endif
  2304   00325A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2305   00325A  0E00               	movlw	low (__mediumconst shr (0+16))
  2306   00325C  6EF8               	movwf	tblptru,c
  2307   00325E                     	endif
  2308   00325E  0008               	tblrd		*
  2309   003260  50F5               	movf	tablat,w,c
  2310   003262  0A25               	xorlw	37
  2311   003264  A4D8               	btfss	status,2,c
  2312   003266  EF37  F019         	goto	u5061
  2313   00326A  EF39  F019         	goto	u5060
  2314   00326E                     u5061:
  2315   00326E  EF91  F01A         	goto	l5217
  2316   003272                     u5060:
  2317   003272                     
  2318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2319   003272  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320   003276  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321   00327A  2ADE               	incf	postinc2,f,c
  2322   00327C  0E00               	movlw	0
  2323   00327E  22DD               	addwfc	postdec2,f,c
  2324   003280                     
  2325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2326   003280  0E00               	movlw	0
  2327   003282  0100               	movlb	0	; () banked
  2328   003284  6FE8               	movwf	(_width+1)& (0+255),b
  2329   003286  0E00               	movlw	0
  2330   003288  6FE7               	movwf	_width& (0+255),b
  2331   00328A  C0E7  F0F1         	movff	_width,_flags
  2332   00328E                     
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2335   00328E  69E9               	setf	_prec& (0+255),b
  2336   003290  69EA               	setf	(_prec+1)& (0+255),b
  2337   003292                     
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2340   003292  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341   003296  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342   00329A  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2343   00329E  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2344   0032A2                     
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2347   0032A2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2348   0032A6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2349   0032AA                     	if	0	;tblptru may be non-zero
  2350   0032AA                     	endif
  2351   0032AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2352   0032AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2353   0032AC  6EF8               	movwf	tblptru,c
  2354   0032AE                     	endif
  2355   0032AE  0008               	tblrd		*
  2356   0032B0  50F5               	movf	tablat,w,c
  2357   0032B2  0A64               	xorlw	100
  2358   0032B4  B4D8               	btfsc	status,2,c
  2359   0032B6  EF5F  F019         	goto	u5071
  2360   0032BA  EF61  F019         	goto	u5070
  2361   0032BE                     u5071:
  2362   0032BE  EF71  F019         	goto	l5173
  2363   0032C2                     u5070:
  2364   0032C2                     
  2365                           ; BSR set to: 0
  2366   0032C2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2367   0032C6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2368   0032CA                     	if	0	;tblptru may be non-zero
  2369   0032CA                     	endif
  2370   0032CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2371   0032CA  0E00               	movlw	low (__mediumconst shr (0+16))
  2372   0032CC  6EF8               	movwf	tblptru,c
  2373   0032CE                     	endif
  2374   0032CE  0008               	tblrd		*
  2375   0032D0  50F5               	movf	tablat,w,c
  2376   0032D2  0A69               	xorlw	105
  2377   0032D4  A4D8               	btfss	status,2,c
  2378   0032D6  EF6F  F019         	goto	u5081
  2379   0032DA  EF71  F019         	goto	u5080
  2380   0032DE                     u5081:
  2381   0032DE  EFB4  F019         	goto	l5179
  2382   0032E2                     u5080:
  2383   0032E2                     l5173:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2387   0032E2  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2388   0032E6  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2389   0032EA  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2390   0032EE  0E02               	movlw	2
  2391   0032F0  26DE               	addwf	postinc2,f,c
  2392   0032F2  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2393   0032F6  0E00               	movlw	0
  2394   0032F8  22DD               	addwfc	postdec2,f,c
  2395   0032FA  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2396   0032FE  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2397   003302  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2398   003306  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2399   00330A  0E00               	movlw	0
  2400   00330C  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2401   00330E  0EFF               	movlw	-1
  2402   003310  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2403   003312  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2404   003314  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2405   003316  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2406   003318  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2407   00331A  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2410   00331C  0E01               	movlw	1
  2411   00331E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2412   003320  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2413   003322  0E00               	movlw	0
  2414   003324  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2415   003326  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2416   003328  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417   00332C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418   003330  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2419   003334  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2420   003338                     
  2421                           ; BSR set to: 0
  2422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2423   003338  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2424   00333C  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2425   003340  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2426   003344  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2427   003348  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2428   00334C  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2429   003350  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2430   003354  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2431   003358  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2432   00335C  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2433   003360  EC18  F01C         	call	_dtoa	;wreg free
  2434   003364  EFA7  F01A         	goto	l1538
  2435   003368                     l5179:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2439   003368  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2440   00336C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2441   003370  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2442   003374  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2443   003378                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2446   003378  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2447   00337C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2448   003380                     	if	0	;tblptru may be non-zero
  2449   003380                     	endif
  2450   003380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2451   003380  0E00               	movlw	low (__mediumconst shr (0+16))
  2452   003382  6EF8               	movwf	tblptru,c
  2453   003384                     	endif
  2454   003384  0008               	tblrd		*
  2455   003386  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2458   00338A  EFD3  F019         	goto	l5191
  2459   00338E                     l5183:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2463   00338E  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2464   003390  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2467   003392  EFEC  F019         	goto	l5193
  2468   003396                     l5185:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2472   003396  0E6C               	movlw	108
  2473   003398  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2476   00339A  EFEC  F019         	goto	l5193
  2477   00339E                     l5187:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2481   00339E  0E00               	movlw	0
  2482   0033A0  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2485   0033A2  EFEC  F019         	goto	l5193
  2486   0033A6                     l5191:
  2487                           
  2488                           ; BSR set to: 0
  2489   0033A6  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2490   0033A8  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2491   0033AA  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2492                           
  2493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2494                           ; Switch size 1, requested type "simple"
  2495                           ; Number of cases is 1, Range of values is 0 to 0
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte            4     3 (average)
  2499                           ;	Chosen strategy is simple_byte
  2500   0033AC  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2501   0033AE  0A00               	xorlw	0	; case 0
  2502   0033B0  B4D8               	btfsc	status,2,c
  2503   0033B2  EFDD  F019         	goto	l6029
  2504   0033B6  EFCF  F019         	goto	l5187
  2505   0033BA                     l6029:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ; Switch size 1, requested type "simple"
  2509                           ; Number of cases is 3, Range of values is 76 to 108
  2510                           ; switch strategies available:
  2511                           ; Name         Instructions Cycles
  2512                           ; simple_byte           10     6 (average)
  2513                           ;	Chosen strategy is simple_byte
  2514   0033BA  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2515   0033BC  0A4C               	xorlw	76	; case 76
  2516   0033BE  B4D8               	btfsc	status,2,c
  2517   0033C0  EFC7  F019         	goto	l5183
  2518   0033C4  0A2A               	xorlw	42	; case 102
  2519   0033C6  B4D8               	btfsc	status,2,c
  2520   0033C8  EFCB  F019         	goto	l5185
  2521   0033CC  0A0A               	xorlw	10	; case 108
  2522   0033CE  B4D8               	btfsc	status,2,c
  2523   0033D0  EFC7  F019         	goto	l5183
  2524   0033D4  EFCF  F019         	goto	l5187
  2525   0033D8                     l5193:
  2526                           
  2527                           ; BSR set to: 0
  2528   0033D8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2529   0033DC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2530   0033E0                     	if	0	;tblptru may be non-zero
  2531   0033E0                     	endif
  2532   0033E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2533   0033E0  0E00               	movlw	low (__mediumconst shr (0+16))
  2534   0033E2  6EF8               	movwf	tblptru,c
  2535   0033E4                     	endif
  2536   0033E4  0008               	tblrd		*
  2537   0033E6  50F5               	movf	tablat,w,c
  2538   0033E8  0A66               	xorlw	102
  2539   0033EA  A4D8               	btfss	status,2,c
  2540   0033EC  EFFA  F019         	goto	u5091
  2541   0033F0  EFFC  F019         	goto	u5090
  2542   0033F4                     u5091:
  2543   0033F4  EF88  F01A         	goto	l5213
  2544   0033F8                     u5090:
  2545   0033F8  EF32  F01A         	goto	l5201
  2546   0033FC                     l5195:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2550   0033FC  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2551   003400  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2552   003404  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2553   003408  0E04               	movlw	4
  2554   00340A  26DE               	addwf	postinc2,f,c
  2555   00340C  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2556   003410  0E00               	movlw	0
  2557   003412  22DD               	addwfc	postdec2,f,c
  2558   003414  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2559   003418  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2560   00341C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2561   003420  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2562   003424  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2563   003428  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2566   00342C  EF47  F01A         	goto	l5203
  2567   003430                     l5197:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2571   003430  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2572   003434  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2573   003438  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2574   00343C  0E04               	movlw	4
  2575   00343E  26DE               	addwf	postinc2,f,c
  2576   003440  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2577   003444  0E00               	movlw	0
  2578   003446  22DD               	addwfc	postdec2,f,c
  2579   003448  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2580   00344C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2581   003450  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2582   003454  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2583   003458  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2584   00345C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2587   003460  EF47  F01A         	goto	l5203
  2588   003464                     l5201:
  2589                           
  2590                           ; BSR set to: 0
  2591   003464  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2592   003466  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2593   003468  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2594                           
  2595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 1, Range of values is 0 to 0
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte            4     3 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602   00346A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2603   00346C  0A00               	xorlw	0	; case 0
  2604   00346E  B4D8               	btfsc	status,2,c
  2605   003470  EF3C  F01A         	goto	l6031
  2606   003474  EF47  F01A         	goto	l5203
  2607   003478                     l6031:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 2, Range of values is 76 to 108
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte            7     4 (average)
  2615                           ;	Chosen strategy is simple_byte
  2616   003478  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2617   00347A  0A4C               	xorlw	76	; case 76
  2618   00347C  B4D8               	btfsc	status,2,c
  2619   00347E  EF18  F01A         	goto	l5197
  2620   003482  0A20               	xorlw	32	; case 108
  2621   003484  B4D8               	btfsc	status,2,c
  2622   003486  EFFE  F019         	goto	l5195
  2623   00348A  EF47  F01A         	goto	l5203
  2624   00348E                     l5203:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2628   00348E  0E01               	movlw	1
  2629   003490  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2630   003492  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2631   003494  0E00               	movlw	0
  2632   003496  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2633   003498  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2634   00349A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635   00349E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636   0034A2  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2637   0034A6  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2640   0034AA  EF70  F01A         	goto	l5211
  2641   0034AE                     l5205:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2645   0034AE  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2646   0034B2  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2647   0034B6  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2648   0034BA  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2649   0034BE  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2650   0034C2  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2651   0034C6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2652   0034CA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2653   0034CE                     	if	0	;tblptru may be non-zero
  2654   0034CE                     	endif
  2655   0034CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2656   0034CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2657   0034D0  6EF8               	movwf	tblptru,c
  2658   0034D2                     	endif
  2659   0034D2  0008               	tblrd		*
  2660   0034D4  CFF5 F066          	movff	tablat,efgtoa@c
  2661   0034D8  EC4F  F00C         	call	_efgtoa	;wreg free
  2662   0034DC  EFA7  F01A         	goto	l1538
  2663   0034E0                     l5211:
  2664                           
  2665                           ; BSR set to: 0
  2666   0034E0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2667   0034E4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2668   0034E8                     	if	0	;tblptru may be non-zero
  2669   0034E8                     	endif
  2670   0034E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2671   0034E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2672   0034EA  6EF8               	movwf	tblptru,c
  2673   0034EC                     	endif
  2674   0034EC  0008               	tblrd		*
  2675   0034EE  50F5               	movf	tablat,w,c
  2676   0034F0  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2677   0034F2  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2678                           
  2679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 1, Range of values is 0 to 0
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte            4     3 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686   0034F4  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2687   0034F6  0A00               	xorlw	0	; case 0
  2688   0034F8  B4D8               	btfsc	status,2,c
  2689   0034FA  EF81  F01A         	goto	l6033
  2690   0034FE  EF88  F01A         	goto	l5213
  2691   003502                     l6033:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ; Switch size 1, requested type "simple"
  2695                           ; Number of cases is 1, Range of values is 102 to 102
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte            4     3 (average)
  2699                           ;	Chosen strategy is simple_byte
  2700   003502  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2701   003504  0A66               	xorlw	102	; case 102
  2702   003506  B4D8               	btfsc	status,2,c
  2703   003508  EF57  F01A         	goto	l5205
  2704   00350C  EF88  F01A         	goto	l5213
  2705   003510                     l5213:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2708   003510  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2709   003514  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2710   003518  2ADE               	incf	postinc2,f,c
  2711   00351A  0E00               	movlw	0
  2712   00351C  22DD               	addwfc	postdec2,f,c
  2713   00351E  EFA7  F01A         	goto	l1538
  2714   003522                     l5217:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2717   003522  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2718   003526  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2719   00352A  CFDE FFF6          	movff	postinc2,tblptrl
  2720   00352E  CFDD FFF7          	movff	postdec2,tblptrh
  2721   003532                     	if	0	;tblptru may be non-zero
  2722   003532                     	endif
  2723   003532                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2724   003532  0E00               	movlw	low (__mediumconst shr (0+16))
  2725   003534  6EF8               	movwf	tblptru,c
  2726   003536                     	endif
  2727   003536  0008               	tblrd		*
  2728   003538  50F5               	movf	tablat,w,c
  2729   00353A  6E01               	movwf	fputc@c^0,c
  2730   00353C  6A02               	clrf	(fputc@c+1)^0,c
  2731   00353E  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2732   003542  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2733   003546  EC1A  F026         	call	_fputc	;wreg free
  2734   00354A  EF88  F01A         	goto	l5213
  2735   00354E                     l1538:
  2736   00354E  0012               	return		;funcret
  2737   003550                     __end_of_vfpfcnvrt:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _efgtoa *****************
  2741 ;; Defined at:
  2742 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2745 ;;		 -> sprintf@f(11), 
  2746 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2747 ;;  c               1    6[BANK0 ] unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  u               4   49[BANK0 ] struct flui
  2750 ;;  g               4   45[BANK0 ] struct flui
  2751 ;;  l               4   38[BANK0 ] struct flui
  2752 ;;  h               4   34[BANK0 ] struct flui
  2753 ;;  ou              4   28[BANK0 ] struct flui
  2754 ;;  n               2   43[BANK0 ] int 
  2755 ;;  i               2   32[BANK0 ] int 
  2756 ;;  w               2   26[BANK0 ] int 
  2757 ;;  e               2   24[BANK0 ] int 
  2758 ;;  m               2   22[BANK0 ] int 
  2759 ;;  d               2   20[BANK0 ] int 
  2760 ;;  t               2   13[BANK0 ] int 
  2761 ;;  p               2   11[BANK0 ] int 
  2762 ;;  ne              2    9[BANK0 ] int 
  2763 ;;  sign            1   42[BANK0 ] unsigned char 
  2764 ;;  nmode           1   19[BANK0 ] unsigned char 
  2765 ;;  mode            1   18[BANK0 ] unsigned char 
  2766 ;;  pp              1   17[BANK0 ] unsigned char 
  2767 ;;  esign           1    0        unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2777 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;Total ram usage:       53 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 5
  2784 ;; This function calls:
  2785 ;;		___fladd
  2786 ;;		___fldiv
  2787 ;;		___fleq
  2788 ;;		___flge
  2789 ;;		___flmul
  2790 ;;		___flneg
  2791 ;;		___flsub
  2792 ;;		___fltol
  2793 ;;		___fpclassifyf
  2794 ;;		_floorf
  2795 ;;		_labs
  2796 ;;		_memcpy
  2797 ;;		_pad
  2798 ;;		_strcpy
  2799 ;; This function is called by:
  2800 ;;		_vfpfcnvrt
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text5
  2805   00189E                     __ptext5:
  2806                           	callstack 0
  2807   00189E                     _efgtoa:
  2808                           	callstack 22
  2809   00189E                     
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2811   00189E  0E00               	movlw	0
  2812   0018A0  0100               	movlb	0	; () banked
  2813   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  2814   0018A4                     
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2817   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2818   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2819   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2820   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2821   0018B4                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2824   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2825   0018B6  EF61  F00C         	goto	u4620
  2826   0018BA  EF5F  F00C         	goto	u4621
  2827   0018BE                     u4621:
  2828   0018BE  EF75  F00C         	goto	l4841
  2829   0018C2                     u4620:
  2830   0018C2                     
  2831                           ; BSR set to: 0
  2832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2833   0018C2  0E01               	movlw	1
  2834   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  2835   0018C6                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2838   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2839   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2840   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2841   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2842   0018D6  EC6F  F02F         	call	___flneg	;wreg free
  2843   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  2844   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2845   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2846   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2847   0018EA                     l4841:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2850   0018EA  0E00               	movlw	0
  2851   0018EC  0100               	movlb	0	; () banked
  2852   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2853   0018F0  0E00               	movlw	0
  2854   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  2855   0018F4                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2858   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  2859   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2860   0018FC                     
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2863   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  2864   0018FE  B4D8               	btfsc	status,2,c
  2865   001900  EF84  F00C         	goto	u4631
  2866   001904  EF86  F00C         	goto	u4630
  2867   001908                     u4631:
  2868   001908  EF9A  F00C         	goto	l4855
  2869   00190C                     u4630:
  2870   00190C                     
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2873   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  2874   00190E  A4D8               	btfss	status,2,c
  2875   001910  EF8C  F00C         	goto	u4641
  2876   001914  EF8E  F00C         	goto	u4640
  2877   001918                     u4641:
  2878   001918  EF94  F00C         	goto	l4851
  2879   00191C                     u4640:
  2880   00191C                     
  2881                           ; BSR set to: 0
  2882   00191C  0E00               	movlw	0
  2883   00191E  6F70               	movwf	(_efgtoa$2894+1)& (0+255),b
  2884   001920  0E2B               	movlw	43
  2885   001922  6F6F               	movwf	_efgtoa$2894& (0+255),b
  2886   001924  EF98  F00C         	goto	l4853
  2887   001928                     l4851:
  2888                           
  2889                           ; BSR set to: 0
  2890   001928  0E00               	movlw	0
  2891   00192A  6F70               	movwf	(_efgtoa$2894+1)& (0+255),b
  2892   00192C  0E2D               	movlw	45
  2893   00192E  6F6F               	movwf	_efgtoa$2894& (0+255),b
  2894   001930                     l4853:
  2895                           
  2896                           ; BSR set to: 0
  2897   001930  C06F  F08A         	movff	_efgtoa$2894,efgtoa@sign
  2898   001934                     l4855:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2902   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2903   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2904   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2905   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2906   001944  EC9B  F025         	call	___fpclassifyf	;wreg free
  2907   001948  0401               	decf	?___fpclassifyf^0,w,c
  2908   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2909   00194C  A4D8               	btfss	status,2,c
  2910   00194E  EFAB  F00C         	goto	u4651
  2911   001952  EFAD  F00C         	goto	u4650
  2912   001956                     u4651:
  2913   001956  EFE0  F00C         	goto	l4873
  2914   00195A                     u4650:
  2915   00195A                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2917   00195A  0100               	movlb	0	; () banked
  2918   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  2919   00195E  B4D8               	btfsc	status,2,c
  2920   001960  EFB4  F00C         	goto	u4661
  2921   001964  EFB6  F00C         	goto	u4660
  2922   001968                     u4661:
  2923   001968  EFBF  F00C         	goto	l4865
  2924   00196C                     u4660:
  2925   00196C                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2928   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  2929   001970                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2932   001970  077A               	decf	efgtoa@w& (0+255),f,b
  2933   001972  A0D8               	btfss	status,0,c
  2934   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  2935   001976                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2938   001976  0E00               	movlw	0
  2939   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2940   00197A  0E01               	movlw	1
  2941   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  2942   00197E                     l4865:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2946   00197E  0EA0               	movlw	low _dbuf
  2947   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  2948   001982  6E01               	movwf	strcpy@dest^0,c
  2949   001984  0E02               	movlw	high _dbuf
  2950   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2951   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  2952   00198A  0E34               	movlw	low STR_2
  2953   00198C  6E03               	movwf	strcpy@src^0,c
  2954   00198E  0E0E               	movlw	high STR_2
  2955   001990  6E04               	movwf	(strcpy@src+1)^0,c
  2956   001992  ECAC  F02E         	call	_strcpy	;wreg free
  2957   001996                     l4867:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2960   001996  0100               	movlb	0	; () banked
  2961   001998  0EFD               	movlw	253
  2962   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  2963   00199C  0EFF               	movlw	255
  2964   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2965   0019A0                     
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2968   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  2969   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  2970   0019A8  0EA0               	movlw	low _dbuf
  2971   0019AA  6E13               	movwf	pad@buf^0,c
  2972   0019AC  0E02               	movlw	high _dbuf
  2973   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  2974   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  2975   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  2976   0019B8  ECF7  F029         	call	_pad	;wreg free
  2977   0019BC  EF4B  F011         	goto	l1490
  2978   0019C0                     l4873:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2981   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2982   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2983   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2984   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2985   0019D0  EC9B  F025         	call	___fpclassifyf	;wreg free
  2986   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  2987   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2988   0019D8  A4D8               	btfss	status,2,c
  2989   0019DA  EFF1  F00C         	goto	u4671
  2990   0019DE  EFF3  F00C         	goto	u4670
  2991   0019E2                     u4671:
  2992   0019E2  EF13  F00D         	goto	l4891
  2993   0019E6                     u4670:
  2994   0019E6                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2996   0019E6  0100               	movlb	0	; () banked
  2997   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  2998   0019EA  B4D8               	btfsc	status,2,c
  2999   0019EC  EFFA  F00C         	goto	u4681
  3000   0019F0  EFFC  F00C         	goto	u4680
  3001   0019F4                     u4681:
  3002   0019F4  EF05  F00D         	goto	l4883
  3003   0019F8                     u4680:
  3004   0019F8                     
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3007   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3008   0019FC                     
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3011   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3012   0019FE  A0D8               	btfss	status,0,c
  3013   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3014   001A02                     
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3017   001A02  0E00               	movlw	0
  3018   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3019   001A06  0E01               	movlw	1
  3020   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3021   001A0A                     l4883:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3025   001A0A  0EA0               	movlw	low _dbuf
  3026   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3027   001A0E  6E01               	movwf	strcpy@dest^0,c
  3028   001A10  0E02               	movlw	high _dbuf
  3029   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3030   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3031   001A16  0E38               	movlw	low STR_5
  3032   001A18  6E03               	movwf	strcpy@src^0,c
  3033   001A1A  0E0E               	movlw	high STR_5
  3034   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3035   001A1E  ECAC  F02E         	call	_strcpy	;wreg free
  3036   001A22  EFCB  F00C         	goto	l4867
  3037   001A26                     l4891:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3040   001A26  0E00               	movlw	0
  3041   001A28  0100               	movlb	0	; () banked
  3042   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3043   001A2C  0E00               	movlw	0
  3044   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3045   001A30  0E80               	movlw	128
  3046   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3047   001A34  0E3F               	movlw	63
  3048   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3051   001A38  0E00               	movlw	0
  3052   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3053   001A3C  0E00               	movlw	0
  3054   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3055   001A40                     
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3058   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3059   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3060   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3061   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3062   001A50  0E00               	movlw	0
  3063   001A52  6E36               	movwf	___fleq@ff2^0,c
  3064   001A54  0E00               	movlw	0
  3065   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3066   001A58  0E00               	movlw	0
  3067   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3068   001A5C  0E00               	movlw	0
  3069   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3070   001A60  EC8E  F027         	call	___fleq	;wreg free
  3071   001A64  B0D8               	btfsc	status,0,c
  3072   001A66  EF37  F00D         	goto	u4691
  3073   001A6A  EF39  F00D         	goto	u4690
  3074   001A6E                     u4691:
  3075   001A6E  EF18  F00E         	goto	l1493
  3076   001A72                     u4690:
  3077   001A72  EF46  F00D         	goto	l4899
  3078   001A76                     l1495:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3081   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3082   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3083   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3084   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3085   001A86                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3087   001A86  0100               	movlb	0	; () banked
  3088   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3089   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3090   001A8C                     l4899:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3093   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3094   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3095   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3096   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3097   001A9C  0E00               	movlw	0
  3098   001A9E  6E15               	movwf	___flmul@a^0,c
  3099   001AA0  0E00               	movlw	0
  3100   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3101   001AA4  0E20               	movlw	32
  3102   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3103   001AA8  0E41               	movlw	65
  3104   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3105   001AAC  ECAC  F013         	call	___flmul	;wreg free
  3106   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3107   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3108   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3109   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3110   001AC0  0100               	movlb	0	; () banked
  3111   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3112   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3113   001AC6  6E01               	movwf	labs@a^0,c
  3114   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3115   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3116   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3117   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3118   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3119   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3120   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3121   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3122   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3123   001ADA  ECDA  F02A         	call	_labs	;wreg free
  3124   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3125   001AE0  EF7D  F00D         	goto	u4701
  3126   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3127   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3128   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3129   001AEA  E109               	bnz	u4700
  3130   001AEC  0E02               	movlw	2
  3131   001AEE  5C01               	subwf	?_labs^0,w,c
  3132   001AF0  A0D8               	btfss	status,0,c
  3133   001AF2  EF7D  F00D         	goto	u4701
  3134   001AF6  EF7F  F00D         	goto	u4700
  3135   001AFA                     u4701:
  3136   001AFA  EF3B  F00D         	goto	l1495
  3137   001AFE                     u4700:
  3138   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3139   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3140   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3141   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3142   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3143   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3144   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3145   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3146   001B1E  EC19  F025         	call	___flge	;wreg free
  3147   001B22  A0D8               	btfss	status,0,c
  3148   001B24  EF96  F00D         	goto	u4711
  3149   001B28  EF98  F00D         	goto	u4710
  3150   001B2C                     u4711:
  3151   001B2C  EF3B  F00D         	goto	l1495
  3152   001B30                     u4710:
  3153   001B30                     
  3154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3155   001B30  0100               	movlb	0	; () banked
  3156   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3157   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3158   001B36  6E01               	movwf	labs@a^0,c
  3159   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3160   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3161   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3162   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3163   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3164   001B42  6E03               	movwf	(labs@a+2)^0,c
  3165   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3166   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3167   001B48  6E04               	movwf	(labs@a+3)^0,c
  3168   001B4A  ECDA  F02A         	call	_labs	;wreg free
  3169   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3170   001B50  EFB7  F00D         	goto	u4720
  3171   001B54  5004               	movf	(?_labs+3)^0,w,c
  3172   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3173   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3174   001B5A  E107               	bnz	u4721
  3175   001B5C  0E02               	movlw	2
  3176   001B5E  5C01               	subwf	?_labs^0,w,c
  3177   001B60  B0D8               	btfsc	status,0,c
  3178   001B62  EFB5  F00D         	goto	u4721
  3179   001B66  EFB7  F00D         	goto	u4720
  3180   001B6A                     u4721:
  3181   001B6A  EFFF  F00D         	goto	l4917
  3182   001B6E                     u4720:
  3183   001B6E                     l4907:
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3186   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3187   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3188   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3189   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3192   001B7E  EF18  F00E         	goto	l1493
  3193   001B82                     l4909:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3196   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3197   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3198   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3199   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3200   001B92  0E00               	movlw	0
  3201   001B94  6E36               	movwf	___fldiv@a^0,c
  3202   001B96  0E00               	movlw	0
  3203   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3204   001B9A  0E20               	movlw	32
  3205   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3206   001B9E  0E41               	movlw	65
  3207   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3208   001BA2  ECC1  F015         	call	___fldiv	;wreg free
  3209   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3210   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3211   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3212   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3213   001BB6                     
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3215   001BB6  0100               	movlb	0	; () banked
  3216   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3217   001BBA  A0D8               	btfss	status,0,c
  3218   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3219   001BBE                     
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3222   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3223   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3224   001BC2  6E01               	movwf	labs@a^0,c
  3225   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3226   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3227   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3228   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3229   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3230   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3231   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3232   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3233   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3234   001BD6  ECDA  F02A         	call	_labs	;wreg free
  3235   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3236   001BDC  EFFD  F00D         	goto	u4730
  3237   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3238   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3239   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3240   001BE6  E107               	bnz	u4731
  3241   001BE8  0E02               	movlw	2
  3242   001BEA  5C01               	subwf	?_labs^0,w,c
  3243   001BEC  B0D8               	btfsc	status,0,c
  3244   001BEE  EFFB  F00D         	goto	u4731
  3245   001BF2  EFFD  F00D         	goto	u4730
  3246   001BF6                     u4731:
  3247   001BF6  EFFF  F00D         	goto	l4917
  3248   001BFA                     u4730:
  3249   001BFA  EFB7  F00D         	goto	l4907
  3250   001BFE                     l4917:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3253   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3254   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3255   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3256   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3257   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3258   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3259   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3260   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3261   001C1E  EC19  F025         	call	___flge	;wreg free
  3262   001C22  A0D8               	btfss	status,0,c
  3263   001C24  EF16  F00E         	goto	u4741
  3264   001C28  EF18  F00E         	goto	u4740
  3265   001C2C                     u4741:
  3266   001C2C  EFC1  F00D         	goto	l4909
  3267   001C30                     u4740:
  3268   001C30                     l1493:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3271   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3274   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3275   001C38                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3277   001C38  0100               	movlb	0	; () banked
  3278   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3279   001C3C  EF22  F00E         	goto	u4751
  3280   001C40  EF24  F00E         	goto	u4750
  3281   001C44                     u4751:
  3282   001C44  EF2A  F00E         	goto	l4923
  3283   001C48                     u4750:
  3284   001C48                     
  3285                           ; BSR set to: 0
  3286   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3287   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3288   001C50  EF2E  F00E         	goto	l4925
  3289   001C54                     l4923:
  3290                           
  3291                           ; BSR set to: 0
  3292   001C54  0E00               	movlw	0
  3293   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3294   001C58  0E06               	movlw	6
  3295   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3296   001C5C                     l4925:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3300   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3301   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3302   001C64                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3305   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3306   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3307   001C68                     
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3310   001C68  0E66               	movlw	102
  3311   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3312   001C6C  A4D8               	btfss	status,2,c
  3313   001C6E  EF3B  F00E         	goto	u4761
  3314   001C72  EF3D  F00E         	goto	u4760
  3315   001C76                     u4761:
  3316   001C76  EF5D  F00E         	goto	l4939
  3317   001C7A                     u4760:
  3318   001C7A                     
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3321   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3322   001C7C  EF44  F00E         	goto	u4770
  3323   001C80  EF42  F00E         	goto	u4771
  3324   001C84                     u4771:
  3325   001C84  EF50  F00E         	goto	l4935
  3326   001C88                     u4770:
  3327   001C88                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3330   001C88  0E00               	movlw	0
  3331   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3332   001C8C  0E00               	movlw	0
  3333   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3334   001C90  0E80               	movlw	128
  3335   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3336   001C94  0E3F               	movlw	63
  3337   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3340   001C98  0E00               	movlw	0
  3341   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3342   001C9C  0E00               	movlw	0
  3343   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3344   001CA0                     l4935:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3348   001CA0  0E67               	movlw	103
  3349   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3350   001CA4  B4D8               	btfsc	status,2,c
  3351   001CA6  EF57  F00E         	goto	u4781
  3352   001CAA  EF59  F00E         	goto	u4780
  3353   001CAE                     u4781:
  3354   001CAE  EF5D  F00E         	goto	l4939
  3355   001CB2                     u4780:
  3356   001CB2                     
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3359   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3360   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3361   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3362   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3363   001CBA                     l4939:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3367   001CBA  0E00               	movlw	0
  3368   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3369   001CBE  0E00               	movlw	0
  3370   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3371   001CC2                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3374   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3375   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3376   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3377   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3378   001CD2                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3381   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3382   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3383   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3384   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3387   001CE2  EFEE  F00E         	goto	l4953
  3388   001CE6                     l4945:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3392   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3393   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3394   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3395   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3396   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3397   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3398   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3399   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3400   001D06  ECC1  F015         	call	___fldiv	;wreg free
  3401   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3402   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3403   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3404   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3405   001D1A  ECB1  F01F         	call	_floorf	;wreg free
  3406   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3407   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3408   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3409   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3412   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3413   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3414   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3415   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3416   001D3E  EC96  F024         	call	___fltol	;wreg free
  3417   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3418   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3419   001D4A                     
  3420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3421   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3422   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3423   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3424   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3425   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3426   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3427   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3428   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3429   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3430   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3431   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3432   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3433   001D7A  ECAC  F013         	call	___flmul	;wreg free
  3434   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  3435   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3436   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3437   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3438   001D8E  EC89  F02E         	call	___flsub	;wreg free
  3439   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  3440   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3441   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3442   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3443   001DA2                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3445   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  3446   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3447   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3448   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3449   001DB2  0E00               	movlw	0
  3450   001DB4  6E36               	movwf	___fldiv@a^0,c
  3451   001DB6  0E00               	movlw	0
  3452   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  3453   001DBA  0E20               	movlw	32
  3454   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  3455   001DBE  0E41               	movlw	65
  3456   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  3457   001DC2  ECC1  F015         	call	___fldiv	;wreg free
  3458   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  3459   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3460   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3461   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3462   001DD6                     
  3463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3464   001DD6  0100               	movlb	0	; () banked
  3465   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3466   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3467   001DDC                     l4953:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3471   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  3472   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  3473   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3474   001DE2  0A80               	xorlw	128
  3475   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  3476   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3477   001DE8  0A80               	xorlw	128
  3478   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  3479   001DEC  A0D8               	btfss	status,0,c
  3480   001DEE  EFFB  F00E         	goto	u4791
  3481   001DF2  EFFD  F00E         	goto	u4790
  3482   001DF6                     u4791:
  3483   001DF6  EF73  F00E         	goto	l4945
  3484   001DFA                     u4790:
  3485   001DFA                     
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3488   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  3489   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3490   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3491   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3492   001E0A  0E00               	movlw	0
  3493   001E0C  6E15               	movwf	___flmul@a^0,c
  3494   001E0E  0E00               	movlw	0
  3495   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  3496   001E12  0EA0               	movlw	160
  3497   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  3498   001E16  0E40               	movlw	64
  3499   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  3500   001E1A  ECAC  F013         	call	___flmul	;wreg free
  3501   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  3502   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3503   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3504   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3505   001E2E                     
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3507   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3508   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3509   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3510   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3511   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3512   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3513   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3514   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3515   001E4E  EC19  F025         	call	___flge	;wreg free
  3516   001E52  B0D8               	btfsc	status,0,c
  3517   001E54  EF2E  F00F         	goto	u4801
  3518   001E58  EF30  F00F         	goto	u4800
  3519   001E5C                     u4801:
  3520   001E5C  EF3B  F00F         	goto	l4961
  3521   001E60                     u4800:
  3522   001E60                     
  3523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3524   001E60  0E00               	movlw	0
  3525   001E62  0100               	movlb	0	; () banked
  3526   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  3527   001E66  0E00               	movlw	0
  3528   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3529   001E6A  0E00               	movlw	0
  3530   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3531   001E6E  0E00               	movlw	0
  3532   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3535   001E72  EF64  F00F         	goto	l4967
  3536   001E76                     l4961:
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3539   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3540   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3541   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3542   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3543   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3544   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3545   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3546   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3547   001E96  EC8E  F027         	call	___fleq	;wreg free
  3548   001E9A  A0D8               	btfss	status,0,c
  3549   001E9C  EF52  F00F         	goto	u4811
  3550   001EA0  EF54  F00F         	goto	u4810
  3551   001EA4                     u4811:
  3552   001EA4  EF64  F00F         	goto	l4967
  3553   001EA8                     u4810:
  3554   001EA8  0100               	movlb	0	; () banked
  3555   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  3556   001EAC  EF5A  F00F         	goto	u4821
  3557   001EB0  EF5C  F00F         	goto	u4820
  3558   001EB4                     u4821:
  3559   001EB4  EF64  F00F         	goto	l4967
  3560   001EB8                     u4820:
  3561   001EB8                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3564   001EB8  0E00               	movlw	0
  3565   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  3566   001EBC  0E00               	movlw	0
  3567   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3568   001EC0  0E00               	movlw	0
  3569   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3570   001EC4  0E00               	movlw	0
  3571   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3572   001EC8                     l4967:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3575   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  3576   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3577   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3578   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3579   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  3580   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3581   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3582   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3583   001EE8  EC4C  F011         	call	___fladd	;wreg free
  3584   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  3585   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3586   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3587   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3588   001EFC                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3590   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3591   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3592   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3593   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3594   001F0C  0E00               	movlw	0
  3595   001F0E  6E15               	movwf	___flmul@a^0,c
  3596   001F10  0E00               	movlw	0
  3597   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  3598   001F14  0E20               	movlw	32
  3599   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  3600   001F18  0E41               	movlw	65
  3601   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  3602   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3603   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3604   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3605   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3606   001F2C  ECAC  F013         	call	___flmul	;wreg free
  3607   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  3608   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3609   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3610   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3611   001F40  EC19  F025         	call	___flge	;wreg free
  3612   001F44  A0D8               	btfss	status,0,c
  3613   001F46  EFA7  F00F         	goto	u4831
  3614   001F4A  EFA9  F00F         	goto	u4830
  3615   001F4E                     u4831:
  3616   001F4E  EFD2  F00F         	goto	l4979
  3617   001F52                     u4830:
  3618   001F52                     
  3619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3620   001F52  0100               	movlb	0	; () banked
  3621   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3622   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3623   001F58                     
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3626   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3627   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3628   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3629   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3630   001F68  0E00               	movlw	0
  3631   001F6A  6E15               	movwf	___flmul@a^0,c
  3632   001F6C  0E00               	movlw	0
  3633   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  3634   001F70  0E20               	movlw	32
  3635   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  3636   001F74  0E41               	movlw	65
  3637   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  3638   001F78  ECAC  F013         	call	___flmul	;wreg free
  3639   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3640   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3641   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3642   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3643   001F8C                     
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3645   001F8C  0E66               	movlw	102
  3646   001F8E  0100               	movlb	0	; () banked
  3647   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3648   001F92  A4D8               	btfss	status,2,c
  3649   001F94  EFCE  F00F         	goto	u4841
  3650   001F98  EFD0  F00F         	goto	u4840
  3651   001F9C                     u4841:
  3652   001F9C  EFD2  F00F         	goto	l4979
  3653   001FA0                     u4840:
  3654   001FA0                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3657   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3658   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3659   001FA4                     l4979:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3662   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3663   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3664   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3665   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3666   001FB4                     
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3668   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3669   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3670   001FBC                     
  3671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3672   001FBC  0E00               	movlw	0
  3673   001FBE  0100               	movlb	0	; () banked
  3674   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  3675   001FC2                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3678   001FC2  0E00               	movlw	0
  3679   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3680   001FC6  0E00               	movlw	0
  3681   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  3682   001FCA                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3685   001FCA  0E00               	movlw	0
  3686   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3687   001FCE  0E00               	movlw	0
  3688   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3691   001FD2  EFD0  F010         	goto	l5029
  3692   001FD6                     l4989:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3696   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3697   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3698   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3699   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3700   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3701   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3702   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3703   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3704   001FF6  ECC1  F015         	call	___fldiv	;wreg free
  3705   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  3706   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3707   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3708   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3709   00200A  ECB1  F01F         	call	_floorf	;wreg free
  3710   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  3711   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3712   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3713   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3716   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3717   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3718   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3719   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3720   00202E  EC96  F024         	call	___fltol	;wreg free
  3721   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  3722   002034  EF27  F010         	goto	u4850
  3723   002038  5002               	movf	(?___fltol+1)^0,w,c
  3724   00203A  E107               	bnz	u4851
  3725   00203C  0E0A               	movlw	10
  3726   00203E  5C01               	subwf	?___fltol^0,w,c
  3727   002040  B0D8               	btfsc	status,0,c
  3728   002042  EF25  F010         	goto	u4851
  3729   002046  EF27  F010         	goto	u4850
  3730   00204A                     u4851:
  3731   00204A  EF37  F010         	goto	l4993
  3732   00204E                     u4850:
  3733   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3734   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3735   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3736   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3737   00205E  EC96  F024         	call	___fltol	;wreg free
  3738   002062  C001  F074         	movff	?___fltol,efgtoa@d
  3739   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3740   00206A  EF3C  F010         	goto	l1523
  3741   00206E                     l4993:
  3742   00206E  0E00               	movlw	0
  3743   002070  0100               	movlb	0	; () banked
  3744   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3745   002074  0E09               	movlw	9
  3746   002076  6F74               	movwf	efgtoa@d& (0+255),b
  3747   002078                     l1523:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3750   002078  0100               	movlb	0	; () banked
  3751   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  3752   00207C  A4D8               	btfss	status,2,c
  3753   00207E  EF43  F010         	goto	u4861
  3754   002082  EF45  F010         	goto	u4860
  3755   002086                     u4861:
  3756   002086  EF6D  F010         	goto	l5013
  3757   00208A                     u4860:
  3758   00208A                     
  3759                           ; BSR set to: 0
  3760   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3761   00208C  EF4C  F010         	goto	u4870
  3762   002090  EF4A  F010         	goto	u4871
  3763   002094                     u4871:
  3764   002094  EF6D  F010         	goto	l5013
  3765   002098                     u4870:
  3766   002098                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3769   002098  0EA0               	movlw	low _dbuf
  3770   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  3771   00209C  6ED9               	movwf	fsr2l,c
  3772   00209E  0E02               	movlw	high _dbuf
  3773   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3774   0020A2  6EDA               	movwf	fsr2h,c
  3775   0020A4  0E2E               	movlw	46
  3776   0020A6  6EDF               	movwf	indf2,c
  3777   0020A8                     
  3778                           ; BSR set to: 0
  3779   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3780   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3781   0020AC                     
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3784   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  3785   0020AE  A0D8               	btfss	status,0,c
  3786   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3787   0020B2                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3790   0020B2  0E01               	movlw	1
  3791   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  3792   0020B6  EF6D  F010         	goto	l5013
  3793   0020BA                     l5005:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3797   0020BA  0EA0               	movlw	low _dbuf
  3798   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  3799   0020BE  6ED9               	movwf	fsr2l,c
  3800   0020C0  0E02               	movlw	high _dbuf
  3801   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3802   0020C4  6EDA               	movwf	fsr2h,c
  3803   0020C6  0E30               	movlw	48
  3804   0020C8  6EDF               	movwf	indf2,c
  3805   0020CA                     
  3806                           ; BSR set to: 0
  3807   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3808   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3809   0020CE                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3812   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  3813   0020D0  A0D8               	btfss	status,0,c
  3814   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3815   0020D4                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3818   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  3819   0020D6  A0D8               	btfss	status,0,c
  3820   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3821   0020DA                     l5013:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3825   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  3826   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3827   0020DE  A4D8               	btfss	status,2,c
  3828   0020E0  EF74  F010         	goto	u4881
  3829   0020E4  EF76  F010         	goto	u4880
  3830   0020E8                     u4881:
  3831   0020E8  EF5D  F010         	goto	l5005
  3832   0020EC                     u4880:
  3833   0020EC                     
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3836   0020EC  0EA0               	movlw	low _dbuf
  3837   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  3838   0020F0  6ED9               	movwf	fsr2l,c
  3839   0020F2  0E02               	movlw	high _dbuf
  3840   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3841   0020F6  6EDA               	movwf	fsr2h,c
  3842   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  3843   0020FA  0F30               	addlw	48
  3844   0020FC  6EDF               	movwf	indf2,c
  3845   0020FE                     
  3846                           ; BSR set to: 0
  3847   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3848   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3849   002102                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3852   002102  077A               	decf	efgtoa@w& (0+255),f,b
  3853   002104  A0D8               	btfss	status,0,c
  3854   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3855   002108                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3858   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  3859   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3860   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3861   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3862   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  3863   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3864   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3865   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3866   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  3867   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3868   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3869   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3870   002138  ECAC  F013         	call	___flmul	;wreg free
  3871   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  3872   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3873   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3874   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3875   00214C  EC89  F02E         	call	___flsub	;wreg free
  3876   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  3877   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3878   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3879   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3880   002160                     
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3882   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  3883   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3884   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3885   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3886   002170  0E00               	movlw	0
  3887   002172  6E36               	movwf	___fldiv@a^0,c
  3888   002174  0E00               	movlw	0
  3889   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  3890   002178  0E20               	movlw	32
  3891   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  3892   00217C  0E41               	movlw	65
  3893   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  3894   002180  ECC1  F015         	call	___fldiv	;wreg free
  3895   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  3896   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3897   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3898   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3899   002194                     
  3900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3901   002194  0100               	movlb	0	; () banked
  3902   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  3903   002198  A0D8               	btfss	status,0,c
  3904   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3905   00219C                     
  3906                           ; BSR set to: 0
  3907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3908   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3909   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3910   0021A0                     l5029:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3914   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  3915   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  3916   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3917   0021A6  0A80               	xorlw	128
  3918   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  3919   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3920   0021AC  0A80               	xorlw	128
  3921   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  3922   0021B0  B0D8               	btfsc	status,0,c
  3923   0021B2  EFDD  F010         	goto	u4891
  3924   0021B6  EFDF  F010         	goto	u4890
  3925   0021BA                     u4891:
  3926   0021BA  EFED  F010         	goto	l5033
  3927   0021BE                     u4890:
  3928   0021BE                     
  3929                           ; BSR set to: 0
  3930   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3931   0021C0  EFEB  F010         	goto	u4901
  3932   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3933   0021C6  E109               	bnz	u4900
  3934   0021C8  0E4B               	movlw	75
  3935   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  3936   0021CC  A0D8               	btfss	status,0,c
  3937   0021CE  EFEB  F010         	goto	u4901
  3938   0021D2  EFED  F010         	goto	u4900
  3939   0021D6                     u4901:
  3940   0021D6  EFEB  F00F         	goto	l4989
  3941   0021DA                     u4900:
  3942   0021DA                     l5033:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3946   0021DA  0E00               	movlw	0
  3947   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3948   0021DE  0E4F               	movlw	79
  3949   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  3950   0021E2                     
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3953   0021E2  0EA0               	movlw	low _dbuf
  3954   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  3955   0021E6  6ED9               	movwf	fsr2l,c
  3956   0021E8  0E02               	movlw	high _dbuf
  3957   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3958   0021EC  6EDA               	movwf	fsr2h,c
  3959   0021EE  0E00               	movlw	0
  3960   0021F0  6EDF               	movwf	indf2,c
  3961   0021F2                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3964   0021F2  0EA0               	movlw	low _dbuf
  3965   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  3966   0021F6  0E02               	movlw	high _dbuf
  3967   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3968   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  3969   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  3970   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3971   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3972   002202  5180               	movf	efgtoa@i& (0+255),w,b
  3973   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  3974   002206  6E01               	movwf	memcpy@d1^0,c
  3975   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3976   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3977   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  3978   00220E  0EA0               	movlw	low _dbuf
  3979   002210  6E03               	movwf	memcpy@s1^0,c
  3980   002212  0E02               	movlw	high _dbuf
  3981   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  3982   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  3983   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  3984   00221E  EC73  F02D         	call	_memcpy	;wreg free
  3985   002222                     
  3986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3987   002222  0100               	movlb	0	; () banked
  3988   002224  518B               	movf	efgtoa@n& (0+255),w,b
  3989   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  3990   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  3991   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3992   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3993   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3994   002230                     
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3997   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  3998   002232  A4D8               	btfss	status,2,c
  3999   002234  EF1E  F011         	goto	u4911
  4000   002238  EF21  F011         	goto	u4910
  4001   00223C                     u4911:
  4002   00223C  0E01               	movlw	1
  4003   00223E  EF22  F011         	goto	u4920
  4004   002242                     u4910:
  4005   002242  0E00               	movlw	0
  4006   002244                     u4920:
  4007   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4008   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4009   002248                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4012   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4013   00224A  B4D8               	btfsc	status,2,c
  4014   00224C  EF2A  F011         	goto	u4931
  4015   002250  EF2C  F011         	goto	u4930
  4016   002254                     u4931:
  4017   002254  EF37  F011         	goto	l5047
  4018   002258                     u4930:
  4019   002258                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4022   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4023   00225A  A0D8               	btfss	status,0,c
  4024   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4025   00225E  0EA0               	movlw	low _dbuf
  4026   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4027   002262  6ED9               	movwf	fsr2l,c
  4028   002264  0E02               	movlw	high _dbuf
  4029   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4030   002268  6EDA               	movwf	fsr2h,c
  4031   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4032   00226E                     l5047:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4036   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4037   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4038   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4039   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4040   002276                     
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4043   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4044   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4045   00227E  0EA0               	movlw	low _dbuf
  4046   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4047   002282  6E13               	movwf	pad@buf^0,c
  4048   002284  0E02               	movlw	high _dbuf
  4049   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4050   002288  6E14               	movwf	(pad@buf+1)^0,c
  4051   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4052   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4053   002292  ECF7  F029         	call	_pad	;wreg free
  4054   002296                     l1490:
  4055   002296  0012               	return		;funcret
  4056   002298                     __end_of_efgtoa:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _strcpy *****************
  4060 ;; Defined at:
  4061 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4064 ;;		 -> dbuf(80), 
  4065 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4066 ;;		 -> STR_5(4), STR_2(4), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  d               2    6[COMRAM] PTR unsigned char 
  4069 ;;		 -> dbuf(80), 
  4070 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4071 ;;		 -> STR_5(4), STR_2(4), 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  2    0[COMRAM] PTR unsigned char 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;Total ram usage:        8 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_efgtoa
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text6
  4096   005D58                     __ptext6:
  4097                           	callstack 0
  4098   005D58                     _strcpy:
  4099                           	callstack 25
  4100   005D58  C003  F005         	movff	strcpy@src,strcpy@s
  4101   005D5C  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4102   005D60  C001  F007         	movff	strcpy@dest,strcpy@d
  4103   005D64  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4104   005D68                     l4669:
  4105   005D68  C005  FFF6         	movff	strcpy@s,tblptrl
  4106   005D6C  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4107   005D70  4A05               	infsnz	strcpy@s^0,f,c
  4108   005D72  2A06               	incf	(strcpy@s+1)^0,f,c
  4109   005D74                     	if	0	;tblptru may be non-zero
  4110   005D74                     	endif
  4111   005D74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4112   005D74  0E00               	movlw	low (__mediumconst shr (0+16))
  4113   005D76  6EF8               	movwf	tblptru,c
  4114   005D78                     	endif
  4115   005D78  C007  FFD9         	movff	strcpy@d,fsr2l
  4116   005D7C  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4117   005D80  4A07               	infsnz	strcpy@d^0,f,c
  4118   005D82  2A08               	incf	(strcpy@d+1)^0,f,c
  4119   005D84  0008               	tblrd		*
  4120   005D86  CFF5 FFDF          	movff	tablat,indf2
  4121   005D8A  50DF               	movf	indf2,w,c
  4122   005D8C  A4D8               	btfss	status,2,c
  4123   005D8E  EFCB  F02E         	goto	u4361
  4124   005D92  EFCD  F02E         	goto	u4360
  4125   005D96                     u4361:
  4126   005D96  EFB4  F02E         	goto	l4669
  4127   005D9A                     u4360:
  4128   005D9A  0012               	return		;funcret
  4129   005D9C                     __end_of_strcpy:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _memcpy *****************
  4133 ;; Defined at:
  4134 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  d1              2    0[COMRAM] PTR void 
  4137 ;;		 -> dbuf(80), 
  4138 ;;  s1              2    2[COMRAM] PTR const void 
  4139 ;;		 -> dbuf(80), 
  4140 ;;  n               2    4[COMRAM] unsigned int 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4143 ;;		 -> dbuf(80), 
  4144 ;;  d               2    6[COMRAM] PTR unsigned char 
  4145 ;;		 -> dbuf(80), 
  4146 ;;  tmp             1   10[COMRAM] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMRAM] PTR void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4156 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;Total ram usage:       11 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_efgtoa
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text7
  4171   005AE6                     __ptext7:
  4172                           	callstack 0
  4173   005AE6                     _memcpy:
  4174                           	callstack 25
  4175   005AE6  C003  F009         	movff	memcpy@s1,memcpy@s
  4176   005AEA  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4177   005AEE  C001  F007         	movff	memcpy@d1,memcpy@d
  4178   005AF2  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4179   005AF6  EF8D  F02D         	goto	l4713
  4180   005AFA                     l4705:
  4181   005AFA  C009  FFD9         	movff	memcpy@s,fsr2l
  4182   005AFE  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4183   005B02  50DF               	movf	indf2,w,c
  4184   005B04  6E0B               	movwf	memcpy@tmp^0,c
  4185   005B06  4A09               	infsnz	memcpy@s^0,f,c
  4186   005B08  2A0A               	incf	(memcpy@s+1)^0,f,c
  4187   005B0A  C007  FFD9         	movff	memcpy@d,fsr2l
  4188   005B0E  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4189   005B12  C00B  FFDF         	movff	memcpy@tmp,indf2
  4190   005B16  4A07               	infsnz	memcpy@d^0,f,c
  4191   005B18  2A08               	incf	(memcpy@d+1)^0,f,c
  4192   005B1A                     l4713:
  4193   005B1A  0605               	decf	memcpy@n^0,f,c
  4194   005B1C  A0D8               	btfss	status,0,c
  4195   005B1E  0606               	decf	(memcpy@n+1)^0,f,c
  4196   005B20  2805               	incf	memcpy@n^0,w,c
  4197   005B22  E106               	bnz	u4481
  4198   005B24  2806               	incf	(memcpy@n+1)^0,w,c
  4199   005B26  A4D8               	btfss	status,2,c
  4200   005B28  EF98  F02D         	goto	u4481
  4201   005B2C  EF9A  F02D         	goto	u4480
  4202   005B30                     u4481:
  4203   005B30  EF7D  F02D         	goto	l4705
  4204   005B34                     u4480:
  4205   005B34  0012               	return		;funcret
  4206   005B36                     __end_of_memcpy:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _labs *****************
  4210 ;; Defined at:
  4211 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  a               4    0[COMRAM] long 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  4    0[COMRAM] long 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;Total ram usage:        8 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_efgtoa
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text8
  4240   0055B4                     __ptext8:
  4241                           	callstack 0
  4242   0055B4                     _labs:
  4243                           	callstack 25
  4244   0055B4  BE04               	btfsc	(labs@a+3)^0,7,c
  4245   0055B6  EFE9  F02A         	goto	u4370
  4246   0055BA  5004               	movf	(labs@a+3)^0,w,c
  4247   0055BC  1003               	iorwf	(labs@a+2)^0,w,c
  4248   0055BE  1002               	iorwf	(labs@a+1)^0,w,c
  4249   0055C0  E106               	bnz	u4371
  4250   0055C2  0401               	decf	labs@a^0,w,c
  4251   0055C4  B0D8               	btfsc	status,0,c
  4252   0055C6  EFE7  F02A         	goto	u4371
  4253   0055CA  EFE9  F02A         	goto	u4370
  4254   0055CE                     u4371:
  4255   0055CE  EF04  F02B         	goto	l1595
  4256   0055D2                     u4370:
  4257   0055D2  C001  F005         	movff	labs@a,??_labs
  4258   0055D6  C002  F006         	movff	labs@a+1,??_labs+1
  4259   0055DA  C003  F007         	movff	labs@a+2,??_labs+2
  4260   0055DE  C004  F008         	movff	labs@a+3,??_labs+3
  4261   0055E2  1E05               	comf	??_labs^0,f,c
  4262   0055E4  1E06               	comf	(??_labs+1)^0,f,c
  4263   0055E6  1E07               	comf	(??_labs+2)^0,f,c
  4264   0055E8  1E08               	comf	(??_labs+3)^0,f,c
  4265   0055EA  2A05               	incf	??_labs^0,f,c
  4266   0055EC  0E00               	movlw	0
  4267   0055EE  2206               	addwfc	(??_labs+1)^0,f,c
  4268   0055F0  2207               	addwfc	(??_labs+2)^0,f,c
  4269   0055F2  2208               	addwfc	(??_labs+3)^0,f,c
  4270   0055F4  C005  F001         	movff	??_labs,?_labs
  4271   0055F8  C006  F002         	movff	??_labs+1,?_labs+1
  4272   0055FC  C007  F003         	movff	??_labs+2,?_labs+2
  4273   005600  C008  F004         	movff	??_labs+3,?_labs+3
  4274   005604  EF0C  F02B         	goto	l1598
  4275   005608                     l1595:
  4276   005608  C001  F001         	movff	labs@a,?_labs
  4277   00560C  C002  F002         	movff	labs@a+1,?_labs+1
  4278   005610  C003  F003         	movff	labs@a+2,?_labs+2
  4279   005614  C004  F004         	movff	labs@a+3,?_labs+3
  4280   005618                     l1598:
  4281   005618  0012               	return		;funcret
  4282   00561A                     __end_of_labs:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _floorf *****************
  4286 ;; Defined at:
  4287 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  x               4   74[COMRAM] float 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  u               4   90[COMRAM] struct .
  4292 ;;  m               4   84[COMRAM] unsigned long 
  4293 ;;  e               2   88[COMRAM] int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  4   74[COMRAM] float 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;Total ram usage:       20 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_efgtoa
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text9
  4318   003F62                     __ptext9:
  4319                           	callstack 0
  4320   003F62                     _floorf:
  4321                           	callstack 25
  4322   003F62  C0DF  F05B         	movff	floorf@F526,floorf@u
  4323   003F66  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4324   003F6A  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4325   003F6E  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4326   003F72  C04B  F05B         	movff	floorf@x,floorf@u
  4327   003F76  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4328   003F7A  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4329   003F7E  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4330   003F82  0E81               	movlw	129
  4331   003F84  6E4F               	movwf	??_floorf^0,c
  4332   003F86  0EFF               	movlw	255
  4333   003F88  6E50               	movwf	(??_floorf+1)^0,c
  4334   003F8A  C05B  F051         	movff	floorf@u,??_floorf+2
  4335   003F8E  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4336   003F92  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4337   003F96  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4338   003F9A  0E18               	movlw	24
  4339   003F9C  EFD5  F01F         	goto	u4380
  4340   003FA0                     u4385:
  4341   003FA0  90D8               	bcf	status,0,c
  4342   003FA2  3254               	rrcf	(??_floorf+5)^0,f,c
  4343   003FA4  3253               	rrcf	(??_floorf+4)^0,f,c
  4344   003FA6  3252               	rrcf	(??_floorf+3)^0,f,c
  4345   003FA8  3251               	rrcf	(??_floorf+2)^0,f,c
  4346   003FAA                     u4380:
  4347   003FAA  2EE8               	decfsz	wreg,f,c
  4348   003FAC  EFD0  F01F         	goto	u4385
  4349   003FB0  5051               	movf	(??_floorf+2)^0,w,c
  4350   003FB2  244F               	addwf	??_floorf^0,w,c
  4351   003FB4  6E59               	movwf	floorf@e^0,c
  4352   003FB6  0E00               	movlw	0
  4353   003FB8  2050               	addwfc	(??_floorf+1)^0,w,c
  4354   003FBA  6E5A               	movwf	(floorf@e+1)^0,c
  4355   003FBC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4356   003FBE  EFEA  F01F         	goto	u4391
  4357   003FC2  505A               	movf	(floorf@e+1)^0,w,c
  4358   003FC4  E109               	bnz	u4390
  4359   003FC6  0E17               	movlw	23
  4360   003FC8  5C59               	subwf	floorf@e^0,w,c
  4361   003FCA  A0D8               	btfss	status,0,c
  4362   003FCC  EFEA  F01F         	goto	u4391
  4363   003FD0  EFEC  F01F         	goto	u4390
  4364   003FD4                     u4391:
  4365   003FD4  EFF6  F01F         	goto	l4681
  4366   003FD8                     u4390:
  4367   003FD8                     l4679:
  4368   003FD8  C04B  F04B         	movff	floorf@x,?_floorf
  4369   003FDC  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4370   003FE0  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4371   003FE4  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4372   003FE8  EFB9  F020         	goto	l1584
  4373   003FEC                     l4681:
  4374   003FEC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4375   003FEE  EFFB  F01F         	goto	u4401
  4376   003FF2  EFFD  F01F         	goto	u4400
  4377   003FF6                     u4401:
  4378   003FF6  EF6D  F020         	goto	l4691
  4379   003FFA                     u4400:
  4380   003FFA  C059  F04F         	movff	floorf@e,??_floorf
  4381   003FFE  0EFF               	movlw	255
  4382   004000  6E50               	movwf	(??_floorf+1)^0,c
  4383   004002  0EFF               	movlw	255
  4384   004004  6E51               	movwf	(??_floorf+2)^0,c
  4385   004006  0E7F               	movlw	127
  4386   004008  6E52               	movwf	(??_floorf+3)^0,c
  4387   00400A  0E00               	movlw	0
  4388   00400C  6E53               	movwf	(??_floorf+4)^0,c
  4389   00400E                     u4415:
  4390   00400E  664F               	tstfsz	??_floorf^0,c
  4391   004010  EF0C  F020         	goto	u4416
  4392   004014  EF14  F020         	goto	u4417
  4393   004018                     u4416:
  4394   004018  3453               	rlcf	(??_floorf+4)^0,w,c
  4395   00401A  3253               	rrcf	(??_floorf+4)^0,f,c
  4396   00401C  3252               	rrcf	(??_floorf+3)^0,f,c
  4397   00401E  3251               	rrcf	(??_floorf+2)^0,f,c
  4398   004020  3250               	rrcf	(??_floorf+1)^0,f,c
  4399   004022  2E4F               	decfsz	??_floorf^0,f,c
  4400   004024  EF07  F020         	goto	u4415
  4401   004028                     u4417:
  4402   004028  C050  F055         	movff	??_floorf+1,floorf@m
  4403   00402C  C051  F056         	movff	??_floorf+2,floorf@m+1
  4404   004030  C052  F057         	movff	??_floorf+3,floorf@m+2
  4405   004034  C053  F058         	movff	??_floorf+4,floorf@m+3
  4406   004038  5055               	movf	floorf@m^0,w,c
  4407   00403A  145B               	andwf	floorf@u^0,w,c
  4408   00403C  6E4F               	movwf	??_floorf^0,c
  4409   00403E  5056               	movf	(floorf@m+1)^0,w,c
  4410   004040  145C               	andwf	(floorf@u+1)^0,w,c
  4411   004042  6E50               	movwf	(??_floorf+1)^0,c
  4412   004044  5057               	movf	(floorf@m+2)^0,w,c
  4413   004046  145D               	andwf	(floorf@u+2)^0,w,c
  4414   004048  6E51               	movwf	(??_floorf+2)^0,c
  4415   00404A  5058               	movf	(floorf@m+3)^0,w,c
  4416   00404C  145E               	andwf	(floorf@u+3)^0,w,c
  4417   00404E  6E52               	movwf	(??_floorf+3)^0,c
  4418   004050  504F               	movf	??_floorf^0,w,c
  4419   004052  1050               	iorwf	(??_floorf+1)^0,w,c
  4420   004054  1051               	iorwf	(??_floorf+2)^0,w,c
  4421   004056  1052               	iorwf	(??_floorf+3)^0,w,c
  4422   004058  A4D8               	btfss	status,2,c
  4423   00405A  EF31  F020         	goto	u4421
  4424   00405E  EF33  F020         	goto	u4420
  4425   004062                     u4421:
  4426   004062  EF35  F020         	goto	l4687
  4427   004066                     u4420:
  4428   004066  EFEC  F01F         	goto	l4679
  4429   00406A                     l4687:
  4430   00406A  C05B  F04F         	movff	floorf@u,??_floorf
  4431   00406E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4432   004072  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4433   004076  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4434   00407A  0E20               	movlw	32
  4435   00407C  EF45  F020         	goto	u4430
  4436   004080                     u4435:
  4437   004080  90D8               	bcf	status,0,c
  4438   004082  3252               	rrcf	(??_floorf+3)^0,f,c
  4439   004084  3251               	rrcf	(??_floorf+2)^0,f,c
  4440   004086  3250               	rrcf	(??_floorf+1)^0,f,c
  4441   004088  324F               	rrcf	??_floorf^0,f,c
  4442   00408A                     u4430:
  4443   00408A  2EE8               	decfsz	wreg,f,c
  4444   00408C  EF40  F020         	goto	u4435
  4445   004090  504F               	movf	??_floorf^0,w,c
  4446   004092  1050               	iorwf	(??_floorf+1)^0,w,c
  4447   004094  1051               	iorwf	(??_floorf+2)^0,w,c
  4448   004096  1052               	iorwf	(??_floorf+3)^0,w,c
  4449   004098  B4D8               	btfsc	status,2,c
  4450   00409A  EF51  F020         	goto	u4441
  4451   00409E  EF53  F020         	goto	u4440
  4452   0040A2                     u4441:
  4453   0040A2  EF5B  F020         	goto	l1587
  4454   0040A6                     u4440:
  4455   0040A6  5055               	movf	floorf@m^0,w,c
  4456   0040A8  265B               	addwf	floorf@u^0,f,c
  4457   0040AA  5056               	movf	(floorf@m+1)^0,w,c
  4458   0040AC  225C               	addwfc	(floorf@u+1)^0,f,c
  4459   0040AE  5057               	movf	(floorf@m+2)^0,w,c
  4460   0040B0  225D               	addwfc	(floorf@u+2)^0,f,c
  4461   0040B2  5058               	movf	(floorf@m+3)^0,w,c
  4462   0040B4  225E               	addwfc	(floorf@u+3)^0,f,c
  4463   0040B6                     l1587:
  4464   0040B6  1C55               	comf	floorf@m^0,w,c
  4465   0040B8  6E4F               	movwf	??_floorf^0,c
  4466   0040BA  1C56               	comf	(floorf@m+1)^0,w,c
  4467   0040BC  6E50               	movwf	(??_floorf+1)^0,c
  4468   0040BE  1C57               	comf	(floorf@m+2)^0,w,c
  4469   0040C0  6E51               	movwf	(??_floorf+2)^0,c
  4470   0040C2  1C58               	comf	(floorf@m+3)^0,w,c
  4471   0040C4  6E52               	movwf	(??_floorf+3)^0,c
  4472   0040C6  504F               	movf	??_floorf^0,w,c
  4473   0040C8  165B               	andwf	floorf@u^0,f,c
  4474   0040CA  5050               	movf	(??_floorf+1)^0,w,c
  4475   0040CC  165C               	andwf	(floorf@u+1)^0,f,c
  4476   0040CE  5051               	movf	(??_floorf+2)^0,w,c
  4477   0040D0  165D               	andwf	(floorf@u+2)^0,f,c
  4478   0040D2  5052               	movf	(??_floorf+3)^0,w,c
  4479   0040D4  165E               	andwf	(floorf@u+3)^0,f,c
  4480   0040D6  EFB1  F020         	goto	l4699
  4481   0040DA                     l4691:
  4482   0040DA  C05B  F04F         	movff	floorf@u,??_floorf
  4483   0040DE  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4484   0040E2  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4485   0040E6  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4486   0040EA  0E20               	movlw	32
  4487   0040EC  EF7D  F020         	goto	u4450
  4488   0040F0                     u4455:
  4489   0040F0  90D8               	bcf	status,0,c
  4490   0040F2  3252               	rrcf	(??_floorf+3)^0,f,c
  4491   0040F4  3251               	rrcf	(??_floorf+2)^0,f,c
  4492   0040F6  3250               	rrcf	(??_floorf+1)^0,f,c
  4493   0040F8  324F               	rrcf	??_floorf^0,f,c
  4494   0040FA                     u4450:
  4495   0040FA  2EE8               	decfsz	wreg,f,c
  4496   0040FC  EF78  F020         	goto	u4455
  4497   004100  504F               	movf	??_floorf^0,w,c
  4498   004102  1050               	iorwf	(??_floorf+1)^0,w,c
  4499   004104  1051               	iorwf	(??_floorf+2)^0,w,c
  4500   004106  1052               	iorwf	(??_floorf+3)^0,w,c
  4501   004108  A4D8               	btfss	status,2,c
  4502   00410A  EF89  F020         	goto	u4461
  4503   00410E  EF8B  F020         	goto	u4460
  4504   004112                     u4461:
  4505   004112  EF95  F020         	goto	l4695
  4506   004116                     u4460:
  4507   004116  0E00               	movlw	0
  4508   004118  6E5B               	movwf	floorf@u^0,c
  4509   00411A  0E00               	movlw	0
  4510   00411C  6E5C               	movwf	(floorf@u+1)^0,c
  4511   00411E  0E00               	movlw	0
  4512   004120  6E5D               	movwf	(floorf@u+2)^0,c
  4513   004122  0E00               	movlw	0
  4514   004124  6E5E               	movwf	(floorf@u+3)^0,c
  4515   004126  EFB1  F020         	goto	l4699
  4516   00412A                     l4695:
  4517   00412A  90D8               	bcf	status,0,c
  4518   00412C  345B               	rlcf	floorf@u^0,w,c
  4519   00412E  6E4F               	movwf	??_floorf^0,c
  4520   004130  345C               	rlcf	(floorf@u+1)^0,w,c
  4521   004132  6E50               	movwf	(??_floorf+1)^0,c
  4522   004134  345D               	rlcf	(floorf@u+2)^0,w,c
  4523   004136  6E51               	movwf	(??_floorf+2)^0,c
  4524   004138  345E               	rlcf	(floorf@u+3)^0,w,c
  4525   00413A  6E52               	movwf	(??_floorf+3)^0,c
  4526   00413C  504F               	movf	??_floorf^0,w,c
  4527   00413E  1050               	iorwf	(??_floorf+1)^0,w,c
  4528   004140  1051               	iorwf	(??_floorf+2)^0,w,c
  4529   004142  1052               	iorwf	(??_floorf+3)^0,w,c
  4530   004144  B4D8               	btfsc	status,2,c
  4531   004146  EFA7  F020         	goto	u4471
  4532   00414A  EFA9  F020         	goto	u4470
  4533   00414E                     u4471:
  4534   00414E  EFB1  F020         	goto	l4699
  4535   004152                     u4470:
  4536   004152  0E00               	movlw	0
  4537   004154  6E5B               	movwf	floorf@u^0,c
  4538   004156  0E00               	movlw	0
  4539   004158  6E5C               	movwf	(floorf@u+1)^0,c
  4540   00415A  0E80               	movlw	128
  4541   00415C  6E5D               	movwf	(floorf@u+2)^0,c
  4542   00415E  0EBF               	movlw	191
  4543   004160  6E5E               	movwf	(floorf@u+3)^0,c
  4544   004162                     l4699:
  4545   004162  C05B  F04B         	movff	floorf@u,?_floorf
  4546   004166  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4547   00416A  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4548   00416E  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4549   004172                     l1584:
  4550   004172  0012               	return		;funcret
  4551   004174                     __end_of_floorf:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function ___fpclassifyf *****************
  4555 ;; Defined at:
  4556 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  x               4    0[COMRAM] float 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  u               4   10[COMRAM] struct .
  4561 ;;  e               2    8[COMRAM] int 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    0[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;Total ram usage:       14 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_efgtoa
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text10
  4586   004B36                     __ptext10:
  4587                           	callstack 0
  4588   004B36                     ___fpclassifyf:
  4589                           	callstack 25
  4590   004B36  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4591   004B3A  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4592   004B3E  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4593   004B42  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4594   004B46  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4595   004B4A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4596   004B4E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4597   004B52  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4598   004B56  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4599   004B5A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4600   004B5E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4601   004B62  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4602   004B66  0E18               	movlw	24
  4603   004B68  EFBB  F025         	goto	u4290
  4604   004B6C                     u4295:
  4605   004B6C  90D8               	bcf	status,0,c
  4606   004B6E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4607   004B70  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4608   004B72  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4609   004B74  3205               	rrcf	??___fpclassifyf^0,f,c
  4610   004B76                     u4290:
  4611   004B76  2EE8               	decfsz	wreg,f,c
  4612   004B78  EFB6  F025         	goto	u4295
  4613   004B7C  5005               	movf	??___fpclassifyf^0,w,c
  4614   004B7E  6E09               	movwf	___fpclassifyf@e^0,c
  4615   004B80  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4616   004B82  5009               	movf	___fpclassifyf@e^0,w,c
  4617   004B84  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4618   004B86  A4D8               	btfss	status,2,c
  4619   004B88  EFC8  F025         	goto	u4301
  4620   004B8C  EFCA  F025         	goto	u4300
  4621   004B90                     u4301:
  4622   004B90  EFEA  F025         	goto	l4657
  4623   004B94                     u4300:
  4624   004B94  90D8               	bcf	status,0,c
  4625   004B96  340B               	rlcf	___fpclassifyf@u^0,w,c
  4626   004B98  6E05               	movwf	??___fpclassifyf^0,c
  4627   004B9A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4628   004B9C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4629   004B9E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4630   004BA0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4631   004BA2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4632   004BA4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4633   004BA6  5005               	movf	??___fpclassifyf^0,w,c
  4634   004BA8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4635   004BAA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4636   004BAC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4637   004BAE  A4D8               	btfss	status,2,c
  4638   004BB0  EFDC  F025         	goto	u4311
  4639   004BB4  EFDE  F025         	goto	u4310
  4640   004BB8                     u4311:
  4641   004BB8  EFE4  F025         	goto	l4653
  4642   004BBC                     u4310:
  4643   004BBC  0E00               	movlw	0
  4644   004BBE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4645   004BC0  0E02               	movlw	2
  4646   004BC2  6E01               	movwf	?___fpclassifyf^0,c
  4647   004BC4  EF19  F026         	goto	l1570
  4648   004BC8                     l4653:
  4649   004BC8  0E00               	movlw	0
  4650   004BCA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4651   004BCC  0E03               	movlw	3
  4652   004BCE  6E01               	movwf	?___fpclassifyf^0,c
  4653   004BD0  EF19  F026         	goto	l1570
  4654   004BD4                     l4657:
  4655   004BD4  2809               	incf	___fpclassifyf@e^0,w,c
  4656   004BD6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4657   004BD8  A4D8               	btfss	status,2,c
  4658   004BDA  EFF1  F025         	goto	u4321
  4659   004BDE  EFF3  F025         	goto	u4320
  4660   004BE2                     u4321:
  4661   004BE2  EF15  F026         	goto	l4663
  4662   004BE6                     u4320:
  4663   004BE6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4664   004BEA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4665   004BEE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4666   004BF2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4667   004BF6  0E09               	movlw	9
  4668   004BF8                     u4335:
  4669   004BF8  90D8               	bcf	status,0,c
  4670   004BFA  3605               	rlcf	??___fpclassifyf^0,f,c
  4671   004BFC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4672   004BFE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4673   004C00  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4674   004C02  2EE8               	decfsz	wreg,f,c
  4675   004C04  EFFC  F025         	goto	u4335
  4676   004C08  5005               	movf	??___fpclassifyf^0,w,c
  4677   004C0A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4678   004C0C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4679   004C0E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4680   004C10  B4D8               	btfsc	status,2,c
  4681   004C12  EF0D  F026         	goto	u4341
  4682   004C16  EF10  F026         	goto	u4340
  4683   004C1A                     u4341:
  4684   004C1A  0E01               	movlw	1
  4685   004C1C  EF11  F026         	goto	u4350
  4686   004C20                     u4340:
  4687   004C20  0E00               	movlw	0
  4688   004C22                     u4350:
  4689   004C22  6E01               	movwf	?___fpclassifyf^0,c
  4690   004C24  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4691   004C26  EF19  F026         	goto	l1570
  4692   004C2A                     l4663:
  4693   004C2A  0E00               	movlw	0
  4694   004C2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4695   004C2E  0E04               	movlw	4
  4696   004C30  6E01               	movwf	?___fpclassifyf^0,c
  4697   004C32                     l1570:
  4698   004C32  0012               	return		;funcret
  4699   004C34                     __end_of___fpclassifyf:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function ___fltol *****************
  4703 ;; Defined at:
  4704 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  f1              4    0[COMRAM] int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  exp1            1    9[COMRAM] unsigned char 
  4709 ;;  sign1           1    8[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  4    0[COMRAM] long 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:       10 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_reverseOneBlock
  4730 ;;		_ForwardOneBlock
  4731 ;;		_Forwardhalfblock
  4732 ;;		_efgtoa
  4733 ;;		_Backhalfblock
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text11
  4738   00492C                     __ptext11:
  4739                           	callstack 0
  4740   00492C                     ___fltol:
  4741                           	callstack 25
  4742   00492C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4743   00492E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4744   004930  6E0A               	movwf	___fltol@exp1^0,c
  4745   004932  500A               	movf	___fltol@exp1^0,w,c
  4746   004934  A4D8               	btfss	status,2,c
  4747   004936  EF9F  F024         	goto	u4191
  4748   00493A  EFA1  F024         	goto	u4190
  4749   00493E                     u4191:
  4750   00493E  EFAB  F024         	goto	l4589
  4751   004942                     u4190:
  4752   004942                     l4585:
  4753   004942  0E00               	movlw	0
  4754   004944  6E01               	movwf	?___fltol^0,c
  4755   004946  0E00               	movlw	0
  4756   004948  6E02               	movwf	(?___fltol+1)^0,c
  4757   00494A  0E00               	movlw	0
  4758   00494C  6E03               	movwf	(?___fltol+2)^0,c
  4759   00494E  0E00               	movlw	0
  4760   004950  6E04               	movwf	(?___fltol+3)^0,c
  4761   004952  EF18  F025         	goto	l1043
  4762   004956                     l4589:
  4763   004956  C001  F005         	movff	___fltol@f1,??___fltol
  4764   00495A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4765   00495E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4766   004962  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4767   004966  0E20               	movlw	32
  4768   004968  EFBB  F024         	goto	u4200
  4769   00496C                     u4205:
  4770   00496C  90D8               	bcf	status,0,c
  4771   00496E  3208               	rrcf	(??___fltol+3)^0,f,c
  4772   004970  3207               	rrcf	(??___fltol+2)^0,f,c
  4773   004972  3206               	rrcf	(??___fltol+1)^0,f,c
  4774   004974  3205               	rrcf	??___fltol^0,f,c
  4775   004976                     u4200:
  4776   004976  2EE8               	decfsz	wreg,f,c
  4777   004978  EFB6  F024         	goto	u4205
  4778   00497C  5005               	movf	??___fltol^0,w,c
  4779   00497E  6E09               	movwf	___fltol@sign1^0,c
  4780   004980  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4781   004982  0EFF               	movlw	255
  4782   004984  1601               	andwf	___fltol@f1^0,f,c
  4783   004986  0EFF               	movlw	255
  4784   004988  1602               	andwf	(___fltol@f1+1)^0,f,c
  4785   00498A  0EFF               	movlw	255
  4786   00498C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4787   00498E  0E00               	movlw	0
  4788   004990  1604               	andwf	(___fltol@f1+3)^0,f,c
  4789   004992  0E96               	movlw	150
  4790   004994  5E0A               	subwf	___fltol@exp1^0,f,c
  4791   004996  BE0A               	btfsc	___fltol@exp1^0,7,c
  4792   004998  EFD2  F024         	goto	u4210
  4793   00499C  EFD0  F024         	goto	u4211
  4794   0049A0                     u4211:
  4795   0049A0  EFE8  F024         	goto	l4609
  4796   0049A4                     u4210:
  4797   0049A4  500A               	movf	___fltol@exp1^0,w,c
  4798   0049A6  0A80               	xorlw	128
  4799   0049A8  0F97               	addlw	151
  4800   0049AA  B0D8               	btfsc	status,0,c
  4801   0049AC  EFDA  F024         	goto	u4221
  4802   0049B0  EFDC  F024         	goto	u4220
  4803   0049B4                     u4221:
  4804   0049B4  EFDE  F024         	goto	l4605
  4805   0049B8                     u4220:
  4806   0049B8  EFA1  F024         	goto	l4585
  4807   0049BC                     l4605:
  4808   0049BC  90D8               	bcf	status,0,c
  4809   0049BE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4810   0049C0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4811   0049C2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4812   0049C4  3201               	rrcf	___fltol@f1^0,f,c
  4813   0049C6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4814   0049C8  EFDE  F024         	goto	l4605
  4815   0049CC  EF00  F025         	goto	l4619
  4816   0049D0                     l4609:
  4817   0049D0  0E1F               	movlw	31
  4818   0049D2  640A               	cpfsgt	___fltol@exp1^0,c
  4819   0049D4  EFEE  F024         	goto	u4231
  4820   0049D8  EFF0  F024         	goto	u4230
  4821   0049DC                     u4231:
  4822   0049DC  EFF8  F024         	goto	l4617
  4823   0049E0                     u4230:
  4824   0049E0  EFA1  F024         	goto	l4585
  4825   0049E4                     l4615:
  4826   0049E4  90D8               	bcf	status,0,c
  4827   0049E6  3601               	rlcf	___fltol@f1^0,f,c
  4828   0049E8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4829   0049EA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4830   0049EC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4831   0049EE  060A               	decf	___fltol@exp1^0,f,c
  4832   0049F0                     l4617:
  4833   0049F0  500A               	movf	___fltol@exp1^0,w,c
  4834   0049F2  A4D8               	btfss	status,2,c
  4835   0049F4  EFFE  F024         	goto	u4241
  4836   0049F8  EF00  F025         	goto	u4240
  4837   0049FC                     u4241:
  4838   0049FC  EFF2  F024         	goto	l4615
  4839   004A00                     u4240:
  4840   004A00                     l4619:
  4841   004A00  5009               	movf	___fltol@sign1^0,w,c
  4842   004A02  B4D8               	btfsc	status,2,c
  4843   004A04  EF06  F025         	goto	u4251
  4844   004A08  EF08  F025         	goto	u4250
  4845   004A0C                     u4251:
  4846   004A0C  EF10  F025         	goto	l4623
  4847   004A10                     u4250:
  4848   004A10  1E04               	comf	(___fltol@f1+3)^0,f,c
  4849   004A12  1E03               	comf	(___fltol@f1+2)^0,f,c
  4850   004A14  1E02               	comf	(___fltol@f1+1)^0,f,c
  4851   004A16  6C01               	negf	___fltol@f1^0,c
  4852   004A18  0E00               	movlw	0
  4853   004A1A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4854   004A1C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4855   004A1E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4856   004A20                     l4623:
  4857   004A20  C001  F001         	movff	___fltol@f1,?___fltol
  4858   004A24  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4859   004A28  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4860   004A2C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4861   004A30                     l1043:
  4862   004A30  0012               	return		;funcret
  4863   004A32                     __end_of___fltol:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function ___flneg *****************
  4867 ;; Defined at:
  4868 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  f1              4    0[COMRAM] long 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  4    0[COMRAM] long 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;Total ram usage:        4 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_efgtoa
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text12
  4897   005EDE                     __ptext12:
  4898                           	callstack 0
  4899   005EDE                     ___flneg:
  4900                           	callstack 25
  4901   005EDE  5001               	movf	___flneg@f1^0,w,c
  4902   005EE0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4903   005EE2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4904   005EE4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4905   005EE6  B4D8               	btfsc	status,2,c
  4906   005EE8  EF78  F02F         	goto	u4181
  4907   005EEC  EF7A  F02F         	goto	u4180
  4908   005EF0                     u4181:
  4909   005EF0  EF82  F02F         	goto	l4579
  4910   005EF4                     u4180:
  4911   005EF4  0E00               	movlw	0
  4912   005EF6  1A01               	xorwf	___flneg@f1^0,f,c
  4913   005EF8  0E00               	movlw	0
  4914   005EFA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4915   005EFC  0E00               	movlw	0
  4916   005EFE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4917   005F00  0E80               	movlw	128
  4918   005F02  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4919   005F04                     l4579:
  4920   005F04  C001  F001         	movff	___flneg@f1,?___flneg
  4921   005F08  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4922   005F0C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4923   005F10  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4924   005F14  0012               	return		;funcret
  4925   005F16                     __end_of___flneg:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _dtoa *****************
  4929 ;; Defined at:
  4930 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4933 ;;		 -> sprintf@f(11), 
  4934 ;;  d               8   29[COMRAM] long long 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  n               8   51[COMRAM] long long 
  4937 ;;  i               2   59[COMRAM] int 
  4938 ;;  w               2   49[COMRAM] int 
  4939 ;;  p               2   47[COMRAM] int 
  4940 ;;  s               1   61[COMRAM] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4950 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4952 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4953 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;Total ram usage:       35 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 5
  4957 ;; This function calls:
  4958 ;;		___aodiv
  4959 ;;		___aomod
  4960 ;;		_abs
  4961 ;;		_pad
  4962 ;; This function is called by:
  4963 ;;		_vfpfcnvrt
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text13
  4968   003830                     __ptext13:
  4969                           	callstack 0
  4970   003830                     _dtoa:
  4971                           	callstack 22
  4972   003830                     
  4973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4974   003830  C01E  F034         	movff	dtoa@d,dtoa@n
  4975   003834  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  4976   003838  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  4977   00383C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  4978   003840  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  4979   003844  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  4980   003848  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  4981   00384C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  4982   003850                     
  4983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4984   003850  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  4985   003852  EF2D  F01C         	goto	u4521
  4986   003856  EF30  F01C         	goto	u4520
  4987   00385A                     u4521:
  4988   00385A  0E01               	movlw	1
  4989   00385C  EF31  F01C         	goto	u4530
  4990   003860                     u4520:
  4991   003860  0E00               	movlw	0
  4992   003862                     u4530:
  4993   003862  6E3E               	movwf	dtoa@s^0,c
  4994   003864                     
  4995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4996   003864  503E               	movf	dtoa@s^0,w,c
  4997   003866  B4D8               	btfsc	status,2,c
  4998   003868  EF38  F01C         	goto	u4541
  4999   00386C  EF3A  F01C         	goto	u4540
  5000   003870                     u4541:
  5001   003870  EF4A  F01C         	goto	l4787
  5002   003874                     u4540:
  5003   003874                     
  5004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5005   003874  1E3B               	comf	(dtoa@n+7)^0,f,c
  5006   003876  1E3A               	comf	(dtoa@n+6)^0,f,c
  5007   003878  1E39               	comf	(dtoa@n+5)^0,f,c
  5008   00387A  1E38               	comf	(dtoa@n+4)^0,f,c
  5009   00387C  1E37               	comf	(dtoa@n+3)^0,f,c
  5010   00387E  1E36               	comf	(dtoa@n+2)^0,f,c
  5011   003880  1E35               	comf	(dtoa@n+1)^0,f,c
  5012   003882  6C34               	negf	dtoa@n^0,c
  5013   003884  0E00               	movlw	0
  5014   003886  2235               	addwfc	(dtoa@n+1)^0,f,c
  5015   003888  2236               	addwfc	(dtoa@n+2)^0,f,c
  5016   00388A  2237               	addwfc	(dtoa@n+3)^0,f,c
  5017   00388C  2238               	addwfc	(dtoa@n+4)^0,f,c
  5018   00388E  2239               	addwfc	(dtoa@n+5)^0,f,c
  5019   003890  223A               	addwfc	(dtoa@n+6)^0,f,c
  5020   003892  223B               	addwfc	(dtoa@n+7)^0,f,c
  5021   003894                     l4787:
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5024   003894  0100               	movlb	0	; () banked
  5025   003896  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5026   003898  EF58  F01C         	goto	u4550
  5027   00389C  51EA               	movf	(_prec+1)& (0+255),w,b
  5028   00389E  E106               	bnz	u4551
  5029   0038A0  05E9               	decf	_prec& (0+255),w,b
  5030   0038A2  B0D8               	btfsc	status,0,c
  5031   0038A4  EF56  F01C         	goto	u4551
  5032   0038A8  EF58  F01C         	goto	u4550
  5033   0038AC                     u4551:
  5034   0038AC  EF5E  F01C         	goto	l1465
  5035   0038B0                     u4550:
  5036   0038B0                     
  5037                           ; BSR set to: 0
  5038   0038B0  0E00               	movlw	0
  5039   0038B2  6E31               	movwf	(dtoa@p+1)^0,c
  5040   0038B4  0E01               	movlw	1
  5041   0038B6  6E30               	movwf	dtoa@p^0,c
  5042   0038B8  EF62  F01C         	goto	l1467
  5043   0038BC                     l1465:
  5044                           
  5045                           ; BSR set to: 0
  5046   0038BC  C0E9  F030         	movff	_prec,dtoa@p
  5047   0038C0  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5048   0038C4                     l1467:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5052   0038C4  C0E7  F032         	movff	_width,dtoa@w
  5053   0038C8  C0E8  F033         	movff	_width+1,dtoa@w+1
  5054   0038CC                     
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5057   0038CC  503E               	movf	dtoa@s^0,w,c
  5058   0038CE  B4D8               	btfsc	status,2,c
  5059   0038D0  EF6C  F01C         	goto	u4561
  5060   0038D4  EF6E  F01C         	goto	u4560
  5061   0038D8                     u4561:
  5062   0038D8  EF85  F01C         	goto	l1468
  5063   0038DC                     u4560:
  5064   0038DC                     
  5065                           ; BSR set to: 0
  5066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5067   0038DC  0632               	decf	dtoa@w^0,f,c
  5068   0038DE  A0D8               	btfss	status,0,c
  5069   0038E0  0633               	decf	(dtoa@w+1)^0,f,c
  5070   0038E2                     
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5073   0038E2  503E               	movf	dtoa@s^0,w,c
  5074   0038E4  A4D8               	btfss	status,2,c
  5075   0038E6  EF77  F01C         	goto	u4571
  5076   0038EA  EF79  F01C         	goto	u4570
  5077   0038EE                     u4571:
  5078   0038EE  EF7F  F01C         	goto	l4799
  5079   0038F2                     u4570:
  5080   0038F2                     
  5081                           ; BSR set to: 0
  5082   0038F2  0E00               	movlw	0
  5083   0038F4  6E2F               	movwf	(_dtoa$2863+1)^0,c
  5084   0038F6  0E2B               	movlw	43
  5085   0038F8  6E2E               	movwf	_dtoa$2863^0,c
  5086   0038FA  EF83  F01C         	goto	l4801
  5087   0038FE                     l4799:
  5088                           
  5089                           ; BSR set to: 0
  5090   0038FE  0E00               	movlw	0
  5091   003900  6E2F               	movwf	(_dtoa$2863+1)^0,c
  5092   003902  0E2D               	movlw	45
  5093   003904  6E2E               	movwf	_dtoa$2863^0,c
  5094   003906                     l4801:
  5095                           
  5096                           ; BSR set to: 0
  5097   003906  C02E  F03E         	movff	_dtoa$2863,dtoa@s
  5098   00390A                     l1468:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5102   00390A  0E00               	movlw	0
  5103   00390C  6E3D               	movwf	(dtoa@i+1)^0,c
  5104   00390E  0E4F               	movlw	79
  5105   003910  6E3C               	movwf	dtoa@i^0,c
  5106   003912                     
  5107                           ; BSR set to: 0
  5108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5109   003912  0E00               	movlw	0
  5110   003914  0102               	movlb	2	; () banked
  5111   003916  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5114   003918  EF0A  F01D         	goto	l4815
  5115   00391C                     l4805:
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5118   00391C  063C               	decf	dtoa@i^0,f,c
  5119   00391E  A0D8               	btfss	status,0,c
  5120   003920  063D               	decf	(dtoa@i+1)^0,f,c
  5121   003922                     
  5122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5123   003922  0EA0               	movlw	low _dbuf
  5124   003924  243C               	addwf	dtoa@i^0,w,c
  5125   003926  6ED9               	movwf	fsr2l,c
  5126   003928  0E02               	movlw	high _dbuf
  5127   00392A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5128   00392C  6EDA               	movwf	fsr2h,c
  5129   00392E  C034  F001         	movff	dtoa@n,___aomod@dividend
  5130   003932  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5131   003936  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5132   00393A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5133   00393E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5134   003942  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5135   003946  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5136   00394A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5137   00394E  0E0A               	movlw	10
  5138   003950  6E09               	movwf	___aomod@divisor^0,c
  5139   003952  0E00               	movlw	0
  5140   003954  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5141   003956  0E00               	movlw	0
  5142   003958  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5143   00395A  0E00               	movlw	0
  5144   00395C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5145   00395E  0E00               	movlw	0
  5146   003960  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5147   003962  0E00               	movlw	0
  5148   003964  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5149   003966  0E00               	movlw	0
  5150   003968  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5151   00396A  0E00               	movlw	0
  5152   00396C  6E10               	movwf	(___aomod@divisor+7)^0,c
  5153   00396E  ECE4  F023         	call	___aomod	;wreg free
  5154   003972  C001  F026         	movff	?___aomod,??_dtoa
  5155   003976  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5156   00397A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5157   00397E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5158   003982  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5159   003986  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5160   00398A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5161   00398E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5162   003992  C026  F013         	movff	??_dtoa,abs@a
  5163   003996  C027  F014         	movff	??_dtoa+1,abs@a+1
  5164   00399A  EC11  F02F         	call	_abs	;wreg free
  5165   00399E  5013               	movf	?_abs^0,w,c
  5166   0039A0  0F30               	addlw	48
  5167   0039A2  6EDF               	movwf	indf2,c
  5168   0039A4                     
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5170   0039A4  0630               	decf	dtoa@p^0,f,c
  5171   0039A6  A0D8               	btfss	status,0,c
  5172   0039A8  0631               	decf	(dtoa@p+1)^0,f,c
  5173   0039AA                     
  5174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5175   0039AA  0632               	decf	dtoa@w^0,f,c
  5176   0039AC  A0D8               	btfss	status,0,c
  5177   0039AE  0633               	decf	(dtoa@w+1)^0,f,c
  5178   0039B0                     
  5179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5180   0039B0  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5181   0039B4  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5182   0039B8  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5183   0039BC  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5184   0039C0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5185   0039C4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5186   0039C8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5187   0039CC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5188   0039D0  0E0A               	movlw	10
  5189   0039D2  6E09               	movwf	___aodiv@divisor^0,c
  5190   0039D4  0E00               	movlw	0
  5191   0039D6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5192   0039D8  0E00               	movlw	0
  5193   0039DA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5194   0039DC  0E00               	movlw	0
  5195   0039DE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5196   0039E0  0E00               	movlw	0
  5197   0039E2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5198   0039E4  0E00               	movlw	0
  5199   0039E6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5200   0039E8  0E00               	movlw	0
  5201   0039EA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5202   0039EC  0E00               	movlw	0
  5203   0039EE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5204   0039F0  EC6A  F022         	call	___aodiv	;wreg free
  5205   0039F4  C001  F034         	movff	?___aodiv,dtoa@n
  5206   0039F8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5207   0039FC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5208   003A00  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5209   003A04  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5210   003A08  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5211   003A0C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5212   003A10  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5213   003A14                     l4815:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5216   003A14  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5217   003A16  EF15  F01D         	goto	u4581
  5218   003A1A  503D               	movf	(dtoa@i+1)^0,w,c
  5219   003A1C  E108               	bnz	u4580
  5220   003A1E  043C               	decf	dtoa@i^0,w,c
  5221   003A20  A0D8               	btfss	status,0,c
  5222   003A22  EF15  F01D         	goto	u4581
  5223   003A26  EF17  F01D         	goto	u4580
  5224   003A2A                     u4581:
  5225   003A2A  EF33  F01D         	goto	l4821
  5226   003A2E                     u4580:
  5227   003A2E  5034               	movf	dtoa@n^0,w,c
  5228   003A30  1035               	iorwf	(dtoa@n+1)^0,w,c
  5229   003A32  1036               	iorwf	(dtoa@n+2)^0,w,c
  5230   003A34  1037               	iorwf	(dtoa@n+3)^0,w,c
  5231   003A36  1038               	iorwf	(dtoa@n+4)^0,w,c
  5232   003A38  1039               	iorwf	(dtoa@n+5)^0,w,c
  5233   003A3A  103A               	iorwf	(dtoa@n+6)^0,w,c
  5234   003A3C  103B               	iorwf	(dtoa@n+7)^0,w,c
  5235   003A3E  A4D8               	btfss	status,2,c
  5236   003A40  EF24  F01D         	goto	u4591
  5237   003A44  EF26  F01D         	goto	u4590
  5238   003A48                     u4591:
  5239   003A48  EF8E  F01C         	goto	l4805
  5240   003A4C                     u4590:
  5241   003A4C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5242   003A4E  EF33  F01D         	goto	u4600
  5243   003A52  5031               	movf	(dtoa@p+1)^0,w,c
  5244   003A54  E106               	bnz	u4601
  5245   003A56  0430               	decf	dtoa@p^0,w,c
  5246   003A58  B0D8               	btfsc	status,0,c
  5247   003A5A  EF31  F01D         	goto	u4601
  5248   003A5E  EF33  F01D         	goto	u4600
  5249   003A62                     u4601:
  5250   003A62  EF8E  F01C         	goto	l4805
  5251   003A66                     u4600:
  5252   003A66                     l4821:
  5253                           
  5254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5255   003A66  503E               	movf	dtoa@s^0,w,c
  5256   003A68  B4D8               	btfsc	status,2,c
  5257   003A6A  EF39  F01D         	goto	u4611
  5258   003A6E  EF3B  F01D         	goto	u4610
  5259   003A72                     u4611:
  5260   003A72  EF46  F01D         	goto	l4827
  5261   003A76                     u4610:
  5262   003A76                     
  5263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5264   003A76  063C               	decf	dtoa@i^0,f,c
  5265   003A78  A0D8               	btfss	status,0,c
  5266   003A7A  063D               	decf	(dtoa@i+1)^0,f,c
  5267   003A7C                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5269   003A7C  0EA0               	movlw	low _dbuf
  5270   003A7E  243C               	addwf	dtoa@i^0,w,c
  5271   003A80  6ED9               	movwf	fsr2l,c
  5272   003A82  0E02               	movlw	high _dbuf
  5273   003A84  203D               	addwfc	(dtoa@i+1)^0,w,c
  5274   003A86  6EDA               	movwf	fsr2h,c
  5275   003A88  C03E  FFDF         	movff	dtoa@s,indf2
  5276   003A8C                     l4827:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5279   003A8C  C01C  F011         	movff	dtoa@fp,pad@fp
  5280   003A90  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5281   003A94  0EA0               	movlw	low _dbuf
  5282   003A96  243C               	addwf	dtoa@i^0,w,c
  5283   003A98  6E13               	movwf	pad@buf^0,c
  5284   003A9A  0E02               	movlw	high _dbuf
  5285   003A9C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5286   003A9E  6E14               	movwf	(pad@buf+1)^0,c
  5287   003AA0  C032  F015         	movff	dtoa@w,pad@p
  5288   003AA4  C033  F016         	movff	dtoa@w+1,pad@p+1
  5289   003AA8  ECF7  F029         	call	_pad	;wreg free
  5290   003AAC  0012               	return		;funcret
  5291   003AAE                     __end_of_dtoa:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function _pad *****************
  5295 ;; Defined at:
  5296 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5299 ;;		 -> sprintf@f(11), 
  5300 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5301 ;;		 -> dbuf(80), 
  5302 ;;  p               2   20[COMRAM] int 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  w               2   25[COMRAM] int 
  5305 ;;  i               2   23[COMRAM] int 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5315 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;Total ram usage:       11 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 4
  5322 ;; This function calls:
  5323 ;;		_fputc
  5324 ;;		_fputs
  5325 ;; This function is called by:
  5326 ;;		_dtoa
  5327 ;;		_efgtoa
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text14
  5332   0053EE                     __ptext14:
  5333                           	callstack 0
  5334   0053EE                     _pad:
  5335                           	callstack 22
  5336   0053EE                     
  5337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5338   0053EE  BE16               	btfsc	(pad@p+1)^0,7,c
  5339   0053F0  EFFC  F029         	goto	u4261
  5340   0053F4  EFFE  F029         	goto	u4260
  5341   0053F8                     u4261:
  5342   0053F8  EF04  F02A         	goto	l4631
  5343   0053FC                     u4260:
  5344   0053FC  C015  F01A         	movff	pad@p,pad@w
  5345   005400  C016  F01B         	movff	pad@p+1,pad@w+1
  5346   005404  EF08  F02A         	goto	l1456
  5347   005408                     l4631:
  5348   005408  0E00               	movlw	0
  5349   00540A  6E1B               	movwf	(pad@w+1)^0,c
  5350   00540C  0E00               	movlw	0
  5351   00540E  6E1A               	movwf	pad@w^0,c
  5352   005410                     l1456:
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5355   005410  0E00               	movlw	0
  5356   005412  6E19               	movwf	(pad@i+1)^0,c
  5357   005414  0E00               	movlw	0
  5358   005416  6E18               	movwf	pad@i^0,c
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5361   005418  EF1A  F02A         	goto	l4637
  5362   00541C                     l4633:
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5365   00541C  0E00               	movlw	0
  5366   00541E  6E02               	movwf	(fputc@c+1)^0,c
  5367   005420  0E20               	movlw	32
  5368   005422  6E01               	movwf	fputc@c^0,c
  5369   005424  C011  F003         	movff	pad@fp,fputc@fp
  5370   005428  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5371   00542C  EC1A  F026         	call	_fputc	;wreg free
  5372   005430                     
  5373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5374   005430  4A18               	infsnz	pad@i^0,f,c
  5375   005432  2A19               	incf	(pad@i+1)^0,f,c
  5376   005434                     l4637:
  5377                           
  5378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5379   005434  501A               	movf	pad@w^0,w,c
  5380   005436  5C18               	subwf	pad@i^0,w,c
  5381   005438  5019               	movf	(pad@i+1)^0,w,c
  5382   00543A  0A80               	xorlw	128
  5383   00543C  6E17               	movwf	??_pad^0,c
  5384   00543E  501B               	movf	(pad@w+1)^0,w,c
  5385   005440  0A80               	xorlw	128
  5386   005442  5817               	subwfb	??_pad^0,w,c
  5387   005444  A0D8               	btfss	status,0,c
  5388   005446  EF27  F02A         	goto	u4271
  5389   00544A  EF29  F02A         	goto	u4270
  5390   00544E                     u4271:
  5391   00544E  EF0E  F02A         	goto	l4633
  5392   005452                     u4270:
  5393   005452                     
  5394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5395   005452  C013  F00A         	movff	pad@buf,fputs@s
  5396   005456  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5397   00545A  C011  F00C         	movff	pad@fp,fputs@fp
  5398   00545E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5399   005462  ECCE  F02E         	call	_fputs	;wreg free
  5400   005466  0012               	return		;funcret
  5401   005468                     __end_of_pad:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _fputs *****************
  5405 ;; Defined at:
  5406 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5409 ;;		 -> dbuf(80), 
  5410 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5411 ;;		 -> sprintf@f(11), 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  i               2   14[COMRAM] int 
  5414 ;;  c               1   13[COMRAM] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  2    9[COMRAM] int 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;Total ram usage:        7 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; Hardware stack levels required when called: 3
  5431 ;; This function calls:
  5432 ;;		_fputc
  5433 ;; This function is called by:
  5434 ;;		_pad
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text15
  5439   005D9C                     __ptext15:
  5440                           	callstack 0
  5441   005D9C                     _fputs:
  5442                           	callstack 22
  5443   005D9C  0E00               	movlw	0
  5444   005D9E  6E10               	movwf	(fputs@i+1)^0,c
  5445   005DA0  0E00               	movlw	0
  5446   005DA2  6E0F               	movwf	fputs@i^0,c
  5447   005DA4  EFDF  F02E         	goto	l4101
  5448   005DA8                     l4097:
  5449   005DA8  C00E  F001         	movff	fputs@c,fputc@c
  5450   005DAC  6A02               	clrf	(fputc@c+1)^0,c
  5451   005DAE  C00C  F003         	movff	fputs@fp,fputc@fp
  5452   005DB2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5453   005DB6  EC1A  F026         	call	_fputc	;wreg free
  5454   005DBA  4A0F               	infsnz	fputs@i^0,f,c
  5455   005DBC  2A10               	incf	(fputs@i+1)^0,f,c
  5456   005DBE                     l4101:
  5457   005DBE  500F               	movf	fputs@i^0,w,c
  5458   005DC0  240A               	addwf	fputs@s^0,w,c
  5459   005DC2  6ED9               	movwf	fsr2l,c
  5460   005DC4  5010               	movf	(fputs@i+1)^0,w,c
  5461   005DC6  200B               	addwfc	(fputs@s+1)^0,w,c
  5462   005DC8  6EDA               	movwf	fsr2h,c
  5463   005DCA  50DF               	movf	indf2,w,c
  5464   005DCC  6E0E               	movwf	fputs@c^0,c
  5465   005DCE  500E               	movf	fputs@c^0,w,c
  5466   005DD0  A4D8               	btfss	status,2,c
  5467   005DD2  EFED  F02E         	goto	u3411
  5468   005DD6  EFEF  F02E         	goto	u3410
  5469   005DDA                     u3411:
  5470   005DDA  EFD4  F02E         	goto	l4097
  5471   005DDE                     u3410:
  5472   005DDE  0012               	return		;funcret
  5473   005DE0                     __end_of_fputs:
  5474                           	callstack 0
  5475                           
  5476 ;; *************** function _fputc *****************
  5477 ;; Defined at:
  5478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  c               2    0[COMRAM] int 
  5481 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5482 ;;		 -> sprintf@f(11), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  2    0[COMRAM] int 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;Total ram usage:        9 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		_putch
  5503 ;; This function is called by:
  5504 ;;		_pad
  5505 ;;		_vfpfcnvrt
  5506 ;;		_fputs
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text16
  5511   004C34                     __ptext16:
  5512                           	callstack 0
  5513   004C34                     _fputc:
  5514                           	callstack 25
  5515   004C34  5003               	movf	fputc@fp^0,w,c
  5516   004C36  1004               	iorwf	(fputc@fp+1)^0,w,c
  5517   004C38  B4D8               	btfsc	status,2,c
  5518   004C3A  EF21  F026         	goto	u2961
  5519   004C3E  EF23  F026         	goto	u2960
  5520   004C42                     u2961:
  5521   004C42  EF2C  F026         	goto	l3867
  5522   004C46                     u2960:
  5523   004C46  5003               	movf	fputc@fp^0,w,c
  5524   004C48  1004               	iorwf	(fputc@fp+1)^0,w,c
  5525   004C4A  A4D8               	btfss	status,2,c
  5526   004C4C  EF2A  F026         	goto	u2971
  5527   004C50  EF2C  F026         	goto	u2970
  5528   004C54                     u2971:
  5529   004C54  EF31  F026         	goto	l3869
  5530   004C58                     u2970:
  5531   004C58                     l3867:
  5532   004C58  5001               	movf	fputc@c^0,w,c
  5533   004C5A  EC8A  F030         	call	_putch
  5534   004C5E  EF7E  F026         	goto	l1616
  5535   004C62                     l3869:
  5536   004C62  EE20 F009          	lfsr	2,9
  5537   004C66  5003               	movf	fputc@fp^0,w,c
  5538   004C68  26D9               	addwf	fsr2l,f,c
  5539   004C6A  5004               	movf	(fputc@fp+1)^0,w,c
  5540   004C6C  22DA               	addwfc	fsr2h,f,c
  5541   004C6E  50DE               	movf	postinc2,w,c
  5542   004C70  10DE               	iorwf	postinc2,w,c
  5543   004C72  B4D8               	btfsc	status,2,c
  5544   004C74  EF3E  F026         	goto	u2981
  5545   004C78  EF40  F026         	goto	u2980
  5546   004C7C                     u2981:
  5547   004C7C  EF5B  F026         	goto	l3873
  5548   004C80                     u2980:
  5549   004C80  EE20 F009          	lfsr	2,9
  5550   004C84  5003               	movf	fputc@fp^0,w,c
  5551   004C86  26D9               	addwf	fsr2l,f,c
  5552   004C88  5004               	movf	(fputc@fp+1)^0,w,c
  5553   004C8A  22DA               	addwfc	fsr2h,f,c
  5554   004C8C  EE10 F003          	lfsr	1,3
  5555   004C90  5003               	movf	fputc@fp^0,w,c
  5556   004C92  26E1               	addwf	fsr1l,f,c
  5557   004C94  5004               	movf	(fputc@fp+1)^0,w,c
  5558   004C96  22E2               	addwfc	fsr1h,f,c
  5559   004C98  50DE               	movf	postinc2,w,c
  5560   004C9A  5CE6               	subwf	postinc1,w,c
  5561   004C9C  50E6               	movf	postinc1,w,c
  5562   004C9E  0A80               	xorlw	128
  5563   004CA0  6E09               	movwf	(??_fputc+4)^0,c
  5564   004CA2  50DE               	movf	postinc2,w,c
  5565   004CA4  0A80               	xorlw	128
  5566   004CA6  5809               	subwfb	(??_fputc+4)^0,w,c
  5567   004CA8  B0D8               	btfsc	status,0,c
  5568   004CAA  EF59  F026         	goto	u2991
  5569   004CAE  EF5B  F026         	goto	u2990
  5570   004CB2                     u2991:
  5571   004CB2  EF7E  F026         	goto	l1616
  5572   004CB6                     u2990:
  5573   004CB6                     l3873:
  5574   004CB6  EE20 F003          	lfsr	2,3
  5575   004CBA  5003               	movf	fputc@fp^0,w,c
  5576   004CBC  26D9               	addwf	fsr2l,f,c
  5577   004CBE  5004               	movf	(fputc@fp+1)^0,w,c
  5578   004CC0  22DA               	addwfc	fsr2h,f,c
  5579   004CC2  CFDE F005          	movff	postinc2,??_fputc
  5580   004CC6  CFDD F006          	movff	postdec2,??_fputc+1
  5581   004CCA  C003  FFD9         	movff	fputc@fp,fsr2l
  5582   004CCE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5583   004CD2  CFDE F007          	movff	postinc2,??_fputc+2
  5584   004CD6  CFDD F008          	movff	postdec2,??_fputc+3
  5585   004CDA  5005               	movf	??_fputc^0,w,c
  5586   004CDC  2407               	addwf	(??_fputc+2)^0,w,c
  5587   004CDE  6ED9               	movwf	fsr2l,c
  5588   004CE0  5006               	movf	(??_fputc+1)^0,w,c
  5589   004CE2  2008               	addwfc	(??_fputc+3)^0,w,c
  5590   004CE4  6EDA               	movwf	fsr2h,c
  5591   004CE6  C001  FFDF         	movff	fputc@c,indf2
  5592   004CEA  EE20 F003          	lfsr	2,3
  5593   004CEE  5003               	movf	fputc@fp^0,w,c
  5594   004CF0  26D9               	addwf	fsr2l,f,c
  5595   004CF2  5004               	movf	(fputc@fp+1)^0,w,c
  5596   004CF4  22DA               	addwfc	fsr2h,f,c
  5597   004CF6  2ADE               	incf	postinc2,f,c
  5598   004CF8  0E00               	movlw	0
  5599   004CFA  22DD               	addwfc	postdec2,f,c
  5600   004CFC                     l1616:
  5601   004CFC  0012               	return		;funcret
  5602   004CFE                     __end_of_fputc:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _putch *****************
  5606 ;; Defined at:
  5607 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  c               1    wreg     unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  c               1    0[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_fputc
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text17
  5636   006114                     __ptext17:
  5637                           	callstack 0
  5638   006114                     _putch:
  5639                           	callstack 25
  5640   006114  0012               	return		;funcret
  5641   006116                     __end_of_putch:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _abs *****************
  5645 ;; Defined at:
  5646 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  a               2   18[COMRAM] int 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2   18[COMRAM] int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;Total ram usage:        4 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_dtoa
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text18
  5675   005E22                     __ptext18:
  5676                           	callstack 0
  5677   005E22                     _abs:
  5678                           	callstack 25
  5679   005E22  BE14               	btfsc	(abs@a+1)^0,7,c
  5680   005E24  EF1E  F02F         	goto	u4280
  5681   005E28  5014               	movf	(abs@a+1)^0,w,c
  5682   005E2A  E106               	bnz	u4281
  5683   005E2C  0413               	decf	abs@a^0,w,c
  5684   005E2E  B0D8               	btfsc	status,0,c
  5685   005E30  EF1C  F02F         	goto	u4281
  5686   005E34  EF1E  F02F         	goto	u4280
  5687   005E38                     u4281:
  5688   005E38  EF2C  F02F         	goto	l1575
  5689   005E3C                     u4280:
  5690   005E3C  C013  F015         	movff	abs@a,??_abs
  5691   005E40  C014  F016         	movff	abs@a+1,??_abs+1
  5692   005E44  1E15               	comf	??_abs^0,f,c
  5693   005E46  1E16               	comf	(??_abs+1)^0,f,c
  5694   005E48  4A15               	infsnz	??_abs^0,f,c
  5695   005E4A  2A16               	incf	(??_abs+1)^0,f,c
  5696   005E4C  C015  F013         	movff	??_abs,?_abs
  5697   005E50  C016  F014         	movff	??_abs+1,?_abs+1
  5698   005E54  EF30  F02F         	goto	l1578
  5699   005E58                     l1575:
  5700   005E58  C013  F013         	movff	abs@a,?_abs
  5701   005E5C  C014  F014         	movff	abs@a+1,?_abs+1
  5702   005E60                     l1578:
  5703   005E60  0012               	return		;funcret
  5704   005E62                     __end_of_abs:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function ___aomod *****************
  5708 ;; Defined at:
  5709 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  dividend        8    0[COMRAM] long long 
  5712 ;;  divisor         8    8[COMRAM] long long 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  sign            1   17[COMRAM] unsigned char 
  5715 ;;  counter         1   16[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  8    0[COMRAM] long long 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5725 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;Total ram usage:       18 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 1
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_dtoa
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text19
  5740   0047C8                     __ptext19:
  5741                           	callstack 0
  5742   0047C8                     ___aomod:
  5743                           	callstack 25
  5744   0047C8  0E00               	movlw	0
  5745   0047CA  6E12               	movwf	___aomod@sign^0,c
  5746   0047CC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5747   0047CE  EFED  F023         	goto	u3620
  5748   0047D2  EFEB  F023         	goto	u3621
  5749   0047D6                     u3621:
  5750   0047D6  EFFF  F023         	goto	l4235
  5751   0047DA                     u3620:
  5752   0047DA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5753   0047DC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5754   0047DE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5755   0047E0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5756   0047E2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5757   0047E4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5758   0047E6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5759   0047E8  6C01               	negf	___aomod@dividend^0,c
  5760   0047EA  0E00               	movlw	0
  5761   0047EC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5762   0047EE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5763   0047F0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5764   0047F2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5765   0047F4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5766   0047F6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5767   0047F8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5768   0047FA  0E01               	movlw	1
  5769   0047FC  6E12               	movwf	___aomod@sign^0,c
  5770   0047FE                     l4235:
  5771   0047FE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5772   004800  EF06  F024         	goto	u3630
  5773   004804  EF04  F024         	goto	u3631
  5774   004808                     u3631:
  5775   004808  EF16  F024         	goto	l4239
  5776   00480C                     u3630:
  5777   00480C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5778   00480E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5779   004810  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5780   004812  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5781   004814  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5782   004816  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5783   004818  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5784   00481A  6C09               	negf	___aomod@divisor^0,c
  5785   00481C  0E00               	movlw	0
  5786   00481E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5787   004820  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5788   004822  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5789   004824  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5790   004826  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5791   004828  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5792   00482A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5793   00482C                     l4239:
  5794   00482C  5009               	movf	___aomod@divisor^0,w,c
  5795   00482E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5796   004830  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5797   004832  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5798   004834  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5799   004836  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5800   004838  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5801   00483A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5802   00483C  B4D8               	btfsc	status,2,c
  5803   00483E  EF23  F024         	goto	u3641
  5804   004842  EF25  F024         	goto	u3640
  5805   004846                     u3641:
  5806   004846  EF6D  F024         	goto	l4255
  5807   00484A                     u3640:
  5808   00484A  0E01               	movlw	1
  5809   00484C  6E11               	movwf	___aomod@counter^0,c
  5810   00484E  EF33  F024         	goto	l4245
  5811   004852                     l4243:
  5812   004852  90D8               	bcf	status,0,c
  5813   004854  3609               	rlcf	___aomod@divisor^0,f,c
  5814   004856  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5815   004858  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5816   00485A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5817   00485C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5818   00485E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5819   004860  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5820   004862  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5821   004864  2A11               	incf	___aomod@counter^0,f,c
  5822   004866                     l4245:
  5823   004866  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5824   004868  EF38  F024         	goto	u3651
  5825   00486C  EF3A  F024         	goto	u3650
  5826   004870                     u3651:
  5827   004870  EF29  F024         	goto	l4243
  5828   004874                     u3650:
  5829   004874                     l4247:
  5830   004874  5009               	movf	___aomod@divisor^0,w,c
  5831   004876  5C01               	subwf	___aomod@dividend^0,w,c
  5832   004878  500A               	movf	(___aomod@divisor+1)^0,w,c
  5833   00487A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5834   00487C  500B               	movf	(___aomod@divisor+2)^0,w,c
  5835   00487E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5836   004880  500C               	movf	(___aomod@divisor+3)^0,w,c
  5837   004882  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5838   004884  500D               	movf	(___aomod@divisor+4)^0,w,c
  5839   004886  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5840   004888  500E               	movf	(___aomod@divisor+5)^0,w,c
  5841   00488A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5842   00488C  500F               	movf	(___aomod@divisor+6)^0,w,c
  5843   00488E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5844   004890  5010               	movf	(___aomod@divisor+7)^0,w,c
  5845   004892  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5846   004894  A0D8               	btfss	status,0,c
  5847   004896  EF4F  F024         	goto	u3661
  5848   00489A  EF51  F024         	goto	u3660
  5849   00489E                     u3661:
  5850   00489E  EF61  F024         	goto	l4251
  5851   0048A2                     u3660:
  5852   0048A2  5009               	movf	___aomod@divisor^0,w,c
  5853   0048A4  5E01               	subwf	___aomod@dividend^0,f,c
  5854   0048A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5855   0048A8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5856   0048AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5857   0048AC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5858   0048AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5859   0048B0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5860   0048B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  5861   0048B4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5862   0048B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  5863   0048B8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5864   0048BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  5865   0048BC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5866   0048BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  5867   0048C0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5868   0048C2                     l4251:
  5869   0048C2  90D8               	bcf	status,0,c
  5870   0048C4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5871   0048C6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5872   0048C8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5873   0048CA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5874   0048CC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5875   0048CE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5876   0048D0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5877   0048D2  3209               	rrcf	___aomod@divisor^0,f,c
  5878   0048D4  2E11               	decfsz	___aomod@counter^0,f,c
  5879   0048D6  EF3A  F024         	goto	l4247
  5880   0048DA                     l4255:
  5881   0048DA  5012               	movf	___aomod@sign^0,w,c
  5882   0048DC  B4D8               	btfsc	status,2,c
  5883   0048DE  EF73  F024         	goto	u3671
  5884   0048E2  EF75  F024         	goto	u3670
  5885   0048E6                     u3671:
  5886   0048E6  EF85  F024         	goto	l4259
  5887   0048EA                     u3670:
  5888   0048EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5889   0048EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5890   0048EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5891   0048F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5892   0048F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5893   0048F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5894   0048F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5895   0048F8  6C01               	negf	___aomod@dividend^0,c
  5896   0048FA  0E00               	movlw	0
  5897   0048FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5898   0048FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5899   004900  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5900   004902  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5901   004904  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5902   004906  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5903   004908  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5904   00490A                     l4259:
  5905   00490A  C001  F001         	movff	___aomod@dividend,?___aomod
  5906   00490E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5907   004912  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5908   004916  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5909   00491A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5910   00491E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5911   004922  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5912   004926  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5913   00492A  0012               	return		;funcret
  5914   00492C                     __end_of___aomod:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function ___aodiv *****************
  5918 ;; Defined at:
  5919 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  dividend        8    0[COMRAM] long long 
  5922 ;;  divisor         8    8[COMRAM] long long 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  quotient        8   18[COMRAM] long long 
  5925 ;;  sign            1   17[COMRAM] unsigned char 
  5926 ;;  counter         1   16[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  8    0[COMRAM] long long 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5936 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;Total ram usage:       26 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_dtoa
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text20
  5951   0044D4                     __ptext20:
  5952                           	callstack 0
  5953   0044D4                     ___aodiv:
  5954                           	callstack 25
  5955   0044D4  0E00               	movlw	0
  5956   0044D6  6E12               	movwf	___aodiv@sign^0,c
  5957   0044D8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5958   0044DA  EF73  F022         	goto	u3550
  5959   0044DE  EF71  F022         	goto	u3551
  5960   0044E2                     u3551:
  5961   0044E2  EF85  F022         	goto	l4191
  5962   0044E6                     u3550:
  5963   0044E6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5964   0044E8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5965   0044EA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5966   0044EC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5967   0044EE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5968   0044F0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5969   0044F2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5970   0044F4  6C09               	negf	___aodiv@divisor^0,c
  5971   0044F6  0E00               	movlw	0
  5972   0044F8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5973   0044FA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5974   0044FC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5975   0044FE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5976   004500  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5977   004502  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5978   004504  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5979   004506  0E01               	movlw	1
  5980   004508  6E12               	movwf	___aodiv@sign^0,c
  5981   00450A                     l4191:
  5982   00450A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5983   00450C  EF8C  F022         	goto	u3560
  5984   004510  EF8A  F022         	goto	u3561
  5985   004514                     u3561:
  5986   004514  EF9E  F022         	goto	l4197
  5987   004518                     u3560:
  5988   004518  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5989   00451A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5990   00451C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5991   00451E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5992   004520  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5993   004522  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5994   004524  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5995   004526  6C01               	negf	___aodiv@dividend^0,c
  5996   004528  0E00               	movlw	0
  5997   00452A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5998   00452C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5999   00452E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6000   004530  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6001   004532  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6002   004534  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6003   004536  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6004   004538  0E01               	movlw	1
  6005   00453A  1A12               	xorwf	___aodiv@sign^0,f,c
  6006   00453C                     l4197:
  6007   00453C  EE20  F013         	lfsr	2,___aodiv@quotient
  6008   004540  0E07               	movlw	7
  6009   004542                     u3571:
  6010   004542  6ADE               	clrf	postinc2,c
  6011   004544  06E8               	decf	wreg,f,c
  6012   004546  E2FD               	bc	u3571
  6013   004548  5009               	movf	___aodiv@divisor^0,w,c
  6014   00454A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6015   00454C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6016   00454E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6017   004550  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6018   004552  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6019   004554  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6020   004556  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6021   004558  B4D8               	btfsc	status,2,c
  6022   00455A  EFB1  F022         	goto	u3581
  6023   00455E  EFB3  F022         	goto	u3580
  6024   004562                     u3581:
  6025   004562  EF05  F023         	goto	l4219
  6026   004566                     u3580:
  6027   004566  0E01               	movlw	1
  6028   004568  6E11               	movwf	___aodiv@counter^0,c
  6029   00456A  EFC1  F022         	goto	l4205
  6030   00456E                     l4203:
  6031   00456E  90D8               	bcf	status,0,c
  6032   004570  3609               	rlcf	___aodiv@divisor^0,f,c
  6033   004572  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6034   004574  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6035   004576  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6036   004578  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6037   00457A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6038   00457C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6039   00457E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6040   004580  2A11               	incf	___aodiv@counter^0,f,c
  6041   004582                     l4205:
  6042   004582  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6043   004584  EFC6  F022         	goto	u3591
  6044   004588  EFC8  F022         	goto	u3590
  6045   00458C                     u3591:
  6046   00458C  EFB7  F022         	goto	l4203
  6047   004590                     u3590:
  6048   004590                     l4207:
  6049   004590  90D8               	bcf	status,0,c
  6050   004592  3613               	rlcf	___aodiv@quotient^0,f,c
  6051   004594  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6052   004596  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6053   004598  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6054   00459A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6055   00459C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6056   00459E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6057   0045A0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6058   0045A2  5009               	movf	___aodiv@divisor^0,w,c
  6059   0045A4  5C01               	subwf	___aodiv@dividend^0,w,c
  6060   0045A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6061   0045A8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6062   0045AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6063   0045AC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6064   0045AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6065   0045B0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6066   0045B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6067   0045B4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6068   0045B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6069   0045B8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6070   0045BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6071   0045BC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6072   0045BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6073   0045C0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6074   0045C2  A0D8               	btfss	status,0,c
  6075   0045C4  EFE6  F022         	goto	u3601
  6076   0045C8  EFE8  F022         	goto	u3600
  6077   0045CC                     u3601:
  6078   0045CC  EFF9  F022         	goto	l4215
  6079   0045D0                     u3600:
  6080   0045D0  5009               	movf	___aodiv@divisor^0,w,c
  6081   0045D2  5E01               	subwf	___aodiv@dividend^0,f,c
  6082   0045D4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6083   0045D6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6084   0045D8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6085   0045DA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6086   0045DC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6087   0045DE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6088   0045E0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6089   0045E2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6090   0045E4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6091   0045E6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6092   0045E8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6093   0045EA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6094   0045EC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6095   0045EE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6096   0045F0  8013               	bsf	___aodiv@quotient^0,0,c
  6097   0045F2                     l4215:
  6098   0045F2  90D8               	bcf	status,0,c
  6099   0045F4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6100   0045F6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6101   0045F8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6102   0045FA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6103   0045FC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6104   0045FE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6105   004600  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6106   004602  3209               	rrcf	___aodiv@divisor^0,f,c
  6107   004604  2E11               	decfsz	___aodiv@counter^0,f,c
  6108   004606  EFC8  F022         	goto	l4207
  6109   00460A                     l4219:
  6110   00460A  5012               	movf	___aodiv@sign^0,w,c
  6111   00460C  B4D8               	btfsc	status,2,c
  6112   00460E  EF0B  F023         	goto	u3611
  6113   004612  EF0D  F023         	goto	u3610
  6114   004616                     u3611:
  6115   004616  EF1D  F023         	goto	l4223
  6116   00461A                     u3610:
  6117   00461A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6118   00461C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6119   00461E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6120   004620  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6121   004622  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6122   004624  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6123   004626  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6124   004628  6C13               	negf	___aodiv@quotient^0,c
  6125   00462A  0E00               	movlw	0
  6126   00462C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6127   00462E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6128   004630  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6129   004632  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6130   004634  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6131   004636  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6132   004638  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6133   00463A                     l4223:
  6134   00463A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6135   00463E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6136   004642  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6137   004646  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6138   00464A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6139   00464E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6140   004652  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6141   004656  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6142   00465A  0012               	return		;funcret
  6143   00465C                     __end_of___aodiv:
  6144                           	callstack 0
  6145                           
  6146 ;; *************** function _sendStringSerial4 *****************
  6147 ;; Defined at:
  6148 ;;		line 33 in file "serial.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  string          2    1[COMRAM] PTR unsigned char 
  6151 ;;		 -> main@buf(100), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;Total ram usage:        2 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; Hardware stack levels required when called: 2
  6170 ;; This function calls:
  6171 ;;		_sendCharSerial4
  6172 ;; This function is called by:
  6173 ;;		_main
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text21
  6178   005F84                     __ptext21:
  6179                           	callstack 0
  6180   005F84                     _sendStringSerial4:
  6181                           	callstack 28
  6182   005F84                     
  6183                           ;serial.c: 34:     while (*string!=0){
  6184   005F84  EFCD  F02F         	goto	l5577
  6185   005F88                     l5573:
  6186                           
  6187                           ;serial.c: 35:         sendCharSerial4(*string++);
  6188   005F88  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6189   005F8C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6190   005F90  50DF               	movf	indf2,w,c
  6191   005F92  EC58  F030         	call	_sendCharSerial4
  6192   005F96  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6193   005F98  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6194   005F9A                     l5577:
  6195                           
  6196                           ;serial.c: 34:     while (*string!=0){
  6197   005F9A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6198   005F9E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6199   005FA2  50DF               	movf	indf2,w,c
  6200   005FA4  A4D8               	btfss	status,2,c
  6201   005FA6  EFD7  F02F         	goto	u5531
  6202   005FAA  EFD9  F02F         	goto	u5530
  6203   005FAE                     u5531:
  6204   005FAE  EFC4  F02F         	goto	l5573
  6205   005FB2                     u5530:
  6206   005FB2  0012               	return		;funcret
  6207   005FB4                     __end_of_sendStringSerial4:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _sendCharSerial4 *****************
  6211 ;; Defined at:
  6212 ;;		line 26 in file "serial.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  charToSend      1    wreg     unsigned char 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  charToSend      1    0[COMRAM] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;Total ram usage:        1 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_sendStringSerial4
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text22
  6241   0060B0                     __ptext22:
  6242                           	callstack 0
  6243   0060B0                     _sendCharSerial4:
  6244                           	callstack 28
  6245                           
  6246                           ;incstack = 0
  6247                           ;sendCharSerial4@charToSend stored from wreg
  6248   0060B0  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6249   0060B2                     l207:
  6250   0060B2  010E               	movlb	14	; () banked
  6251   0060B4  A537               	btfss	55,2,b	;volatile
  6252   0060B6  EF5F  F030         	goto	u5411
  6253   0060BA  EF61  F030         	goto	u5410
  6254   0060BE                     u5411:
  6255   0060BE  EF59  F030         	goto	l207
  6256   0060C2                     u5410:
  6257   0060C2                     
  6258                           ; BSR set to: 14
  6259                           ;serial.c: 28:     TX4REG = charToSend;
  6260   0060C2  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6261   0060C6                     
  6262                           ; BSR set to: 14
  6263   0060C6  0012               	return		;funcret
  6264   0060C8                     __end_of_sendCharSerial4:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _initUSART4 *****************
  6268 ;; Defined at:
  6269 ;;		line 4 in file "serial.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used: 1
  6289 ;; Hardware stack levels required when called: 1
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_main
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text23
  6298   006092                     __ptext23:
  6299                           	callstack 0
  6300   006092                     _initUSART4:
  6301                           	callstack 29
  6302   006092                     
  6303                           ;serial.c: 5:     RC0PPS = 0x12;
  6304   006092  0E12               	movlw	18
  6305   006094  010E               	movlb	14	; () banked
  6306   006096  6F62               	movwf	98,b	;volatile
  6307                           
  6308                           ;serial.c: 6:     RX4PPS = 0x11;
  6309   006098  0E11               	movlw	17
  6310   00609A  6F15               	movwf	21,b	;volatile
  6311   00609C                     
  6312                           ; BSR set to: 14
  6313                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6314   00609C  97E9               	bcf	233,3,b	;volatile
  6315   00609E                     
  6316                           ; BSR set to: 14
  6317                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6318   00609E  95E8               	bcf	232,2,b	;volatile
  6319                           
  6320                           ;serial.c: 9:     SP4BRGL = 51;
  6321   0060A0  0E33               	movlw	51
  6322   0060A2  6FE5               	movwf	229,b	;volatile
  6323                           
  6324                           ;serial.c: 10:     SP4BRGH = 0;
  6325   0060A4  0E00               	movlw	0
  6326   0060A6  6FE6               	movwf	230,b	;volatile
  6327   0060A8                     
  6328                           ; BSR set to: 14
  6329                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  6330   0060A8  89E7               	bsf	231,4,b	;volatile
  6331   0060AA                     
  6332                           ; BSR set to: 14
  6333                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  6334   0060AA  8BE8               	bsf	232,5,b	;volatile
  6335   0060AC                     
  6336                           ; BSR set to: 14
  6337                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  6338   0060AC  8FE7               	bsf	231,7,b	;volatile
  6339   0060AE                     
  6340                           ; BSR set to: 14
  6341   0060AE  0012               	return		;funcret
  6342   0060B0                     __end_of_initUSART4:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _initDCmotorsPWM *****************
  6346 ;; Defined at:
  6347 ;;		line 7 in file "dc_motor.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;Total ram usage:        2 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text24
  6376   0052E8                     __ptext24:
  6377                           	callstack 0
  6378   0052E8                     _initDCmotorsPWM:
  6379                           	callstack 29
  6380   0052E8                     
  6381                           ;dc_motor.c: 11:     RE2PPS=0x05;
  6382   0052E8  0E05               	movlw	5
  6383   0052EA  010E               	movlb	14	; () banked
  6384   0052EC  6F74               	movwf	116,b	;volatile
  6385                           
  6386                           ;dc_motor.c: 12:     RE4PPS=0x06;
  6387   0052EE  0E06               	movlw	6
  6388   0052F0  6F76               	movwf	118,b	;volatile
  6389                           
  6390                           ;dc_motor.c: 13:     RC7PPS=0x07;
  6391   0052F2  0E07               	movlw	7
  6392   0052F4  6F69               	movwf	105,b	;volatile
  6393                           
  6394                           ;dc_motor.c: 14:     RG6PPS=0x08;
  6395   0052F6  0E08               	movlw	8
  6396   0052F8  6F88               	movwf	136,b	;volatile
  6397   0052FA                     
  6398                           ; BSR set to: 14
  6399                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  6400   0052FA  9485               	bcf	133,2,c	;volatile
  6401   0052FC                     
  6402                           ; BSR set to: 14
  6403                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  6404   0052FC  9885               	bcf	133,4,c	;volatile
  6405   0052FE                     
  6406                           ; BSR set to: 14
  6407                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  6408   0052FE  9E83               	bcf	131,7,c	;volatile
  6409   005300                     
  6410                           ; BSR set to: 14
  6411                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  6412   005300  9C87               	bcf	135,6,c	;volatile
  6413                           
  6414                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  6415   005302  50BD               	movf	189,w,c	;volatile
  6416   005304  0B8F               	andlw	-113
  6417   005306  0930               	iorlw	48
  6418   005308  6EBD               	movwf	189,c	;volatile
  6419                           
  6420                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  6421   00530A  0EE0               	movlw	-32
  6422   00530C  16BE               	andwf	190,f,c	;volatile
  6423                           
  6424                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  6425   00530E  50BF               	movf	191,w,c	;volatile
  6426   005310  0BF0               	andlw	-16
  6427   005312  0901               	iorlw	1
  6428   005314  6EBF               	movwf	191,c	;volatile
  6429   005316                     
  6430                           ; BSR set to: 14
  6431                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  6432   005316  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6433   00531A                     
  6434                           ; BSR set to: 14
  6435                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  6436   00531A  8EBD               	bsf	189,7,c	;volatile
  6437                           
  6438                           ;dc_motor.c: 35:     CCPR1H=0;
  6439   00531C  0E00               	movlw	0
  6440   00531E  6EAA               	movwf	170,c	;volatile
  6441                           
  6442                           ;dc_motor.c: 36:     CCPR2H=0;
  6443   005320  0E00               	movlw	0
  6444   005322  6EA6               	movwf	166,c	;volatile
  6445                           
  6446                           ;dc_motor.c: 37:     CCPR3H=0;
  6447   005324  0E00               	movlw	0
  6448   005326  010F               	movlb	15	; () banked
  6449   005328  6F25               	movwf	37,b	;volatile
  6450                           
  6451                           ;dc_motor.c: 38:     CCPR4H=0;
  6452   00532A  0E00               	movlw	0
  6453   00532C  6F21               	movwf	33,b	;volatile
  6454                           
  6455                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  6456   00532E  0EFC               	movlw	-4
  6457   005330  16AD               	andwf	173,f,c	;volatile
  6458                           
  6459                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  6460   005332  0EF3               	movlw	-13
  6461   005334  16AD               	andwf	173,f,c	;volatile
  6462                           
  6463                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  6464   005336  0ECF               	movlw	-49
  6465   005338  16AD               	andwf	173,f,c	;volatile
  6466                           
  6467                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  6468   00533A  0E3F               	movlw	-193
  6469   00533C  16AD               	andwf	173,f,c	;volatile
  6470   00533E                     
  6471                           ; BSR set to: 15
  6472                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  6473   00533E  88AB               	bsf	171,4,c	;volatile
  6474                           
  6475                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  6476   005340  50AB               	movf	171,w,c	;volatile
  6477   005342  0BF0               	andlw	-16
  6478   005344  090C               	iorlw	12
  6479   005346  6EAB               	movwf	171,c	;volatile
  6480   005348                     
  6481                           ; BSR set to: 15
  6482                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  6483   005348  8EAB               	bsf	171,7,c	;volatile
  6484   00534A                     
  6485                           ; BSR set to: 15
  6486                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  6487   00534A  88A7               	bsf	167,4,c	;volatile
  6488                           
  6489                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  6490   00534C  50A7               	movf	167,w,c	;volatile
  6491   00534E  0BF0               	andlw	-16
  6492   005350  090C               	iorlw	12
  6493   005352  6EA7               	movwf	167,c	;volatile
  6494   005354                     
  6495                           ; BSR set to: 15
  6496                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  6497   005354  8EA7               	bsf	167,7,c	;volatile
  6498   005356                     
  6499                           ; BSR set to: 15
  6500                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  6501   005356  8926               	bsf	38,4,b	;volatile
  6502                           
  6503                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  6504   005358  5126               	movf	38,w,b	;volatile
  6505   00535A  0BF0               	andlw	-16
  6506   00535C  090C               	iorlw	12
  6507   00535E  6F26               	movwf	38,b	;volatile
  6508   005360                     
  6509                           ; BSR set to: 15
  6510                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  6511   005360  8F26               	bsf	38,7,b	;volatile
  6512   005362                     
  6513                           ; BSR set to: 15
  6514                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  6515   005362  8922               	bsf	34,4,b	;volatile
  6516                           
  6517                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  6518   005364  5122               	movf	34,w,b	;volatile
  6519   005366  0BF0               	andlw	-16
  6520   005368  090C               	iorlw	12
  6521   00536A  6F22               	movwf	34,b	;volatile
  6522   00536C                     
  6523                           ; BSR set to: 15
  6524                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  6525   00536C  8F22               	bsf	34,7,b	;volatile
  6526   00536E                     
  6527                           ; BSR set to: 15
  6528   00536E  0012               	return		;funcret
  6529   005370                     __end_of_initDCmotorsPWM:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _getTMR0val *****************
  6533 ;; Defined at:
  6534 ;;		line 28 in file "timers.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  moving          2    4[COMRAM] int 
  6539 ;;  temp            2    2[COMRAM] unsigned int 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;Total ram usage:        6 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 1
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_main
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text25
  6564   005680                     __ptext25:
  6565                           	callstack 0
  6566   005680                     _getTMR0val:
  6567                           	callstack 29
  6568   005680                     
  6569                           ;timers.c: 30:     unsigned int temp= TMR0L;
  6570   005680  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  6571   005684  6A04               	clrf	(getTMR0val@temp+1)^0,c
  6572   005686                     
  6573                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  6574   005686  5003               	movf	getTMR0val@temp^0,w,c
  6575   005688  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  6576   00568C  6A02               	clrf	(??_getTMR0val+1)^0,c
  6577   00568E  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  6578   005692  6A01               	clrf	??_getTMR0val^0,c
  6579   005694  1001               	iorwf	??_getTMR0val^0,w,c
  6580   005696  6E05               	movwf	getTMR0val@moving^0,c
  6581   005698  5002               	movf	(??_getTMR0val+1)^0,w,c
  6582   00569A  6E06               	movwf	(getTMR0val@moving+1)^0,c
  6583                           
  6584                           ;timers.c: 33:     if (moving>700){
  6585   00569C  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  6586   00569E  EF5A  F02B         	goto	u5621
  6587   0056A2  0EBD               	movlw	189
  6588   0056A4  5C05               	subwf	getTMR0val@moving^0,w,c
  6589   0056A6  0E02               	movlw	2
  6590   0056A8  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  6591   0056AA  A0D8               	btfss	status,0,c
  6592   0056AC  EF5A  F02B         	goto	u5621
  6593   0056B0  EF5C  F02B         	goto	u5620
  6594   0056B4                     u5621:
  6595   0056B4  EF62  F02B         	goto	l5677
  6596   0056B8                     u5620:
  6597   0056B8                     
  6598                           ;timers.c: 34:         moving=moving-700;
  6599   0056B8  0E44               	movlw	68
  6600   0056BA  2405               	addwf	getTMR0val@moving^0,w,c
  6601   0056BC  6E05               	movwf	getTMR0val@moving^0,c
  6602   0056BE  0EFD               	movlw	253
  6603   0056C0  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  6604   0056C2  6E06               	movwf	(getTMR0val@moving+1)^0,c
  6605   0056C4                     l5677:
  6606                           
  6607                           ;timers.c: 37:     Time_forward[move_count]=moving;
  6608   0056C4  90D8               	bcf	status,0,c
  6609   0056C6  0101               	movlb	1	; () banked
  6610   0056C8  35D6               	rlcf	_move_count& (0+255),w,b	;volatile
  6611   0056CA  6ED9               	movwf	fsr2l,c
  6612   0056CC  35D7               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6613   0056CE  6EDA               	movwf	fsr2h,c
  6614   0056D0  0E3C               	movlw	low _Time_forward
  6615   0056D2  26D9               	addwf	fsr2l,f,c
  6616   0056D4  0E02               	movlw	high _Time_forward
  6617   0056D6  22DA               	addwfc	fsr2h,f,c
  6618   0056D8  C005  FFDE         	movff	getTMR0val@moving,postinc2
  6619   0056DC  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  6620   0056E0                     
  6621                           ; BSR set to: 1
  6622   0056E0  0012               	return		;funcret
  6623   0056E2                     __end_of_getTMR0val:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _consecutive_read *****************
  6627 ;; Defined at:
  6628 ;;		line 223 in file "color.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  vals            2   80[COMRAM] PTR struct RGB
  6631 ;;		 -> vals(8), 
  6632 ;;  rel             2   82[COMRAM] PTR struct RGB_rel
  6633 ;;		 -> rel(12), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  colour          2   86[COMRAM] int 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2   80[COMRAM] int 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        8 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 5
  6652 ;; This function calls:
  6653 ;;		_Colour_decider
  6654 ;;		_colour_rel
  6655 ;;		_readColours
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text26
  6662   004E6A                     __ptext26:
  6663                           	callstack 0
  6664   004E6A                     _consecutive_read:
  6665                           	callstack 25
  6666   004E6A                     
  6667                           ;color.c: 224:         while (consecuitive<20){
  6668   004E6A  EF7A  F027         	goto	l5557
  6669   004E6E                     l5541:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;color.c: 225:             _delay((unsigned long)((100)*(64000000/4000.0)));
  6673   004E6E  0E09               	movlw	9
  6674   004E70  6E56               	movwf	(??_consecutive_read+1)^0,c
  6675   004E72  0E1E               	movlw	30
  6676   004E74  6E55               	movwf	??_consecutive_read^0,c
  6677   004E76  0EE4               	movlw	228
  6678   004E78                     u5937:
  6679   004E78  2EE8               	decfsz	wreg,f,c
  6680   004E7A  D7FE               	bra	u5937
  6681   004E7C  2E55               	decfsz	??_consecutive_read^0,f,c
  6682   004E7E  D7FC               	bra	u5937
  6683   004E80  2E56               	decfsz	(??_consecutive_read+1)^0,f,c
  6684   004E82  D7FA               	bra	u5937
  6685   004E84  D000               	nop2	
  6686   004E86                     
  6687                           ;color.c: 226:             readColours(&vals);
  6688   004E86  0E51               	movlw	low consecutive_read@vals
  6689   004E88  6E0C               	movwf	readColours@vals^0,c
  6690   004E8A  0E00               	movlw	high consecutive_read@vals
  6691   004E8C  6E0D               	movwf	(readColours@vals+1)^0,c
  6692   004E8E  EC71  F02B         	call	_readColours	;wreg free
  6693   004E92                     
  6694                           ;color.c: 227:             colour_rel(&vals, &rel);
  6695   004E92  0E51               	movlw	low consecutive_read@vals
  6696   004E94  6E4B               	movwf	colour_rel@vals^0,c
  6697   004E96  0E00               	movlw	high consecutive_read@vals
  6698   004E98  6E4C               	movwf	(colour_rel@vals+1)^0,c
  6699   004E9A  0E53               	movlw	low consecutive_read@rel
  6700   004E9C  6E4D               	movwf	colour_rel@rel^0,c
  6701   004E9E  0E00               	movlw	high consecutive_read@rel
  6702   004EA0  6E4E               	movwf	(colour_rel@rel+1)^0,c
  6703   004EA2  EC8E  F017         	call	_colour_rel	;wreg free
  6704   004EA6                     
  6705                           ;color.c: 228:             int colour = Colour_decider(&vals, &rel);
  6706   004EA6  0E51               	movlw	low consecutive_read@vals
  6707   004EA8  6E4B               	movwf	Colour_decider@vals^0,c
  6708   004EAA  0E00               	movlw	high consecutive_read@vals
  6709   004EAC  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  6710   004EAE  0E53               	movlw	low consecutive_read@rel
  6711   004EB0  6E4D               	movwf	Colour_decider@rel^0,c
  6712   004EB2  0E00               	movlw	high consecutive_read@rel
  6713   004EB4  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  6714   004EB6  EC1F  F007         	call	_Colour_decider	;wreg free
  6715   004EBA  C04B  F057         	movff	?_Colour_decider,consecutive_read@colour
  6716   004EBE  C04C  F058         	movff	?_Colour_decider+1,consecutive_read@colour+1
  6717   004EC2                     
  6718                           ;color.c: 229:             if (colour==prev_colour){
  6719   004EC2  0100               	movlb	0	; () banked
  6720   004EC4  51EF               	movf	_prev_colour& (0+255),w,b
  6721   004EC6  1857               	xorwf	consecutive_read@colour^0,w,c
  6722   004EC8  E107               	bnz	u5511
  6723   004ECA  51F0               	movf	(_prev_colour+1)& (0+255),w,b
  6724   004ECC  1858               	xorwf	(consecutive_read@colour+1)^0,w,c
  6725   004ECE  A4D8               	btfss	status,2,c
  6726   004ED0  EF6C  F027         	goto	u5511
  6727   004ED4  EF6E  F027         	goto	u5510
  6728   004ED8                     u5511:
  6729   004ED8  EF72  F027         	goto	l5553
  6730   004EDC                     u5510:
  6731   004EDC                     
  6732                           ; BSR set to: 0
  6733                           ;color.c: 230:                 consecuitive++;
  6734   004EDC  4BED               	infsnz	_consecuitive& (0+255),f,b
  6735   004EDE  2BEE               	incf	(_consecuitive+1)& (0+255),f,b
  6736                           
  6737                           ;color.c: 231:             }
  6738   004EE0  EF76  F027         	goto	l5555
  6739   004EE4                     l5553:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;color.c: 233:                 consecuitive=0;
  6743   004EE4  0E00               	movlw	0
  6744   004EE6  6FEE               	movwf	(_consecuitive+1)& (0+255),b
  6745   004EE8  0E00               	movlw	0
  6746   004EEA  6FED               	movwf	_consecuitive& (0+255),b
  6747   004EEC                     l5555:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;color.c: 235:             prev_colour=colour;
  6751   004EEC  C057  F0EF         	movff	consecutive_read@colour,_prev_colour
  6752   004EF0  C058  F0F0         	movff	consecutive_read@colour+1,_prev_colour+1
  6753   004EF4                     l5557:
  6754                           
  6755                           ;color.c: 224:         while (consecuitive<20){
  6756   004EF4  0100               	movlb	0	; () banked
  6757   004EF6  BFEE               	btfsc	(_consecuitive+1)& (0+255),7,b
  6758   004EF8  EF87  F027         	goto	u5521
  6759   004EFC  51EE               	movf	(_consecuitive+1)& (0+255),w,b
  6760   004EFE  E109               	bnz	u5520
  6761   004F00  0E14               	movlw	20
  6762   004F02  5DED               	subwf	_consecuitive& (0+255),w,b
  6763   004F04  A0D8               	btfss	status,0,c
  6764   004F06  EF87  F027         	goto	u5521
  6765   004F0A  EF89  F027         	goto	u5520
  6766   004F0E                     u5521:
  6767   004F0E  EF37  F027         	goto	l5541
  6768   004F12                     u5520:
  6769   004F12                     
  6770                           ; BSR set to: 0
  6771                           ;color.c: 238:     return(prev_colour);
  6772   004F12  C0EF  F051         	movff	_prev_colour,?_consecutive_read
  6773   004F16  C0F0  F052         	movff	_prev_colour+1,?_consecutive_read+1
  6774   004F1A                     
  6775                           ; BSR set to: 0
  6776   004F1A  0012               	return		;funcret
  6777   004F1C                     __end_of_consecutive_read:
  6778                           	callstack 0
  6779                           
  6780 ;; *************** function _readColours *****************
  6781 ;; Defined at:
  6782 ;;		line 106 in file "color.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  vals            2   11[COMRAM] PTR struct RGB
  6785 ;;		 -> vals(8), consecutive_read@vals(2), 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 4
  6804 ;; This function calls:
  6805 ;;		_color_read_Blue
  6806 ;;		_color_read_Green
  6807 ;;		_color_read_Red
  6808 ;;		_color_read_lum
  6809 ;; This function is called by:
  6810 ;;		_consecutive_read
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text27
  6816   0056E2                     __ptext27:
  6817                           	callstack 0
  6818   0056E2                     _readColours:
  6819                           	callstack 26
  6820   0056E2                     
  6821                           ;color.c: 108:     vals ->R = color_read_Red();
  6822   0056E2  ECC3  F02D         	call	_color_read_Red	;wreg free
  6823   0056E6  C00C  FFD9         	movff	readColours@vals,fsr2l
  6824   0056EA  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6825   0056EE  C005  FFDE         	movff	?_color_read_Red,postinc2
  6826   0056F2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6827                           
  6828                           ;color.c: 109:     vals ->B = color_read_Blue();
  6829   0056F6  EC13  F02E         	call	_color_read_Blue	;wreg free
  6830   0056FA  EE20 F004          	lfsr	2,4
  6831   0056FE  500C               	movf	readColours@vals^0,w,c
  6832   005700  26D9               	addwf	fsr2l,f,c
  6833   005702  500D               	movf	(readColours@vals+1)^0,w,c
  6834   005704  22DA               	addwfc	fsr2h,f,c
  6835   005706  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6836   00570A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6837                           
  6838                           ;color.c: 110:     vals ->G = color_read_Green();
  6839   00570E  ECEB  F02D         	call	_color_read_Green	;wreg free
  6840   005712  EE20 F002          	lfsr	2,2
  6841   005716  500C               	movf	readColours@vals^0,w,c
  6842   005718  26D9               	addwf	fsr2l,f,c
  6843   00571A  500D               	movf	(readColours@vals+1)^0,w,c
  6844   00571C  22DA               	addwfc	fsr2h,f,c
  6845   00571E  C005  FFDE         	movff	?_color_read_Green,postinc2
  6846   005722  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6847                           
  6848                           ;color.c: 111:     vals ->L = color_read_lum();
  6849   005726  EC9B  F02D         	call	_color_read_lum	;wreg free
  6850   00572A  EE20 F006          	lfsr	2,6
  6851   00572E  500C               	movf	readColours@vals^0,w,c
  6852   005730  26D9               	addwf	fsr2l,f,c
  6853   005732  500D               	movf	(readColours@vals+1)^0,w,c
  6854   005734  22DA               	addwfc	fsr2h,f,c
  6855   005736  C005  FFDE         	movff	?_color_read_lum,postinc2
  6856   00573A  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6857   00573E  0012               	return		;funcret
  6858   005740                     __end_of_readColours:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _color_read_lum *****************
  6862 ;; Defined at:
  6863 ;;		line 50 in file "color.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  tmp             2    9[COMRAM] unsigned int 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  2    4[COMRAM] unsigned int 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;Total ram usage:        7 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 3
  6884 ;; This function calls:
  6885 ;;		_I2C_2_Master_Read
  6886 ;;		_I2C_2_Master_RepStart
  6887 ;;		_I2C_2_Master_Start
  6888 ;;		_I2C_2_Master_Stop
  6889 ;;		_I2C_2_Master_Write
  6890 ;; This function is called by:
  6891 ;;		_readColours
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text28
  6896   005B36                     __ptext28:
  6897                           	callstack 0
  6898   005B36                     _color_read_lum:
  6899                           	callstack 26
  6900   005B36                     
  6901                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6902   005B36  EC80  F030         	call	_I2C_2_Master_Start	;wreg free
  6903                           
  6904                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6905   005B3A  0E52               	movlw	82
  6906   005B3C  EC64  F030         	call	_I2C_2_Master_Write
  6907                           
  6908                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6909   005B40  0EB4               	movlw	180
  6910   005B42  EC64  F030         	call	_I2C_2_Master_Write
  6911                           
  6912                           ;color.c: 56:  I2C_2_Master_RepStart();
  6913   005B46  EC76  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6914                           
  6915                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6916   005B4A  0E53               	movlw	83
  6917   005B4C  EC64  F030         	call	_I2C_2_Master_Write
  6918                           
  6919                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6920   005B50  0E01               	movlw	1
  6921   005B52  ECF0  F02E         	call	_I2C_2_Master_Read
  6922   005B56  6E07               	movwf	??_color_read_lum^0,c
  6923   005B58  5007               	movf	??_color_read_lum^0,w,c
  6924   005B5A  6E0A               	movwf	color_read_lum@tmp^0,c
  6925   005B5C  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6926                           
  6927                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6928   005B5E  0E00               	movlw	0
  6929   005B60  ECF0  F02E         	call	_I2C_2_Master_Read
  6930   005B64  6E07               	movwf	??_color_read_lum^0,c
  6931   005B66  5007               	movf	??_color_read_lum^0,w,c
  6932   005B68  6E09               	movwf	(??_color_read_lum+2)^0,c
  6933   005B6A  6A08               	clrf	(??_color_read_lum+1)^0,c
  6934   005B6C  500A               	movf	color_read_lum@tmp^0,w,c
  6935   005B6E  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6936   005B70  6E0A               	movwf	color_read_lum@tmp^0,c
  6937   005B72  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6938   005B74  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6939   005B76  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6940                           
  6941                           ;color.c: 60:  I2C_2_Master_Stop();
  6942   005B78  EC7B  F030         	call	_I2C_2_Master_Stop	;wreg free
  6943   005B7C                     
  6944                           ;color.c: 61:  return tmp;
  6945   005B7C  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6946   005B80  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6947   005B84  0012               	return		;funcret
  6948   005B86                     __end_of_color_read_lum:
  6949                           	callstack 0
  6950                           
  6951 ;; *************** function _color_read_Red *****************
  6952 ;; Defined at:
  6953 ;;		line 64 in file "color.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  tmp             2    9[COMRAM] unsigned int 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  2    4[COMRAM] unsigned int 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;Total ram usage:        7 bytes
  6972 ;; Hardware stack levels used: 1
  6973 ;; Hardware stack levels required when called: 3
  6974 ;; This function calls:
  6975 ;;		_I2C_2_Master_Read
  6976 ;;		_I2C_2_Master_RepStart
  6977 ;;		_I2C_2_Master_Start
  6978 ;;		_I2C_2_Master_Stop
  6979 ;;		_I2C_2_Master_Write
  6980 ;; This function is called by:
  6981 ;;		_readColours
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text29
  6986   005B86                     __ptext29:
  6987                           	callstack 0
  6988   005B86                     _color_read_Red:
  6989                           	callstack 26
  6990   005B86                     
  6991                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6992   005B86  EC80  F030         	call	_I2C_2_Master_Start	;wreg free
  6993                           
  6994                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6995   005B8A  0E52               	movlw	82
  6996   005B8C  EC64  F030         	call	_I2C_2_Master_Write
  6997                           
  6998                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6999   005B90  0EB6               	movlw	182
  7000   005B92  EC64  F030         	call	_I2C_2_Master_Write
  7001                           
  7002                           ;color.c: 70:  I2C_2_Master_RepStart();
  7003   005B96  EC76  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7004                           
  7005                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  7006   005B9A  0E53               	movlw	83
  7007   005B9C  EC64  F030         	call	_I2C_2_Master_Write
  7008                           
  7009                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  7010   005BA0  0E01               	movlw	1
  7011   005BA2  ECF0  F02E         	call	_I2C_2_Master_Read
  7012   005BA6  6E07               	movwf	??_color_read_Red^0,c
  7013   005BA8  5007               	movf	??_color_read_Red^0,w,c
  7014   005BAA  6E0A               	movwf	color_read_Red@tmp^0,c
  7015   005BAC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7016                           
  7017                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7018   005BAE  0E00               	movlw	0
  7019   005BB0  ECF0  F02E         	call	_I2C_2_Master_Read
  7020   005BB4  6E07               	movwf	??_color_read_Red^0,c
  7021   005BB6  5007               	movf	??_color_read_Red^0,w,c
  7022   005BB8  6E09               	movwf	(??_color_read_Red+2)^0,c
  7023   005BBA  6A08               	clrf	(??_color_read_Red+1)^0,c
  7024   005BBC  500A               	movf	color_read_Red@tmp^0,w,c
  7025   005BBE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7026   005BC0  6E0A               	movwf	color_read_Red@tmp^0,c
  7027   005BC2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7028   005BC4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7029   005BC6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7030                           
  7031                           ;color.c: 74:  I2C_2_Master_Stop();
  7032   005BC8  EC7B  F030         	call	_I2C_2_Master_Stop	;wreg free
  7033   005BCC                     
  7034                           ;color.c: 75:  return tmp;
  7035   005BCC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7036   005BD0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7037   005BD4  0012               	return		;funcret
  7038   005BD6                     __end_of_color_read_Red:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function _color_read_Green *****************
  7042 ;; Defined at:
  7043 ;;		line 77 in file "color.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  tmp             2    9[COMRAM] unsigned int 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  2    4[COMRAM] unsigned int 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;Total ram usage:        7 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 3
  7064 ;; This function calls:
  7065 ;;		_I2C_2_Master_Read
  7066 ;;		_I2C_2_Master_RepStart
  7067 ;;		_I2C_2_Master_Start
  7068 ;;		_I2C_2_Master_Stop
  7069 ;;		_I2C_2_Master_Write
  7070 ;; This function is called by:
  7071 ;;		_readColours
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text30
  7076   005BD6                     __ptext30:
  7077                           	callstack 0
  7078   005BD6                     _color_read_Green:
  7079                           	callstack 26
  7080   005BD6                     
  7081                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  7082   005BD6  EC80  F030         	call	_I2C_2_Master_Start	;wreg free
  7083                           
  7084                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  7085   005BDA  0E52               	movlw	82
  7086   005BDC  EC64  F030         	call	_I2C_2_Master_Write
  7087                           
  7088                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  7089   005BE0  0EB8               	movlw	184
  7090   005BE2  EC64  F030         	call	_I2C_2_Master_Write
  7091                           
  7092                           ;color.c: 83:  I2C_2_Master_RepStart();
  7093   005BE6  EC76  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7094                           
  7095                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  7096   005BEA  0E53               	movlw	83
  7097   005BEC  EC64  F030         	call	_I2C_2_Master_Write
  7098                           
  7099                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  7100   005BF0  0E01               	movlw	1
  7101   005BF2  ECF0  F02E         	call	_I2C_2_Master_Read
  7102   005BF6  6E07               	movwf	??_color_read_Green^0,c
  7103   005BF8  5007               	movf	??_color_read_Green^0,w,c
  7104   005BFA  6E0A               	movwf	color_read_Green@tmp^0,c
  7105   005BFC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7106                           
  7107                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7108   005BFE  0E00               	movlw	0
  7109   005C00  ECF0  F02E         	call	_I2C_2_Master_Read
  7110   005C04  6E07               	movwf	??_color_read_Green^0,c
  7111   005C06  5007               	movf	??_color_read_Green^0,w,c
  7112   005C08  6E09               	movwf	(??_color_read_Green+2)^0,c
  7113   005C0A  6A08               	clrf	(??_color_read_Green+1)^0,c
  7114   005C0C  500A               	movf	color_read_Green@tmp^0,w,c
  7115   005C0E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7116   005C10  6E0A               	movwf	color_read_Green@tmp^0,c
  7117   005C12  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7118   005C14  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7119   005C16  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7120                           
  7121                           ;color.c: 87:  I2C_2_Master_Stop();
  7122   005C18  EC7B  F030         	call	_I2C_2_Master_Stop	;wreg free
  7123   005C1C                     
  7124                           ;color.c: 88:  return tmp;
  7125   005C1C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7126   005C20  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7127   005C24  0012               	return		;funcret
  7128   005C26                     __end_of_color_read_Green:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function _color_read_Blue *****************
  7132 ;; Defined at:
  7133 ;;		line 91 in file "color.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  tmp             2    9[COMRAM] unsigned int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2    4[COMRAM] unsigned int 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;Total ram usage:        7 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 3
  7154 ;; This function calls:
  7155 ;;		_I2C_2_Master_Read
  7156 ;;		_I2C_2_Master_RepStart
  7157 ;;		_I2C_2_Master_Start
  7158 ;;		_I2C_2_Master_Stop
  7159 ;;		_I2C_2_Master_Write
  7160 ;; This function is called by:
  7161 ;;		_readColours
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text31
  7166   005C26                     __ptext31:
  7167                           	callstack 0
  7168   005C26                     _color_read_Blue:
  7169                           	callstack 26
  7170   005C26                     
  7171                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  7172   005C26  EC80  F030         	call	_I2C_2_Master_Start	;wreg free
  7173                           
  7174                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  7175   005C2A  0E52               	movlw	82
  7176   005C2C  EC64  F030         	call	_I2C_2_Master_Write
  7177                           
  7178                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  7179   005C30  0EBA               	movlw	186
  7180   005C32  EC64  F030         	call	_I2C_2_Master_Write
  7181                           
  7182                           ;color.c: 97:  I2C_2_Master_RepStart();
  7183   005C36  EC76  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7184                           
  7185                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  7186   005C3A  0E53               	movlw	83
  7187   005C3C  EC64  F030         	call	_I2C_2_Master_Write
  7188                           
  7189                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  7190   005C40  0E01               	movlw	1
  7191   005C42  ECF0  F02E         	call	_I2C_2_Master_Read
  7192   005C46  6E07               	movwf	??_color_read_Blue^0,c
  7193   005C48  5007               	movf	??_color_read_Blue^0,w,c
  7194   005C4A  6E0A               	movwf	color_read_Blue@tmp^0,c
  7195   005C4C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7196                           
  7197                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7198   005C4E  0E00               	movlw	0
  7199   005C50  ECF0  F02E         	call	_I2C_2_Master_Read
  7200   005C54  6E07               	movwf	??_color_read_Blue^0,c
  7201   005C56  5007               	movf	??_color_read_Blue^0,w,c
  7202   005C58  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7203   005C5A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7204   005C5C  500A               	movf	color_read_Blue@tmp^0,w,c
  7205   005C5E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7206   005C60  6E0A               	movwf	color_read_Blue@tmp^0,c
  7207   005C62  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7208   005C64  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7209   005C66  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7210                           
  7211                           ;color.c: 101:  I2C_2_Master_Stop();
  7212   005C68  EC7B  F030         	call	_I2C_2_Master_Stop	;wreg free
  7213   005C6C                     
  7214                           ;color.c: 102:  return tmp;
  7215   005C6C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7216   005C70  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7217   005C74  0012               	return		;funcret
  7218   005C76                     __end_of_color_read_Blue:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _I2C_2_Master_RepStart *****************
  7222 ;; Defined at:
  7223 ;;		line 33 in file "i2c.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 2
  7244 ;; This function calls:
  7245 ;;		_I2C_2_Master_Idle
  7246 ;; This function is called by:
  7247 ;;		_color_read_lum
  7248 ;;		_color_read_Red
  7249 ;;		_color_read_Green
  7250 ;;		_color_read_Blue
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text32
  7255   0060EC                     __ptext32:
  7256                           	callstack 0
  7257   0060EC                     _I2C_2_Master_RepStart:
  7258                           	callstack 26
  7259   0060EC                     
  7260                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7261   0060EC  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7262   0060F0                     
  7263                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7264   0060F0  010E               	movlb	14	; () banked
  7265   0060F2  83DA               	bsf	218,1,b	;volatile
  7266   0060F4                     
  7267                           ; BSR set to: 14
  7268   0060F4  0012               	return		;funcret
  7269   0060F6                     __end_of_I2C_2_Master_RepStart:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _I2C_2_Master_Read *****************
  7273 ;; Defined at:
  7274 ;;		line 51 in file "i2c.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  ack             1    wreg     unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  ack             1    2[COMRAM] unsigned char 
  7279 ;;  tmp             1    3[COMRAM] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      unsigned char 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        3 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 2
  7296 ;; This function calls:
  7297 ;;		_I2C_2_Master_Idle
  7298 ;; This function is called by:
  7299 ;;		_color_read_lum
  7300 ;;		_color_read_Red
  7301 ;;		_color_read_Green
  7302 ;;		_color_read_Blue
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text33
  7307   005DE0                     __ptext33:
  7308                           	callstack 0
  7309   005DE0                     _I2C_2_Master_Read:
  7310                           	callstack 26
  7311                           
  7312                           ; BSR set to: 14
  7313                           ;incstack = 0
  7314                           ;I2C_2_Master_Read@ack stored from wreg
  7315   005DE0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7316   005DE2                     
  7317                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7318   005DE2  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7319   005DE6                     
  7320                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7321   005DE6  010E               	movlb	14	; () banked
  7322   005DE8  87DA               	bsf	218,3,b	;volatile
  7323                           
  7324                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7325   005DEA  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7326   005DEE                     
  7327                           ;i2c.c: 57:   tmp = SSP2BUF;
  7328   005DEE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7329                           
  7330                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7331   005DF2  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7332   005DF6                     
  7333                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7334   005DF6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7335   005DF8  B4D8               	btfsc	status,2,c
  7336   005DFA  EF01  F02F         	goto	u4491
  7337   005DFE  EF05  F02F         	goto	u4490
  7338   005E02                     u4491:
  7339   005E02  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7340   005E04  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7341   005E06  EF06  F02F         	goto	u4508
  7342   005E0A                     u4490:
  7343   005E0A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7344   005E0C                     u4508:
  7345   005E0C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7346   005E0E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7347   005E10  010E               	movlb	14	; () banked
  7348   005E12  51DA               	movf	218,w,b	;volatile
  7349   005E14  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7350   005E16  0BDF               	andlw	-33
  7351   005E18  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7352   005E1A  6FDA               	movwf	218,b	;volatile
  7353   005E1C                     
  7354                           ; BSR set to: 14
  7355                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7356   005E1C  89DA               	bsf	218,4,b	;volatile
  7357   005E1E                     
  7358                           ; BSR set to: 14
  7359                           ;i2c.c: 61:   return tmp;
  7360   005E1E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7361   005E20                     
  7362                           ; BSR set to: 14
  7363   005E20  0012               	return		;funcret
  7364   005E22                     __end_of_I2C_2_Master_Read:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function _colour_rel *****************
  7368 ;; Defined at:
  7369 ;;		line 115 in file "color.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  vals            2   74[COMRAM] PTR struct RGB
  7372 ;;		 -> vals(8), consecutive_read@vals(2), 
  7373 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7374 ;;		 -> rel(12), consecutive_read@rel(2), 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  B               4   20[BANK0 ] float 
  7377 ;;  G               4   16[BANK0 ] float 
  7378 ;;  R               4   12[BANK0 ] float 
  7379 ;;  L               4    0[BANK0 ] float 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;Total ram usage:       28 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 2
  7396 ;; This function calls:
  7397 ;;		___fladd
  7398 ;;		___fldiv
  7399 ;;		___xxtofl
  7400 ;; This function is called by:
  7401 ;;		_consecutive_read
  7402 ;;		_main
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text34
  7407   002F1C                     __ptext34:
  7408                           	callstack 0
  7409   002F1C                     _colour_rel:
  7410                           	callstack 27
  7411   002F1C                     
  7412                           ;color.c: 116:     float R = vals->R;
  7413   002F1C  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7414   002F20  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7415   002F24  CFDE F001          	movff	postinc2,___xxtofl@val
  7416   002F28  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7417   002F2C  0E00               	movlw	0
  7418   002F2E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7419   002F30  0EFF               	movlw	-1
  7420   002F32  6E03               	movwf	(___xxtofl@val+2)^0,c
  7421   002F34  6E04               	movwf	(___xxtofl@val+3)^0,c
  7422   002F36  0E01               	movlw	1
  7423   002F38  ECBA  F020         	call	___xxtofl
  7424   002F3C  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7425   002F40  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7426   002F44  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7427   002F48  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7428                           
  7429                           ;color.c: 117:     float G = vals->G;
  7430   002F4C  EE20 F002          	lfsr	2,2
  7431   002F50  504B               	movf	colour_rel@vals^0,w,c
  7432   002F52  26D9               	addwf	fsr2l,f,c
  7433   002F54  504C               	movf	(colour_rel@vals+1)^0,w,c
  7434   002F56  22DA               	addwfc	fsr2h,f,c
  7435   002F58  CFDE F001          	movff	postinc2,___xxtofl@val
  7436   002F5C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7437   002F60  0E00               	movlw	0
  7438   002F62  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7439   002F64  0EFF               	movlw	-1
  7440   002F66  6E03               	movwf	(___xxtofl@val+2)^0,c
  7441   002F68  6E04               	movwf	(___xxtofl@val+3)^0,c
  7442   002F6A  0E01               	movlw	1
  7443   002F6C  ECBA  F020         	call	___xxtofl
  7444   002F70  C001  F070         	movff	?___xxtofl,colour_rel@G
  7445   002F74  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7446   002F78  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7447   002F7C  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7448                           
  7449                           ;color.c: 118:     float B = vals->B;
  7450   002F80  EE20 F004          	lfsr	2,4
  7451   002F84  504B               	movf	colour_rel@vals^0,w,c
  7452   002F86  26D9               	addwf	fsr2l,f,c
  7453   002F88  504C               	movf	(colour_rel@vals+1)^0,w,c
  7454   002F8A  22DA               	addwfc	fsr2h,f,c
  7455   002F8C  CFDE F001          	movff	postinc2,___xxtofl@val
  7456   002F90  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7457   002F94  0E00               	movlw	0
  7458   002F96  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7459   002F98  0EFF               	movlw	-1
  7460   002F9A  6E03               	movwf	(___xxtofl@val+2)^0,c
  7461   002F9C  6E04               	movwf	(___xxtofl@val+3)^0,c
  7462   002F9E  0E01               	movlw	1
  7463   002FA0  ECBA  F020         	call	___xxtofl
  7464   002FA4  C001  F074         	movff	?___xxtofl,colour_rel@B
  7465   002FA8  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7466   002FAC  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7467   002FB0  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7468                           
  7469                           ;color.c: 119:     float L = vals->L;
  7470   002FB4  EE20 F006          	lfsr	2,6
  7471   002FB8  504B               	movf	colour_rel@vals^0,w,c
  7472   002FBA  26D9               	addwf	fsr2l,f,c
  7473   002FBC  504C               	movf	(colour_rel@vals+1)^0,w,c
  7474   002FBE  22DA               	addwfc	fsr2h,f,c
  7475   002FC0  CFDE F001          	movff	postinc2,___xxtofl@val
  7476   002FC4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7477   002FC8  0E00               	movlw	0
  7478   002FCA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7479   002FCC  0EFF               	movlw	-1
  7480   002FCE  6E03               	movwf	(___xxtofl@val+2)^0,c
  7481   002FD0  6E04               	movwf	(___xxtofl@val+3)^0,c
  7482   002FD2  0E01               	movlw	1
  7483   002FD4  ECBA  F020         	call	___xxtofl
  7484   002FD8  C001  F060         	movff	?___xxtofl,colour_rel@L
  7485   002FDC  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7486   002FE0  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7487   002FE4  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7488   002FE8                     
  7489                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7490   002FE8  C070  F005         	movff	colour_rel@G,___fladd@a
  7491   002FEC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7492   002FF0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7493   002FF4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7494   002FF8  C06C  F001         	movff	colour_rel@R,___fladd@b
  7495   002FFC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7496   003000  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7497   003004  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7498   003008  EC4C  F011         	call	___fladd	;wreg free
  7499   00300C  C001  F064         	movff	?___fladd,_colour_rel$3263
  7500   003010  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7501   003014  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7502   003018  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7503   00301C                     
  7504                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7505   00301C  C074  F005         	movff	colour_rel@B,___fladd@a
  7506   003020  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7507   003024  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7508   003028  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7509   00302C  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7510   003030  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7511   003034  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7512   003038  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7513   00303C  EC4C  F011         	call	___fladd	;wreg free
  7514   003040  C001  F068         	movff	?___fladd,_colour_rel$3264
  7515   003044  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7516   003048  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7517   00304C  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7518                           
  7519                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7520   003050  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7521   003054  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7522   003058  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7523   00305C  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7524   003060  C060  F005         	movff	colour_rel@L,___fladd@a
  7525   003064  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7526   003068  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7527   00306C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7528   003070  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7529   003074  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7530   003078  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7531   00307C  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7532   003080  EC4C  F011         	call	___fladd	;wreg free
  7533   003084  C001  F036         	movff	?___fladd,___fldiv@a
  7534   003088  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7535   00308C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7536   003090  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7537   003094  ECC1  F015         	call	___fldiv	;wreg free
  7538   003098  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7539   00309C  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7540   0030A0  C032  FFDE         	movff	?___fldiv,postinc2
  7541   0030A4  C033  FFDE         	movff	?___fldiv+1,postinc2
  7542   0030A8  C034  FFDE         	movff	?___fldiv+2,postinc2
  7543   0030AC  C035  FFDE         	movff	?___fldiv+3,postinc2
  7544   0030B0                     
  7545                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7546   0030B0  C070  F005         	movff	colour_rel@G,___fladd@a
  7547   0030B4  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7548   0030B8  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7549   0030BC  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7550   0030C0  C06C  F001         	movff	colour_rel@R,___fladd@b
  7551   0030C4  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7552   0030C8  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7553   0030CC  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7554   0030D0  EC4C  F011         	call	___fladd	;wreg free
  7555   0030D4  C001  F064         	movff	?___fladd,_colour_rel$3263
  7556   0030D8  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7557   0030DC  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7558   0030E0  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7559   0030E4                     
  7560                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7561   0030E4  C074  F005         	movff	colour_rel@B,___fladd@a
  7562   0030E8  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7563   0030EC  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7564   0030F0  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7565   0030F4  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7566   0030F8  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7567   0030FC  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7568   003100  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7569   003104  EC4C  F011         	call	___fladd	;wreg free
  7570   003108  C001  F068         	movff	?___fladd,_colour_rel$3264
  7571   00310C  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7572   003110  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7573   003114  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7574                           
  7575                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7576   003118  C074  F032         	movff	colour_rel@B,___fldiv@b
  7577   00311C  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7578   003120  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7579   003124  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7580   003128  C060  F005         	movff	colour_rel@L,___fladd@a
  7581   00312C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7582   003130  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7583   003134  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7584   003138  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7585   00313C  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7586   003140  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7587   003144  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7588   003148  EC4C  F011         	call	___fladd	;wreg free
  7589   00314C  C001  F036         	movff	?___fladd,___fldiv@a
  7590   003150  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7591   003154  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7592   003158  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7593   00315C  ECC1  F015         	call	___fldiv	;wreg free
  7594   003160  EE20 F008          	lfsr	2,8
  7595   003164  504D               	movf	colour_rel@rel^0,w,c
  7596   003166  26D9               	addwf	fsr2l,f,c
  7597   003168  504E               	movf	(colour_rel@rel+1)^0,w,c
  7598   00316A  22DA               	addwfc	fsr2h,f,c
  7599   00316C  C032  FFDE         	movff	?___fldiv,postinc2
  7600   003170  C033  FFDE         	movff	?___fldiv+1,postinc2
  7601   003174  C034  FFDE         	movff	?___fldiv+2,postinc2
  7602   003178  C035  FFDE         	movff	?___fldiv+3,postinc2
  7603   00317C                     
  7604                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7605   00317C  C070  F005         	movff	colour_rel@G,___fladd@a
  7606   003180  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7607   003184  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7608   003188  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7609   00318C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7610   003190  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7611   003194  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7612   003198  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7613   00319C  EC4C  F011         	call	___fladd	;wreg free
  7614   0031A0  C001  F064         	movff	?___fladd,_colour_rel$3263
  7615   0031A4  C002  F065         	movff	?___fladd+1,_colour_rel$3263+1
  7616   0031A8  C003  F066         	movff	?___fladd+2,_colour_rel$3263+2
  7617   0031AC  C004  F067         	movff	?___fladd+3,_colour_rel$3263+3
  7618   0031B0                     
  7619                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7620   0031B0  C074  F005         	movff	colour_rel@B,___fladd@a
  7621   0031B4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7622   0031B8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7623   0031BC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7624   0031C0  C064  F001         	movff	_colour_rel$3263,___fladd@b
  7625   0031C4  C065  F002         	movff	_colour_rel$3263+1,___fladd@b+1
  7626   0031C8  C066  F003         	movff	_colour_rel$3263+2,___fladd@b+2
  7627   0031CC  C067  F004         	movff	_colour_rel$3263+3,___fladd@b+3
  7628   0031D0  EC4C  F011         	call	___fladd	;wreg free
  7629   0031D4  C001  F068         	movff	?___fladd,_colour_rel$3264
  7630   0031D8  C002  F069         	movff	?___fladd+1,_colour_rel$3264+1
  7631   0031DC  C003  F06A         	movff	?___fladd+2,_colour_rel$3264+2
  7632   0031E0  C004  F06B         	movff	?___fladd+3,_colour_rel$3264+3
  7633                           
  7634                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7635   0031E4  C070  F032         	movff	colour_rel@G,___fldiv@b
  7636   0031E8  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7637   0031EC  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7638   0031F0  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7639   0031F4  C060  F005         	movff	colour_rel@L,___fladd@a
  7640   0031F8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7641   0031FC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7642   003200  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7643   003204  C068  F001         	movff	_colour_rel$3264,___fladd@b
  7644   003208  C069  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7645   00320C  C06A  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7646   003210  C06B  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7647   003214  EC4C  F011         	call	___fladd	;wreg free
  7648   003218  C001  F036         	movff	?___fladd,___fldiv@a
  7649   00321C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7650   003220  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7651   003224  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7652   003228  ECC1  F015         	call	___fldiv	;wreg free
  7653   00322C  EE20 F004          	lfsr	2,4
  7654   003230  504D               	movf	colour_rel@rel^0,w,c
  7655   003232  26D9               	addwf	fsr2l,f,c
  7656   003234  504E               	movf	(colour_rel@rel+1)^0,w,c
  7657   003236  22DA               	addwfc	fsr2h,f,c
  7658   003238  C032  FFDE         	movff	?___fldiv,postinc2
  7659   00323C  C033  FFDE         	movff	?___fldiv+1,postinc2
  7660   003240  C034  FFDE         	movff	?___fldiv+2,postinc2
  7661   003244  C035  FFDE         	movff	?___fldiv+3,postinc2
  7662   003248  0012               	return		;funcret
  7663   00324A                     __end_of_colour_rel:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _Colour_decider *****************
  7667 ;; Defined at:
  7668 ;;		line 126 in file "color.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  vals            2   74[COMRAM] PTR struct RGB
  7671 ;;		 -> consecutive_read@vals(2), 
  7672 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7673 ;;		 -> consecutive_read@rel(2), 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  RGB_col        12    6[BANK0 ] float [3]
  7676 ;;  Hue             4   28[BANK0 ] float 
  7677 ;;  Cmin            4   22[BANK0 ] float 
  7678 ;;  Cmax            4   18[BANK0 ] float 
  7679 ;;  i               2   26[BANK0 ] int 
  7680 ;;  Cmax_i          2    4[BANK0 ] int 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2   74[COMRAM] int 
  7683 ;; Registers used:
  7684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;Total ram usage:       38 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 3
  7697 ;; This function calls:
  7698 ;;		___fladd
  7699 ;;		___fldiv
  7700 ;;		___fleq
  7701 ;;		___flge
  7702 ;;		___flmul
  7703 ;;		___flsub
  7704 ;;		___xxtofl
  7705 ;; This function is called by:
  7706 ;;		_consecutive_read
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text35
  7711   000E3E                     __ptext35:
  7712                           	callstack 0
  7713   000E3E                     _Colour_decider:
  7714                           	callstack 26
  7715   000E3E                     
  7716                           ;color.c: 127:     float Cmax = 0;
  7717   000E3E  0E00               	movlw	0
  7718   000E40  0100               	movlb	0	; () banked
  7719   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  7720   000E44  0E00               	movlw	0
  7721   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  7722   000E48  0E00               	movlw	0
  7723   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  7724   000E4C  0E00               	movlw	0
  7725   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  7726                           
  7727                           ;color.c: 128:     float Cmin= 100000;
  7728   000E50  0E00               	movlw	0
  7729   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  7730   000E54  0E50               	movlw	80
  7731   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  7732   000E58  0EC3               	movlw	195
  7733   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  7734   000E5C  0E47               	movlw	71
  7735   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  7736                           
  7737                           ;color.c: 129:     int Cmax_i =4;
  7738   000E60  0E00               	movlw	0
  7739   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  7740   000E64  0E04               	movlw	4
  7741   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  7742   000E68                     
  7743                           ; BSR set to: 0
  7744                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
  7745   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  7746   000E6C  0E0B               	movlw	11
  7747   000E6E                     u5101:
  7748   000E6E  6ADE               	clrf	postinc2,c
  7749   000E70  06E8               	decf	wreg,f,c
  7750   000E72  E2FD               	bc	u5101
  7751   000E74                     
  7752                           ; BSR set to: 0
  7753   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  7754   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  7755   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
  7756   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7757   000E84  0E00               	movlw	0
  7758   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7759   000E88  0EFF               	movlw	-1
  7760   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
  7761   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
  7762   000E8E  0E01               	movlw	1
  7763   000E90  ECBA  F020         	call	___xxtofl
  7764   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  7765   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  7766   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  7767   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  7768   000EA4  EE20 F002          	lfsr	2,2
  7769   000EA8  504B               	movf	Colour_decider@vals^0,w,c
  7770   000EAA  26D9               	addwf	fsr2l,f,c
  7771   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
  7772   000EAE  22DA               	addwfc	fsr2h,f,c
  7773   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
  7774   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7775   000EB8  0E00               	movlw	0
  7776   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7777   000EBC  0EFF               	movlw	-1
  7778   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
  7779   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
  7780   000EC2  0E01               	movlw	1
  7781   000EC4  ECBA  F020         	call	___xxtofl
  7782   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  7783   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  7784   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  7785   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  7786   000ED8  EE20 F004          	lfsr	2,4
  7787   000EDC  504B               	movf	Colour_decider@vals^0,w,c
  7788   000EDE  26D9               	addwf	fsr2l,f,c
  7789   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
  7790   000EE2  22DA               	addwfc	fsr2h,f,c
  7791   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
  7792   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7793   000EEC  0E00               	movlw	0
  7794   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7795   000EF0  0EFF               	movlw	-1
  7796   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
  7797   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
  7798   000EF6  0E01               	movlw	1
  7799   000EF8  ECBA  F020         	call	___xxtofl
  7800   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  7801   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  7802   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  7803   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  7804   000F0C                     
  7805                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
  7806   000F0C  0E00               	movlw	0
  7807   000F0E  0100               	movlb	0	; () banked
  7808   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  7809   000F12  0E00               	movlw	0
  7810   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
  7811   000F16                     l5287:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;color.c: 137:         if (RGB_col[i]>Cmax){
  7815   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
  7816   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  7817   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  7818   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  7819   000F26  0E66               	movlw	low Colour_decider@RGB_col
  7820   000F28  6E4F               	movwf	??_Colour_decider^0,c
  7821   000F2A  0E00               	movlw	high Colour_decider@RGB_col
  7822   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
  7823   000F2E  90D8               	bcf	status,0,c
  7824   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
  7825   000F32  6ED9               	movwf	fsr2l,c
  7826   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  7827   000F36  6EDA               	movwf	fsr2h,c
  7828   000F38  90D8               	bcf	status,0,c
  7829   000F3A  36D9               	rlcf	fsr2l,f,c
  7830   000F3C  36DA               	rlcf	fsr2h,f,c
  7831   000F3E  504F               	movf	??_Colour_decider^0,w,c
  7832   000F40  26D9               	addwf	fsr2l,f,c
  7833   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
  7834   000F44  22DA               	addwfc	fsr2h,f,c
  7835   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
  7836   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
  7837   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
  7838   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
  7839   000F56  EC19  F025         	call	___flge	;wreg free
  7840   000F5A  B0D8               	btfsc	status,0,c
  7841   000F5C  EFB2  F007         	goto	u5111
  7842   000F60  EFB4  F007         	goto	u5110
  7843   000F64                     u5111:
  7844   000F64  EFD1  F007         	goto	l5293
  7845   000F68                     u5110:
  7846   000F68                     
  7847                           ;color.c: 138:             Cmax=RGB_col[i];
  7848   000F68  0E66               	movlw	low Colour_decider@RGB_col
  7849   000F6A  6E4F               	movwf	??_Colour_decider^0,c
  7850   000F6C  0E00               	movlw	high Colour_decider@RGB_col
  7851   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
  7852   000F70  90D8               	bcf	status,0,c
  7853   000F72  0100               	movlb	0	; () banked
  7854   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
  7855   000F76  6ED9               	movwf	fsr2l,c
  7856   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  7857   000F7A  6EDA               	movwf	fsr2h,c
  7858   000F7C  90D8               	bcf	status,0,c
  7859   000F7E  36D9               	rlcf	fsr2l,f,c
  7860   000F80  36DA               	rlcf	fsr2h,f,c
  7861   000F82  504F               	movf	??_Colour_decider^0,w,c
  7862   000F84  26D9               	addwf	fsr2l,f,c
  7863   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
  7864   000F88  22DA               	addwfc	fsr2h,f,c
  7865   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  7866   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  7867   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  7868   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  7869   000F9A                     
  7870                           ; BSR set to: 0
  7871                           ;color.c: 139:             Cmax_i=i;
  7872   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  7873   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  7874   000FA2                     l5293:
  7875                           
  7876                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  7877   000FA2  0E66               	movlw	low Colour_decider@RGB_col
  7878   000FA4  6E4F               	movwf	??_Colour_decider^0,c
  7879   000FA6  0E00               	movlw	high Colour_decider@RGB_col
  7880   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
  7881   000FAA  90D8               	bcf	status,0,c
  7882   000FAC  0100               	movlb	0	; () banked
  7883   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
  7884   000FB0  6ED9               	movwf	fsr2l,c
  7885   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  7886   000FB4  6EDA               	movwf	fsr2h,c
  7887   000FB6  90D8               	bcf	status,0,c
  7888   000FB8  36D9               	rlcf	fsr2l,f,c
  7889   000FBA  36DA               	rlcf	fsr2h,f,c
  7890   000FBC  504F               	movf	??_Colour_decider^0,w,c
  7891   000FBE  26D9               	addwf	fsr2l,f,c
  7892   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
  7893   000FC2  22DA               	addwfc	fsr2h,f,c
  7894   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
  7895   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
  7896   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
  7897   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
  7898   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
  7899   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  7900   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  7901   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  7902   000FE4  EC19  F025         	call	___flge	;wreg free
  7903   000FE8  B0D8               	btfsc	status,0,c
  7904   000FEA  EFF9  F007         	goto	u5121
  7905   000FEE  EFFB  F007         	goto	u5120
  7906   000FF2                     u5121:
  7907   000FF2  EF14  F008         	goto	l5297
  7908   000FF6                     u5120:
  7909   000FF6  0E66               	movlw	low Colour_decider@RGB_col
  7910   000FF8  6E4F               	movwf	??_Colour_decider^0,c
  7911   000FFA  0E00               	movlw	high Colour_decider@RGB_col
  7912   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
  7913   000FFE  90D8               	bcf	status,0,c
  7914   001000  0100               	movlb	0	; () banked
  7915   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
  7916   001004  6ED9               	movwf	fsr2l,c
  7917   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  7918   001008  6EDA               	movwf	fsr2h,c
  7919   00100A  90D8               	bcf	status,0,c
  7920   00100C  36D9               	rlcf	fsr2l,f,c
  7921   00100E  36DA               	rlcf	fsr2h,f,c
  7922   001010  504F               	movf	??_Colour_decider^0,w,c
  7923   001012  26D9               	addwf	fsr2l,f,c
  7924   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
  7925   001016  22DA               	addwfc	fsr2h,f,c
  7926   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  7927   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  7928   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  7929   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  7930   001028                     l5297:
  7931                           
  7932                           ;color.c: 142:     }
  7933   001028  0100               	movlb	0	; () banked
  7934   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  7935   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  7936   00102E                     
  7937                           ; BSR set to: 0
  7938   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  7939   001030  EF23  F008         	goto	u5131
  7940   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  7941   001036  E109               	bnz	u5130
  7942   001038  0E03               	movlw	3
  7943   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  7944   00103C  A0D8               	btfss	status,0,c
  7945   00103E  EF23  F008         	goto	u5131
  7946   001042  EF25  F008         	goto	u5130
  7947   001046                     u5131:
  7948   001046  EF8B  F007         	goto	l5287
  7949   00104A                     u5130:
  7950   00104A                     
  7951                           ; BSR set to: 0
  7952                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
  7953   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  7954   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  7955   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  7956   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  7957   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  7958   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  7959   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  7960   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  7961   00106A  EC89  F02E         	call	___flsub	;wreg free
  7962   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
  7963   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
  7964   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
  7965   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
  7966   00107E  0E00               	movlw	0
  7967   001080  6E36               	movwf	___fleq@ff2^0,c
  7968   001082  0E00               	movlw	0
  7969   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
  7970   001086  0E00               	movlw	0
  7971   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
  7972   00108A  0E00               	movlw	0
  7973   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
  7974   00108E  EC8E  F027         	call	___fleq	;wreg free
  7975   001092  A0D8               	btfss	status,0,c
  7976   001094  EF4E  F008         	goto	u5141
  7977   001098  EF50  F008         	goto	u5140
  7978   00109C                     u5141:
  7979   00109C  EF56  F008         	goto	l5307
  7980   0010A0                     u5140:
  7981   0010A0                     l5303:
  7982   0010A0  0E00               	movlw	0
  7983   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
  7984   0010A4  0E00               	movlw	0
  7985   0010A6  6E4B               	movwf	?_Colour_decider^0,c
  7986   0010A8  EF4E  F00C         	goto	l80
  7987   0010AC                     l5307:
  7988                           
  7989                           ;color.c: 147:     if (Cmax_i==0){
  7990   0010AC  0100               	movlb	0	; () banked
  7991   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  7992   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  7993   0010B2  A4D8               	btfss	status,2,c
  7994   0010B4  EF5E  F008         	goto	u5151
  7995   0010B8  EF60  F008         	goto	u5150
  7996   0010BC                     u5151:
  7997   0010BC  EFD4  F008         	goto	l5315
  7998   0010C0                     u5150:
  7999   0010C0                     
  8000                           ; BSR set to: 0
  8001                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8002   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8003   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8004   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8005   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8006   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8007   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8008   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8009   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8010   0010E0  EC89  F02E         	call	___flsub	;wreg free
  8011   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
  8012   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8013   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8014   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8015   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
  8016   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8017   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8018   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8019   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
  8020   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8021   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8022   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8023   001114  EC89  F02E         	call	___flsub	;wreg free
  8024   001118  C02A  F032         	movff	?___flsub,___fldiv@b
  8025   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8026   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8027   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8028   001128  ECC1  F015         	call	___fldiv	;wreg free
  8029   00112C  C032  F011         	movff	?___fldiv,___flmul@b
  8030   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
  8031   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
  8032   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
  8033   00113C  0E00               	movlw	0
  8034   00113E  6E15               	movwf	___flmul@a^0,c
  8035   001140  0E00               	movlw	0
  8036   001142  6E16               	movwf	(___flmul@a+1)^0,c
  8037   001144  0E70               	movlw	112
  8038   001146  6E17               	movwf	(___flmul@a+2)^0,c
  8039   001148  0E42               	movlw	66
  8040   00114A  6E18               	movwf	(___flmul@a+3)^0,c
  8041   00114C  ECAC  F013         	call	___flmul	;wreg free
  8042   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8043   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8044   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8045   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8046   001160                     
  8047                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
  8048   001160  0100               	movlb	0	; () banked
  8049   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8050   001164  EFB8  F008         	goto	u5160
  8051   001168  EFB6  F008         	goto	u5161
  8052   00116C                     u5161:
  8053   00116C  EFB3  F009         	goto	l5325
  8054   001170                     u5160:
  8055   001170                     
  8056                           ; BSR set to: 0
  8057   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8058   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8059   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8060   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8061   001180  0E00               	movlw	0
  8062   001182  6E05               	movwf	___fladd@a^0,c
  8063   001184  0E00               	movlw	0
  8064   001186  6E06               	movwf	(___fladd@a+1)^0,c
  8065   001188  0EB4               	movlw	180
  8066   00118A  6E07               	movwf	(___fladd@a+2)^0,c
  8067   00118C  0E43               	movlw	67
  8068   00118E  6E08               	movwf	(___fladd@a+3)^0,c
  8069   001190  EC4C  F011         	call	___fladd	;wreg free
  8070   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8071   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8072   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8073   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8074   0011A4  EFB3  F009         	goto	l5325
  8075   0011A8                     l5315:
  8076                           
  8077                           ; BSR set to: 0
  8078   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8079   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8080   0011AC  A4D8               	btfss	status,2,c
  8081   0011AE  EFDB  F008         	goto	u5171
  8082   0011B2  EFDD  F008         	goto	u5170
  8083   0011B6                     u5171:
  8084   0011B6  EF49  F009         	goto	l5321
  8085   0011BA                     u5170:
  8086   0011BA                     
  8087                           ; BSR set to: 0
  8088                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8089   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8090   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8091   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8092   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8093   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8094   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8095   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8096   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8097   0011DA  EC89  F02E         	call	___flsub	;wreg free
  8098   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
  8099   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8100   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8101   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8102   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
  8103   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8104   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8105   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8106   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
  8107   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8108   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8109   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8110   00120E  EC89  F02E         	call	___flsub	;wreg free
  8111   001212  C02A  F032         	movff	?___flsub,___fldiv@b
  8112   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8113   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8114   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8115   001222  ECC1  F015         	call	___fldiv	;wreg free
  8116   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3265
  8117   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3265+1
  8118   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3265+2
  8119   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3265+3
  8120   001236                     
  8121                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8122   001236  0E00               	movlw	0
  8123   001238  6E05               	movwf	___fladd@a^0,c
  8124   00123A  0E00               	movlw	0
  8125   00123C  6E06               	movwf	(___fladd@a+1)^0,c
  8126   00123E  0E00               	movlw	0
  8127   001240  6E07               	movwf	(___fladd@a+2)^0,c
  8128   001242  0E40               	movlw	64
  8129   001244  6E08               	movwf	(___fladd@a+3)^0,c
  8130   001246  C060  F001         	movff	_Colour_decider$3265,___fladd@b
  8131   00124A  C061  F002         	movff	_Colour_decider$3265+1,___fladd@b+1
  8132   00124E  C062  F003         	movff	_Colour_decider$3265+2,___fladd@b+2
  8133   001252  C063  F004         	movff	_Colour_decider$3265+3,___fladd@b+3
  8134   001256  EC4C  F011         	call	___fladd	;wreg free
  8135   00125A  C001  F011         	movff	?___fladd,___flmul@b
  8136   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
  8137   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
  8138   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
  8139   00126A  0E00               	movlw	0
  8140   00126C  6E15               	movwf	___flmul@a^0,c
  8141   00126E  0E00               	movlw	0
  8142   001270  6E16               	movwf	(___flmul@a+1)^0,c
  8143   001272  0E70               	movlw	112
  8144   001274  6E17               	movwf	(___flmul@a+2)^0,c
  8145   001276  0E42               	movlw	66
  8146   001278  6E18               	movwf	(___flmul@a+3)^0,c
  8147   00127A  ECAC  F013         	call	___flmul	;wreg free
  8148   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8149   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8150   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8151   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8152                           
  8153                           ;color.c: 156:     }
  8154   00128E  EFB3  F009         	goto	l5325
  8155   001292                     l5321:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8159   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8160   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8161   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8162   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8163   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8164   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8165   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8166   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8167   0012B2  EC89  F02E         	call	___flsub	;wreg free
  8168   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
  8169   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8170   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8171   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8172   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
  8173   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8174   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8175   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8176   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
  8177   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8178   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8179   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8180   0012E6  EC89  F02E         	call	___flsub	;wreg free
  8181   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
  8182   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8183   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8184   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8185   0012FA  ECC1  F015         	call	___fldiv	;wreg free
  8186   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3265
  8187   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3265+1
  8188   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3265+2
  8189   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3265+3
  8190   00130E                     
  8191                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8192   00130E  0E00               	movlw	0
  8193   001310  6E05               	movwf	___fladd@a^0,c
  8194   001312  0E00               	movlw	0
  8195   001314  6E06               	movwf	(___fladd@a+1)^0,c
  8196   001316  0E80               	movlw	128
  8197   001318  6E07               	movwf	(___fladd@a+2)^0,c
  8198   00131A  0E40               	movlw	64
  8199   00131C  6E08               	movwf	(___fladd@a+3)^0,c
  8200   00131E  C060  F001         	movff	_Colour_decider$3265,___fladd@b
  8201   001322  C061  F002         	movff	_Colour_decider$3265+1,___fladd@b+1
  8202   001326  C062  F003         	movff	_Colour_decider$3265+2,___fladd@b+2
  8203   00132A  C063  F004         	movff	_Colour_decider$3265+3,___fladd@b+3
  8204   00132E  EC4C  F011         	call	___fladd	;wreg free
  8205   001332  C001  F011         	movff	?___fladd,___flmul@b
  8206   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
  8207   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
  8208   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
  8209   001342  0E00               	movlw	0
  8210   001344  6E15               	movwf	___flmul@a^0,c
  8211   001346  0E00               	movlw	0
  8212   001348  6E16               	movwf	(___flmul@a+1)^0,c
  8213   00134A  0E70               	movlw	112
  8214   00134C  6E17               	movwf	(___flmul@a+2)^0,c
  8215   00134E  0E42               	movlw	66
  8216   001350  6E18               	movwf	(___flmul@a+3)^0,c
  8217   001352  ECAC  F013         	call	___flmul	;wreg free
  8218   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8219   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8220   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8221   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8222   001366                     l5325:
  8223                           
  8224                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  8225   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8226   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8227   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8228   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8229   001376  0E00               	movlw	0
  8230   001378  6E2E               	movwf	___flge@ff2^0,c
  8231   00137A  0E00               	movlw	0
  8232   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
  8233   00137E  0EA5               	movlw	165
  8234   001380  6E30               	movwf	(___flge@ff2+2)^0,c
  8235   001382  0E43               	movlw	67
  8236   001384  6E31               	movwf	(___flge@ff2+3)^0,c
  8237   001386  EC19  F025         	call	___flge	;wreg free
  8238   00138A  A0D8               	btfss	status,0,c
  8239   00138C  EFCA  F009         	goto	u5181
  8240   001390  EFCC  F009         	goto	u5180
  8241   001394                     u5181:
  8242   001394  EFEB  F009         	goto	l5335
  8243   001398                     u5180:
  8244   001398  0E00               	movlw	0
  8245   00139A  6E2A               	movwf	___flge@ff1^0,c
  8246   00139C  0E00               	movlw	0
  8247   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
  8248   0013A0  0EB4               	movlw	180
  8249   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
  8250   0013A4  0E43               	movlw	67
  8251   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
  8252   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8253   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8254   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8255   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8256   0013B8  EC19  F025         	call	___flge	;wreg free
  8257   0013BC  A0D8               	btfss	status,0,c
  8258   0013BE  EFE3  F009         	goto	u5191
  8259   0013C2  EFE5  F009         	goto	u5190
  8260   0013C6                     u5191:
  8261   0013C6  EFEB  F009         	goto	l5335
  8262   0013CA                     u5190:
  8263   0013CA                     
  8264                           ;color.c: 164:         return 1;
  8265   0013CA  0E00               	movlw	0
  8266   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8267   0013CE  0E01               	movlw	1
  8268   0013D0  6E4B               	movwf	?_Colour_decider^0,c
  8269   0013D2  EF4E  F00C         	goto	l80
  8270   0013D6                     l5335:
  8271   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8272   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8273   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8274   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8275   0013E6  0E00               	movlw	0
  8276   0013E8  6E2E               	movwf	___flge@ff2^0,c
  8277   0013EA  0E00               	movlw	0
  8278   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
  8279   0013EE  0EA0               	movlw	160
  8280   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
  8281   0013F2  0E40               	movlw	64
  8282   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
  8283   0013F6  EC19  F025         	call	___flge	;wreg free
  8284   0013FA  A0D8               	btfss	status,0,c
  8285   0013FC  EF02  F00A         	goto	u5201
  8286   001400  EF04  F00A         	goto	u5200
  8287   001404                     u5201:
  8288   001404  EF23  F00A         	goto	l5345
  8289   001408                     u5200:
  8290   001408  0E00               	movlw	0
  8291   00140A  6E2A               	movwf	___flge@ff1^0,c
  8292   00140C  0E00               	movlw	0
  8293   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
  8294   001410  0E30               	movlw	48
  8295   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
  8296   001414  0E41               	movlw	65
  8297   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
  8298   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8299   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8300   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8301   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8302   001428  EC19  F025         	call	___flge	;wreg free
  8303   00142C  A0D8               	btfss	status,0,c
  8304   00142E  EF1B  F00A         	goto	u5211
  8305   001432  EF1D  F00A         	goto	u5210
  8306   001436                     u5211:
  8307   001436  EF23  F00A         	goto	l5345
  8308   00143A                     u5210:
  8309   00143A                     
  8310                           ;color.c: 168:         return 2;
  8311   00143A  0E00               	movlw	0
  8312   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8313   00143E  0E02               	movlw	2
  8314   001440  6E4B               	movwf	?_Colour_decider^0,c
  8315   001442  EF4E  F00C         	goto	l80
  8316   001446                     l5345:
  8317   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8318   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8319   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8320   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8321   001456  0E00               	movlw	0
  8322   001458  6E2E               	movwf	___flge@ff2^0,c
  8323   00145A  0E00               	movlw	0
  8324   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
  8325   00145E  0E90               	movlw	144
  8326   001460  6E30               	movwf	(___flge@ff2+2)^0,c
  8327   001462  0E41               	movlw	65
  8328   001464  6E31               	movwf	(___flge@ff2+3)^0,c
  8329   001466  EC19  F025         	call	___flge	;wreg free
  8330   00146A  A0D8               	btfss	status,0,c
  8331   00146C  EF3A  F00A         	goto	u5221
  8332   001470  EF3C  F00A         	goto	u5220
  8333   001474                     u5221:
  8334   001474  EFF0  F00A         	goto	l5375
  8335   001478                     u5220:
  8336   001478  0E00               	movlw	0
  8337   00147A  6E2A               	movwf	___flge@ff1^0,c
  8338   00147C  0E00               	movlw	0
  8339   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
  8340   001480  0EC8               	movlw	200
  8341   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
  8342   001484  0E41               	movlw	65
  8343   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
  8344   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8345   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8346   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8347   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8348   001498  EC19  F025         	call	___flge	;wreg free
  8349   00149C  A0D8               	btfss	status,0,c
  8350   00149E  EF53  F00A         	goto	u5231
  8351   0014A2  EF55  F00A         	goto	u5230
  8352   0014A6                     u5231:
  8353   0014A6  EFF0  F00A         	goto	l5375
  8354   0014AA                     u5230:
  8355   0014AA                     
  8356                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
  8357   0014AA  0EB8               	movlw	184
  8358   0014AC  6E2A               	movwf	___flge@ff1^0,c
  8359   0014AE  0E1E               	movlw	30
  8360   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
  8361   0014B2  0E85               	movlw	133
  8362   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
  8363   0014B6  0E3E               	movlw	62
  8364   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
  8365   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8366   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8367   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
  8368   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
  8369   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
  8370   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
  8371   0014D2  EC19  F025         	call	___flge	;wreg free
  8372   0014D6  A0D8               	btfss	status,0,c
  8373   0014D8  EF70  F00A         	goto	u5241
  8374   0014DC  EF72  F00A         	goto	u5240
  8375   0014E0                     u5241:
  8376   0014E0  EFA8  F00A         	goto	l5361
  8377   0014E4                     u5240:
  8378   0014E4  0ECD               	movlw	205
  8379   0014E6  6E2A               	movwf	___flge@ff1^0,c
  8380   0014E8  0ECC               	movlw	204
  8381   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
  8382   0014EC  0ECC               	movlw	204
  8383   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
  8384   0014F0  0E3D               	movlw	61
  8385   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
  8386   0014F4  EE20 F008          	lfsr	2,8
  8387   0014F8  504D               	movf	Colour_decider@rel^0,w,c
  8388   0014FA  26D9               	addwf	fsr2l,f,c
  8389   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8390   0014FE  22DA               	addwfc	fsr2h,f,c
  8391   001500  CFDE F02E          	movff	postinc2,___flge@ff2
  8392   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
  8393   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
  8394   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
  8395   001510  EC19  F025         	call	___flge	;wreg free
  8396   001514  B0D8               	btfsc	status,0,c
  8397   001516  EF8F  F00A         	goto	u5251
  8398   00151A  EF91  F00A         	goto	u5250
  8399   00151E                     u5251:
  8400   00151E  EFA8  F00A         	goto	l5361
  8401   001522                     u5250:
  8402   001522  EE20 F006          	lfsr	2,6
  8403   001526  504B               	movf	Colour_decider@vals^0,w,c
  8404   001528  26D9               	addwf	fsr2l,f,c
  8405   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8406   00152C  22DA               	addwfc	fsr2h,f,c
  8407   00152E  0E01               	movlw	1
  8408   001530  BEDB               	btfsc	plusw2,7,c
  8409   001532  EFA4  F00A         	goto	u5261
  8410   001536  0EE9               	movlw	233
  8411   001538  5CDE               	subwf	postinc2,w,c
  8412   00153A  0E03               	movlw	3
  8413   00153C  58DE               	subwfb	postinc2,w,c
  8414   00153E  A0D8               	btfss	status,0,c
  8415   001540  EFA4  F00A         	goto	u5261
  8416   001544  EFA6  F00A         	goto	u5260
  8417   001548                     u5261:
  8418   001548  EFA8  F00A         	goto	l5361
  8419   00154C                     u5260:
  8420   00154C  EF50  F008         	goto	l5303
  8421   001550                     l5361:
  8422   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8423   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8424   001558  CFDE F02A          	movff	postinc2,___flge@ff1
  8425   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8426   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8427   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8428   001568  0EB8               	movlw	184
  8429   00156A  6E2E               	movwf	___flge@ff2^0,c
  8430   00156C  0E1E               	movlw	30
  8431   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
  8432   001570  0E85               	movlw	133
  8433   001572  6E30               	movwf	(___flge@ff2+2)^0,c
  8434   001574  0E3E               	movlw	62
  8435   001576  6E31               	movwf	(___flge@ff2+3)^0,c
  8436   001578  EC19  F025         	call	___flge	;wreg free
  8437   00157C  A0D8               	btfss	status,0,c
  8438   00157E  EFC3  F00A         	goto	u5271
  8439   001582  EFC5  F00A         	goto	u5270
  8440   001586                     u5271:
  8441   001586  EFEA  F00A         	goto	l5371
  8442   00158A                     u5270:
  8443   00158A  EE20 F008          	lfsr	2,8
  8444   00158E  504D               	movf	Colour_decider@rel^0,w,c
  8445   001590  26D9               	addwf	fsr2l,f,c
  8446   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8447   001594  22DA               	addwfc	fsr2h,f,c
  8448   001596  CFDE F02A          	movff	postinc2,___flge@ff1
  8449   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8450   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8451   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8452   0015A6  0ECD               	movlw	205
  8453   0015A8  6E2E               	movwf	___flge@ff2^0,c
  8454   0015AA  0ECC               	movlw	204
  8455   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
  8456   0015AE  0ECC               	movlw	204
  8457   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
  8458   0015B2  0E3D               	movlw	61
  8459   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
  8460   0015B6  EC19  F025         	call	___flge	;wreg free
  8461   0015BA  B0D8               	btfsc	status,0,c
  8462   0015BC  EFE2  F00A         	goto	u5281
  8463   0015C0  EFE4  F00A         	goto	u5280
  8464   0015C4                     u5281:
  8465   0015C4  EFEA  F00A         	goto	l5371
  8466   0015C8                     u5280:
  8467   0015C8                     
  8468                           ;color.c: 177:             return 3;
  8469   0015C8  0E00               	movlw	0
  8470   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8471   0015CC  0E03               	movlw	3
  8472   0015CE  6E4B               	movwf	?_Colour_decider^0,c
  8473   0015D0  EF4E  F00C         	goto	l80
  8474   0015D4                     l5371:
  8475                           
  8476                           ;color.c: 180:             return 10;
  8477   0015D4  0E00               	movlw	0
  8478   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8479   0015D8  0E0A               	movlw	10
  8480   0015DA  6E4B               	movwf	?_Colour_decider^0,c
  8481   0015DC  EF4E  F00C         	goto	l80
  8482   0015E0                     l5375:
  8483   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8484   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8485   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8486   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8487   0015F0  0E00               	movlw	0
  8488   0015F2  6E2E               	movwf	___flge@ff2^0,c
  8489   0015F4  0E00               	movlw	0
  8490   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
  8491   0015F8  0EAA               	movlw	170
  8492   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
  8493   0015FC  0E42               	movlw	66
  8494   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
  8495   001600  EC19  F025         	call	___flge	;wreg free
  8496   001604  A0D8               	btfss	status,0,c
  8497   001606  EF07  F00B         	goto	u5291
  8498   00160A  EF09  F00B         	goto	u5290
  8499   00160E                     u5291:
  8500   00160E  EF28  F00B         	goto	l5385
  8501   001612                     u5290:
  8502   001612  0E00               	movlw	0
  8503   001614  6E2A               	movwf	___flge@ff1^0,c
  8504   001616  0E00               	movlw	0
  8505   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
  8506   00161A  0E20               	movlw	32
  8507   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
  8508   00161E  0E43               	movlw	67
  8509   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
  8510   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8511   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8512   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8513   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8514   001632  EC19  F025         	call	___flge	;wreg free
  8515   001636  A0D8               	btfss	status,0,c
  8516   001638  EF20  F00B         	goto	u5301
  8517   00163C  EF22  F00B         	goto	u5300
  8518   001640                     u5301:
  8519   001640  EF28  F00B         	goto	l5385
  8520   001644                     u5300:
  8521   001644                     
  8522                           ;color.c: 186:         return 4;
  8523   001644  0E00               	movlw	0
  8524   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8525   001648  0E04               	movlw	4
  8526   00164A  6E4B               	movwf	?_Colour_decider^0,c
  8527   00164C  EF4E  F00C         	goto	l80
  8528   001650                     l5385:
  8529   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8530   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8531   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8532   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8533   001660  0E00               	movlw	0
  8534   001662  6E2E               	movwf	___flge@ff2^0,c
  8535   001664  0E00               	movlw	0
  8536   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
  8537   001668  0E70               	movlw	112
  8538   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
  8539   00166C  0E42               	movlw	66
  8540   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
  8541   001670  EC19  F025         	call	___flge	;wreg free
  8542   001674  A0D8               	btfss	status,0,c
  8543   001676  EF3F  F00B         	goto	u5311
  8544   00167A  EF41  F00B         	goto	u5310
  8545   00167E                     u5311:
  8546   00167E  EFE2  F00B         	goto	l5413
  8547   001682                     u5310:
  8548   001682  0E00               	movlw	0
  8549   001684  6E2A               	movwf	___flge@ff1^0,c
  8550   001686  0E00               	movlw	0
  8551   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
  8552   00168A  0E9A               	movlw	154
  8553   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
  8554   00168E  0E42               	movlw	66
  8555   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
  8556   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8557   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8558   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8559   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8560   0016A2  EC19  F025         	call	___flge	;wreg free
  8561   0016A6  A0D8               	btfss	status,0,c
  8562   0016A8  EF58  F00B         	goto	u5321
  8563   0016AC  EF5A  F00B         	goto	u5320
  8564   0016B0                     u5321:
  8565   0016B0  EFE2  F00B         	goto	l5413
  8566   0016B4                     u5320:
  8567   0016B4                     
  8568                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
  8569   0016B4  EE20 F008          	lfsr	2,8
  8570   0016B8  504D               	movf	Colour_decider@rel^0,w,c
  8571   0016BA  26D9               	addwf	fsr2l,f,c
  8572   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8573   0016BE  22DA               	addwfc	fsr2h,f,c
  8574   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
  8575   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8576   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8577   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8578   0016D0  0E8F               	movlw	143
  8579   0016D2  6E2E               	movwf	___flge@ff2^0,c
  8580   0016D4  0EC2               	movlw	194
  8581   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
  8582   0016D8  0EF5               	movlw	245
  8583   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
  8584   0016DC  0E3D               	movlw	61
  8585   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
  8586   0016E0  EC19  F025         	call	___flge	;wreg free
  8587   0016E4  A0D8               	btfss	status,0,c
  8588   0016E6  EF77  F00B         	goto	u5331
  8589   0016EA  EF79  F00B         	goto	u5330
  8590   0016EE                     u5331:
  8591   0016EE  EF9E  F00B         	goto	l5399
  8592   0016F2                     u5330:
  8593   0016F2  EE20 F004          	lfsr	2,4
  8594   0016F6  504D               	movf	Colour_decider@rel^0,w,c
  8595   0016F8  26D9               	addwf	fsr2l,f,c
  8596   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8597   0016FC  22DA               	addwfc	fsr2h,f,c
  8598   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
  8599   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8600   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8601   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8602   00170E  0E3D               	movlw	61
  8603   001710  6E2E               	movwf	___flge@ff2^0,c
  8604   001712  0E0A               	movlw	10
  8605   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
  8606   001716  0E57               	movlw	87
  8607   001718  6E30               	movwf	(___flge@ff2+2)^0,c
  8608   00171A  0E3E               	movlw	62
  8609   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
  8610   00171E  EC19  F025         	call	___flge	;wreg free
  8611   001722  B0D8               	btfsc	status,0,c
  8612   001724  EF96  F00B         	goto	u5341
  8613   001728  EF98  F00B         	goto	u5340
  8614   00172C                     u5341:
  8615   00172C  EF9E  F00B         	goto	l5399
  8616   001730                     u5340:
  8617   001730                     
  8618                           ;color.c: 192:             return 6;
  8619   001730  0E00               	movlw	0
  8620   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8621   001734  0E06               	movlw	6
  8622   001736  6E4B               	movwf	?_Colour_decider^0,c
  8623   001738  EF4E  F00C         	goto	l80
  8624   00173C                     l5399:
  8625   00173C  EE20 F008          	lfsr	2,8
  8626   001740  504D               	movf	Colour_decider@rel^0,w,c
  8627   001742  26D9               	addwf	fsr2l,f,c
  8628   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8629   001746  22DA               	addwfc	fsr2h,f,c
  8630   001748  CFDE F02A          	movff	postinc2,___flge@ff1
  8631   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8632   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8633   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8634   001758  0E8F               	movlw	143
  8635   00175A  6E2E               	movwf	___flge@ff2^0,c
  8636   00175C  0EC2               	movlw	194
  8637   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
  8638   001760  0EF5               	movlw	245
  8639   001762  6E30               	movwf	(___flge@ff2+2)^0,c
  8640   001764  0E3D               	movlw	61
  8641   001766  6E31               	movwf	(___flge@ff2+3)^0,c
  8642   001768  EC19  F025         	call	___flge	;wreg free
  8643   00176C  B0D8               	btfsc	status,0,c
  8644   00176E  EFBB  F00B         	goto	u5351
  8645   001772  EFBD  F00B         	goto	u5350
  8646   001776                     u5351:
  8647   001776  EFEA  F00A         	goto	l5371
  8648   00177A                     u5350:
  8649   00177A  0E3D               	movlw	61
  8650   00177C  6E2A               	movwf	___flge@ff1^0,c
  8651   00177E  0E0A               	movlw	10
  8652   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
  8653   001782  0E57               	movlw	87
  8654   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
  8655   001786  0E3E               	movlw	62
  8656   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
  8657   00178A  EE20 F004          	lfsr	2,4
  8658   00178E  504D               	movf	Colour_decider@rel^0,w,c
  8659   001790  26D9               	addwf	fsr2l,f,c
  8660   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
  8661   001794  22DA               	addwfc	fsr2h,f,c
  8662   001796  CFDE F02E          	movff	postinc2,___flge@ff2
  8663   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
  8664   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
  8665   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
  8666   0017A6  EC19  F025         	call	___flge	;wreg free
  8667   0017AA  B0D8               	btfsc	status,0,c
  8668   0017AC  EFDA  F00B         	goto	u5361
  8669   0017B0  EFDC  F00B         	goto	u5360
  8670   0017B4                     u5361:
  8671   0017B4  EFEA  F00A         	goto	l5371
  8672   0017B8                     u5360:
  8673   0017B8                     
  8674                           ;color.c: 195:             return 5;
  8675   0017B8  0E00               	movlw	0
  8676   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8677   0017BC  0E05               	movlw	5
  8678   0017BE  6E4B               	movwf	?_Colour_decider^0,c
  8679   0017C0  EF4E  F00C         	goto	l80
  8680   0017C4                     l5413:
  8681   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8682   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8683   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8684   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8685   0017D4  0E00               	movlw	0
  8686   0017D6  6E2E               	movwf	___flge@ff2^0,c
  8687   0017D8  0E00               	movlw	0
  8688   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
  8689   0017DC  0E40               	movlw	64
  8690   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
  8691   0017E0  0E41               	movlw	65
  8692   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
  8693   0017E4  EC19  F025         	call	___flge	;wreg free
  8694   0017E8  A0D8               	btfss	status,0,c
  8695   0017EA  EFF9  F00B         	goto	u5371
  8696   0017EE  EFFB  F00B         	goto	u5370
  8697   0017F2                     u5371:
  8698   0017F2  EF1A  F00C         	goto	l5423
  8699   0017F6                     u5370:
  8700   0017F6  0E00               	movlw	0
  8701   0017F8  6E2A               	movwf	___flge@ff1^0,c
  8702   0017FA  0E00               	movlw	0
  8703   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
  8704   0017FE  0E88               	movlw	136
  8705   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
  8706   001802  0E41               	movlw	65
  8707   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
  8708   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8709   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8710   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8711   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8712   001816  EC19  F025         	call	___flge	;wreg free
  8713   00181A  A0D8               	btfss	status,0,c
  8714   00181C  EF12  F00C         	goto	u5381
  8715   001820  EF14  F00C         	goto	u5380
  8716   001824                     u5381:
  8717   001824  EF1A  F00C         	goto	l5423
  8718   001828                     u5380:
  8719   001828                     
  8720                           ;color.c: 204:             return 7;
  8721   001828  0E00               	movlw	0
  8722   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8723   00182C  0E07               	movlw	7
  8724   00182E  6E4B               	movwf	?_Colour_decider^0,c
  8725   001830  EF4E  F00C         	goto	l80
  8726   001834                     l5423:
  8727   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  8728   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8729   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8730   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8731   001844  0E00               	movlw	0
  8732   001846  6E2E               	movwf	___flge@ff2^0,c
  8733   001848  0E00               	movlw	0
  8734   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
  8735   00184C  0EB0               	movlw	176
  8736   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
  8737   001850  0E41               	movlw	65
  8738   001852  6E31               	movwf	(___flge@ff2+3)^0,c
  8739   001854  EC19  F025         	call	___flge	;wreg free
  8740   001858  A0D8               	btfss	status,0,c
  8741   00185A  EF31  F00C         	goto	u5391
  8742   00185E  EF33  F00C         	goto	u5390
  8743   001862                     u5391:
  8744   001862  EFEA  F00A         	goto	l5371
  8745   001866                     u5390:
  8746   001866  0E00               	movlw	0
  8747   001868  6E2A               	movwf	___flge@ff1^0,c
  8748   00186A  0E00               	movlw	0
  8749   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
  8750   00186E  0EC0               	movlw	192
  8751   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
  8752   001872  0E41               	movlw	65
  8753   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
  8754   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  8755   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8756   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8757   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8758   001886  EC19  F025         	call	___flge	;wreg free
  8759   00188A  A0D8               	btfss	status,0,c
  8760   00188C  EF4A  F00C         	goto	u5401
  8761   001890  EF4C  F00C         	goto	u5400
  8762   001894                     u5401:
  8763   001894  EFEA  F00A         	goto	l5371
  8764   001898                     u5400:
  8765   001898  EF50  F008         	goto	l5303
  8766   00189C                     l80:
  8767   00189C  0012               	return		;funcret
  8768   00189E                     __end_of_Colour_decider:
  8769                           	callstack 0
  8770                           
  8771 ;; *************** function ___xxtofl *****************
  8772 ;; Defined at:
  8773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  sign            1    wreg     unsigned char 
  8776 ;;  val             4    0[COMRAM] long 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  sign            1    8[COMRAM] unsigned char 
  8779 ;;  arg             4   10[COMRAM] unsigned long 
  8780 ;;  exp             1    9[COMRAM] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  4    0[COMRAM] unsigned char 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;Total ram usage:       14 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; Hardware stack levels required when called: 1
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_colour_rel
  8801 ;;		_Colour_decider
  8802 ;;		_reverseOneBlock
  8803 ;;		_ForwardOneBlock
  8804 ;;		_Forwardhalfblock
  8805 ;;		_Backhalfblock
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text36
  8810   004174                     __ptext36:
  8811                           	callstack 0
  8812   004174                     ___xxtofl:
  8813                           	callstack 27
  8814                           
  8815                           ;incstack = 0
  8816                           ;___xxtofl@sign stored from wreg
  8817   004174  6E09               	movwf	___xxtofl@sign^0,c
  8818   004176  5009               	movf	___xxtofl@sign^0,w,c
  8819   004178  B4D8               	btfsc	status,2,c
  8820   00417A  EFC1  F020         	goto	u4961
  8821   00417E  EFC3  F020         	goto	u4960
  8822   004182                     u4961:
  8823   004182  EFE5  F020         	goto	l1401
  8824   004186                     u4960:
  8825   004186  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8826   004188  EFCA  F020         	goto	u4970
  8827   00418C  EFC8  F020         	goto	u4971
  8828   004190                     u4971:
  8829   004190  EFE5  F020         	goto	l1401
  8830   004194                     u4970:
  8831   004194  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8832   004198  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8833   00419C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8834   0041A0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8835   0041A4  1E05               	comf	??___xxtofl^0,f,c
  8836   0041A6  1E06               	comf	(??___xxtofl+1)^0,f,c
  8837   0041A8  1E07               	comf	(??___xxtofl+2)^0,f,c
  8838   0041AA  1E08               	comf	(??___xxtofl+3)^0,f,c
  8839   0041AC  2A05               	incf	??___xxtofl^0,f,c
  8840   0041AE  0E00               	movlw	0
  8841   0041B0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8842   0041B2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8843   0041B4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8844   0041B6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8845   0041BA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8846   0041BE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8847   0041C2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8848   0041C6  EFED  F020         	goto	l5119
  8849   0041CA                     l1401:
  8850   0041CA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8851   0041CE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8852   0041D2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8853   0041D6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8854   0041DA                     l5119:
  8855   0041DA  5001               	movf	___xxtofl@val^0,w,c
  8856   0041DC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8857   0041DE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8858   0041E0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8859   0041E2  A4D8               	btfss	status,2,c
  8860   0041E4  EFF6  F020         	goto	u4981
  8861   0041E8  EFF8  F020         	goto	u4980
  8862   0041EC                     u4981:
  8863   0041EC  EF02  F021         	goto	l5125
  8864   0041F0                     u4980:
  8865   0041F0  0E00               	movlw	0
  8866   0041F2  6E01               	movwf	?___xxtofl^0,c
  8867   0041F4  0E00               	movlw	0
  8868   0041F6  6E02               	movwf	(?___xxtofl+1)^0,c
  8869   0041F8  0E00               	movlw	0
  8870   0041FA  6E03               	movwf	(?___xxtofl+2)^0,c
  8871   0041FC  0E00               	movlw	0
  8872   0041FE  6E04               	movwf	(?___xxtofl+3)^0,c
  8873   004200  EF93  F021         	goto	l1404
  8874   004204                     l5125:
  8875   004204  0E96               	movlw	150
  8876   004206  6E0A               	movwf	___xxtofl@exp^0,c
  8877   004208  EF0C  F021         	goto	l5129
  8878   00420C                     l5127:
  8879   00420C  2A0A               	incf	___xxtofl@exp^0,f,c
  8880   00420E  90D8               	bcf	status,0,c
  8881   004210  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8882   004212  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8883   004214  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8884   004216  320B               	rrcf	___xxtofl@arg^0,f,c
  8885   004218                     l5129:
  8886   004218  0E00               	movlw	0
  8887   00421A  140B               	andwf	___xxtofl@arg^0,w,c
  8888   00421C  6E05               	movwf	??___xxtofl^0,c
  8889   00421E  0E00               	movlw	0
  8890   004220  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8891   004222  6E06               	movwf	(??___xxtofl+1)^0,c
  8892   004224  0E00               	movlw	0
  8893   004226  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8894   004228  6E07               	movwf	(??___xxtofl+2)^0,c
  8895   00422A  0EFE               	movlw	254
  8896   00422C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8897   00422E  6E08               	movwf	(??___xxtofl+3)^0,c
  8898   004230  5005               	movf	??___xxtofl^0,w,c
  8899   004232  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8900   004234  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8901   004236  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8902   004238  A4D8               	btfss	status,2,c
  8903   00423A  EF21  F021         	goto	u4991
  8904   00423E  EF23  F021         	goto	u4990
  8905   004242                     u4991:
  8906   004242  EF06  F021         	goto	l5127
  8907   004246                     u4990:
  8908   004246  EF31  F021         	goto	l1408
  8909   00424A                     l5131:
  8910   00424A  2A0A               	incf	___xxtofl@exp^0,f,c
  8911   00424C  0E01               	movlw	1
  8912   00424E  260B               	addwf	___xxtofl@arg^0,f,c
  8913   004250  0E00               	movlw	0
  8914   004252  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8915   004254  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8916   004256  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8917   004258  90D8               	bcf	status,0,c
  8918   00425A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8919   00425C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8920   00425E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8921   004260  320B               	rrcf	___xxtofl@arg^0,f,c
  8922   004262                     l1408:
  8923   004262  0E00               	movlw	0
  8924   004264  140B               	andwf	___xxtofl@arg^0,w,c
  8925   004266  6E05               	movwf	??___xxtofl^0,c
  8926   004268  0E00               	movlw	0
  8927   00426A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8928   00426C  6E06               	movwf	(??___xxtofl+1)^0,c
  8929   00426E  0E00               	movlw	0
  8930   004270  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8931   004272  6E07               	movwf	(??___xxtofl+2)^0,c
  8932   004274  0EFF               	movlw	255
  8933   004276  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8934   004278  6E08               	movwf	(??___xxtofl+3)^0,c
  8935   00427A  5005               	movf	??___xxtofl^0,w,c
  8936   00427C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8937   00427E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8938   004280  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8939   004282  A4D8               	btfss	status,2,c
  8940   004284  EF46  F021         	goto	u5001
  8941   004288  EF48  F021         	goto	u5000
  8942   00428C                     u5001:
  8943   00428C  EF25  F021         	goto	l5131
  8944   004290                     u5000:
  8945   004290  EF50  F021         	goto	l5139
  8946   004294                     l5137:
  8947   004294  060A               	decf	___xxtofl@exp^0,f,c
  8948   004296  90D8               	bcf	status,0,c
  8949   004298  360B               	rlcf	___xxtofl@arg^0,f,c
  8950   00429A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8951   00429C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8952   00429E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8953   0042A0                     l5139:
  8954   0042A0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8955   0042A2  EF55  F021         	goto	u5011
  8956   0042A6  EF57  F021         	goto	u5010
  8957   0042AA                     u5011:
  8958   0042AA  EF5F  F021         	goto	l1415
  8959   0042AE                     u5010:
  8960   0042AE  0E02               	movlw	2
  8961   0042B0  600A               	cpfslt	___xxtofl@exp^0,c
  8962   0042B2  EF5D  F021         	goto	u5021
  8963   0042B6  EF5F  F021         	goto	u5020
  8964   0042BA                     u5021:
  8965   0042BA  EF4A  F021         	goto	l5137
  8966   0042BE                     u5020:
  8967   0042BE                     l1415:
  8968   0042BE  B00A               	btfsc	___xxtofl@exp^0,0,c
  8969   0042C0  EF64  F021         	goto	u5031
  8970   0042C4  EF66  F021         	goto	u5030
  8971   0042C8                     u5031:
  8972   0042C8  EF67  F021         	goto	l5145
  8973   0042CC                     u5030:
  8974   0042CC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8975   0042CE                     l5145:
  8976   0042CE  90D8               	bcf	status,0,c
  8977   0042D0  320A               	rrcf	___xxtofl@exp^0,f,c
  8978   0042D2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8979   0042D6  6A06               	clrf	(??___xxtofl+1)^0,c
  8980   0042D8  6A07               	clrf	(??___xxtofl+2)^0,c
  8981   0042DA  6A08               	clrf	(??___xxtofl+3)^0,c
  8982   0042DC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8983   0042E0  6A07               	clrf	(??___xxtofl+2)^0,c
  8984   0042E2  6A06               	clrf	(??___xxtofl+1)^0,c
  8985   0042E4  6A05               	clrf	??___xxtofl^0,c
  8986   0042E6  5005               	movf	??___xxtofl^0,w,c
  8987   0042E8  120B               	iorwf	___xxtofl@arg^0,f,c
  8988   0042EA  5006               	movf	(??___xxtofl+1)^0,w,c
  8989   0042EC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8990   0042EE  5007               	movf	(??___xxtofl+2)^0,w,c
  8991   0042F0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8992   0042F2  5008               	movf	(??___xxtofl+3)^0,w,c
  8993   0042F4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8994   0042F6  5009               	movf	___xxtofl@sign^0,w,c
  8995   0042F8  B4D8               	btfsc	status,2,c
  8996   0042FA  EF81  F021         	goto	u5041
  8997   0042FE  EF83  F021         	goto	u5040
  8998   004302                     u5041:
  8999   004302  EF8B  F021         	goto	l5155
  9000   004306                     u5040:
  9001   004306  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9002   004308  EF8A  F021         	goto	u5050
  9003   00430C  EF88  F021         	goto	u5051
  9004   004310                     u5051:
  9005   004310  EF8B  F021         	goto	l5155
  9006   004314                     u5050:
  9007   004314  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9008   004316                     l5155:
  9009   004316  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9010   00431A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9011   00431E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9012   004322  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9013   004326                     l1404:
  9014   004326  0012               	return		;funcret
  9015   004328                     __end_of___xxtofl:
  9016                           	callstack 0
  9017                           
  9018 ;; *************** function ___flsub *****************
  9019 ;; Defined at:
  9020 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  b               4   41[COMRAM] unsigned char 
  9023 ;;  a               4   45[COMRAM] unsigned char 
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;		None
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  4   41[COMRAM] unsigned char 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, status,0, cstack
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;Total ram usage:        8 bytes
  9040 ;; Hardware stack levels used: 1
  9041 ;; Hardware stack levels required when called: 2
  9042 ;; This function calls:
  9043 ;;		___fladd
  9044 ;; This function is called by:
  9045 ;;		_Colour_decider
  9046 ;;		_efgtoa
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text37
  9051   005D12                     __ptext37:
  9052                           	callstack 0
  9053   005D12                     ___flsub:
  9054                           	callstack 24
  9055   005D12  0E00               	movlw	0
  9056   005D14  1A2E               	xorwf	___flsub@a^0,f,c
  9057   005D16  0E00               	movlw	0
  9058   005D18  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  9059   005D1A  0E00               	movlw	0
  9060   005D1C  1A30               	xorwf	(___flsub@a+2)^0,f,c
  9061   005D1E  0E80               	movlw	128
  9062   005D20  1A31               	xorwf	(___flsub@a+3)^0,f,c
  9063   005D22  C02A  F001         	movff	___flsub@b,___fladd@b
  9064   005D26  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
  9065   005D2A  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
  9066   005D2E  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
  9067   005D32  C02E  F005         	movff	___flsub@a,___fladd@a
  9068   005D36  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
  9069   005D3A  C030  F007         	movff	___flsub@a+2,___fladd@a+2
  9070   005D3E  C031  F008         	movff	___flsub@a+3,___fladd@a+3
  9071   005D42  EC4C  F011         	call	___fladd	;wreg free
  9072   005D46  C001  F02A         	movff	?___fladd,?___flsub
  9073   005D4A  C002  F02B         	movff	?___fladd+1,?___flsub+1
  9074   005D4E  C003  F02C         	movff	?___fladd+2,?___flsub+2
  9075   005D52  C004  F02D         	movff	?___fladd+3,?___flsub+3
  9076   005D56  0012               	return		;funcret
  9077   005D58                     __end_of___flsub:
  9078                           	callstack 0
  9079                           
  9080 ;; *************** function ___fladd *****************
  9081 ;; Defined at:
  9082 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  b               4    0[COMRAM] unsigned char 
  9085 ;;  a               4    4[COMRAM] unsigned char 
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;  grs             1   15[COMRAM] unsigned char 
  9088 ;;  bexp            1   14[COMRAM] unsigned char 
  9089 ;;  aexp            1   13[COMRAM] unsigned char 
  9090 ;;  signs           1   12[COMRAM] unsigned char 
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  4    0[COMRAM] unsigned char 
  9093 ;; Registers used:
  9094 ;;		wreg, status,2, status,0
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9102 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;Total ram usage:       16 bytes
  9105 ;; Hardware stack levels used: 1
  9106 ;; Hardware stack levels required when called: 1
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_colour_rel
  9111 ;;		_Colour_decider
  9112 ;;		___flsub
  9113 ;;		_efgtoa
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text38
  9118   002298                     __ptext38:
  9119                           	callstack 0
  9120   002298                     ___fladd:
  9121                           	callstack 24
  9122   002298  5004               	movf	(___fladd@b+3)^0,w,c
  9123   00229A  0B80               	andlw	128
  9124   00229C  6E0D               	movwf	___fladd@signs^0,c
  9125   00229E  5004               	movf	(___fladd@b+3)^0,w,c
  9126   0022A0  2404               	addwf	(___fladd@b+3)^0,w,c
  9127   0022A2  6E0F               	movwf	___fladd@bexp^0,c
  9128   0022A4  AE03               	btfss	(___fladd@b+2)^0,7,c
  9129   0022A6  EF57  F011         	goto	u3021
  9130   0022AA  EF59  F011         	goto	u3020
  9131   0022AE                     u3021:
  9132   0022AE  EF5A  F011         	goto	l3899
  9133   0022B2                     u3020:
  9134   0022B2  800F               	bsf	___fladd@bexp^0,0,c
  9135   0022B4                     l3899:
  9136   0022B4  500F               	movf	___fladd@bexp^0,w,c
  9137   0022B6  B4D8               	btfsc	status,2,c
  9138   0022B8  EF60  F011         	goto	u3031
  9139   0022BC  EF62  F011         	goto	u3030
  9140   0022C0                     u3031:
  9141   0022C0  EF77  F011         	goto	l3909
  9142   0022C4                     u3030:
  9143   0022C4  280F               	incf	___fladd@bexp^0,w,c
  9144   0022C6  A4D8               	btfss	status,2,c
  9145   0022C8  EF68  F011         	goto	u3041
  9146   0022CC  EF6A  F011         	goto	u3040
  9147   0022D0                     u3041:
  9148   0022D0  EF72  F011         	goto	l3905
  9149   0022D4                     u3040:
  9150   0022D4  0E00               	movlw	0
  9151   0022D6  6E01               	movwf	___fladd@b^0,c
  9152   0022D8  0E00               	movlw	0
  9153   0022DA  6E02               	movwf	(___fladd@b+1)^0,c
  9154   0022DC  0E00               	movlw	0
  9155   0022DE  6E03               	movwf	(___fladd@b+2)^0,c
  9156   0022E0  0E00               	movlw	0
  9157   0022E2  6E04               	movwf	(___fladd@b+3)^0,c
  9158   0022E4                     l3905:
  9159   0022E4  8E03               	bsf	(___fladd@b+2)^0,7,c
  9160   0022E6  0E00               	movlw	0
  9161   0022E8  6E04               	movwf	(___fladd@b+3)^0,c
  9162   0022EA  EF7F  F011         	goto	l3911
  9163   0022EE                     l3909:
  9164   0022EE  0E00               	movlw	0
  9165   0022F0  6E01               	movwf	___fladd@b^0,c
  9166   0022F2  0E00               	movlw	0
  9167   0022F4  6E02               	movwf	(___fladd@b+1)^0,c
  9168   0022F6  0E00               	movlw	0
  9169   0022F8  6E03               	movwf	(___fladd@b+2)^0,c
  9170   0022FA  0E00               	movlw	0
  9171   0022FC  6E04               	movwf	(___fladd@b+3)^0,c
  9172   0022FE                     l3911:
  9173   0022FE  5008               	movf	(___fladd@a+3)^0,w,c
  9174   002300  0B80               	andlw	128
  9175   002302  6E0E               	movwf	___fladd@aexp^0,c
  9176   002304  500D               	movf	___fladd@signs^0,w,c
  9177   002306  180E               	xorwf	___fladd@aexp^0,w,c
  9178   002308  B4D8               	btfsc	status,2,c
  9179   00230A  EF89  F011         	goto	u3051
  9180   00230E  EF8B  F011         	goto	u3050
  9181   002312                     u3051:
  9182   002312  EF8C  F011         	goto	l3917
  9183   002316                     u3050:
  9184   002316  8C0D               	bsf	___fladd@signs^0,6,c
  9185   002318                     l3917:
  9186   002318  5008               	movf	(___fladd@a+3)^0,w,c
  9187   00231A  2408               	addwf	(___fladd@a+3)^0,w,c
  9188   00231C  6E0E               	movwf	___fladd@aexp^0,c
  9189   00231E  AE07               	btfss	(___fladd@a+2)^0,7,c
  9190   002320  EF94  F011         	goto	u3061
  9191   002324  EF96  F011         	goto	u3060
  9192   002328                     u3061:
  9193   002328  EF97  F011         	goto	l3923
  9194   00232C                     u3060:
  9195   00232C  800E               	bsf	___fladd@aexp^0,0,c
  9196   00232E                     l3923:
  9197   00232E  500E               	movf	___fladd@aexp^0,w,c
  9198   002330  B4D8               	btfsc	status,2,c
  9199   002332  EF9D  F011         	goto	u3071
  9200   002336  EF9F  F011         	goto	u3070
  9201   00233A                     u3071:
  9202   00233A  EFB4  F011         	goto	l3933
  9203   00233E                     u3070:
  9204   00233E  280E               	incf	___fladd@aexp^0,w,c
  9205   002340  A4D8               	btfss	status,2,c
  9206   002342  EFA5  F011         	goto	u3081
  9207   002346  EFA7  F011         	goto	u3080
  9208   00234A                     u3081:
  9209   00234A  EFAF  F011         	goto	l3929
  9210   00234E                     u3080:
  9211   00234E  0E00               	movlw	0
  9212   002350  6E05               	movwf	___fladd@a^0,c
  9213   002352  0E00               	movlw	0
  9214   002354  6E06               	movwf	(___fladd@a+1)^0,c
  9215   002356  0E00               	movlw	0
  9216   002358  6E07               	movwf	(___fladd@a+2)^0,c
  9217   00235A  0E00               	movlw	0
  9218   00235C  6E08               	movwf	(___fladd@a+3)^0,c
  9219   00235E                     l3929:
  9220   00235E  8E07               	bsf	(___fladd@a+2)^0,7,c
  9221   002360  0E00               	movlw	0
  9222   002362  6E08               	movwf	(___fladd@a+3)^0,c
  9223   002364  EFBC  F011         	goto	l3935
  9224   002368                     l3933:
  9225   002368  0E00               	movlw	0
  9226   00236A  6E05               	movwf	___fladd@a^0,c
  9227   00236C  0E00               	movlw	0
  9228   00236E  6E06               	movwf	(___fladd@a+1)^0,c
  9229   002370  0E00               	movlw	0
  9230   002372  6E07               	movwf	(___fladd@a+2)^0,c
  9231   002374  0E00               	movlw	0
  9232   002376  6E08               	movwf	(___fladd@a+3)^0,c
  9233   002378                     l3935:
  9234   002378  500F               	movf	___fladd@bexp^0,w,c
  9235   00237A  5C0E               	subwf	___fladd@aexp^0,w,c
  9236   00237C  B0D8               	btfsc	status,0,c
  9237   00237E  EFC3  F011         	goto	u3091
  9238   002382  EFC5  F011         	goto	u3090
  9239   002386                     u3091:
  9240   002386  EFEC  F011         	goto	l3971
  9241   00238A                     u3090:
  9242   00238A  AC0D               	btfss	___fladd@signs^0,6,c
  9243   00238C  EFCA  F011         	goto	u3101
  9244   002390  EFCC  F011         	goto	u3100
  9245   002394                     u3101:
  9246   002394  EFCE  F011         	goto	l3941
  9247   002398                     u3100:
  9248   002398  0E80               	movlw	128
  9249   00239A  1A0D               	xorwf	___fladd@signs^0,f,c
  9250   00239C                     l3941:
  9251   00239C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9252   0023A0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9253   0023A4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9254   0023A8  C001  F010         	movff	___fladd@b,___fladd@grs
  9255   0023AC  C005  F001         	movff	___fladd@a,___fladd@b
  9256   0023B0  C010  F005         	movff	___fladd@grs,___fladd@a
  9257   0023B4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9258   0023B8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9259   0023BC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9260   0023C0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9261   0023C4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9262   0023C8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9263   0023CC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9264   0023D0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9265   0023D4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9266   0023D8                     l3971:
  9267   0023D8  0E00               	movlw	0
  9268   0023DA  6E10               	movwf	___fladd@grs^0,c
  9269   0023DC  500F               	movf	___fladd@bexp^0,w,c
  9270   0023DE  C00E  F009         	movff	___fladd@aexp,??___fladd
  9271   0023E2  6A0A               	clrf	(??___fladd+1)^0,c
  9272   0023E4  5E09               	subwf	??___fladd^0,f,c
  9273   0023E6  0E00               	movlw	0
  9274   0023E8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9275   0023EA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9276   0023EC  EF01  F012         	goto	u3111
  9277   0023F0  500A               	movf	(??___fladd+1)^0,w,c
  9278   0023F2  E109               	bnz	u3110
  9279   0023F4  0E1A               	movlw	26
  9280   0023F6  5C09               	subwf	??___fladd^0,w,c
  9281   0023F8  A0D8               	btfss	status,0,c
  9282   0023FA  EF01  F012         	goto	u3111
  9283   0023FE  EF03  F012         	goto	u3110
  9284   002402                     u3111:
  9285   002402  EF3A  F012         	goto	l1275
  9286   002406                     u3110:
  9287   002406  5001               	movf	___fladd@b^0,w,c
  9288   002408  1002               	iorwf	(___fladd@b+1)^0,w,c
  9289   00240A  1003               	iorwf	(___fladd@b+2)^0,w,c
  9290   00240C  1004               	iorwf	(___fladd@b+3)^0,w,c
  9291   00240E  A4D8               	btfss	status,2,c
  9292   002410  EF0C  F012         	goto	u3121
  9293   002414  EF0F  F012         	goto	u3120
  9294   002418                     u3121:
  9295   002418  0E01               	movlw	1
  9296   00241A  EF10  F012         	goto	u3130
  9297   00241E                     u3120:
  9298   00241E  0E00               	movlw	0
  9299   002420                     u3130:
  9300   002420  6E10               	movwf	___fladd@grs^0,c
  9301   002422  0E00               	movlw	0
  9302   002424  6E01               	movwf	___fladd@b^0,c
  9303   002426  0E00               	movlw	0
  9304   002428  6E02               	movwf	(___fladd@b+1)^0,c
  9305   00242A  0E00               	movlw	0
  9306   00242C  6E03               	movwf	(___fladd@b+2)^0,c
  9307   00242E  0E00               	movlw	0
  9308   002430  6E04               	movwf	(___fladd@b+3)^0,c
  9309   002432  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9310   002436  EF43  F012         	goto	l1274
  9311   00243A                     l1276:
  9312   00243A  A010               	btfss	___fladd@grs^0,0,c
  9313   00243C  EF22  F012         	goto	u3141
  9314   002440  EF24  F012         	goto	u3140
  9315   002444                     u3141:
  9316   002444  EF2A  F012         	goto	l3983
  9317   002448                     u3140:
  9318   002448  90D8               	bcf	status,0,c
  9319   00244A  3010               	rrcf	___fladd@grs^0,w,c
  9320   00244C  0901               	iorlw	1
  9321   00244E  6E10               	movwf	___fladd@grs^0,c
  9322   002450  EF2C  F012         	goto	l3985
  9323   002454                     l3983:
  9324   002454  90D8               	bcf	status,0,c
  9325   002456  3210               	rrcf	___fladd@grs^0,f,c
  9326   002458                     l3985:
  9327   002458  A001               	btfss	___fladd@b^0,0,c
  9328   00245A  EF31  F012         	goto	u3151
  9329   00245E  EF33  F012         	goto	u3150
  9330   002462                     u3151:
  9331   002462  EF34  F012         	goto	l3989
  9332   002466                     u3150:
  9333   002466  8E10               	bsf	___fladd@grs^0,7,c
  9334   002468                     l3989:
  9335   002468  3404               	rlcf	(___fladd@b+3)^0,w,c
  9336   00246A  3204               	rrcf	(___fladd@b+3)^0,f,c
  9337   00246C  3203               	rrcf	(___fladd@b+2)^0,f,c
  9338   00246E  3202               	rrcf	(___fladd@b+1)^0,f,c
  9339   002470  3201               	rrcf	___fladd@b^0,f,c
  9340   002472  2A0F               	incf	___fladd@bexp^0,f,c
  9341   002474                     l1275:
  9342   002474  500E               	movf	___fladd@aexp^0,w,c
  9343   002476  5C0F               	subwf	___fladd@bexp^0,w,c
  9344   002478  A0D8               	btfss	status,0,c
  9345   00247A  EF41  F012         	goto	u3161
  9346   00247E  EF43  F012         	goto	u3160
  9347   002482                     u3161:
  9348   002482  EF1D  F012         	goto	l1276
  9349   002486                     u3160:
  9350   002486                     l1274:
  9351   002486  BC0D               	btfsc	___fladd@signs^0,6,c
  9352   002488  EF48  F012         	goto	u3171
  9353   00248C  EF4A  F012         	goto	u3170
  9354   002490                     u3171:
  9355   002490  EF8A  F012         	goto	l4017
  9356   002494                     u3170:
  9357   002494  500F               	movf	___fladd@bexp^0,w,c
  9358   002496  A4D8               	btfss	status,2,c
  9359   002498  EF50  F012         	goto	u3181
  9360   00249C  EF52  F012         	goto	u3180
  9361   0024A0                     u3181:
  9362   0024A0  EF5C  F012         	goto	l3999
  9363   0024A4                     u3180:
  9364   0024A4  0E00               	movlw	0
  9365   0024A6  6E01               	movwf	?___fladd^0,c
  9366   0024A8  0E00               	movlw	0
  9367   0024AA  6E02               	movwf	(?___fladd+1)^0,c
  9368   0024AC  0E00               	movlw	0
  9369   0024AE  6E03               	movwf	(?___fladd+2)^0,c
  9370   0024B0  0E00               	movlw	0
  9371   0024B2  6E04               	movwf	(?___fladd+3)^0,c
  9372   0024B4  EFAB  F013         	goto	l1283
  9373   0024B8                     l3999:
  9374   0024B8  5005               	movf	___fladd@a^0,w,c
  9375   0024BA  2601               	addwf	___fladd@b^0,f,c
  9376   0024BC  5006               	movf	(___fladd@a+1)^0,w,c
  9377   0024BE  2202               	addwfc	(___fladd@b+1)^0,f,c
  9378   0024C0  5007               	movf	(___fladd@a+2)^0,w,c
  9379   0024C2  2203               	addwfc	(___fladd@b+2)^0,f,c
  9380   0024C4  5008               	movf	(___fladd@a+3)^0,w,c
  9381   0024C6  2204               	addwfc	(___fladd@b+3)^0,f,c
  9382   0024C8  A004               	btfss	(___fladd@b+3)^0,0,c
  9383   0024CA  EF69  F012         	goto	u3191
  9384   0024CE  EF6B  F012         	goto	u3190
  9385   0024D2                     u3191:
  9386   0024D2  EF17  F013         	goto	l4053
  9387   0024D6                     u3190:
  9388   0024D6  A010               	btfss	___fladd@grs^0,0,c
  9389   0024D8  EF70  F012         	goto	u3201
  9390   0024DC  EF72  F012         	goto	u3200
  9391   0024E0                     u3201:
  9392   0024E0  EF78  F012         	goto	l4007
  9393   0024E4                     u3200:
  9394   0024E4  90D8               	bcf	status,0,c
  9395   0024E6  3010               	rrcf	___fladd@grs^0,w,c
  9396   0024E8  0901               	iorlw	1
  9397   0024EA  6E10               	movwf	___fladd@grs^0,c
  9398   0024EC  EF7A  F012         	goto	l4009
  9399   0024F0                     l4007:
  9400   0024F0  90D8               	bcf	status,0,c
  9401   0024F2  3210               	rrcf	___fladd@grs^0,f,c
  9402   0024F4                     l4009:
  9403   0024F4  A001               	btfss	___fladd@b^0,0,c
  9404   0024F6  EF7F  F012         	goto	u3211
  9405   0024FA  EF81  F012         	goto	u3210
  9406   0024FE                     u3211:
  9407   0024FE  EF82  F012         	goto	l4013
  9408   002502                     u3210:
  9409   002502  8E10               	bsf	___fladd@grs^0,7,c
  9410   002504                     l4013:
  9411   002504  3404               	rlcf	(___fladd@b+3)^0,w,c
  9412   002506  3204               	rrcf	(___fladd@b+3)^0,f,c
  9413   002508  3203               	rrcf	(___fladd@b+2)^0,f,c
  9414   00250A  3202               	rrcf	(___fladd@b+1)^0,f,c
  9415   00250C  3201               	rrcf	___fladd@b^0,f,c
  9416   00250E  2A0F               	incf	___fladd@bexp^0,f,c
  9417   002510  EF17  F013         	goto	l4053
  9418   002514                     l4017:
  9419   002514  5005               	movf	___fladd@a^0,w,c
  9420   002516  5C01               	subwf	___fladd@b^0,w,c
  9421   002518  5006               	movf	(___fladd@a+1)^0,w,c
  9422   00251A  5802               	subwfb	(___fladd@b+1)^0,w,c
  9423   00251C  5007               	movf	(___fladd@a+2)^0,w,c
  9424   00251E  5803               	subwfb	(___fladd@b+2)^0,w,c
  9425   002520  5004               	movf	(___fladd@b+3)^0,w,c
  9426   002522  0A80               	xorlw	128
  9427   002524  6E09               	movwf	??___fladd^0,c
  9428   002526  5008               	movf	(___fladd@a+3)^0,w,c
  9429   002528  0A80               	xorlw	128
  9430   00252A  5809               	subwfb	??___fladd^0,w,c
  9431   00252C  B0D8               	btfsc	status,0,c
  9432   00252E  EF9B  F012         	goto	u3221
  9433   002532  EF9D  F012         	goto	u3220
  9434   002536                     u3221:
  9435   002536  EFC8  F012         	goto	l4027
  9436   00253A                     u3220:
  9437   00253A  5001               	movf	___fladd@b^0,w,c
  9438   00253C  5C05               	subwf	___fladd@a^0,w,c
  9439   00253E  6E09               	movwf	??___fladd^0,c
  9440   002540  5002               	movf	(___fladd@b+1)^0,w,c
  9441   002542  5806               	subwfb	(___fladd@a+1)^0,w,c
  9442   002544  6E0A               	movwf	(??___fladd+1)^0,c
  9443   002546  5003               	movf	(___fladd@b+2)^0,w,c
  9444   002548  5807               	subwfb	(___fladd@a+2)^0,w,c
  9445   00254A  6E0B               	movwf	(??___fladd+2)^0,c
  9446   00254C  5004               	movf	(___fladd@b+3)^0,w,c
  9447   00254E  5808               	subwfb	(___fladd@a+3)^0,w,c
  9448   002550  6E0C               	movwf	(??___fladd+3)^0,c
  9449   002552  0EFF               	movlw	255
  9450   002554  2409               	addwf	??___fladd^0,w,c
  9451   002556  6E01               	movwf	___fladd@b^0,c
  9452   002558  0EFF               	movlw	255
  9453   00255A  200A               	addwfc	(??___fladd+1)^0,w,c
  9454   00255C  6E02               	movwf	(___fladd@b+1)^0,c
  9455   00255E  0EFF               	movlw	255
  9456   002560  200B               	addwfc	(??___fladd+2)^0,w,c
  9457   002562  6E03               	movwf	(___fladd@b+2)^0,c
  9458   002564  0EFF               	movlw	255
  9459   002566  200C               	addwfc	(??___fladd+3)^0,w,c
  9460   002568  6E04               	movwf	(___fladd@b+3)^0,c
  9461   00256A  0E80               	movlw	128
  9462   00256C  1A0D               	xorwf	___fladd@signs^0,f,c
  9463   00256E  6C10               	negf	___fladd@grs^0,c
  9464   002570  5010               	movf	___fladd@grs^0,w,c
  9465   002572  A4D8               	btfss	status,2,c
  9466   002574  EFBE  F012         	goto	u3231
  9467   002578  EFC0  F012         	goto	u3230
  9468   00257C                     u3231:
  9469   00257C  EFD0  F012         	goto	l1291
  9470   002580                     u3230:
  9471   002580  0E01               	movlw	1
  9472   002582  2601               	addwf	___fladd@b^0,f,c
  9473   002584  0E00               	movlw	0
  9474   002586  2202               	addwfc	(___fladd@b+1)^0,f,c
  9475   002588  2203               	addwfc	(___fladd@b+2)^0,f,c
  9476   00258A  2204               	addwfc	(___fladd@b+3)^0,f,c
  9477   00258C  EFD0  F012         	goto	l1291
  9478   002590                     l4027:
  9479   002590  5005               	movf	___fladd@a^0,w,c
  9480   002592  5E01               	subwf	___fladd@b^0,f,c
  9481   002594  5006               	movf	(___fladd@a+1)^0,w,c
  9482   002596  5A02               	subwfb	(___fladd@b+1)^0,f,c
  9483   002598  5007               	movf	(___fladd@a+2)^0,w,c
  9484   00259A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  9485   00259C  5008               	movf	(___fladd@a+3)^0,w,c
  9486   00259E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  9487   0025A0                     l1291:
  9488   0025A0  5001               	movf	___fladd@b^0,w,c
  9489   0025A2  1002               	iorwf	(___fladd@b+1)^0,w,c
  9490   0025A4  1003               	iorwf	(___fladd@b+2)^0,w,c
  9491   0025A6  1004               	iorwf	(___fladd@b+3)^0,w,c
  9492   0025A8  A4D8               	btfss	status,2,c
  9493   0025AA  EFD9  F012         	goto	u3241
  9494   0025AE  EFDB  F012         	goto	u3240
  9495   0025B2                     u3241:
  9496   0025B2  EF10  F013         	goto	l4051
  9497   0025B6                     u3240:
  9498   0025B6  5010               	movf	___fladd@grs^0,w,c
  9499   0025B8  A4D8               	btfss	status,2,c
  9500   0025BA  EFE1  F012         	goto	u3251
  9501   0025BE  EFE3  F012         	goto	u3250
  9502   0025C2                     u3251:
  9503   0025C2  EF10  F013         	goto	l4051
  9504   0025C6                     u3250:
  9505   0025C6  0E00               	movlw	0
  9506   0025C8  6E01               	movwf	?___fladd^0,c
  9507   0025CA  0E00               	movlw	0
  9508   0025CC  6E02               	movwf	(?___fladd+1)^0,c
  9509   0025CE  0E00               	movlw	0
  9510   0025D0  6E03               	movwf	(?___fladd+2)^0,c
  9511   0025D2  0E00               	movlw	0
  9512   0025D4  6E04               	movwf	(?___fladd+3)^0,c
  9513   0025D6  EFAB  F013         	goto	l1283
  9514   0025DA                     l4035:
  9515   0025DA  90D8               	bcf	status,0,c
  9516   0025DC  3601               	rlcf	___fladd@b^0,f,c
  9517   0025DE  3602               	rlcf	(___fladd@b+1)^0,f,c
  9518   0025E0  3603               	rlcf	(___fladd@b+2)^0,f,c
  9519   0025E2  3604               	rlcf	(___fladd@b+3)^0,f,c
  9520   0025E4  AE10               	btfss	___fladd@grs^0,7,c
  9521   0025E6  EFF7  F012         	goto	u3261
  9522   0025EA  EFF9  F012         	goto	u3260
  9523   0025EE                     u3261:
  9524   0025EE  EFFA  F012         	goto	l4041
  9525   0025F2                     u3260:
  9526   0025F2  8001               	bsf	___fladd@b^0,0,c
  9527   0025F4                     l4041:
  9528   0025F4  A010               	btfss	___fladd@grs^0,0,c
  9529   0025F6  EFFF  F012         	goto	u3271
  9530   0025FA  EF01  F013         	goto	u3270
  9531   0025FE                     u3271:
  9532   0025FE  EF05  F013         	goto	l4045
  9533   002602                     u3270:
  9534   002602  80D8               	bsf	status,0,c
  9535   002604  3610               	rlcf	___fladd@grs^0,f,c
  9536   002606  EF07  F013         	goto	l4047
  9537   00260A                     l4045:
  9538   00260A  90D8               	bcf	status,0,c
  9539   00260C  3610               	rlcf	___fladd@grs^0,f,c
  9540   00260E                     l4047:
  9541   00260E  500F               	movf	___fladd@bexp^0,w,c
  9542   002610  B4D8               	btfsc	status,2,c
  9543   002612  EF0D  F013         	goto	u3281
  9544   002616  EF0F  F013         	goto	u3280
  9545   00261A                     u3281:
  9546   00261A  EF10  F013         	goto	l4051
  9547   00261E                     u3280:
  9548   00261E  060F               	decf	___fladd@bexp^0,f,c
  9549   002620                     l4051:
  9550   002620  AE03               	btfss	(___fladd@b+2)^0,7,c
  9551   002622  EF15  F013         	goto	u3291
  9552   002626  EF17  F013         	goto	u3290
  9553   00262A                     u3291:
  9554   00262A  EFED  F012         	goto	l4035
  9555   00262E                     u3290:
  9556   00262E                     l4053:
  9557   00262E  0E00               	movlw	0
  9558   002630  6E0E               	movwf	___fladd@aexp^0,c
  9559   002632  AE10               	btfss	___fladd@grs^0,7,c
  9560   002634  EF1E  F013         	goto	u3301
  9561   002638  EF20  F013         	goto	u3300
  9562   00263C                     u3301:
  9563   00263C  EF38  F013         	goto	l1300
  9564   002640                     u3300:
  9565   002640  C010  F009         	movff	___fladd@grs,??___fladd
  9566   002644  0E7F               	movlw	127
  9567   002646  1609               	andwf	??___fladd^0,f,c
  9568   002648  B4D8               	btfsc	status,2,c
  9569   00264A  EF29  F013         	goto	u3311
  9570   00264E  EF2B  F013         	goto	u3310
  9571   002652                     u3311:
  9572   002652  EF2F  F013         	goto	l1301
  9573   002656                     u3310:
  9574   002656                     l4059:
  9575   002656  0E01               	movlw	1
  9576   002658  6E0E               	movwf	___fladd@aexp^0,c
  9577   00265A  EF38  F013         	goto	l1300
  9578   00265E                     l1301:
  9579   00265E  A001               	btfss	___fladd@b^0,0,c
  9580   002660  EF34  F013         	goto	u3321
  9581   002664  EF36  F013         	goto	u3320
  9582   002668                     u3321:
  9583   002668  EF38  F013         	goto	l1300
  9584   00266C                     u3320:
  9585   00266C  EF2B  F013         	goto	l4059
  9586   002670                     l1300:
  9587   002670  500E               	movf	___fladd@aexp^0,w,c
  9588   002672  B4D8               	btfsc	status,2,c
  9589   002674  EF3E  F013         	goto	u3331
  9590   002678  EF40  F013         	goto	u3330
  9591   00267C                     u3331:
  9592   00267C  EF6B  F013         	goto	l4071
  9593   002680                     u3330:
  9594   002680  0E01               	movlw	1
  9595   002682  2601               	addwf	___fladd@b^0,f,c
  9596   002684  0E00               	movlw	0
  9597   002686  2202               	addwfc	(___fladd@b+1)^0,f,c
  9598   002688  2203               	addwfc	(___fladd@b+2)^0,f,c
  9599   00268A  2204               	addwfc	(___fladd@b+3)^0,f,c
  9600   00268C  A004               	btfss	(___fladd@b+3)^0,0,c
  9601   00268E  EF4B  F013         	goto	u3341
  9602   002692  EF4D  F013         	goto	u3340
  9603   002696                     u3341:
  9604   002696  EF6B  F013         	goto	l4071
  9605   00269A                     u3340:
  9606   00269A  C001  F009         	movff	___fladd@b,??___fladd
  9607   00269E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9608   0026A2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9609   0026A6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9610   0026AA  340C               	rlcf	(??___fladd+3)^0,w,c
  9611   0026AC  320C               	rrcf	(??___fladd+3)^0,f,c
  9612   0026AE  320B               	rrcf	(??___fladd+2)^0,f,c
  9613   0026B0  320A               	rrcf	(??___fladd+1)^0,f,c
  9614   0026B2  3209               	rrcf	??___fladd^0,f,c
  9615   0026B4  C009  F001         	movff	??___fladd,___fladd@b
  9616   0026B8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9617   0026BC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9618   0026C0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9619   0026C4  280F               	incf	___fladd@bexp^0,w,c
  9620   0026C6  B4D8               	btfsc	status,2,c
  9621   0026C8  EF68  F013         	goto	u3351
  9622   0026CC  EF6A  F013         	goto	u3350
  9623   0026D0                     u3351:
  9624   0026D0  EF6B  F013         	goto	l4071
  9625   0026D4                     u3350:
  9626   0026D4  2A0F               	incf	___fladd@bexp^0,f,c
  9627   0026D6                     l4071:
  9628   0026D6  280F               	incf	___fladd@bexp^0,w,c
  9629   0026D8  B4D8               	btfsc	status,2,c
  9630   0026DA  EF71  F013         	goto	u3361
  9631   0026DE  EF73  F013         	goto	u3360
  9632   0026E2                     u3361:
  9633   0026E2  EF7B  F013         	goto	l4075
  9634   0026E6                     u3360:
  9635   0026E6  500F               	movf	___fladd@bexp^0,w,c
  9636   0026E8  A4D8               	btfss	status,2,c
  9637   0026EA  EF79  F013         	goto	u3371
  9638   0026EE  EF7B  F013         	goto	u3370
  9639   0026F2                     u3371:
  9640   0026F2  EF8D  F013         	goto	l4079
  9641   0026F6                     u3370:
  9642   0026F6                     l4075:
  9643   0026F6  0E00               	movlw	0
  9644   0026F8  6E01               	movwf	___fladd@b^0,c
  9645   0026FA  0E00               	movlw	0
  9646   0026FC  6E02               	movwf	(___fladd@b+1)^0,c
  9647   0026FE  0E00               	movlw	0
  9648   002700  6E03               	movwf	(___fladd@b+2)^0,c
  9649   002702  0E00               	movlw	0
  9650   002704  6E04               	movwf	(___fladd@b+3)^0,c
  9651   002706  500F               	movf	___fladd@bexp^0,w,c
  9652   002708  A4D8               	btfss	status,2,c
  9653   00270A  EF89  F013         	goto	u3381
  9654   00270E  EF8B  F013         	goto	u3380
  9655   002712                     u3381:
  9656   002712  EF8D  F013         	goto	l4079
  9657   002716                     u3380:
  9658   002716  0E00               	movlw	0
  9659   002718  6E0D               	movwf	___fladd@signs^0,c
  9660   00271A                     l4079:
  9661   00271A  A00F               	btfss	___fladd@bexp^0,0,c
  9662   00271C  EF92  F013         	goto	u3391
  9663   002720  EF94  F013         	goto	u3390
  9664   002724                     u3391:
  9665   002724  EF97  F013         	goto	l4083
  9666   002728                     u3390:
  9667   002728  8E03               	bsf	(___fladd@b+2)^0,7,c
  9668   00272A  EF98  F013         	goto	l4085
  9669   00272E                     l4083:
  9670   00272E  9E03               	bcf	(___fladd@b+2)^0,7,c
  9671   002730                     l4085:
  9672   002730  90D8               	bcf	status,0,c
  9673   002732  300F               	rrcf	___fladd@bexp^0,w,c
  9674   002734  6E04               	movwf	(___fladd@b+3)^0,c
  9675   002736  AE0D               	btfss	___fladd@signs^0,7,c
  9676   002738  EFA0  F013         	goto	u3401
  9677   00273C  EFA2  F013         	goto	u3400
  9678   002740                     u3401:
  9679   002740  EFA3  F013         	goto	l4091
  9680   002744                     u3400:
  9681   002744  8E04               	bsf	(___fladd@b+3)^0,7,c
  9682   002746                     l4091:
  9683   002746  C001  F001         	movff	___fladd@b,?___fladd
  9684   00274A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9685   00274E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9686   002752  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9687   002756                     l1283:
  9688   002756  0012               	return		;funcret
  9689   002758                     __end_of___fladd:
  9690                           	callstack 0
  9691                           
  9692 ;; *************** function ___flmul *****************
  9693 ;; Defined at:
  9694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  b               4   16[COMRAM] unsigned char 
  9697 ;;  a               4   20[COMRAM] unsigned char 
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;  prod            4   35[COMRAM] struct .
  9700 ;;  grs             4   29[COMRAM] unsigned long 
  9701 ;;  temp            2   39[COMRAM] struct .
  9702 ;;  bexp            1   34[COMRAM] unsigned char 
  9703 ;;  aexp            1   33[COMRAM] unsigned char 
  9704 ;;  sign            1   28[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  4   16[COMRAM] unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0, prodl, prodh
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9714 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;Total ram usage:       25 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 1
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_Colour_decider
  9725 ;;		_reverseOneBlock
  9726 ;;		_ForwardOneBlock
  9727 ;;		_Forwardhalfblock
  9728 ;;		_efgtoa
  9729 ;;		_Backhalfblock
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text39
  9734   002758                     __ptext39:
  9735                           	callstack 0
  9736   002758                     ___flmul:
  9737                           	callstack 25
  9738   002758  5014               	movf	(___flmul@b+3)^0,w,c
  9739   00275A  0B80               	andlw	128
  9740   00275C  6E1D               	movwf	___flmul@sign^0,c
  9741   00275E  5014               	movf	(___flmul@b+3)^0,w,c
  9742   002760  2414               	addwf	(___flmul@b+3)^0,w,c
  9743   002762  6E23               	movwf	___flmul@bexp^0,c
  9744   002764  AE13               	btfss	(___flmul@b+2)^0,7,c
  9745   002766  EFB7  F013         	goto	u3911
  9746   00276A  EFB9  F013         	goto	u3910
  9747   00276E                     u3911:
  9748   00276E  EFBA  F013         	goto	l4407
  9749   002772                     u3910:
  9750   002772  8023               	bsf	___flmul@bexp^0,0,c
  9751   002774                     l4407:
  9752   002774  5023               	movf	___flmul@bexp^0,w,c
  9753   002776  B4D8               	btfsc	status,2,c
  9754   002778  EFC0  F013         	goto	u3921
  9755   00277C  EFC2  F013         	goto	u3920
  9756   002780                     u3921:
  9757   002780  EFD5  F013         	goto	l4415
  9758   002784                     u3920:
  9759   002784  2823               	incf	___flmul@bexp^0,w,c
  9760   002786  A4D8               	btfss	status,2,c
  9761   002788  EFC8  F013         	goto	u3931
  9762   00278C  EFCA  F013         	goto	u3930
  9763   002790                     u3931:
  9764   002790  EFD2  F013         	goto	l4413
  9765   002794                     u3930:
  9766   002794  0E00               	movlw	0
  9767   002796  6E11               	movwf	___flmul@b^0,c
  9768   002798  0E00               	movlw	0
  9769   00279A  6E12               	movwf	(___flmul@b+1)^0,c
  9770   00279C  0E00               	movlw	0
  9771   00279E  6E13               	movwf	(___flmul@b+2)^0,c
  9772   0027A0  0E00               	movlw	0
  9773   0027A2  6E14               	movwf	(___flmul@b+3)^0,c
  9774   0027A4                     l4413:
  9775   0027A4  8E13               	bsf	(___flmul@b+2)^0,7,c
  9776   0027A6  EFDD  F013         	goto	l4417
  9777   0027AA                     l4415:
  9778   0027AA  0E00               	movlw	0
  9779   0027AC  6E11               	movwf	___flmul@b^0,c
  9780   0027AE  0E00               	movlw	0
  9781   0027B0  6E12               	movwf	(___flmul@b+1)^0,c
  9782   0027B2  0E00               	movlw	0
  9783   0027B4  6E13               	movwf	(___flmul@b+2)^0,c
  9784   0027B6  0E00               	movlw	0
  9785   0027B8  6E14               	movwf	(___flmul@b+3)^0,c
  9786   0027BA                     l4417:
  9787   0027BA  5018               	movf	(___flmul@a+3)^0,w,c
  9788   0027BC  0B80               	andlw	128
  9789   0027BE  1A1D               	xorwf	___flmul@sign^0,f,c
  9790   0027C0  5018               	movf	(___flmul@a+3)^0,w,c
  9791   0027C2  2418               	addwf	(___flmul@a+3)^0,w,c
  9792   0027C4  6E22               	movwf	___flmul@aexp^0,c
  9793   0027C6  AE17               	btfss	(___flmul@a+2)^0,7,c
  9794   0027C8  EFE8  F013         	goto	u3941
  9795   0027CC  EFEA  F013         	goto	u3940
  9796   0027D0                     u3941:
  9797   0027D0  EFEB  F013         	goto	l4425
  9798   0027D4                     u3940:
  9799   0027D4  8022               	bsf	___flmul@aexp^0,0,c
  9800   0027D6                     l4425:
  9801   0027D6  5022               	movf	___flmul@aexp^0,w,c
  9802   0027D8  B4D8               	btfsc	status,2,c
  9803   0027DA  EFF1  F013         	goto	u3951
  9804   0027DE  EFF3  F013         	goto	u3950
  9805   0027E2                     u3951:
  9806   0027E2  EF06  F014         	goto	l4433
  9807   0027E6                     u3950:
  9808   0027E6  2822               	incf	___flmul@aexp^0,w,c
  9809   0027E8  A4D8               	btfss	status,2,c
  9810   0027EA  EFF9  F013         	goto	u3961
  9811   0027EE  EFFB  F013         	goto	u3960
  9812   0027F2                     u3961:
  9813   0027F2  EF03  F014         	goto	l4431
  9814   0027F6                     u3960:
  9815   0027F6  0E00               	movlw	0
  9816   0027F8  6E15               	movwf	___flmul@a^0,c
  9817   0027FA  0E00               	movlw	0
  9818   0027FC  6E16               	movwf	(___flmul@a+1)^0,c
  9819   0027FE  0E00               	movlw	0
  9820   002800  6E17               	movwf	(___flmul@a+2)^0,c
  9821   002802  0E00               	movlw	0
  9822   002804  6E18               	movwf	(___flmul@a+3)^0,c
  9823   002806                     l4431:
  9824   002806  8E17               	bsf	(___flmul@a+2)^0,7,c
  9825   002808  EF0E  F014         	goto	l1360
  9826   00280C                     l4433:
  9827   00280C  0E00               	movlw	0
  9828   00280E  6E15               	movwf	___flmul@a^0,c
  9829   002810  0E00               	movlw	0
  9830   002812  6E16               	movwf	(___flmul@a+1)^0,c
  9831   002814  0E00               	movlw	0
  9832   002816  6E17               	movwf	(___flmul@a+2)^0,c
  9833   002818  0E00               	movlw	0
  9834   00281A  6E18               	movwf	(___flmul@a+3)^0,c
  9835   00281C                     l1360:
  9836   00281C  5022               	movf	___flmul@aexp^0,w,c
  9837   00281E  B4D8               	btfsc	status,2,c
  9838   002820  EF14  F014         	goto	u3971
  9839   002824  EF16  F014         	goto	u3970
  9840   002828                     u3971:
  9841   002828  EF1E  F014         	goto	l4437
  9842   00282C                     u3970:
  9843   00282C  5023               	movf	___flmul@bexp^0,w,c
  9844   00282E  A4D8               	btfss	status,2,c
  9845   002830  EF1C  F014         	goto	u3981
  9846   002834  EF1E  F014         	goto	u3980
  9847   002838                     u3981:
  9848   002838  EF28  F014         	goto	l4441
  9849   00283C                     u3980:
  9850   00283C                     l4437:
  9851   00283C  0E00               	movlw	0
  9852   00283E  6E11               	movwf	?___flmul^0,c
  9853   002840  0E00               	movlw	0
  9854   002842  6E12               	movwf	(?___flmul+1)^0,c
  9855   002844  0E00               	movlw	0
  9856   002846  6E13               	movwf	(?___flmul+2)^0,c
  9857   002848  0E00               	movlw	0
  9858   00284A  6E14               	movwf	(?___flmul+3)^0,c
  9859   00284C  EFC0  F015         	goto	l1364
  9860   002850                     l4441:
  9861   002850  5017               	movf	(___flmul@a+2)^0,w,c
  9862   002852  0211               	mulwf	___flmul@b^0,c
  9863   002854  CFF3 F028          	movff	prodl,___flmul@temp
  9864   002858  CFF4 F029          	movff	prodh,___flmul@temp+1
  9865   00285C  5028               	movf	___flmul@temp^0,w,c
  9866   00285E  6E1E               	movwf	___flmul@grs^0,c
  9867   002860  6A1F               	clrf	(___flmul@grs+1)^0,c
  9868   002862  6A20               	clrf	(___flmul@grs+2)^0,c
  9869   002864  6A21               	clrf	(___flmul@grs+3)^0,c
  9870   002866  5029               	movf	(___flmul@temp+1)^0,w,c
  9871   002868  6E24               	movwf	___flmul@prod^0,c
  9872   00286A  6A25               	clrf	(___flmul@prod+1)^0,c
  9873   00286C  6A26               	clrf	(___flmul@prod+2)^0,c
  9874   00286E  6A27               	clrf	(___flmul@prod+3)^0,c
  9875   002870  5016               	movf	(___flmul@a+1)^0,w,c
  9876   002872  0212               	mulwf	(___flmul@b+1)^0,c
  9877   002874  CFF3 F028          	movff	prodl,___flmul@temp
  9878   002878  CFF4 F029          	movff	prodh,___flmul@temp+1
  9879   00287C  5028               	movf	___flmul@temp^0,w,c
  9880   00287E  261E               	addwf	___flmul@grs^0,f,c
  9881   002880  0E00               	movlw	0
  9882   002882  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9883   002884  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9884   002886  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9885   002888  5029               	movf	(___flmul@temp+1)^0,w,c
  9886   00288A  2624               	addwf	___flmul@prod^0,f,c
  9887   00288C  0E00               	movlw	0
  9888   00288E  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9889   002890  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9890   002892  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9891   002894  5015               	movf	___flmul@a^0,w,c
  9892   002896  0213               	mulwf	(___flmul@b+2)^0,c
  9893   002898  CFF3 F028          	movff	prodl,___flmul@temp
  9894   00289C  CFF4 F029          	movff	prodh,___flmul@temp+1
  9895   0028A0  5028               	movf	___flmul@temp^0,w,c
  9896   0028A2  261E               	addwf	___flmul@grs^0,f,c
  9897   0028A4  0E00               	movlw	0
  9898   0028A6  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9899   0028A8  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9900   0028AA  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9901   0028AC  5029               	movf	(___flmul@temp+1)^0,w,c
  9902   0028AE  2624               	addwf	___flmul@prod^0,f,c
  9903   0028B0  0E00               	movlw	0
  9904   0028B2  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9905   0028B4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9906   0028B6  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9907   0028B8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9908   0028BC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9909   0028C0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9910   0028C4  6A1E               	clrf	___flmul@grs^0,c
  9911   0028C6  5015               	movf	___flmul@a^0,w,c
  9912   0028C8  0212               	mulwf	(___flmul@b+1)^0,c
  9913   0028CA  CFF3 F028          	movff	prodl,___flmul@temp
  9914   0028CE  CFF4 F029          	movff	prodh,___flmul@temp+1
  9915   0028D2  5028               	movf	___flmul@temp^0,w,c
  9916   0028D4  261E               	addwf	___flmul@grs^0,f,c
  9917   0028D6  5029               	movf	(___flmul@temp+1)^0,w,c
  9918   0028D8  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9919   0028DA  0E00               	movlw	0
  9920   0028DC  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9921   0028DE  0E00               	movlw	0
  9922   0028E0  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9923   0028E2  5016               	movf	(___flmul@a+1)^0,w,c
  9924   0028E4  0211               	mulwf	___flmul@b^0,c
  9925   0028E6  CFF3 F028          	movff	prodl,___flmul@temp
  9926   0028EA  CFF4 F029          	movff	prodh,___flmul@temp+1
  9927   0028EE  5028               	movf	___flmul@temp^0,w,c
  9928   0028F0  261E               	addwf	___flmul@grs^0,f,c
  9929   0028F2  5029               	movf	(___flmul@temp+1)^0,w,c
  9930   0028F4  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9931   0028F6  0E00               	movlw	0
  9932   0028F8  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9933   0028FA  0E00               	movlw	0
  9934   0028FC  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9935   0028FE  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9936   002902  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9937   002906  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9938   00290A  6A1E               	clrf	___flmul@grs^0,c
  9939   00290C  5015               	movf	___flmul@a^0,w,c
  9940   00290E  0211               	mulwf	___flmul@b^0,c
  9941   002910  CFF3 F028          	movff	prodl,___flmul@temp
  9942   002914  CFF4 F029          	movff	prodh,___flmul@temp+1
  9943   002918  5028               	movf	___flmul@temp^0,w,c
  9944   00291A  261E               	addwf	___flmul@grs^0,f,c
  9945   00291C  5029               	movf	(___flmul@temp+1)^0,w,c
  9946   00291E  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9947   002920  0E00               	movlw	0
  9948   002922  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9949   002924  0E00               	movlw	0
  9950   002926  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9951   002928  5017               	movf	(___flmul@a+2)^0,w,c
  9952   00292A  0212               	mulwf	(___flmul@b+1)^0,c
  9953   00292C  CFF3 F028          	movff	prodl,___flmul@temp
  9954   002930  CFF4 F029          	movff	prodh,___flmul@temp+1
  9955   002934  5028               	movf	___flmul@temp^0,w,c
  9956   002936  2624               	addwf	___flmul@prod^0,f,c
  9957   002938  5029               	movf	(___flmul@temp+1)^0,w,c
  9958   00293A  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9959   00293C  0E00               	movlw	0
  9960   00293E  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9961   002940  0E00               	movlw	0
  9962   002942  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9963   002944  5016               	movf	(___flmul@a+1)^0,w,c
  9964   002946  0213               	mulwf	(___flmul@b+2)^0,c
  9965   002948  CFF3 F028          	movff	prodl,___flmul@temp
  9966   00294C  CFF4 F029          	movff	prodh,___flmul@temp+1
  9967   002950  5028               	movf	___flmul@temp^0,w,c
  9968   002952  2624               	addwf	___flmul@prod^0,f,c
  9969   002954  5029               	movf	(___flmul@temp+1)^0,w,c
  9970   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9971   002958  0E00               	movlw	0
  9972   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9973   00295C  0E00               	movlw	0
  9974   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9975   002960  5017               	movf	(___flmul@a+2)^0,w,c
  9976   002962  0213               	mulwf	(___flmul@b+2)^0,c
  9977   002964  CFF3 F028          	movff	prodl,___flmul@temp
  9978   002968  CFF4 F029          	movff	prodh,___flmul@temp+1
  9979   00296C  5028               	movf	___flmul@temp^0,w,c
  9980   00296E  6E19               	movwf	??___flmul^0,c
  9981   002970  5029               	movf	(___flmul@temp+1)^0,w,c
  9982   002972  6E1A               	movwf	(??___flmul+1)^0,c
  9983   002974  6A1B               	clrf	(??___flmul+2)^0,c
  9984   002976  6A1C               	clrf	(??___flmul+3)^0,c
  9985   002978  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  9986   00297C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  9987   002980  C019  F01A         	movff	??___flmul,??___flmul+1
  9988   002984  6A19               	clrf	??___flmul^0,c
  9989   002986  5019               	movf	??___flmul^0,w,c
  9990   002988  2624               	addwf	___flmul@prod^0,f,c
  9991   00298A  501A               	movf	(??___flmul+1)^0,w,c
  9992   00298C  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9993   00298E  501B               	movf	(??___flmul+2)^0,w,c
  9994   002990  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9995   002992  501C               	movf	(??___flmul+3)^0,w,c
  9996   002994  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9997   002996  C01E  F019         	movff	___flmul@grs,??___flmul
  9998   00299A  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  9999   00299E  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 10000   0029A2  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 10001   0029A6  0E19               	movlw	25
 10002   0029A8  EFDB  F014         	goto	u3990
 10003   0029AC                     u3995:
 10004   0029AC  90D8               	bcf	status,0,c
 10005   0029AE  321C               	rrcf	(??___flmul+3)^0,f,c
 10006   0029B0  321B               	rrcf	(??___flmul+2)^0,f,c
 10007   0029B2  321A               	rrcf	(??___flmul+1)^0,f,c
 10008   0029B4  3219               	rrcf	??___flmul^0,f,c
 10009   0029B6                     u3990:
 10010   0029B6  2EE8               	decfsz	wreg,f,c
 10011   0029B8  EFD6  F014         	goto	u3995
 10012   0029BC  5019               	movf	??___flmul^0,w,c
 10013   0029BE  2624               	addwf	___flmul@prod^0,f,c
 10014   0029C0  501A               	movf	(??___flmul+1)^0,w,c
 10015   0029C2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10016   0029C4  501B               	movf	(??___flmul+2)^0,w,c
 10017   0029C6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10018   0029C8  501C               	movf	(??___flmul+3)^0,w,c
 10019   0029CA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10020   0029CC  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10021   0029D0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10022   0029D4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10023   0029D8  6A1E               	clrf	___flmul@grs^0,c
 10024   0029DA  5022               	movf	___flmul@aexp^0,w,c
 10025   0029DC  C023  F019         	movff	___flmul@bexp,??___flmul
 10026   0029E0  6A1A               	clrf	(??___flmul+1)^0,c
 10027   0029E2  2619               	addwf	??___flmul^0,f,c
 10028   0029E4  0E00               	movlw	0
 10029   0029E6  221A               	addwfc	(??___flmul+1)^0,f,c
 10030   0029E8  0E82               	movlw	130
 10031   0029EA  2419               	addwf	??___flmul^0,w,c
 10032   0029EC  6E28               	movwf	___flmul@temp^0,c
 10033   0029EE  0EFF               	movlw	255
 10034   0029F0  201A               	addwfc	(??___flmul+1)^0,w,c
 10035   0029F2  6E29               	movwf	(___flmul@temp+1)^0,c
 10036   0029F4  EF11  F015         	goto	l4489
 10037   0029F8                     l4483:
 10038   0029F8  90D8               	bcf	status,0,c
 10039   0029FA  3624               	rlcf	___flmul@prod^0,f,c
 10040   0029FC  3625               	rlcf	(___flmul@prod+1)^0,f,c
 10041   0029FE  3626               	rlcf	(___flmul@prod+2)^0,f,c
 10042   002A00  3627               	rlcf	(___flmul@prod+3)^0,f,c
 10043   002A02  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10044   002A04  EF06  F015         	goto	u4001
 10045   002A08  EF08  F015         	goto	u4000
 10046   002A0C                     u4001:
 10047   002A0C  EF09  F015         	goto	l1367
 10048   002A10                     u4000:
 10049   002A10  8024               	bsf	___flmul@prod^0,0,c
 10050   002A12                     l1367:
 10051   002A12  90D8               	bcf	status,0,c
 10052   002A14  361E               	rlcf	___flmul@grs^0,f,c
 10053   002A16  361F               	rlcf	(___flmul@grs+1)^0,f,c
 10054   002A18  3620               	rlcf	(___flmul@grs+2)^0,f,c
 10055   002A1A  3621               	rlcf	(___flmul@grs+3)^0,f,c
 10056   002A1C  0628               	decf	___flmul@temp^0,f,c
 10057   002A1E  A0D8               	btfss	status,0,c
 10058   002A20  0629               	decf	(___flmul@temp+1)^0,f,c
 10059   002A22                     l4489:
 10060   002A22  AE26               	btfss	(___flmul@prod+2)^0,7,c
 10061   002A24  EF16  F015         	goto	u4011
 10062   002A28  EF18  F015         	goto	u4010
 10063   002A2C                     u4011:
 10064   002A2C  EFFC  F014         	goto	l4483
 10065   002A30                     u4010:
 10066   002A30  0E00               	movlw	0
 10067   002A32  6E22               	movwf	___flmul@aexp^0,c
 10068   002A34  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10069   002A36  EF1F  F015         	goto	u4021
 10070   002A3A  EF21  F015         	goto	u4020
 10071   002A3E                     u4021:
 10072   002A3E  EF45  F015         	goto	l1369
 10073   002A42                     u4020:
 10074   002A42  0EFF               	movlw	255
 10075   002A44  141E               	andwf	___flmul@grs^0,w,c
 10076   002A46  6E19               	movwf	??___flmul^0,c
 10077   002A48  0EFF               	movlw	255
 10078   002A4A  141F               	andwf	(___flmul@grs+1)^0,w,c
 10079   002A4C  6E1A               	movwf	(??___flmul+1)^0,c
 10080   002A4E  0EFF               	movlw	255
 10081   002A50  1420               	andwf	(___flmul@grs+2)^0,w,c
 10082   002A52  6E1B               	movwf	(??___flmul+2)^0,c
 10083   002A54  0E7F               	movlw	127
 10084   002A56  1421               	andwf	(___flmul@grs+3)^0,w,c
 10085   002A58  6E1C               	movwf	(??___flmul+3)^0,c
 10086   002A5A  5019               	movf	??___flmul^0,w,c
 10087   002A5C  101A               	iorwf	(??___flmul+1)^0,w,c
 10088   002A5E  101B               	iorwf	(??___flmul+2)^0,w,c
 10089   002A60  101C               	iorwf	(??___flmul+3)^0,w,c
 10090   002A62  B4D8               	btfsc	status,2,c
 10091   002A64  EF36  F015         	goto	u4031
 10092   002A68  EF38  F015         	goto	u4030
 10093   002A6C                     u4031:
 10094   002A6C  EF3C  F015         	goto	l1370
 10095   002A70                     u4030:
 10096   002A70                     l4497:
 10097   002A70  0E01               	movlw	1
 10098   002A72  6E22               	movwf	___flmul@aexp^0,c
 10099   002A74  EF45  F015         	goto	l1369
 10100   002A78                     l1370:
 10101   002A78  A024               	btfss	___flmul@prod^0,0,c
 10102   002A7A  EF41  F015         	goto	u4041
 10103   002A7E  EF43  F015         	goto	u4040
 10104   002A82                     u4041:
 10105   002A82  EF45  F015         	goto	l1369
 10106   002A86                     u4040:
 10107   002A86  EF38  F015         	goto	l4497
 10108   002A8A                     l1369:
 10109   002A8A  5022               	movf	___flmul@aexp^0,w,c
 10110   002A8C  B4D8               	btfsc	status,2,c
 10111   002A8E  EF4B  F015         	goto	u4051
 10112   002A92  EF4D  F015         	goto	u4050
 10113   002A96                     u4051:
 10114   002A96  EF71  F015         	goto	l4509
 10115   002A9A                     u4050:
 10116   002A9A  0E01               	movlw	1
 10117   002A9C  2624               	addwf	___flmul@prod^0,f,c
 10118   002A9E  0E00               	movlw	0
 10119   002AA0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10120   002AA2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10121   002AA4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10122   002AA6  A027               	btfss	(___flmul@prod+3)^0,0,c
 10123   002AA8  EF58  F015         	goto	u4061
 10124   002AAC  EF5A  F015         	goto	u4060
 10125   002AB0                     u4061:
 10126   002AB0  EF71  F015         	goto	l4509
 10127   002AB4                     u4060:
 10128   002AB4  C024  F019         	movff	___flmul@prod,??___flmul
 10129   002AB8  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 10130   002ABC  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 10131   002AC0  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 10132   002AC4  341C               	rlcf	(??___flmul+3)^0,w,c
 10133   002AC6  321C               	rrcf	(??___flmul+3)^0,f,c
 10134   002AC8  321B               	rrcf	(??___flmul+2)^0,f,c
 10135   002ACA  321A               	rrcf	(??___flmul+1)^0,f,c
 10136   002ACC  3219               	rrcf	??___flmul^0,f,c
 10137   002ACE  C019  F024         	movff	??___flmul,___flmul@prod
 10138   002AD2  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 10139   002AD6  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 10140   002ADA  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 10141   002ADE  4A28               	infsnz	___flmul@temp^0,f,c
 10142   002AE0  2A29               	incf	(___flmul@temp+1)^0,f,c
 10143   002AE2                     l4509:
 10144   002AE2  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10145   002AE4  EF7C  F015         	goto	u4071
 10146   002AE8  5029               	movf	(___flmul@temp+1)^0,w,c
 10147   002AEA  E108               	bnz	u4070
 10148   002AEC  2828               	incf	___flmul@temp^0,w,c
 10149   002AEE  A0D8               	btfss	status,0,c
 10150   002AF0  EF7C  F015         	goto	u4071
 10151   002AF4  EF7E  F015         	goto	u4070
 10152   002AF8                     u4071:
 10153   002AF8  EF88  F015         	goto	l4513
 10154   002AFC                     u4070:
 10155   002AFC  0E00               	movlw	0
 10156   002AFE  6E24               	movwf	___flmul@prod^0,c
 10157   002B00  0E00               	movlw	0
 10158   002B02  6E25               	movwf	(___flmul@prod+1)^0,c
 10159   002B04  0E80               	movlw	128
 10160   002B06  6E26               	movwf	(___flmul@prod+2)^0,c
 10161   002B08  0E7F               	movlw	127
 10162   002B0A  6E27               	movwf	(___flmul@prod+3)^0,c
 10163   002B0C  EFB6  F015         	goto	l4525
 10164   002B10                     l4513:
 10165   002B10  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10166   002B12  EF95  F015         	goto	u4080
 10167   002B16  5029               	movf	(___flmul@temp+1)^0,w,c
 10168   002B18  E106               	bnz	u4081
 10169   002B1A  0428               	decf	___flmul@temp^0,w,c
 10170   002B1C  B0D8               	btfsc	status,0,c
 10171   002B1E  EF93  F015         	goto	u4081
 10172   002B22  EF95  F015         	goto	u4080
 10173   002B26                     u4081:
 10174   002B26  EFA1  F015         	goto	l1377
 10175   002B2A                     u4080:
 10176   002B2A  0E00               	movlw	0
 10177   002B2C  6E24               	movwf	___flmul@prod^0,c
 10178   002B2E  0E00               	movlw	0
 10179   002B30  6E25               	movwf	(___flmul@prod+1)^0,c
 10180   002B32  0E00               	movlw	0
 10181   002B34  6E26               	movwf	(___flmul@prod+2)^0,c
 10182   002B36  0E00               	movlw	0
 10183   002B38  6E27               	movwf	(___flmul@prod+3)^0,c
 10184   002B3A  0E00               	movlw	0
 10185   002B3C  6E1D               	movwf	___flmul@sign^0,c
 10186   002B3E  EFB6  F015         	goto	l4525
 10187   002B42                     l1377:
 10188   002B42  C028  F023         	movff	___flmul@temp,___flmul@bexp
 10189   002B46  0EFF               	movlw	255
 10190   002B48  1624               	andwf	___flmul@prod^0,f,c
 10191   002B4A  0EFF               	movlw	255
 10192   002B4C  1625               	andwf	(___flmul@prod+1)^0,f,c
 10193   002B4E  0E7F               	movlw	127
 10194   002B50  1626               	andwf	(___flmul@prod+2)^0,f,c
 10195   002B52  0E00               	movlw	0
 10196   002B54  1627               	andwf	(___flmul@prod+3)^0,f,c
 10197   002B56  A023               	btfss	___flmul@bexp^0,0,c
 10198   002B58  EFB0  F015         	goto	u4091
 10199   002B5C  EFB2  F015         	goto	u4090
 10200   002B60                     u4091:
 10201   002B60  EFB3  F015         	goto	l4523
 10202   002B64                     u4090:
 10203   002B64  8E26               	bsf	(___flmul@prod+2)^0,7,c
 10204   002B66                     l4523:
 10205   002B66  90D8               	bcf	status,0,c
 10206   002B68  3023               	rrcf	___flmul@bexp^0,w,c
 10207   002B6A  6E27               	movwf	(___flmul@prod+3)^0,c
 10208   002B6C                     l4525:
 10209   002B6C  501D               	movf	___flmul@sign^0,w,c
 10210   002B6E  1227               	iorwf	(___flmul@prod+3)^0,f,c
 10211   002B70  C024  F011         	movff	___flmul@prod,?___flmul
 10212   002B74  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 10213   002B78  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 10214   002B7C  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 10215   002B80                     l1364:
 10216   002B80  0012               	return		;funcret
 10217   002B82                     __end_of___flmul:
 10218                           	callstack 0
 10219                           
 10220 ;; *************** function ___flge *****************
 10221 ;; Defined at:
 10222 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  ff1             4   41[COMRAM] unsigned char 
 10225 ;;  ff2             4   45[COMRAM] unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10240 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10241 ;;Total ram usage:       12 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 1
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_Colour_decider
 10248 ;;		_efgtoa
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text40
 10253   004A32                     __ptext40:
 10254                           	callstack 0
 10255   004A32                     ___flge:
 10256                           	callstack 25
 10257   004A32  0E00               	movlw	0
 10258   004A34  142A               	andwf	___flge@ff1^0,w,c
 10259   004A36  6E32               	movwf	??___flge^0,c
 10260   004A38  0E00               	movlw	0
 10261   004A3A  142B               	andwf	(___flge@ff1+1)^0,w,c
 10262   004A3C  6E33               	movwf	(??___flge+1)^0,c
 10263   004A3E  0E80               	movlw	128
 10264   004A40  142C               	andwf	(___flge@ff1+2)^0,w,c
 10265   004A42  6E34               	movwf	(??___flge+2)^0,c
 10266   004A44  0E7F               	movlw	127
 10267   004A46  142D               	andwf	(___flge@ff1+3)^0,w,c
 10268   004A48  6E35               	movwf	(??___flge+3)^0,c
 10269   004A4A  5032               	movf	??___flge^0,w,c
 10270   004A4C  1033               	iorwf	(??___flge+1)^0,w,c
 10271   004A4E  1034               	iorwf	(??___flge+2)^0,w,c
 10272   004A50  1035               	iorwf	(??___flge+3)^0,w,c
 10273   004A52  A4D8               	btfss	status,2,c
 10274   004A54  EF2E  F025         	goto	u4131
 10275   004A58  EF30  F025         	goto	u4130
 10276   004A5C                     u4131:
 10277   004A5C  EF38  F025         	goto	l4557
 10278   004A60                     u4130:
 10279   004A60  0E00               	movlw	0
 10280   004A62  6E2A               	movwf	___flge@ff1^0,c
 10281   004A64  0E00               	movlw	0
 10282   004A66  6E2B               	movwf	(___flge@ff1+1)^0,c
 10283   004A68  0E00               	movlw	0
 10284   004A6A  6E2C               	movwf	(___flge@ff1+2)^0,c
 10285   004A6C  0E00               	movlw	0
 10286   004A6E  6E2D               	movwf	(___flge@ff1+3)^0,c
 10287   004A70                     l4557:
 10288   004A70  0E00               	movlw	0
 10289   004A72  142E               	andwf	___flge@ff2^0,w,c
 10290   004A74  6E32               	movwf	??___flge^0,c
 10291   004A76  0E00               	movlw	0
 10292   004A78  142F               	andwf	(___flge@ff2+1)^0,w,c
 10293   004A7A  6E33               	movwf	(??___flge+1)^0,c
 10294   004A7C  0E80               	movlw	128
 10295   004A7E  1430               	andwf	(___flge@ff2+2)^0,w,c
 10296   004A80  6E34               	movwf	(??___flge+2)^0,c
 10297   004A82  0E7F               	movlw	127
 10298   004A84  1431               	andwf	(___flge@ff2+3)^0,w,c
 10299   004A86  6E35               	movwf	(??___flge+3)^0,c
 10300   004A88  5032               	movf	??___flge^0,w,c
 10301   004A8A  1033               	iorwf	(??___flge+1)^0,w,c
 10302   004A8C  1034               	iorwf	(??___flge+2)^0,w,c
 10303   004A8E  1035               	iorwf	(??___flge+3)^0,w,c
 10304   004A90  A4D8               	btfss	status,2,c
 10305   004A92  EF4D  F025         	goto	u4141
 10306   004A96  EF4F  F025         	goto	u4140
 10307   004A9A                     u4141:
 10308   004A9A  EF57  F025         	goto	l4561
 10309   004A9E                     u4140:
 10310   004A9E  0E00               	movlw	0
 10311   004AA0  6E2E               	movwf	___flge@ff2^0,c
 10312   004AA2  0E00               	movlw	0
 10313   004AA4  6E2F               	movwf	(___flge@ff2+1)^0,c
 10314   004AA6  0E00               	movlw	0
 10315   004AA8  6E30               	movwf	(___flge@ff2+2)^0,c
 10316   004AAA  0E00               	movlw	0
 10317   004AAC  6E31               	movwf	(___flge@ff2+3)^0,c
 10318   004AAE                     l4561:
 10319   004AAE  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 10320   004AB0  EF5C  F025         	goto	u4151
 10321   004AB4  EF5E  F025         	goto	u4150
 10322   004AB8                     u4151:
 10323   004AB8  EF67  F025         	goto	l4565
 10324   004ABC                     u4150:
 10325   004ABC  6C2A               	negf	___flge@ff1^0,c
 10326   004ABE  1E2B               	comf	(___flge@ff1+1)^0,f,c
 10327   004AC0  B0D8               	btfsc	status,0,c
 10328   004AC2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 10329   004AC4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 10330   004AC6  B0D8               	btfsc	status,0,c
 10331   004AC8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 10332   004ACA  0E80               	movlw	128
 10333   004ACC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 10334   004ACE                     l4565:
 10335   004ACE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 10336   004AD0  EF6C  F025         	goto	u4161
 10337   004AD4  EF6E  F025         	goto	u4160
 10338   004AD8                     u4161:
 10339   004AD8  EF77  F025         	goto	l1011
 10340   004ADC                     u4160:
 10341   004ADC  6C2E               	negf	___flge@ff2^0,c
 10342   004ADE  1E2F               	comf	(___flge@ff2+1)^0,f,c
 10343   004AE0  B0D8               	btfsc	status,0,c
 10344   004AE2  2A2F               	incf	(___flge@ff2+1)^0,f,c
 10345   004AE4  1E30               	comf	(___flge@ff2+2)^0,f,c
 10346   004AE6  B0D8               	btfsc	status,0,c
 10347   004AE8  2A30               	incf	(___flge@ff2+2)^0,f,c
 10348   004AEA  0E80               	movlw	128
 10349   004AEC  5631               	subfwb	(___flge@ff2+3)^0,f,c
 10350   004AEE                     l1011:
 10351   004AEE  0E00               	movlw	0
 10352   004AF0  1A2A               	xorwf	___flge@ff1^0,f,c
 10353   004AF2  0E00               	movlw	0
 10354   004AF4  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 10355   004AF6  0E00               	movlw	0
 10356   004AF8  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 10357   004AFA  0E80               	movlw	128
 10358   004AFC  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 10359   004AFE  0E00               	movlw	0
 10360   004B00  1A2E               	xorwf	___flge@ff2^0,f,c
 10361   004B02  0E00               	movlw	0
 10362   004B04  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 10363   004B06  0E00               	movlw	0
 10364   004B08  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 10365   004B0A  0E80               	movlw	128
 10366   004B0C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 10367   004B0E  502E               	movf	___flge@ff2^0,w,c
 10368   004B10  5C2A               	subwf	___flge@ff1^0,w,c
 10369   004B12  502F               	movf	(___flge@ff2+1)^0,w,c
 10370   004B14  582B               	subwfb	(___flge@ff1+1)^0,w,c
 10371   004B16  5030               	movf	(___flge@ff2+2)^0,w,c
 10372   004B18  582C               	subwfb	(___flge@ff1+2)^0,w,c
 10373   004B1A  5031               	movf	(___flge@ff2+3)^0,w,c
 10374   004B1C  582D               	subwfb	(___flge@ff1+3)^0,w,c
 10375   004B1E  B0D8               	btfsc	status,0,c
 10376   004B20  EF94  F025         	goto	u4171
 10377   004B24  EF96  F025         	goto	u4170
 10378   004B28                     u4171:
 10379   004B28  EF99  F025         	goto	l4571
 10380   004B2C                     u4170:
 10381   004B2C  90D8               	bcf	status,0,c
 10382   004B2E  EF9A  F025         	goto	l1016
 10383   004B32                     l4571:
 10384   004B32  80D8               	bsf	status,0,c
 10385   004B34                     l1016:
 10386   004B34  0012               	return		;funcret
 10387   004B36                     __end_of___flge:
 10388                           	callstack 0
 10389                           
 10390 ;; *************** function ___fleq *****************
 10391 ;; Defined at:
 10392 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  ff1             4   49[COMRAM] unsigned char 
 10395 ;;  ff2             4   53[COMRAM] unsigned char 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;		None               void
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, status,0
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;Total ram usage:       12 bytes
 10412 ;; Hardware stack levels used: 1
 10413 ;; Hardware stack levels required when called: 1
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_Colour_decider
 10418 ;;		_efgtoa
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text41
 10423   004F1C                     __ptext41:
 10424                           	callstack 0
 10425   004F1C                     ___fleq:
 10426                           	callstack 25
 10427   004F1C  0E00               	movlw	0
 10428   004F1E  1432               	andwf	___fleq@ff1^0,w,c
 10429   004F20  6E3A               	movwf	??___fleq^0,c
 10430   004F22  0E00               	movlw	0
 10431   004F24  1433               	andwf	(___fleq@ff1+1)^0,w,c
 10432   004F26  6E3B               	movwf	(??___fleq+1)^0,c
 10433   004F28  0E80               	movlw	128
 10434   004F2A  1434               	andwf	(___fleq@ff1+2)^0,w,c
 10435   004F2C  6E3C               	movwf	(??___fleq+2)^0,c
 10436   004F2E  0E7F               	movlw	127
 10437   004F30  1435               	andwf	(___fleq@ff1+3)^0,w,c
 10438   004F32  6E3D               	movwf	(??___fleq+3)^0,c
 10439   004F34  503A               	movf	??___fleq^0,w,c
 10440   004F36  103B               	iorwf	(??___fleq+1)^0,w,c
 10441   004F38  103C               	iorwf	(??___fleq+2)^0,w,c
 10442   004F3A  103D               	iorwf	(??___fleq+3)^0,w,c
 10443   004F3C  A4D8               	btfss	status,2,c
 10444   004F3E  EFA3  F027         	goto	u4101
 10445   004F42  EFA5  F027         	goto	u4100
 10446   004F46                     u4101:
 10447   004F46  EFAD  F027         	goto	l4541
 10448   004F4A                     u4100:
 10449   004F4A  0E00               	movlw	0
 10450   004F4C  6E32               	movwf	___fleq@ff1^0,c
 10451   004F4E  0E00               	movlw	0
 10452   004F50  6E33               	movwf	(___fleq@ff1+1)^0,c
 10453   004F52  0E00               	movlw	0
 10454   004F54  6E34               	movwf	(___fleq@ff1+2)^0,c
 10455   004F56  0E00               	movlw	0
 10456   004F58  6E35               	movwf	(___fleq@ff1+3)^0,c
 10457   004F5A                     l4541:
 10458   004F5A  0E00               	movlw	0
 10459   004F5C  1436               	andwf	___fleq@ff2^0,w,c
 10460   004F5E  6E3A               	movwf	??___fleq^0,c
 10461   004F60  0E00               	movlw	0
 10462   004F62  1437               	andwf	(___fleq@ff2+1)^0,w,c
 10463   004F64  6E3B               	movwf	(??___fleq+1)^0,c
 10464   004F66  0E80               	movlw	128
 10465   004F68  1438               	andwf	(___fleq@ff2+2)^0,w,c
 10466   004F6A  6E3C               	movwf	(??___fleq+2)^0,c
 10467   004F6C  0E7F               	movlw	127
 10468   004F6E  1439               	andwf	(___fleq@ff2+3)^0,w,c
 10469   004F70  6E3D               	movwf	(??___fleq+3)^0,c
 10470   004F72  503A               	movf	??___fleq^0,w,c
 10471   004F74  103B               	iorwf	(??___fleq+1)^0,w,c
 10472   004F76  103C               	iorwf	(??___fleq+2)^0,w,c
 10473   004F78  103D               	iorwf	(??___fleq+3)^0,w,c
 10474   004F7A  A4D8               	btfss	status,2,c
 10475   004F7C  EFC2  F027         	goto	u4111
 10476   004F80  EFC4  F027         	goto	u4110
 10477   004F84                     u4111:
 10478   004F84  EFCC  F027         	goto	l4545
 10479   004F88                     u4110:
 10480   004F88  0E00               	movlw	0
 10481   004F8A  6E36               	movwf	___fleq@ff2^0,c
 10482   004F8C  0E00               	movlw	0
 10483   004F8E  6E37               	movwf	(___fleq@ff2+1)^0,c
 10484   004F90  0E00               	movlw	0
 10485   004F92  6E38               	movwf	(___fleq@ff2+2)^0,c
 10486   004F94  0E00               	movlw	0
 10487   004F96  6E39               	movwf	(___fleq@ff2+3)^0,c
 10488   004F98                     l4545:
 10489   004F98  5036               	movf	___fleq@ff2^0,w,c
 10490   004F9A  1832               	xorwf	___fleq@ff1^0,w,c
 10491   004F9C  E10F               	bnz	u4120
 10492   004F9E  5037               	movf	(___fleq@ff2+1)^0,w,c
 10493   004FA0  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 10494   004FA2  E10C               	bnz	u4120
 10495   004FA4  5038               	movf	(___fleq@ff2+2)^0,w,c
 10496   004FA6  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 10497   004FA8  E109               	bnz	u4120
 10498   004FAA  5039               	movf	(___fleq@ff2+3)^0,w,c
 10499   004FAC  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 10500   004FAE  B4D8               	btfsc	status,2,c
 10501   004FB0  EFDC  F027         	goto	u4121
 10502   004FB4  EFDE  F027         	goto	u4120
 10503   004FB8                     u4121:
 10504   004FB8  EFE1  F027         	goto	l4549
 10505   004FBC                     u4120:
 10506   004FBC  90D8               	bcf	status,0,c
 10507   004FBE  EFE2  F027         	goto	l1005
 10508   004FC2                     l4549:
 10509   004FC2  80D8               	bsf	status,0,c
 10510   004FC4                     l1005:
 10511   004FC4  0012               	return		;funcret
 10512   004FC6                     __end_of___fleq:
 10513                           	callstack 0
 10514                           
 10515 ;; *************** function ___fldiv *****************
 10516 ;; Defined at:
 10517 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  b               4   49[COMRAM] unsigned char 
 10520 ;;  a               4   53[COMRAM] unsigned char 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  grs             4   68[COMRAM] unsigned long 
 10523 ;;  rem             4   61[COMRAM] unsigned long 
 10524 ;;  new_exp         2   66[COMRAM] short 
 10525 ;;  aexp            1   73[COMRAM] unsigned char 
 10526 ;;  bexp            1   72[COMRAM] unsigned char 
 10527 ;;  sign            1   65[COMRAM] unsigned char 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  4   49[COMRAM] unsigned char 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10537 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10538 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;Total ram usage:       25 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; Hardware stack levels required when called: 1
 10544 ;; This function calls:
 10545 ;;		Nothing
 10546 ;; This function is called by:
 10547 ;;		_colour_rel
 10548 ;;		_Colour_decider
 10549 ;;		_efgtoa
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text42
 10554   002B82                     __ptext42:
 10555                           	callstack 0
 10556   002B82                     ___fldiv:
 10557                           	callstack 25
 10558   002B82  5035               	movf	(___fldiv@b+3)^0,w,c
 10559   002B84  0B80               	andlw	128
 10560   002B86  6E42               	movwf	___fldiv@sign^0,c
 10561   002B88  5035               	movf	(___fldiv@b+3)^0,w,c
 10562   002B8A  2435               	addwf	(___fldiv@b+3)^0,w,c
 10563   002B8C  6E49               	movwf	___fldiv@bexp^0,c
 10564   002B8E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 10565   002B90  EFCC  F015         	goto	u3681
 10566   002B94  EFCE  F015         	goto	u3680
 10567   002B98                     u3681:
 10568   002B98  EFCF  F015         	goto	l4269
 10569   002B9C                     u3680:
 10570   002B9C  8049               	bsf	___fldiv@bexp^0,0,c
 10571   002B9E                     l4269:
 10572   002B9E  5049               	movf	___fldiv@bexp^0,w,c
 10573   002BA0  B4D8               	btfsc	status,2,c
 10574   002BA2  EFD5  F015         	goto	u3691
 10575   002BA6  EFD7  F015         	goto	u3690
 10576   002BAA                     u3691:
 10577   002BAA  EFEC  F015         	goto	l4279
 10578   002BAE                     u3690:
 10579   002BAE  2849               	incf	___fldiv@bexp^0,w,c
 10580   002BB0  A4D8               	btfss	status,2,c
 10581   002BB2  EFDD  F015         	goto	u3701
 10582   002BB6  EFDF  F015         	goto	u3700
 10583   002BBA                     u3701:
 10584   002BBA  EFE7  F015         	goto	l4275
 10585   002BBE                     u3700:
 10586   002BBE  0E00               	movlw	0
 10587   002BC0  6E32               	movwf	___fldiv@b^0,c
 10588   002BC2  0E00               	movlw	0
 10589   002BC4  6E33               	movwf	(___fldiv@b+1)^0,c
 10590   002BC6  0E00               	movlw	0
 10591   002BC8  6E34               	movwf	(___fldiv@b+2)^0,c
 10592   002BCA  0E00               	movlw	0
 10593   002BCC  6E35               	movwf	(___fldiv@b+3)^0,c
 10594   002BCE                     l4275:
 10595   002BCE  8E34               	bsf	(___fldiv@b+2)^0,7,c
 10596   002BD0  0E00               	movlw	0
 10597   002BD2  6E35               	movwf	(___fldiv@b+3)^0,c
 10598   002BD4  EFF4  F015         	goto	l4281
 10599   002BD8                     l4279:
 10600   002BD8  0E00               	movlw	0
 10601   002BDA  6E32               	movwf	___fldiv@b^0,c
 10602   002BDC  0E00               	movlw	0
 10603   002BDE  6E33               	movwf	(___fldiv@b+1)^0,c
 10604   002BE0  0E00               	movlw	0
 10605   002BE2  6E34               	movwf	(___fldiv@b+2)^0,c
 10606   002BE4  0E00               	movlw	0
 10607   002BE6  6E35               	movwf	(___fldiv@b+3)^0,c
 10608   002BE8                     l4281:
 10609   002BE8  5039               	movf	(___fldiv@a+3)^0,w,c
 10610   002BEA  0B80               	andlw	128
 10611   002BEC  1A42               	xorwf	___fldiv@sign^0,f,c
 10612   002BEE  5039               	movf	(___fldiv@a+3)^0,w,c
 10613   002BF0  2439               	addwf	(___fldiv@a+3)^0,w,c
 10614   002BF2  6E4A               	movwf	___fldiv@aexp^0,c
 10615   002BF4  AE38               	btfss	(___fldiv@a+2)^0,7,c
 10616   002BF6  EFFF  F015         	goto	u3711
 10617   002BFA  EF01  F016         	goto	u3710
 10618   002BFE                     u3711:
 10619   002BFE  EF02  F016         	goto	l4289
 10620   002C02                     u3710:
 10621   002C02  804A               	bsf	___fldiv@aexp^0,0,c
 10622   002C04                     l4289:
 10623   002C04  504A               	movf	___fldiv@aexp^0,w,c
 10624   002C06  B4D8               	btfsc	status,2,c
 10625   002C08  EF08  F016         	goto	u3721
 10626   002C0C  EF0A  F016         	goto	u3720
 10627   002C10                     u3721:
 10628   002C10  EF1F  F016         	goto	l4299
 10629   002C14                     u3720:
 10630   002C14  284A               	incf	___fldiv@aexp^0,w,c
 10631   002C16  A4D8               	btfss	status,2,c
 10632   002C18  EF10  F016         	goto	u3731
 10633   002C1C  EF12  F016         	goto	u3730
 10634   002C20                     u3731:
 10635   002C20  EF1A  F016         	goto	l4295
 10636   002C24                     u3730:
 10637   002C24  0E00               	movlw	0
 10638   002C26  6E36               	movwf	___fldiv@a^0,c
 10639   002C28  0E00               	movlw	0
 10640   002C2A  6E37               	movwf	(___fldiv@a+1)^0,c
 10641   002C2C  0E00               	movlw	0
 10642   002C2E  6E38               	movwf	(___fldiv@a+2)^0,c
 10643   002C30  0E00               	movlw	0
 10644   002C32  6E39               	movwf	(___fldiv@a+3)^0,c
 10645   002C34                     l4295:
 10646   002C34  8E38               	bsf	(___fldiv@a+2)^0,7,c
 10647   002C36  0E00               	movlw	0
 10648   002C38  6E39               	movwf	(___fldiv@a+3)^0,c
 10649   002C3A  EF27  F016         	goto	l4301
 10650   002C3E                     l4299:
 10651   002C3E  0E00               	movlw	0
 10652   002C40  6E36               	movwf	___fldiv@a^0,c
 10653   002C42  0E00               	movlw	0
 10654   002C44  6E37               	movwf	(___fldiv@a+1)^0,c
 10655   002C46  0E00               	movlw	0
 10656   002C48  6E38               	movwf	(___fldiv@a+2)^0,c
 10657   002C4A  0E00               	movlw	0
 10658   002C4C  6E39               	movwf	(___fldiv@a+3)^0,c
 10659   002C4E                     l4301:
 10660   002C4E  5036               	movf	___fldiv@a^0,w,c
 10661   002C50  1037               	iorwf	(___fldiv@a+1)^0,w,c
 10662   002C52  1038               	iorwf	(___fldiv@a+2)^0,w,c
 10663   002C54  1039               	iorwf	(___fldiv@a+3)^0,w,c
 10664   002C56  A4D8               	btfss	status,2,c
 10665   002C58  EF30  F016         	goto	u3741
 10666   002C5C  EF32  F016         	goto	u3740
 10667   002C60                     u3741:
 10668   002C60  EF4A  F016         	goto	l4313
 10669   002C64                     u3740:
 10670   002C64  0E00               	movlw	0
 10671   002C66  6E32               	movwf	___fldiv@b^0,c
 10672   002C68  0E00               	movlw	0
 10673   002C6A  6E33               	movwf	(___fldiv@b+1)^0,c
 10674   002C6C  0E00               	movlw	0
 10675   002C6E  6E34               	movwf	(___fldiv@b+2)^0,c
 10676   002C70  0E00               	movlw	0
 10677   002C72  6E35               	movwf	(___fldiv@b+3)^0,c
 10678   002C74  0E80               	movlw	128
 10679   002C76  1234               	iorwf	(___fldiv@b+2)^0,f,c
 10680   002C78  0E7F               	movlw	127
 10681   002C7A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 10682   002C7C                     l4307:
 10683   002C7C  5042               	movf	___fldiv@sign^0,w,c
 10684   002C7E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 10685   002C80  C032  F032         	movff	___fldiv@b,?___fldiv
 10686   002C84  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 10687   002C88  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 10688   002C8C  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 10689   002C90  EF8D  F017         	goto	l1328
 10690   002C94                     l4313:
 10691   002C94  5049               	movf	___fldiv@bexp^0,w,c
 10692   002C96  A4D8               	btfss	status,2,c
 10693   002C98  EF50  F016         	goto	u3751
 10694   002C9C  EF52  F016         	goto	u3750
 10695   002CA0                     u3751:
 10696   002CA0  EF5C  F016         	goto	l4321
 10697   002CA4                     u3750:
 10698   002CA4  0E00               	movlw	0
 10699   002CA6  6E32               	movwf	?___fldiv^0,c
 10700   002CA8  0E00               	movlw	0
 10701   002CAA  6E33               	movwf	(?___fldiv+1)^0,c
 10702   002CAC  0E00               	movlw	0
 10703   002CAE  6E34               	movwf	(?___fldiv+2)^0,c
 10704   002CB0  0E00               	movlw	0
 10705   002CB2  6E35               	movwf	(?___fldiv+3)^0,c
 10706   002CB4  EF8D  F017         	goto	l1328
 10707   002CB8                     l4321:
 10708   002CB8  504A               	movf	___fldiv@aexp^0,w,c
 10709   002CBA  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 10710   002CBE  6A3B               	clrf	(??___fldiv+1)^0,c
 10711   002CC0  5E3A               	subwf	??___fldiv^0,f,c
 10712   002CC2  0E00               	movlw	0
 10713   002CC4  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 10714   002CC6  0E7F               	movlw	127
 10715   002CC8  243A               	addwf	??___fldiv^0,w,c
 10716   002CCA  6E43               	movwf	___fldiv@new_exp^0,c
 10717   002CCC  0E00               	movlw	0
 10718   002CCE  203B               	addwfc	(??___fldiv+1)^0,w,c
 10719   002CD0  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10720   002CD2  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 10721   002CD6  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 10722   002CDA  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 10723   002CDE  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 10724   002CE2  0E00               	movlw	0
 10725   002CE4  6E32               	movwf	___fldiv@b^0,c
 10726   002CE6  0E00               	movlw	0
 10727   002CE8  6E33               	movwf	(___fldiv@b+1)^0,c
 10728   002CEA  0E00               	movlw	0
 10729   002CEC  6E34               	movwf	(___fldiv@b+2)^0,c
 10730   002CEE  0E00               	movlw	0
 10731   002CF0  6E35               	movwf	(___fldiv@b+3)^0,c
 10732   002CF2  0E00               	movlw	0
 10733   002CF4  6E45               	movwf	___fldiv@grs^0,c
 10734   002CF6  0E00               	movlw	0
 10735   002CF8  6E46               	movwf	(___fldiv@grs+1)^0,c
 10736   002CFA  0E00               	movlw	0
 10737   002CFC  6E47               	movwf	(___fldiv@grs+2)^0,c
 10738   002CFE  0E00               	movlw	0
 10739   002D00  6E48               	movwf	(___fldiv@grs+3)^0,c
 10740   002D02  0E00               	movlw	0
 10741   002D04  6E4A               	movwf	___fldiv@aexp^0,c
 10742   002D06  EFBD  F016         	goto	l1330
 10743   002D0A                     l4331:
 10744   002D0A  504A               	movf	___fldiv@aexp^0,w,c
 10745   002D0C  B4D8               	btfsc	status,2,c
 10746   002D0E  EF8B  F016         	goto	u3761
 10747   002D12  EF8D  F016         	goto	u3760
 10748   002D16                     u3761:
 10749   002D16  EFA4  F016         	goto	l4339
 10750   002D1A                     u3760:
 10751   002D1A  90D8               	bcf	status,0,c
 10752   002D1C  363E               	rlcf	___fldiv@rem^0,f,c
 10753   002D1E  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 10754   002D20  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 10755   002D22  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 10756   002D24  90D8               	bcf	status,0,c
 10757   002D26  3632               	rlcf	___fldiv@b^0,f,c
 10758   002D28  3633               	rlcf	(___fldiv@b+1)^0,f,c
 10759   002D2A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 10760   002D2C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 10761   002D2E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10762   002D30  EF9C  F016         	goto	u3771
 10763   002D34  EF9E  F016         	goto	u3770
 10764   002D38                     u3771:
 10765   002D38  EF9F  F016         	goto	l1333
 10766   002D3C                     u3770:
 10767   002D3C  8032               	bsf	___fldiv@b^0,0,c
 10768   002D3E                     l1333:
 10769   002D3E  90D8               	bcf	status,0,c
 10770   002D40  3645               	rlcf	___fldiv@grs^0,f,c
 10771   002D42  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 10772   002D44  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 10773   002D46  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 10774   002D48                     l4339:
 10775   002D48  5036               	movf	___fldiv@a^0,w,c
 10776   002D4A  5C3E               	subwf	___fldiv@rem^0,w,c
 10777   002D4C  5037               	movf	(___fldiv@a+1)^0,w,c
 10778   002D4E  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 10779   002D50  5038               	movf	(___fldiv@a+2)^0,w,c
 10780   002D52  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 10781   002D54  5039               	movf	(___fldiv@a+3)^0,w,c
 10782   002D56  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 10783   002D58  A0D8               	btfss	status,0,c
 10784   002D5A  EFB1  F016         	goto	u3781
 10785   002D5E  EFB3  F016         	goto	u3780
 10786   002D62                     u3781:
 10787   002D62  EFBC  F016         	goto	l4345
 10788   002D66                     u3780:
 10789   002D66  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 10790   002D68  5036               	movf	___fldiv@a^0,w,c
 10791   002D6A  5E3E               	subwf	___fldiv@rem^0,f,c
 10792   002D6C  5037               	movf	(___fldiv@a+1)^0,w,c
 10793   002D6E  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 10794   002D70  5038               	movf	(___fldiv@a+2)^0,w,c
 10795   002D72  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 10796   002D74  5039               	movf	(___fldiv@a+3)^0,w,c
 10797   002D76  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 10798   002D78                     l4345:
 10799   002D78  2A4A               	incf	___fldiv@aexp^0,f,c
 10800   002D7A                     l1330:
 10801   002D7A  0E19               	movlw	25
 10802   002D7C  644A               	cpfsgt	___fldiv@aexp^0,c
 10803   002D7E  EFC3  F016         	goto	u3791
 10804   002D82  EFC5  F016         	goto	u3790
 10805   002D86                     u3791:
 10806   002D86  EF85  F016         	goto	l4331
 10807   002D8A                     u3790:
 10808   002D8A  503E               	movf	___fldiv@rem^0,w,c
 10809   002D8C  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 10810   002D8E  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 10811   002D90  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 10812   002D92  B4D8               	btfsc	status,2,c
 10813   002D94  EFCE  F016         	goto	u3801
 10814   002D98  EFD0  F016         	goto	u3800
 10815   002D9C                     u3801:
 10816   002D9C  EFE8  F016         	goto	l4357
 10817   002DA0                     u3800:
 10818   002DA0  8045               	bsf	___fldiv@grs^0,0,c
 10819   002DA2  EFE8  F016         	goto	l4357
 10820   002DA6                     l4351:
 10821   002DA6  90D8               	bcf	status,0,c
 10822   002DA8  3632               	rlcf	___fldiv@b^0,f,c
 10823   002DAA  3633               	rlcf	(___fldiv@b+1)^0,f,c
 10824   002DAC  3634               	rlcf	(___fldiv@b+2)^0,f,c
 10825   002DAE  3635               	rlcf	(___fldiv@b+3)^0,f,c
 10826   002DB0  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10827   002DB2  EFDD  F016         	goto	u3811
 10828   002DB6  EFDF  F016         	goto	u3810
 10829   002DBA                     u3811:
 10830   002DBA  EFE0  F016         	goto	l1339
 10831   002DBE                     u3810:
 10832   002DBE  8032               	bsf	___fldiv@b^0,0,c
 10833   002DC0                     l1339:
 10834   002DC0  90D8               	bcf	status,0,c
 10835   002DC2  3645               	rlcf	___fldiv@grs^0,f,c
 10836   002DC4  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 10837   002DC6  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 10838   002DC8  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 10839   002DCA  0643               	decf	___fldiv@new_exp^0,f,c
 10840   002DCC  A0D8               	btfss	status,0,c
 10841   002DCE  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 10842   002DD0                     l4357:
 10843   002DD0  AE34               	btfss	(___fldiv@b+2)^0,7,c
 10844   002DD2  EFED  F016         	goto	u3821
 10845   002DD6  EFEF  F016         	goto	u3820
 10846   002DDA                     u3821:
 10847   002DDA  EFD3  F016         	goto	l4351
 10848   002DDE                     u3820:
 10849   002DDE  0E00               	movlw	0
 10850   002DE0  6E4A               	movwf	___fldiv@aexp^0,c
 10851   002DE2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10852   002DE4  EFF6  F016         	goto	u3831
 10853   002DE8  EFF8  F016         	goto	u3830
 10854   002DEC                     u3831:
 10855   002DEC  EF1C  F017         	goto	l1341
 10856   002DF0                     u3830:
 10857   002DF0  0EFF               	movlw	255
 10858   002DF2  1445               	andwf	___fldiv@grs^0,w,c
 10859   002DF4  6E3A               	movwf	??___fldiv^0,c
 10860   002DF6  0EFF               	movlw	255
 10861   002DF8  1446               	andwf	(___fldiv@grs+1)^0,w,c
 10862   002DFA  6E3B               	movwf	(??___fldiv+1)^0,c
 10863   002DFC  0EFF               	movlw	255
 10864   002DFE  1447               	andwf	(___fldiv@grs+2)^0,w,c
 10865   002E00  6E3C               	movwf	(??___fldiv+2)^0,c
 10866   002E02  0E7F               	movlw	127
 10867   002E04  1448               	andwf	(___fldiv@grs+3)^0,w,c
 10868   002E06  6E3D               	movwf	(??___fldiv+3)^0,c
 10869   002E08  503A               	movf	??___fldiv^0,w,c
 10870   002E0A  103B               	iorwf	(??___fldiv+1)^0,w,c
 10871   002E0C  103C               	iorwf	(??___fldiv+2)^0,w,c
 10872   002E0E  103D               	iorwf	(??___fldiv+3)^0,w,c
 10873   002E10  B4D8               	btfsc	status,2,c
 10874   002E12  EF0D  F017         	goto	u3841
 10875   002E16  EF0F  F017         	goto	u3840
 10876   002E1A                     u3841:
 10877   002E1A  EF13  F017         	goto	l1342
 10878   002E1E                     u3840:
 10879   002E1E                     l4365:
 10880   002E1E  0E01               	movlw	1
 10881   002E20  6E4A               	movwf	___fldiv@aexp^0,c
 10882   002E22  EF1C  F017         	goto	l1341
 10883   002E26                     l1342:
 10884   002E26  A032               	btfss	___fldiv@b^0,0,c
 10885   002E28  EF18  F017         	goto	u3851
 10886   002E2C  EF1A  F017         	goto	u3850
 10887   002E30                     u3851:
 10888   002E30  EF1C  F017         	goto	l1341
 10889   002E34                     u3850:
 10890   002E34  EF0F  F017         	goto	l4365
 10891   002E38                     l1341:
 10892   002E38  504A               	movf	___fldiv@aexp^0,w,c
 10893   002E3A  B4D8               	btfsc	status,2,c
 10894   002E3C  EF22  F017         	goto	u3861
 10895   002E40  EF24  F017         	goto	u3860
 10896   002E44                     u3861:
 10897   002E44  EF48  F017         	goto	l4377
 10898   002E48                     u3860:
 10899   002E48  0E01               	movlw	1
 10900   002E4A  2632               	addwf	___fldiv@b^0,f,c
 10901   002E4C  0E00               	movlw	0
 10902   002E4E  2233               	addwfc	(___fldiv@b+1)^0,f,c
 10903   002E50  2234               	addwfc	(___fldiv@b+2)^0,f,c
 10904   002E52  2235               	addwfc	(___fldiv@b+3)^0,f,c
 10905   002E54  A035               	btfss	(___fldiv@b+3)^0,0,c
 10906   002E56  EF2F  F017         	goto	u3871
 10907   002E5A  EF31  F017         	goto	u3870
 10908   002E5E                     u3871:
 10909   002E5E  EF48  F017         	goto	l4377
 10910   002E62                     u3870:
 10911   002E62  C032  F03A         	movff	___fldiv@b,??___fldiv
 10912   002E66  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 10913   002E6A  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 10914   002E6E  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 10915   002E72  343D               	rlcf	(??___fldiv+3)^0,w,c
 10916   002E74  323D               	rrcf	(??___fldiv+3)^0,f,c
 10917   002E76  323C               	rrcf	(??___fldiv+2)^0,f,c
 10918   002E78  323B               	rrcf	(??___fldiv+1)^0,f,c
 10919   002E7A  323A               	rrcf	??___fldiv^0,f,c
 10920   002E7C  C03A  F032         	movff	??___fldiv,___fldiv@b
 10921   002E80  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 10922   002E84  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 10923   002E88  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 10924   002E8C  4A43               	infsnz	___fldiv@new_exp^0,f,c
 10925   002E8E  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 10926   002E90                     l4377:
 10927   002E90  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10928   002E92  EF53  F017         	goto	u3881
 10929   002E96  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 10930   002E98  E108               	bnz	u3880
 10931   002E9A  2843               	incf	___fldiv@new_exp^0,w,c
 10932   002E9C  A0D8               	btfss	status,0,c
 10933   002E9E  EF53  F017         	goto	u3881
 10934   002EA2  EF55  F017         	goto	u3880
 10935   002EA6                     u3881:
 10936   002EA6  EF60  F017         	goto	l4381
 10937   002EAA                     u3880:
 10938   002EAA  0E00               	movlw	0
 10939   002EAC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10940   002EAE  6843               	setf	___fldiv@new_exp^0,c
 10941   002EB0  0E00               	movlw	0
 10942   002EB2  6E32               	movwf	___fldiv@b^0,c
 10943   002EB4  0E00               	movlw	0
 10944   002EB6  6E33               	movwf	(___fldiv@b+1)^0,c
 10945   002EB8  0E00               	movlw	0
 10946   002EBA  6E34               	movwf	(___fldiv@b+2)^0,c
 10947   002EBC  0E00               	movlw	0
 10948   002EBE  6E35               	movwf	(___fldiv@b+3)^0,c
 10949   002EC0                     l4381:
 10950   002EC0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10951   002EC2  EF6D  F017         	goto	u3890
 10952   002EC6  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 10953   002EC8  E106               	bnz	u3891
 10954   002ECA  0443               	decf	___fldiv@new_exp^0,w,c
 10955   002ECC  B0D8               	btfsc	status,0,c
 10956   002ECE  EF6B  F017         	goto	u3891
 10957   002ED2  EF6D  F017         	goto	u3890
 10958   002ED6                     u3891:
 10959   002ED6  EF7B  F017         	goto	l4385
 10960   002EDA                     u3890:
 10961   002EDA  0E00               	movlw	0
 10962   002EDC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10963   002EDE  0E00               	movlw	0
 10964   002EE0  6E43               	movwf	___fldiv@new_exp^0,c
 10965   002EE2  0E00               	movlw	0
 10966   002EE4  6E32               	movwf	___fldiv@b^0,c
 10967   002EE6  0E00               	movlw	0
 10968   002EE8  6E33               	movwf	(___fldiv@b+1)^0,c
 10969   002EEA  0E00               	movlw	0
 10970   002EEC  6E34               	movwf	(___fldiv@b+2)^0,c
 10971   002EEE  0E00               	movlw	0
 10972   002EF0  6E35               	movwf	(___fldiv@b+3)^0,c
 10973   002EF2  0E00               	movlw	0
 10974   002EF4  6E42               	movwf	___fldiv@sign^0,c
 10975   002EF6                     l4385:
 10976   002EF6  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 10977   002EFA  A049               	btfss	___fldiv@bexp^0,0,c
 10978   002EFC  EF82  F017         	goto	u3901
 10979   002F00  EF84  F017         	goto	u3900
 10980   002F04                     u3901:
 10981   002F04  EF87  F017         	goto	l4391
 10982   002F08                     u3900:
 10983   002F08  8E34               	bsf	(___fldiv@b+2)^0,7,c
 10984   002F0A  EF88  F017         	goto	l4393
 10985   002F0E                     l4391:
 10986   002F0E  9E34               	bcf	(___fldiv@b+2)^0,7,c
 10987   002F10                     l4393:
 10988   002F10  90D8               	bcf	status,0,c
 10989   002F12  3049               	rrcf	___fldiv@bexp^0,w,c
 10990   002F14  6E35               	movwf	(___fldiv@b+3)^0,c
 10991   002F16  EF3E  F016         	goto	l4307
 10992   002F1A                     l1328:
 10993   002F1A  0012               	return		;funcret
 10994   002F1C                     __end_of___fldiv:
 10995                           	callstack 0
 10996                           
 10997 ;; *************** function _colour_move *****************
 10998 ;; Defined at:
 10999 ;;		line 8 in file "colour_move.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  recognized_c    2   44[COMRAM] int 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;		None
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      void 
 11006 ;; Registers used:
 11007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;Total ram usage:        2 bytes
 11018 ;; Hardware stack levels used: 1
 11019 ;; Hardware stack levels required when called: 7
 11020 ;; This function calls:
 11021 ;;		_BlueMove
 11022 ;;		_GreenMove
 11023 ;;		_LightBlueMove
 11024 ;;		_OrangeMove
 11025 ;;		_PinkMove
 11026 ;;		_RedMove
 11027 ;;		_RetryMove
 11028 ;;		_YellowMove
 11029 ;;		_go_Home
 11030 ;; This function is called by:
 11031 ;;		_main
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           	psect	text43
 11036   003AAE                     __ptext43:
 11037                           	callstack 0
 11038   003AAE                     _colour_move:
 11039                           	callstack 23
 11040   003AAE                     
 11041                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
 11042   003AAE  042D               	decf	colour_move@recognized_colour^0,w,c
 11043   003AB0  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11044   003AB2  A4D8               	btfss	status,2,c
 11045   003AB4  EF5E  F01D         	goto	u5631
 11046   003AB8  EF60  F01D         	goto	u5630
 11047   003ABC                     u5631:
 11048   003ABC  EF7E  F01D         	goto	l5709
 11049   003AC0                     u5630:
 11050   003AC0                     
 11051                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
 11052   003AC0  0E5D               	movlw	low _motorL
 11053   003AC2  6E20               	movwf	RedMove@mL^0,c
 11054   003AC4  0E01               	movlw	high _motorL
 11055   003AC6  6E21               	movwf	(RedMove@mL+1)^0,c
 11056   003AC8  0E54               	movlw	low _motorR
 11057   003ACA  6E22               	movwf	RedMove@mR^0,c
 11058   003ACC  0E01               	movlw	high _motorR
 11059   003ACE  6E23               	movwf	(RedMove@mR+1)^0,c
 11060   003AD0  EC31  F02F         	call	_RedMove	;wreg free
 11061   003AD4                     
 11062                           ;colour_move.c: 14:         TMR0H=0;
 11063   003AD4  0E00               	movlw	0
 11064   003AD6  6ED4               	movwf	212,c	;volatile
 11065   003AD8                     
 11066                           ;colour_move.c: 15:         TMR0L=0;
 11067   003AD8  0E00               	movlw	0
 11068   003ADA  6ED3               	movwf	211,c	;volatile
 11069   003ADC                     
 11070                           ;colour_move.c: 16:         WayBack[move_count]=1;
 11071   003ADC  0E16               	movlw	low _WayBack
 11072   003ADE  0101               	movlb	1	; () banked
 11073   003AE0  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11074   003AE2  6ED9               	movwf	fsr2l,c
 11075   003AE4  0E01               	movlw	high _WayBack
 11076   003AE6  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11077   003AE8  6EDA               	movwf	fsr2h,c
 11078   003AEA  0E01               	movlw	1
 11079   003AEC  6EDF               	movwf	indf2,c
 11080   003AEE                     l5707:
 11081                           
 11082                           ; BSR set to: 1
 11083                           ;colour_move.c: 17:         lost_count=0;
 11084   003AEE  0E00               	movlw	0
 11085   003AF0  0100               	movlb	0	; () banked
 11086   003AF2  6FEC               	movwf	(_lost_count+1)& (0+255),b
 11087   003AF4  0E00               	movlw	0
 11088   003AF6  6FEB               	movwf	_lost_count& (0+255),b
 11089                           
 11090                           ;colour_move.c: 18:     }
 11091   003AF8  EF92  F01E         	goto	l743
 11092   003AFC                     l5709:
 11093   003AFC  0E02               	movlw	2
 11094   003AFE  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11095   003B00  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11096   003B02  A4D8               	btfss	status,2,c
 11097   003B04  EF86  F01D         	goto	u5641
 11098   003B08  EF88  F01D         	goto	u5640
 11099   003B0C                     u5641:
 11100   003B0C  EFA1  F01D         	goto	l5721
 11101   003B10                     u5640:
 11102   003B10                     
 11103                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
 11104   003B10  0E5D               	movlw	low _motorL
 11105   003B12  6E20               	movwf	OrangeMove@mL^0,c
 11106   003B14  0E01               	movlw	high _motorL
 11107   003B16  6E21               	movwf	(OrangeMove@mL+1)^0,c
 11108   003B18  0E54               	movlw	low _motorR
 11109   003B1A  6E22               	movwf	OrangeMove@mR^0,c
 11110   003B1C  0E01               	movlw	high _motorR
 11111   003B1E  6E23               	movwf	(OrangeMove@mR+1)^0,c
 11112   003B20  ECA6  F02C         	call	_OrangeMove	;wreg free
 11113   003B24                     
 11114                           ;colour_move.c: 21:         TMR0H=0;
 11115   003B24  0E00               	movlw	0
 11116   003B26  6ED4               	movwf	212,c	;volatile
 11117   003B28                     
 11118                           ;colour_move.c: 22:         TMR0L=0;
 11119   003B28  0E00               	movlw	0
 11120   003B2A  6ED3               	movwf	211,c	;volatile
 11121   003B2C                     
 11122                           ;colour_move.c: 23:         WayBack[move_count]=2;
 11123   003B2C  0E16               	movlw	low _WayBack
 11124   003B2E  0101               	movlb	1	; () banked
 11125   003B30  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11126   003B32  6ED9               	movwf	fsr2l,c
 11127   003B34  0E01               	movlw	high _WayBack
 11128   003B36  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11129   003B38  6EDA               	movwf	fsr2h,c
 11130   003B3A  0E02               	movlw	2
 11131   003B3C  6EDF               	movwf	indf2,c
 11132   003B3E  EF77  F01D         	goto	l5707
 11133   003B42                     l5721:
 11134   003B42  0E03               	movlw	3
 11135   003B44  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11136   003B46  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11137   003B48  A4D8               	btfss	status,2,c
 11138   003B4A  EFA9  F01D         	goto	u5651
 11139   003B4E  EFAB  F01D         	goto	u5650
 11140   003B52                     u5651:
 11141   003B52  EFC4  F01D         	goto	l5733
 11142   003B56                     u5650:
 11143   003B56                     
 11144                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
 11145   003B56  0E5D               	movlw	low _motorL
 11146   003B58  6E20               	movwf	YellowMove@mL^0,c
 11147   003B5A  0E01               	movlw	high _motorL
 11148   003B5C  6E21               	movwf	(YellowMove@mL+1)^0,c
 11149   003B5E  0E54               	movlw	low _motorR
 11150   003B60  6E22               	movwf	YellowMove@mR^0,c
 11151   003B62  0E01               	movlw	high _motorR
 11152   003B64  6E23               	movwf	(YellowMove@mR+1)^0,c
 11153   003B66  ECF8  F02C         	call	_YellowMove	;wreg free
 11154   003B6A                     
 11155                           ;colour_move.c: 28:         TMR0H=0;
 11156   003B6A  0E00               	movlw	0
 11157   003B6C  6ED4               	movwf	212,c	;volatile
 11158   003B6E                     
 11159                           ;colour_move.c: 29:         TMR0L=0;
 11160   003B6E  0E00               	movlw	0
 11161   003B70  6ED3               	movwf	211,c	;volatile
 11162   003B72                     
 11163                           ;colour_move.c: 30:         WayBack[move_count]=3;
 11164   003B72  0E16               	movlw	low _WayBack
 11165   003B74  0101               	movlb	1	; () banked
 11166   003B76  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11167   003B78  6ED9               	movwf	fsr2l,c
 11168   003B7A  0E01               	movlw	high _WayBack
 11169   003B7C  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11170   003B7E  6EDA               	movwf	fsr2h,c
 11171   003B80  0E03               	movlw	3
 11172   003B82  6EDF               	movwf	indf2,c
 11173   003B84  EF77  F01D         	goto	l5707
 11174   003B88                     l5733:
 11175   003B88  0E04               	movlw	4
 11176   003B8A  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11177   003B8C  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11178   003B8E  A4D8               	btfss	status,2,c
 11179   003B90  EFCC  F01D         	goto	u5661
 11180   003B94  EFCE  F01D         	goto	u5660
 11181   003B98                     u5661:
 11182   003B98  EFE7  F01D         	goto	l5745
 11183   003B9C                     u5660:
 11184   003B9C                     
 11185                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
 11186   003B9C  0E5D               	movlw	low _motorL
 11187   003B9E  6E20               	movwf	BlueMove@mL^0,c
 11188   003BA0  0E01               	movlw	high _motorL
 11189   003BA2  6E21               	movwf	(BlueMove@mL+1)^0,c
 11190   003BA4  0E54               	movlw	low _motorR
 11191   003BA6  6E22               	movwf	BlueMove@mR^0,c
 11192   003BA8  0E01               	movlw	high _motorR
 11193   003BAA  6E23               	movwf	(BlueMove@mR+1)^0,c
 11194   003BAC  EC0D  F02B         	call	_BlueMove	;wreg free
 11195   003BB0                     
 11196                           ;colour_move.c: 35:         TMR0H=0;
 11197   003BB0  0E00               	movlw	0
 11198   003BB2  6ED4               	movwf	212,c	;volatile
 11199   003BB4                     
 11200                           ;colour_move.c: 36:         TMR0L=0;
 11201   003BB4  0E00               	movlw	0
 11202   003BB6  6ED3               	movwf	211,c	;volatile
 11203   003BB8                     
 11204                           ;colour_move.c: 37:         WayBack[move_count]=4;
 11205   003BB8  0E16               	movlw	low _WayBack
 11206   003BBA  0101               	movlb	1	; () banked
 11207   003BBC  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11208   003BBE  6ED9               	movwf	fsr2l,c
 11209   003BC0  0E01               	movlw	high _WayBack
 11210   003BC2  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11211   003BC4  6EDA               	movwf	fsr2h,c
 11212   003BC6  0E04               	movlw	4
 11213   003BC8  6EDF               	movwf	indf2,c
 11214   003BCA  EF77  F01D         	goto	l5707
 11215   003BCE                     l5745:
 11216   003BCE  0E05               	movlw	5
 11217   003BD0  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11218   003BD2  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11219   003BD4  A4D8               	btfss	status,2,c
 11220   003BD6  EFEF  F01D         	goto	u5671
 11221   003BDA  EFF1  F01D         	goto	u5670
 11222   003BDE                     u5671:
 11223   003BDE  EF0A  F01E         	goto	l5757
 11224   003BE2                     u5670:
 11225   003BE2                     
 11226                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
 11227   003BE2  0E5D               	movlw	low _motorL
 11228   003BE4  6E20               	movwf	GreenMove@mL^0,c
 11229   003BE6  0E01               	movlw	high _motorL
 11230   003BE8  6E21               	movwf	(GreenMove@mL+1)^0,c
 11231   003BEA  0E54               	movlw	low _motorR
 11232   003BEC  6E22               	movwf	GreenMove@mR^0,c
 11233   003BEE  0E01               	movlw	high _motorR
 11234   003BF0  6E23               	movwf	(GreenMove@mR+1)^0,c
 11235   003BF2  EC50  F02F         	call	_GreenMove	;wreg free
 11236   003BF6                     
 11237                           ;colour_move.c: 42:         TMR0H=0;
 11238   003BF6  0E00               	movlw	0
 11239   003BF8  6ED4               	movwf	212,c	;volatile
 11240   003BFA                     
 11241                           ;colour_move.c: 43:         TMR0L=0;
 11242   003BFA  0E00               	movlw	0
 11243   003BFC  6ED3               	movwf	211,c	;volatile
 11244   003BFE                     
 11245                           ;colour_move.c: 44:         WayBack[move_count]=5;
 11246   003BFE  0E16               	movlw	low _WayBack
 11247   003C00  0101               	movlb	1	; () banked
 11248   003C02  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11249   003C04  6ED9               	movwf	fsr2l,c
 11250   003C06  0E01               	movlw	high _WayBack
 11251   003C08  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11252   003C0A  6EDA               	movwf	fsr2h,c
 11253   003C0C  0E05               	movlw	5
 11254   003C0E  6EDF               	movwf	indf2,c
 11255   003C10  EF77  F01D         	goto	l5707
 11256   003C14                     l5757:
 11257   003C14  0E06               	movlw	6
 11258   003C16  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11259   003C18  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11260   003C1A  A4D8               	btfss	status,2,c
 11261   003C1C  EF12  F01E         	goto	u5681
 11262   003C20  EF14  F01E         	goto	u5680
 11263   003C24                     u5681:
 11264   003C24  EF2D  F01E         	goto	l5769
 11265   003C28                     u5680:
 11266   003C28                     
 11267                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
 11268   003C28  0E5D               	movlw	low _motorL
 11269   003C2A  6E20               	movwf	LightBlueMove@mL^0,c
 11270   003C2C  0E01               	movlw	high _motorL
 11271   003C2E  6E21               	movwf	(LightBlueMove@mL+1)^0,c
 11272   003C30  0E54               	movlw	low _motorR
 11273   003C32  6E22               	movwf	LightBlueMove@mR^0,c
 11274   003C34  0E01               	movlw	high _motorR
 11275   003C36  6E23               	movwf	(LightBlueMove@mR+1)^0,c
 11276   003C38  ECCF  F02C         	call	_LightBlueMove	;wreg free
 11277   003C3C                     
 11278                           ;colour_move.c: 49:         TMR0H=0;
 11279   003C3C  0E00               	movlw	0
 11280   003C3E  6ED4               	movwf	212,c	;volatile
 11281   003C40                     
 11282                           ;colour_move.c: 50:         TMR0L=0;
 11283   003C40  0E00               	movlw	0
 11284   003C42  6ED3               	movwf	211,c	;volatile
 11285   003C44                     
 11286                           ;colour_move.c: 51:         WayBack[move_count]=6;
 11287   003C44  0E16               	movlw	low _WayBack
 11288   003C46  0101               	movlb	1	; () banked
 11289   003C48  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11290   003C4A  6ED9               	movwf	fsr2l,c
 11291   003C4C  0E01               	movlw	high _WayBack
 11292   003C4E  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11293   003C50  6EDA               	movwf	fsr2h,c
 11294   003C52  0E06               	movlw	6
 11295   003C54  6EDF               	movwf	indf2,c
 11296   003C56  EF77  F01D         	goto	l5707
 11297   003C5A                     l5769:
 11298   003C5A  0E07               	movlw	7
 11299   003C5C  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11300   003C5E  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11301   003C60  A4D8               	btfss	status,2,c
 11302   003C62  EF35  F01E         	goto	u5691
 11303   003C66  EF37  F01E         	goto	u5690
 11304   003C6A                     u5691:
 11305   003C6A  EF50  F01E         	goto	l5781
 11306   003C6E                     u5690:
 11307   003C6E                     
 11308                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
 11309   003C6E  0E5D               	movlw	low _motorL
 11310   003C70  6E20               	movwf	PinkMove@mL^0,c
 11311   003C72  0E01               	movlw	high _motorL
 11312   003C74  6E21               	movwf	(PinkMove@mL+1)^0,c
 11313   003C76  0E54               	movlw	low _motorR
 11314   003C78  6E22               	movwf	PinkMove@mR^0,c
 11315   003C7A  0E01               	movlw	high _motorR
 11316   003C7C  6E23               	movwf	(PinkMove@mR+1)^0,c
 11317   003C7E  EC21  F02D         	call	_PinkMove	;wreg free
 11318   003C82                     
 11319                           ;colour_move.c: 56:         TMR0H=0;
 11320   003C82  0E00               	movlw	0
 11321   003C84  6ED4               	movwf	212,c	;volatile
 11322   003C86                     
 11323                           ;colour_move.c: 57:         TMR0L=0;
 11324   003C86  0E00               	movlw	0
 11325   003C88  6ED3               	movwf	211,c	;volatile
 11326   003C8A                     
 11327                           ;colour_move.c: 58:         WayBack[move_count]=7;
 11328   003C8A  0E16               	movlw	low _WayBack
 11329   003C8C  0101               	movlb	1	; () banked
 11330   003C8E  25D6               	addwf	_move_count& (0+255),w,b	;volatile
 11331   003C90  6ED9               	movwf	fsr2l,c
 11332   003C92  0E01               	movlw	high _WayBack
 11333   003C94  21D7               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
 11334   003C96  6EDA               	movwf	fsr2h,c
 11335   003C98  0E07               	movlw	7
 11336   003C9A  6EDF               	movwf	indf2,c
 11337   003C9C  EF77  F01D         	goto	l5707
 11338   003CA0                     l5781:
 11339   003CA0  0E0A               	movlw	10
 11340   003CA2  182D               	xorwf	colour_move@recognized_colour^0,w,c
 11341   003CA4  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11342   003CA6  A4D8               	btfss	status,2,c
 11343   003CA8  EF58  F01E         	goto	u5701
 11344   003CAC  EF5A  F01E         	goto	u5700
 11345   003CB0                     u5701:
 11346   003CB0  EF87  F01E         	goto	l5795
 11347   003CB4                     u5700:
 11348   003CB4                     
 11349                           ;colour_move.c: 62:         lost_count++;
 11350   003CB4  0100               	movlb	0	; () banked
 11351   003CB6  4BEB               	infsnz	_lost_count& (0+255),f,b
 11352   003CB8  2BEC               	incf	(_lost_count+1)& (0+255),f,b
 11353   003CBA                     
 11354                           ; BSR set to: 0
 11355                           ;colour_move.c: 63:         if (lost_count>=3){
 11356   003CBA  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
 11357   003CBC  EF69  F01E         	goto	u5711
 11358   003CC0  51EC               	movf	(_lost_count+1)& (0+255),w,b
 11359   003CC2  E109               	bnz	u5710
 11360   003CC4  0E03               	movlw	3
 11361   003CC6  5DEB               	subwf	_lost_count& (0+255),w,b
 11362   003CC8  A0D8               	btfss	status,0,c
 11363   003CCA  EF69  F01E         	goto	u5711
 11364   003CCE  EF6B  F01E         	goto	u5710
 11365   003CD2                     u5711:
 11366   003CD2  EF77  F01E         	goto	l5789
 11367   003CD6                     u5710:
 11368   003CD6                     l5787:
 11369                           
 11370                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
 11371   003CD6  0E16               	movlw	low _WayBack
 11372   003CD8  6E24               	movwf	go_Home@WayBack^0,c
 11373   003CDA  0E01               	movlw	high _WayBack
 11374   003CDC  6E25               	movwf	(go_Home@WayBack+1)^0,c
 11375   003CDE  0E3C               	movlw	low _Time_forward
 11376   003CE0  6E26               	movwf	go_Home@Time_forward^0,c
 11377   003CE2  0E02               	movlw	high _Time_forward
 11378   003CE4  6E27               	movwf	(go_Home@Time_forward+1)^0,c
 11379   003CE6  ECA8  F01A         	call	_go_Home	;wreg free
 11380                           
 11381                           ;colour_move.c: 65:         }
 11382   003CEA  EF92  F01E         	goto	l743
 11383   003CEE                     l5789:
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
 11387   003CEE  0E5D               	movlw	low _motorL
 11388   003CF0  6E20               	movwf	RetryMove@mL^0,c
 11389   003CF2  0E01               	movlw	high _motorL
 11390   003CF4  6E21               	movwf	(RetryMove@mL+1)^0,c
 11391   003CF6  0E54               	movlw	low _motorR
 11392   003CF8  6E22               	movwf	RetryMove@mR^0,c
 11393   003CFA  0E01               	movlw	high _motorR
 11394   003CFC  6E23               	movwf	(RetryMove@mR+1)^0,c
 11395   003CFE  ECA5  F02A         	call	_RetryMove	;wreg free
 11396   003D02                     
 11397                           ;colour_move.c: 68:             TMR0H=0;
 11398   003D02  0E00               	movlw	0
 11399   003D04  6ED4               	movwf	212,c	;volatile
 11400   003D06                     
 11401                           ;colour_move.c: 69:             TMR0L=0;
 11402   003D06  0E00               	movlw	0
 11403   003D08  6ED3               	movwf	211,c	;volatile
 11404   003D0A  EF92  F01E         	goto	l743
 11405   003D0E                     l5795:
 11406   003D0E  502D               	movf	colour_move@recognized_colour^0,w,c
 11407   003D10  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
 11408   003D12  A4D8               	btfss	status,2,c
 11409   003D14  EF8E  F01E         	goto	u5721
 11410   003D18  EF90  F01E         	goto	u5720
 11411   003D1C                     u5721:
 11412   003D1C  EF92  F01E         	goto	l735
 11413   003D20                     u5720:
 11414   003D20  EF6B  F01E         	goto	l5787
 11415   003D24                     l735:
 11416   003D24                     l743:
 11417   003D24  0012               	return		;funcret
 11418   003D26                     __end_of_colour_move:
 11419                           	callstack 0
 11420                           
 11421 ;; *************** function _go_Home *****************
 11422 ;; Defined at:
 11423 ;;		line 4 in file "Memory.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
 11426 ;;		 -> WayBack(50), 
 11427 ;;  Time_forward    2   37[COMRAM] PTR int 
 11428 ;;		 -> Time_forward(100), 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  i               2   42[COMRAM] int 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11443 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11444 ;;Total ram usage:        9 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 6
 11447 ;; This function calls:
 11448 ;;		_BlueMove
 11449 ;;		_GreenMove
 11450 ;;		_LightBlueMove
 11451 ;;		_OrangeMove
 11452 ;;		_RedMove
 11453 ;;		_ReversePink
 11454 ;;		_ReverseYellow
 11455 ;;		_reverseDetect
 11456 ;;		_stop
 11457 ;;		_timed_forward
 11458 ;; This function is called by:
 11459 ;;		_main
 11460 ;;		_colour_move
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text44
 11465   003550                     __ptext44:
 11466                           	callstack 0
 11467   003550                     _go_Home:
 11468                           	callstack 24
 11469   003550                     
 11470                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
 11471   003550  0E5D               	movlw	low _motorL
 11472   003552  6E20               	movwf	BlueMove@mL^0,c
 11473   003554  0E01               	movlw	high _motorL
 11474   003556  6E21               	movwf	(BlueMove@mL+1)^0,c
 11475   003558  0E54               	movlw	low _motorR
 11476   00355A  6E22               	movwf	BlueMove@mR^0,c
 11477   00355C  0E01               	movlw	high _motorR
 11478   00355E  6E23               	movwf	(BlueMove@mR+1)^0,c
 11479   003560  EC0D  F02B         	call	_BlueMove	;wreg free
 11480   003564                     
 11481                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
 11482   003564  9ED5               	bcf	213,7,c	;volatile
 11483   003566                     
 11484                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
 11485   003566  C1D6  F02B         	movff	_move_count,go_Home@i	;volatile
 11486   00356A  C1D7  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
 11487   00356E                     l5447:
 11488   00356E  BE2C               	btfsc	(go_Home@i+1)^0,7,c
 11489   003570  EFBE  F01A         	goto	u5420
 11490   003574  EFBC  F01A         	goto	u5421
 11491   003578                     u5421:
 11492   003578  EFC0  F01A         	goto	l5451
 11493   00357C                     u5420:
 11494   00357C  EF17  F01C         	goto	l606
 11495   003580                     l5451:
 11496                           
 11497                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
 11498   003580  0E5D               	movlw	low _motorL
 11499   003582  6E14               	movwf	timed_forward@mL^0,c
 11500   003584  0E01               	movlw	high _motorL
 11501   003586  6E15               	movwf	(timed_forward@mL+1)^0,c
 11502   003588  0E54               	movlw	low _motorR
 11503   00358A  6E16               	movwf	timed_forward@mR^0,c
 11504   00358C  0E01               	movlw	high _motorR
 11505   00358E  6E17               	movwf	(timed_forward@mR+1)^0,c
 11506   003590  90D8               	bcf	status,0,c
 11507   003592  342B               	rlcf	go_Home@i^0,w,c
 11508   003594  6ED9               	movwf	fsr2l,c
 11509   003596  342C               	rlcf	(go_Home@i+1)^0,w,c
 11510   003598  6EDA               	movwf	fsr2h,c
 11511   00359A  5026               	movf	go_Home@Time_forward^0,w,c
 11512   00359C  26D9               	addwf	fsr2l,f,c
 11513   00359E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
 11514   0035A0  22DA               	addwfc	fsr2h,f,c
 11515   0035A2  CFDE F018          	movff	postinc2,timed_forward@time
 11516   0035A6  CFDD F019          	movff	postdec2,timed_forward@time+1
 11517   0035AA  ECE3  F027         	call	_timed_forward	;wreg free
 11518   0035AE                     
 11519                           ;Memory.c: 11:         if (WayBack[i-1]==1){
 11520   0035AE  502B               	movf	go_Home@i^0,w,c
 11521   0035B0  2424               	addwf	go_Home@WayBack^0,w,c
 11522   0035B2  6E28               	movwf	??_go_Home^0,c
 11523   0035B4  502C               	movf	(go_Home@i+1)^0,w,c
 11524   0035B6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11525   0035B8  6E29               	movwf	(??_go_Home+1)^0,c
 11526   0035BA  0EFF               	movlw	255
 11527   0035BC  2428               	addwf	??_go_Home^0,w,c
 11528   0035BE  6ED9               	movwf	fsr2l,c
 11529   0035C0  0EFF               	movlw	255
 11530   0035C2  2029               	addwfc	(??_go_Home+1)^0,w,c
 11531   0035C4  6EDA               	movwf	fsr2h,c
 11532   0035C6  04DE               	decf	postinc2,w,c
 11533   0035C8  A4D8               	btfss	status,2,c
 11534   0035CA  EFE9  F01A         	goto	u5431
 11535   0035CE  EFEB  F01A         	goto	u5430
 11536   0035D2                     u5431:
 11537   0035D2  EF01  F01B         	goto	l5457
 11538   0035D6                     u5430:
 11539   0035D6                     
 11540                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
 11541   0035D6  0E5D               	movlw	low _motorL
 11542   0035D8  6E1A               	movwf	reverseDetect@mL^0,c
 11543   0035DA  0E01               	movlw	high _motorL
 11544   0035DC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11545   0035DE  0E54               	movlw	low _motorR
 11546   0035E0  6E1C               	movwf	reverseDetect@mR^0,c
 11547   0035E2  0E01               	movlw	high _motorR
 11548   0035E4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11549   0035E6  ECA0  F02B         	call	_reverseDetect	;wreg free
 11550                           
 11551                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
 11552   0035EA  0E5D               	movlw	low _motorL
 11553   0035EC  6E20               	movwf	GreenMove@mL^0,c
 11554   0035EE  0E01               	movlw	high _motorL
 11555   0035F0  6E21               	movwf	(GreenMove@mL+1)^0,c
 11556   0035F2  0E54               	movlw	low _motorR
 11557   0035F4  6E22               	movwf	GreenMove@mR^0,c
 11558   0035F6  0E01               	movlw	high _motorR
 11559   0035F8  6E23               	movwf	(GreenMove@mR+1)^0,c
 11560   0035FA  EC50  F02F         	call	_GreenMove	;wreg free
 11561                           
 11562                           ;Memory.c: 14:         }
 11563   0035FE  EF03  F01C         	goto	l594
 11564   003602                     l5457:
 11565   003602  502B               	movf	go_Home@i^0,w,c
 11566   003604  2424               	addwf	go_Home@WayBack^0,w,c
 11567   003606  6E28               	movwf	??_go_Home^0,c
 11568   003608  502C               	movf	(go_Home@i+1)^0,w,c
 11569   00360A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11570   00360C  6E29               	movwf	(??_go_Home+1)^0,c
 11571   00360E  0EFF               	movlw	255
 11572   003610  2428               	addwf	??_go_Home^0,w,c
 11573   003612  6ED9               	movwf	fsr2l,c
 11574   003614  0EFF               	movlw	255
 11575   003616  2029               	addwfc	(??_go_Home+1)^0,w,c
 11576   003618  6EDA               	movwf	fsr2h,c
 11577   00361A  0E02               	movlw	2
 11578   00361C  18DE               	xorwf	postinc2,w,c
 11579   00361E  A4D8               	btfss	status,2,c
 11580   003620  EF14  F01B         	goto	u5441
 11581   003624  EF16  F01B         	goto	u5440
 11582   003628                     u5441:
 11583   003628  EF2C  F01B         	goto	l5461
 11584   00362C                     u5440:
 11585   00362C                     
 11586                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
 11587   00362C  0E5D               	movlw	low _motorL
 11588   00362E  6E1A               	movwf	reverseDetect@mL^0,c
 11589   003630  0E01               	movlw	high _motorL
 11590   003632  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11591   003634  0E54               	movlw	low _motorR
 11592   003636  6E1C               	movwf	reverseDetect@mR^0,c
 11593   003638  0E01               	movlw	high _motorR
 11594   00363A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11595   00363C  ECA0  F02B         	call	_reverseDetect	;wreg free
 11596                           
 11597                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
 11598   003640  0E5D               	movlw	low _motorL
 11599   003642  6E20               	movwf	LightBlueMove@mL^0,c
 11600   003644  0E01               	movlw	high _motorL
 11601   003646  6E21               	movwf	(LightBlueMove@mL+1)^0,c
 11602   003648  0E54               	movlw	low _motorR
 11603   00364A  6E22               	movwf	LightBlueMove@mR^0,c
 11604   00364C  0E01               	movlw	high _motorR
 11605   00364E  6E23               	movwf	(LightBlueMove@mR+1)^0,c
 11606   003650  ECCF  F02C         	call	_LightBlueMove	;wreg free
 11607                           
 11608                           ;Memory.c: 18:         }
 11609   003654  EF03  F01C         	goto	l594
 11610   003658                     l5461:
 11611   003658  502B               	movf	go_Home@i^0,w,c
 11612   00365A  2424               	addwf	go_Home@WayBack^0,w,c
 11613   00365C  6E28               	movwf	??_go_Home^0,c
 11614   00365E  502C               	movf	(go_Home@i+1)^0,w,c
 11615   003660  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11616   003662  6E29               	movwf	(??_go_Home+1)^0,c
 11617   003664  0EFF               	movlw	255
 11618   003666  2428               	addwf	??_go_Home^0,w,c
 11619   003668  6ED9               	movwf	fsr2l,c
 11620   00366A  0EFF               	movlw	255
 11621   00366C  2029               	addwfc	(??_go_Home+1)^0,w,c
 11622   00366E  6EDA               	movwf	fsr2h,c
 11623   003670  0E03               	movlw	3
 11624   003672  18DE               	xorwf	postinc2,w,c
 11625   003674  A4D8               	btfss	status,2,c
 11626   003676  EF3F  F01B         	goto	u5451
 11627   00367A  EF41  F01B         	goto	u5450
 11628   00367E                     u5451:
 11629   00367E  EF57  F01B         	goto	l5465
 11630   003682                     u5450:
 11631   003682                     
 11632                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
 11633   003682  0E5D               	movlw	low _motorL
 11634   003684  6E1A               	movwf	reverseDetect@mL^0,c
 11635   003686  0E01               	movlw	high _motorL
 11636   003688  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11637   00368A  0E54               	movlw	low _motorR
 11638   00368C  6E1C               	movwf	reverseDetect@mR^0,c
 11639   00368E  0E01               	movlw	high _motorR
 11640   003690  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11641   003692  ECA0  F02B         	call	_reverseDetect	;wreg free
 11642                           
 11643                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
 11644   003696  0E5D               	movlw	low _motorL
 11645   003698  6E20               	movwf	ReverseYellow@mL^0,c
 11646   00369A  0E01               	movlw	high _motorL
 11647   00369C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
 11648   00369E  0E54               	movlw	low _motorR
 11649   0036A0  6E22               	movwf	ReverseYellow@mR^0,c
 11650   0036A2  0E01               	movlw	high _motorR
 11651   0036A4  6E23               	movwf	(ReverseYellow@mR+1)^0,c
 11652   0036A6  EC7F  F026         	call	_ReverseYellow	;wreg free
 11653                           
 11654                           ;Memory.c: 22:         }
 11655   0036AA  EF03  F01C         	goto	l594
 11656   0036AE                     l5465:
 11657   0036AE  502B               	movf	go_Home@i^0,w,c
 11658   0036B0  2424               	addwf	go_Home@WayBack^0,w,c
 11659   0036B2  6E28               	movwf	??_go_Home^0,c
 11660   0036B4  502C               	movf	(go_Home@i+1)^0,w,c
 11661   0036B6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11662   0036B8  6E29               	movwf	(??_go_Home+1)^0,c
 11663   0036BA  0EFF               	movlw	255
 11664   0036BC  2428               	addwf	??_go_Home^0,w,c
 11665   0036BE  6ED9               	movwf	fsr2l,c
 11666   0036C0  0EFF               	movlw	255
 11667   0036C2  2029               	addwfc	(??_go_Home+1)^0,w,c
 11668   0036C4  6EDA               	movwf	fsr2h,c
 11669   0036C6  0E04               	movlw	4
 11670   0036C8  18DE               	xorwf	postinc2,w,c
 11671   0036CA  A4D8               	btfss	status,2,c
 11672   0036CC  EF6A  F01B         	goto	u5461
 11673   0036D0  EF6C  F01B         	goto	u5460
 11674   0036D4                     u5461:
 11675   0036D4  EF82  F01B         	goto	l5469
 11676   0036D8                     u5460:
 11677   0036D8                     
 11678                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
 11679   0036D8  0E5D               	movlw	low _motorL
 11680   0036DA  6E1A               	movwf	reverseDetect@mL^0,c
 11681   0036DC  0E01               	movlw	high _motorL
 11682   0036DE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11683   0036E0  0E54               	movlw	low _motorR
 11684   0036E2  6E1C               	movwf	reverseDetect@mR^0,c
 11685   0036E4  0E01               	movlw	high _motorR
 11686   0036E6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11687   0036E8  ECA0  F02B         	call	_reverseDetect	;wreg free
 11688                           
 11689                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
 11690   0036EC  0E5D               	movlw	low _motorL
 11691   0036EE  6E20               	movwf	BlueMove@mL^0,c
 11692   0036F0  0E01               	movlw	high _motorL
 11693   0036F2  6E21               	movwf	(BlueMove@mL+1)^0,c
 11694   0036F4  0E54               	movlw	low _motorR
 11695   0036F6  6E22               	movwf	BlueMove@mR^0,c
 11696   0036F8  0E01               	movlw	high _motorR
 11697   0036FA  6E23               	movwf	(BlueMove@mR+1)^0,c
 11698   0036FC  EC0D  F02B         	call	_BlueMove	;wreg free
 11699                           
 11700                           ;Memory.c: 26:         }
 11701   003700  EF03  F01C         	goto	l594
 11702   003704                     l5469:
 11703   003704  502B               	movf	go_Home@i^0,w,c
 11704   003706  2424               	addwf	go_Home@WayBack^0,w,c
 11705   003708  6E28               	movwf	??_go_Home^0,c
 11706   00370A  502C               	movf	(go_Home@i+1)^0,w,c
 11707   00370C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11708   00370E  6E29               	movwf	(??_go_Home+1)^0,c
 11709   003710  0EFF               	movlw	255
 11710   003712  2428               	addwf	??_go_Home^0,w,c
 11711   003714  6ED9               	movwf	fsr2l,c
 11712   003716  0EFF               	movlw	255
 11713   003718  2029               	addwfc	(??_go_Home+1)^0,w,c
 11714   00371A  6EDA               	movwf	fsr2h,c
 11715   00371C  0E05               	movlw	5
 11716   00371E  18DE               	xorwf	postinc2,w,c
 11717   003720  A4D8               	btfss	status,2,c
 11718   003722  EF95  F01B         	goto	u5471
 11719   003726  EF97  F01B         	goto	u5470
 11720   00372A                     u5471:
 11721   00372A  EFAD  F01B         	goto	l5473
 11722   00372E                     u5470:
 11723   00372E                     
 11724                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
 11725   00372E  0E5D               	movlw	low _motorL
 11726   003730  6E1A               	movwf	reverseDetect@mL^0,c
 11727   003732  0E01               	movlw	high _motorL
 11728   003734  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11729   003736  0E54               	movlw	low _motorR
 11730   003738  6E1C               	movwf	reverseDetect@mR^0,c
 11731   00373A  0E01               	movlw	high _motorR
 11732   00373C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11733   00373E  ECA0  F02B         	call	_reverseDetect	;wreg free
 11734                           
 11735                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
 11736   003742  0E5D               	movlw	low _motorL
 11737   003744  6E20               	movwf	RedMove@mL^0,c
 11738   003746  0E01               	movlw	high _motorL
 11739   003748  6E21               	movwf	(RedMove@mL+1)^0,c
 11740   00374A  0E54               	movlw	low _motorR
 11741   00374C  6E22               	movwf	RedMove@mR^0,c
 11742   00374E  0E01               	movlw	high _motorR
 11743   003750  6E23               	movwf	(RedMove@mR+1)^0,c
 11744   003752  EC31  F02F         	call	_RedMove	;wreg free
 11745                           
 11746                           ;Memory.c: 30:         }
 11747   003756  EF03  F01C         	goto	l594
 11748   00375A                     l5473:
 11749   00375A  502B               	movf	go_Home@i^0,w,c
 11750   00375C  2424               	addwf	go_Home@WayBack^0,w,c
 11751   00375E  6E28               	movwf	??_go_Home^0,c
 11752   003760  502C               	movf	(go_Home@i+1)^0,w,c
 11753   003762  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11754   003764  6E29               	movwf	(??_go_Home+1)^0,c
 11755   003766  0EFF               	movlw	255
 11756   003768  2428               	addwf	??_go_Home^0,w,c
 11757   00376A  6ED9               	movwf	fsr2l,c
 11758   00376C  0EFF               	movlw	255
 11759   00376E  2029               	addwfc	(??_go_Home+1)^0,w,c
 11760   003770  6EDA               	movwf	fsr2h,c
 11761   003772  0E06               	movlw	6
 11762   003774  18DE               	xorwf	postinc2,w,c
 11763   003776  A4D8               	btfss	status,2,c
 11764   003778  EFC0  F01B         	goto	u5481
 11765   00377C  EFC2  F01B         	goto	u5480
 11766   003780                     u5481:
 11767   003780  EFD8  F01B         	goto	l5477
 11768   003784                     u5480:
 11769   003784                     
 11770                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
 11771   003784  0E5D               	movlw	low _motorL
 11772   003786  6E1A               	movwf	reverseDetect@mL^0,c
 11773   003788  0E01               	movlw	high _motorL
 11774   00378A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11775   00378C  0E54               	movlw	low _motorR
 11776   00378E  6E1C               	movwf	reverseDetect@mR^0,c
 11777   003790  0E01               	movlw	high _motorR
 11778   003792  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11779   003794  ECA0  F02B         	call	_reverseDetect	;wreg free
 11780                           
 11781                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
 11782   003798  0E5D               	movlw	low _motorL
 11783   00379A  6E20               	movwf	OrangeMove@mL^0,c
 11784   00379C  0E01               	movlw	high _motorL
 11785   00379E  6E21               	movwf	(OrangeMove@mL+1)^0,c
 11786   0037A0  0E54               	movlw	low _motorR
 11787   0037A2  6E22               	movwf	OrangeMove@mR^0,c
 11788   0037A4  0E01               	movlw	high _motorR
 11789   0037A6  6E23               	movwf	(OrangeMove@mR+1)^0,c
 11790   0037A8  ECA6  F02C         	call	_OrangeMove	;wreg free
 11791                           
 11792                           ;Memory.c: 34:         }
 11793   0037AC  EF03  F01C         	goto	l594
 11794   0037B0                     l5477:
 11795   0037B0  502B               	movf	go_Home@i^0,w,c
 11796   0037B2  2424               	addwf	go_Home@WayBack^0,w,c
 11797   0037B4  6E28               	movwf	??_go_Home^0,c
 11798   0037B6  502C               	movf	(go_Home@i+1)^0,w,c
 11799   0037B8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
 11800   0037BA  6E29               	movwf	(??_go_Home+1)^0,c
 11801   0037BC  0EFF               	movlw	255
 11802   0037BE  2428               	addwf	??_go_Home^0,w,c
 11803   0037C0  6ED9               	movwf	fsr2l,c
 11804   0037C2  0EFF               	movlw	255
 11805   0037C4  2029               	addwfc	(??_go_Home+1)^0,w,c
 11806   0037C6  6EDA               	movwf	fsr2h,c
 11807   0037C8  0E07               	movlw	7
 11808   0037CA  18DE               	xorwf	postinc2,w,c
 11809   0037CC  A4D8               	btfss	status,2,c
 11810   0037CE  EFEB  F01B         	goto	u5491
 11811   0037D2  EFED  F01B         	goto	u5490
 11812   0037D6                     u5491:
 11813   0037D6  EF03  F01C         	goto	l600
 11814   0037DA                     u5490:
 11815   0037DA                     
 11816                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
 11817   0037DA  0E5D               	movlw	low _motorL
 11818   0037DC  6E1A               	movwf	reverseDetect@mL^0,c
 11819   0037DE  0E01               	movlw	high _motorL
 11820   0037E0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 11821   0037E2  0E54               	movlw	low _motorR
 11822   0037E4  6E1C               	movwf	reverseDetect@mR^0,c
 11823   0037E6  0E01               	movlw	high _motorR
 11824   0037E8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 11825   0037EA  ECA0  F02B         	call	_reverseDetect	;wreg free
 11826                           
 11827                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
 11828   0037EE  0E5D               	movlw	low _motorL
 11829   0037F0  6E20               	movwf	ReversePink@mL^0,c
 11830   0037F2  0E01               	movlw	high _motorL
 11831   0037F4  6E21               	movwf	(ReversePink@mL+1)^0,c
 11832   0037F6  0E54               	movlw	low _motorR
 11833   0037F8  6E22               	movwf	ReversePink@mR^0,c
 11834   0037FA  0E01               	movlw	high _motorR
 11835   0037FC  6E23               	movwf	(ReversePink@mR+1)^0,c
 11836   0037FE  ECDA  F026         	call	_ReversePink	;wreg free
 11837   003802  EF03  F01C         	goto	l594
 11838   003806                     l600:
 11839   003806                     l594:
 11840                           
 11841                           ;Memory.c: 39:         stop(&motorL, &motorR);
 11842   003806  0E5D               	movlw	low _motorL
 11843   003808  6E14               	movwf	stop@mL^0,c
 11844   00380A  0E01               	movlw	high _motorL
 11845   00380C  6E15               	movwf	(stop@mL+1)^0,c
 11846   00380E  0E54               	movlw	low _motorR
 11847   003810  6E16               	movwf	stop@mR^0,c
 11848   003812  0E01               	movlw	high _motorR
 11849   003814  6E17               	movwf	(stop@mR+1)^0,c
 11850   003816  ECB8  F029         	call	_stop	;wreg free
 11851   00381A                     
 11852                           ;Memory.c: 40:         run_flag=0;
 11853   00381A  0E00               	movlw	0
 11854   00381C  0101               	movlb	1	; () banked
 11855   00381E  6FD5               	movwf	(_run_flag+1)& (0+255),b
 11856   003820  0E00               	movlw	0
 11857   003822  6FD4               	movwf	_run_flag& (0+255),b
 11858   003824                     
 11859                           ; BSR set to: 1
 11860                           ;Memory.c: 43:   }
 11861   003824  062B               	decf	go_Home@i^0,f,c
 11862   003826  A0D8               	btfss	status,0,c
 11863   003828  062C               	decf	(go_Home@i+1)^0,f,c
 11864   00382A  EFB7  F01A         	goto	l5447
 11865   00382E                     l606:
 11866   00382E  0012               	return		;funcret
 11867   003830                     __end_of_go_Home:
 11868                           	callstack 0
 11869                           
 11870 ;; *************** function _timed_forward *****************
 11871 ;; Defined at:
 11872 ;;		line 166 in file "dc_motor.c"
 11873 ;; Parameters:    Size  Location     Type
 11874 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11875 ;;		 -> motorL(9), 
 11876 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11877 ;;		 -> motorR(9), 
 11878 ;;  time            2   23[COMRAM] int 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11890 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;Total ram usage:        8 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 3
 11897 ;; This function calls:
 11898 ;;		_delayed_ms
 11899 ;;		_setMotorPWM
 11900 ;; This function is called by:
 11901 ;;		_go_Home
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text45
 11906   004FC6                     __ptext45:
 11907                           	callstack 0
 11908   004FC6                     _timed_forward:
 11909                           	callstack 26
 11910   004FC6                     
 11911                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
 11912   004FC6  EE20 F001          	lfsr	2,1
 11913   004FCA  5014               	movf	timed_forward@mL^0,w,c
 11914   004FCC  26D9               	addwf	fsr2l,f,c
 11915   004FCE  5015               	movf	(timed_forward@mL+1)^0,w,c
 11916   004FD0  22DA               	addwfc	fsr2h,f,c
 11917   004FD2  0E01               	movlw	1
 11918   004FD4  6EDF               	movwf	indf2,c
 11919                           
 11920                           ;dc_motor.c: 170:     mR->direction =1;
 11921   004FD6  EE20 F001          	lfsr	2,1
 11922   004FDA  5016               	movf	timed_forward@mR^0,w,c
 11923   004FDC  26D9               	addwf	fsr2l,f,c
 11924   004FDE  5017               	movf	(timed_forward@mR+1)^0,w,c
 11925   004FE0  22DA               	addwfc	fsr2h,f,c
 11926   004FE2  0E01               	movlw	1
 11927   004FE4  6EDF               	movwf	indf2,c
 11928                           
 11929                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
 11930   004FE6  EF19  F028         	goto	l5087
 11931   004FEA                     l5079:
 11932                           
 11933                           ;dc_motor.c: 173:         mL->power+=10;
 11934   004FEA  C014  FFD9         	movff	timed_forward@mL,fsr2l
 11935   004FEE  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
 11936   004FF2  0E0A               	movlw	10
 11937   004FF4  26DF               	addwf	indf2,f,c
 11938                           
 11939                           ;dc_motor.c: 174:         mR->power+=10;
 11940   004FF6  C016  FFD9         	movff	timed_forward@mR,fsr2l
 11941   004FFA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
 11942   004FFE  0E0A               	movlw	10
 11943   005000  26DF               	addwf	indf2,f,c
 11944   005002                     
 11945                           ;dc_motor.c: 176:         setMotorPWM(mL);
 11946   005002  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
 11947   005006  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
 11948   00500A  EC2E  F023         	call	_setMotorPWM	;wreg free
 11949   00500E                     
 11950                           ;dc_motor.c: 177:         setMotorPWM(mR);
 11951   00500E  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
 11952   005012  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
 11953   005016  EC2E  F023         	call	_setMotorPWM	;wreg free
 11954   00501A                     
 11955                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11956   00501A  0E02               	movlw	2
 11957   00501C  6E1B               	movwf	(??_timed_forward+1)^0,c
 11958   00501E  0EA0               	movlw	160
 11959   005020  6E1A               	movwf	??_timed_forward^0,c
 11960   005022  0E92               	movlw	146
 11961   005024                     u5947:
 11962   005024  2EE8               	decfsz	wreg,f,c
 11963   005026  D7FE               	bra	u5947
 11964   005028  2E1A               	decfsz	??_timed_forward^0,f,c
 11965   00502A  D7FC               	bra	u5947
 11966   00502C  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
 11967   00502E  D7FA               	bra	u5947
 11968   005030  D000               	nop2	
 11969   005032                     l5087:
 11970   005032  C014  FFD9         	movff	timed_forward@mL,fsr2l
 11971   005036  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
 11972   00503A  0E32               	movlw	50
 11973   00503C  60DF               	cpfslt	indf2,c
 11974   00503E  EF23  F028         	goto	u4941
 11975   005042  EF25  F028         	goto	u4940
 11976   005046                     u4941:
 11977   005046  EF31  F028         	goto	l5091
 11978   00504A                     u4940:
 11979   00504A  C016  FFD9         	movff	timed_forward@mR,fsr2l
 11980   00504E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
 11981   005052  0E31               	movlw	49
 11982   005054  64DF               	cpfsgt	indf2,c
 11983   005056  EF2F  F028         	goto	u4951
 11984   00505A  EF31  F028         	goto	u4950
 11985   00505E                     u4951:
 11986   00505E  EFF5  F027         	goto	l5079
 11987   005062                     u4950:
 11988   005062                     l5091:
 11989                           
 11990                           ;dc_motor.c: 182:     delayed_ms(time);
 11991   005062  C018  F001         	movff	timed_forward@time,delayed_ms@time
 11992   005066  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
 11993   00506A  EC8B  F02F         	call	_delayed_ms	;wreg free
 11994   00506E  0012               	return		;funcret
 11995   005070                     __end_of_timed_forward:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function _delayed_ms *****************
 11999 ;; Defined at:
 12000 ;;		line 43 in file "timers.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  time            2    0[COMRAM] int 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  i               2    3[COMRAM] unsigned int 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;Total ram usage:        5 bytes
 12019 ;; Hardware stack levels used: 1
 12020 ;; Hardware stack levels required when called: 1
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_timed_forward
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text46
 12029   005F16                     __ptext46:
 12030                           	callstack 0
 12031   005F16                     _delayed_ms:
 12032                           	callstack 27
 12033   005F16                     
 12034                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
 12035   005F16  0E00               	movlw	0
 12036   005F18  6E05               	movwf	(delayed_ms@i+1)^0,c
 12037   005F1A  0E00               	movlw	0
 12038   005F1C  6E04               	movwf	delayed_ms@i^0,c
 12039   005F1E  EF9B  F02F         	goto	l636
 12040   005F22                     l4747:
 12041                           
 12042                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
 12043   005F22  0E0B               	movlw	11
 12044   005F24  6E03               	movwf	??_delayed_ms^0,c
 12045   005F26  0E62               	movlw	98
 12046   005F28                     u5957:
 12047   005F28  2EE8               	decfsz	wreg,f,c
 12048   005F2A  D7FE               	bra	u5957
 12049   005F2C  2E03               	decfsz	??_delayed_ms^0,f,c
 12050   005F2E  D7FC               	bra	u5957
 12051   005F30  D000               	nop2	
 12052   005F32                     
 12053                           ;timers.c: 46:     }
 12054   005F32  4A04               	infsnz	delayed_ms@i^0,f,c
 12055   005F34  2A05               	incf	(delayed_ms@i+1)^0,f,c
 12056   005F36                     l636:
 12057   005F36  5001               	movf	delayed_ms@time^0,w,c
 12058   005F38  5C04               	subwf	delayed_ms@i^0,w,c
 12059   005F3A  5002               	movf	(delayed_ms@time+1)^0,w,c
 12060   005F3C  5805               	subwfb	(delayed_ms@i+1)^0,w,c
 12061   005F3E  A0D8               	btfss	status,0,c
 12062   005F40  EFA4  F02F         	goto	u4511
 12063   005F44  EFA6  F02F         	goto	u4510
 12064   005F48                     u4511:
 12065   005F48  EF91  F02F         	goto	l4747
 12066   005F4C                     u4510:
 12067   005F4C  0012               	return		;funcret
 12068   005F4E                     __end_of_delayed_ms:
 12069                           	callstack 0
 12070                           
 12071 ;; *************** function _ReverseYellow *****************
 12072 ;; Defined at:
 12073 ;;		line 334 in file "dc_motor.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12076 ;;		 -> motorL(9), 
 12077 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12078 ;;		 -> motorR(9), 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;		None
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12094 ;;Total ram usage:        4 bytes
 12095 ;; Hardware stack levels used: 1
 12096 ;; Hardware stack levels required when called: 5
 12097 ;; This function calls:
 12098 ;;		_ForwardOneBlock
 12099 ;;		_reverseDetect
 12100 ;;		_turnRight45
 12101 ;; This function is called by:
 12102 ;;		_go_Home
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text47
 12107   004CFE                     __ptext47:
 12108                           	callstack 0
 12109   004CFE                     _ReverseYellow:
 12110                           	callstack 24
 12111   004CFE                     
 12112                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
 12113   004CFE  0E5D               	movlw	low _motorL
 12114   004D00  6E1A               	movwf	reverseDetect@mL^0,c
 12115   004D02  0E01               	movlw	high _motorL
 12116   004D04  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12117   004D06  0E54               	movlw	low _motorR
 12118   004D08  6E1C               	movwf	reverseDetect@mR^0,c
 12119   004D0A  0E01               	movlw	high _motorR
 12120   004D0C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12121   004D0E  ECA0  F02B         	call	_reverseDetect	;wreg free
 12122                           
 12123                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
 12124   004D12  0E5D               	movlw	low _motorL
 12125   004D14  6E1A               	movwf	turnRight45@mL^0,c
 12126   004D16  0E01               	movlw	high _motorL
 12127   004D18  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12128   004D1A  0E54               	movlw	low _motorR
 12129   004D1C  6E1C               	movwf	turnRight45@mR^0,c
 12130   004D1E  0E01               	movlw	high _motorR
 12131   004D20  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12132   004D22  EC3B  F02E         	call	_turnRight45	;wreg free
 12133                           
 12134                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
 12135   004D26  0E5D               	movlw	low _motorL
 12136   004D28  6E1A               	movwf	turnRight45@mL^0,c
 12137   004D2A  0E01               	movlw	high _motorL
 12138   004D2C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12139   004D2E  0E54               	movlw	low _motorR
 12140   004D30  6E1C               	movwf	turnRight45@mR^0,c
 12141   004D32  0E01               	movlw	high _motorR
 12142   004D34  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12143   004D36  EC3B  F02E         	call	_turnRight45	;wreg free
 12144                           
 12145                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
 12146   004D3A  0E5D               	movlw	low _motorL
 12147   004D3C  6E1A               	movwf	ForwardOneBlock@mL^0,c
 12148   004D3E  0E01               	movlw	high _motorL
 12149   004D40  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
 12150   004D42  0E54               	movlw	low _motorR
 12151   004D44  6E1C               	movwf	ForwardOneBlock@mR^0,c
 12152   004D46  0E01               	movlw	high _motorR
 12153   004D48  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
 12154   004D4A  ECFA  F02B         	call	_ForwardOneBlock	;wreg free
 12155                           
 12156                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
 12157   004D4E  0E5D               	movlw	low _motorL
 12158   004D50  6E1A               	movwf	reverseDetect@mL^0,c
 12159   004D52  0E01               	movlw	high _motorL
 12160   004D54  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12161   004D56  0E54               	movlw	low _motorR
 12162   004D58  6E1C               	movwf	reverseDetect@mR^0,c
 12163   004D5A  0E01               	movlw	high _motorR
 12164   004D5C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12165   004D5E  ECA0  F02B         	call	_reverseDetect	;wreg free
 12166                           
 12167                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
 12168   004D62  0E5D               	movlw	low _motorL
 12169   004D64  6E1A               	movwf	turnRight45@mL^0,c
 12170   004D66  0E01               	movlw	high _motorL
 12171   004D68  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12172   004D6A  0E54               	movlw	low _motorR
 12173   004D6C  6E1C               	movwf	turnRight45@mR^0,c
 12174   004D6E  0E01               	movlw	high _motorR
 12175   004D70  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12176   004D72  EC3B  F02E         	call	_turnRight45	;wreg free
 12177                           
 12178                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
 12179   004D76  0E5D               	movlw	low _motorL
 12180   004D78  6E1A               	movwf	turnRight45@mL^0,c
 12181   004D7A  0E01               	movlw	high _motorL
 12182   004D7C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12183   004D7E  0E54               	movlw	low _motorR
 12184   004D80  6E1C               	movwf	turnRight45@mR^0,c
 12185   004D82  0E01               	movlw	high _motorR
 12186   004D84  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12187   004D86  EC3B  F02E         	call	_turnRight45	;wreg free
 12188                           
 12189                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
 12190   004D8A  0E5D               	movlw	low _motorL
 12191   004D8C  6E1A               	movwf	turnRight45@mL^0,c
 12192   004D8E  0E01               	movlw	high _motorL
 12193   004D90  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12194   004D92  0E54               	movlw	low _motorR
 12195   004D94  6E1C               	movwf	turnRight45@mR^0,c
 12196   004D96  0E01               	movlw	high _motorR
 12197   004D98  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12198   004D9A  EC3B  F02E         	call	_turnRight45	;wreg free
 12199                           
 12200                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
 12201   004D9E  0E5D               	movlw	low _motorL
 12202   004DA0  6E1A               	movwf	turnRight45@mL^0,c
 12203   004DA2  0E01               	movlw	high _motorL
 12204   004DA4  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12205   004DA6  0E54               	movlw	low _motorR
 12206   004DA8  6E1C               	movwf	turnRight45@mR^0,c
 12207   004DAA  0E01               	movlw	high _motorR
 12208   004DAC  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12209   004DAE  EC3B  F02E         	call	_turnRight45	;wreg free
 12210   004DB2  0012               	return		;funcret
 12211   004DB4                     __end_of_ReverseYellow:
 12212                           	callstack 0
 12213                           
 12214 ;; *************** function _ReversePink *****************
 12215 ;; Defined at:
 12216 ;;		line 345 in file "dc_motor.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12219 ;;		 -> motorL(9), 
 12220 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12221 ;;		 -> motorR(9), 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;		None
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      void 
 12226 ;; Registers used:
 12227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12237 ;;Total ram usage:        4 bytes
 12238 ;; Hardware stack levels used: 1
 12239 ;; Hardware stack levels required when called: 5
 12240 ;; This function calls:
 12241 ;;		_ForwardOneBlock
 12242 ;;		_reverseDetect
 12243 ;;		_turnLeft45
 12244 ;; This function is called by:
 12245 ;;		_go_Home
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	text48
 12250   004DB4                     __ptext48:
 12251                           	callstack 0
 12252   004DB4                     _ReversePink:
 12253                           	callstack 24
 12254   004DB4                     
 12255                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
 12256   004DB4  0E5D               	movlw	low _motorL
 12257   004DB6  6E1A               	movwf	reverseDetect@mL^0,c
 12258   004DB8  0E01               	movlw	high _motorL
 12259   004DBA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12260   004DBC  0E54               	movlw	low _motorR
 12261   004DBE  6E1C               	movwf	reverseDetect@mR^0,c
 12262   004DC0  0E01               	movlw	high _motorR
 12263   004DC2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12264   004DC4  ECA0  F02B         	call	_reverseDetect	;wreg free
 12265                           
 12266                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
 12267   004DC8  0E5D               	movlw	low _motorL
 12268   004DCA  6E1A               	movwf	turnLeft45@mL^0,c
 12269   004DCC  0E01               	movlw	high _motorL
 12270   004DCE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12271   004DD0  0E54               	movlw	low _motorR
 12272   004DD2  6E1C               	movwf	turnLeft45@mR^0,c
 12273   004DD4  0E01               	movlw	high _motorR
 12274   004DD6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12275   004DD8  EC62  F02E         	call	_turnLeft45	;wreg free
 12276                           
 12277                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
 12278   004DDC  0E5D               	movlw	low _motorL
 12279   004DDE  6E1A               	movwf	turnLeft45@mL^0,c
 12280   004DE0  0E01               	movlw	high _motorL
 12281   004DE2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12282   004DE4  0E54               	movlw	low _motorR
 12283   004DE6  6E1C               	movwf	turnLeft45@mR^0,c
 12284   004DE8  0E01               	movlw	high _motorR
 12285   004DEA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12286   004DEC  EC62  F02E         	call	_turnLeft45	;wreg free
 12287                           
 12288                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
 12289   004DF0  0E5D               	movlw	low _motorL
 12290   004DF2  6E1A               	movwf	ForwardOneBlock@mL^0,c
 12291   004DF4  0E01               	movlw	high _motorL
 12292   004DF6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
 12293   004DF8  0E54               	movlw	low _motorR
 12294   004DFA  6E1C               	movwf	ForwardOneBlock@mR^0,c
 12295   004DFC  0E01               	movlw	high _motorR
 12296   004DFE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
 12297   004E00  ECFA  F02B         	call	_ForwardOneBlock	;wreg free
 12298                           
 12299                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
 12300   004E04  0E5D               	movlw	low _motorL
 12301   004E06  6E1A               	movwf	reverseDetect@mL^0,c
 12302   004E08  0E01               	movlw	high _motorL
 12303   004E0A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12304   004E0C  0E54               	movlw	low _motorR
 12305   004E0E  6E1C               	movwf	reverseDetect@mR^0,c
 12306   004E10  0E01               	movlw	high _motorR
 12307   004E12  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12308   004E14  ECA0  F02B         	call	_reverseDetect	;wreg free
 12309                           
 12310                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
 12311   004E18  0E5D               	movlw	low _motorL
 12312   004E1A  6E1A               	movwf	turnLeft45@mL^0,c
 12313   004E1C  0E01               	movlw	high _motorL
 12314   004E1E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12315   004E20  0E54               	movlw	low _motorR
 12316   004E22  6E1C               	movwf	turnLeft45@mR^0,c
 12317   004E24  0E01               	movlw	high _motorR
 12318   004E26  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12319   004E28  EC62  F02E         	call	_turnLeft45	;wreg free
 12320                           
 12321                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
 12322   004E2C  0E5D               	movlw	low _motorL
 12323   004E2E  6E1A               	movwf	turnLeft45@mL^0,c
 12324   004E30  0E01               	movlw	high _motorL
 12325   004E32  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12326   004E34  0E54               	movlw	low _motorR
 12327   004E36  6E1C               	movwf	turnLeft45@mR^0,c
 12328   004E38  0E01               	movlw	high _motorR
 12329   004E3A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12330   004E3C  EC62  F02E         	call	_turnLeft45	;wreg free
 12331                           
 12332                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
 12333   004E40  0E5D               	movlw	low _motorL
 12334   004E42  6E1A               	movwf	turnLeft45@mL^0,c
 12335   004E44  0E01               	movlw	high _motorL
 12336   004E46  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12337   004E48  0E54               	movlw	low _motorR
 12338   004E4A  6E1C               	movwf	turnLeft45@mR^0,c
 12339   004E4C  0E01               	movlw	high _motorR
 12340   004E4E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12341   004E50  EC62  F02E         	call	_turnLeft45	;wreg free
 12342                           
 12343                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
 12344   004E54  0E5D               	movlw	low _motorL
 12345   004E56  6E1A               	movwf	turnLeft45@mL^0,c
 12346   004E58  0E01               	movlw	high _motorL
 12347   004E5A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12348   004E5C  0E54               	movlw	low _motorR
 12349   004E5E  6E1C               	movwf	turnLeft45@mR^0,c
 12350   004E60  0E01               	movlw	high _motorR
 12351   004E62  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12352   004E64  EC62  F02E         	call	_turnLeft45	;wreg free
 12353   004E68  0012               	return		;funcret
 12354   004E6A                     __end_of_ReversePink:
 12355                           	callstack 0
 12356                           
 12357 ;; *************** function _ForwardOneBlock *****************
 12358 ;; Defined at:
 12359 ;;		line 239 in file "dc_motor.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 12362 ;;		 -> motorL(9), 
 12363 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 12364 ;;		 -> motorR(9), 
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12380 ;;Total ram usage:        6 bytes
 12381 ;; Hardware stack levels used: 1
 12382 ;; Hardware stack levels required when called: 4
 12383 ;; This function calls:
 12384 ;;		_fullSpeedAhead
 12385 ;;		_stop
 12386 ;; This function is called by:
 12387 ;;		_ReverseYellow
 12388 ;;		_ReversePink
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text49
 12393   0057F4                     __ptext49:
 12394                           	callstack 0
 12395   0057F4                     _ForwardOneBlock:
 12396                           	callstack 24
 12397   0057F4                     
 12398                           ;dc_motor.c: 240:     fullSpeedAhead(mL,mR);
 12399   0057F4  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
 12400   0057F8  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
 12401   0057FC  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
 12402   005800  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
 12403   005804  EC25  F029         	call	_fullSpeedAhead	;wreg free
 12404   005808                     
 12405                           ;dc_motor.c: 241:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 12406   005808  0E56               	movlw	86
 12407   00580A  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
 12408   00580C  0E3A               	movlw	58
 12409   00580E  6E1E               	movwf	??_ForwardOneBlock^0,c
 12410   005810  0EF4               	movlw	244
 12411   005812                     u5967:
 12412   005812  2EE8               	decfsz	wreg,f,c
 12413   005814  D7FE               	bra	u5967
 12414   005816  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
 12415   005818  D7FC               	bra	u5967
 12416   00581A  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
 12417   00581C  D7FA               	bra	u5967
 12418   00581E                     
 12419                           ;dc_motor.c: 242:     stop(&motorL, &motorR);
 12420   00581E  0E5D               	movlw	low _motorL
 12421   005820  6E14               	movwf	stop@mL^0,c
 12422   005822  0E01               	movlw	high _motorL
 12423   005824  6E15               	movwf	(stop@mL+1)^0,c
 12424   005826  0E54               	movlw	low _motorR
 12425   005828  6E16               	movwf	stop@mR^0,c
 12426   00582A  0E01               	movlw	high _motorR
 12427   00582C  6E17               	movwf	(stop@mR+1)^0,c
 12428   00582E  ECB8  F029         	call	_stop	;wreg free
 12429                           
 12430                           ;dc_motor.c: 243:     _delay((unsigned long)((50)*(64000000/4000.0)));
 12431   005832  0E05               	movlw	5
 12432   005834  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
 12433   005836  0E0F               	movlw	15
 12434   005838  6E1E               	movwf	??_ForwardOneBlock^0,c
 12435   00583A  0EF1               	movlw	241
 12436   00583C                     u5977:
 12437   00583C  2EE8               	decfsz	wreg,f,c
 12438   00583E  D7FE               	bra	u5977
 12439   005840  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
 12440   005842  D7FC               	bra	u5977
 12441   005844  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
 12442   005846  D7FA               	bra	u5977
 12443   005848  F000               	nop	
 12444   00584A  0012               	return		;funcret
 12445   00584C                     __end_of_ForwardOneBlock:
 12446                           	callstack 0
 12447                           
 12448 ;; *************** function _RedMove *****************
 12449 ;; Defined at:
 12450 ;;		line 263 in file "dc_motor.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12453 ;;		 -> motorL(9), 
 12454 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12455 ;;		 -> motorR(9), 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12471 ;;Total ram usage:        4 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; Hardware stack levels required when called: 5
 12474 ;; This function calls:
 12475 ;;		_reverseDetect
 12476 ;;		_turnRight45
 12477 ;; This function is called by:
 12478 ;;		_go_Home
 12479 ;;		_colour_move
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text50
 12484   005E62                     __ptext50:
 12485                           	callstack 0
 12486   005E62                     _RedMove:
 12487                           	callstack 24
 12488   005E62                     
 12489                           ;dc_motor.c: 264:     reverseDetect(&motorL, &motorR);
 12490   005E62  0E5D               	movlw	low _motorL
 12491   005E64  6E1A               	movwf	reverseDetect@mL^0,c
 12492   005E66  0E01               	movlw	high _motorL
 12493   005E68  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12494   005E6A  0E54               	movlw	low _motorR
 12495   005E6C  6E1C               	movwf	reverseDetect@mR^0,c
 12496   005E6E  0E01               	movlw	high _motorR
 12497   005E70  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12498   005E72  ECA0  F02B         	call	_reverseDetect	;wreg free
 12499                           
 12500                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
 12501   005E76  0E5D               	movlw	low _motorL
 12502   005E78  6E1A               	movwf	turnRight45@mL^0,c
 12503   005E7A  0E01               	movlw	high _motorL
 12504   005E7C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12505   005E7E  0E54               	movlw	low _motorR
 12506   005E80  6E1C               	movwf	turnRight45@mR^0,c
 12507   005E82  0E01               	movlw	high _motorR
 12508   005E84  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12509   005E86  EC3B  F02E         	call	_turnRight45	;wreg free
 12510                           
 12511                           ;dc_motor.c: 267:     turnRight45(&motorL, &motorR);
 12512   005E8A  0E5D               	movlw	low _motorL
 12513   005E8C  6E1A               	movwf	turnRight45@mL^0,c
 12514   005E8E  0E01               	movlw	high _motorL
 12515   005E90  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12516   005E92  0E54               	movlw	low _motorR
 12517   005E94  6E1C               	movwf	turnRight45@mR^0,c
 12518   005E96  0E01               	movlw	high _motorR
 12519   005E98  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12520   005E9A  EC3B  F02E         	call	_turnRight45	;wreg free
 12521   005E9E  0012               	return		;funcret
 12522   005EA0                     __end_of_RedMove:
 12523                           	callstack 0
 12524                           
 12525 ;; *************** function _OrangeMove *****************
 12526 ;; Defined at:
 12527 ;;		line 309 in file "dc_motor.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12530 ;;		 -> motorL(9), 
 12531 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12532 ;;		 -> motorR(9), 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;		None
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12548 ;;Total ram usage:        4 bytes
 12549 ;; Hardware stack levels used: 1
 12550 ;; Hardware stack levels required when called: 5
 12551 ;; This function calls:
 12552 ;;		_reverseDetect
 12553 ;;		_turnRight45
 12554 ;; This function is called by:
 12555 ;;		_go_Home
 12556 ;;		_colour_move
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           	psect	text51
 12561   00594C                     __ptext51:
 12562                           	callstack 0
 12563   00594C                     _OrangeMove:
 12564                           	callstack 24
 12565   00594C                     
 12566                           ;dc_motor.c: 310:     reverseDetect(&motorL, &motorR);
 12567   00594C  0E5D               	movlw	low _motorL
 12568   00594E  6E1A               	movwf	reverseDetect@mL^0,c
 12569   005950  0E01               	movlw	high _motorL
 12570   005952  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12571   005954  0E54               	movlw	low _motorR
 12572   005956  6E1C               	movwf	reverseDetect@mR^0,c
 12573   005958  0E01               	movlw	high _motorR
 12574   00595A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12575   00595C  ECA0  F02B         	call	_reverseDetect	;wreg free
 12576                           
 12577                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
 12578   005960  0E5D               	movlw	low _motorL
 12579   005962  6E1A               	movwf	turnRight45@mL^0,c
 12580   005964  0E01               	movlw	high _motorL
 12581   005966  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12582   005968  0E54               	movlw	low _motorR
 12583   00596A  6E1C               	movwf	turnRight45@mR^0,c
 12584   00596C  0E01               	movlw	high _motorR
 12585   00596E  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12586   005970  EC3B  F02E         	call	_turnRight45	;wreg free
 12587                           
 12588                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
 12589   005974  0E5D               	movlw	low _motorL
 12590   005976  6E1A               	movwf	turnRight45@mL^0,c
 12591   005978  0E01               	movlw	high _motorL
 12592   00597A  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12593   00597C  0E54               	movlw	low _motorR
 12594   00597E  6E1C               	movwf	turnRight45@mR^0,c
 12595   005980  0E01               	movlw	high _motorR
 12596   005982  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12597   005984  EC3B  F02E         	call	_turnRight45	;wreg free
 12598                           
 12599                           ;dc_motor.c: 314:     turnRight45(&motorL, &motorR);
 12600   005988  0E5D               	movlw	low _motorL
 12601   00598A  6E1A               	movwf	turnRight45@mL^0,c
 12602   00598C  0E01               	movlw	high _motorL
 12603   00598E  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12604   005990  0E54               	movlw	low _motorR
 12605   005992  6E1C               	movwf	turnRight45@mR^0,c
 12606   005994  0E01               	movlw	high _motorR
 12607   005996  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12608   005998  EC3B  F02E         	call	_turnRight45	;wreg free
 12609   00599C  0012               	return		;funcret
 12610   00599E                     __end_of_OrangeMove:
 12611                           	callstack 0
 12612                           
 12613 ;; *************** function _LightBlueMove *****************
 12614 ;; Defined at:
 12615 ;;		line 318 in file "dc_motor.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12618 ;;		 -> motorL(9), 
 12619 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12620 ;;		 -> motorR(9), 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12636 ;;Total ram usage:        4 bytes
 12637 ;; Hardware stack levels used: 1
 12638 ;; Hardware stack levels required when called: 5
 12639 ;; This function calls:
 12640 ;;		_reverseDetect
 12641 ;;		_turnLeft45
 12642 ;; This function is called by:
 12643 ;;		_go_Home
 12644 ;;		_colour_move
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text52
 12649   00599E                     __ptext52:
 12650                           	callstack 0
 12651   00599E                     _LightBlueMove:
 12652                           	callstack 24
 12653   00599E                     
 12654                           ;dc_motor.c: 319:     reverseDetect(&motorL, &motorR);
 12655   00599E  0E5D               	movlw	low _motorL
 12656   0059A0  6E1A               	movwf	reverseDetect@mL^0,c
 12657   0059A2  0E01               	movlw	high _motorL
 12658   0059A4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12659   0059A6  0E54               	movlw	low _motorR
 12660   0059A8  6E1C               	movwf	reverseDetect@mR^0,c
 12661   0059AA  0E01               	movlw	high _motorR
 12662   0059AC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12663   0059AE  ECA0  F02B         	call	_reverseDetect	;wreg free
 12664                           
 12665                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
 12666   0059B2  0E5D               	movlw	low _motorL
 12667   0059B4  6E1A               	movwf	turnLeft45@mL^0,c
 12668   0059B6  0E01               	movlw	high _motorL
 12669   0059B8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12670   0059BA  0E54               	movlw	low _motorR
 12671   0059BC  6E1C               	movwf	turnLeft45@mR^0,c
 12672   0059BE  0E01               	movlw	high _motorR
 12673   0059C0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12674   0059C2  EC62  F02E         	call	_turnLeft45	;wreg free
 12675                           
 12676                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
 12677   0059C6  0E5D               	movlw	low _motorL
 12678   0059C8  6E1A               	movwf	turnLeft45@mL^0,c
 12679   0059CA  0E01               	movlw	high _motorL
 12680   0059CC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12681   0059CE  0E54               	movlw	low _motorR
 12682   0059D0  6E1C               	movwf	turnLeft45@mR^0,c
 12683   0059D2  0E01               	movlw	high _motorR
 12684   0059D4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12685   0059D6  EC62  F02E         	call	_turnLeft45	;wreg free
 12686                           
 12687                           ;dc_motor.c: 323:     turnLeft45(&motorL, &motorR);
 12688   0059DA  0E5D               	movlw	low _motorL
 12689   0059DC  6E1A               	movwf	turnLeft45@mL^0,c
 12690   0059DE  0E01               	movlw	high _motorL
 12691   0059E0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12692   0059E2  0E54               	movlw	low _motorR
 12693   0059E4  6E1C               	movwf	turnLeft45@mR^0,c
 12694   0059E6  0E01               	movlw	high _motorR
 12695   0059E8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12696   0059EA  EC62  F02E         	call	_turnLeft45	;wreg free
 12697   0059EE  0012               	return		;funcret
 12698   0059F0                     __end_of_LightBlueMove:
 12699                           	callstack 0
 12700                           
 12701 ;; *************** function _GreenMove *****************
 12702 ;; Defined at:
 12703 ;;		line 271 in file "dc_motor.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12706 ;;		 -> motorL(9), 
 12707 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12708 ;;		 -> motorR(9), 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12724 ;;Total ram usage:        4 bytes
 12725 ;; Hardware stack levels used: 1
 12726 ;; Hardware stack levels required when called: 5
 12727 ;; This function calls:
 12728 ;;		_reverseDetect
 12729 ;;		_turnLeft45
 12730 ;; This function is called by:
 12731 ;;		_go_Home
 12732 ;;		_colour_move
 12733 ;; This function uses a non-reentrant model
 12734 ;;
 12735                           
 12736                           	psect	text53
 12737   005EA0                     __ptext53:
 12738                           	callstack 0
 12739   005EA0                     _GreenMove:
 12740                           	callstack 24
 12741   005EA0                     
 12742                           ;dc_motor.c: 272:     reverseDetect(&motorL, &motorR);
 12743   005EA0  0E5D               	movlw	low _motorL
 12744   005EA2  6E1A               	movwf	reverseDetect@mL^0,c
 12745   005EA4  0E01               	movlw	high _motorL
 12746   005EA6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12747   005EA8  0E54               	movlw	low _motorR
 12748   005EAA  6E1C               	movwf	reverseDetect@mR^0,c
 12749   005EAC  0E01               	movlw	high _motorR
 12750   005EAE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12751   005EB0  ECA0  F02B         	call	_reverseDetect	;wreg free
 12752                           
 12753                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
 12754   005EB4  0E5D               	movlw	low _motorL
 12755   005EB6  6E1A               	movwf	turnLeft45@mL^0,c
 12756   005EB8  0E01               	movlw	high _motorL
 12757   005EBA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12758   005EBC  0E54               	movlw	low _motorR
 12759   005EBE  6E1C               	movwf	turnLeft45@mR^0,c
 12760   005EC0  0E01               	movlw	high _motorR
 12761   005EC2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12762   005EC4  EC62  F02E         	call	_turnLeft45	;wreg free
 12763                           
 12764                           ;dc_motor.c: 275:     turnLeft45(&motorL, &motorR);
 12765   005EC8  0E5D               	movlw	low _motorL
 12766   005ECA  6E1A               	movwf	turnLeft45@mL^0,c
 12767   005ECC  0E01               	movlw	high _motorL
 12768   005ECE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 12769   005ED0  0E54               	movlw	low _motorR
 12770   005ED2  6E1C               	movwf	turnLeft45@mR^0,c
 12771   005ED4  0E01               	movlw	high _motorR
 12772   005ED6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 12773   005ED8  EC62  F02E         	call	_turnLeft45	;wreg free
 12774   005EDC  0012               	return		;funcret
 12775   005EDE                     __end_of_GreenMove:
 12776                           	callstack 0
 12777                           
 12778 ;; *************** function _BlueMove *****************
 12779 ;; Defined at:
 12780 ;;		line 279 in file "dc_motor.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12783 ;;		 -> motorL(9), 
 12784 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12785 ;;		 -> motorR(9), 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;		None
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  1    wreg      void 
 12790 ;; Registers used:
 12791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12801 ;;Total ram usage:        4 bytes
 12802 ;; Hardware stack levels used: 1
 12803 ;; Hardware stack levels required when called: 5
 12804 ;; This function calls:
 12805 ;;		_reverseDetect
 12806 ;;		_turnRight45
 12807 ;; This function is called by:
 12808 ;;		_go_Home
 12809 ;;		_colour_move
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text54
 12814   00561A                     __ptext54:
 12815                           	callstack 0
 12816   00561A                     _BlueMove:
 12817                           	callstack 24
 12818   00561A                     
 12819                           ;dc_motor.c: 280:     reverseDetect(&motorL, &motorR);
 12820   00561A  0E5D               	movlw	low _motorL
 12821   00561C  6E1A               	movwf	reverseDetect@mL^0,c
 12822   00561E  0E01               	movlw	high _motorL
 12823   005620  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12824   005622  0E54               	movlw	low _motorR
 12825   005624  6E1C               	movwf	reverseDetect@mR^0,c
 12826   005626  0E01               	movlw	high _motorR
 12827   005628  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12828   00562A  ECA0  F02B         	call	_reverseDetect	;wreg free
 12829                           
 12830                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
 12831   00562E  0E5D               	movlw	low _motorL
 12832   005630  6E1A               	movwf	turnRight45@mL^0,c
 12833   005632  0E01               	movlw	high _motorL
 12834   005634  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12835   005636  0E54               	movlw	low _motorR
 12836   005638  6E1C               	movwf	turnRight45@mR^0,c
 12837   00563A  0E01               	movlw	high _motorR
 12838   00563C  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12839   00563E  EC3B  F02E         	call	_turnRight45	;wreg free
 12840                           
 12841                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
 12842   005642  0E5D               	movlw	low _motorL
 12843   005644  6E1A               	movwf	turnRight45@mL^0,c
 12844   005646  0E01               	movlw	high _motorL
 12845   005648  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12846   00564A  0E54               	movlw	low _motorR
 12847   00564C  6E1C               	movwf	turnRight45@mR^0,c
 12848   00564E  0E01               	movlw	high _motorR
 12849   005650  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12850   005652  EC3B  F02E         	call	_turnRight45	;wreg free
 12851                           
 12852                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
 12853   005656  0E5D               	movlw	low _motorL
 12854   005658  6E1A               	movwf	turnRight45@mL^0,c
 12855   00565A  0E01               	movlw	high _motorL
 12856   00565C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12857   00565E  0E54               	movlw	low _motorR
 12858   005660  6E1C               	movwf	turnRight45@mR^0,c
 12859   005662  0E01               	movlw	high _motorR
 12860   005664  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12861   005666  EC3B  F02E         	call	_turnRight45	;wreg free
 12862                           
 12863                           ;dc_motor.c: 285:     turnRight45(&motorL, &motorR);
 12864   00566A  0E5D               	movlw	low _motorL
 12865   00566C  6E1A               	movwf	turnRight45@mL^0,c
 12866   00566E  0E01               	movlw	high _motorL
 12867   005670  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12868   005672  0E54               	movlw	low _motorR
 12869   005674  6E1C               	movwf	turnRight45@mR^0,c
 12870   005676  0E01               	movlw	high _motorR
 12871   005678  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12872   00567A  EC3B  F02E         	call	_turnRight45	;wreg free
 12873   00567E  0012               	return		;funcret
 12874   005680                     __end_of_BlueMove:
 12875                           	callstack 0
 12876                           
 12877 ;; *************** function _YellowMove *****************
 12878 ;; Defined at:
 12879 ;;		line 289 in file "dc_motor.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12882 ;;		 -> motorL(9), 
 12883 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12884 ;;		 -> motorR(9), 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;Total ram usage:        4 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 5
 12903 ;; This function calls:
 12904 ;;		_reverseDetect
 12905 ;;		_reverseOneBlock
 12906 ;;		_turnRight45
 12907 ;; This function is called by:
 12908 ;;		_colour_move
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text55
 12913   0059F0                     __ptext55:
 12914                           	callstack 0
 12915   0059F0                     _YellowMove:
 12916                           	callstack 24
 12917   0059F0                     
 12918                           ;dc_motor.c: 290:     reverseDetect(&motorL, &motorR);
 12919   0059F0  0E5D               	movlw	low _motorL
 12920   0059F2  6E1A               	movwf	reverseDetect@mL^0,c
 12921   0059F4  0E01               	movlw	high _motorL
 12922   0059F6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 12923   0059F8  0E54               	movlw	low _motorR
 12924   0059FA  6E1C               	movwf	reverseDetect@mR^0,c
 12925   0059FC  0E01               	movlw	high _motorR
 12926   0059FE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 12927   005A00  ECA0  F02B         	call	_reverseDetect	;wreg free
 12928                           
 12929                           ;dc_motor.c: 292:     reverseOneBlock(&motorL, &motorR);
 12930   005A04  0E5D               	movlw	low _motorL
 12931   005A06  6E1A               	movwf	reverseOneBlock@mL^0,c
 12932   005A08  0E01               	movlw	high _motorL
 12933   005A0A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 12934   005A0C  0E54               	movlw	low _motorR
 12935   005A0E  6E1C               	movwf	reverseOneBlock@mR^0,c
 12936   005A10  0E01               	movlw	high _motorR
 12937   005A12  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 12938   005A14  EC26  F02C         	call	_reverseOneBlock	;wreg free
 12939                           
 12940                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 12941   005A18  0E5D               	movlw	low _motorL
 12942   005A1A  6E1A               	movwf	turnRight45@mL^0,c
 12943   005A1C  0E01               	movlw	high _motorL
 12944   005A1E  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12945   005A20  0E54               	movlw	low _motorR
 12946   005A22  6E1C               	movwf	turnRight45@mR^0,c
 12947   005A24  0E01               	movlw	high _motorR
 12948   005A26  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12949   005A28  EC3B  F02E         	call	_turnRight45	;wreg free
 12950                           
 12951                           ;dc_motor.c: 295:     turnRight45(&motorL, &motorR);
 12952   005A2C  0E5D               	movlw	low _motorL
 12953   005A2E  6E1A               	movwf	turnRight45@mL^0,c
 12954   005A30  0E01               	movlw	high _motorL
 12955   005A32  6E1B               	movwf	(turnRight45@mL+1)^0,c
 12956   005A34  0E54               	movlw	low _motorR
 12957   005A36  6E1C               	movwf	turnRight45@mR^0,c
 12958   005A38  0E01               	movlw	high _motorR
 12959   005A3A  6E1D               	movwf	(turnRight45@mR+1)^0,c
 12960   005A3C  EC3B  F02E         	call	_turnRight45	;wreg free
 12961   005A40  0012               	return		;funcret
 12962   005A42                     __end_of_YellowMove:
 12963                           	callstack 0
 12964                           
 12965 ;; *************** function _turnRight45 *****************
 12966 ;; Defined at:
 12967 ;;		line 212 in file "dc_motor.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 12970 ;;		 -> motorL(9), 
 12971 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 12972 ;;		 -> motorR(9), 
 12973 ;; Auto vars:     Size  Location     Type
 12974 ;;		None
 12975 ;; Return value:  Size  Location     Type
 12976 ;;                  1    wreg      void 
 12977 ;; Registers used:
 12978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12979 ;; Tracked objects:
 12980 ;;		On entry : 0/0
 12981 ;;		On exit  : 0/0
 12982 ;;		Unchanged: 0/0
 12983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12988 ;;Total ram usage:        6 bytes
 12989 ;; Hardware stack levels used: 1
 12990 ;; Hardware stack levels required when called: 4
 12991 ;; This function calls:
 12992 ;;		_TurnDelay
 12993 ;;		_stop
 12994 ;;		_turnRight
 12995 ;; This function is called by:
 12996 ;;		_RedMove
 12997 ;;		_BlueMove
 12998 ;;		_YellowMove
 12999 ;;		_OrangeMove
 13000 ;;		_ReverseYellow
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text56
 13005   005C76                     __ptext56:
 13006                           	callstack 0
 13007   005C76                     _turnRight45:
 13008                           	callstack 24
 13009   005C76                     
 13010                           ;dc_motor.c: 213:     turnRight(mL,mR);
 13011   005C76  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 13012   005C7A  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 13013   005C7E  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 13014   005C82  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 13015   005C86  EC38  F028         	call	_turnRight	;wreg free
 13016   005C8A                     
 13017                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
 13018   005C8A  C0F8  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 13019   005C8E  C0F9  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 13020   005C92  ECA7  F02F         	call	_TurnDelay	;wreg free
 13021   005C96                     
 13022                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
 13023   005C96  0E5D               	movlw	low _motorL
 13024   005C98  6E14               	movwf	stop@mL^0,c
 13025   005C9A  0E01               	movlw	high _motorL
 13026   005C9C  6E15               	movwf	(stop@mL+1)^0,c
 13027   005C9E  0E54               	movlw	low _motorR
 13028   005CA0  6E16               	movwf	stop@mR^0,c
 13029   005CA2  0E01               	movlw	high _motorR
 13030   005CA4  6E17               	movwf	(stop@mR+1)^0,c
 13031   005CA6  ECB8  F029         	call	_stop	;wreg free
 13032   005CAA                     
 13033                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
 13034   005CAA  0E05               	movlw	5
 13035   005CAC  6E1F               	movwf	(??_turnRight45+1)^0,c
 13036   005CAE  0E0F               	movlw	15
 13037   005CB0  6E1E               	movwf	??_turnRight45^0,c
 13038   005CB2  0EF1               	movlw	241
 13039   005CB4                     u5987:
 13040   005CB4  2EE8               	decfsz	wreg,f,c
 13041   005CB6  D7FE               	bra	u5987
 13042   005CB8  2E1E               	decfsz	??_turnRight45^0,f,c
 13043   005CBA  D7FC               	bra	u5987
 13044   005CBC  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 13045   005CBE  D7FA               	bra	u5987
 13046   005CC0  F000               	nop	
 13047   005CC2  0012               	return		;funcret
 13048   005CC4                     __end_of_turnRight45:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _turnRight *****************
 13052 ;; Defined at:
 13053 ;;		line 130 in file "dc_motor.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 13056 ;;		 -> motorL(9), 
 13057 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 13058 ;;		 -> motorR(9), 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13070 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13074 ;;Total ram usage:        6 bytes
 13075 ;; Hardware stack levels used: 1
 13076 ;; Hardware stack levels required when called: 3
 13077 ;; This function calls:
 13078 ;;		_setMotorPWM
 13079 ;; This function is called by:
 13080 ;;		_turnRight45
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text57
 13085   005070                     __ptext57:
 13086                           	callstack 0
 13087   005070                     _turnRight:
 13088                           	callstack 24
 13089   005070                     
 13090                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
 13091   005070  EE20 F001          	lfsr	2,1
 13092   005074  5014               	movf	turnRight@mL^0,w,c
 13093   005076  26D9               	addwf	fsr2l,f,c
 13094   005078  5015               	movf	(turnRight@mL+1)^0,w,c
 13095   00507A  22DA               	addwfc	fsr2h,f,c
 13096   00507C  0E01               	movlw	1
 13097   00507E  6EDF               	movwf	indf2,c
 13098                           
 13099                           ;dc_motor.c: 133:     mR->direction =0;
 13100   005080  EE20 F001          	lfsr	2,1
 13101   005084  5016               	movf	turnRight@mR^0,w,c
 13102   005086  26D9               	addwf	fsr2l,f,c
 13103   005088  5017               	movf	(turnRight@mR+1)^0,w,c
 13104   00508A  22DA               	addwfc	fsr2h,f,c
 13105   00508C  0E00               	movlw	0
 13106   00508E  6EDF               	movwf	indf2,c
 13107                           
 13108                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
 13109   005090  EF6E  F028         	goto	l4159
 13110   005094                     l4151:
 13111                           
 13112                           ;dc_motor.c: 137:         mL->power+=10;
 13113   005094  C014  FFD9         	movff	turnRight@mL,fsr2l
 13114   005098  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 13115   00509C  0E0A               	movlw	10
 13116   00509E  26DF               	addwf	indf2,f,c
 13117                           
 13118                           ;dc_motor.c: 138:         mR->power+=10;
 13119   0050A0  C016  FFD9         	movff	turnRight@mR,fsr2l
 13120   0050A4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 13121   0050A8  0E0A               	movlw	10
 13122   0050AA  26DF               	addwf	indf2,f,c
 13123   0050AC                     
 13124                           ;dc_motor.c: 140:         setMotorPWM(mL);
 13125   0050AC  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 13126   0050B0  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 13127   0050B4  EC2E  F023         	call	_setMotorPWM	;wreg free
 13128   0050B8                     
 13129                           ;dc_motor.c: 141:         setMotorPWM(mR);
 13130   0050B8  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 13131   0050BC  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 13132   0050C0  EC2E  F023         	call	_setMotorPWM	;wreg free
 13133   0050C4                     
 13134                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
 13135   0050C4  0E02               	movlw	2
 13136   0050C6  6E19               	movwf	(??_turnRight+1)^0,c
 13137   0050C8  0EA0               	movlw	160
 13138   0050CA  6E18               	movwf	??_turnRight^0,c
 13139   0050CC  0E92               	movlw	146
 13140   0050CE                     u5997:
 13141   0050CE  2EE8               	decfsz	wreg,f,c
 13142   0050D0  D7FE               	bra	u5997
 13143   0050D2  2E18               	decfsz	??_turnRight^0,f,c
 13144   0050D4  D7FC               	bra	u5997
 13145   0050D6  2E19               	decfsz	(??_turnRight+1)^0,f,c
 13146   0050D8  D7FA               	bra	u5997
 13147   0050DA  D000               	nop2	
 13148   0050DC                     l4159:
 13149   0050DC  C014  FFD9         	movff	turnRight@mL,fsr2l
 13150   0050E0  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 13151   0050E4  0E32               	movlw	50
 13152   0050E6  60DF               	cpfslt	indf2,c
 13153   0050E8  EF78  F028         	goto	u3501
 13154   0050EC  EF7A  F028         	goto	u3500
 13155   0050F0                     u3501:
 13156   0050F0  EF86  F028         	goto	l449
 13157   0050F4                     u3500:
 13158   0050F4  C016  FFD9         	movff	turnRight@mR,fsr2l
 13159   0050F8  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 13160   0050FC  0E31               	movlw	49
 13161   0050FE  64DF               	cpfsgt	indf2,c
 13162   005100  EF84  F028         	goto	u3511
 13163   005104  EF86  F028         	goto	u3510
 13164   005108                     u3511:
 13165   005108  EF4A  F028         	goto	l4151
 13166   00510C                     u3510:
 13167   00510C                     l449:
 13168   00510C  0012               	return		;funcret
 13169   00510E                     __end_of_turnRight:
 13170                           	callstack 0
 13171                           
 13172 ;; *************** function _RetryMove *****************
 13173 ;; Defined at:
 13174 ;;		line 326 in file "dc_motor.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13177 ;;		 -> motorL(9), 
 13178 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13179 ;;		 -> motorR(9), 
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;		None
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  1    wreg      void 
 13184 ;; Registers used:
 13185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;Total ram usage:        6 bytes
 13196 ;; Hardware stack levels used: 1
 13197 ;; Hardware stack levels required when called: 5
 13198 ;; This function calls:
 13199 ;;		_fullSpeedAhead
 13200 ;;		_reverseDetect
 13201 ;;		_stop
 13202 ;; This function is called by:
 13203 ;;		_colour_move
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text58
 13208   00554A                     __ptext58:
 13209                           	callstack 0
 13210   00554A                     _RetryMove:
 13211                           	callstack 24
 13212   00554A                     
 13213                           ;dc_motor.c: 327:     reverseDetect(&motorL, &motorR);
 13214   00554A  0E5D               	movlw	low _motorL
 13215   00554C  6E1A               	movwf	reverseDetect@mL^0,c
 13216   00554E  0E01               	movlw	high _motorL
 13217   005550  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 13218   005552  0E54               	movlw	low _motorR
 13219   005554  6E1C               	movwf	reverseDetect@mR^0,c
 13220   005556  0E01               	movlw	high _motorR
 13221   005558  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 13222   00555A  ECA0  F02B         	call	_reverseDetect	;wreg free
 13223                           
 13224                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 13225   00555E  0E5D               	movlw	low _motorL
 13226   005560  6E14               	movwf	stop@mL^0,c
 13227   005562  0E01               	movlw	high _motorL
 13228   005564  6E15               	movwf	(stop@mL+1)^0,c
 13229   005566  0E54               	movlw	low _motorR
 13230   005568  6E16               	movwf	stop@mR^0,c
 13231   00556A  0E01               	movlw	high _motorR
 13232   00556C  6E17               	movwf	(stop@mR+1)^0,c
 13233   00556E  ECB8  F029         	call	_stop	;wreg free
 13234                           
 13235                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 13236   005572  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 13237   005576  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 13238   00557A  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 13239   00557E  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 13240   005582  EC25  F029         	call	_fullSpeedAhead	;wreg free
 13241   005586                     
 13242                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 13243   005586  0E29               	movlw	41
 13244   005588  6E25               	movwf	(??_RetryMove+1)^0,c
 13245   00558A  0E96               	movlw	150
 13246   00558C  6E24               	movwf	??_RetryMove^0,c
 13247   00558E  0E7F               	movlw	127
 13248   005590                     u6007:
 13249   005590  2EE8               	decfsz	wreg,f,c
 13250   005592  D7FE               	bra	u6007
 13251   005594  2E24               	decfsz	??_RetryMove^0,f,c
 13252   005596  D7FC               	bra	u6007
 13253   005598  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 13254   00559A  D7FA               	bra	u6007
 13255   00559C  F000               	nop	
 13256   00559E                     
 13257                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 13258   00559E  0E5D               	movlw	low _motorL
 13259   0055A0  6E14               	movwf	stop@mL^0,c
 13260   0055A2  0E01               	movlw	high _motorL
 13261   0055A4  6E15               	movwf	(stop@mL+1)^0,c
 13262   0055A6  0E54               	movlw	low _motorR
 13263   0055A8  6E16               	movwf	stop@mR^0,c
 13264   0055AA  0E01               	movlw	high _motorR
 13265   0055AC  6E17               	movwf	(stop@mR+1)^0,c
 13266   0055AE  ECB8  F029         	call	_stop	;wreg free
 13267   0055B2  0012               	return		;funcret
 13268   0055B4                     __end_of_RetryMove:
 13269                           	callstack 0
 13270                           
 13271 ;; *************** function _PinkMove *****************
 13272 ;; Defined at:
 13273 ;;		line 299 in file "dc_motor.c"
 13274 ;; Parameters:    Size  Location     Type
 13275 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13276 ;;		 -> motorL(9), 
 13277 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13278 ;;		 -> motorR(9), 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;Total ram usage:        4 bytes
 13295 ;; Hardware stack levels used: 1
 13296 ;; Hardware stack levels required when called: 5
 13297 ;; This function calls:
 13298 ;;		_reverseDetect
 13299 ;;		_reverseOneBlock
 13300 ;;		_turnLeft45
 13301 ;; This function is called by:
 13302 ;;		_colour_move
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text59
 13307   005A42                     __ptext59:
 13308                           	callstack 0
 13309   005A42                     _PinkMove:
 13310                           	callstack 24
 13311   005A42                     
 13312                           ;dc_motor.c: 300:     reverseDetect(&motorL, &motorR);
 13313   005A42  0E5D               	movlw	low _motorL
 13314   005A44  6E1A               	movwf	reverseDetect@mL^0,c
 13315   005A46  0E01               	movlw	high _motorL
 13316   005A48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 13317   005A4A  0E54               	movlw	low _motorR
 13318   005A4C  6E1C               	movwf	reverseDetect@mR^0,c
 13319   005A4E  0E01               	movlw	high _motorR
 13320   005A50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 13321   005A52  ECA0  F02B         	call	_reverseDetect	;wreg free
 13322                           
 13323                           ;dc_motor.c: 302:     reverseOneBlock(&motorL, &motorR);
 13324   005A56  0E5D               	movlw	low _motorL
 13325   005A58  6E1A               	movwf	reverseOneBlock@mL^0,c
 13326   005A5A  0E01               	movlw	high _motorL
 13327   005A5C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 13328   005A5E  0E54               	movlw	low _motorR
 13329   005A60  6E1C               	movwf	reverseOneBlock@mR^0,c
 13330   005A62  0E01               	movlw	high _motorR
 13331   005A64  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 13332   005A66  EC26  F02C         	call	_reverseOneBlock	;wreg free
 13333                           
 13334                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 13335   005A6A  0E5D               	movlw	low _motorL
 13336   005A6C  6E1A               	movwf	turnLeft45@mL^0,c
 13337   005A6E  0E01               	movlw	high _motorL
 13338   005A70  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 13339   005A72  0E54               	movlw	low _motorR
 13340   005A74  6E1C               	movwf	turnLeft45@mR^0,c
 13341   005A76  0E01               	movlw	high _motorR
 13342   005A78  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 13343   005A7A  EC62  F02E         	call	_turnLeft45	;wreg free
 13344                           
 13345                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
 13346   005A7E  0E5D               	movlw	low _motorL
 13347   005A80  6E1A               	movwf	turnLeft45@mL^0,c
 13348   005A82  0E01               	movlw	high _motorL
 13349   005A84  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 13350   005A86  0E54               	movlw	low _motorR
 13351   005A88  6E1C               	movwf	turnLeft45@mR^0,c
 13352   005A8A  0E01               	movlw	high _motorR
 13353   005A8C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 13354   005A8E  EC62  F02E         	call	_turnLeft45	;wreg free
 13355   005A92  0012               	return		;funcret
 13356   005A94                     __end_of_PinkMove:
 13357                           	callstack 0
 13358                           
 13359 ;; *************** function _turnLeft45 *****************
 13360 ;; Defined at:
 13361 ;;		line 219 in file "dc_motor.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13364 ;;		 -> motorL(9), 
 13365 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13366 ;;		 -> motorR(9), 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      void 
 13371 ;; Registers used:
 13372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13382 ;;Total ram usage:        6 bytes
 13383 ;; Hardware stack levels used: 1
 13384 ;; Hardware stack levels required when called: 4
 13385 ;; This function calls:
 13386 ;;		_TurnDelay
 13387 ;;		_stop
 13388 ;;		_turnLeft
 13389 ;; This function is called by:
 13390 ;;		_GreenMove
 13391 ;;		_PinkMove
 13392 ;;		_LightBlueMove
 13393 ;;		_ReversePink
 13394 ;;		_turnCalibration
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           	psect	text60
 13399   005CC4                     __ptext60:
 13400                           	callstack 0
 13401   005CC4                     _turnLeft45:
 13402                           	callstack 25
 13403   005CC4                     
 13404                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 13405   005CC4  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 13406   005CC8  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 13407   005CCC  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 13408   005CD0  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 13409   005CD4  EC87  F028         	call	_turnLeft	;wreg free
 13410   005CD8                     
 13411                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 13412   005CD8  C0F8  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 13413   005CDC  C0F9  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 13414   005CE0  ECA7  F02F         	call	_TurnDelay	;wreg free
 13415   005CE4                     
 13416                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 13417   005CE4  0E5D               	movlw	low _motorL
 13418   005CE6  6E14               	movwf	stop@mL^0,c
 13419   005CE8  0E01               	movlw	high _motorL
 13420   005CEA  6E15               	movwf	(stop@mL+1)^0,c
 13421   005CEC  0E54               	movlw	low _motorR
 13422   005CEE  6E16               	movwf	stop@mR^0,c
 13423   005CF0  0E01               	movlw	high _motorR
 13424   005CF2  6E17               	movwf	(stop@mR+1)^0,c
 13425   005CF4  ECB8  F029         	call	_stop	;wreg free
 13426   005CF8                     
 13427                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 13428   005CF8  0E05               	movlw	5
 13429   005CFA  6E1F               	movwf	(??_turnLeft45+1)^0,c
 13430   005CFC  0E0F               	movlw	15
 13431   005CFE  6E1E               	movwf	??_turnLeft45^0,c
 13432   005D00  0EF1               	movlw	241
 13433   005D02                     u6017:
 13434   005D02  2EE8               	decfsz	wreg,f,c
 13435   005D04  D7FE               	bra	u6017
 13436   005D06  2E1E               	decfsz	??_turnLeft45^0,f,c
 13437   005D08  D7FC               	bra	u6017
 13438   005D0A  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 13439   005D0C  D7FA               	bra	u6017
 13440   005D0E  F000               	nop	
 13441   005D10  0012               	return		;funcret
 13442   005D12                     __end_of_turnLeft45:
 13443                           	callstack 0
 13444                           
 13445 ;; *************** function _turnLeft *****************
 13446 ;; Defined at:
 13447 ;;		line 112 in file "dc_motor.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 13450 ;;		 -> motorL(9), 
 13451 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 13452 ;;		 -> motorR(9), 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;Total ram usage:        6 bytes
 13469 ;; Hardware stack levels used: 1
 13470 ;; Hardware stack levels required when called: 3
 13471 ;; This function calls:
 13472 ;;		_setMotorPWM
 13473 ;; This function is called by:
 13474 ;;		_turnLeft45
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           	psect	text61
 13479   00510E                     __ptext61:
 13480                           	callstack 0
 13481   00510E                     _turnLeft:
 13482                           	callstack 25
 13483   00510E                     
 13484                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 13485   00510E  EE20 F001          	lfsr	2,1
 13486   005112  5014               	movf	turnLeft@mL^0,w,c
 13487   005114  26D9               	addwf	fsr2l,f,c
 13488   005116  5015               	movf	(turnLeft@mL+1)^0,w,c
 13489   005118  22DA               	addwfc	fsr2h,f,c
 13490   00511A  0E00               	movlw	0
 13491   00511C  6EDF               	movwf	indf2,c
 13492                           
 13493                           ;dc_motor.c: 115:     mR->direction =1;
 13494   00511E  EE20 F001          	lfsr	2,1
 13495   005122  5016               	movf	turnLeft@mR^0,w,c
 13496   005124  26D9               	addwf	fsr2l,f,c
 13497   005126  5017               	movf	(turnLeft@mR+1)^0,w,c
 13498   005128  22DA               	addwfc	fsr2h,f,c
 13499   00512A  0E01               	movlw	1
 13500   00512C  6EDF               	movwf	indf2,c
 13501                           
 13502                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 13503   00512E  EFBD  F028         	goto	l4145
 13504   005132                     l4137:
 13505                           
 13506                           ;dc_motor.c: 119:         mL->power+=10;
 13507   005132  C014  FFD9         	movff	turnLeft@mL,fsr2l
 13508   005136  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 13509   00513A  0E0A               	movlw	10
 13510   00513C  26DF               	addwf	indf2,f,c
 13511                           
 13512                           ;dc_motor.c: 120:         mR->power+=10;
 13513   00513E  C016  FFD9         	movff	turnLeft@mR,fsr2l
 13514   005142  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 13515   005146  0E0A               	movlw	10
 13516   005148  26DF               	addwf	indf2,f,c
 13517   00514A                     
 13518                           ;dc_motor.c: 122:         setMotorPWM(mL);
 13519   00514A  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 13520   00514E  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 13521   005152  EC2E  F023         	call	_setMotorPWM	;wreg free
 13522   005156                     
 13523                           ;dc_motor.c: 123:         setMotorPWM(mR);
 13524   005156  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 13525   00515A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 13526   00515E  EC2E  F023         	call	_setMotorPWM	;wreg free
 13527   005162                     
 13528                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 13529   005162  0E02               	movlw	2
 13530   005164  6E19               	movwf	(??_turnLeft+1)^0,c
 13531   005166  0EA0               	movlw	160
 13532   005168  6E18               	movwf	??_turnLeft^0,c
 13533   00516A  0E92               	movlw	146
 13534   00516C                     u6027:
 13535   00516C  2EE8               	decfsz	wreg,f,c
 13536   00516E  D7FE               	bra	u6027
 13537   005170  2E18               	decfsz	??_turnLeft^0,f,c
 13538   005172  D7FC               	bra	u6027
 13539   005174  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 13540   005176  D7FA               	bra	u6027
 13541   005178  D000               	nop2	
 13542   00517A                     l4145:
 13543   00517A  C014  FFD9         	movff	turnLeft@mL,fsr2l
 13544   00517E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 13545   005182  0E32               	movlw	50
 13546   005184  60DF               	cpfslt	indf2,c
 13547   005186  EFC7  F028         	goto	u3481
 13548   00518A  EFC9  F028         	goto	u3480
 13549   00518E                     u3481:
 13550   00518E  EFD5  F028         	goto	l441
 13551   005192                     u3480:
 13552   005192  C016  FFD9         	movff	turnLeft@mR,fsr2l
 13553   005196  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 13554   00519A  0E31               	movlw	49
 13555   00519C  64DF               	cpfsgt	indf2,c
 13556   00519E  EFD3  F028         	goto	u3491
 13557   0051A2  EFD5  F028         	goto	u3490
 13558   0051A6                     u3491:
 13559   0051A6  EF99  F028         	goto	l4137
 13560   0051AA                     u3490:
 13561   0051AA                     l441:
 13562   0051AA  0012               	return		;funcret
 13563   0051AC                     __end_of_turnLeft:
 13564                           	callstack 0
 13565                           
 13566 ;; *************** function _TurnDelay *****************
 13567 ;; Defined at:
 13568 ;;		line 205 in file "dc_motor.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  Turn45Delay     2    0[COMRAM] int 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;		None
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		wreg, status,2, status,0
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;Total ram usage:        3 bytes
 13587 ;; Hardware stack levels used: 1
 13588 ;; Hardware stack levels required when called: 1
 13589 ;; This function calls:
 13590 ;;		Nothing
 13591 ;; This function is called by:
 13592 ;;		_turnRight45
 13593 ;;		_turnLeft45
 13594 ;; This function uses a non-reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text62
 13598   005F4E                     __ptext62:
 13599                           	callstack 0
 13600   005F4E                     _TurnDelay:
 13601                           	callstack 27
 13602   005F4E                     
 13603                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 13604   005F4E  EFB4  F02F         	goto	l476
 13605   005F52                     l4179:
 13606                           
 13607                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 13608   005F52  0E15               	movlw	21
 13609   005F54  6E03               	movwf	??_TurnDelay^0,c
 13610   005F56  0EC6               	movlw	198
 13611   005F58                     u6037:
 13612   005F58  2EE8               	decfsz	wreg,f,c
 13613   005F5A  D7FE               	bra	u6037
 13614   005F5C  2E03               	decfsz	??_TurnDelay^0,f,c
 13615   005F5E  D7FC               	bra	u6037
 13616   005F60  D000               	nop2	
 13617   005F62                     
 13618                           ;dc_motor.c: 208:         Turn45Delay--;
 13619   005F62  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 13620   005F64  A0D8               	btfss	status,0,c
 13621   005F66  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 13622   005F68                     l476:
 13623                           
 13624                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 13625   005F68  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 13626   005F6A  EFC1  F02F         	goto	u3540
 13627   005F6E  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 13628   005F70  E106               	bnz	u3541
 13629   005F72  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 13630   005F74  B0D8               	btfsc	status,0,c
 13631   005F76  EFBF  F02F         	goto	u3541
 13632   005F7A  EFC1  F02F         	goto	u3540
 13633   005F7E                     u3541:
 13634   005F7E  EFA9  F02F         	goto	l4179
 13635   005F82                     u3540:
 13636   005F82  0012               	return		;funcret
 13637   005F84                     __end_of_TurnDelay:
 13638                           	callstack 0
 13639                           
 13640 ;; *************** function _reverseOneBlock *****************
 13641 ;; Defined at:
 13642 ;;		line 233 in file "dc_motor.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13645 ;;		 -> motorL(9), 
 13646 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13647 ;;		 -> motorR(9), 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13662 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13663 ;;Total ram usage:        6 bytes
 13664 ;; Hardware stack levels used: 1
 13665 ;; Hardware stack levels required when called: 4
 13666 ;; This function calls:
 13667 ;;		_fullSpeedBack
 13668 ;;		_stop
 13669 ;; This function is called by:
 13670 ;;		_YellowMove
 13671 ;;		_PinkMove
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           
 13675                           	psect	text63
 13676   00584C                     __ptext63:
 13677                           	callstack 0
 13678   00584C                     _reverseOneBlock:
 13679                           	callstack 24
 13680   00584C                     
 13681                           ;dc_motor.c: 234:     fullSpeedBack(mL,mR);
 13682   00584C  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 13683   005850  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 13684   005854  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 13685   005858  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 13686   00585C  ECD6  F028         	call	_fullSpeedBack	;wreg free
 13687   005860                     
 13688                           ;dc_motor.c: 235:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 13689   005860  0E56               	movlw	86
 13690   005862  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 13691   005864  0E3A               	movlw	58
 13692   005866  6E1E               	movwf	??_reverseOneBlock^0,c
 13693   005868  0EF4               	movlw	244
 13694   00586A                     u6047:
 13695   00586A  2EE8               	decfsz	wreg,f,c
 13696   00586C  D7FE               	bra	u6047
 13697   00586E  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 13698   005870  D7FC               	bra	u6047
 13699   005872  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 13700   005874  D7FA               	bra	u6047
 13701   005876                     
 13702                           ;dc_motor.c: 236:     stop(&motorL, &motorR);
 13703   005876  0E5D               	movlw	low _motorL
 13704   005878  6E14               	movwf	stop@mL^0,c
 13705   00587A  0E01               	movlw	high _motorL
 13706   00587C  6E15               	movwf	(stop@mL+1)^0,c
 13707   00587E  0E54               	movlw	low _motorR
 13708   005880  6E16               	movwf	stop@mR^0,c
 13709   005882  0E01               	movlw	high _motorR
 13710   005884  6E17               	movwf	(stop@mR+1)^0,c
 13711   005886  ECB8  F029         	call	_stop	;wreg free
 13712                           
 13713                           ;dc_motor.c: 237:     _delay((unsigned long)((50)*(64000000/4000.0)));
 13714   00588A  0E05               	movlw	5
 13715   00588C  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 13716   00588E  0E0F               	movlw	15
 13717   005890  6E1E               	movwf	??_reverseOneBlock^0,c
 13718   005892  0EF1               	movlw	241
 13719   005894                     u6057:
 13720   005894  2EE8               	decfsz	wreg,f,c
 13721   005896  D7FE               	bra	u6057
 13722   005898  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 13723   00589A  D7FC               	bra	u6057
 13724   00589C  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 13725   00589E  D7FA               	bra	u6057
 13726   0058A0  F000               	nop	
 13727   0058A2  0012               	return		;funcret
 13728   0058A4                     __end_of_reverseOneBlock:
 13729                           	callstack 0
 13730                           
 13731 ;; *************** function _reverseDetect *****************
 13732 ;; Defined at:
 13733 ;;		line 226 in file "dc_motor.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13736 ;;		 -> motorL(9), 
 13737 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13738 ;;		 -> motorR(9), 
 13739 ;; Auto vars:     Size  Location     Type
 13740 ;;		None
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  1    wreg      void 
 13743 ;; Registers used:
 13744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13745 ;; Tracked objects:
 13746 ;;		On entry : 0/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13754 ;;Total ram usage:        6 bytes
 13755 ;; Hardware stack levels used: 1
 13756 ;; Hardware stack levels required when called: 4
 13757 ;; This function calls:
 13758 ;;		_fullSpeedBack
 13759 ;;		_stop
 13760 ;; This function is called by:
 13761 ;;		_RedMove
 13762 ;;		_GreenMove
 13763 ;;		_BlueMove
 13764 ;;		_YellowMove
 13765 ;;		_PinkMove
 13766 ;;		_OrangeMove
 13767 ;;		_LightBlueMove
 13768 ;;		_RetryMove
 13769 ;;		_ReverseYellow
 13770 ;;		_ReversePink
 13771 ;;		_go_Home
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           	psect	text64
 13776   005740                     __ptext64:
 13777                           	callstack 0
 13778   005740                     _reverseDetect:
 13779                           	callstack 25
 13780   005740                     
 13781                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 13782   005740  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 13783   005744  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 13784   005748  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 13785   00574C  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 13786   005750  ECD6  F028         	call	_fullSpeedBack	;wreg free
 13787   005754                     
 13788                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13789   005754  0E11               	movlw	17
 13790   005756  6E1F               	movwf	(??_reverseDetect+1)^0,c
 13791   005758  0E3C               	movlw	60
 13792   00575A  6E1E               	movwf	??_reverseDetect^0,c
 13793   00575C  0ECB               	movlw	203
 13794   00575E                     u6067:
 13795   00575E  2EE8               	decfsz	wreg,f,c
 13796   005760  D7FE               	bra	u6067
 13797   005762  2E1E               	decfsz	??_reverseDetect^0,f,c
 13798   005764  D7FC               	bra	u6067
 13799   005766  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 13800   005768  D7FA               	bra	u6067
 13801   00576A  F000               	nop	
 13802   00576C                     
 13803                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 13804   00576C  0E5D               	movlw	low _motorL
 13805   00576E  6E14               	movwf	stop@mL^0,c
 13806   005770  0E01               	movlw	high _motorL
 13807   005772  6E15               	movwf	(stop@mL+1)^0,c
 13808   005774  0E54               	movlw	low _motorR
 13809   005776  6E16               	movwf	stop@mR^0,c
 13810   005778  0E01               	movlw	high _motorR
 13811   00577A  6E17               	movwf	(stop@mR+1)^0,c
 13812   00577C  ECB8  F029         	call	_stop	;wreg free
 13813                           
 13814                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 13815   005780  0E05               	movlw	5
 13816   005782  6E1F               	movwf	(??_reverseDetect+1)^0,c
 13817   005784  0E0F               	movlw	15
 13818   005786  6E1E               	movwf	??_reverseDetect^0,c
 13819   005788  0EF1               	movlw	241
 13820   00578A                     u6077:
 13821   00578A  2EE8               	decfsz	wreg,f,c
 13822   00578C  D7FE               	bra	u6077
 13823   00578E  2E1E               	decfsz	??_reverseDetect^0,f,c
 13824   005790  D7FC               	bra	u6077
 13825   005792  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 13826   005794  D7FA               	bra	u6077
 13827   005796  F000               	nop	
 13828   005798  0012               	return		;funcret
 13829   00579A                     __end_of_reverseDetect:
 13830                           	callstack 0
 13831                           
 13832 ;; *************** function _fullSpeedBack *****************
 13833 ;; Defined at:
 13834 ;;		line 186 in file "dc_motor.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 13837 ;;		 -> motorL(9), 
 13838 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 13839 ;;		 -> motorR(9), 
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;		None
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      void 
 13844 ;; Registers used:
 13845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 0/0
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13855 ;;Total ram usage:        6 bytes
 13856 ;; Hardware stack levels used: 1
 13857 ;; Hardware stack levels required when called: 3
 13858 ;; This function calls:
 13859 ;;		_setMotorPWM
 13860 ;; This function is called by:
 13861 ;;		_reverseDetect
 13862 ;;		_reverseOneBlock
 13863 ;;		_Backhalfblock
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           	psect	text65
 13868   0051AC                     __ptext65:
 13869                           	callstack 0
 13870   0051AC                     _fullSpeedBack:
 13871                           	callstack 25
 13872   0051AC                     
 13873                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 13874   0051AC  EE20 F001          	lfsr	2,1
 13875   0051B0  5014               	movf	fullSpeedBack@mL^0,w,c
 13876   0051B2  26D9               	addwf	fsr2l,f,c
 13877   0051B4  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 13878   0051B6  22DA               	addwfc	fsr2h,f,c
 13879   0051B8  0E00               	movlw	0
 13880   0051BA  6EDF               	movwf	indf2,c
 13881                           
 13882                           ;dc_motor.c: 190:     mR->direction =0;
 13883   0051BC  EE20 F001          	lfsr	2,1
 13884   0051C0  5016               	movf	fullSpeedBack@mR^0,w,c
 13885   0051C2  26D9               	addwf	fsr2l,f,c
 13886   0051C4  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 13887   0051C6  22DA               	addwfc	fsr2h,f,c
 13888   0051C8  0E00               	movlw	0
 13889   0051CA  6EDF               	movwf	indf2,c
 13890                           
 13891                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 13892   0051CC  EF0C  F029         	goto	l4173
 13893   0051D0                     l4165:
 13894                           
 13895                           ;dc_motor.c: 193:         mL->power+=10;
 13896   0051D0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13897   0051D4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13898   0051D8  0E0A               	movlw	10
 13899   0051DA  26DF               	addwf	indf2,f,c
 13900                           
 13901                           ;dc_motor.c: 194:         mR->power+=10;
 13902   0051DC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13903   0051E0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13904   0051E4  0E0A               	movlw	10
 13905   0051E6  26DF               	addwf	indf2,f,c
 13906   0051E8                     
 13907                           ;dc_motor.c: 196:         setMotorPWM(mL);
 13908   0051E8  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 13909   0051EC  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 13910   0051F0  EC2E  F023         	call	_setMotorPWM	;wreg free
 13911   0051F4                     
 13912                           ;dc_motor.c: 197:         setMotorPWM(mR);
 13913   0051F4  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 13914   0051F8  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 13915   0051FC  EC2E  F023         	call	_setMotorPWM	;wreg free
 13916   005200                     
 13917                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 13918   005200  0E02               	movlw	2
 13919   005202  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 13920   005204  0EA0               	movlw	160
 13921   005206  6E18               	movwf	??_fullSpeedBack^0,c
 13922   005208  0E92               	movlw	146
 13923   00520A                     u6087:
 13924   00520A  2EE8               	decfsz	wreg,f,c
 13925   00520C  D7FE               	bra	u6087
 13926   00520E  2E18               	decfsz	??_fullSpeedBack^0,f,c
 13927   005210  D7FC               	bra	u6087
 13928   005212  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 13929   005214  D7FA               	bra	u6087
 13930   005216  D000               	nop2	
 13931   005218                     l4173:
 13932   005218  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13933   00521C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13934   005220  0E32               	movlw	50
 13935   005222  60DF               	cpfslt	indf2,c
 13936   005224  EF16  F029         	goto	u3521
 13937   005228  EF18  F029         	goto	u3520
 13938   00522C                     u3521:
 13939   00522C  EF24  F029         	goto	l473
 13940   005230                     u3520:
 13941   005230  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13942   005234  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13943   005238  0E31               	movlw	49
 13944   00523A  64DF               	cpfsgt	indf2,c
 13945   00523C  EF22  F029         	goto	u3531
 13946   005240  EF24  F029         	goto	u3530
 13947   005244                     u3531:
 13948   005244  EFE8  F028         	goto	l4165
 13949   005248                     u3530:
 13950   005248                     l473:
 13951   005248  0012               	return		;funcret
 13952   00524A                     __end_of_fullSpeedBack:
 13953                           	callstack 0
 13954                           
 13955 ;; *************** function _color_click_init *****************
 13956 ;; Defined at:
 13957 ;;		line 8 in file "color.c"
 13958 ;; Parameters:    Size  Location     Type
 13959 ;;		None
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;		None
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  1    wreg      void 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0, cstack
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13975 ;;Total ram usage:        1 bytes
 13976 ;; Hardware stack levels used: 1
 13977 ;; Hardware stack levels required when called: 4
 13978 ;; This function calls:
 13979 ;;		_I2C_2_Master_Init
 13980 ;;		_color_writetoaddr
 13981 ;; This function is called by:
 13982 ;;		_main
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986                           	psect	text66
 13987   005A94                     __ptext66:
 13988                           	callstack 0
 13989   005A94                     _color_click_init:
 13990                           	callstack 26
 13991   005A94                     
 13992                           ;color.c: 11:     I2C_2_Master_Init();
 13993   005A94  ECDA  F02F         	call	_I2C_2_Master_Init	;wreg free
 13994   005A98                     
 13995                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 13996   005A98  0E01               	movlw	1
 13997   005A9A  6E03               	movwf	color_writetoaddr@value^0,c
 13998   005A9C  0E00               	movlw	0
 13999   005A9E  EC29  F030         	call	_color_writetoaddr
 14000   005AA2                     
 14001                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14002   005AA2  0E3F               	movlw	63
 14003   005AA4  6E05               	movwf	??_color_click_init^0,c
 14004   005AA6  0E55               	movlw	85
 14005   005AA8                     u6097:
 14006   005AA8  2EE8               	decfsz	wreg,f,c
 14007   005AAA  D7FE               	bra	u6097
 14008   005AAC  2E05               	decfsz	??_color_click_init^0,f,c
 14009   005AAE  D7FC               	bra	u6097
 14010   005AB0  F000               	nop	
 14011   005AB2                     
 14012                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 14013   005AB2  0E03               	movlw	3
 14014   005AB4  6E03               	movwf	color_writetoaddr@value^0,c
 14015   005AB6  0E00               	movlw	0
 14016   005AB8  EC29  F030         	call	_color_writetoaddr
 14017   005ABC                     
 14018                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 14019   005ABC  0ED5               	movlw	213
 14020   005ABE  6E03               	movwf	color_writetoaddr@value^0,c
 14021   005AC0  0E01               	movlw	1
 14022   005AC2  EC29  F030         	call	_color_writetoaddr
 14023   005AC6                     
 14024                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 14025   005AC6  0E00               	movlw	0
 14026   005AC8  6E03               	movwf	color_writetoaddr@value^0,c
 14027   005ACA  0E0F               	movlw	15
 14028   005ACC  EC29  F030         	call	_color_writetoaddr
 14029   005AD0                     
 14030                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 14031   005AD0  9287               	bcf	135,1,c	;volatile
 14032   005AD2                     
 14033                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 14034   005AD2  9881               	bcf	129,4,c	;volatile
 14035   005AD4                     
 14036                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 14037   005AD4  9E86               	bcf	134,7,c	;volatile
 14038   005AD6                     
 14039                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 14040   005AD6  9684               	bcf	132,3,c	;volatile
 14041   005AD8                     
 14042                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 14043   005AD8  9884               	bcf	132,4,c	;volatile
 14044   005ADA                     
 14045                           ;color.c: 29:     LATGbits.LATG1=0;
 14046   005ADA  927F               	bcf	127,1,c	;volatile
 14047   005ADC                     
 14048                           ;color.c: 30:     LATFbits.LATF7=0;
 14049   005ADC  9E7E               	bcf	126,7,c	;volatile
 14050   005ADE                     
 14051                           ;color.c: 31:     LATAbits.LATA4=0;
 14052   005ADE  9879               	bcf	121,4,c	;volatile
 14053   005AE0                     
 14054                           ;color.c: 33:     LATDbits.LATD3=0;
 14055   005AE0  967C               	bcf	124,3,c	;volatile
 14056   005AE2                     
 14057                           ;color.c: 34:     LATDbits.LATD4=0;
 14058   005AE2  987C               	bcf	124,4,c	;volatile
 14059   005AE4  0012               	return		;funcret
 14060   005AE6                     __end_of_color_click_init:
 14061                           	callstack 0
 14062                           
 14063 ;; *************** function _color_writetoaddr *****************
 14064 ;; Defined at:
 14065 ;;		line 42 in file "color.c"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;  address         1    wreg     unsigned char 
 14068 ;;  value           1    2[COMRAM] unsigned char 
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;  address         1    3[COMRAM] unsigned char 
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1    wreg      void 
 14073 ;; Registers used:
 14074 ;;		wreg, status,2, status,0, cstack
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;Total ram usage:        2 bytes
 14085 ;; Hardware stack levels used: 1
 14086 ;; Hardware stack levels required when called: 3
 14087 ;; This function calls:
 14088 ;;		_I2C_2_Master_Start
 14089 ;;		_I2C_2_Master_Stop
 14090 ;;		_I2C_2_Master_Write
 14091 ;; This function is called by:
 14092 ;;		_color_click_init
 14093 ;; This function uses a non-reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text67
 14097   006052                     __ptext67:
 14098                           	callstack 0
 14099   006052                     _color_writetoaddr:
 14100                           	callstack 26
 14101                           
 14102                           ;incstack = 0
 14103                           ;color_writetoaddr@address stored from wreg
 14104   006052  6E04               	movwf	color_writetoaddr@address^0,c
 14105   006054                     
 14106                           ;color.c: 43:     I2C_2_Master_Start();
 14107   006054  EC80  F030         	call	_I2C_2_Master_Start	;wreg free
 14108                           
 14109                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 14110   006058  0E52               	movlw	82
 14111   00605A  EC64  F030         	call	_I2C_2_Master_Write
 14112                           
 14113                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 14114   00605E  5004               	movf	color_writetoaddr@address^0,w,c
 14115   006060  0980               	iorlw	128
 14116   006062  EC64  F030         	call	_I2C_2_Master_Write
 14117                           
 14118                           ;color.c: 46:     I2C_2_Master_Write(value);
 14119   006066  5003               	movf	color_writetoaddr@value^0,w,c
 14120   006068  EC64  F030         	call	_I2C_2_Master_Write
 14121                           
 14122                           ;color.c: 47:     I2C_2_Master_Stop();
 14123   00606C  EC7B  F030         	call	_I2C_2_Master_Stop	;wreg free
 14124   006070  0012               	return		;funcret
 14125   006072                     __end_of_color_writetoaddr:
 14126                           	callstack 0
 14127                           
 14128 ;; *************** function _I2C_2_Master_Write *****************
 14129 ;; Defined at:
 14130 ;;		line 45 in file "i2c.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;  data_byte       1    wreg     unsigned char 
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  data_byte       1    1[COMRAM] unsigned char 
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  1    wreg      void 
 14137 ;; Registers used:
 14138 ;;		wreg, status,2, status,0, cstack
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;Total ram usage:        1 bytes
 14149 ;; Hardware stack levels used: 1
 14150 ;; Hardware stack levels required when called: 2
 14151 ;; This function calls:
 14152 ;;		_I2C_2_Master_Idle
 14153 ;; This function is called by:
 14154 ;;		_color_writetoaddr
 14155 ;;		_color_read_lum
 14156 ;;		_color_read_Red
 14157 ;;		_color_read_Green
 14158 ;;		_color_read_Blue
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           	psect	text68
 14163   0060C8                     __ptext68:
 14164                           	callstack 0
 14165   0060C8                     _I2C_2_Master_Write:
 14166                           	callstack 26
 14167                           
 14168                           ;incstack = 0
 14169                           ;I2C_2_Master_Write@data_byte stored from wreg
 14170   0060C8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 14171   0060CA                     
 14172                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 14173   0060CA  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14174   0060CE                     
 14175                           ;i2c.c: 48:   SSP2BUF = data_byte;
 14176   0060CE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14177   0060D2  0012               	return		;funcret
 14178   0060D4                     __end_of_I2C_2_Master_Write:
 14179                           	callstack 0
 14180                           
 14181 ;; *************** function _I2C_2_Master_Stop *****************
 14182 ;; Defined at:
 14183 ;;		line 39 in file "i2c.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;		None
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      void 
 14190 ;; Registers used:
 14191 ;;		wreg, status,2, status,0, cstack
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14201 ;;Total ram usage:        0 bytes
 14202 ;; Hardware stack levels used: 1
 14203 ;; Hardware stack levels required when called: 2
 14204 ;; This function calls:
 14205 ;;		_I2C_2_Master_Idle
 14206 ;; This function is called by:
 14207 ;;		_color_writetoaddr
 14208 ;;		_color_read_lum
 14209 ;;		_color_read_Red
 14210 ;;		_color_read_Green
 14211 ;;		_color_read_Blue
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           	psect	text69
 14216   0060F6                     __ptext69:
 14217                           	callstack 0
 14218   0060F6                     _I2C_2_Master_Stop:
 14219                           	callstack 26
 14220   0060F6                     
 14221                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14222   0060F6  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14223   0060FA                     
 14224                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 14225   0060FA  010E               	movlb	14	; () banked
 14226   0060FC  85DA               	bsf	218,2,b	;volatile
 14227   0060FE                     
 14228                           ; BSR set to: 14
 14229   0060FE  0012               	return		;funcret
 14230   006100                     __end_of_I2C_2_Master_Stop:
 14231                           	callstack 0
 14232                           
 14233 ;; *************** function _I2C_2_Master_Start *****************
 14234 ;; Defined at:
 14235 ;;		line 27 in file "i2c.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;		None
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;		None
 14240 ;; Return value:  Size  Location     Type
 14241 ;;                  1    wreg      void 
 14242 ;; Registers used:
 14243 ;;		wreg, status,2, status,0, cstack
 14244 ;; Tracked objects:
 14245 ;;		On entry : 0/0
 14246 ;;		On exit  : 0/0
 14247 ;;		Unchanged: 0/0
 14248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14253 ;;Total ram usage:        0 bytes
 14254 ;; Hardware stack levels used: 1
 14255 ;; Hardware stack levels required when called: 2
 14256 ;; This function calls:
 14257 ;;		_I2C_2_Master_Idle
 14258 ;; This function is called by:
 14259 ;;		_color_writetoaddr
 14260 ;;		_color_read_lum
 14261 ;;		_color_read_Red
 14262 ;;		_color_read_Green
 14263 ;;		_color_read_Blue
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           	psect	text70
 14268   006100                     __ptext70:
 14269                           	callstack 0
 14270   006100                     _I2C_2_Master_Start:
 14271                           	callstack 26
 14272   006100                     
 14273                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14274   006100  ECEF  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14275   006104                     
 14276                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14277   006104  010E               	movlb	14	; () banked
 14278   006106  81DA               	bsf	218,0,b	;volatile
 14279   006108                     
 14280                           ; BSR set to: 14
 14281   006108  0012               	return		;funcret
 14282   00610A                     __end_of_I2C_2_Master_Start:
 14283                           	callstack 0
 14284                           
 14285 ;; *************** function _I2C_2_Master_Idle *****************
 14286 ;; Defined at:
 14287 ;;		line 22 in file "i2c.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;		None
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      void 
 14294 ;; Registers used:
 14295 ;;		wreg, status,2, status,0
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14305 ;;Total ram usage:        1 bytes
 14306 ;; Hardware stack levels used: 1
 14307 ;; Hardware stack levels required when called: 1
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_I2C_2_Master_Start
 14312 ;;		_I2C_2_Master_RepStart
 14313 ;;		_I2C_2_Master_Stop
 14314 ;;		_I2C_2_Master_Write
 14315 ;;		_I2C_2_Master_Read
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text71
 14320   005FDE                     __ptext71:
 14321                           	callstack 0
 14322   005FDE                     _I2C_2_Master_Idle:
 14323                           	callstack 26
 14324   005FDE                     l145:
 14325   005FDE  010E               	movlb	14	; () banked
 14326   005FE0  B5D8               	btfsc	216,2,b	;volatile
 14327   005FE2  EFF5  F02F         	goto	u3421
 14328   005FE6  EFF7  F02F         	goto	u3420
 14329   005FEA                     u3421:
 14330   005FEA  EFEF  F02F         	goto	l145
 14331   005FEE                     u3420:
 14332   005FEE                     
 14333                           ; BSR set to: 14
 14334   005FEE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14335   005FF2  0E1F               	movlw	31
 14336   005FF4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14337   005FF6  A4D8               	btfss	status,2,c
 14338   005FF8  EF00  F030         	goto	u3431
 14339   005FFC  EF02  F030         	goto	u3430
 14340   006000                     u3431:
 14341   006000  EFEF  F02F         	goto	l145
 14342   006004                     u3430:
 14343   006004                     
 14344                           ; BSR set to: 14
 14345   006004  0012               	return		;funcret
 14346   006006                     __end_of_I2C_2_Master_Idle:
 14347                           	callstack 0
 14348                           
 14349 ;; *************** function _I2C_2_Master_Init *****************
 14350 ;; Defined at:
 14351 ;;		line 4 in file "i2c.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;		None
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;		None
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		wreg, status,2
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14369 ;;Total ram usage:        0 bytes
 14370 ;; Hardware stack levels used: 1
 14371 ;; Hardware stack levels required when called: 1
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_color_click_init
 14376 ;;		_main
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text72
 14381   005FB4                     __ptext72:
 14382                           	callstack 0
 14383   005FB4                     _I2C_2_Master_Init:
 14384                           	callstack 28
 14385   005FB4                     
 14386                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14387   005FB4  010E               	movlb	14	; () banked
 14388   005FB6  51D9               	movf	217,w,b	;volatile
 14389   005FB8  0BF0               	andlw	-16
 14390   005FBA  0908               	iorlw	8
 14391   005FBC  6FD9               	movwf	217,b	;volatile
 14392   005FBE                     
 14393                           ; BSR set to: 14
 14394                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14395   005FBE  8BD9               	bsf	217,5,b	;volatile
 14396                           
 14397                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14398   005FC0  0E9F               	movlw	159
 14399   005FC2  6FD6               	movwf	214,b	;volatile
 14400   005FC4                     
 14401                           ; BSR set to: 14
 14402                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14403   005FC4  8A84               	bsf	132,5,c	;volatile
 14404   005FC6                     
 14405                           ; BSR set to: 14
 14406                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14407   005FC6  8C84               	bsf	132,6,c	;volatile
 14408   005FC8                     
 14409                           ; BSR set to: 14
 14410                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14411   005FC8  9BA7               	bcf	167,5,b	;volatile
 14412   005FCA                     
 14413                           ; BSR set to: 14
 14414                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14415   005FCA  9DA7               	bcf	167,6,b	;volatile
 14416                           
 14417                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14418   005FCC  0E1D               	movlw	29
 14419   005FCE  6F1D               	movwf	29,b	;volatile
 14420                           
 14421                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14422   005FD0  0E1E               	movlw	30
 14423   005FD2  6F1C               	movwf	28,b	;volatile
 14424                           
 14425                           ;i2c.c: 18:   RD5PPS=0x1C;
 14426   005FD4  0E1C               	movlw	28
 14427   005FD6  6F6F               	movwf	111,b	;volatile
 14428                           
 14429                           ;i2c.c: 19:   RD6PPS=0x1B;
 14430   005FD8  0E1B               	movlw	27
 14431   005FDA  6F70               	movwf	112,b	;volatile
 14432   005FDC                     
 14433                           ; BSR set to: 14
 14434   005FDC  0012               	return		;funcret
 14435   005FDE                     __end_of_I2C_2_Master_Init:
 14436                           	callstack 0
 14437                           
 14438 ;; *************** function _Timer0_init *****************
 14439 ;; Defined at:
 14440 ;;		line 8 in file "timers.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, status,2
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; Hardware stack levels required when called: 1
 14461 ;; This function calls:
 14462 ;;		Nothing
 14463 ;; This function is called by:
 14464 ;;		_main
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text73
 14469   006072                     __ptext73:
 14470                           	callstack 0
 14471   006072                     _Timer0_init:
 14472                           	callstack 29
 14473   006072                     
 14474                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 14475   006072  50D6               	movf	214,w,c	;volatile
 14476   006074  0B1F               	andlw	-225
 14477   006076  0940               	iorlw	64
 14478   006078  6ED6               	movwf	214,c	;volatile
 14479   00607A                     
 14480                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 14481   00607A  88D6               	bsf	214,4,c	;volatile
 14482                           
 14483                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 14484   00607C  50D6               	movf	214,w,c	;volatile
 14485   00607E  0BF0               	andlw	-16
 14486   006080  090D               	iorlw	13
 14487   006082  6ED6               	movwf	214,c	;volatile
 14488   006084                     
 14489                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 14490   006084  88D5               	bsf	213,4,c	;volatile
 14491                           
 14492                           ;timers.c: 16:     TMR0H=0;
 14493   006086  0E00               	movlw	0
 14494   006088  6ED4               	movwf	212,c	;volatile
 14495                           
 14496                           ;timers.c: 17:     TMR0L=0;
 14497   00608A  0E00               	movlw	0
 14498   00608C  6ED3               	movwf	211,c	;volatile
 14499   00608E                     
 14500                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 14501   00608E  9ED5               	bcf	213,7,c	;volatile
 14502   006090  0012               	return		;funcret
 14503   006092                     __end_of_Timer0_init:
 14504                           	callstack 0
 14505                           
 14506 ;; *************** function _LED_init *****************
 14507 ;; Defined at:
 14508 ;;		line 6 in file "LED_buttons.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;		None
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;		None
 14513 ;; Return value:  Size  Location     Type
 14514 ;;                  1    wreg      void 
 14515 ;; Registers used:
 14516 ;;		None
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14526 ;;Total ram usage:        0 bytes
 14527 ;; Hardware stack levels used: 1
 14528 ;; Hardware stack levels required when called: 1
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_main
 14533 ;; This function uses a non-reentrant model
 14534 ;;
 14535                           
 14536                           	psect	text74
 14537   006006                     __ptext74:
 14538                           	callstack 0
 14539   006006                     _LED_init:
 14540                           	callstack 29
 14541   006006                     
 14542                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 14543   006006  9287               	bcf	135,1,c	;volatile
 14544                           
 14545                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 14546   006008  9881               	bcf	129,4,c	;volatile
 14547                           
 14548                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 14549   00600A  9E86               	bcf	134,7,c	;volatile
 14550                           
 14551                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 14552   00600C  827F               	bsf	127,1,c	;volatile
 14553                           
 14554                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 14555   00600E  8879               	bsf	121,4,c	;volatile
 14556                           
 14557                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 14558   006010  8E7E               	bsf	126,7,c	;volatile
 14559                           
 14560                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 14561   006012  9E7C               	bcf	124,7,c	;volatile
 14562                           
 14563                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 14564   006014  9E84               	bcf	132,7,c	;volatile
 14565                           
 14566                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 14567   006016  9680               	bcf	128,3,c	;volatile
 14568                           
 14569                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 14570   006018  9688               	bcf	136,3,c	;volatile
 14571                           
 14572                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 14573   00601A  9080               	bcf	128,0,c	;volatile
 14574                           
 14575                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 14576   00601C  9088               	bcf	136,0,c	;volatile
 14577                           
 14578                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 14579   00601E  907E               	bcf	126,0,c	;volatile
 14580                           
 14581                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 14582   006020  9086               	bcf	134,0,c	;volatile
 14583                           
 14584                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 14585   006022  987C               	bcf	124,4,c	;volatile
 14586                           
 14587                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 14588   006024  9884               	bcf	132,4,c	;volatile
 14589                           
 14590                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 14591   006026  967C               	bcf	124,3,c	;volatile
 14592                           
 14593                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 14594   006028  9684               	bcf	132,3,c	;volatile
 14595   00602A  0012               	return		;funcret
 14596   00602C                     __end_of_LED_init:
 14597                           	callstack 0
 14598                           
 14599 ;; *************** function _Interrupts_init *****************
 14600 ;; Defined at:
 14601 ;;		line 9 in file "interrupts.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		None
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14619 ;;Total ram usage:        0 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 1
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_main
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text75
 14630   0060D4                     __ptext75:
 14631                           	callstack 0
 14632   0060D4                     _Interrupts_init:
 14633                           	callstack 29
 14634   0060D4                     
 14635                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 14636   0060D4  9AF2               	bcf	242,5,c	;volatile
 14637                           
 14638                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 14639   0060D6  9CF2               	bcf	242,6,c	;volatile
 14640                           
 14641                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 14642   0060D8  8EF2               	bsf	242,7,c	;volatile
 14643                           
 14644                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 14645   0060DA  010E               	movlb	14	; () banked
 14646   0060DC  8B29               	bsf	41,5,b	;volatile
 14647   0060DE                     
 14648                           ; BSR set to: 14
 14649   0060DE  0012               	return		;funcret
 14650   0060E0                     __end_of_Interrupts_init:
 14651                           	callstack 0
 14652                           
 14653 ;; *************** function _Forwardhalfblock *****************
 14654 ;; Defined at:
 14655 ;;		line 246 in file "dc_motor.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 14658 ;;		 -> motorL(9), 
 14659 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 14660 ;;		 -> motorR(9), 
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;		None
 14663 ;; Return value:  Size  Location     Type
 14664 ;;                  1    wreg      void 
 14665 ;; Registers used:
 14666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;Total ram usage:        6 bytes
 14677 ;; Hardware stack levels used: 1
 14678 ;; Hardware stack levels required when called: 4
 14679 ;; This function calls:
 14680 ;;		_fullSpeedAhead
 14681 ;;		_stop
 14682 ;; This function is called by:
 14683 ;;		_main
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text76
 14688   00579A                     __ptext76:
 14689                           	callstack 0
 14690   00579A                     _Forwardhalfblock:
 14691                           	callstack 26
 14692   00579A                     
 14693                           ;dc_motor.c: 247:     fullSpeedAhead(mL,mR);
 14694   00579A  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 14695   00579E  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 14696   0057A2  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 14697   0057A6  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 14698   0057AA  EC25  F029         	call	_fullSpeedAhead	;wreg free
 14699   0057AE                     
 14700                           ;dc_motor.c: 248:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 14701   0057AE  0E2B               	movlw	43
 14702   0057B0  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 14703   0057B2  0E9D               	movlw	157
 14704   0057B4  6E1E               	movwf	??_Forwardhalfblock^0,c
 14705   0057B6  0EF9               	movlw	249
 14706   0057B8                     u6107:
 14707   0057B8  2EE8               	decfsz	wreg,f,c
 14708   0057BA  D7FE               	bra	u6107
 14709   0057BC  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 14710   0057BE  D7FC               	bra	u6107
 14711   0057C0  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 14712   0057C2  D7FA               	bra	u6107
 14713   0057C4  F000               	nop	
 14714   0057C6                     
 14715                           ;dc_motor.c: 249:     stop(&motorL, &motorR);
 14716   0057C6  0E5D               	movlw	low _motorL
 14717   0057C8  6E14               	movwf	stop@mL^0,c
 14718   0057CA  0E01               	movlw	high _motorL
 14719   0057CC  6E15               	movwf	(stop@mL+1)^0,c
 14720   0057CE  0E54               	movlw	low _motorR
 14721   0057D0  6E16               	movwf	stop@mR^0,c
 14722   0057D2  0E01               	movlw	high _motorR
 14723   0057D4  6E17               	movwf	(stop@mR+1)^0,c
 14724   0057D6  ECB8  F029         	call	_stop	;wreg free
 14725                           
 14726                           ;dc_motor.c: 250:     _delay((unsigned long)((50)*(64000000/4000.0)));
 14727   0057DA  0E05               	movlw	5
 14728   0057DC  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 14729   0057DE  0E0F               	movlw	15
 14730   0057E0  6E1E               	movwf	??_Forwardhalfblock^0,c
 14731   0057E2  0EF1               	movlw	241
 14732   0057E4                     u6117:
 14733   0057E4  2EE8               	decfsz	wreg,f,c
 14734   0057E6  D7FE               	bra	u6117
 14735   0057E8  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 14736   0057EA  D7FC               	bra	u6117
 14737   0057EC  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 14738   0057EE  D7FA               	bra	u6117
 14739   0057F0  F000               	nop	
 14740   0057F2  0012               	return		;funcret
 14741   0057F4                     __end_of_Forwardhalfblock:
 14742                           	callstack 0
 14743                           
 14744 ;; *************** function _stop *****************
 14745 ;; Defined at:
 14746 ;;		line 94 in file "dc_motor.c"
 14747 ;; Parameters:    Size  Location     Type
 14748 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 14749 ;;		 -> motorL(9), 
 14750 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 14751 ;;		 -> motorR(9), 
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      void 
 14756 ;; Registers used:
 14757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14767 ;;Total ram usage:        6 bytes
 14768 ;; Hardware stack levels used: 1
 14769 ;; Hardware stack levels required when called: 3
 14770 ;; This function calls:
 14771 ;;		_setMotorPWM
 14772 ;; This function is called by:
 14773 ;;		_main
 14774 ;;		_turnRight45
 14775 ;;		_turnLeft45
 14776 ;;		_reverseDetect
 14777 ;;		_reverseOneBlock
 14778 ;;		_ForwardOneBlock
 14779 ;;		_Forwardhalfblock
 14780 ;;		_RetryMove
 14781 ;;		_go_Home
 14782 ;;		_Backhalfblock
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text77
 14787   005370                     __ptext77:
 14788                           	callstack 0
 14789   005370                     _stop:
 14790                           	callstack 25
 14791   005370                     
 14792                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 14793   005370  EFDE  F029         	goto	l4131
 14794   005374                     l4123:
 14795                           
 14796                           ;dc_motor.c: 98:         mL->power-=10;
 14797   005374  C014  FFD9         	movff	stop@mL,fsr2l
 14798   005378  C015  FFDA         	movff	stop@mL+1,fsr2h
 14799   00537C  0E0A               	movlw	10
 14800   00537E  5EDF               	subwf	indf2,f,c
 14801                           
 14802                           ;dc_motor.c: 99:         mR->power-=10;
 14803   005380  C016  FFD9         	movff	stop@mR,fsr2l
 14804   005384  C017  FFDA         	movff	stop@mR+1,fsr2h
 14805   005388  0E0A               	movlw	10
 14806   00538A  5EDF               	subwf	indf2,f,c
 14807   00538C                     
 14808                           ;dc_motor.c: 104:         setMotorPWM(mL);
 14809   00538C  C014  F00E         	movff	stop@mL,setMotorPWM@m
 14810   005390  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 14811   005394  EC2E  F023         	call	_setMotorPWM	;wreg free
 14812   005398                     
 14813                           ;dc_motor.c: 105:         setMotorPWM(mR);
 14814   005398  C016  F00E         	movff	stop@mR,setMotorPWM@m
 14815   00539C  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 14816   0053A0  EC2E  F023         	call	_setMotorPWM	;wreg free
 14817   0053A4                     
 14818                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 14819   0053A4  0E02               	movlw	2
 14820   0053A6  6E19               	movwf	(??_stop+1)^0,c
 14821   0053A8  0EA0               	movlw	160
 14822   0053AA  6E18               	movwf	??_stop^0,c
 14823   0053AC  0E92               	movlw	146
 14824   0053AE                     u6127:
 14825   0053AE  2EE8               	decfsz	wreg,f,c
 14826   0053B0  D7FE               	bra	u6127
 14827   0053B2  2E18               	decfsz	??_stop^0,f,c
 14828   0053B4  D7FC               	bra	u6127
 14829   0053B6  2E19               	decfsz	(??_stop+1)^0,f,c
 14830   0053B8  D7FA               	bra	u6127
 14831   0053BA  D000               	nop2	
 14832   0053BC                     l4131:
 14833                           
 14834                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 14835   0053BC  C014  FFD9         	movff	stop@mL,fsr2l
 14836   0053C0  C015  FFDA         	movff	stop@mL+1,fsr2h
 14837   0053C4  50DF               	movf	indf2,w,c
 14838   0053C6  A4D8               	btfss	status,2,c
 14839   0053C8  EFE8  F029         	goto	u3461
 14840   0053CC  EFEA  F029         	goto	u3460
 14841   0053D0                     u3461:
 14842   0053D0  EFBA  F029         	goto	l4123
 14843   0053D4                     u3460:
 14844   0053D4  C016  FFD9         	movff	stop@mR,fsr2l
 14845   0053D8  C017  FFDA         	movff	stop@mR+1,fsr2h
 14846   0053DC  50DF               	movf	indf2,w,c
 14847   0053DE  A4D8               	btfss	status,2,c
 14848   0053E0  EFF4  F029         	goto	u3471
 14849   0053E4  EFF6  F029         	goto	u3470
 14850   0053E8                     u3471:
 14851   0053E8  EFBA  F029         	goto	l4123
 14852   0053EC                     u3470:
 14853   0053EC  0012               	return		;funcret
 14854   0053EE                     __end_of_stop:
 14855                           	callstack 0
 14856                           
 14857 ;; *************** function _fullSpeedAhead *****************
 14858 ;; Defined at:
 14859 ;;		line 148 in file "dc_motor.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 14862 ;;		 -> motorL(9), 
 14863 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 14864 ;;		 -> motorR(9), 
 14865 ;; Auto vars:     Size  Location     Type
 14866 ;;		None
 14867 ;; Return value:  Size  Location     Type
 14868 ;;                  1    wreg      void 
 14869 ;; Registers used:
 14870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/0
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14880 ;;Total ram usage:        6 bytes
 14881 ;; Hardware stack levels used: 1
 14882 ;; Hardware stack levels required when called: 3
 14883 ;; This function calls:
 14884 ;;		_setMotorPWM
 14885 ;; This function is called by:
 14886 ;;		_main
 14887 ;;		_ForwardOneBlock
 14888 ;;		_Forwardhalfblock
 14889 ;;		_RetryMove
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text78
 14894   00524A                     __ptext78:
 14895                           	callstack 0
 14896   00524A                     _fullSpeedAhead:
 14897                           	callstack 24
 14898   00524A                     
 14899                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 14900   00524A  EE20 F001          	lfsr	2,1
 14901   00524E  5014               	movf	fullSpeedAhead@mL^0,w,c
 14902   005250  26D9               	addwf	fsr2l,f,c
 14903   005252  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 14904   005254  22DA               	addwfc	fsr2h,f,c
 14905   005256  0E01               	movlw	1
 14906   005258  6EDF               	movwf	indf2,c
 14907                           
 14908                           ;dc_motor.c: 152:     mR->direction =1;
 14909   00525A  EE20 F001          	lfsr	2,1
 14910   00525E  5016               	movf	fullSpeedAhead@mR^0,w,c
 14911   005260  26D9               	addwf	fsr2l,f,c
 14912   005262  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 14913   005264  22DA               	addwfc	fsr2h,f,c
 14914   005266  0E01               	movlw	1
 14915   005268  6EDF               	movwf	indf2,c
 14916                           
 14917                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 14918   00526A  EF5B  F029         	goto	l4117
 14919   00526E                     l4109:
 14920                           
 14921                           ;dc_motor.c: 155:         mL->power+=10;
 14922   00526E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 14923   005272  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 14924   005276  0E0A               	movlw	10
 14925   005278  26DF               	addwf	indf2,f,c
 14926                           
 14927                           ;dc_motor.c: 156:         mR->power+=10;
 14928   00527A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 14929   00527E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 14930   005282  0E0A               	movlw	10
 14931   005284  26DF               	addwf	indf2,f,c
 14932   005286                     
 14933                           ;dc_motor.c: 158:         setMotorPWM(mL);
 14934   005286  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 14935   00528A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 14936   00528E  EC2E  F023         	call	_setMotorPWM	;wreg free
 14937   005292                     
 14938                           ;dc_motor.c: 159:         setMotorPWM(mR);
 14939   005292  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 14940   005296  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 14941   00529A  EC2E  F023         	call	_setMotorPWM	;wreg free
 14942   00529E                     
 14943                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 14944   00529E  0E02               	movlw	2
 14945   0052A0  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 14946   0052A2  0EA0               	movlw	160
 14947   0052A4  6E18               	movwf	??_fullSpeedAhead^0,c
 14948   0052A6  0E92               	movlw	146
 14949   0052A8                     u6137:
 14950   0052A8  2EE8               	decfsz	wreg,f,c
 14951   0052AA  D7FE               	bra	u6137
 14952   0052AC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 14953   0052AE  D7FC               	bra	u6137
 14954   0052B0  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 14955   0052B2  D7FA               	bra	u6137
 14956   0052B4  D000               	nop2	
 14957   0052B6                     l4117:
 14958   0052B6  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 14959   0052BA  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 14960   0052BE  0E32               	movlw	50
 14961   0052C0  60DF               	cpfslt	indf2,c
 14962   0052C2  EF65  F029         	goto	u3441
 14963   0052C6  EF67  F029         	goto	u3440
 14964   0052CA                     u3441:
 14965   0052CA  EF73  F029         	goto	l457
 14966   0052CE                     u3440:
 14967   0052CE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 14968   0052D2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 14969   0052D6  0E31               	movlw	49
 14970   0052D8  64DF               	cpfsgt	indf2,c
 14971   0052DA  EF71  F029         	goto	u3451
 14972   0052DE  EF73  F029         	goto	u3450
 14973   0052E2                     u3451:
 14974   0052E2  EF37  F029         	goto	l4109
 14975   0052E6                     u3450:
 14976   0052E6                     l457:
 14977   0052E6  0012               	return		;funcret
 14978   0052E8                     __end_of_fullSpeedAhead:
 14979                           	callstack 0
 14980                           
 14981 ;; *************** function _setMotorPWM *****************
 14982 ;; Defined at:
 14983 ;;		line 69 in file "dc_motor.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  m               2   13[COMRAM] PTR struct DC_motor
 14986 ;;		 -> motorR(9), motorL(9), 
 14987 ;; Auto vars:     Size  Location     Type
 14988 ;;  negDuty         1   18[COMRAM] unsigned char 
 14989 ;;  posDuty         1   17[COMRAM] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  1    wreg      void 
 14992 ;; Registers used:
 14993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15003 ;;Total ram usage:        6 bytes
 15004 ;; Hardware stack levels used: 1
 15005 ;; Hardware stack levels required when called: 2
 15006 ;; This function calls:
 15007 ;;		___lwdiv
 15008 ;;		___wmul
 15009 ;; This function is called by:
 15010 ;;		_stop
 15011 ;;		_turnLeft
 15012 ;;		_turnRight
 15013 ;;		_fullSpeedAhead
 15014 ;;		_timed_forward
 15015 ;;		_fullSpeedBack
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           	psect	text79
 15020   00465C                     __ptext79:
 15021                           	callstack 0
 15022   00465C                     _setMotorPWM:
 15023                           	callstack 25
 15024   00465C                     
 15025                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 15026   00465C  EE20 F002          	lfsr	2,2
 15027   004660  500E               	movf	setMotorPWM@m^0,w,c
 15028   004662  26D9               	addwf	fsr2l,f,c
 15029   004664  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15030   004666  22DA               	addwfc	fsr2h,f,c
 15031   004668  50DF               	movf	indf2,w,c
 15032   00466A  B4D8               	btfsc	status,2,c
 15033   00466C  EF3A  F023         	goto	u3001
 15034   004670  EF3C  F023         	goto	u3000
 15035   004674                     u3001:
 15036   004674  EF70  F023         	goto	l3883
 15037   004678                     u3000:
 15038   004678                     
 15039                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 15040   004678  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 15041   00467C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 15042   004680  50DF               	movf	indf2,w,c
 15043   004682  6E10               	movwf	??_setMotorPWM^0,c
 15044   004684  5010               	movf	??_setMotorPWM^0,w,c
 15045   004686  6E01               	movwf	___wmul@multiplier^0,c
 15046   004688  6A02               	clrf	(___wmul@multiplier+1)^0,c
 15047   00468A  EE20 F003          	lfsr	2,3
 15048   00468E  500E               	movf	setMotorPWM@m^0,w,c
 15049   004690  26D9               	addwf	fsr2l,f,c
 15050   004692  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15051   004694  22DA               	addwfc	fsr2h,f,c
 15052   004696  CFDE F003          	movff	postinc2,___wmul@multiplicand
 15053   00469A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 15054   00469E  EC16  F030         	call	___wmul	;wreg free
 15055   0046A2  C001  F007         	movff	?___wmul,___lwdiv@dividend
 15056   0046A6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 15057   0046AA  0E00               	movlw	0
 15058   0046AC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 15059   0046AE  0E64               	movlw	100
 15060   0046B0  6E09               	movwf	___lwdiv@divisor^0,c
 15061   0046B2  EC34  F02A         	call	___lwdiv	;wreg free
 15062   0046B6  EE20 F003          	lfsr	2,3
 15063   0046BA  500E               	movf	setMotorPWM@m^0,w,c
 15064   0046BC  26D9               	addwf	fsr2l,f,c
 15065   0046BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15066   0046C0  22DA               	addwfc	fsr2h,f,c
 15067   0046C2  50DF               	movf	indf2,w,c
 15068   0046C4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 15069   0046C6  5007               	movf	?___lwdiv^0,w,c
 15070   0046C8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 15071   0046CA  6E12               	movwf	setMotorPWM@posDuty^0,c
 15072   0046CC                     
 15073                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 15074   0046CC  EE20 F003          	lfsr	2,3
 15075   0046D0  500E               	movf	setMotorPWM@m^0,w,c
 15076   0046D2  26D9               	addwf	fsr2l,f,c
 15077   0046D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15078   0046D6  22DA               	addwfc	fsr2h,f,c
 15079   0046D8  50DF               	movf	indf2,w,c
 15080   0046DA  6E13               	movwf	setMotorPWM@negDuty^0,c
 15081                           
 15082                           ;dc_motor.c: 76:     }
 15083   0046DC  EF93  F023         	goto	l3887
 15084   0046E0                     l3883:
 15085                           
 15086                           ;dc_motor.c: 78:         posDuty=0;
 15087   0046E0  0E00               	movlw	0
 15088   0046E2  6E12               	movwf	setMotorPWM@posDuty^0,c
 15089   0046E4                     
 15090                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 15091   0046E4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 15092   0046E8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 15093   0046EC  50DF               	movf	indf2,w,c
 15094   0046EE  6E10               	movwf	??_setMotorPWM^0,c
 15095   0046F0  5010               	movf	??_setMotorPWM^0,w,c
 15096   0046F2  6E01               	movwf	___wmul@multiplier^0,c
 15097   0046F4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 15098   0046F6  EE20 F003          	lfsr	2,3
 15099   0046FA  500E               	movf	setMotorPWM@m^0,w,c
 15100   0046FC  26D9               	addwf	fsr2l,f,c
 15101   0046FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15102   004700  22DA               	addwfc	fsr2h,f,c
 15103   004702  CFDE F003          	movff	postinc2,___wmul@multiplicand
 15104   004706  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 15105   00470A  EC16  F030         	call	___wmul	;wreg free
 15106   00470E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 15107   004712  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 15108   004716  0E00               	movlw	0
 15109   004718  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 15110   00471A  0E64               	movlw	100
 15111   00471C  6E09               	movwf	___lwdiv@divisor^0,c
 15112   00471E  EC34  F02A         	call	___lwdiv	;wreg free
 15113   004722  5007               	movf	?___lwdiv^0,w,c
 15114   004724  6E13               	movwf	setMotorPWM@negDuty^0,c
 15115   004726                     l3887:
 15116                           
 15117                           ;dc_motor.c: 82:     if (m->direction) {
 15118   004726  EE20 F001          	lfsr	2,1
 15119   00472A  500E               	movf	setMotorPWM@m^0,w,c
 15120   00472C  26D9               	addwf	fsr2l,f,c
 15121   00472E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15122   004730  22DA               	addwfc	fsr2h,f,c
 15123   004732  50DF               	movf	indf2,w,c
 15124   004734  B4D8               	btfsc	status,2,c
 15125   004736  EF9F  F023         	goto	u3011
 15126   00473A  EFA1  F023         	goto	u3010
 15127   00473E                     u3011:
 15128   00473E  EFC3  F023         	goto	l3891
 15129   004742                     u3010:
 15130   004742                     
 15131                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=negDuty;
 15132   004742  EE20 F005          	lfsr	2,5
 15133   004746  500E               	movf	setMotorPWM@m^0,w,c
 15134   004748  26D9               	addwf	fsr2l,f,c
 15135   00474A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15136   00474C  22DA               	addwfc	fsr2h,f,c
 15137   00474E  CFDE F010          	movff	postinc2,??_setMotorPWM
 15138   004752  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 15139   004756  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 15140   00475A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 15141   00475E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 15142                           
 15143                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=posDuty;
 15144   004762  EE20 F007          	lfsr	2,7
 15145   004766  500E               	movf	setMotorPWM@m^0,w,c
 15146   004768  26D9               	addwf	fsr2l,f,c
 15147   00476A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15148   00476C  22DA               	addwfc	fsr2h,f,c
 15149   00476E  CFDE F010          	movff	postinc2,??_setMotorPWM
 15150   004772  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 15151   004776  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 15152   00477A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 15153   00477E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 15154                           
 15155                           ;dc_motor.c: 87:     } else {
 15156   004782  EFE3  F023         	goto	l427
 15157   004786                     l3891:
 15158                           
 15159                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=posDuty;
 15160   004786  EE20 F005          	lfsr	2,5
 15161   00478A  500E               	movf	setMotorPWM@m^0,w,c
 15162   00478C  26D9               	addwf	fsr2l,f,c
 15163   00478E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15164   004790  22DA               	addwfc	fsr2h,f,c
 15165   004792  CFDE F010          	movff	postinc2,??_setMotorPWM
 15166   004796  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 15167   00479A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 15168   00479E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 15169   0047A2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 15170                           
 15171                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=negDuty;
 15172   0047A6  EE20 F007          	lfsr	2,7
 15173   0047AA  500E               	movf	setMotorPWM@m^0,w,c
 15174   0047AC  26D9               	addwf	fsr2l,f,c
 15175   0047AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 15176   0047B0  22DA               	addwfc	fsr2h,f,c
 15177   0047B2  CFDE F010          	movff	postinc2,??_setMotorPWM
 15178   0047B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 15179   0047BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 15180   0047BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 15181   0047C2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 15182   0047C6                     l427:
 15183   0047C6  0012               	return		;funcret
 15184   0047C8                     __end_of_setMotorPWM:
 15185                           	callstack 0
 15186                           
 15187 ;; *************** function ___wmul *****************
 15188 ;; Defined at:
 15189 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;  multiplier      2    0[COMRAM] unsigned int 
 15192 ;;  multiplicand    2    2[COMRAM] unsigned int 
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;  product         2    4[COMRAM] unsigned int 
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  2    0[COMRAM] unsigned int 
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, prodl, prodh
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15208 ;;Total ram usage:        6 bytes
 15209 ;; Hardware stack levels used: 1
 15210 ;; Hardware stack levels required when called: 1
 15211 ;; This function calls:
 15212 ;;		Nothing
 15213 ;; This function is called by:
 15214 ;;		_setMotorPWM
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           	psect	text80
 15219   00602C                     __ptext80:
 15220                           	callstack 0
 15221   00602C                     ___wmul:
 15222                           	callstack 25
 15223   00602C  5001               	movf	___wmul@multiplier^0,w,c
 15224   00602E  0203               	mulwf	___wmul@multiplicand^0,c
 15225   006030  CFF3 F005          	movff	prodl,___wmul@product
 15226   006034  CFF4 F006          	movff	prodh,___wmul@product+1
 15227   006038  5001               	movf	___wmul@multiplier^0,w,c
 15228   00603A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 15229   00603C  50F3               	movf	243,w,c
 15230   00603E  2606               	addwf	(___wmul@product+1)^0,f,c
 15231   006040  5002               	movf	(___wmul@multiplier+1)^0,w,c
 15232   006042  0203               	mulwf	___wmul@multiplicand^0,c
 15233   006044  50F3               	movf	243,w,c
 15234   006046  2606               	addwf	(___wmul@product+1)^0,f,c
 15235   006048  C005  F001         	movff	___wmul@product,?___wmul
 15236   00604C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 15237   006050  0012               	return		;funcret
 15238   006052                     __end_of___wmul:
 15239                           	callstack 0
 15240                           
 15241 ;; *************** function ___lwdiv *****************
 15242 ;; Defined at:
 15243 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  dividend        2    6[COMRAM] unsigned int 
 15246 ;;  divisor         2    8[COMRAM] unsigned int 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;  quotient        2   10[COMRAM] unsigned int 
 15249 ;;  counter         1   12[COMRAM] unsigned char 
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  2    6[COMRAM] unsigned int 
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15262 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15263 ;;Total ram usage:        7 bytes
 15264 ;; Hardware stack levels used: 1
 15265 ;; Hardware stack levels required when called: 1
 15266 ;; This function calls:
 15267 ;;		Nothing
 15268 ;; This function is called by:
 15269 ;;		_setMotorPWM
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text81
 15274   005468                     __ptext81:
 15275                           	callstack 0
 15276   005468                     ___lwdiv:
 15277                           	callstack 25
 15278   005468  0E00               	movlw	0
 15279   00546A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 15280   00546C  0E00               	movlw	0
 15281   00546E  6E0B               	movwf	___lwdiv@quotient^0,c
 15282   005470  5009               	movf	___lwdiv@divisor^0,w,c
 15283   005472  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 15284   005474  B4D8               	btfsc	status,2,c
 15285   005476  EF3F  F02A         	goto	u2931
 15286   00547A  EF41  F02A         	goto	u2930
 15287   00547E                     u2931:
 15288   00547E  EF69  F02A         	goto	l1237
 15289   005482                     u2930:
 15290   005482  0E01               	movlw	1
 15291   005484  6E0D               	movwf	___lwdiv@counter^0,c
 15292   005486  EF49  F02A         	goto	l3849
 15293   00548A                     l3847:
 15294   00548A  90D8               	bcf	status,0,c
 15295   00548C  3609               	rlcf	___lwdiv@divisor^0,f,c
 15296   00548E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 15297   005490  2A0D               	incf	___lwdiv@counter^0,f,c
 15298   005492                     l3849:
 15299   005492  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 15300   005494  EF4E  F02A         	goto	u2941
 15301   005498  EF50  F02A         	goto	u2940
 15302   00549C                     u2941:
 15303   00549C  EF45  F02A         	goto	l3847
 15304   0054A0                     u2940:
 15305   0054A0                     l3851:
 15306   0054A0  90D8               	bcf	status,0,c
 15307   0054A2  360B               	rlcf	___lwdiv@quotient^0,f,c
 15308   0054A4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 15309   0054A6  5009               	movf	___lwdiv@divisor^0,w,c
 15310   0054A8  5C07               	subwf	___lwdiv@dividend^0,w,c
 15311   0054AA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 15312   0054AC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 15313   0054AE  A0D8               	btfss	status,0,c
 15314   0054B0  EF5C  F02A         	goto	u2951
 15315   0054B4  EF5E  F02A         	goto	u2950
 15316   0054B8                     u2951:
 15317   0054B8  EF63  F02A         	goto	l3859
 15318   0054BC                     u2950:
 15319   0054BC  5009               	movf	___lwdiv@divisor^0,w,c
 15320   0054BE  5E07               	subwf	___lwdiv@dividend^0,f,c
 15321   0054C0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 15322   0054C2  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 15323   0054C4  800B               	bsf	___lwdiv@quotient^0,0,c
 15324   0054C6                     l3859:
 15325   0054C6  90D8               	bcf	status,0,c
 15326   0054C8  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 15327   0054CA  3209               	rrcf	___lwdiv@divisor^0,f,c
 15328   0054CC  2E0D               	decfsz	___lwdiv@counter^0,f,c
 15329   0054CE  EF50  F02A         	goto	l3851
 15330   0054D2                     l1237:
 15331   0054D2  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 15332   0054D6  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15333   0054DA  0012               	return		;funcret
 15334   0054DC                     __end_of___lwdiv:
 15335                           	callstack 0
 15336                           
 15337 ;; *************** function _Buttons_init *****************
 15338 ;; Defined at:
 15339 ;;		line 43 in file "LED_buttons.c"
 15340 ;; Parameters:    Size  Location     Type
 15341 ;;		None
 15342 ;; Auto vars:     Size  Location     Type
 15343 ;;		None
 15344 ;; Return value:  Size  Location     Type
 15345 ;;                  1    wreg      void 
 15346 ;; Registers used:
 15347 ;;		None
 15348 ;; Tracked objects:
 15349 ;;		On entry : 0/0
 15350 ;;		On exit  : 0/0
 15351 ;;		Unchanged: 0/0
 15352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15357 ;;Total ram usage:        0 bytes
 15358 ;; Hardware stack levels used: 1
 15359 ;; Hardware stack levels required when called: 1
 15360 ;; This function calls:
 15361 ;;		Nothing
 15362 ;; This function is called by:
 15363 ;;		_main
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           	psect	text82
 15368   0060E0                     __ptext82:
 15369                           	callstack 0
 15370   0060E0                     _Buttons_init:
 15371                           	callstack 29
 15372   0060E0                     
 15373                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15374   0060E0  8486               	bsf	134,2,c	;volatile
 15375                           
 15376                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15377   0060E2  010E               	movlb	14	; () banked
 15378   0060E4  95B4               	bcf	180,2,b	;volatile
 15379                           
 15380                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15381   0060E6  8686               	bsf	134,3,c	;volatile
 15382                           
 15383                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15384   0060E8  97B4               	bcf	180,3,b	;volatile
 15385   0060EA                     
 15386                           ; BSR set to: 14
 15387   0060EA  0012               	return		;funcret
 15388   0060EC                     __end_of_Buttons_init:
 15389                           	callstack 0
 15390                           
 15391 ;; *************** function _HighISR *****************
 15392 ;; Defined at:
 15393 ;;		line 23 in file "interrupts.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;		None
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;		None
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  1    wreg      void 
 15400 ;; Registers used:
 15401 ;;		wreg, status,2
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;Total ram usage:        0 bytes
 15412 ;; Hardware stack levels used: 1
 15413 ;; This function calls:
 15414 ;;		Nothing
 15415 ;; This function is called by:
 15416 ;;		Interrupt level 2
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           	psect	intcode
 15421   000008                     __pintcode:
 15422                           	callstack 0
 15423   000008                     _HighISR:
 15424                           	callstack 22
 15425                           
 15426                           ; BSR set to: 14
 15427                           ;incstack = 0
 15428   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15429   00000A                     
 15430                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15431   00000A  010E               	movlb	14	; () banked
 15432   00000C  AB33               	btfss	51,5,b	;volatile
 15433   00000E  EF0B  F000         	goto	i2u573_41
 15434   000012  EF0D  F000         	goto	i2u573_40
 15435   000016                     i2u573_41:
 15436   000016  EF18  F000         	goto	i2l237
 15437   00001A                     i2u573_40:
 15438   00001A                     
 15439                           ; BSR set to: 14
 15440                           ;interrupts.c: 26:         TMR0H=0;
 15441   00001A  0E00               	movlw	0
 15442   00001C  6ED4               	movwf	212,c	;volatile
 15443                           
 15444                           ;interrupts.c: 27:         TMR0L=0;
 15445   00001E  0E00               	movlw	0
 15446   000020  6ED3               	movwf	211,c	;volatile
 15447                           
 15448                           ;interrupts.c: 28:         lost_flag=1;
 15449   000022  0E00               	movlw	0
 15450   000024  0101               	movlb	1	; () banked
 15451   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15452   000028  0E01               	movlw	1
 15453   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15454   00002C                     
 15455                           ; BSR set to: 1
 15456                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15457   00002C  010E               	movlb	14	; () banked
 15458   00002E  9B33               	bcf	51,5,b	;volatile
 15459   000030                     i2l237:
 15460                           
 15461                           ; BSR set to: 14
 15462   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15463   000032  0011               	retfie		f
 15464   000034                     __end_of_HighISR:
 15465                           	callstack 0
 15466                           
 15467                           	psect	rparam
 15468   000000                     
 15469                           	psect	temp
 15470   00005F                     btemp:
 15471                           	callstack 0
 15472   00005F                     	ds	1
 15473   000000                     int$flags	set	btemp
 15474   000000                     wtemp8	set	btemp+1
 15475   000000                     ttemp5	set	btemp+1
 15476   000000                     ttemp6	set	btemp+4
 15477   000000                     ttemp7	set	btemp+8
 15478                           
 15479                           	psect	idloc
 15480                           
 15481                           ;Config register IDLOC0 @ 0x200000
 15482                           ;	unspecified, using default values
 15483   200000                     	org	2097152
 15484   200000  0FFF               	dw	4095
 15485                           
 15486                           ;Config register IDLOC1 @ 0x200002
 15487                           ;	unspecified, using default values
 15488   200002                     	org	2097154
 15489   200002  0FFF               	dw	4095
 15490                           
 15491                           ;Config register IDLOC2 @ 0x200004
 15492                           ;	unspecified, using default values
 15493   200004                     	org	2097156
 15494   200004  0FFF               	dw	4095
 15495                           
 15496                           ;Config register IDLOC3 @ 0x200006
 15497                           ;	unspecified, using default values
 15498   200006                     	org	2097158
 15499   200006  0FFF               	dw	4095
 15500                           
 15501                           ;Config register IDLOC4 @ 0x200008
 15502                           ;	unspecified, using default values
 15503   200008                     	org	2097160
 15504   200008  0FFF               	dw	4095
 15505                           
 15506                           ;Config register IDLOC5 @ 0x20000A
 15507                           ;	unspecified, using default values
 15508   20000A                     	org	2097162
 15509   20000A  0FFF               	dw	4095
 15510                           
 15511                           ;Config register IDLOC6 @ 0x20000C
 15512                           ;	unspecified, using default values
 15513   20000C                     	org	2097164
 15514   20000C  0FFF               	dw	4095
 15515                           
 15516                           ;Config register IDLOC7 @ 0x20000E
 15517                           ;	unspecified, using default values
 15518   20000E                     	org	2097166
 15519   20000E  0FFF               	dw	4095
 15520                           
 15521                           	psect	config
 15522                           
 15523                           ;Config register CONFIG1L @ 0x300000
 15524                           ;	External Oscillator mode Selection bits
 15525                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15526                           ;	Power-up default value for COSC bits
 15527                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15528   300000                     	org	3145728
 15529   300000  AA                 	db	170
 15530                           
 15531                           ;Config register CONFIG1H @ 0x300001
 15532                           ;	unspecified, using default values
 15533                           ;	Clock Out Enable bit
 15534                           ;	CLKOUTEN = 0x1, unprogrammed default
 15535                           ;	Clock Switch Enable bit
 15536                           ;	CSWEN = 0x1, unprogrammed default
 15537                           ;	Fail-Safe Clock Monitor Enable bit
 15538                           ;	FCMEN = 0x1, unprogrammed default
 15539   300001                     	org	3145729
 15540   300001  FF                 	db	255
 15541                           
 15542                           ;Config register CONFIG2L @ 0x300002
 15543                           ;	unspecified, using default values
 15544                           ;	Master Clear Enable bit
 15545                           ;	MCLRE = 0x1, unprogrammed default
 15546                           ;	Power-up Timer Enable bit
 15547                           ;	PWRTE = 0x1, unprogrammed default
 15548                           ;	Low-power BOR enable bit
 15549                           ;	LPBOREN = 0x1, unprogrammed default
 15550                           ;	Brown-out Reset Enable bits
 15551                           ;	BOREN = 0x3, unprogrammed default
 15552   300002                     	org	3145730
 15553   300002  FF                 	db	255
 15554                           
 15555                           ;Config register CONFIG2H @ 0x300003
 15556                           ;	unspecified, using default values
 15557                           ;	Brown Out Reset Voltage selection bits
 15558                           ;	BORV = 0x3, unprogrammed default
 15559                           ;	ZCD Disable bit
 15560                           ;	ZCD = 0x1, unprogrammed default
 15561                           ;	PPSLOCK bit One-Way Set Enable bit
 15562                           ;	PPS1WAY = 0x1, unprogrammed default
 15563                           ;	Stack Full/Underflow Reset Enable bit
 15564                           ;	STVREN = 0x1, unprogrammed default
 15565                           ;	Debugger Enable bit
 15566                           ;	DEBUG = 0x1, unprogrammed default
 15567                           ;	Extended Instruction Set Enable bit
 15568                           ;	XINST = 0x1, unprogrammed default
 15569   300003                     	org	3145731
 15570   300003  FF                 	db	255
 15571                           
 15572                           ;Config register CONFIG3L @ 0x300004
 15573                           ;	WDT Period Select bits
 15574                           ;	WDTCPS = 0x1F, unprogrammed default
 15575                           ;	WDT operating mode
 15576                           ;	WDTE = OFF, WDT Disabled
 15577   300004                     	org	3145732
 15578   300004  9F                 	db	159
 15579                           
 15580                           ;Config register CONFIG3H @ 0x300005
 15581                           ;	unspecified, using default values
 15582                           ;	WDT Window Select bits
 15583                           ;	WDTCWS = 0x7, unprogrammed default
 15584                           ;	WDT input clock selector
 15585                           ;	WDTCCS = 0x7, unprogrammed default
 15586   300005                     	org	3145733
 15587   300005  FF                 	db	255
 15588                           
 15589                           ;Config register CONFIG4L @ 0x300006
 15590                           ;	unspecified, using default values
 15591                           ;	Write Protection Block 0
 15592                           ;	WRT0 = 0x1, unprogrammed default
 15593                           ;	Write Protection Block 1
 15594                           ;	WRT1 = 0x1, unprogrammed default
 15595                           ;	Write Protection Block 2
 15596                           ;	WRT2 = 0x1, unprogrammed default
 15597                           ;	Write Protection Block 3
 15598                           ;	WRT3 = 0x1, unprogrammed default
 15599                           ;	Write Protection Block 3
 15600                           ;	WRT4 = 0x1, unprogrammed default
 15601                           ;	Write Protection Block 3
 15602                           ;	WRT5 = 0x1, unprogrammed default
 15603                           ;	Write Protection Block 3
 15604                           ;	WRT6 = 0x1, unprogrammed default
 15605                           ;	Write Protection Block 3
 15606                           ;	WRT7 = 0x1, unprogrammed default
 15607   300006                     	org	3145734
 15608   300006  FF                 	db	255
 15609                           
 15610                           ;Config register CONFIG4H @ 0x300007
 15611                           ;	unspecified, using default values
 15612                           ;	Configuration Register Write Protection bit
 15613                           ;	WRTC = 0x1, unprogrammed default
 15614                           ;	Boot Block Write Protection bit
 15615                           ;	WRTB = 0x1, unprogrammed default
 15616                           ;	Data EEPROM Write Protection bit
 15617                           ;	WRTD = 0x1, unprogrammed default
 15618                           ;	Scanner Enable bit
 15619                           ;	SCANE = 0x1, unprogrammed default
 15620                           ;	Low Voltage Programming Enable bit
 15621                           ;	LVP = 0x1, unprogrammed default
 15622   300007                     	org	3145735
 15623   300007  FF                 	db	255
 15624                           
 15625                           ;Config register CONFIG5L @ 0x300008
 15626                           ;	unspecified, using default values
 15627                           ;	UserNVM Program Memory Code Protection bit
 15628                           ;	CP = 0x1, unprogrammed default
 15629                           ;	DataNVM Memory Code Protection bit
 15630                           ;	CPD = 0x1, unprogrammed default
 15631   300008                     	org	3145736
 15632   300008  FF                 	db	255
 15633                           
 15634                           ;Config register CONFIG5H @ 0x300009
 15635                           ;	unspecified, using default values
 15636   300009                     	org	3145737
 15637   300009  FF                 	db	255
 15638                           
 15639                           ;Config register CONFIG6L @ 0x30000A
 15640                           ;	unspecified, using default values
 15641                           ;	Table Read Protection Block 0
 15642                           ;	EBTR0 = 0x1, unprogrammed default
 15643                           ;	Table Read Protection Block 1
 15644                           ;	EBTR1 = 0x1, unprogrammed default
 15645                           ;	Table Read Protection Block 2
 15646                           ;	EBTR2 = 0x1, unprogrammed default
 15647                           ;	Table Read Protection Block 3
 15648                           ;	EBTR3 = 0x1, unprogrammed default
 15649                           ;	Table Read Protection Block 4
 15650                           ;	EBTR4 = 0x1, unprogrammed default
 15651                           ;	Table Read Protection Block 5
 15652                           ;	EBTR5 = 0x1, unprogrammed default
 15653                           ;	Table Read Protection Block 6
 15654                           ;	EBTR6 = 0x1, unprogrammed default
 15655                           ;	Table Read Protection Block 7
 15656                           ;	EBTR7 = 0x1, unprogrammed default
 15657   30000A                     	org	3145738
 15658   30000A  FF                 	db	255
 15659                           
 15660                           ;Config register CONFIG6H @ 0x30000B
 15661                           ;	unspecified, using default values
 15662                           ;	Boot Block Table Read Protection bit
 15663                           ;	EBTRB = 0x1, unprogrammed default
 15664   30000B                     	org	3145739
 15665   30000B  FF                 	db	255
 15666                           tosu	equ	0xFFF
 15667                           tosh	equ	0xFFE
 15668                           tosl	equ	0xFFD
 15669                           stkptr	equ	0xFFC
 15670                           pclatu	equ	0xFFB
 15671                           pclath	equ	0xFFA
 15672                           pcl	equ	0xFF9
 15673                           tblptru	equ	0xFF8
 15674                           tblptrh	equ	0xFF7
 15675                           tblptrl	equ	0xFF6
 15676                           tablat	equ	0xFF5
 15677                           prodh	equ	0xFF4
 15678                           prodl	equ	0xFF3
 15679                           indf0	equ	0xFEF
 15680                           postinc0	equ	0xFEE
 15681                           postdec0	equ	0xFED
 15682                           preinc0	equ	0xFEC
 15683                           plusw0	equ	0xFEB
 15684                           fsr0h	equ	0xFEA
 15685                           fsr0l	equ	0xFE9
 15686                           wreg	equ	0xFE8
 15687                           indf1	equ	0xFE7
 15688                           postinc1	equ	0xFE6
 15689                           postdec1	equ	0xFE5
 15690                           preinc1	equ	0xFE4
 15691                           plusw1	equ	0xFE3
 15692                           fsr1h	equ	0xFE2
 15693                           fsr1l	equ	0xFE1
 15694                           bsr	equ	0xFE0
 15695                           indf2	equ	0xFDF
 15696                           postinc2	equ	0xFDE
 15697                           postdec2	equ	0xFDD
 15698                           preinc2	equ	0xFDC
 15699                           plusw2	equ	0xFDB
 15700                           fsr2h	equ	0xFDA
 15701                           fsr2l	equ	0xFD9
 15702                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     156
    BANK1           256    102     216
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2835$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2751$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2751$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    consecutive_read@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    consecutive_read@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 2
		 -> consecutive_read@rel(COMRAM[2]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 2
		 -> consecutive_read@vals(COMRAM[2]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), consecutive_read@rel(COMRAM[2]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), consecutive_read@vals(COMRAM[2]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), consecutive_read@vals(COMRAM[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _consecutive_read->_Colour_decider
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _consecutive_read->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  581342
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                   _consecutive_read
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _consecutive_read                                     8     4      4   33754
                                             80 COMRAM     8     4      4
                     _Colour_decider
                         _colour_rel
                        _readColours
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Colour_decider                                      38    34      4   23701
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  319266
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _reverseDetect
         _fullSpeedBack
           _setMotorPWM
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _BlueMove
       _GreenMove
       _LightBlueMove
       _OrangeMove
       _RedMove
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _reverseDetect
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___xxtofl
   _consecutive_read
     _Colour_decider
       ___fladd
       ___fldiv
       ___fleq
         ___flsub (ARG)
       ___flge
         ___flmul (ARG)
       ___flmul
       ___flsub
       ___xxtofl
     _colour_rel
     _readColours
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_lum
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 01:01:53 2023

               _color_read_Red 5B86                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B36                   ___fldiv@sign 0042                _color_read_Blue 5C26  
                           l52 6070                             l61 5C24                             l70 3248  
                           l55 5B84                             l80 189C                             l64 5C74  
                           l49 5AE4                             l58 5BD4                             l67 573E  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4328  
             _color_read_Green 5BD6                readColours@vals 000C              ??_Interrupts_init 0001  
                          l114 4F12                            l210 60C6                            l115 4F1A  
                          l142 5FDC                            l231 60DE                            l151 6108  
                          l207 60B2                            l160 60D2                            l216 5FB2  
                          l145 5FDE                            l154 60F4                            l163 5E20  
                          l148 6004                            l420 536E                            l157 60FE  
                          l342 3DC8                            l503 5E9E                            l351 3F5E  
                          l512 5A40                            l600 3806                            l433 53EC  
                          l441 51AA                            l521 59EE                            l506 5EDC  
                          l530 4E68                            l427 47C6                            l515 5A92  
                          l524 55B2                            l509 567E                            l518 599C  
                          l606 382E                            l198 60AE                            l534 4346  
                          l527 4DB2                            l544 4482                            l536 439C  
                          l457 52E6                            l473 5248                            l449 510C  
                          l465 506E                            l633 56E0                            l545 44B8  
                          l537 43F6                            l482 5CC2                            l546 44D2  
                          l538 4466                            l491 58A2                            l539 442E  
                          l476 5F68                            l636 5F36                            l629 6090  
                          l485 5D10                            l494 584A                            l479 5F82  
                          l639 5F4C                            l735 3D24                            l743 3D24  
                          l664 602A                            l488 5798                            l497 57F2  
                          l746 6050                            l594 3806                            l667 60EA  
                          l860 465A                            l873 492A                            _abs 5E22  
                          _pad 53EE                            _rel 0148                   ?_colour_move 002D  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1011 4AEE  
                         l1020 5F14                           l1005 4FC4                           l1016 4B34  
                         l1043 4A30                           ?_abs 0013                           l1300 2670  
                         l1301 265E                           l1401 41CA                           l1330 2D7A  
                         l1244 54DA                           l1316 5D56                           l1404 4326  
                         l1237 54D2                           l1341 2E38                           l1333 2D3E  
                         l1342 2E26                           l1415 42BE                           l1328 2F1A  
                         l1360 281C                           l1408 4262                           l1424 594A  
                         l4001 24C8                           l1370 2A78                           l1274 2486  
                         l1339 2DC0                           l1291 25A0                           l4011 2502  
                         l4003 24D6                           l1283 2756                           l1275 2474  
                         l1523 2078                           l1364 2B80                           l1276 243A  
                         l1460 5466                           l1604 5B34                           l4021 256E  
                         l4013 2504                           l4005 24E4                           l4101 5DBE  
                         l4111 5286                           l4103 5FDE                           l1367 2A12  
                         l4031 25C6                           l4023 2570                           l4015 250E  
                         l4007 24F0                           l1616 4CFC                           l1624 5DDE  
                         l1456 5410                           l1560 58F8                           l4113 5292  
                         l4121 5370                           l4105 5FEE                           l1377 2B42  
                         l1369 2A8A                           l4041 25F4                           l4025 2580  
                         l4009 24F4                           l4017 2514                           l4201 4566  
                         l1465 38BC                           l1633 5D9A                           l5001 20AC  
                         l1570 4C32                           l1490 2296                           l1538 354E  
                         l4115 529E                           l4107 524A                           l4123 5374  
                         l4131 53BC                           l4043 2602                           l4035 25DA  
                         l4051 2620                           l4019 253A                           l4027 2590  
                         l4211 45D0                           l4203 456E                           l1627 6114  
                         l1467 38C4                           l5011 20D4                           l5003 20B2  
                         l1468 390A                           l4109 526E                           l4117 52B6  
                         l4133 53D4                           l4125 538C                           l4141 5156  
                         l5101 5EA0                           l4301 2C4E                           l4045 260A  
                         l4037 25E4                           l4029 25B6                           l4053 262E  
                         l4221 461A                           l4213 45F0                           l4205 4582  
                         l5021 2108                           l5005 20BA                           l5013 20DA  
                         l1493 1C30                           l4119 52CE                           l4127 5398  
                         l4143 5162                           l4135 510E                           l4151 5094  
                         l5103 561A                           l5111 4DB4                           l4303 2C64  
                         l4063 2680                           l4071 26D6                           l4055 2632  
                         l4047 260E                           l4039 25F2                           l4223 463A  
                         l4215 45F2                           l4207 4590                           l4231 47DA  
                         l1575 5E58                           l1479 3AAC                           l5031 21BE  
                         l5023 2160                           l5015 20EC                           l5007 20CA  
                         l1495 1A76                           l1584 4172                           l4129 53A4  
                         l4137 5132                           l4145 517A                           l4161 50F4  
                         l4153 50AC                           l5105 594C                           l4321 2CB8  
                         l4305 2C74                           l4313 2C94                           l4401 2758  
                         l4081 2728                           l4073 26E6                           l4065 268C  
                         l4057 2640                           l4049 261E                           l5121 41F0  
                         l5113 4176                           l4217 4604                           l4209 45A2  
                         l4241 484A                           l4233 47FA                           l5041 2230  
                         l5033 21DA                           l5025 2194                           l5017 20FE  
                         l5009 20CE                           l5201 3464                           l1578 5E60  
                         l4171 5200                           l4163 51AC                           l4147 5192  
                         l4139 514A                           l4155 50B8                           l5107 599E  
                         l4331 2D0A                           l4323 2CD2                           l4315 2CA4  
                         l4307 2C7C                           l4411 2794                           l4403 2764  
                         l4091 2746                           l4083 272E                           l4075 26F6  
                         l4067 269A                           l4059 2656                           l5131 424A  
                         l5115 4186                           l4219 460A                           l4251 48C2  
                         l4243 4852                           l4235 47FE                           l4227 47C8  
                         l1587 40B6                           l1595 5608                           l5043 2248  
                         l5035 21E2                           l5027 219C                           l5019 2102  
                         l5211 34E0                           l5203 348E                           l4165 51D0  
                         l4173 5218                           l4181 5F62                           l4157 50C4  
                         l4149 5070                           l5109 4CFE                           l4341 2D66  
                         l4333 2D1A                           l4325 2CE2                           l4317 2CA4  
                         l4309 2C80                           l4501 2A9A                           l4421 27C6  
                         l4413 27A4                           l4405 2772                           l4085 2730  
                         l4077 2716                           l4069 26D4                           l5141 42AE  
                         l5133 424C                           l5125 4204                           l5117 4194  
                         l5301 104A                           l5061 5BCC                           l5053 5B36  
                         l4253 48D4                           l4245 4866                           l4237 480C  
                         l4229 47CC                           l5045 2258                           l5037 21F2  
                         l5029 21A0                           l5205 34AE                           l5213 3510  
                         l1598 5618                           l4175 5230                           l4167 51E8  
                         l4159 50DC                           l4351 2DA6                           l4343 2D68  
                         l4335 2D2E                           l4327 2CF2                           l4271 2BAE  
                         l4263 2B82                           l4511 2AFC                           l4503 2AA6  
                         l4431 2806                           l4423 27D4                           l4415 27AA  
                         l4407 2774                           l4087 2736                           l4079 271A  
                         l5151 4306                           l5143 42CC                           l5135 4258  
                         l5127 420C                           l5119 41DA                           l5311 1160  
                         l5303 10A0                           l5071 5C26                           l5055 5B7C  
                         l4191 450A                           l4183 44D4                           l4247 4874  
                         l4255 48DA                           l4239 482C                           l4095 5D9C  
                         l5047 226E                           l5039 2222                           l6031 3478  
                         l5241 5FB4                           l4169 51F4                           l4177 5F4E  
                         l5081 5002                           l4361 2DE2                           l4353 2DB0  
                         l4345 2D78                           l4337 2D3C                           l4329 2D02  
                         l4281 2BE8                           l4273 2BBE                           l4265 2B8E  
                         l4521 2B64                           l4513 2B10                           l4505 2AB4  
                         l4441 2850                           l4433 280C                           l4425 27D6  
                         l4417 27BA                           l4409 2784                           l4089 2744  
                         l5153 4314                           l5145 42CE                           l5137 4294  
                         l5129 4218                           l5401 177A                           l5321 1292  
                         l5313 1170                           l5073 5C6C                           l5065 5BD6  
                         l4193 4518                           l4185 44D8                           l4257 48EA  
                         l4249 48A2                           l4097 5DA8                           l5049 2276  
                         l6033 3502                           l5161 3272                           l5217 3522  
                         l5251 5FCA                           l5243 5FBE                           l4179 5F52  
                         l5091 5062                           l5083 500E                           l4371 2E54  
                         l4363 2DF0                           l4355 2DBE                           l4347 2D8A  
                         l4339 2D48                           l4291 2C14                           l4283 2BEE  
                         l4275 2BCE                           l4267 2B9C                           l4523 2B66  
                         l4515 2B2A                           l4507 2ADE                           l4451 28A0  
                         l4443 285C                           l4435 282C                           l4427 27E6  
                         l4419 27C0                           l4531 5D12                           l5155 4316  
                         l5147 42D2                           l5139 42A0                           l5403 17B8  
                         l5323 130E                           l5315 11A8                           l5307 10AC  
                         l5067 5C1C                           l5059 5B86                           l4195 4538  
                         l4187 44E6                           l4259 490A                           l4099 5DBA  
                         l5171 32C2                           l5163 3280                           l5245 5FC4  
                         l5253 6054                           l5093 584C                           l5085 501A  
                         l5077 4FC6                           l4381 2EC0                           l4373 2E62  
                         l4365 2E1E                           l4349 2DA0                           l4357 2DD0  
                         l4293 2C24                           l4285 2BF4                           l4277 2BD0  
                         l4269 2B9E                           l4541 4F5A                           l4517 2B46  
                         l4525 2B6C                           l4509 2AE2                           l4461 28E2  
                         l4453 28AC                           l4445 2866                           l4437 283C  
                         l4429 27F6                           l3901 22C4                           l4533 5D22  
                         l5149 42F6                           l5413 17C4                           l5317 11BA  
                         l5325 1366                           l5309 10C0                           l5261 301C  
                         l4197 453C                           l4189 4506                           l4621 4A10  
                         l4605 49BC                           l6029 33BA                           l5181 3378  
                         l5173 32E2                           l5165 328E                           l5501 58CE  
                         ?_pad 0011                           l5247 5FC6                           l5511 5AA2  
                         l5095 5860                           l5079 4FEA                           l5087 5032  
                         l4391 2F0E                           l4383 2EDA                           l4375 2E8C  
                         l4359 2DDE                           l4295 2C34                           l4287 2C02  
                         l4279 2BD8                           l4543 4F88                           l4527 2B70  
                         l4519 2B56                           l4471 2944                           l4463 28EE  
                         l4455 28B8                           l4447 287C                           l3911 22FE  
                         l3903 22D4                           l5415 17F6                           l5423 1834  
                         l5351 14E4                           l5327 1398                           l5335 13D6  
                         l5319 1236                           l5271 0E3E                           l5263 30B0  
                         l5255 56E2                           l4199 4548                           l4631 5408  
                         l4623 4A20                           l4615 49E4                           l4607 49C6  
                         l4711 5B16                           l4703 5AE6                           l5183 338E  
                         l5191 33A6                           l5175 3338                           l5167 3292  
                         l5159 324A                           l5503 58EE                           l3841 5468  
                         l5249 5FC8                           l4721 60CE                           l5521 5AD2  
                         l5513 5AB2                           l5097 5876                           l5089 504A  
                         l5441 3550                           l4393 2F10                           l4385 2EF6  
                         l4369 2E48                           l4377 2E90                           l4297 2C36  
                         l4289 2C04                           l4545 4F98                           l4537 4F1C  
                         l4561 4AAE                           l4553 4A32                           l4481 29DA  
                         l4473 2950                           l4465 28FE                           l4457 28C6  
                         l4449 2888                           l3921 232C                           l3913 2304  
                         l3905 22E4                           l5425 1866                           l5417 1828  
                         l5353 1522                           l5361 1550                           l5337 1408  
                         l5345 1446                           l5329 13CA                           l5281 0F0C  
                         l5273 0E68                           l5265 30E4                           l5257 2F1C  
                         l5601 5348                           l4641 5E22                           l4633 541C  
                         l4801 3906                           l4617 49F0                           l4609 49D0  
                         l4705 5AFA                           l4713 5B1A                           l5185 3396  
                         l5193 33D8                           l5169 32A2                           l3851 54A0  
                         l3843 5470                           l3835 602C                           l4715 6100  
                         l4723 60F6                           l5531 5ADC                           l5523 5AD4  
                         l5515 5ABC                           l5507 5A94                           l5099 5E62  
                         l5451 3580                           l5443 3564                           l4387 2EFA  
                         l4379 2EAA                           l4299 2C3E                           l4547 4FBC  
                         l4539 4F4A                           l4571 4B32                           l4563 4ABC  
                         l4555 4A60                           l4491 2A30                           l4483 29F8  
                         l4475 296C                           l4467 2918                           l4459 28D2  
                         l3931 2360                           l3923 232E                           l3915 2316  
                         l3907 22E6                           l5363 158A                           l5371 15D4  
                         l5347 1478                           l5339 143A                           l5291 0F9A  
                         l5275 0E74                           l5267 317C                           l5259 2FE8  
                         l4731 5DE2                           l5611 5362                           l5603 534A  
                         l4643 5E3C                           l4635 5430                           l4627 53EE  
                         l4811 39AA                           l4803 3912                           l4619 4A00  
                         l4651 4BBC                           l4707 5B06                           l5195 33FC  
                         l5187 339E                           l5179 3368                           l3861 54CC  
                         l3853 54A6                           l3845 5482                           l3837 6048  
                         l5621 608E                           l4717 6104                           l4725 60FA  
                         l5533 5ADE                           l5525 5AD6                           l5517 5AC6  
                         l5509 5A98                           l5461 3658                           l5453 35AE  
                         l5445 3566                           l5701 3AD4                           l4389 2F08  
                         l4549 4FC2                           l4565 4ACE                           l4557 4A70  
                         l4493 2A34                           l4485 2A02                           l4477 2996  
                         l4469 2928                           l3941 239C                           l3925 233E  
                         l3933 2368                           l3917 2318                           l3909 22EE  
                         l5365 15C8                           l5349 14AA                           l5293 0FA2  
                         l5277 0EA4                           l5269 31B0                           l4741 5E1E  
                         l4733 5DE6                           l5541 4E6E                           l5613 536C  
                         l5605 5354                           l5437 60B2                           l4637 5434  
                         l4629 53FC                           l4821 3A66                           l4813 39B0  
                         l4805 391C                           l4653 4BC8                           l4645 4B36  
                         l4709 5B0A                           l4901 1AC0                           l5197 3430  
                         l3855 54BC                           l3847 548A                           l5615 6072  
                         l4719 60CA                           l5535 5AE0                           l5527 5AD8  
                         l5519 5AD0                           l4751 5C76                           l5471 372E  
                         l5463 3682                           l5455 35D6                           l5447 356E  
                         l5711 3B10                           l5703 3AD8                           l4567 4ADC  
                         l4559 4A9E                           l4495 2A42                           l4487 2A10  
                         l4479 29CC                           l3951 23B0                           l3943 23A0  
                         l3935 2378                           l3927 234E                           l3919 231E  
                         l5391 16F2                           l5375 15E0                           l5295 0FF6  
                         l5287 0F16                           l5279 0ED8                           l4735 5DEE  
                         l4727 60EC                           l5551 4EDC                           l5543 4E86  
                         l5607 5356                           l5439 60C2                           l3871 4C80  
                         l3863 4C34                           l4639 5452                           l4823 3A76  
                         l4807 3922                           l4815 3A14                           l4575 5EDE  
                         l4591 4980                           l4583 492C                           l4663 4C2A  
                         l4647 4B56                           l4671 55B4                           l4911 1BB6  
                         l4903 1AFE                           l4831 189E                           l5631 43B6  
                         l5623 4328                           l3857 54C4                           l3849 5492  
                         l3881 46CC                           l5617 607A                           l5537 5AE2  
                         l5529 5ADA                           l4761 5CD8                           l4753 5C8A  
                         l4745 5F16                           l5481 381A                           l5473 375A  
                         l5465 36AE                           l5457 3602                           l5713 3B24  
                         l5721 3B42                           l5705 3ADC                           l4569 4B2C  
                         l4497 2A70                           l4489 2A22                           l3961 23C4  
                         l3953 23B4                           l3945 23A4                           l3937 238A  
                         l3929 235E                           l5393 1730                           l5377 1612  
                         l5385 1650                           l5297 1028                           l5289 0F68  
                         l4737 5DF6                           l4729 60F0                           l5553 4EE4  
                         l5545 4E92                           l5609 5360                           l5561 609C  
                         l3873 4CB6                           l3865 4C46                           l4825 3A7C  
                         l4817 3A2E                           l4809 39A4                           l4577 5EF4  
                         l4593 4982                           l4585 4942                           l4649 4B94  
                         l4657 4BD4                           l4681 3FEC                           l4673 55D2  
                         l4921 1C48                           l4913 1BBE                           l4905 1B30  
                         l4841 18EA                           l4833 18A4                           l5641 43F0  
                         l5633 43C4                           l5625 432A                           l3859 54C6  
                         l3891 4786                           l3883 46E0                           l5619 6084  
                         l4771 576C                           l4763 5CE4                           l5491 554A  
                         l4755 5C96                           l4747 5F22                           l5483 3824  
                         l5475 3784                           l5467 36D8                           l5459 362C  
                         l5723 3B56                           l5715 3B28                           l5707 3AEE  
                         l3963 23C8                           l3955 23B8                           l3947 23A8  
                         l3939 2398                           l3971 23D8                           l5387 1682  
                         l5379 1644                           l5299 102E                           l4739 5E1C  
                         l5555 4EEC                           l5547 4EA6                           l5539 4E6A  
                         l5563 609E                           l5571 5F84                           l3867 4C58  
                         l4827 3A8C                           l4819 3A4C                           l4579 5F04  
                         l4595 4992                           l4659 4BE6                           l4683 3FFA  
                         l4691 40DA                           l4675 3F62                           l4667 5D58  
                         l4931 1C7A                           l4923 1C54                           l4907 1B6E  
                         l4851 1928                           l4843 18F4                           l4835 18B4  
                         l5651 443C                           l5643 4404                           l5635 43D2  
                         l5627 4348                           l5811 3D32                           l3885 46E4  
                         l3877 465C                           l5581 6006                           l4765 5CF8  
                         l5493 5586                           l4757 5CAA                           l4773 57F4  
                         l4749 5F32                           l5477 37B0                           l5469 3704  
                         l5741 3BB8                           l5725 3B6A                           l5733 3B88  
                         l5717 3B2C                           l5709 3AFC                           l3981 2448  
                         l3973 23DC                           l3965 23CC                           l3957 23BC  
                         l3949 23AC                           l3893 2298                           l5389 16B4  
                         l5549 4EC2                           l5557 4EF4                           l5565 60A8  
                         l5573 5F88                           l3869 4C62                           l4781 3850  
                         l4597 4996                           l4589 4956                           l4693 4116  
                         l4677 3F82                           l4669 5D68                           l4941 1CC2  
                         l4933 1C88                           l4925 1C5C                           l4909 1B82  
                         l4917 1BFE                           l4861 1970                           l4853 1930  
                         l4845 18FC                           l4837 18C2                           l5661 4474  
                         l5653 4446                           l5645 440E                           l5637 43D6  
                         l5629 439E                           l5821 3D4E                           l5813 3D36  
                         l5805 3D26                           l5583 60E0                           l3887 4726  
                         l3879 4678                           l4767 5740                           l4759 5CC4  
                         l5495 559E                           l5487 59F0                           l4775 5808  
                         l5479 37DA                           l5751 3BFA                           l5735 3B9C  
                         l5727 3B6E                           l3991 2472                           l3983 2454  
                         l3975 2406                           l3967 23D0                           l3959 23C0  
                         l3895 22A4                           l5399 173C                           l5671 5680  
                         l5591 52FE                           l5567 60AA                           l5559 6092  
                         l5575 5F96                           l4791 38CC                           l4783 3864  
                         l4599 49A4                           l4695 412A                           l4687 406A  
                         l4679 3FD8                           l4951 1DD6                           l4943 1CD2  
                         l4935 1CA0                           l4927 1C64                           l4919 1C38  
                         l4863 1976                           l4847 190C                           l4855 1934  
                         l4839 18C6                           l5663 4484                           l5655 4448  
                         l5647 4410                           l5639 43EE                           l5831 3D6C  
                         l5823 3D54                           l5815 3D3A                           l5807 3D2A  
                         l3889 4742                           l5681 57AE                           l4769 5754  
                         l5489 5A42                           l4777 581E                           l5761 3C3C  
                         l5753 3BFE                           l5737 3BB0                           l5745 3BCE  
                         l5729 3B72                           l3993 2494                           l3985 2458  
                         l3977 2422                           l3969 23D4                           l3897 22B2  
                         l5673 5686                           l5593 5300                           l5585 52E8  
                         l5569 60AC                           l5577 5F9A                           l4793 38DC  
                         l4785 3874                           l4697 4152                           l4689 40A6  
                         l4961 1E76                           l4945 1CE6                           l4953 1DDC  
                         l4937 1CB2                           l4929 1C68                           l4881 1A02  
                         l4865 197E                           l4857 195A                           l4873 19C0  
                         l4849 191C                           l5497 58A4                           l5657 4460  
                         l5649 4428                           l5665 449C                           l5841 3D88  
                         l5833 3D74                           l5825 3D58                           l5817 3D3E  
                         l5809 3D2E                           l5683 57C6                           l5579 60D4  
                         l5771 3C6E                           l5763 3C40                           l5747 3BE2  
                         l5739 3BB4                           l3995 24A4                           l3987 2466  
                         l3979 2432                           l3899 22B4                           l5675 56B8  
                         l5595 5316                           l5587 52FA                           l4795 38E2  
                         l4787 3894                           l4779 3830                           l4699 4162  
                         l4971 1F52                           l4963 1EA8                           l4955 1DFA  
                         l4947 1D4A                           l4939 1CBA                           l4883 1A0A  
                         l4875 19E6                           l4891 1A26                           l4867 1996  
                         l4859 196C                           l5499 58B0                           l5691 591C  
                         l5667 44AA                           l5659 4466                           l5851 3DD6  
                         l5843 3D90                           l5835 3D78                           l5827 3D5C  
                         l5819 3D4A                           l5773 3C82                           l5781 3CA0  
                         l5765 3C44                           l5749 3BF6                           l5757 3C14  
                         l3989 2468                           l5677 56C4                           l5597 531A  
                         l5589 52FC                           l4797 38F2                           l4789 38B0  
                         l4981 1FB4                           l4973 1F58                           l4965 1EB8  
                         l4957 1E2E                           l4949 1DA2                           l4893 1A40  
                         l4877 19F8                           l4869 19A0                           l5693 5938  
                         l5685 58FA                           l5669 44BA                           l5861 3E2A  
                         l5853 3DF0                           l5845 3D98                           l5837 3D7C  
                         l5829 3D64                           l5679 579A                           l5791 3D02  
                         l5783 3CB4                           l5775 3C86                           l5759 3C28  
                         l3999 24B8                           l5599 533E                           l4799 38FE  
                         l4991 204E                           l4983 1FBC                           l4975 1F8C  
                         l4967 1EC8                           l4959 1E60                           l4879 19FC  
                         l5687 590C                           l5871 3E78                           l5863 3E48  
                         l5855 3DF6                           l5847 3DAC                           l5839 3D80  
                         l5793 3D06                           l5785 3CBA                           l5777 3C8A  
                         l5769 3C5A                           l5697 3AAE                           l4993 206E  
                         l4985 1FC2                           l4977 1FA0                           l4969 1EFC  
                         l4897 1A86                           l5689 5914                           l5881 3F18  
                         l5873 3E94                           l5865 3E4C                           l5857 3E0A  
                         l5849 3DAE                           l5787 3CD6                           l5795 3D0E  
                         l5699 3AC0                           l4995 208A                           l4987 1FCA  
                         l4979 1FA4                           l4899 1A8C                           l5883 3F1C  
                         l5875 3EEA                           l5867 3E50                           l5859 3E16  
                         l5789 3CEE                           l4997 2098                           l4989 1FD6  
                         l5885 3F36                           l5877 3EF6                           l5869 3E64  
                         l4999 20A8                           l5879 3F06                           l5887 3F4A  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E34                           STR_5 0E38                           u3000 4678  
                         u3001 4674                           u3010 4742                           u3011 473E  
                         u3100 2398                           u3020 22B2                           u3101 2394  
                         u3021 22AE                           u3110 2406                           u3030 22C4  
                         u3111 2402                           u3031 22C0                           u4000 2A10  
                         u3200 24E4                           u3120 241E                           u3040 22D4  
                 _BAUD4CONbits 000EE9                           u4001 2A0C                           u3201 24E0  
                         u3121 2418                           u3041 22D0                           u4010 2A30  
                         u3210 2502                           u3130 2420                           u3050 2316  
                         u4011 2A2C                           u3211 24FE                           u3051 2312  
                         u4100 4F4A                           u4020 2A42                           u3300 2640  
                         u3220 253A                           u3140 2448                           u3060 232C  
                         u4101 4F46                           u4021 2A3E                           u3301 263C  
                         u3221 2536                           u3141 2444                           u3061 2328  
                         u4110 4F88                           u4030 2A70                           u3310 2656  
                         u3230 2580                           u3150 2466                           u3070 233E  
                         u4111 4F84                           u4031 2A6C                           u3311 2652  
                         u3231 257C                           u3151 2462                           u3071 233A  
                         u4120 4FBC                           u4040 2A86                           u3400 2744  
                         u3320 266C                           u3240 25B6                           u3160 2486  
                         u3080 234E                           u5000 4290                           u4200 4976  
                         u4121 4FB8                           u4041 2A82                           u3401 2740  
                         u3321 2668                           u3241 25B2                           u3161 2482  
                         u3081 234A                           u5001 428C                           u4130 4A60  
                         u4050 2A9A                           u3330 2680                           u3250 25C6  
                         u3170 2494                           u3090 238A                           u5010 42AE  
                         u3410 5DDE                           u4210 49A4                           _T2PR 000FBC  
                         u4131 4A5C                           u4051 2A96                           u3331 267C  
                         u3251 25C2                           u3171 2490                           u3091 2386  
                         u5011 42AA                           u3411 5DDA                           u4211 49A0  
                         u3420 5FEE                           u3500 50F4                           u4140 4A9E  
                         u4060 2AB4                           u3340 269A                           u3260 25F2  
                         u3180 24A4                           u5020 42BE                           u4220 49B8  
                         u4300 4B94                           u3421 5FEA                           u3501 50F0  
                         u4141 4A9A                           u4061 2AB0                           u3341 2696  
                         u3261 25EE                           u3181 24A0                           u5021 42BA  
                         u5101 0E6E                           u4221 49B4                           u4205 496C  
                         u4301 4B90                           u3430 6004                           u3510 510C  
                         u4150 4ABC                           u4070 2AFC                           u3350 26D4  
                         u3270 2602                           u3190 24D6                           u5030 42CC  
                         u5110 0F68                           u4230 49E0                           u4310 4BBC  
                         u3431 6000                           u3511 5108                           u4151 4AB8  
                         u4071 2AF8                           u3351 26D0                           u3271 25FE  
                         u3191 24D2                           u5031 42C8                           u5111 0F64  
                         u4231 49DC                           u4311 4BB8                           u3440 52CE  
                         u3520 5230                           u4160 4ADC                           u4080 2B2A  
                         u3360 26E6                           u3280 261E                           u5040 4306  
                         u5200 1408                           u5120 0FF6                           u3600 45D0  
                         u4240 4A00                           u4320 4BE6                           u4400 3FFA  
                         u3441 52CA                           u3521 522C                           u4161 4AD8  
                         u4081 2B26                           u3361 26E2                           u3281 261A  
                         u5041 4302                           u5201 1404                           u5121 0FF2  
                         u3601 45CC                           u4241 49FC                           u4321 4BE2  
                         u4401 3FF6                           u3450 52E6                           u3530 5248  
                         u4170 4B2C                           u4090 2B64                           u3370 26F6  
                         u3290 262E                           u5050 4314                           u5210 143A  
                         u5130 104A                           u3610 461A                           u4250 4A10  
                         u3451 52E2                           u3531 5244                           u4171 4B28  
                         u4091 2B60                           u3371 26F2                           u3291 262A  
                         u5051 4310                           u5211 1436                           u5131 1046  
                         u3611 4616                           u4251 4A0C                           u3460 53D4  
                         u3540 5F82                           u3700 2BBE                           u3380 2716  
                         u5300 1644                           u5220 1478                           u5140 10A0  
                         u3620 47DA                           u4260 53FC                           u4180 5EF4  
                         u4340 4C20                           u4420 4066                           u5060 3272  
                         u3461 53D0                           u3541 5F7E                           u3701 2BBA  
                         u3381 2712                           u5301 1640                           u5221 1474  
                         u5141 109C                           u3621 47D6                           u4261 53F8  
                         u4181 5EF0                           u4341 4C1A                           u4421 4062  
                         u5061 326E                           u3470 53EC                           u4510 5F4C  
                         u3710 2C02                           u3390 2728                           u5310 1682  
                         u5230 14AA                           u5150 10C0                           u3550 44E6  
                         u3630 480C                           u4270 5452                           u4190 4942  
                         u4350 4C22                           u4430 408A                           u5070 32C2  
                         u3471 53E8                           u6007 5590                           u4511 5F48  
                         u3711 2BFE                           u3391 2724                           u5311 167E  
                         u5231 14A6                           u5151 10BC                           u3551 44E2  
                         u3631 4808                           u4271 544E                           u4191 493E  
                         u4335 4BF8                           u4415 400E                           u5071 32BE  
                         u3480 5192                           u3800 2DA0                           u3720 2C14  
                         u5400 1898                           u5320 16B4                           u5240 14E4  
                         u5160 1170                           u3560 4518                           u3640 484A  
                         u4280 5E3C                           u4600 3A66                           u4520 3860  
                         u4440 40A6                           u4416 4018                           u4360 5D9A  
                         u5080 32E2                           u3481 518E                           u6017 5D02  
                         u3801 2D9C                           u3721 2C10                           u5401 1894  
                         u5321 16B0                           u5241 14E0                           u5161 116C  
                         u3561 4514                           u3641 4846                           u4281 5E38  
                         u4601 3A62                           u4521 385A                           u4441 40A2  
                         u4417 4028                           u4361 5D96                           u5081 32DE  
                         u2930 5482                           u3490 51AA                           u3810 2DBE  
                         u3730 2C24                           u5330 16F2                           u5250 1522  
                         u5170 11BA                           u5410 60C2                           u3650 4874  
                         u4610 3A76                           u4530 3862                           u4290 4B76  
                         u4450 40FA                           u4370 55D2                           u5090 33F8  
                         u2931 547E                           u6107 57B8                           u3491 51A6  
                         u6027 516C                           u3811 2DBA                           u3731 2C20  
                         u5331 16EE                           u5251 151E                           u5171 11B6  
                         u5411 60BE                           u3571 4542                           u3651 4870  
                         u4611 3A72                           u4435 4080                           u4371 55CE  
                         u5091 33F4                           u2940 54A0                           u5420 357C  
                         u3900 2F08                           u3820 2DDE                           u3740 2C64  
                         u5340 1730                           u5260 154C                           u5180 1398  
                         u4508 5E0C                           u3580 4566                           u3660 48A2  
                         u4540 3874                           u4460 4116                           u4380 3FAA  
                         u4700 1AFE                           u4620 18C2                           u5500 58EE  
                         u2941 549C                           u6117 57E4                           u6037 5F58  
                         u5421 3578                           u3901 2F04                           u3821 2DDA  
                         u3741 2C60                           u5341 172C                           u5261 1548  
                         u5181 1394                           u3581 4562                           u3661 489E  
                         u4541 3870                           u4461 4112                           u4701 1AFA  
                         u4621 18BE                           u5501 58EA                           u2950 54BC  
                         u5430 35D6                           u3830 2DF0                           u3750 2CA4  
                         u3910 2772                           u5350 177A                           u5270 158A  
                         u5190 13CA                           u5510 4EDC                           u3590 4590  
                         u3670 48EA                           u4550 38B0                           u4470 4152  
                         u4390 3FD8                           u4710 1B30                           u4630 190C  
                         u2951 54B8                           u6127 53AE                           u6047 586A  
                         u5431 35D2                           u3831 2DEC                           u3751 2CA0  
                         u3911 276E                           u5351 1776                           u5271 1586  
                         u5191 13C6                           u5511 4ED8                           u3591 458C  
                         u3671 48E6                           u4551 38AC                           u4295 4B6C  
                         u4471 414E                           u4455 40F0                           u4391 3FD4  
                         u4711 1B2C                           u4631 1908                           u5440 362C  
                         u3840 2E1E                           u3760 2D1A                           u3680 2B9C  
                         u3920 2784                           u5360 17B8                           u5280 15C8  
                         u5520 4F12                           u2960 4C46                           u4560 38DC  
                         u4480 5B34                           u4800 1E60                           u4720 1B6E  
                         u4640 191C                           u5600 44AA                           u6137 52A8  
                         u6057 5894                           u5441 3628                           u3841 2E1A  
                         u3761 2D16                           u3681 2B98                           u3921 2780  
                         u5361 17B4                           u5281 15C4                           u5521 4F0E  
                         u2961 4C42                           u4561 38D8                           u4385 3FA0  
                         u4481 5B30                           u4801 1E5C                           u4721 1B6A  
                         u4641 1918                           u5601 44A6                           u5450 3682  
                         u3850 2E34                           u3770 2D3C                           u3690 2BAE  
                         u3930 2794                           u5370 17F6                           u5290 1612  
                         u4490 5E0A                           u5530 5FB2                           u2970 4C58  
                         u4570 38F2                           u4810 1EA8                           u4730 1BFA  
                         u4650 195A                           u5610 44B8                           u6067 575E  
                         u5451 367E                           u3851 2E30                           u3771 2D38  
                         u3691 2BAA                           u3931 2790                           u5371 17F2  
                         u5291 160E                           u4491 5E02                           u5531 5FAE  
                         u2971 4C54                           u4571 38EE                           u4811 1EA4  
                         u4731 1BF6                           u4651 1956                           u5611 44B4  
                         u5460 36D8                           u5700 3CB4                           u3860 2E48  
                         u3780 2D66                           u3940 27D4                           u5380 1828  
                         u5620 56B8                           u2980 4C80                           u4580 3A2E  
                         u4900 21DA                           u4820 1EB8                           u4740 1C30  
                         u4660 196C                           u5540 43C4                           u6077 578A  
                         u5461 36D4                           u5701 3CB0                           u3861 2E44  
                         u3781 2D62                           u3941 27D0                           u5381 1824  
                         u5621 56B4                           u2981 4C7C                           u4581 3A2A  
                         u4901 21D6                           u4821 1EB4                           u4741 1C2C  
                         u4661 1968                           u5541 43C0                           u5470 372E  
                         u5710 3CD6                           u5630 3AC0                           u3870 2E62  
                         u3790 2D8A                           u3950 27E6                           u5390 1866  
                         u2990 4CB6                           u4590 3A4C                           u4910 2242  
                         u4830 1F52                           u4750 1C48                           u4670 19E6  
                         u5550 43D2                           u6087 520A                           u5471 372A  
                         u5711 3CD2                           u5631 3ABC                           u3871 2E5E  
                         u3791 2D86                           u3951 27E2                           u5391 1862  
                         u2991 4CB2                           u4591 3A48                           u4911 223C  
                         u4831 1F4E                           u4751 1C44                           u4671 19E2  
                         u5551 43CE                           u5480 3784                           u5720 3D20  
                         u5640 3B10                           u3880 2EAA                           u3960 27F6  
                         u4920 2244                           u4840 1FA0                           u4760 1C7A  
                         u4680 19F8                           u5560 4404                           u6097 5AA8  
                         u5481 3780                           u5721 3D1C                           u5641 3B0C  
                         u3881 2EA6                           u3961 27F2                           u4841 1F9C  
                         u4761 1C76                           u4681 19F4                           u5561 4400  
                         u5490 37DA                           u5650 3B56                           u3890 2EDA  
                         u3970 282C                           u4930 2258                           u4850 204E  
                         u4770 1C88                           u4690 1A72                           u5570 443C  
                         u5491 37D6                           u5651 3B52                           u3891 2ED6  
                         u3971 2828                           u4931 2254                           u4851 204A  
                         u4771 1C84                           u4691 1A6E                           u5571 4438  
                         u4940 504A                           u5660 3B9C                           u3980 283C  
                         u4860 208A                           u4780 1CB2                           u5580 4474  
                         u5740 3DD6                           u4941 5046                           u5661 3B98  
                         u3981 2838                           u4861 2086                           u4781 1CAE  
                         u5581 4470                           u5741 3DD2                           u4950 5062  
                         u5670 3BE2                           u3990 29B6                           u4870 2098  
                         u4790 1DFA                           u5590 4482                           u5750 3E48  
                         u4951 505E                           u5671 3BDE                           u4871 2094  
                         u4791 1DF6                           u5591 447E                           u5751 3E44  
                         u5680 3C28                           u4960 4186                           u4880 20EC  
                         u5760 3F18                           u5681 3C24                           u4961 4182  
                         u4881 20E8                           u5761 3F14                           u5690 3C6E  
                         u4970 4194                           u4890 21BE                           u5770 3F5E  
                         u5691 3C6A                           u3995 29AC                           u4971 4190  
                         u4891 21BA                           u5907 4452                           u5771 3F5A  
                         u4980 41F0                           u4981 41EC                           u5917 448E  
                         u4990 4246                           u4991 4242                           u5927 44C4  
                         u5847 3DBA                           u5937 4E78                           u5857 3DE2  
                         u5947 5024                           u5867 4334                           u5957 5F28  
                         u5877 43A8                           u5967 5812                           u5887 43E0  
                         u5977 583C                           u5897 441A                           u5987 5CB4  
                         u5997 50CE                  _LightBlueMove 599E                           abs@a 0013  
                         _dbuf 02A0                           _labs 55B4                           _main 3D26  
                         _dtoa 3830                           _prec 00E9                           _vals 0166  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 5370                  ___fpclassifyf 4B36                           prodh 000FF4  
                         prodl 000FF3                           start 0034                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 5BD6                __end_of_HighISR 0034         __end_of_color_read_lum 5B86  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 5EA0                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 5C76                _RunOneBlockTime 00F6  
             __end_of_LED_init 602C                  ___fltol@sign1 0009                __end_of___aodiv 465C  
                        ?_labs 0001                __end_of___fladd 2758                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 492C                __end_of___fldiv 2F1C  
              __end_of___flneg 5F16                __end_of___flmul 2B82                __end_of___flsub 5D58  
              __end_of___fltol 4A32                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 54DC                          i2l237 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3830  
      __end_of_sendCharSerial4 60C8     __end_of_I2C_2_Master_Start 610A     __end_of_I2C_2_Master_Write 60D4  
                 YellowMove@mL 0020                          _flags 00F1                   YellowMove@mR 0022  
                        _fputc 4C34                          _fputs 5D9C                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00FA  
                        _width 00E7                          _putch 6114                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5                  ?_Buttons_init 0001                          plusw2 000FDB  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 594C                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5C76  
        _I2C_2_Master_RepStart 60EC               __end_of_BlueMove 5680                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 54DC        __end_of_turnCalibration 44D4                _reverseOneBlock 584C  
                 __end_of_labs 561A                   __end_of_main 3F62                   __end_of_dtoa 3AAE  
                 __end_of_stop 53EE                _colour_rel$3263 0064                _colour_rel$3264 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 4DB4               __end_of_PinkMove 5A94                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
               ??_Buttons_init 0001                         _RG6PPS 000E88                         i2l5801 001A  
                       i2l5803 002C                         i2l5799 000A                      ??_HighISR 0001  
     __end_of_color_click_init 5AE6                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 594C               __end_of___xxtofl 4328                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4A32                         ___fleq 4F1C  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 602C              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 189E  
                    ??___lwdiv 000B                         _floorf 3F62                         _memcpy 5AE6  
                       clear_0 5522                         clear_1 552E                         clear_2 553A  
                       _motorL 015D                         _motorR 0154                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5D58                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 58FA  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 51AC                     ___flge@ff1 002A  
                   _YellowMove 59F0                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5540  
      __end_of_reverseOneBlock 58A4                     ___flneg@f1 0001       __end_of_color_read_Green 5C26  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 60D4  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 51AC  
                 __pidataBANK0 610A                   __pidataBANK1 6110                  __end_of_fputc 4CFE  
                __end_of_fputs 5DE0                  __end_of_putch 6116              __end_of_GreenMove 5EDE  
          __end_of_Timer0_init 6092            __end_of_ReversePink 4E6A                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14364 00D3  
        __end_of_reverseDetect 579A                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _consecutive_read 4E6A  
             _Forwardhalfblock 579A                     ??_LED_init 0001                     _getTMR0val 5680  
            __end_of_RetryMove 55B4                      ?_PinkMove 0020              _color_writetoaddr 6052  
                   _delayed_ms 5F16                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
         __end_of_Buttons_init 60EC              __end_of_TurnDelay 5F84          __end_of_timed_forward 5070  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 2F1C        __end_of_Interrupts_init 60E0         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 6072                        _RedMove 5E62  
           _I2C_2_Master_Start 6100                     ??_PinkMove 0024                     _initUSART4 6092  
           _I2C_2_Master_Write 60C8                        __Hparam 0000                        _WayBack 0116  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 6072  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4DB4  
                      ___aodiv 44D4                        ___fladd 2298                        ___aomod 47C8  
                      ___fldiv 2B82                        ___flneg 5EDE                        ___flmul 2758  
                      ___flsub 5D12                        ___fltol 492C            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 5468            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 54DC                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3550                        __ptext0 3D26                        __ptext1 4328  
                      __ptext2 58FA                        __ptext3 58A4                        __ptext4 324A  
                      __ptext5 189E                        __ptext6 5D58                        __ptext7 5AE6  
                      __ptext8 55B4                        __ptext9 3F62                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F5              color_read_lum@tmp 000A  
                      main@buf 016E                        _sprintf 58FA           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 5540                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
          consecutive_read@rel 0053                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 01D6                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022                     _lost_count 00EB              __end_of_vfpfcnvrt 3550  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F8                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 52E8                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 510E                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                   _consecuitive 00ED  
                  _CCP1CONbits 000FAB                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5CC4                 __end_of___flge 4B36                 __end_of___fleq 4FC6  
               _fullSpeedAhead 524A                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 6052                 __end_of_efgtoa 2298  
               __end_of_floorf 4174                 __end_of_memcpy 5B36                     floorf@F526 00DF  
     __end_of_consecutive_read 4F1C       __end_of_Forwardhalfblock 57F4                  ??_colour_move 002F  
                    _GreenMove 5EA0                 __end_of_strcpy 5D9C            start_initialization 54DC  
       consecutive_read@colour 0057                    __end_of_abs 5E62                    __end_of_pad 5468  
                _TxBufWriteCnt 00F3          __end_of_LightBlueMove 59F0                   ??_OrangeMove 0024  
                 _Buttons_init 60E0          __end_of___fpclassifyf 4C34            color_read_Green@tmp 000A  
 colour_move@recognized_colour 002D        __end_of_initDCmotorsPWM 5370                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 52E8                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 554A                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F6  
                  __pdataBANK1 01D4                _ForwardOneBlock 57F4                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4CFE                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 599E                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5F4E                  __pcstackBANK0 0060                  __pcstackBANK1 016E  
             ___aodiv@dividend 0001            __end_of_colour_move 3D26                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2894 006F               ___lwdiv@dividend 0007                      _dtoa$2863 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3265 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5A42           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 5740  
            _I2C_2_Master_Idle 5FDE              _I2C_2_Master_Init 5FB4              _I2C_2_Master_Read 5DE0  
            _I2C_2_Master_Stop 60F6                     ?_TurnDelay 0001                   _RxBufReadCnt 00F4  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0005  
               colour_rel@vals 004B              _sendStringSerial4 5F84            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _LED_init 6006  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 584C                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0114  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u573_40 001A  
                     i2u573_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E3E            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 324A      __end_of_I2C_2_Master_Idle 6006  
    __end_of_I2C_2_Master_Init 5FDE      __end_of_I2C_2_Master_Read 5E22              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 6100                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024                    _colour_move 3AAE              ??_color_read_Blue 0007  
           __end_of_getTMR0val 56E2                   _TxBufReadCnt 00F2                       _BlueMove 561A  
                    _turnRight 5070             __end_of_delayed_ms 5F4E                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 54F0                      copy_data1 5510  
    __end_of_sendStringSerial4 5FB4                   ??_colour_rel 004F                  _reverseDetect 5740  
__end_of_I2C_2_Master_RepStart 60F6             color_read_Blue@tmp 000A            __end_of_setMotorPWM 47C8  
                 ??_initUSART4 0001                       _PinkMove 5A42                       __Hrparam 0000  
       __end_of_Colour_decider 189E                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 524A  
                  ??_RetryMove 0024           TurnDelay@Turn45Delay 0001                    _readColours 56E2  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 324A                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4                  _timed_forward 4FC6  
                   sprintf@fmt 00B2              ?_consecutive_read 0051              ?_Forwardhalfblock 001A  
                     ___xxtofl 4174                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 60B0             ??_consecutive_read 0055                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4B36  
                     __ptext11 492C                       __ptext20 44D4                       __ptext12 5EDE  
                     __ptext21 5F84                       __ptext13 3830                       __ptext30 5BD6  
                     __ptext22 60B0                       __ptext14 53EE                       __ptext31 5C26  
                     __ptext23 6092                       __ptext15 5D9C                       __ptext40 4A32  
                     __ptext32 60EC                       __ptext24 52E8                       __ptext16 4C34  
                     __ptext41 4F1C                       __ptext33 5DE0                       __ptext25 5680  
                     __ptext17 6114                       __ptext50 5E62                       __ptext42 2B82  
                     __ptext34 2F1C                       __ptext26 4E6A                       __ptext18 5E22  
                     __ptext51 594C                       __ptext43 3AAE                       __ptext35 0E3E  
                     __ptext27 56E2                       __ptext19 47C8                       __ptext60 5CC4  
                     __ptext52 599E                       __ptext44 3550                       __ptext36 4174  
                     __ptext28 5B36                       __ptext61 510E                       __ptext53 5EA0  
                     __ptext45 4FC6                       __ptext37 5D12                       __ptext29 5B86  
                     __ptext70 6100                       __ptext62 5F4E                       __ptext54 561A  
                     __ptext46 5F16                       __ptext38 2298                       __ptext71 5FDE  
                     __ptext63 584C                       __ptext55 59F0                       __ptext47 4CFE  
                     __ptext39 2758                       __ptext80 602C                       __ptext72 5FB4  
                     __ptext64 5740                       __ptext56 5C76                       __ptext48 4DB4  
                     __ptext81 5468                       __ptext73 6072                       __ptext65 51AC  
                     __ptext57 5070                       __ptext49 57F4                       __ptext82 60E0  
                     __ptext74 6006                       __ptext66 5A94                       __ptext58 554A  
                     __ptext75 60D4                       __ptext67 6052                       __ptext59 5A42  
                     __ptext76 579A                       __ptext68 60C8                       __ptext77 5370  
                     __ptext69 60F6                       __ptext78 524A                       __ptext79 465C  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 58A4                       _run_flag 01D4  
                ??_turnRight45 001E                       _turnLeft 510E               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
         consecutive_read@vals 0051                     _INTCONbits 000FF2                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 465C                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 00C4  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                 getTMR0val@temp 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5A94          main@recognized_colour 01D2  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 5CC4                    _prev_colour 00EF  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5D12                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 60B0                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
