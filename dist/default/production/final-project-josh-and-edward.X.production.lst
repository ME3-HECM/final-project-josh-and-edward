

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 02:02:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   105   000000                     
   106                           ; Generated 06/04/2022 GMT
   107                           ; 
   108                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution. Publication is not required when
   122                           ;        this file is used in an embedded application.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F67K40 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140   000000                     
   141                           	psect	idataBANK0
   142   0060EE                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for _RunOneBlockTime
   146   0060EE  041A               	dw	1050
   147                           
   148                           ;initializer for _Turn45Delay
   149   0060F0  003C               	dw	60
   150                           
   151                           ;initializer for _power
   152   0060F2  0032               	dw	50
   153                           
   154                           	psect	idataBANK1
   155   0060F4                     __pidataBANK1:
   156                           	callstack 0
   157                           
   158                           ;initializer for _run_flag
   159   0060F4  0001               	dw	1
   160                           
   161                           ;initializer for _move_count
   162   0060F6  FFFF               	dw	65535
   163   000000                     _LATHbits	set	3968
   164   000000                     _TRISEbits	set	3973
   165   000000                     _TX4REG	set	3812
   166   000000                     _RC4STAbits	set	3815
   167   000000                     _SP4BRGH	set	3814
   168   000000                     _SSP2CON2bits	set	3802
   169   000000                     _RX4PPS	set	3605
   170   000000                     _SSP2CLKPPS	set	3612
   171   000000                     _SSP2DATPPS	set	3613
   172   000000                     _ANSELDbits	set	3751
   173   000000                     _SSP2ADD	set	3798
   174   000000                     _SSP2CON1bits	set	3801
   175   000000                     _LATAbits	set	3961
   176   000000                     _LATFbits	set	3966
   177   000000                     _LATGbits	set	3967
   178   000000                     _TRISAbits	set	3969
   179   000000                     _TRISGbits	set	3975
   180   000000                     _TRISHbits	set	3976
   181   000000                     _PORTFbits	set	3982
   182   000000                     _TMR0L	set	4051
   183   000000                     _TMR0H	set	4052
   184   000000                     _INTCONbits	set	4082
   185   000000                     _CCPR2H	set	4006
   186   000000                     _CCPR1H	set	4010
   187   000000                     _TRISCbits	set	3971
   188   000000                     _TRISDbits	set	3972
   189   000000                     _TRISFbits	set	3974
   190   000000                     _LATDbits	set	3964
   191   000000                     _RC4REG	set	3811
   192   000000                     _SP4BRGL	set	3813
   193   000000                     _TX4STAbits	set	3816
   194   000000                     _BAUD4CONbits	set	3817
   195   000000                     _SSP2CON2	set	3802
   196   000000                     _SSP2STAT	set	3800
   197   000000                     _ANSELFbits	set	3764
   198   000000                     _SSP2BUF	set	3797
   199   000000                     _PIE0bits	set	3625
   200   000000                     _PIR4bits	set	3639
   201   000000                     _RC0PPS	set	3682
   202   000000                     _RD5PPS	set	3695
   203   000000                     _RE2PPS	set	3700
   204   000000                     _RD6PPS	set	3696
   205   000000                     _RC7PPS	set	3689
   206   000000                     _CCPR4H	set	3873
   207   000000                     _CCPR3H	set	3877
   208   000000                     _PIR0bits	set	3635
   209   000000                     _T0CON1bits	set	4054
   210   000000                     _T0CON0bits	set	4053
   211   000000                     _CCP1CONbits	set	4011
   212   000000                     _CCPTMRS0bits	set	4013
   213   000000                     _T2PR	set	4028
   214   000000                     _T2CONbits	set	4029
   215   000000                     _CCP2CONbits	set	4007
   216   000000                     _CCP3CONbits	set	3878
   217   000000                     _CCP4CONbits	set	3874
   218   000000                     _RE4PPS	set	3702
   219   000000                     _RG6PPS	set	3720
   220   000000                     _T2CLKCONbits	set	4031
   221   000000                     _T2HLTbits	set	4030
   222                           
   223                           	psect	smallconst
   224   000E00                     __psmallconst:
   225                           	callstack 0
   226   000E00  00                 	db	0
   227   000E01                     STR_1:
   228                           
   229                           ; BSR set to: 14
   230   000E01  72                 	db	114	;'r'
   231   000E02  65                 	db	101	;'e'
   232   000E03  64                 	db	100	;'d'
   233   000E04  3D                 	db	61	;'='
   234   000E05  25                 	db	37
   235   000E06  66                 	db	102	;'f'
   236   000E07  20                 	db	32
   237   000E08  67                 	db	103	;'g'
   238   000E09  72                 	db	114	;'r'
   239   000E0A  65                 	db	101	;'e'
   240   000E0B  65                 	db	101	;'e'
   241   000E0C  6E                 	db	110	;'n'
   242   000E0D  3D                 	db	61	;'='
   243   000E0E  25                 	db	37
   244   000E0F  66                 	db	102	;'f'
   245   000E10  20                 	db	32
   246   000E11  62                 	db	98	;'b'
   247   000E12  6C                 	db	108	;'l'
   248   000E13  75                 	db	117	;'u'
   249   000E14  65                 	db	101	;'e'
   250   000E15  3D                 	db	61	;'='
   251   000E16  25                 	db	37
   252   000E17  66                 	db	102	;'f'
   253   000E18  20                 	db	32
   254   000E19  6C                 	db	108	;'l'
   255   000E1A  75                 	db	117	;'u'
   256   000E1B  6D                 	db	109	;'m'
   257   000E1C  3D                 	db	61	;'='
   258   000E1D  25                 	db	37
   259   000E1E  64                 	db	100	;'d'
   260   000E1F  20                 	db	32
   261   000E20  61                 	db	97	;'a'
   262   000E21  63                 	db	99	;'c'
   263   000E22  74                 	db	116	;'t'
   264   000E23  75                 	db	117	;'u'
   265   000E24  61                 	db	97	;'a'
   266   000E25  6C                 	db	108	;'l'
   267   000E26  5F                 	db	95	;'_'
   268   000E27  63                 	db	99	;'c'
   269   000E28  6F                 	db	111	;'o'
   270   000E29  6C                 	db	108	;'l'
   271   000E2A  6F                 	db	111	;'o'
   272   000E2B  75                 	db	117	;'u'
   273   000E2C  72                 	db	114	;'r'
   274   000E2D  3D                 	db	61	;'='
   275   000E2E  25                 	db	37
   276   000E2F  64                 	db	100	;'d'
   277   000E30  20                 	db	32
   278   000E31  0D                 	db	13
   279   000E32  0A                 	db	10
   280   000E33  00                 	db	0
   281   000E34                     STR_2:
   282                           
   283                           ; BSR set to: 14
   284   000E34  69                 	db	105	;'i'
   285   000E35  6E                 	db	110	;'n'
   286   000E36  66                 	db	102	;'f'
   287   000E37  00                 	db	0
   288   000E38                     STR_5:
   289                           
   290                           ; BSR set to: 14
   291   000E38  6E                 	db	110	;'n'
   292   000E39  61                 	db	97	;'a'
   293   000E3A  6E                 	db	110	;'n'
   294   000E3B  00                 	db	0
   295   000E3C  00                 	db	0	; dummy byte at the end
   296   000000                     
   297                           ; #config settings
   298                           
   299                           	psect	cinit
   300   0054C0                     __pcinit:
   301                           	callstack 0
   302   0054C0                     start_initialization:
   303                           	callstack 0
   304   0054C0                     __initialization:
   305                           	callstack 0
   306                           
   307                           ; Initialize objects allocated to BANK1 (4 bytes)
   308                           ; load TBLPTR registers with __pidataBANK1
   309   0054C0  0EF4               	movlw	low __pidataBANK1
   310   0054C2  6EF6               	movwf	tblptrl,c
   311   0054C4  0E60               	movlw	high __pidataBANK1
   312   0054C6  6EF7               	movwf	tblptrh,c
   313   0054C8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   314   0054CA  6EF8               	movwf	tblptru,c
   315   0054CC  EE01  F0D8         	lfsr	0,__pdataBANK1
   316   0054D0  EE10 F004          	lfsr	1,4
   317   0054D4                     copy_data0:
   318   0054D4  0009               	tblrd		*+
   319   0054D6  CFF5 FFEE          	movff	tablat,postinc0
   320   0054DA  50E5               	movf	postdec1,w,c
   321   0054DC  50E1               	movf	fsr1l,w,c
   322   0054DE  E1FA               	bnz	copy_data0
   323                           
   324                           ; Initialize objects allocated to BANK0 (6 bytes)
   325                           ; load TBLPTR registers with __pidataBANK0
   326   0054E0  0EEE               	movlw	low __pidataBANK0
   327   0054E2  6EF6               	movwf	tblptrl,c
   328   0054E4  0E60               	movlw	high __pidataBANK0
   329   0054E6  6EF7               	movwf	tblptrh,c
   330   0054E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   331   0054EA  6EF8               	movwf	tblptru,c
   332   0054EC  EE00  F0F2         	lfsr	0,__pdataBANK0
   333   0054F0  EE10 F006          	lfsr	1,6
   334   0054F4                     copy_data1:
   335   0054F4  0009               	tblrd		*+
   336   0054F6  CFF5 FFEE          	movff	tablat,postinc0
   337   0054FA  50E5               	movf	postdec1,w,c
   338   0054FC  50E1               	movf	fsr1l,w,c
   339   0054FE  E1FA               	bnz	copy_data1
   340                           
   341                           ; Clear objects allocated to BANK2 (240 bytes)
   342   005500  EE02  F000         	lfsr	0,__pbssBANK2
   343   005504  0EF0               	movlw	240
   344   005506                     clear_0:
   345   005506  6AEE               	clrf	postinc0,c
   346   005508  06E8               	decf	wreg,f,c
   347   00550A  E1FD               	bnz	clear_0
   348                           
   349                           ; Clear objects allocated to BANK1 (114 bytes)
   350   00550C  EE01  F000         	lfsr	0,__pbssBANK1
   351   005510  0E72               	movlw	114
   352   005512                     clear_1:
   353   005512  6AEE               	clrf	postinc0,c
   354   005514  06E8               	decf	wreg,f,c
   355   005516  E1FD               	bnz	clear_1
   356                           
   357                           ; Clear objects allocated to BANK0 (31 bytes)
   358   005518  EE00  F0D3         	lfsr	0,__pbssBANK0
   359   00551C  0E1F               	movlw	31
   360   00551E                     clear_2:
   361   00551E  6AEE               	clrf	postinc0,c
   362   005520  06E8               	decf	wreg,f,c
   363   005522  E1FD               	bnz	clear_2
   364   005524                     end_of_initialization:
   365                           	callstack 0
   366   005524                     __end_of__initialization:
   367                           	callstack 0
   368   005524  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   369   005526  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   370   005528  0100               	movlb	0
   371   00552A  EF18  F01C         	goto	_main	;jump to C main() function
   372                           
   373                           	psect	bssBANK0
   374   0000D3                     __pbssBANK0:
   375                           	callstack 0
   376   0000D3                     	ds	12
   377   0000DF                     floorf@F526:
   378                           	callstack 0
   379   0000DF                     	ds	4
   380   0000E3                     ___fpclassifyf@F465:
   381                           	callstack 0
   382   0000E3                     	ds	4
   383   0000E7                     _width:
   384                           	callstack 0
   385   0000E7                     	ds	2
   386   0000E9                     _prec:
   387                           	callstack 0
   388   0000E9                     	ds	2
   389   0000EB                     _lost_count:
   390                           	callstack 0
   391   0000EB                     	ds	2
   392   0000ED                     _flags:
   393                           	callstack 0
   394   0000ED                     	ds	1
   395   0000EE                     _TxBufReadCnt:
   396                           	callstack 0
   397   0000EE                     	ds	1
   398   0000EF                     _TxBufWriteCnt:
   399                           	callstack 0
   400   0000EF                     	ds	1
   401   0000F0                     _RxBufReadCnt:
   402                           	callstack 0
   403   0000F0                     	ds	1
   404   0000F1                     _RxBufWriteCnt:
   405                           	callstack 0
   406   0000F1                     	ds	1
   407                           
   408                           	psect	dataBANK0
   409   0000F2                     __pdataBANK0:
   410                           	callstack 0
   411   0000F2                     _RunOneBlockTime:
   412                           	callstack 0
   413   0000F2                     	ds	2
   414   0000F4                     _Turn45Delay:
   415                           	callstack 0
   416   0000F4                     	ds	2
   417   0000F6                     _power:
   418                           	callstack 0
   419   0000F6                     	ds	2
   420                           
   421                           	psect	bssBANK1
   422   000100                     __pbssBANK1:
   423                           	callstack 0
   424   000100                     _EUSART4RXbuf:
   425                           	callstack 0
   426   000100                     	ds	20
   427   000114                     _lost_flag:
   428                           	callstack 0
   429   000114                     	ds	2
   430   000116                     _consecuitive:
   431                           	callstack 0
   432   000116                     	ds	2
   433   000118                     _prev_colour:
   434                           	callstack 0
   435   000118                     	ds	2
   436   00011A                     _WayBack:
   437                           	callstack 0
   438   00011A                     	ds	50
   439   00014C                     _rel:
   440                           	callstack 0
   441   00014C                     	ds	12
   442   000158                     _motorR:
   443                           	callstack 0
   444   000158                     	ds	9
   445   000161                     _motorL:
   446                           	callstack 0
   447   000161                     	ds	9
   448   00016A                     _vals:
   449                           	callstack 0
   450   00016A                     	ds	8
   451                           
   452                           	psect	dataBANK1
   453   0001D8                     __pdataBANK1:
   454                           	callstack 0
   455   0001D8                     _run_flag:
   456                           	callstack 0
   457   0001D8                     	ds	2
   458   0001DA                     _move_count:
   459                           	callstack 0
   460   0001DA                     	ds	2
   461                           
   462                           	psect	bssBANK2
   463   000200                     __pbssBANK2:
   464                           	callstack 0
   465   000200                     _EUSART4TXbuf:
   466                           	callstack 0
   467   000200                     	ds	60
   468   00023C                     _Time_forward:
   469                           	callstack 0
   470   00023C                     	ds	100
   471   0002A0                     _dbuf:
   472                           	callstack 0
   473   0002A0                     	ds	80
   474                           
   475                           	psect	cstackBANK1
   476   000172                     __pcstackBANK1:
   477                           	callstack 0
   478   000172                     main@buf:
   479                           	callstack 0
   480                           
   481                           ; 100 bytes @ 0x0
   482   000172                     	ds	100
   483   0001D6                     main@colour:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x64
   487   0001D6                     	ds	2
   488                           
   489                           	psect	cstackBANK0
   490   000060                     __pcstackBANK0:
   491                           	callstack 0
   492   000060                     efgtoa@fp:
   493                           	callstack 0
   494   000060                     colour_rel@L:
   495                           	callstack 0
   496   000060                     _Colour_decider$3267:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x0
   500   000060                     	ds	2
   501   000062                     efgtoa@f:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x2
   505   000062                     	ds	2
   506   000064                     Colour_decider@Cmax_i:
   507                           	callstack 0
   508   000064                     _colour_rel$3265:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x4
   512   000064                     	ds	2
   513   000066                     efgtoa@c:
   514                           	callstack 0
   515   000066                     Colour_decider@RGB_col:
   516                           	callstack 0
   517                           
   518                           ; 12 bytes @ 0x6
   519   000066                     	ds	1
   520   000067                     ??_efgtoa:
   521                           
   522                           ; 1 bytes @ 0x7
   523   000067                     	ds	1
   524   000068                     _colour_rel$3266:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x8
   528   000068                     	ds	1
   529   000069                     efgtoa@ne:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533   000069                     	ds	2
   534   00006B                     efgtoa@p:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xB
   538   00006B                     	ds	1
   539   00006C                     colour_rel@R:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0xC
   543   00006C                     	ds	1
   544   00006D                     efgtoa@t:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xD
   548   00006D                     	ds	2
   549   00006F                     _efgtoa$2895:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0xF
   553   00006F                     	ds	1
   554   000070                     colour_rel@G:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x10
   558   000070                     	ds	1
   559   000071                     efgtoa@pp:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x11
   563   000071                     	ds	1
   564   000072                     efgtoa@mode:
   565                           	callstack 0
   566   000072                     Colour_decider@Cmax:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x12
   570   000072                     	ds	1
   571   000073                     efgtoa@nmode:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x13
   575   000073                     	ds	1
   576   000074                     efgtoa@d:
   577                           	callstack 0
   578   000074                     colour_rel@B:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x14
   582   000074                     	ds	2
   583   000076                     efgtoa@m:
   584                           	callstack 0
   585   000076                     Colour_decider@Cmin:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x16
   589   000076                     	ds	2
   590   000078                     efgtoa@e:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x18
   594   000078                     	ds	2
   595   00007A                     Colour_decider@i:
   596                           	callstack 0
   597   00007A                     efgtoa@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1A
   601   00007A                     	ds	2
   602   00007C                     Colour_decider@Hue:
   603                           	callstack 0
   604   00007C                     efgtoa@ou:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x1C
   608   00007C                     	ds	4
   609   000080                     efgtoa@i:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x20
   613   000080                     	ds	2
   614   000082                     efgtoa@h:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x22
   618   000082                     	ds	4
   619   000086                     efgtoa@l:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x26
   623   000086                     	ds	4
   624   00008A                     efgtoa@sign:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x2A
   628   00008A                     	ds	1
   629   00008B                     efgtoa@n:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2B
   633   00008B                     	ds	2
   634   00008D                     efgtoa@g:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x2D
   638   00008D                     	ds	4
   639   000091                     efgtoa@u:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x31
   643   000091                     	ds	4
   644   000095                     vfpfcnvrt@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x35
   648   000095                     	ds	2
   649   000097                     vfpfcnvrt@fmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x37
   653   000097                     	ds	2
   654   000099                     vfpfcnvrt@ap:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x39
   658   000099                     	ds	2
   659   00009B                     ??_vfpfcnvrt:
   660                           
   661                           ; 1 bytes @ 0x3B
   662   00009B                     	ds	2
   663   00009D                     vfpfcnvrt@convarg:
   664                           	callstack 0
   665                           
   666                           ; 8 bytes @ 0x3D
   667   00009D                     	ds	8
   668   0000A5                     vfpfcnvrt@c:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x45
   672   0000A5                     	ds	1
   673   0000A6                     vfpfcnvrt@cp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x46
   677   0000A6                     	ds	2
   678   0000A8                     ?_vfprintf:
   679                           	callstack 0
   680   0000A8                     vfprintf@fp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x48
   684   0000A8                     	ds	2
   685   0000AA                     vfprintf@fmt:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x4A
   689   0000AA                     	ds	2
   690   0000AC                     vfprintf@ap:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x4C
   694   0000AC                     	ds	2
   695   0000AE                     vfprintf@cfmt:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x4E
   699   0000AE                     	ds	2
   700   0000B0                     ?_sprintf:
   701                           	callstack 0
   702   0000B0                     sprintf@s:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x50
   706   0000B0                     	ds	2
   707   0000B2                     sprintf@fmt:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x52
   711   0000B2                     	ds	18
   712   0000C4                     sprintf@ap:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x64
   716   0000C4                     	ds	2
   717   0000C6                     sprintf@f:
   718                           	callstack 0
   719                           
   720                           ; 11 bytes @ 0x66
   721   0000C6                     	ds	11
   722   0000D1                     ??_main:
   723                           
   724                           ; 1 bytes @ 0x71
   725   0000D1                     	ds	2
   726                           
   727                           	psect	cstackCOMRAM
   728   000001                     __pcstackCOMRAM:
   729                           	callstack 0
   730   000001                     ??_getTMR0val:
   731   000001                     ??_I2C_2_Master_Idle:
   732   000001                     ?___fpclassifyf:
   733                           	callstack 0
   734   000001                     ?___wmul:
   735                           	callstack 0
   736   000001                     ?___fladd:
   737                           	callstack 0
   738   000001                     ?_labs:
   739                           	callstack 0
   740   000001                     ?___flneg:
   741                           	callstack 0
   742   000001                     ?___fltol:
   743                           	callstack 0
   744   000001                     ?___xxtofl:
   745                           	callstack 0
   746   000001                     ?___aodiv:
   747                           	callstack 0
   748   000001                     ?___aomod:
   749                           	callstack 0
   750   000001                     sendCharSerial4@charToSend:
   751                           	callstack 0
   752   000001                     initDCmotorsPWM@PWMperiod:
   753                           	callstack 0
   754   000001                     TurnDelay@Turn45Delay:
   755                           	callstack 0
   756   000001                     delayed_ms@time:
   757                           	callstack 0
   758   000001                     ___wmul@multiplier:
   759                           	callstack 0
   760   000001                     memcpy@d1:
   761                           	callstack 0
   762   000001                     fputc@c:
   763                           	callstack 0
   764   000001                     strcpy@dest:
   765                           	callstack 0
   766   000001                     ___flneg@f1:
   767                           	callstack 0
   768   000001                     ___fltol@f1:
   769                           	callstack 0
   770   000001                     ___fladd@b:
   771                           	callstack 0
   772   000001                     ___xxtofl@val:
   773                           	callstack 0
   774   000001                     ___fpclassifyf@x:
   775                           	callstack 0
   776   000001                     labs@a:
   777                           	callstack 0
   778   000001                     ___aodiv@dividend:
   779                           	callstack 0
   780   000001                     ___aomod@dividend:
   781                           	callstack 0
   782                           
   783                           ; 8 bytes @ 0x0
   784   000001                     	ds	1
   785   000002                     ??_I2C_2_Master_Read:
   786   000002                     I2C_2_Master_Write@data_byte:
   787                           	callstack 0
   788   000002                     sendStringSerial4@string:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x1
   792   000002                     	ds	1
   793   000003                     ??_delayed_ms:
   794   000003                     ??_TurnDelay:
   795   000003                     color_writetoaddr@value:
   796                           	callstack 0
   797   000003                     I2C_2_Master_Read@ack:
   798                           	callstack 0
   799   000003                     getTMR0val@temp:
   800                           	callstack 0
   801   000003                     ___wmul@multiplicand:
   802                           	callstack 0
   803   000003                     memcpy@s1:
   804                           	callstack 0
   805   000003                     fputc@fp:
   806                           	callstack 0
   807   000003                     strcpy@src:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811   000003                     	ds	1
   812   000004                     color_writetoaddr@address:
   813                           	callstack 0
   814   000004                     I2C_2_Master_Read@tmp:
   815                           	callstack 0
   816   000004                     delayed_ms@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x3
   820   000004                     	ds	1
   821   000005                     ??_fputc:
   822   000005                     ??___fpclassifyf:
   823   000005                     ??_labs:
   824   000005                     ??_color_click_init:
   825   000005                     ??___fltol:
   826   000005                     ??___xxtofl:
   827   000005                     ?_color_read_lum:
   828                           	callstack 0
   829   000005                     ?_color_read_Red:
   830                           	callstack 0
   831   000005                     ?_color_read_Green:
   832                           	callstack 0
   833   000005                     ?_color_read_Blue:
   834                           	callstack 0
   835   000005                     getTMR0val@moving:
   836                           	callstack 0
   837   000005                     ___wmul@product:
   838                           	callstack 0
   839   000005                     memcpy@n:
   840                           	callstack 0
   841   000005                     strcpy@s:
   842                           	callstack 0
   843   000005                     ___fladd@a:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x4
   847   000005                     	ds	2
   848   000007                     ??_color_read_lum:
   849   000007                     ??_color_read_Red:
   850   000007                     ??_color_read_Green:
   851   000007                     ??_color_read_Blue:
   852   000007                     ?___lwdiv:
   853                           	callstack 0
   854   000007                     ___lwdiv@dividend:
   855                           	callstack 0
   856   000007                     memcpy@d:
   857                           	callstack 0
   858   000007                     strcpy@d:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x6
   862   000007                     	ds	2
   863   000009                     ??___fladd:
   864   000009                     ___fltol@sign1:
   865                           	callstack 0
   866   000009                     ___xxtofl@sign:
   867                           	callstack 0
   868   000009                     ___lwdiv@divisor:
   869                           	callstack 0
   870   000009                     ___fpclassifyf@e:
   871                           	callstack 0
   872   000009                     memcpy@s:
   873                           	callstack 0
   874   000009                     ___aodiv@divisor:
   875                           	callstack 0
   876   000009                     ___aomod@divisor:
   877                           	callstack 0
   878                           
   879                           ; 8 bytes @ 0x8
   880   000009                     	ds	1
   881   00000A                     ___fltol@exp1:
   882                           	callstack 0
   883   00000A                     ___xxtofl@exp:
   884                           	callstack 0
   885   00000A                     color_read_lum@tmp:
   886                           	callstack 0
   887   00000A                     color_read_Red@tmp:
   888                           	callstack 0
   889   00000A                     color_read_Green@tmp:
   890                           	callstack 0
   891   00000A                     color_read_Blue@tmp:
   892                           	callstack 0
   893   00000A                     fputs@s:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x9
   897   00000A                     	ds	1
   898   00000B                     memcpy@tmp:
   899                           	callstack 0
   900   00000B                     ___lwdiv@quotient:
   901                           	callstack 0
   902   00000B                     ___xxtofl@arg:
   903                           	callstack 0
   904   00000B                     ___fpclassifyf@u:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0xA
   908   00000B                     	ds	1
   909   00000C                     readColours@vals:
   910                           	callstack 0
   911   00000C                     fputs@fp:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0xB
   915   00000C                     	ds	1
   916   00000D                     ___lwdiv@counter:
   917                           	callstack 0
   918   00000D                     ___fladd@signs:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0xC
   922   00000D                     	ds	1
   923   00000E                     ___fladd@aexp:
   924                           	callstack 0
   925   00000E                     fputs@c:
   926                           	callstack 0
   927   00000E                     setMotorPWM@m:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xD
   931   00000E                     	ds	1
   932   00000F                     ___fladd@bexp:
   933                           	callstack 0
   934   00000F                     fputs@i:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0xE
   938   00000F                     	ds	1
   939   000010                     ??_setMotorPWM:
   940   000010                     ___fladd@grs:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0xF
   944   000010                     	ds	1
   945   000011                     ?___flmul:
   946                           	callstack 0
   947   000011                     ___aodiv@counter:
   948                           	callstack 0
   949   000011                     ___aomod@counter:
   950                           	callstack 0
   951   000011                     pad@fp:
   952                           	callstack 0
   953   000011                     ___flmul@b:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x10
   957   000011                     	ds	1
   958   000012                     setMotorPWM@posDuty:
   959                           	callstack 0
   960   000012                     ___aodiv@sign:
   961                           	callstack 0
   962   000012                     ___aomod@sign:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x11
   966   000012                     	ds	1
   967   000013                     ?_abs:
   968                           	callstack 0
   969   000013                     setMotorPWM@negDuty:
   970                           	callstack 0
   971   000013                     pad@buf:
   972                           	callstack 0
   973   000013                     abs@a:
   974                           	callstack 0
   975   000013                     ___aodiv@quotient:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x12
   979   000013                     	ds	1
   980   000014                     stop@mL:
   981                           	callstack 0
   982   000014                     turnLeft@mL:
   983                           	callstack 0
   984   000014                     turnRight@mL:
   985                           	callstack 0
   986   000014                     fullSpeedAhead@mL:
   987                           	callstack 0
   988   000014                     timed_forward@mL:
   989                           	callstack 0
   990   000014                     fullSpeedBack@mL:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x13
   994   000014                     	ds	1
   995   000015                     ??_abs:
   996   000015                     pad@p:
   997                           	callstack 0
   998   000015                     ___flmul@a:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x14
  1002   000015                     	ds	1
  1003   000016                     stop@mR:
  1004                           	callstack 0
  1005   000016                     turnLeft@mR:
  1006                           	callstack 0
  1007   000016                     turnRight@mR:
  1008                           	callstack 0
  1009   000016                     fullSpeedAhead@mR:
  1010                           	callstack 0
  1011   000016                     timed_forward@mR:
  1012                           	callstack 0
  1013   000016                     fullSpeedBack@mR:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x15
  1017   000016                     	ds	1
  1018   000017                     ??_pad:
  1019                           
  1020                           ; 1 bytes @ 0x16
  1021   000017                     	ds	1
  1022   000018                     ??_fullSpeedAhead:
  1023   000018                     ??_stop:
  1024   000018                     ??_turnLeft:
  1025   000018                     ??_turnRight:
  1026   000018                     ??_fullSpeedBack:
  1027   000018                     timed_forward@time:
  1028                           	callstack 0
  1029   000018                     pad@i:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x17
  1033   000018                     	ds	1
  1034   000019                     ??___flmul:
  1035                           
  1036                           ; 1 bytes @ 0x18
  1037   000019                     	ds	1
  1038   00001A                     ??_timed_forward:
  1039   00001A                     turnRight45@mL:
  1040                           	callstack 0
  1041   00001A                     turnLeft45@mL:
  1042                           	callstack 0
  1043   00001A                     reverseDetect@mL:
  1044                           	callstack 0
  1045   00001A                     reverseOneBlock@mL:
  1046                           	callstack 0
  1047   00001A                     ForwardOneBlock@mL:
  1048                           	callstack 0
  1049   00001A                     Forwardhalfblock@mL:
  1050                           	callstack 0
  1051   00001A                     pad@w:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x19
  1055   00001A                     	ds	2
  1056   00001C                     turnRight45@mR:
  1057                           	callstack 0
  1058   00001C                     turnLeft45@mR:
  1059                           	callstack 0
  1060   00001C                     reverseDetect@mR:
  1061                           	callstack 0
  1062   00001C                     reverseOneBlock@mR:
  1063                           	callstack 0
  1064   00001C                     ForwardOneBlock@mR:
  1065                           	callstack 0
  1066   00001C                     Forwardhalfblock@mR:
  1067                           	callstack 0
  1068   00001C                     dtoa@fp:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x1B
  1072   00001C                     	ds	1
  1073   00001D                     ___flmul@sign:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x1C
  1077   00001D                     	ds	1
  1078   00001E                     ??_Forwardhalfblock:
  1079   00001E                     ??_turnRight45:
  1080   00001E                     ??_turnLeft45:
  1081   00001E                     ??_reverseDetect:
  1082   00001E                     ??_reverseOneBlock:
  1083   00001E                     ??_ForwardOneBlock:
  1084   00001E                     ___flmul@grs:
  1085                           	callstack 0
  1086   00001E                     dtoa@d:
  1087                           	callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x1D
  1090   00001E                     	ds	2
  1091   000020                     RedMove@mL:
  1092                           	callstack 0
  1093   000020                     GreenMove@mL:
  1094                           	callstack 0
  1095   000020                     BlueMove@mL:
  1096                           	callstack 0
  1097   000020                     YellowMove@mL:
  1098                           	callstack 0
  1099   000020                     PinkMove@mL:
  1100                           	callstack 0
  1101   000020                     OrangeMove@mL:
  1102                           	callstack 0
  1103   000020                     LightBlueMove@mL:
  1104                           	callstack 0
  1105   000020                     RetryMove@mL:
  1106                           	callstack 0
  1107   000020                     ReverseYellow@mL:
  1108                           	callstack 0
  1109   000020                     ReversePink@mL:
  1110                           	callstack 0
  1111   000020                     turnCalibration@mL:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x1F
  1115   000020                     	ds	2
  1116   000022                     ___flmul@aexp:
  1117                           	callstack 0
  1118   000022                     RedMove@mR:
  1119                           	callstack 0
  1120   000022                     GreenMove@mR:
  1121                           	callstack 0
  1122   000022                     BlueMove@mR:
  1123                           	callstack 0
  1124   000022                     YellowMove@mR:
  1125                           	callstack 0
  1126   000022                     PinkMove@mR:
  1127                           	callstack 0
  1128   000022                     OrangeMove@mR:
  1129                           	callstack 0
  1130   000022                     LightBlueMove@mR:
  1131                           	callstack 0
  1132   000022                     RetryMove@mR:
  1133                           	callstack 0
  1134   000022                     ReverseYellow@mR:
  1135                           	callstack 0
  1136   000022                     ReversePink@mR:
  1137                           	callstack 0
  1138   000022                     turnCalibration@mR:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x21
  1142   000022                     	ds	1
  1143   000023                     ___flmul@bexp:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x22
  1147   000023                     	ds	1
  1148   000024                     ??_turnCalibration:
  1149   000024                     ??_RetryMove:
  1150   000024                     go_Home@WayBack:
  1151                           	callstack 0
  1152   000024                     ___flmul@prod:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x23
  1156   000024                     	ds	2
  1157   000026                     ??_dtoa:
  1158   000026                     go_Home@Time_forward:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x25
  1162   000026                     	ds	2
  1163   000028                     ??_go_Home:
  1164   000028                     ___flmul@temp:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x27
  1168   000028                     	ds	2
  1169   00002A                     ?___flsub:
  1170                           	callstack 0
  1171   00002A                     ___flge@ff1:
  1172                           	callstack 0
  1173   00002A                     ___flsub@b:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x29
  1177   00002A                     	ds	1
  1178   00002B                     go_Home@i:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x2A
  1182   00002B                     	ds	2
  1183   00002D                     colour_move@recognized_colour:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x2C
  1187   00002D                     	ds	1
  1188   00002E                     _dtoa$2864:
  1189                           	callstack 0
  1190   00002E                     ___flge@ff2:
  1191                           	callstack 0
  1192   00002E                     ___flsub@a:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x2D
  1196   00002E                     	ds	1
  1197   00002F                     
  1198                           ; 1 bytes @ 0x2E
  1199   00002F                     	ds	1
  1200   000030                     dtoa@p:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x2F
  1204   000030                     	ds	2
  1205   000032                     ??___flge:
  1206   000032                     ?___fldiv:
  1207                           	callstack 0
  1208   000032                     dtoa@w:
  1209                           	callstack 0
  1210   000032                     ___fleq@ff1:
  1211                           	callstack 0
  1212   000032                     ___fldiv@b:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x31
  1216   000032                     	ds	2
  1217   000034                     dtoa@n:
  1218                           	callstack 0
  1219                           
  1220                           ; 8 bytes @ 0x33
  1221   000034                     	ds	2
  1222   000036                     ___fleq@ff2:
  1223                           	callstack 0
  1224   000036                     ___fldiv@a:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x35
  1228   000036                     	ds	4
  1229   00003A                     ??___fldiv:
  1230   00003A                     ??___fleq:
  1231                           
  1232                           ; 1 bytes @ 0x39
  1233   00003A                     	ds	2
  1234   00003C                     dtoa@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x3B
  1238   00003C                     	ds	2
  1239   00003E                     dtoa@s:
  1240                           	callstack 0
  1241   00003E                     ___fldiv@rem:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x3D
  1245   00003E                     	ds	4
  1246   000042                     ___fldiv@sign:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x41
  1250   000042                     	ds	1
  1251   000043                     ___fldiv@new_exp:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x42
  1255   000043                     	ds	2
  1256   000045                     ___fldiv@grs:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x44
  1260   000045                     	ds	4
  1261   000049                     ___fldiv@bexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x48
  1265   000049                     	ds	1
  1266   00004A                     ___fldiv@aexp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x49
  1270   00004A                     	ds	1
  1271   00004B                     ?_Colour_decider:
  1272                           	callstack 0
  1273   00004B                     ?_floorf:
  1274                           	callstack 0
  1275   00004B                     colour_rel@vals:
  1276                           	callstack 0
  1277   00004B                     Colour_decider@vals:
  1278                           	callstack 0
  1279   00004B                     floorf@x:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x4A
  1283   00004B                     	ds	2
  1284   00004D                     colour_rel@rel:
  1285                           	callstack 0
  1286   00004D                     Colour_decider@rel:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x4C
  1290   00004D                     	ds	2
  1291   00004F                     ??_floorf:
  1292   00004F                     ??_Colour_decider:
  1293                           
  1294                           ; 1 bytes @ 0x4E
  1295   00004F                     	ds	6
  1296   000055                     floorf@m:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x54
  1300   000055                     	ds	4
  1301   000059                     floorf@e:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x58
  1305   000059                     	ds	2
  1306   00005B                     floorf@u:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x5A
  1310   00005B                     	ds	4
  1311   00005F                     
  1312                           ; 1 bytes @ 0x5E
  1313 ;;
  1314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 33 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  colour          2  100[BANK1 ] int 
  1323 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1334 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;Total ram usage:      104 bytes
  1338 ;; Hardware stack levels required when called: 9
  1339 ;; This function calls:
  1340 ;;		_Buttons_init
  1341 ;;		_Colour_decider
  1342 ;;		_Forwardhalfblock
  1343 ;;		_I2C_2_Master_Init
  1344 ;;		_Interrupts_init
  1345 ;;		_LED_init
  1346 ;;		_Timer0_init
  1347 ;;		_color_click_init
  1348 ;;		_colour_move
  1349 ;;		_colour_rel
  1350 ;;		_fullSpeedAhead
  1351 ;;		_getTMR0val
  1352 ;;		_go_Home
  1353 ;;		_initDCmotorsPWM
  1354 ;;		_initUSART4
  1355 ;;		_readColours
  1356 ;;		_sendStringSerial4
  1357 ;;		_sprintf
  1358 ;;		_stop
  1359 ;;		_turnCalibration
  1360 ;; This function is called by:
  1361 ;;		Startup code after reset
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text0
  1366   003830                     __ptext0:
  1367                           	callstack 0
  1368   003830                     _main:
  1369                           	callstack 22
  1370   003830                     
  1371                           ;main.c: 34:     initUSART4();
  1372   003830  EC3B  F030         	call	_initUSART4	;wreg free
  1373   003834                     
  1374                           ;main.c: 35:     Interrupts_init();
  1375   003834  EC5C  F030         	call	_Interrupts_init	;wreg free
  1376   003838                     
  1377                           ;main.c: 36:     color_click_init();
  1378   003838  EC3C  F02D         	call	_color_click_init	;wreg free
  1379   00383C                     
  1380                           ;main.c: 37:     I2C_2_Master_Init();
  1381   00383C  ECCC  F02F         	call	_I2C_2_Master_Init	;wreg free
  1382   003840                     
  1383                           ;main.c: 38:     LED_init();
  1384   003840  ECF5  F02F         	call	_LED_init	;wreg free
  1385   003844                     
  1386                           ;main.c: 39:     Buttons_init();
  1387   003844  EC62  F030         	call	_Buttons_init	;wreg free
  1388   003848                     
  1389                           ;main.c: 40:     initDCmotorsPWM(200);
  1390   003848  0E00               	movlw	0
  1391   00384A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1392   00384C  0EC8               	movlw	200
  1393   00384E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1394   003850  EC66  F029         	call	_initDCmotorsPWM	;wreg free
  1395   003854                     
  1396                           ;main.c: 41:     Timer0_init();
  1397   003854  EC2B  F030         	call	_Timer0_init	;wreg free
  1398   003858                     
  1399                           ;main.c: 43:     motorL.power=0;
  1400   003858  0E00               	movlw	0
  1401   00385A  0101               	movlb	1	; () banked
  1402   00385C  6F61               	movwf	_motorL& (0+255),b
  1403   00385E                     
  1404                           ; BSR set to: 1
  1405                           ;main.c: 44:     motorL.direction=1;
  1406   00385E  0E01               	movlw	1
  1407   003860  6F62               	movwf	(_motorL+1)& (0+255),b
  1408   003862                     
  1409                           ; BSR set to: 1
  1410                           ;main.c: 45:     motorL.brakemode=1;
  1411   003862  0E01               	movlw	1
  1412   003864  6F63               	movwf	(_motorL+2)& (0+255),b
  1413   003866                     
  1414                           ; BSR set to: 1
  1415                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1416   003866  0EAA               	movlw	170
  1417   003868  6F66               	movwf	(_motorL+5)& (0+255),b
  1418   00386A  0E0F               	movlw	15
  1419   00386C  6F67               	movwf	(_motorL+6)& (0+255),b
  1420   00386E                     
  1421                           ; BSR set to: 1
  1422                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1423   00386E  0EA6               	movlw	166
  1424   003870  6F68               	movwf	(_motorL+7)& (0+255),b
  1425   003872  0E0F               	movlw	15
  1426   003874  6F69               	movwf	(_motorL+8)& (0+255),b
  1427   003876                     
  1428                           ; BSR set to: 1
  1429                           ;main.c: 48:     motorL.PWMperiod=200;
  1430   003876  0E00               	movlw	0
  1431   003878  6F65               	movwf	(_motorL+4)& (0+255),b
  1432   00387A  0EC8               	movlw	200
  1433   00387C  6F64               	movwf	(_motorL+3)& (0+255),b
  1434   00387E                     
  1435                           ; BSR set to: 1
  1436                           ;main.c: 49:     motorR.power=0;
  1437   00387E  0E00               	movlw	0
  1438   003880  6F58               	movwf	_motorR& (0+255),b
  1439   003882                     
  1440                           ; BSR set to: 1
  1441                           ;main.c: 50:     motorR.direction=1;
  1442   003882  0E01               	movlw	1
  1443   003884  6F59               	movwf	(_motorR+1)& (0+255),b
  1444   003886                     
  1445                           ; BSR set to: 1
  1446                           ;main.c: 51:     motorR.brakemode=1;
  1447   003886  0E01               	movlw	1
  1448   003888  6F5A               	movwf	(_motorR+2)& (0+255),b
  1449   00388A                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1452   00388A  0E25               	movlw	37
  1453   00388C  6F5D               	movwf	(_motorR+5)& (0+255),b
  1454   00388E  0E0F               	movlw	15
  1455   003890  6F5E               	movwf	(_motorR+6)& (0+255),b
  1456   003892                     
  1457                           ; BSR set to: 1
  1458                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1459   003892  0E21               	movlw	33
  1460   003894  6F5F               	movwf	(_motorR+7)& (0+255),b
  1461   003896  0E0F               	movlw	15
  1462   003898  6F60               	movwf	(_motorR+8)& (0+255),b
  1463   00389A                     
  1464                           ; BSR set to: 1
  1465                           ;main.c: 54:     motorR.PWMperiod=200;
  1466   00389A  0E00               	movlw	0
  1467   00389C  6F5C               	movwf	(_motorR+4)& (0+255),b
  1468   00389E  0EC8               	movlw	200
  1469   0038A0  6F5B               	movwf	(_motorR+3)& (0+255),b
  1470   0038A2                     
  1471                           ; BSR set to: 1
  1472                           ;main.c: 56:     char buf[100];;main.c: 61:     turnCalibration(&motorL,&motorR);
  1473   0038A2  0E61               	movlw	low _motorL
  1474   0038A4  6E20               	movwf	turnCalibration@mL^0,c
  1475   0038A6  0E01               	movlw	high _motorL
  1476   0038A8  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1477   0038AA  0E58               	movlw	low _motorR
  1478   0038AC  6E22               	movwf	turnCalibration@mR^0,c
  1479   0038AE  0E01               	movlw	high _motorR
  1480   0038B0  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1481   0038B2  ECDF  F021         	call	_turnCalibration	;wreg free
  1482   0038B6                     
  1483                           ;main.c: 63:     LATFbits.LATF0=0;
  1484   0038B6  907E               	bcf	126,0,c	;volatile
  1485   0038B8                     
  1486                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1487   0038B8  0E52               	movlw	82
  1488   0038BA  0100               	movlb	0	; () banked
  1489   0038BC  6FD2               	movwf	(??_main+1)& (0+255),b
  1490   0038BE  0E2B               	movlw	43
  1491   0038C0  6FD1               	movwf	??_main& (0+255),b
  1492   0038C2  0E00               	movlw	0
  1493   0038C4                     u5887:
  1494   0038C4  2EE8               	decfsz	wreg,f,c
  1495   0038C6  D7FE               	bra	u5887
  1496   0038C8  2FD1               	decfsz	??_main& (0+255),f,b
  1497   0038CA  D7FC               	bra	u5887
  1498   0038CC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1499   0038CE  D7FA               	bra	u5887
  1500   0038D0  F000               	nop	
  1501   0038D2                     l342:
  1502   0038D2  B48E               	btfsc	142,2,c	;volatile
  1503   0038D4  EF6E  F01C         	goto	u5761
  1504   0038D8  EF70  F01C         	goto	u5760
  1505   0038DC                     u5761:
  1506   0038DC  EF69  F01C         	goto	l342
  1507   0038E0                     u5760:
  1508   0038E0                     
  1509                           ;main.c: 68:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1510   0038E0  0E52               	movlw	82
  1511   0038E2  0100               	movlb	0	; () banked
  1512   0038E4  6FD2               	movwf	(??_main+1)& (0+255),b
  1513   0038E6  0E2B               	movlw	43
  1514   0038E8  6FD1               	movwf	??_main& (0+255),b
  1515   0038EA  0E00               	movlw	0
  1516   0038EC                     u5897:
  1517   0038EC  2EE8               	decfsz	wreg,f,c
  1518   0038EE  D7FE               	bra	u5897
  1519   0038F0  2FD1               	decfsz	??_main& (0+255),f,b
  1520   0038F2  D7FC               	bra	u5897
  1521   0038F4  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1522   0038F6  D7FA               	bra	u5897
  1523   0038F8  F000               	nop	
  1524   0038FA                     
  1525                           ;main.c: 70:     T0CON0bits.T0EN=1;
  1526   0038FA  8ED5               	bsf	213,7,c	;volatile
  1527                           
  1528                           ;main.c: 71:     while (run_flag)
  1529   0038FC  EF75  F01D         	goto	l5932
  1530   003900                     l5882:
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;main.c: 72:     {;main.c: 73:         consecuitive=0;
  1534   003900  0E00               	movlw	0
  1535   003902  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1536   003904  0E00               	movlw	0
  1537   003906  6F16               	movwf	_consecuitive& (0+255),b
  1538   003908                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 75:         fullSpeedAhead(&motorL,&motorR);
  1541   003908  0E61               	movlw	low _motorL
  1542   00390A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1543   00390C  0E01               	movlw	high _motorL
  1544   00390E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1545   003910  0E58               	movlw	low _motorR
  1546   003912  6E16               	movwf	fullSpeedAhead@mR^0,c
  1547   003914  0E01               	movlw	high _motorR
  1548   003916  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1549   003918  EC17  F029         	call	_fullSpeedAhead	;wreg free
  1550   00391C                     
  1551                           ;main.c: 77:         readColours(&vals);
  1552   00391C  0E6A               	movlw	low _vals
  1553   00391E  6E0C               	movwf	readColours@vals^0,c
  1554   003920  0E01               	movlw	high _vals
  1555   003922  6E0D               	movwf	(readColours@vals+1)^0,c
  1556   003924  EC63  F02B         	call	_readColours	;wreg free
  1557   003928                     
  1558                           ;main.c: 80:         colour_rel(&vals, &rel);
  1559   003928  0E6A               	movlw	low _vals
  1560   00392A  6E4B               	movwf	colour_rel@vals^0,c
  1561   00392C  0E01               	movlw	high _vals
  1562   00392E  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1563   003930  0E4C               	movlw	low _rel
  1564   003932  6E4D               	movwf	colour_rel@rel^0,c
  1565   003934  0E01               	movlw	high _rel
  1566   003936  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1567   003938  EC8E  F017         	call	_colour_rel	;wreg free
  1568   00393C                     
  1569                           ;main.c: 83:         if (vals.L>=500){
  1570   00393C  0101               	movlb	1	; () banked
  1571   00393E  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1572   003940  EFAB  F01C         	goto	u5771
  1573   003944  0EF4               	movlw	244
  1574   003946  5D70               	subwf	(_vals+6)& (0+255),w,b
  1575   003948  0E01               	movlw	1
  1576   00394A  5971               	subwfb	(_vals+7)& (0+255),w,b
  1577   00394C  A0D8               	btfss	status,0,c
  1578   00394E  EFAB  F01C         	goto	u5771
  1579   003952  EFAD  F01C         	goto	u5770
  1580   003956                     u5771:
  1581   003956  EF53  F01D         	goto	l5924
  1582   00395A                     u5770:
  1583   00395A                     
  1584                           ; BSR set to: 1
  1585                           ;main.c: 84:             move_count++;
  1586   00395A  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1587   00395C  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1588   00395E                     
  1589                           ; BSR set to: 1
  1590                           ;main.c: 85:             getTMR0val();
  1591   00395E  EC32  F02B         	call	_getTMR0val	;wreg free
  1592   003962                     
  1593                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1594   003962  0E61               	movlw	low _motorL
  1595   003964  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1596   003966  0E01               	movlw	high _motorL
  1597   003968  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1598   00396A  0E58               	movlw	low _motorR
  1599   00396C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1600   00396E  0E01               	movlw	high _motorR
  1601   003970  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1602   003972  ECBF  F02B         	call	_Forwardhalfblock	;wreg free
  1603   003976                     
  1604                           ;main.c: 89:             stop(&motorL, &motorR);
  1605   003976  0E61               	movlw	low _motorL
  1606   003978  6E14               	movwf	stop@mL^0,c
  1607   00397A  0E01               	movlw	high _motorL
  1608   00397C  6E15               	movwf	(stop@mL+1)^0,c
  1609   00397E  0E58               	movlw	low _motorR
  1610   003980  6E16               	movwf	stop@mR^0,c
  1611   003982  0E01               	movlw	high _motorR
  1612   003984  6E17               	movwf	(stop@mR+1)^0,c
  1613   003986  ECAA  F029         	call	_stop	;wreg free
  1614                           
  1615                           ;main.c: 91:             while (consecuitive<20){
  1616   00398A  EF0B  F01D         	goto	l5916
  1617   00398E                     l5900:
  1618                           
  1619                           ; BSR set to: 1
  1620                           ;main.c: 92:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1621   00398E  0E09               	movlw	9
  1622   003990  0100               	movlb	0	; () banked
  1623   003992  6FD2               	movwf	(??_main+1)& (0+255),b
  1624   003994  0E1E               	movlw	30
  1625   003996  6FD1               	movwf	??_main& (0+255),b
  1626   003998  0EE4               	movlw	228
  1627   00399A                     u5907:
  1628   00399A  2EE8               	decfsz	wreg,f,c
  1629   00399C  D7FE               	bra	u5907
  1630   00399E  2FD1               	decfsz	??_main& (0+255),f,b
  1631   0039A0  D7FC               	bra	u5907
  1632   0039A2  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1633   0039A4  D7FA               	bra	u5907
  1634   0039A6  F000               	nop	
  1635   0039A8                     
  1636                           ;main.c: 93:                 readColours(&vals);
  1637   0039A8  0E6A               	movlw	low _vals
  1638   0039AA  6E0C               	movwf	readColours@vals^0,c
  1639   0039AC  0E01               	movlw	high _vals
  1640   0039AE  6E0D               	movwf	(readColours@vals+1)^0,c
  1641   0039B0  EC63  F02B         	call	_readColours	;wreg free
  1642   0039B4                     
  1643                           ;main.c: 94:                 colour_rel(&vals, &rel);
  1644   0039B4  0E6A               	movlw	low _vals
  1645   0039B6  6E4B               	movwf	colour_rel@vals^0,c
  1646   0039B8  0E01               	movlw	high _vals
  1647   0039BA  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1648   0039BC  0E4C               	movlw	low _rel
  1649   0039BE  6E4D               	movwf	colour_rel@rel^0,c
  1650   0039C0  0E01               	movlw	high _rel
  1651   0039C2  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1652   0039C4  EC8E  F017         	call	_colour_rel	;wreg free
  1653   0039C8                     
  1654                           ;main.c: 95:                 int colour = Colour_decider(&vals, &rel);
  1655   0039C8  0E6A               	movlw	low _vals
  1656   0039CA  6E4B               	movwf	Colour_decider@vals^0,c
  1657   0039CC  0E01               	movlw	high _vals
  1658   0039CE  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1659   0039D0  0E4C               	movlw	low _rel
  1660   0039D2  6E4D               	movwf	Colour_decider@rel^0,c
  1661   0039D4  0E01               	movlw	high _rel
  1662   0039D6  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1663   0039D8  EC1F  F007         	call	_Colour_decider	;wreg free
  1664   0039DC  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1665   0039E0  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1666   0039E4                     
  1667                           ;main.c: 96:                 if (colour==prev_colour){
  1668   0039E4  0101               	movlb	1	; () banked
  1669   0039E6  5118               	movf	_prev_colour& (0+255),w,b
  1670   0039E8  19D6               	xorwf	main@colour& (0+255),w,b
  1671   0039EA  E107               	bnz	u5781
  1672   0039EC  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1673   0039EE  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1674   0039F0  A4D8               	btfss	status,2,c
  1675   0039F2  EFFD  F01C         	goto	u5781
  1676   0039F6  EFFF  F01C         	goto	u5780
  1677   0039FA                     u5781:
  1678   0039FA  EF03  F01D         	goto	l5912
  1679   0039FE                     u5780:
  1680   0039FE                     
  1681                           ; BSR set to: 1
  1682                           ;main.c: 97:                     consecuitive++;
  1683   0039FE  4B16               	infsnz	_consecuitive& (0+255),f,b
  1684   003A00  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1685                           
  1686                           ;main.c: 98:                 }
  1687   003A02  EF07  F01D         	goto	l5914
  1688   003A06                     l5912:
  1689                           
  1690                           ; BSR set to: 1
  1691                           ;main.c: 100:                     consecuitive=0;
  1692   003A06  0E00               	movlw	0
  1693   003A08  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1694   003A0A  0E00               	movlw	0
  1695   003A0C  6F16               	movwf	_consecuitive& (0+255),b
  1696   003A0E                     l5914:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 102:                 prev_colour=colour;
  1700   003A0E  C1D6  F118         	movff	main@colour,_prev_colour
  1701   003A12  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1702   003A16                     l5916:
  1703                           
  1704                           ;main.c: 91:             while (consecuitive<20){
  1705   003A16  0101               	movlb	1	; () banked
  1706   003A18  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1707   003A1A  EF18  F01D         	goto	u5791
  1708   003A1E  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1709   003A20  E109               	bnz	u5790
  1710   003A22  0E14               	movlw	20
  1711   003A24  5D16               	subwf	_consecuitive& (0+255),w,b
  1712   003A26  A0D8               	btfss	status,0,c
  1713   003A28  EF18  F01D         	goto	u5791
  1714   003A2C  EF1A  F01D         	goto	u5790
  1715   003A30                     u5791:
  1716   003A30  EFC7  F01C         	goto	l5900
  1717   003A34                     u5790:
  1718   003A34                     
  1719                           ; BSR set to: 1
  1720                           ;main.c: 107:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1721   003A34  0E72               	movlw	low main@buf
  1722   003A36  0100               	movlb	0	; () banked
  1723   003A38  6FB0               	movwf	sprintf@s& (0+255),b
  1724   003A3A  0E01               	movlw	high main@buf
  1725   003A3C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1726   003A3E  0E01               	movlw	low STR_1
  1727   003A40  6FB2               	movwf	sprintf@fmt& (0+255),b
  1728   003A42  0E0E               	movlw	high STR_1
  1729   003A44  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1730   003A46  C14C  F0B4         	movff	_rel,?_sprintf+4
  1731   003A4A  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1732   003A4E  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1733   003A52  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1734   003A56  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1735   003A5A  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1736   003A5E  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1737   003A62  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1738   003A66  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1739   003A6A  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1740   003A6E  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1741   003A72  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1742   003A76  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1743   003A7A  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1744   003A7E  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1745   003A82  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1746   003A86  EC6F  F02C         	call	_sprintf	;wreg free
  1747   003A8A                     
  1748                           ;main.c: 108:             sendStringSerial4(buf);
  1749   003A8A  0E72               	movlw	low main@buf
  1750   003A8C  6E02               	movwf	sendStringSerial4@string^0,c
  1751   003A8E  0E01               	movlw	high main@buf
  1752   003A90  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1753   003A92  ECB4  F02F         	call	_sendStringSerial4	;wreg free
  1754   003A96                     
  1755                           ;main.c: 110:             colour_move (prev_colour);
  1756   003A96  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1757   003A9A  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1758   003A9E  ECC0  F01E         	call	_colour_move	;wreg free
  1759                           
  1760                           ;main.c: 112:         }else if (lost_flag){
  1761   003AA2  EF75  F01D         	goto	l5932
  1762   003AA6                     l5924:
  1763                           
  1764                           ; BSR set to: 1
  1765   003AA6  5114               	movf	_lost_flag& (0+255),w,b
  1766   003AA8  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1767   003AAA  B4D8               	btfsc	status,2,c
  1768   003AAC  EF5A  F01D         	goto	u5801
  1769   003AB0  EF5C  F01D         	goto	u5800
  1770   003AB4                     u5801:
  1771   003AB4  EF75  F01D         	goto	l5932
  1772   003AB8                     u5800:
  1773   003AB8                     
  1774                           ; BSR set to: 1
  1775                           ;main.c: 113:             move_count++;
  1776   003AB8  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1777   003ABA  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1778   003ABC                     
  1779                           ; BSR set to: 1
  1780                           ;main.c: 114:             Time_forward[move_count]=65535;
  1781   003ABC  90D8               	bcf	status,0,c
  1782   003ABE  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1783   003AC0  6ED9               	movwf	fsr2l,c
  1784   003AC2  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1785   003AC4  6EDA               	movwf	fsr2h,c
  1786   003AC6  0E3C               	movlw	low _Time_forward
  1787   003AC8  26D9               	addwf	fsr2l,f,c
  1788   003ACA  0E02               	movlw	high _Time_forward
  1789   003ACC  22DA               	addwfc	fsr2h,f,c
  1790   003ACE  0EFF               	movlw	255
  1791   003AD0  6EDE               	movwf	postinc2,c
  1792   003AD2  0EFF               	movlw	255
  1793   003AD4  6EDD               	movwf	postdec2,c
  1794   003AD6                     
  1795                           ; BSR set to: 1
  1796                           ;main.c: 115:             go_Home(WayBack, Time_forward);
  1797   003AD6  0E1A               	movlw	low _WayBack
  1798   003AD8  6E24               	movwf	go_Home@WayBack^0,c
  1799   003ADA  0E01               	movlw	high _WayBack
  1800   003ADC  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1801   003ADE  0E3C               	movlw	low _Time_forward
  1802   003AE0  6E26               	movwf	go_Home@Time_forward^0,c
  1803   003AE2  0E02               	movlw	high _Time_forward
  1804   003AE4  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1805   003AE6  ECA8  F01A         	call	_go_Home	;wreg free
  1806   003AEA                     l5932:
  1807                           
  1808                           ;main.c: 71:     while (run_flag)
  1809   003AEA  0101               	movlb	1	; () banked
  1810   003AEC  51D8               	movf	_run_flag& (0+255),w,b
  1811   003AEE  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1812   003AF0  A4D8               	btfss	status,2,c
  1813   003AF2  EF7D  F01D         	goto	u5811
  1814   003AF6  EF7F  F01D         	goto	u5810
  1815   003AFA                     u5811:
  1816   003AFA  EF80  F01C         	goto	l5882
  1817   003AFE                     u5810:
  1818   003AFE                     
  1819                           ; BSR set to: 1
  1820   003AFE  EF1A  F000         	goto	start
  1821   003B02                     __end_of_main:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _turnCalibration *****************
  1825 ;; Defined at:
  1826 ;;		line 357 in file "dc_motor.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1829 ;;		 -> motorL(9), 
  1830 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1831 ;;		 -> motorR(9), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1847 ;;Total ram usage:        6 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 5
  1850 ;; This function calls:
  1851 ;;		_turnLeft45
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text1
  1858   0043BE                     __ptext1:
  1859                           	callstack 0
  1860   0043BE                     _turnCalibration:
  1861                           	callstack 25
  1862   0043BE                     
  1863                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  1864   0043BE  807E               	bsf	126,0,c	;volatile
  1865   0043C0                     
  1866                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1867   0043C0  0E52               	movlw	82
  1868   0043C2  6E25               	movwf	(??_turnCalibration+1)^0,c
  1869   0043C4  0E2B               	movlw	43
  1870   0043C6  6E24               	movwf	??_turnCalibration^0,c
  1871   0043C8  0E00               	movlw	0
  1872   0043CA                     u5917:
  1873   0043CA  2EE8               	decfsz	wreg,f,c
  1874   0043CC  D7FE               	bra	u5917
  1875   0043CE  2E24               	decfsz	??_turnCalibration^0,f,c
  1876   0043D0  D7FC               	bra	u5917
  1877   0043D2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1878   0043D4  D7FA               	bra	u5917
  1879   0043D6  D000               	nop2	
  1880                           
  1881                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1882   0043D8  EF99  F022         	goto	l5672
  1883   0043DC                     l539:
  1884                           
  1885                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  1886   0043DC  867C               	bsf	124,3,c	;volatile
  1887   0043DE                     
  1888                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  1889   0043DE  0E61               	movlw	low _motorL
  1890   0043E0  6E1A               	movwf	turnLeft45@mL^0,c
  1891   0043E2  0E01               	movlw	high _motorL
  1892   0043E4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1893   0043E6  0E58               	movlw	low _motorR
  1894   0043E8  6E1C               	movwf	turnLeft45@mR^0,c
  1895   0043EA  0E01               	movlw	high _motorR
  1896   0043EC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1897   0043EE  EC54  F02E         	call	_turnLeft45	;wreg free
  1898                           
  1899                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  1900   0043F2  0E61               	movlw	low _motorL
  1901   0043F4  6E1A               	movwf	turnLeft45@mL^0,c
  1902   0043F6  0E01               	movlw	high _motorL
  1903   0043F8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1904   0043FA  0E58               	movlw	low _motorR
  1905   0043FC  6E1C               	movwf	turnLeft45@mR^0,c
  1906   0043FE  0E01               	movlw	high _motorR
  1907   004400  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1908   004402  EC54  F02E         	call	_turnLeft45	;wreg free
  1909                           
  1910                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  1911   004406  0E61               	movlw	low _motorL
  1912   004408  6E1A               	movwf	turnLeft45@mL^0,c
  1913   00440A  0E01               	movlw	high _motorL
  1914   00440C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1915   00440E  0E58               	movlw	low _motorR
  1916   004410  6E1C               	movwf	turnLeft45@mR^0,c
  1917   004412  0E01               	movlw	high _motorR
  1918   004414  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1919   004416  EC54  F02E         	call	_turnLeft45	;wreg free
  1920                           
  1921                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  1922   00441A  0E61               	movlw	low _motorL
  1923   00441C  6E1A               	movwf	turnLeft45@mL^0,c
  1924   00441E  0E01               	movlw	high _motorL
  1925   004420  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1926   004422  0E58               	movlw	low _motorR
  1927   004424  6E1C               	movwf	turnLeft45@mR^0,c
  1928   004426  0E01               	movlw	high _motorR
  1929   004428  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1930   00442A  EC54  F02E         	call	_turnLeft45	;wreg free
  1931                           
  1932                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1933   00442E  EF7E  F022         	goto	l5666
  1934   004432                     l541:
  1935                           
  1936                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  1937   004432  887C               	bsf	124,4,c	;volatile
  1938   004434                     
  1939                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1940   004434  0EA3               	movlw	163
  1941   004436  6E25               	movwf	(??_turnCalibration+1)^0,c
  1942   004438  0E57               	movlw	87
  1943   00443A  6E24               	movwf	??_turnCalibration^0,c
  1944   00443C  0E02               	movlw	2
  1945   00443E                     u5927:
  1946   00443E  2EE8               	decfsz	wreg,f,c
  1947   004440  D7FE               	bra	u5927
  1948   004442  2E24               	decfsz	??_turnCalibration^0,f,c
  1949   004444  D7FC               	bra	u5927
  1950   004446  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1951   004448  D7FA               	bra	u5927
  1952   00444A  D000               	nop2	
  1953   00444C                     
  1954                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1955   00444C  B68E               	btfsc	142,3,c	;volatile
  1956   00444E  EF2B  F022         	goto	u5541
  1957   004452  EF2D  F022         	goto	u5540
  1958   004456                     u5541:
  1959   004456  EF46  F022         	goto	l542
  1960   00445A                     u5540:
  1961   00445A  B48E               	btfsc	142,2,c	;volatile
  1962   00445C  EF32  F022         	goto	u5551
  1963   004460  EF34  F022         	goto	u5550
  1964   004464                     u5551:
  1965   004464  EF46  F022         	goto	l542
  1966   004468                     u5550:
  1967   004468                     
  1968                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  1969   004468  8680               	bsf	128,3,c	;volatile
  1970                           
  1971                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  1972   00446A  8E7C               	bsf	124,7,c	;volatile
  1973   00446C                     
  1974                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1975   00446C  0E52               	movlw	82
  1976   00446E  6E25               	movwf	(??_turnCalibration+1)^0,c
  1977   004470  0E2B               	movlw	43
  1978   004472  6E24               	movwf	??_turnCalibration^0,c
  1979   004474  0E00               	movlw	0
  1980   004476                     u5937:
  1981   004476  2EE8               	decfsz	wreg,f,c
  1982   004478  D7FE               	bra	u5937
  1983   00447A  2E24               	decfsz	??_turnCalibration^0,f,c
  1984   00447C  D7FC               	bra	u5937
  1985   00447E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1986   004480  D7FA               	bra	u5937
  1987   004482  D000               	nop2	
  1988   004484                     
  1989                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  1990   004484  9680               	bcf	128,3,c	;volatile
  1991   004486                     
  1992                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  1993   004486  9E7C               	bcf	124,7,c	;volatile
  1994                           
  1995                           ;dc_motor.c: 380:             }
  1996   004488  EF7E  F022         	goto	l5666
  1997   00448C                     l542:
  1998   00448C  B68E               	btfsc	142,3,c	;volatile
  1999   00448E  EF4B  F022         	goto	u5561
  2000   004492  EF4D  F022         	goto	u5560
  2001   004496                     u5561:
  2002   004496  EF62  F022         	goto	l544
  2003   00449A                     u5560:
  2004   00449A                     
  2005                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2006   00449A  0E0A               	movlw	10
  2007   00449C  0100               	movlb	0	; () banked
  2008   00449E  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2009   0044A0  0E00               	movlw	0
  2010   0044A2  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2011   0044A4                     
  2012                           ; BSR set to: 0
  2013                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2014   0044A4  8680               	bsf	128,3,c	;volatile
  2015   0044A6                     
  2016                           ; BSR set to: 0
  2017                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2018   0044A6  0E52               	movlw	82
  2019   0044A8  6E25               	movwf	(??_turnCalibration+1)^0,c
  2020   0044AA  0E2B               	movlw	43
  2021   0044AC  6E24               	movwf	??_turnCalibration^0,c
  2022   0044AE  0E00               	movlw	0
  2023   0044B0                     u5947:
  2024   0044B0  2EE8               	decfsz	wreg,f,c
  2025   0044B2  D7FE               	bra	u5947
  2026   0044B4  2E24               	decfsz	??_turnCalibration^0,f,c
  2027   0044B6  D7FC               	bra	u5947
  2028   0044B8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2029   0044BA  D7FA               	bra	u5947
  2030   0044BC  D000               	nop2	
  2031   0044BE                     
  2032                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2033   0044BE  9680               	bcf	128,3,c	;volatile
  2034                           
  2035                           ;dc_motor.c: 387:             }
  2036   0044C0  EF7E  F022         	goto	l5666
  2037   0044C4                     l544:
  2038   0044C4  B48E               	btfsc	142,2,c	;volatile
  2039   0044C6  EF67  F022         	goto	u5571
  2040   0044CA  EF69  F022         	goto	u5570
  2041   0044CE                     u5571:
  2042   0044CE  EF7E  F022         	goto	l543
  2043   0044D2                     u5570:
  2044   0044D2                     
  2045                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2046   0044D2  0100               	movlb	0	; () banked
  2047   0044D4  0EF6               	movlw	246
  2048   0044D6  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2049   0044D8  0EFF               	movlw	255
  2050   0044DA  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2051   0044DC                     
  2052                           ; BSR set to: 0
  2053                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2054   0044DC  8E7C               	bsf	124,7,c	;volatile
  2055   0044DE                     
  2056                           ; BSR set to: 0
  2057                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2058   0044DE  0E52               	movlw	82
  2059   0044E0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2060   0044E2  0E2B               	movlw	43
  2061   0044E4  6E24               	movwf	??_turnCalibration^0,c
  2062   0044E6  0E00               	movlw	0
  2063   0044E8                     u5957:
  2064   0044E8  2EE8               	decfsz	wreg,f,c
  2065   0044EA  D7FE               	bra	u5957
  2066   0044EC  2E24               	decfsz	??_turnCalibration^0,f,c
  2067   0044EE  D7FC               	bra	u5957
  2068   0044F0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2069   0044F2  D7FA               	bra	u5957
  2070   0044F4  D000               	nop2	
  2071   0044F6                     
  2072                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2073   0044F6  9E7C               	bcf	124,7,c	;volatile
  2074   0044F8  EF7E  F022         	goto	l5666
  2075   0044FC                     l543:
  2076   0044FC                     l5666:
  2077                           
  2078                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2079   0044FC  A48E               	btfss	142,2,c	;volatile
  2080   0044FE  EF83  F022         	goto	u5581
  2081   004502  EF85  F022         	goto	u5580
  2082   004506                     u5581:
  2083   004506  EF8C  F022         	goto	l549
  2084   00450A                     u5580:
  2085   00450A  B68E               	btfsc	142,3,c	;volatile
  2086   00450C  EF8A  F022         	goto	u5591
  2087   004510  EF8C  F022         	goto	u5590
  2088   004514                     u5591:
  2089   004514  EF19  F022         	goto	l541
  2090   004518                     u5590:
  2091   004518                     l549:
  2092                           
  2093                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2094   004518  987C               	bcf	124,4,c	;volatile
  2095   00451A                     
  2096                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2097   00451A  0EA3               	movlw	163
  2098   00451C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2099   00451E  0E57               	movlw	87
  2100   004520  6E24               	movwf	??_turnCalibration^0,c
  2101   004522  0E02               	movlw	2
  2102   004524                     u5967:
  2103   004524  2EE8               	decfsz	wreg,f,c
  2104   004526  D7FE               	bra	u5967
  2105   004528  2E24               	decfsz	??_turnCalibration^0,f,c
  2106   00452A  D7FC               	bra	u5967
  2107   00452C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2108   00452E  D7FA               	bra	u5967
  2109   004530  D000               	nop2	
  2110   004532                     l5672:
  2111                           
  2112                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2113   004532  B48E               	btfsc	142,2,c	;volatile
  2114   004534  EF9E  F022         	goto	u5601
  2115   004538  EFA0  F022         	goto	u5600
  2116   00453C                     u5601:
  2117   00453C  EFEE  F021         	goto	l539
  2118   004540                     u5600:
  2119   004540  B68E               	btfsc	142,3,c	;volatile
  2120   004542  EFA5  F022         	goto	u5611
  2121   004546  EFA7  F022         	goto	u5610
  2122   00454A                     u5611:
  2123   00454A  EFEE  F021         	goto	l539
  2124   00454E                     u5610:
  2125   00454E                     
  2126                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2127   00454E  967C               	bcf	124,3,c	;volatile
  2128   004550                     
  2129                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2130   004550  0EA3               	movlw	163
  2131   004552  6E25               	movwf	(??_turnCalibration+1)^0,c
  2132   004554  0E57               	movlw	87
  2133   004556  6E24               	movwf	??_turnCalibration^0,c
  2134   004558  0E02               	movlw	2
  2135   00455A                     u5977:
  2136   00455A  2EE8               	decfsz	wreg,f,c
  2137   00455C  D7FE               	bra	u5977
  2138   00455E  2E24               	decfsz	??_turnCalibration^0,f,c
  2139   004560  D7FC               	bra	u5977
  2140   004562  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2141   004564  D7FA               	bra	u5977
  2142   004566  D000               	nop2	
  2143   004568  0012               	return		;funcret
  2144   00456A                     __end_of_turnCalibration:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _sprintf *****************
  2148 ;; Defined at:
  2149 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2152 ;;		 -> main@buf(100), 
  2153 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2154 ;;		 -> STR_1(51), 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2157 ;;  ap              2  100[BANK0 ] PTR void [1]
  2158 ;;		 -> ?_sprintf(2), 
  2159 ;;  ret             2    0        int 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2   80[BANK0 ] int 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2169 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;Total ram usage:       33 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 8
  2176 ;; This function calls:
  2177 ;;		_vfprintf
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text2
  2184   0058DE                     __ptext2:
  2185                           	callstack 0
  2186   0058DE                     _sprintf:
  2187                           	callstack 22
  2188   0058DE  0EB4               	movlw	low (?_sprintf+4)
  2189   0058E0  0100               	movlb	0	; () banked
  2190   0058E2  6FC4               	movwf	sprintf@ap& (0+255),b
  2191   0058E4  0E00               	movlw	high (?_sprintf+4)
  2192   0058E6  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2193   0058E8  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2194   0058EC  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2195   0058F0                     
  2196                           ; BSR set to: 0
  2197   0058F0  0E00               	movlw	0
  2198   0058F2  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2199   0058F4  0E00               	movlw	0
  2200   0058F6  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2201   0058F8                     
  2202                           ; BSR set to: 0
  2203   0058F8  0E00               	movlw	0
  2204   0058FA  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2205   0058FC  0E00               	movlw	0
  2206   0058FE  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2207   005900                     
  2208                           ; BSR set to: 0
  2209   005900  0EC6               	movlw	low sprintf@f
  2210   005902  6FA8               	movwf	vfprintf@fp& (0+255),b
  2211   005904  0E00               	movlw	high sprintf@f
  2212   005906  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2213   005908  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2214   00590C  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2215   005910  0EC4               	movlw	low sprintf@ap
  2216   005912  6FAC               	movwf	vfprintf@ap& (0+255),b
  2217   005914  0E00               	movlw	high sprintf@ap
  2218   005916  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2219   005918  EC44  F02C         	call	_vfprintf	;wreg free
  2220   00591C  0100               	movlb	0	; () banked
  2221   00591E  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2222   005920  25B0               	addwf	sprintf@s& (0+255),w,b
  2223   005922  6ED9               	movwf	fsr2l,c
  2224   005924  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2225   005926  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2226   005928  6EDA               	movwf	fsr2h,c
  2227   00592A  0E00               	movlw	0
  2228   00592C  6EDF               	movwf	indf2,c
  2229   00592E                     
  2230                           ; BSR set to: 0
  2231   00592E  0012               	return		;funcret
  2232   005930                     __end_of_sprintf:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _vfprintf *****************
  2236 ;; Defined at:
  2237 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2240 ;;		 -> sprintf@f(11), 
  2241 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2242 ;;		 -> STR_1(51), 
  2243 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2244 ;;		 -> sprintf@ap(2), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2247 ;;		 -> STR_1(51), 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   72[BANK0 ] int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2257 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;Total ram usage:        8 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 7
  2264 ;; This function calls:
  2265 ;;		_vfpfcnvrt
  2266 ;; This function is called by:
  2267 ;;		_sprintf
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text3
  2272   005888                     __ptext3:
  2273                           	callstack 0
  2274   005888                     _vfprintf:
  2275                           	callstack 22
  2276   005888                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2278   005888  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2279   00588C  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2282   005890  EF59  F02C         	goto	l5346
  2283   005894                     l5344:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2286   005894  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2287   005898  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2288   00589C  0EAE               	movlw	low vfprintf@cfmt
  2289   00589E  0100               	movlb	0	; () banked
  2290   0058A0  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2291   0058A2  0E00               	movlw	high vfprintf@cfmt
  2292   0058A4  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2293   0058A6  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2294   0058AA  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2295   0058AE  EC25  F019         	call	_vfpfcnvrt	;wreg free
  2296   0058B2                     l5346:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2299   0058B2  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2300   0058B6  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2301   0058BA                     	if	0	;tblptru may be non-zero
  2302   0058BA                     	endif
  2303   0058BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2304   0058BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2305   0058BC  6EF8               	movwf	tblptru,c
  2306   0058BE                     	endif
  2307   0058BE  0008               	tblrd		*
  2308   0058C0  50F5               	movf	tablat,w,c
  2309   0058C2  0900               	iorlw	0
  2310   0058C4  A4D8               	btfss	status,2,c
  2311   0058C6  EF67  F02C         	goto	u5211
  2312   0058CA  EF69  F02C         	goto	u5210
  2313   0058CE                     u5211:
  2314   0058CE  EF4A  F02C         	goto	l5344
  2315   0058D2                     u5210:
  2316   0058D2                     
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2318   0058D2  0E00               	movlw	0
  2319   0058D4  0100               	movlb	0	; () banked
  2320   0058D6  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2321   0058D8  0E00               	movlw	0
  2322   0058DA  6FA8               	movwf	?_vfprintf& (0+255),b
  2323   0058DC                     
  2324                           ; BSR set to: 0
  2325   0058DC  0012               	return		;funcret
  2326   0058DE                     __end_of_vfprintf:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _vfpfcnvrt *****************
  2330 ;; Defined at:
  2331 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2334 ;;		 -> sprintf@f(11), 
  2335 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2336 ;;		 -> vfprintf@cfmt(2), 
  2337 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2338 ;;		 -> sprintf@ap(2), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  convarg         8   61[BANK0 ] struct .
  2341 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2342 ;;		 -> STR_1(51), 
  2343 ;;  i               2    0        int 
  2344 ;;  done            2    0        int 
  2345 ;;  c               1   69[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;Total ram usage:       19 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 6
  2362 ;; This function calls:
  2363 ;;		_dtoa
  2364 ;;		_efgtoa
  2365 ;;		_fputc
  2366 ;; This function is called by:
  2367 ;;		_vfprintf
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text4
  2372   00324A                     __ptext4:
  2373                           	callstack 0
  2374   00324A                     _vfpfcnvrt:
  2375                           	callstack 22
  2376   00324A                     
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2378   00324A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379   00324E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380   003252  CFDE FFF6          	movff	postinc2,tblptrl
  2381   003256  CFDD FFF7          	movff	postdec2,tblptrh
  2382   00325A                     	if	0	;tblptru may be non-zero
  2383   00325A                     	endif
  2384   00325A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2385   00325A  0E00               	movlw	low (__mediumconst shr (0+16))
  2386   00325C  6EF8               	movwf	tblptru,c
  2387   00325E                     	endif
  2388   00325E  0008               	tblrd		*
  2389   003260  50F5               	movf	tablat,w,c
  2390   003262  0A25               	xorlw	37
  2391   003264  A4D8               	btfss	status,2,c
  2392   003266  EF37  F019         	goto	u4981
  2393   00326A  EF39  F019         	goto	u4980
  2394   00326E                     u4981:
  2395   00326E  EF91  F01A         	goto	l5174
  2396   003272                     u4980:
  2397   003272                     
  2398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2399   003272  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2400   003276  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2401   00327A  2ADE               	incf	postinc2,f,c
  2402   00327C  0E00               	movlw	0
  2403   00327E  22DD               	addwfc	postdec2,f,c
  2404   003280                     
  2405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2406   003280  0E00               	movlw	0
  2407   003282  0100               	movlb	0	; () banked
  2408   003284  6FE8               	movwf	(_width+1)& (0+255),b
  2409   003286  0E00               	movlw	0
  2410   003288  6FE7               	movwf	_width& (0+255),b
  2411   00328A  C0E7  F0ED         	movff	_width,_flags
  2412   00328E                     
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2415   00328E  69E9               	setf	_prec& (0+255),b
  2416   003290  69EA               	setf	(_prec+1)& (0+255),b
  2417   003292                     
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2420   003292  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421   003296  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422   00329A  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2423   00329E  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2424   0032A2                     
  2425                           ; BSR set to: 0
  2426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2427   0032A2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2428   0032A6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2429   0032AA                     	if	0	;tblptru may be non-zero
  2430   0032AA                     	endif
  2431   0032AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2432   0032AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2433   0032AC  6EF8               	movwf	tblptru,c
  2434   0032AE                     	endif
  2435   0032AE  0008               	tblrd		*
  2436   0032B0  50F5               	movf	tablat,w,c
  2437   0032B2  0A64               	xorlw	100
  2438   0032B4  B4D8               	btfsc	status,2,c
  2439   0032B6  EF5F  F019         	goto	u4991
  2440   0032BA  EF61  F019         	goto	u4990
  2441   0032BE                     u4991:
  2442   0032BE  EF71  F019         	goto	l5130
  2443   0032C2                     u4990:
  2444   0032C2                     
  2445                           ; BSR set to: 0
  2446   0032C2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2447   0032C6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2448   0032CA                     	if	0	;tblptru may be non-zero
  2449   0032CA                     	endif
  2450   0032CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2451   0032CA  0E00               	movlw	low (__mediumconst shr (0+16))
  2452   0032CC  6EF8               	movwf	tblptru,c
  2453   0032CE                     	endif
  2454   0032CE  0008               	tblrd		*
  2455   0032D0  50F5               	movf	tablat,w,c
  2456   0032D2  0A69               	xorlw	105
  2457   0032D4  A4D8               	btfss	status,2,c
  2458   0032D6  EF6F  F019         	goto	u5001
  2459   0032DA  EF71  F019         	goto	u5000
  2460   0032DE                     u5001:
  2461   0032DE  EFB4  F019         	goto	l5136
  2462   0032E2                     u5000:
  2463   0032E2                     l5130:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2467   0032E2  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2468   0032E6  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2469   0032EA  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2470   0032EE  0E02               	movlw	2
  2471   0032F0  26DE               	addwf	postinc2,f,c
  2472   0032F2  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2473   0032F6  0E00               	movlw	0
  2474   0032F8  22DD               	addwfc	postdec2,f,c
  2475   0032FA  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2476   0032FE  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2477   003302  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2478   003306  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2479   00330A  0E00               	movlw	0
  2480   00330C  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2481   00330E  0EFF               	movlw	-1
  2482   003310  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2483   003312  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2484   003314  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2485   003316  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2486   003318  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2487   00331A  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2490   00331C  0E01               	movlw	1
  2491   00331E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2492   003320  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2493   003322  0E00               	movlw	0
  2494   003324  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2495   003326  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2496   003328  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497   00332C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498   003330  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2499   003334  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2500   003338                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2503   003338  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2504   00333C  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2505   003340  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2506   003344  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2507   003348  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2508   00334C  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2509   003350  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2510   003354  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2511   003358  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2512   00335C  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2513   003360  EC81  F01D         	call	_dtoa	;wreg free
  2514   003364  EFA7  F01A         	goto	l1547
  2515   003368                     l5136:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2519   003368  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2520   00336C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2521   003370  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2522   003374  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2523   003378                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2526   003378  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2527   00337C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2528   003380                     	if	0	;tblptru may be non-zero
  2529   003380                     	endif
  2530   003380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2531   003380  0E00               	movlw	low (__mediumconst shr (0+16))
  2532   003382  6EF8               	movwf	tblptru,c
  2533   003384                     	endif
  2534   003384  0008               	tblrd		*
  2535   003386  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2538   00338A  EFD3  F019         	goto	l5148
  2539   00338E                     l5140:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2543   00338E  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2544   003390  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2547   003392  EFEC  F019         	goto	l5150
  2548   003396                     l5142:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2552   003396  0E6C               	movlw	108
  2553   003398  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2556   00339A  EFEC  F019         	goto	l5150
  2557   00339E                     l5144:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2561   00339E  0E00               	movlw	0
  2562   0033A0  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2565   0033A2  EFEC  F019         	goto	l5150
  2566   0033A6                     l5148:
  2567                           
  2568                           ; BSR set to: 0
  2569   0033A6  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2570   0033A8  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2571   0033AA  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2572                           
  2573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2574                           ; Switch size 1, requested type "simple"
  2575                           ; Number of cases is 1, Range of values is 0 to 0
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte            4     3 (average)
  2579                           ;	Chosen strategy is simple_byte
  2580   0033AC  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2581   0033AE  0A00               	xorlw	0	; case 0
  2582   0033B0  B4D8               	btfsc	status,2,c
  2583   0033B2  EFDD  F019         	goto	l6074
  2584   0033B6  EFCF  F019         	goto	l5144
  2585   0033BA                     l6074:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ; Switch size 1, requested type "simple"
  2589                           ; Number of cases is 3, Range of values is 76 to 108
  2590                           ; switch strategies available:
  2591                           ; Name         Instructions Cycles
  2592                           ; simple_byte           10     6 (average)
  2593                           ;	Chosen strategy is simple_byte
  2594   0033BA  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2595   0033BC  0A4C               	xorlw	76	; case 76
  2596   0033BE  B4D8               	btfsc	status,2,c
  2597   0033C0  EFC7  F019         	goto	l5140
  2598   0033C4  0A2A               	xorlw	42	; case 102
  2599   0033C6  B4D8               	btfsc	status,2,c
  2600   0033C8  EFCB  F019         	goto	l5142
  2601   0033CC  0A0A               	xorlw	10	; case 108
  2602   0033CE  B4D8               	btfsc	status,2,c
  2603   0033D0  EFC7  F019         	goto	l5140
  2604   0033D4  EFCF  F019         	goto	l5144
  2605   0033D8                     l5150:
  2606                           
  2607                           ; BSR set to: 0
  2608   0033D8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2609   0033DC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2610   0033E0                     	if	0	;tblptru may be non-zero
  2611   0033E0                     	endif
  2612   0033E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2613   0033E0  0E00               	movlw	low (__mediumconst shr (0+16))
  2614   0033E2  6EF8               	movwf	tblptru,c
  2615   0033E4                     	endif
  2616   0033E4  0008               	tblrd		*
  2617   0033E6  50F5               	movf	tablat,w,c
  2618   0033E8  0A66               	xorlw	102
  2619   0033EA  A4D8               	btfss	status,2,c
  2620   0033EC  EFFA  F019         	goto	u5011
  2621   0033F0  EFFC  F019         	goto	u5010
  2622   0033F4                     u5011:
  2623   0033F4  EF88  F01A         	goto	l5170
  2624   0033F8                     u5010:
  2625   0033F8  EF32  F01A         	goto	l5158
  2626   0033FC                     l5152:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2630   0033FC  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2631   003400  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2632   003404  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2633   003408  0E04               	movlw	4
  2634   00340A  26DE               	addwf	postinc2,f,c
  2635   00340C  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2636   003410  0E00               	movlw	0
  2637   003412  22DD               	addwfc	postdec2,f,c
  2638   003414  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2639   003418  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2640   00341C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2641   003420  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2642   003424  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2643   003428  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2646   00342C  EF47  F01A         	goto	l5160
  2647   003430                     l5154:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2651   003430  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2652   003434  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2653   003438  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2654   00343C  0E04               	movlw	4
  2655   00343E  26DE               	addwf	postinc2,f,c
  2656   003440  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2657   003444  0E00               	movlw	0
  2658   003446  22DD               	addwfc	postdec2,f,c
  2659   003448  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2660   00344C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2661   003450  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2662   003454  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2663   003458  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2664   00345C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2667   003460  EF47  F01A         	goto	l5160
  2668   003464                     l5158:
  2669                           
  2670                           ; BSR set to: 0
  2671   003464  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2672   003466  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2673   003468  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2674                           
  2675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 1, Range of values is 0 to 0
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte            4     3 (average)
  2681                           ;	Chosen strategy is simple_byte
  2682   00346A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2683   00346C  0A00               	xorlw	0	; case 0
  2684   00346E  B4D8               	btfsc	status,2,c
  2685   003470  EF3C  F01A         	goto	l6076
  2686   003474  EF47  F01A         	goto	l5160
  2687   003478                     l6076:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ; Switch size 1, requested type "simple"
  2691                           ; Number of cases is 2, Range of values is 76 to 108
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte            7     4 (average)
  2695                           ;	Chosen strategy is simple_byte
  2696   003478  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2697   00347A  0A4C               	xorlw	76	; case 76
  2698   00347C  B4D8               	btfsc	status,2,c
  2699   00347E  EF18  F01A         	goto	l5154
  2700   003482  0A20               	xorlw	32	; case 108
  2701   003484  B4D8               	btfsc	status,2,c
  2702   003486  EFFE  F019         	goto	l5152
  2703   00348A  EF47  F01A         	goto	l5160
  2704   00348E                     l5160:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2708   00348E  0E01               	movlw	1
  2709   003490  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2710   003492  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2711   003494  0E00               	movlw	0
  2712   003496  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2713   003498  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2714   00349A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715   00349E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716   0034A2  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2717   0034A6  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2720   0034AA  EF70  F01A         	goto	l5168
  2721   0034AE                     l5162:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2725   0034AE  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2726   0034B2  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2727   0034B6  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2728   0034BA  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2729   0034BE  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2730   0034C2  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2731   0034C6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2732   0034CA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2733   0034CE                     	if	0	;tblptru may be non-zero
  2734   0034CE                     	endif
  2735   0034CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2736   0034CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2737   0034D0  6EF8               	movwf	tblptru,c
  2738   0034D2                     	endif
  2739   0034D2  0008               	tblrd		*
  2740   0034D4  CFF5 F066          	movff	tablat,efgtoa@c
  2741   0034D8  EC4F  F00C         	call	_efgtoa	;wreg free
  2742   0034DC  EFA7  F01A         	goto	l1547
  2743   0034E0                     l5168:
  2744                           
  2745                           ; BSR set to: 0
  2746   0034E0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2747   0034E4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2748   0034E8                     	if	0	;tblptru may be non-zero
  2749   0034E8                     	endif
  2750   0034E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2751   0034E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2752   0034EA  6EF8               	movwf	tblptru,c
  2753   0034EC                     	endif
  2754   0034EC  0008               	tblrd		*
  2755   0034EE  50F5               	movf	tablat,w,c
  2756   0034F0  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2757   0034F2  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2758                           
  2759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2760                           ; Switch size 1, requested type "simple"
  2761                           ; Number of cases is 1, Range of values is 0 to 0
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte            4     3 (average)
  2765                           ;	Chosen strategy is simple_byte
  2766   0034F4  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2767   0034F6  0A00               	xorlw	0	; case 0
  2768   0034F8  B4D8               	btfsc	status,2,c
  2769   0034FA  EF81  F01A         	goto	l6078
  2770   0034FE  EF88  F01A         	goto	l5170
  2771   003502                     l6078:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ; Switch size 1, requested type "simple"
  2775                           ; Number of cases is 1, Range of values is 102 to 102
  2776                           ; switch strategies available:
  2777                           ; Name         Instructions Cycles
  2778                           ; simple_byte            4     3 (average)
  2779                           ;	Chosen strategy is simple_byte
  2780   003502  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2781   003504  0A66               	xorlw	102	; case 102
  2782   003506  B4D8               	btfsc	status,2,c
  2783   003508  EF57  F01A         	goto	l5162
  2784   00350C  EF88  F01A         	goto	l5170
  2785   003510                     l5170:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2788   003510  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2789   003514  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2790   003518  2ADE               	incf	postinc2,f,c
  2791   00351A  0E00               	movlw	0
  2792   00351C  22DD               	addwfc	postdec2,f,c
  2793   00351E  EFA7  F01A         	goto	l1547
  2794   003522                     l5174:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2797   003522  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798   003526  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799   00352A  CFDE FFF6          	movff	postinc2,tblptrl
  2800   00352E  CFDD FFF7          	movff	postdec2,tblptrh
  2801   003532                     	if	0	;tblptru may be non-zero
  2802   003532                     	endif
  2803   003532                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2804   003532  0E00               	movlw	low (__mediumconst shr (0+16))
  2805   003534  6EF8               	movwf	tblptru,c
  2806   003536                     	endif
  2807   003536  0008               	tblrd		*
  2808   003538  50F5               	movf	tablat,w,c
  2809   00353A  6E01               	movwf	fputc@c^0,c
  2810   00353C  6A02               	clrf	(fputc@c+1)^0,c
  2811   00353E  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2812   003542  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2813   003546  EC65  F026         	call	_fputc	;wreg free
  2814   00354A  EF88  F01A         	goto	l5170
  2815   00354E                     l1547:
  2816   00354E  0012               	return		;funcret
  2817   003550                     __end_of_vfpfcnvrt:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _efgtoa *****************
  2821 ;; Defined at:
  2822 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2825 ;;		 -> sprintf@f(11), 
  2826 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2827 ;;  c               1    6[BANK0 ] unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  u               4   49[BANK0 ] struct flui
  2830 ;;  g               4   45[BANK0 ] struct flui
  2831 ;;  l               4   38[BANK0 ] struct flui
  2832 ;;  h               4   34[BANK0 ] struct flui
  2833 ;;  ou              4   28[BANK0 ] struct flui
  2834 ;;  n               2   43[BANK0 ] int 
  2835 ;;  i               2   32[BANK0 ] int 
  2836 ;;  w               2   26[BANK0 ] int 
  2837 ;;  e               2   24[BANK0 ] int 
  2838 ;;  m               2   22[BANK0 ] int 
  2839 ;;  d               2   20[BANK0 ] int 
  2840 ;;  t               2   13[BANK0 ] int 
  2841 ;;  p               2   11[BANK0 ] int 
  2842 ;;  ne              2    9[BANK0 ] int 
  2843 ;;  sign            1   42[BANK0 ] unsigned char 
  2844 ;;  nmode           1   19[BANK0 ] unsigned char 
  2845 ;;  mode            1   18[BANK0 ] unsigned char 
  2846 ;;  pp              1   17[BANK0 ] unsigned char 
  2847 ;;  esign           1    0        unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2857 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;Total ram usage:       53 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 5
  2864 ;; This function calls:
  2865 ;;		___fladd
  2866 ;;		___fldiv
  2867 ;;		___fleq
  2868 ;;		___flge
  2869 ;;		___flmul
  2870 ;;		___flneg
  2871 ;;		___flsub
  2872 ;;		___fltol
  2873 ;;		___fpclassifyf
  2874 ;;		_floorf
  2875 ;;		_labs
  2876 ;;		_memcpy
  2877 ;;		_pad
  2878 ;;		_strcpy
  2879 ;; This function is called by:
  2880 ;;		_vfpfcnvrt
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text5
  2885   00189E                     __ptext5:
  2886                           	callstack 0
  2887   00189E                     _efgtoa:
  2888                           	callstack 22
  2889   00189E                     
  2890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2891   00189E  0E00               	movlw	0
  2892   0018A0  0100               	movlb	0	; () banked
  2893   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  2894   0018A4                     
  2895                           ; BSR set to: 0
  2896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2897   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2898   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2899   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2900   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2901   0018B4                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2904   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2905   0018B6  EF61  F00C         	goto	u4620
  2906   0018BA  EF5F  F00C         	goto	u4621
  2907   0018BE                     u4621:
  2908   0018BE  EF75  F00C         	goto	l4838
  2909   0018C2                     u4620:
  2910   0018C2                     
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2913   0018C2  0E01               	movlw	1
  2914   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  2915   0018C6                     
  2916                           ; BSR set to: 0
  2917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2918   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2919   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2920   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2921   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2922   0018D6  EC61  F02F         	call	___flneg	;wreg free
  2923   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  2924   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2925   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2926   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2927   0018EA                     l4838:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2930   0018EA  0E00               	movlw	0
  2931   0018EC  0100               	movlb	0	; () banked
  2932   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2933   0018F0  0E00               	movlw	0
  2934   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  2935   0018F4                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2938   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  2939   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2940   0018FC                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2943   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  2944   0018FE  B4D8               	btfsc	status,2,c
  2945   001900  EF84  F00C         	goto	u4631
  2946   001904  EF86  F00C         	goto	u4630
  2947   001908                     u4631:
  2948   001908  EF9A  F00C         	goto	l4852
  2949   00190C                     u4630:
  2950   00190C                     
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2953   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  2954   00190E  A4D8               	btfss	status,2,c
  2955   001910  EF8C  F00C         	goto	u4641
  2956   001914  EF8E  F00C         	goto	u4640
  2957   001918                     u4641:
  2958   001918  EF94  F00C         	goto	l4848
  2959   00191C                     u4640:
  2960   00191C                     
  2961                           ; BSR set to: 0
  2962   00191C  0E00               	movlw	0
  2963   00191E  6F70               	movwf	(_efgtoa$2895+1)& (0+255),b
  2964   001920  0E2B               	movlw	43
  2965   001922  6F6F               	movwf	_efgtoa$2895& (0+255),b
  2966   001924  EF98  F00C         	goto	l4850
  2967   001928                     l4848:
  2968                           
  2969                           ; BSR set to: 0
  2970   001928  0E00               	movlw	0
  2971   00192A  6F70               	movwf	(_efgtoa$2895+1)& (0+255),b
  2972   00192C  0E2D               	movlw	45
  2973   00192E  6F6F               	movwf	_efgtoa$2895& (0+255),b
  2974   001930                     l4850:
  2975                           
  2976                           ; BSR set to: 0
  2977   001930  C06F  F08A         	movff	_efgtoa$2895,efgtoa@sign
  2978   001934                     l4852:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2982   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2983   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2984   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2985   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2986   001944  ECE6  F025         	call	___fpclassifyf	;wreg free
  2987   001948  0401               	decf	?___fpclassifyf^0,w,c
  2988   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2989   00194C  A4D8               	btfss	status,2,c
  2990   00194E  EFAB  F00C         	goto	u4651
  2991   001952  EFAD  F00C         	goto	u4650
  2992   001956                     u4651:
  2993   001956  EFE0  F00C         	goto	l4870
  2994   00195A                     u4650:
  2995   00195A                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2997   00195A  0100               	movlb	0	; () banked
  2998   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  2999   00195E  B4D8               	btfsc	status,2,c
  3000   001960  EFB4  F00C         	goto	u4661
  3001   001964  EFB6  F00C         	goto	u4660
  3002   001968                     u4661:
  3003   001968  EFBF  F00C         	goto	l4862
  3004   00196C                     u4660:
  3005   00196C                     
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3008   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3009   001970                     
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3012   001970  077A               	decf	efgtoa@w& (0+255),f,b
  3013   001972  A0D8               	btfss	status,0,c
  3014   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3015   001976                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3018   001976  0E00               	movlw	0
  3019   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3020   00197A  0E01               	movlw	1
  3021   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  3022   00197E                     l4862:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3026   00197E  0EA0               	movlw	low _dbuf
  3027   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  3028   001982  6E01               	movwf	strcpy@dest^0,c
  3029   001984  0E02               	movlw	high _dbuf
  3030   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3031   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  3032   00198A  0E34               	movlw	low STR_2
  3033   00198C  6E03               	movwf	strcpy@src^0,c
  3034   00198E  0E0E               	movlw	high STR_2
  3035   001990  6E04               	movwf	(strcpy@src+1)^0,c
  3036   001992  EC9E  F02E         	call	_strcpy	;wreg free
  3037   001996                     l4864:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3040   001996  0100               	movlb	0	; () banked
  3041   001998  0EFD               	movlw	253
  3042   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  3043   00199C  0EFF               	movlw	255
  3044   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3045   0019A0                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3048   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  3049   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3050   0019A8  0EA0               	movlw	low _dbuf
  3051   0019AA  6E13               	movwf	pad@buf^0,c
  3052   0019AC  0E02               	movlw	high _dbuf
  3053   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  3054   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  3055   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3056   0019B8  ECE9  F029         	call	_pad	;wreg free
  3057   0019BC  EF4B  F011         	goto	l1499
  3058   0019C0                     l4870:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3061   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3062   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3063   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3064   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3065   0019D0  ECE6  F025         	call	___fpclassifyf	;wreg free
  3066   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  3067   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3068   0019D8  A4D8               	btfss	status,2,c
  3069   0019DA  EFF1  F00C         	goto	u4671
  3070   0019DE  EFF3  F00C         	goto	u4670
  3071   0019E2                     u4671:
  3072   0019E2  EF13  F00D         	goto	l4888
  3073   0019E6                     u4670:
  3074   0019E6                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3076   0019E6  0100               	movlb	0	; () banked
  3077   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  3078   0019EA  B4D8               	btfsc	status,2,c
  3079   0019EC  EFFA  F00C         	goto	u4681
  3080   0019F0  EFFC  F00C         	goto	u4680
  3081   0019F4                     u4681:
  3082   0019F4  EF05  F00D         	goto	l4880
  3083   0019F8                     u4680:
  3084   0019F8                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3087   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3088   0019FC                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3091   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3092   0019FE  A0D8               	btfss	status,0,c
  3093   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3094   001A02                     
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3097   001A02  0E00               	movlw	0
  3098   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3099   001A06  0E01               	movlw	1
  3100   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3101   001A0A                     l4880:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3105   001A0A  0EA0               	movlw	low _dbuf
  3106   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3107   001A0E  6E01               	movwf	strcpy@dest^0,c
  3108   001A10  0E02               	movlw	high _dbuf
  3109   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3110   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3111   001A16  0E38               	movlw	low STR_5
  3112   001A18  6E03               	movwf	strcpy@src^0,c
  3113   001A1A  0E0E               	movlw	high STR_5
  3114   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3115   001A1E  EC9E  F02E         	call	_strcpy	;wreg free
  3116   001A22  EFCB  F00C         	goto	l4864
  3117   001A26                     l4888:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3120   001A26  0E00               	movlw	0
  3121   001A28  0100               	movlb	0	; () banked
  3122   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3123   001A2C  0E00               	movlw	0
  3124   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3125   001A30  0E80               	movlw	128
  3126   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3127   001A34  0E3F               	movlw	63
  3128   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3131   001A38  0E00               	movlw	0
  3132   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3133   001A3C  0E00               	movlw	0
  3134   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3135   001A40                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3138   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3139   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3140   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3141   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3142   001A50  0E00               	movlw	0
  3143   001A52  6E36               	movwf	___fleq@ff2^0,c
  3144   001A54  0E00               	movlw	0
  3145   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3146   001A58  0E00               	movlw	0
  3147   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3148   001A5C  0E00               	movlw	0
  3149   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3150   001A60  ECD5  F027         	call	___fleq	;wreg free
  3151   001A64  B0D8               	btfsc	status,0,c
  3152   001A66  EF37  F00D         	goto	u4691
  3153   001A6A  EF39  F00D         	goto	u4690
  3154   001A6E                     u4691:
  3155   001A6E  EF18  F00E         	goto	l1502
  3156   001A72                     u4690:
  3157   001A72  EF46  F00D         	goto	l4896
  3158   001A76                     l1504:
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3161   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3162   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3163   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3164   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3165   001A86                     
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3167   001A86  0100               	movlb	0	; () banked
  3168   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3169   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3170   001A8C                     l4896:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3173   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3174   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3175   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3176   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3177   001A9C  0E00               	movlw	0
  3178   001A9E  6E15               	movwf	___flmul@a^0,c
  3179   001AA0  0E00               	movlw	0
  3180   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3181   001AA4  0E20               	movlw	32
  3182   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3183   001AA8  0E41               	movlw	65
  3184   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3185   001AAC  ECAC  F013         	call	___flmul	;wreg free
  3186   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3187   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3188   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3189   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3190   001AC0  0100               	movlb	0	; () banked
  3191   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3192   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3193   001AC6  6E01               	movwf	labs@a^0,c
  3194   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3195   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3196   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3197   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3198   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3199   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3200   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3201   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3202   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3203   001ADA  ECCC  F02A         	call	_labs	;wreg free
  3204   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3205   001AE0  EF7D  F00D         	goto	u4701
  3206   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3207   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3208   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3209   001AEA  E109               	bnz	u4700
  3210   001AEC  0E02               	movlw	2
  3211   001AEE  5C01               	subwf	?_labs^0,w,c
  3212   001AF0  A0D8               	btfss	status,0,c
  3213   001AF2  EF7D  F00D         	goto	u4701
  3214   001AF6  EF7F  F00D         	goto	u4700
  3215   001AFA                     u4701:
  3216   001AFA  EF3B  F00D         	goto	l1504
  3217   001AFE                     u4700:
  3218   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3219   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3220   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3221   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3222   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3223   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3224   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3225   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3226   001B1E  EC64  F025         	call	___flge	;wreg free
  3227   001B22  A0D8               	btfss	status,0,c
  3228   001B24  EF96  F00D         	goto	u4711
  3229   001B28  EF98  F00D         	goto	u4710
  3230   001B2C                     u4711:
  3231   001B2C  EF3B  F00D         	goto	l1504
  3232   001B30                     u4710:
  3233   001B30                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3235   001B30  0100               	movlb	0	; () banked
  3236   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3237   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3238   001B36  6E01               	movwf	labs@a^0,c
  3239   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3240   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3241   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3242   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3243   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3244   001B42  6E03               	movwf	(labs@a+2)^0,c
  3245   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3246   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3247   001B48  6E04               	movwf	(labs@a+3)^0,c
  3248   001B4A  ECCC  F02A         	call	_labs	;wreg free
  3249   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3250   001B50  EFB7  F00D         	goto	u4720
  3251   001B54  5004               	movf	(?_labs+3)^0,w,c
  3252   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3253   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3254   001B5A  E107               	bnz	u4721
  3255   001B5C  0E02               	movlw	2
  3256   001B5E  5C01               	subwf	?_labs^0,w,c
  3257   001B60  B0D8               	btfsc	status,0,c
  3258   001B62  EFB5  F00D         	goto	u4721
  3259   001B66  EFB7  F00D         	goto	u4720
  3260   001B6A                     u4721:
  3261   001B6A  EFFF  F00D         	goto	l4914
  3262   001B6E                     u4720:
  3263   001B6E                     l4904:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3266   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3267   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3268   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3269   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3272   001B7E  EF18  F00E         	goto	l1502
  3273   001B82                     l4906:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3276   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3277   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3278   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3279   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3280   001B92  0E00               	movlw	0
  3281   001B94  6E36               	movwf	___fldiv@a^0,c
  3282   001B96  0E00               	movlw	0
  3283   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3284   001B9A  0E20               	movlw	32
  3285   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3286   001B9E  0E41               	movlw	65
  3287   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3288   001BA2  ECC1  F015         	call	___fldiv	;wreg free
  3289   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3290   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3291   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3292   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3293   001BB6                     
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3295   001BB6  0100               	movlb	0	; () banked
  3296   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3297   001BBA  A0D8               	btfss	status,0,c
  3298   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3299   001BBE                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3302   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3303   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3304   001BC2  6E01               	movwf	labs@a^0,c
  3305   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3306   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3307   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3308   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3309   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3310   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3311   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3312   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3313   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3314   001BD6  ECCC  F02A         	call	_labs	;wreg free
  3315   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3316   001BDC  EFFD  F00D         	goto	u4730
  3317   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3318   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3319   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3320   001BE6  E107               	bnz	u4731
  3321   001BE8  0E02               	movlw	2
  3322   001BEA  5C01               	subwf	?_labs^0,w,c
  3323   001BEC  B0D8               	btfsc	status,0,c
  3324   001BEE  EFFB  F00D         	goto	u4731
  3325   001BF2  EFFD  F00D         	goto	u4730
  3326   001BF6                     u4731:
  3327   001BF6  EFFF  F00D         	goto	l4914
  3328   001BFA                     u4730:
  3329   001BFA  EFB7  F00D         	goto	l4904
  3330   001BFE                     l4914:
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3333   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3334   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3335   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3336   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3337   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3338   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3339   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3340   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3341   001C1E  EC64  F025         	call	___flge	;wreg free
  3342   001C22  A0D8               	btfss	status,0,c
  3343   001C24  EF16  F00E         	goto	u4741
  3344   001C28  EF18  F00E         	goto	u4740
  3345   001C2C                     u4741:
  3346   001C2C  EFC1  F00D         	goto	l4906
  3347   001C30                     u4740:
  3348   001C30                     l1502:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3351   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3354   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3355   001C38                     
  3356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3357   001C38  0100               	movlb	0	; () banked
  3358   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3359   001C3C  EF22  F00E         	goto	u4751
  3360   001C40  EF24  F00E         	goto	u4750
  3361   001C44                     u4751:
  3362   001C44  EF2A  F00E         	goto	l4920
  3363   001C48                     u4750:
  3364   001C48                     
  3365                           ; BSR set to: 0
  3366   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3367   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3368   001C50  EF2E  F00E         	goto	l4922
  3369   001C54                     l4920:
  3370                           
  3371                           ; BSR set to: 0
  3372   001C54  0E00               	movlw	0
  3373   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3374   001C58  0E06               	movlw	6
  3375   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3376   001C5C                     l4922:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3380   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3381   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3382   001C64                     
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3385   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3386   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3387   001C68                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3390   001C68  0E66               	movlw	102
  3391   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3392   001C6C  A4D8               	btfss	status,2,c
  3393   001C6E  EF3B  F00E         	goto	u4761
  3394   001C72  EF3D  F00E         	goto	u4760
  3395   001C76                     u4761:
  3396   001C76  EF5D  F00E         	goto	l4936
  3397   001C7A                     u4760:
  3398   001C7A                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3401   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3402   001C7C  EF44  F00E         	goto	u4770
  3403   001C80  EF42  F00E         	goto	u4771
  3404   001C84                     u4771:
  3405   001C84  EF50  F00E         	goto	l4932
  3406   001C88                     u4770:
  3407   001C88                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3410   001C88  0E00               	movlw	0
  3411   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3412   001C8C  0E00               	movlw	0
  3413   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3414   001C90  0E80               	movlw	128
  3415   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3416   001C94  0E3F               	movlw	63
  3417   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3420   001C98  0E00               	movlw	0
  3421   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3422   001C9C  0E00               	movlw	0
  3423   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3424   001CA0                     l4932:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3428   001CA0  0E67               	movlw	103
  3429   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3430   001CA4  B4D8               	btfsc	status,2,c
  3431   001CA6  EF57  F00E         	goto	u4781
  3432   001CAA  EF59  F00E         	goto	u4780
  3433   001CAE                     u4781:
  3434   001CAE  EF5D  F00E         	goto	l4936
  3435   001CB2                     u4780:
  3436   001CB2                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3439   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3440   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3441   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3442   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3443   001CBA                     l4936:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3447   001CBA  0E00               	movlw	0
  3448   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3449   001CBE  0E00               	movlw	0
  3450   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3451   001CC2                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3454   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3455   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3456   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3457   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3458   001CD2                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3461   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3462   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3463   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3464   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3467   001CE2  EFEE  F00E         	goto	l4950
  3468   001CE6                     l4942:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3472   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3473   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3474   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3475   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3476   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3477   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3478   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3479   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3480   001D06  ECC1  F015         	call	___fldiv	;wreg free
  3481   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3482   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3483   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3484   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3485   001D1A  ECFC  F01F         	call	_floorf	;wreg free
  3486   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3487   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3488   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3489   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3492   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3493   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3494   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3495   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3496   001D3E  ECE1  F024         	call	___fltol	;wreg free
  3497   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3498   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3499   001D4A                     
  3500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3501   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3502   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3503   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3504   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3505   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3506   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3507   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3508   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3509   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3510   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3511   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3512   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3513   001D7A  ECAC  F013         	call	___flmul	;wreg free
  3514   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  3515   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3516   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3517   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3518   001D8E  EC7B  F02E         	call	___flsub	;wreg free
  3519   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  3520   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3521   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3522   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3523   001DA2                     
  3524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3525   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  3526   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3527   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3528   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3529   001DB2  0E00               	movlw	0
  3530   001DB4  6E36               	movwf	___fldiv@a^0,c
  3531   001DB6  0E00               	movlw	0
  3532   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  3533   001DBA  0E20               	movlw	32
  3534   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  3535   001DBE  0E41               	movlw	65
  3536   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  3537   001DC2  ECC1  F015         	call	___fldiv	;wreg free
  3538   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  3539   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3540   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3541   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3542   001DD6                     
  3543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3544   001DD6  0100               	movlb	0	; () banked
  3545   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3546   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3547   001DDC                     l4950:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3551   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  3552   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  3553   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3554   001DE2  0A80               	xorlw	128
  3555   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  3556   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3557   001DE8  0A80               	xorlw	128
  3558   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  3559   001DEC  A0D8               	btfss	status,0,c
  3560   001DEE  EFFB  F00E         	goto	u4791
  3561   001DF2  EFFD  F00E         	goto	u4790
  3562   001DF6                     u4791:
  3563   001DF6  EF73  F00E         	goto	l4942
  3564   001DFA                     u4790:
  3565   001DFA                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3568   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  3569   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3570   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3571   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3572   001E0A  0E00               	movlw	0
  3573   001E0C  6E15               	movwf	___flmul@a^0,c
  3574   001E0E  0E00               	movlw	0
  3575   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  3576   001E12  0EA0               	movlw	160
  3577   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  3578   001E16  0E40               	movlw	64
  3579   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  3580   001E1A  ECAC  F013         	call	___flmul	;wreg free
  3581   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  3582   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3583   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3584   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3585   001E2E                     
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3587   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3588   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3589   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3590   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3591   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3592   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3593   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3594   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3595   001E4E  EC64  F025         	call	___flge	;wreg free
  3596   001E52  B0D8               	btfsc	status,0,c
  3597   001E54  EF2E  F00F         	goto	u4801
  3598   001E58  EF30  F00F         	goto	u4800
  3599   001E5C                     u4801:
  3600   001E5C  EF3B  F00F         	goto	l4958
  3601   001E60                     u4800:
  3602   001E60                     
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3604   001E60  0E00               	movlw	0
  3605   001E62  0100               	movlb	0	; () banked
  3606   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  3607   001E66  0E00               	movlw	0
  3608   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3609   001E6A  0E00               	movlw	0
  3610   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3611   001E6E  0E00               	movlw	0
  3612   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3615   001E72  EF64  F00F         	goto	l4964
  3616   001E76                     l4958:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3619   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3620   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3621   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3622   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3623   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3624   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3625   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3626   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3627   001E96  ECD5  F027         	call	___fleq	;wreg free
  3628   001E9A  A0D8               	btfss	status,0,c
  3629   001E9C  EF52  F00F         	goto	u4811
  3630   001EA0  EF54  F00F         	goto	u4810
  3631   001EA4                     u4811:
  3632   001EA4  EF64  F00F         	goto	l4964
  3633   001EA8                     u4810:
  3634   001EA8  0100               	movlb	0	; () banked
  3635   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  3636   001EAC  EF5A  F00F         	goto	u4821
  3637   001EB0  EF5C  F00F         	goto	u4820
  3638   001EB4                     u4821:
  3639   001EB4  EF64  F00F         	goto	l4964
  3640   001EB8                     u4820:
  3641   001EB8                     
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3644   001EB8  0E00               	movlw	0
  3645   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  3646   001EBC  0E00               	movlw	0
  3647   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3648   001EC0  0E00               	movlw	0
  3649   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3650   001EC4  0E00               	movlw	0
  3651   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3652   001EC8                     l4964:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3655   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  3656   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3657   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3658   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3659   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  3660   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3661   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3662   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3663   001EE8  EC4C  F011         	call	___fladd	;wreg free
  3664   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  3665   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3666   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3667   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3668   001EFC                     
  3669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3670   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3671   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3672   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3673   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3674   001F0C  0E00               	movlw	0
  3675   001F0E  6E15               	movwf	___flmul@a^0,c
  3676   001F10  0E00               	movlw	0
  3677   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  3678   001F14  0E20               	movlw	32
  3679   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  3680   001F18  0E41               	movlw	65
  3681   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  3682   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3683   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3684   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3685   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3686   001F2C  ECAC  F013         	call	___flmul	;wreg free
  3687   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  3688   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3689   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3690   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3691   001F40  EC64  F025         	call	___flge	;wreg free
  3692   001F44  A0D8               	btfss	status,0,c
  3693   001F46  EFA7  F00F         	goto	u4831
  3694   001F4A  EFA9  F00F         	goto	u4830
  3695   001F4E                     u4831:
  3696   001F4E  EFD2  F00F         	goto	l4976
  3697   001F52                     u4830:
  3698   001F52                     
  3699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3700   001F52  0100               	movlb	0	; () banked
  3701   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3702   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3703   001F58                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3706   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3707   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3708   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3709   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3710   001F68  0E00               	movlw	0
  3711   001F6A  6E15               	movwf	___flmul@a^0,c
  3712   001F6C  0E00               	movlw	0
  3713   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  3714   001F70  0E20               	movlw	32
  3715   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  3716   001F74  0E41               	movlw	65
  3717   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  3718   001F78  ECAC  F013         	call	___flmul	;wreg free
  3719   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3720   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3721   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3722   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3723   001F8C                     
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3725   001F8C  0E66               	movlw	102
  3726   001F8E  0100               	movlb	0	; () banked
  3727   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3728   001F92  A4D8               	btfss	status,2,c
  3729   001F94  EFCE  F00F         	goto	u4841
  3730   001F98  EFD0  F00F         	goto	u4840
  3731   001F9C                     u4841:
  3732   001F9C  EFD2  F00F         	goto	l4976
  3733   001FA0                     u4840:
  3734   001FA0                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3737   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3738   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3739   001FA4                     l4976:
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3742   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3743   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3744   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3745   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3746   001FB4                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3748   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3749   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3750   001FBC                     
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3752   001FBC  0E00               	movlw	0
  3753   001FBE  0100               	movlb	0	; () banked
  3754   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  3755   001FC2                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3758   001FC2  0E00               	movlw	0
  3759   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3760   001FC6  0E00               	movlw	0
  3761   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  3762   001FCA                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3765   001FCA  0E00               	movlw	0
  3766   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3767   001FCE  0E00               	movlw	0
  3768   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3771   001FD2  EFD0  F010         	goto	l5026
  3772   001FD6                     l4986:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3776   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3777   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3778   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3779   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3780   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3781   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3782   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3783   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3784   001FF6  ECC1  F015         	call	___fldiv	;wreg free
  3785   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  3786   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3787   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3788   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3789   00200A  ECFC  F01F         	call	_floorf	;wreg free
  3790   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  3791   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3792   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3793   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3796   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3797   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3798   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3799   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3800   00202E  ECE1  F024         	call	___fltol	;wreg free
  3801   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  3802   002034  EF27  F010         	goto	u4850
  3803   002038  5002               	movf	(?___fltol+1)^0,w,c
  3804   00203A  E107               	bnz	u4851
  3805   00203C  0E0A               	movlw	10
  3806   00203E  5C01               	subwf	?___fltol^0,w,c
  3807   002040  B0D8               	btfsc	status,0,c
  3808   002042  EF25  F010         	goto	u4851
  3809   002046  EF27  F010         	goto	u4850
  3810   00204A                     u4851:
  3811   00204A  EF37  F010         	goto	l4990
  3812   00204E                     u4850:
  3813   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3814   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3815   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3816   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3817   00205E  ECE1  F024         	call	___fltol	;wreg free
  3818   002062  C001  F074         	movff	?___fltol,efgtoa@d
  3819   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3820   00206A  EF3C  F010         	goto	l1532
  3821   00206E                     l4990:
  3822   00206E  0E00               	movlw	0
  3823   002070  0100               	movlb	0	; () banked
  3824   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3825   002074  0E09               	movlw	9
  3826   002076  6F74               	movwf	efgtoa@d& (0+255),b
  3827   002078                     l1532:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3830   002078  0100               	movlb	0	; () banked
  3831   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  3832   00207C  A4D8               	btfss	status,2,c
  3833   00207E  EF43  F010         	goto	u4861
  3834   002082  EF45  F010         	goto	u4860
  3835   002086                     u4861:
  3836   002086  EF6D  F010         	goto	l5010
  3837   00208A                     u4860:
  3838   00208A                     
  3839                           ; BSR set to: 0
  3840   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3841   00208C  EF4C  F010         	goto	u4870
  3842   002090  EF4A  F010         	goto	u4871
  3843   002094                     u4871:
  3844   002094  EF6D  F010         	goto	l5010
  3845   002098                     u4870:
  3846   002098                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3849   002098  0EA0               	movlw	low _dbuf
  3850   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  3851   00209C  6ED9               	movwf	fsr2l,c
  3852   00209E  0E02               	movlw	high _dbuf
  3853   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3854   0020A2  6EDA               	movwf	fsr2h,c
  3855   0020A4  0E2E               	movlw	46
  3856   0020A6  6EDF               	movwf	indf2,c
  3857   0020A8                     
  3858                           ; BSR set to: 0
  3859   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3860   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3861   0020AC                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3864   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  3865   0020AE  A0D8               	btfss	status,0,c
  3866   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3867   0020B2                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3870   0020B2  0E01               	movlw	1
  3871   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  3872   0020B6  EF6D  F010         	goto	l5010
  3873   0020BA                     l5002:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3877   0020BA  0EA0               	movlw	low _dbuf
  3878   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  3879   0020BE  6ED9               	movwf	fsr2l,c
  3880   0020C0  0E02               	movlw	high _dbuf
  3881   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3882   0020C4  6EDA               	movwf	fsr2h,c
  3883   0020C6  0E30               	movlw	48
  3884   0020C8  6EDF               	movwf	indf2,c
  3885   0020CA                     
  3886                           ; BSR set to: 0
  3887   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3888   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3889   0020CE                     
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3892   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  3893   0020D0  A0D8               	btfss	status,0,c
  3894   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3895   0020D4                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3898   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  3899   0020D6  A0D8               	btfss	status,0,c
  3900   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3901   0020DA                     l5010:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3905   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  3906   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3907   0020DE  A4D8               	btfss	status,2,c
  3908   0020E0  EF74  F010         	goto	u4881
  3909   0020E4  EF76  F010         	goto	u4880
  3910   0020E8                     u4881:
  3911   0020E8  EF5D  F010         	goto	l5002
  3912   0020EC                     u4880:
  3913   0020EC                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3916   0020EC  0EA0               	movlw	low _dbuf
  3917   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  3918   0020F0  6ED9               	movwf	fsr2l,c
  3919   0020F2  0E02               	movlw	high _dbuf
  3920   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3921   0020F6  6EDA               	movwf	fsr2h,c
  3922   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  3923   0020FA  0F30               	addlw	48
  3924   0020FC  6EDF               	movwf	indf2,c
  3925   0020FE                     
  3926                           ; BSR set to: 0
  3927   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3928   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3929   002102                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3932   002102  077A               	decf	efgtoa@w& (0+255),f,b
  3933   002104  A0D8               	btfss	status,0,c
  3934   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3935   002108                     
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3938   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  3939   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3940   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3941   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3942   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  3943   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3944   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3945   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3946   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  3947   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3948   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3949   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3950   002138  ECAC  F013         	call	___flmul	;wreg free
  3951   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  3952   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3953   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3954   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3955   00214C  EC7B  F02E         	call	___flsub	;wreg free
  3956   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  3957   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3958   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3959   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3960   002160                     
  3961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3962   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  3963   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3964   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3965   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3966   002170  0E00               	movlw	0
  3967   002172  6E36               	movwf	___fldiv@a^0,c
  3968   002174  0E00               	movlw	0
  3969   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  3970   002178  0E20               	movlw	32
  3971   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  3972   00217C  0E41               	movlw	65
  3973   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  3974   002180  ECC1  F015         	call	___fldiv	;wreg free
  3975   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  3976   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3977   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3978   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3979   002194                     
  3980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3981   002194  0100               	movlb	0	; () banked
  3982   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  3983   002198  A0D8               	btfss	status,0,c
  3984   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3985   00219C                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3988   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3989   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3990   0021A0                     l5026:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3994   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  3995   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  3996   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3997   0021A6  0A80               	xorlw	128
  3998   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  3999   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4000   0021AC  0A80               	xorlw	128
  4001   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  4002   0021B0  B0D8               	btfsc	status,0,c
  4003   0021B2  EFDD  F010         	goto	u4891
  4004   0021B6  EFDF  F010         	goto	u4890
  4005   0021BA                     u4891:
  4006   0021BA  EFED  F010         	goto	l5030
  4007   0021BE                     u4890:
  4008   0021BE                     
  4009                           ; BSR set to: 0
  4010   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4011   0021C0  EFEB  F010         	goto	u4901
  4012   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4013   0021C6  E109               	bnz	u4900
  4014   0021C8  0E4B               	movlw	75
  4015   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4016   0021CC  A0D8               	btfss	status,0,c
  4017   0021CE  EFEB  F010         	goto	u4901
  4018   0021D2  EFED  F010         	goto	u4900
  4019   0021D6                     u4901:
  4020   0021D6  EFEB  F00F         	goto	l4986
  4021   0021DA                     u4900:
  4022   0021DA                     l5030:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4026   0021DA  0E00               	movlw	0
  4027   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4028   0021DE  0E4F               	movlw	79
  4029   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  4030   0021E2                     
  4031                           ; BSR set to: 0
  4032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4033   0021E2  0EA0               	movlw	low _dbuf
  4034   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  4035   0021E6  6ED9               	movwf	fsr2l,c
  4036   0021E8  0E02               	movlw	high _dbuf
  4037   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4038   0021EC  6EDA               	movwf	fsr2h,c
  4039   0021EE  0E00               	movlw	0
  4040   0021F0  6EDF               	movwf	indf2,c
  4041   0021F2                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4044   0021F2  0EA0               	movlw	low _dbuf
  4045   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  4046   0021F6  0E02               	movlw	high _dbuf
  4047   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4048   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4049   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  4050   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4051   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4052   002202  5180               	movf	efgtoa@i& (0+255),w,b
  4053   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  4054   002206  6E01               	movwf	memcpy@d1^0,c
  4055   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4056   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4057   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  4058   00220E  0EA0               	movlw	low _dbuf
  4059   002210  6E03               	movwf	memcpy@s1^0,c
  4060   002212  0E02               	movlw	high _dbuf
  4061   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  4062   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  4063   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4064   00221E  EC65  F02D         	call	_memcpy	;wreg free
  4065   002222                     
  4066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4067   002222  0100               	movlb	0	; () banked
  4068   002224  518B               	movf	efgtoa@n& (0+255),w,b
  4069   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  4070   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  4071   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4072   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4073   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4074   002230                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4077   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  4078   002232  A4D8               	btfss	status,2,c
  4079   002234  EF1E  F011         	goto	u4911
  4080   002238  EF21  F011         	goto	u4910
  4081   00223C                     u4911:
  4082   00223C  0E01               	movlw	1
  4083   00223E  EF22  F011         	goto	u4920
  4084   002242                     u4910:
  4085   002242  0E00               	movlw	0
  4086   002244                     u4920:
  4087   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4088   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4089   002248                     
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4092   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4093   00224A  B4D8               	btfsc	status,2,c
  4094   00224C  EF2A  F011         	goto	u4931
  4095   002250  EF2C  F011         	goto	u4930
  4096   002254                     u4931:
  4097   002254  EF37  F011         	goto	l5044
  4098   002258                     u4930:
  4099   002258                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4102   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4103   00225A  A0D8               	btfss	status,0,c
  4104   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4105   00225E  0EA0               	movlw	low _dbuf
  4106   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4107   002262  6ED9               	movwf	fsr2l,c
  4108   002264  0E02               	movlw	high _dbuf
  4109   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4110   002268  6EDA               	movwf	fsr2h,c
  4111   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4112   00226E                     l5044:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4116   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4117   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4118   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4119   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4120   002276                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4123   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4124   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4125   00227E  0EA0               	movlw	low _dbuf
  4126   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4127   002282  6E13               	movwf	pad@buf^0,c
  4128   002284  0E02               	movlw	high _dbuf
  4129   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4130   002288  6E14               	movwf	(pad@buf+1)^0,c
  4131   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4132   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4133   002292  ECE9  F029         	call	_pad	;wreg free
  4134   002296                     l1499:
  4135   002296  0012               	return		;funcret
  4136   002298                     __end_of_efgtoa:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function _strcpy *****************
  4140 ;; Defined at:
  4141 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4144 ;;		 -> dbuf(80), 
  4145 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4146 ;;		 -> STR_5(4), STR_2(4), 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  d               2    6[COMRAM] PTR unsigned char 
  4149 ;;		 -> dbuf(80), 
  4150 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4151 ;;		 -> STR_5(4), STR_2(4), 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2    0[COMRAM] PTR unsigned char 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4165 ;;Total ram usage:        8 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_efgtoa
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text6
  4176   005D3C                     __ptext6:
  4177                           	callstack 0
  4178   005D3C                     _strcpy:
  4179                           	callstack 25
  4180   005D3C  C003  F005         	movff	strcpy@src,strcpy@s
  4181   005D40  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4182   005D44  C001  F007         	movff	strcpy@dest,strcpy@d
  4183   005D48  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4184   005D4C                     l4692:
  4185   005D4C  C005  FFF6         	movff	strcpy@s,tblptrl
  4186   005D50  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4187   005D54  4A05               	infsnz	strcpy@s^0,f,c
  4188   005D56  2A06               	incf	(strcpy@s+1)^0,f,c
  4189   005D58                     	if	0	;tblptru may be non-zero
  4190   005D58                     	endif
  4191   005D58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4192   005D58  0E00               	movlw	low (__mediumconst shr (0+16))
  4193   005D5A  6EF8               	movwf	tblptru,c
  4194   005D5C                     	endif
  4195   005D5C  C007  FFD9         	movff	strcpy@d,fsr2l
  4196   005D60  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4197   005D64  4A07               	infsnz	strcpy@d^0,f,c
  4198   005D66  2A08               	incf	(strcpy@d+1)^0,f,c
  4199   005D68  0008               	tblrd		*
  4200   005D6A  CFF5 FFDF          	movff	tablat,indf2
  4201   005D6E  50DF               	movf	indf2,w,c
  4202   005D70  A4D8               	btfss	status,2,c
  4203   005D72  EFBD  F02E         	goto	u4361
  4204   005D76  EFBF  F02E         	goto	u4360
  4205   005D7A                     u4361:
  4206   005D7A  EFA6  F02E         	goto	l4692
  4207   005D7E                     u4360:
  4208   005D7E  0012               	return		;funcret
  4209   005D80                     __end_of_strcpy:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _memcpy *****************
  4213 ;; Defined at:
  4214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  d1              2    0[COMRAM] PTR void 
  4217 ;;		 -> dbuf(80), 
  4218 ;;  s1              2    2[COMRAM] PTR const void 
  4219 ;;		 -> dbuf(80), 
  4220 ;;  n               2    4[COMRAM] unsigned int 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4223 ;;		 -> dbuf(80), 
  4224 ;;  d               2    6[COMRAM] PTR unsigned char 
  4225 ;;		 -> dbuf(80), 
  4226 ;;  tmp             1   10[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2    0[COMRAM] PTR void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;Total ram usage:       11 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 1
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_efgtoa
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text7
  4251   005ACA                     __ptext7:
  4252                           	callstack 0
  4253   005ACA                     _memcpy:
  4254                           	callstack 25
  4255   005ACA  C003  F009         	movff	memcpy@s1,memcpy@s
  4256   005ACE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4257   005AD2  C001  F007         	movff	memcpy@d1,memcpy@d
  4258   005AD6  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4259   005ADA  EF7F  F02D         	goto	l4736
  4260   005ADE                     l4728:
  4261   005ADE  C009  FFD9         	movff	memcpy@s,fsr2l
  4262   005AE2  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4263   005AE6  50DF               	movf	indf2,w,c
  4264   005AE8  6E0B               	movwf	memcpy@tmp^0,c
  4265   005AEA  4A09               	infsnz	memcpy@s^0,f,c
  4266   005AEC  2A0A               	incf	(memcpy@s+1)^0,f,c
  4267   005AEE  C007  FFD9         	movff	memcpy@d,fsr2l
  4268   005AF2  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4269   005AF6  C00B  FFDF         	movff	memcpy@tmp,indf2
  4270   005AFA  4A07               	infsnz	memcpy@d^0,f,c
  4271   005AFC  2A08               	incf	(memcpy@d+1)^0,f,c
  4272   005AFE                     l4736:
  4273   005AFE  0605               	decf	memcpy@n^0,f,c
  4274   005B00  A0D8               	btfss	status,0,c
  4275   005B02  0606               	decf	(memcpy@n+1)^0,f,c
  4276   005B04  2805               	incf	memcpy@n^0,w,c
  4277   005B06  E106               	bnz	u4481
  4278   005B08  2806               	incf	(memcpy@n+1)^0,w,c
  4279   005B0A  A4D8               	btfss	status,2,c
  4280   005B0C  EF8A  F02D         	goto	u4481
  4281   005B10  EF8C  F02D         	goto	u4480
  4282   005B14                     u4481:
  4283   005B14  EF6F  F02D         	goto	l4728
  4284   005B18                     u4480:
  4285   005B18  0012               	return		;funcret
  4286   005B1A                     __end_of_memcpy:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _labs *****************
  4290 ;; Defined at:
  4291 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  a               4    0[COMRAM] long 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  4    0[COMRAM] long 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4308 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;Total ram usage:        8 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 1
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_efgtoa
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text8
  4320   005598                     __ptext8:
  4321                           	callstack 0
  4322   005598                     _labs:
  4323                           	callstack 25
  4324   005598  BE04               	btfsc	(labs@a+3)^0,7,c
  4325   00559A  EFDB  F02A         	goto	u4370
  4326   00559E  5004               	movf	(labs@a+3)^0,w,c
  4327   0055A0  1003               	iorwf	(labs@a+2)^0,w,c
  4328   0055A2  1002               	iorwf	(labs@a+1)^0,w,c
  4329   0055A4  E106               	bnz	u4371
  4330   0055A6  0401               	decf	labs@a^0,w,c
  4331   0055A8  B0D8               	btfsc	status,0,c
  4332   0055AA  EFD9  F02A         	goto	u4371
  4333   0055AE  EFDB  F02A         	goto	u4370
  4334   0055B2                     u4371:
  4335   0055B2  EFF6  F02A         	goto	l1604
  4336   0055B6                     u4370:
  4337   0055B6  C001  F005         	movff	labs@a,??_labs
  4338   0055BA  C002  F006         	movff	labs@a+1,??_labs+1
  4339   0055BE  C003  F007         	movff	labs@a+2,??_labs+2
  4340   0055C2  C004  F008         	movff	labs@a+3,??_labs+3
  4341   0055C6  1E05               	comf	??_labs^0,f,c
  4342   0055C8  1E06               	comf	(??_labs+1)^0,f,c
  4343   0055CA  1E07               	comf	(??_labs+2)^0,f,c
  4344   0055CC  1E08               	comf	(??_labs+3)^0,f,c
  4345   0055CE  2A05               	incf	??_labs^0,f,c
  4346   0055D0  0E00               	movlw	0
  4347   0055D2  2206               	addwfc	(??_labs+1)^0,f,c
  4348   0055D4  2207               	addwfc	(??_labs+2)^0,f,c
  4349   0055D6  2208               	addwfc	(??_labs+3)^0,f,c
  4350   0055D8  C005  F001         	movff	??_labs,?_labs
  4351   0055DC  C006  F002         	movff	??_labs+1,?_labs+1
  4352   0055E0  C007  F003         	movff	??_labs+2,?_labs+2
  4353   0055E4  C008  F004         	movff	??_labs+3,?_labs+3
  4354   0055E8  EFFE  F02A         	goto	l1607
  4355   0055EC                     l1604:
  4356   0055EC  C001  F001         	movff	labs@a,?_labs
  4357   0055F0  C002  F002         	movff	labs@a+1,?_labs+1
  4358   0055F4  C003  F003         	movff	labs@a+2,?_labs+2
  4359   0055F8  C004  F004         	movff	labs@a+3,?_labs+3
  4360   0055FC                     l1607:
  4361   0055FC  0012               	return		;funcret
  4362   0055FE                     __end_of_labs:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _floorf *****************
  4366 ;; Defined at:
  4367 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  x               4   74[COMRAM] float 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  u               4   90[COMRAM] struct .
  4372 ;;  m               4   84[COMRAM] unsigned long 
  4373 ;;  e               2   88[COMRAM] int 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  4   74[COMRAM] float 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;Total ram usage:       20 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_efgtoa
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text9
  4398   003FF8                     __ptext9:
  4399                           	callstack 0
  4400   003FF8                     _floorf:
  4401                           	callstack 25
  4402   003FF8  C0DF  F05B         	movff	floorf@F526,floorf@u
  4403   003FFC  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4404   004000  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4405   004004  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4406   004008  C04B  F05B         	movff	floorf@x,floorf@u
  4407   00400C  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4408   004010  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4409   004014  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4410   004018  0E81               	movlw	129
  4411   00401A  6E4F               	movwf	??_floorf^0,c
  4412   00401C  0EFF               	movlw	255
  4413   00401E  6E50               	movwf	(??_floorf+1)^0,c
  4414   004020  C05B  F051         	movff	floorf@u,??_floorf+2
  4415   004024  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4416   004028  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4417   00402C  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4418   004030  0E18               	movlw	24
  4419   004032  EF20  F020         	goto	u4380
  4420   004036                     u4385:
  4421   004036  90D8               	bcf	status,0,c
  4422   004038  3254               	rrcf	(??_floorf+5)^0,f,c
  4423   00403A  3253               	rrcf	(??_floorf+4)^0,f,c
  4424   00403C  3252               	rrcf	(??_floorf+3)^0,f,c
  4425   00403E  3251               	rrcf	(??_floorf+2)^0,f,c
  4426   004040                     u4380:
  4427   004040  2EE8               	decfsz	wreg,f,c
  4428   004042  EF1B  F020         	goto	u4385
  4429   004046  5051               	movf	(??_floorf+2)^0,w,c
  4430   004048  244F               	addwf	??_floorf^0,w,c
  4431   00404A  6E59               	movwf	floorf@e^0,c
  4432   00404C  0E00               	movlw	0
  4433   00404E  2050               	addwfc	(??_floorf+1)^0,w,c
  4434   004050  6E5A               	movwf	(floorf@e+1)^0,c
  4435   004052  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4436   004054  EF35  F020         	goto	u4391
  4437   004058  505A               	movf	(floorf@e+1)^0,w,c
  4438   00405A  E109               	bnz	u4390
  4439   00405C  0E17               	movlw	23
  4440   00405E  5C59               	subwf	floorf@e^0,w,c
  4441   004060  A0D8               	btfss	status,0,c
  4442   004062  EF35  F020         	goto	u4391
  4443   004066  EF37  F020         	goto	u4390
  4444   00406A                     u4391:
  4445   00406A  EF41  F020         	goto	l4704
  4446   00406E                     u4390:
  4447   00406E                     l4702:
  4448   00406E  C04B  F04B         	movff	floorf@x,?_floorf
  4449   004072  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4450   004076  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4451   00407A  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4452   00407E  EF04  F021         	goto	l1593
  4453   004082                     l4704:
  4454   004082  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4455   004084  EF46  F020         	goto	u4401
  4456   004088  EF48  F020         	goto	u4400
  4457   00408C                     u4401:
  4458   00408C  EFB8  F020         	goto	l4714
  4459   004090                     u4400:
  4460   004090  C059  F04F         	movff	floorf@e,??_floorf
  4461   004094  0EFF               	movlw	255
  4462   004096  6E50               	movwf	(??_floorf+1)^0,c
  4463   004098  0EFF               	movlw	255
  4464   00409A  6E51               	movwf	(??_floorf+2)^0,c
  4465   00409C  0E7F               	movlw	127
  4466   00409E  6E52               	movwf	(??_floorf+3)^0,c
  4467   0040A0  0E00               	movlw	0
  4468   0040A2  6E53               	movwf	(??_floorf+4)^0,c
  4469   0040A4                     u4415:
  4470   0040A4  664F               	tstfsz	??_floorf^0,c
  4471   0040A6  EF57  F020         	goto	u4416
  4472   0040AA  EF5F  F020         	goto	u4417
  4473   0040AE                     u4416:
  4474   0040AE  3453               	rlcf	(??_floorf+4)^0,w,c
  4475   0040B0  3253               	rrcf	(??_floorf+4)^0,f,c
  4476   0040B2  3252               	rrcf	(??_floorf+3)^0,f,c
  4477   0040B4  3251               	rrcf	(??_floorf+2)^0,f,c
  4478   0040B6  3250               	rrcf	(??_floorf+1)^0,f,c
  4479   0040B8  2E4F               	decfsz	??_floorf^0,f,c
  4480   0040BA  EF52  F020         	goto	u4415
  4481   0040BE                     u4417:
  4482   0040BE  C050  F055         	movff	??_floorf+1,floorf@m
  4483   0040C2  C051  F056         	movff	??_floorf+2,floorf@m+1
  4484   0040C6  C052  F057         	movff	??_floorf+3,floorf@m+2
  4485   0040CA  C053  F058         	movff	??_floorf+4,floorf@m+3
  4486   0040CE  5055               	movf	floorf@m^0,w,c
  4487   0040D0  145B               	andwf	floorf@u^0,w,c
  4488   0040D2  6E4F               	movwf	??_floorf^0,c
  4489   0040D4  5056               	movf	(floorf@m+1)^0,w,c
  4490   0040D6  145C               	andwf	(floorf@u+1)^0,w,c
  4491   0040D8  6E50               	movwf	(??_floorf+1)^0,c
  4492   0040DA  5057               	movf	(floorf@m+2)^0,w,c
  4493   0040DC  145D               	andwf	(floorf@u+2)^0,w,c
  4494   0040DE  6E51               	movwf	(??_floorf+2)^0,c
  4495   0040E0  5058               	movf	(floorf@m+3)^0,w,c
  4496   0040E2  145E               	andwf	(floorf@u+3)^0,w,c
  4497   0040E4  6E52               	movwf	(??_floorf+3)^0,c
  4498   0040E6  504F               	movf	??_floorf^0,w,c
  4499   0040E8  1050               	iorwf	(??_floorf+1)^0,w,c
  4500   0040EA  1051               	iorwf	(??_floorf+2)^0,w,c
  4501   0040EC  1052               	iorwf	(??_floorf+3)^0,w,c
  4502   0040EE  A4D8               	btfss	status,2,c
  4503   0040F0  EF7C  F020         	goto	u4421
  4504   0040F4  EF7E  F020         	goto	u4420
  4505   0040F8                     u4421:
  4506   0040F8  EF80  F020         	goto	l4710
  4507   0040FC                     u4420:
  4508   0040FC  EF37  F020         	goto	l4702
  4509   004100                     l4710:
  4510   004100  C05B  F04F         	movff	floorf@u,??_floorf
  4511   004104  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4512   004108  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4513   00410C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4514   004110  0E20               	movlw	32
  4515   004112  EF90  F020         	goto	u4430
  4516   004116                     u4435:
  4517   004116  90D8               	bcf	status,0,c
  4518   004118  3252               	rrcf	(??_floorf+3)^0,f,c
  4519   00411A  3251               	rrcf	(??_floorf+2)^0,f,c
  4520   00411C  3250               	rrcf	(??_floorf+1)^0,f,c
  4521   00411E  324F               	rrcf	??_floorf^0,f,c
  4522   004120                     u4430:
  4523   004120  2EE8               	decfsz	wreg,f,c
  4524   004122  EF8B  F020         	goto	u4435
  4525   004126  504F               	movf	??_floorf^0,w,c
  4526   004128  1050               	iorwf	(??_floorf+1)^0,w,c
  4527   00412A  1051               	iorwf	(??_floorf+2)^0,w,c
  4528   00412C  1052               	iorwf	(??_floorf+3)^0,w,c
  4529   00412E  B4D8               	btfsc	status,2,c
  4530   004130  EF9C  F020         	goto	u4441
  4531   004134  EF9E  F020         	goto	u4440
  4532   004138                     u4441:
  4533   004138  EFA6  F020         	goto	l1596
  4534   00413C                     u4440:
  4535   00413C  5055               	movf	floorf@m^0,w,c
  4536   00413E  265B               	addwf	floorf@u^0,f,c
  4537   004140  5056               	movf	(floorf@m+1)^0,w,c
  4538   004142  225C               	addwfc	(floorf@u+1)^0,f,c
  4539   004144  5057               	movf	(floorf@m+2)^0,w,c
  4540   004146  225D               	addwfc	(floorf@u+2)^0,f,c
  4541   004148  5058               	movf	(floorf@m+3)^0,w,c
  4542   00414A  225E               	addwfc	(floorf@u+3)^0,f,c
  4543   00414C                     l1596:
  4544   00414C  1C55               	comf	floorf@m^0,w,c
  4545   00414E  6E4F               	movwf	??_floorf^0,c
  4546   004150  1C56               	comf	(floorf@m+1)^0,w,c
  4547   004152  6E50               	movwf	(??_floorf+1)^0,c
  4548   004154  1C57               	comf	(floorf@m+2)^0,w,c
  4549   004156  6E51               	movwf	(??_floorf+2)^0,c
  4550   004158  1C58               	comf	(floorf@m+3)^0,w,c
  4551   00415A  6E52               	movwf	(??_floorf+3)^0,c
  4552   00415C  504F               	movf	??_floorf^0,w,c
  4553   00415E  165B               	andwf	floorf@u^0,f,c
  4554   004160  5050               	movf	(??_floorf+1)^0,w,c
  4555   004162  165C               	andwf	(floorf@u+1)^0,f,c
  4556   004164  5051               	movf	(??_floorf+2)^0,w,c
  4557   004166  165D               	andwf	(floorf@u+2)^0,f,c
  4558   004168  5052               	movf	(??_floorf+3)^0,w,c
  4559   00416A  165E               	andwf	(floorf@u+3)^0,f,c
  4560   00416C  EFFC  F020         	goto	l4722
  4561   004170                     l4714:
  4562   004170  C05B  F04F         	movff	floorf@u,??_floorf
  4563   004174  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4564   004178  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4565   00417C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4566   004180  0E20               	movlw	32
  4567   004182  EFC8  F020         	goto	u4450
  4568   004186                     u4455:
  4569   004186  90D8               	bcf	status,0,c
  4570   004188  3252               	rrcf	(??_floorf+3)^0,f,c
  4571   00418A  3251               	rrcf	(??_floorf+2)^0,f,c
  4572   00418C  3250               	rrcf	(??_floorf+1)^0,f,c
  4573   00418E  324F               	rrcf	??_floorf^0,f,c
  4574   004190                     u4450:
  4575   004190  2EE8               	decfsz	wreg,f,c
  4576   004192  EFC3  F020         	goto	u4455
  4577   004196  504F               	movf	??_floorf^0,w,c
  4578   004198  1050               	iorwf	(??_floorf+1)^0,w,c
  4579   00419A  1051               	iorwf	(??_floorf+2)^0,w,c
  4580   00419C  1052               	iorwf	(??_floorf+3)^0,w,c
  4581   00419E  A4D8               	btfss	status,2,c
  4582   0041A0  EFD4  F020         	goto	u4461
  4583   0041A4  EFD6  F020         	goto	u4460
  4584   0041A8                     u4461:
  4585   0041A8  EFE0  F020         	goto	l4718
  4586   0041AC                     u4460:
  4587   0041AC  0E00               	movlw	0
  4588   0041AE  6E5B               	movwf	floorf@u^0,c
  4589   0041B0  0E00               	movlw	0
  4590   0041B2  6E5C               	movwf	(floorf@u+1)^0,c
  4591   0041B4  0E00               	movlw	0
  4592   0041B6  6E5D               	movwf	(floorf@u+2)^0,c
  4593   0041B8  0E00               	movlw	0
  4594   0041BA  6E5E               	movwf	(floorf@u+3)^0,c
  4595   0041BC  EFFC  F020         	goto	l4722
  4596   0041C0                     l4718:
  4597   0041C0  90D8               	bcf	status,0,c
  4598   0041C2  345B               	rlcf	floorf@u^0,w,c
  4599   0041C4  6E4F               	movwf	??_floorf^0,c
  4600   0041C6  345C               	rlcf	(floorf@u+1)^0,w,c
  4601   0041C8  6E50               	movwf	(??_floorf+1)^0,c
  4602   0041CA  345D               	rlcf	(floorf@u+2)^0,w,c
  4603   0041CC  6E51               	movwf	(??_floorf+2)^0,c
  4604   0041CE  345E               	rlcf	(floorf@u+3)^0,w,c
  4605   0041D0  6E52               	movwf	(??_floorf+3)^0,c
  4606   0041D2  504F               	movf	??_floorf^0,w,c
  4607   0041D4  1050               	iorwf	(??_floorf+1)^0,w,c
  4608   0041D6  1051               	iorwf	(??_floorf+2)^0,w,c
  4609   0041D8  1052               	iorwf	(??_floorf+3)^0,w,c
  4610   0041DA  B4D8               	btfsc	status,2,c
  4611   0041DC  EFF2  F020         	goto	u4471
  4612   0041E0  EFF4  F020         	goto	u4470
  4613   0041E4                     u4471:
  4614   0041E4  EFFC  F020         	goto	l4722
  4615   0041E8                     u4470:
  4616   0041E8  0E00               	movlw	0
  4617   0041EA  6E5B               	movwf	floorf@u^0,c
  4618   0041EC  0E00               	movlw	0
  4619   0041EE  6E5C               	movwf	(floorf@u+1)^0,c
  4620   0041F0  0E80               	movlw	128
  4621   0041F2  6E5D               	movwf	(floorf@u+2)^0,c
  4622   0041F4  0EBF               	movlw	191
  4623   0041F6  6E5E               	movwf	(floorf@u+3)^0,c
  4624   0041F8                     l4722:
  4625   0041F8  C05B  F04B         	movff	floorf@u,?_floorf
  4626   0041FC  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4627   004200  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4628   004204  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4629   004208                     l1593:
  4630   004208  0012               	return		;funcret
  4631   00420A                     __end_of_floorf:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function ___fpclassifyf *****************
  4635 ;; Defined at:
  4636 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  x               4    0[COMRAM] float 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  u               4   10[COMRAM] struct .
  4641 ;;  e               2    8[COMRAM] int 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  2    0[COMRAM] int 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;Total ram usage:       14 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_efgtoa
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text10
  4666   004BCC                     __ptext10:
  4667                           	callstack 0
  4668   004BCC                     ___fpclassifyf:
  4669                           	callstack 25
  4670   004BCC  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4671   004BD0  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4672   004BD4  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4673   004BD8  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4674   004BDC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4675   004BE0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4676   004BE4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4677   004BE8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4678   004BEC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4679   004BF0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4680   004BF4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4681   004BF8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4682   004BFC  0E18               	movlw	24
  4683   004BFE  EF06  F026         	goto	u4290
  4684   004C02                     u4295:
  4685   004C02  90D8               	bcf	status,0,c
  4686   004C04  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4687   004C06  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4688   004C08  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4689   004C0A  3205               	rrcf	??___fpclassifyf^0,f,c
  4690   004C0C                     u4290:
  4691   004C0C  2EE8               	decfsz	wreg,f,c
  4692   004C0E  EF01  F026         	goto	u4295
  4693   004C12  5005               	movf	??___fpclassifyf^0,w,c
  4694   004C14  6E09               	movwf	___fpclassifyf@e^0,c
  4695   004C16  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4696   004C18  5009               	movf	___fpclassifyf@e^0,w,c
  4697   004C1A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4698   004C1C  A4D8               	btfss	status,2,c
  4699   004C1E  EF13  F026         	goto	u4301
  4700   004C22  EF15  F026         	goto	u4300
  4701   004C26                     u4301:
  4702   004C26  EF35  F026         	goto	l4680
  4703   004C2A                     u4300:
  4704   004C2A  90D8               	bcf	status,0,c
  4705   004C2C  340B               	rlcf	___fpclassifyf@u^0,w,c
  4706   004C2E  6E05               	movwf	??___fpclassifyf^0,c
  4707   004C30  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4708   004C32  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4709   004C34  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4710   004C36  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4711   004C38  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4712   004C3A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4713   004C3C  5005               	movf	??___fpclassifyf^0,w,c
  4714   004C3E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4715   004C40  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4716   004C42  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4717   004C44  A4D8               	btfss	status,2,c
  4718   004C46  EF27  F026         	goto	u4311
  4719   004C4A  EF29  F026         	goto	u4310
  4720   004C4E                     u4311:
  4721   004C4E  EF2F  F026         	goto	l4676
  4722   004C52                     u4310:
  4723   004C52  0E00               	movlw	0
  4724   004C54  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4725   004C56  0E02               	movlw	2
  4726   004C58  6E01               	movwf	?___fpclassifyf^0,c
  4727   004C5A  EF64  F026         	goto	l1579
  4728   004C5E                     l4676:
  4729   004C5E  0E00               	movlw	0
  4730   004C60  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4731   004C62  0E03               	movlw	3
  4732   004C64  6E01               	movwf	?___fpclassifyf^0,c
  4733   004C66  EF64  F026         	goto	l1579
  4734   004C6A                     l4680:
  4735   004C6A  2809               	incf	___fpclassifyf@e^0,w,c
  4736   004C6C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4737   004C6E  A4D8               	btfss	status,2,c
  4738   004C70  EF3C  F026         	goto	u4321
  4739   004C74  EF3E  F026         	goto	u4320
  4740   004C78                     u4321:
  4741   004C78  EF60  F026         	goto	l4686
  4742   004C7C                     u4320:
  4743   004C7C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4744   004C80  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4745   004C84  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4746   004C88  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4747   004C8C  0E09               	movlw	9
  4748   004C8E                     u4335:
  4749   004C8E  90D8               	bcf	status,0,c
  4750   004C90  3605               	rlcf	??___fpclassifyf^0,f,c
  4751   004C92  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4752   004C94  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4753   004C96  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4754   004C98  2EE8               	decfsz	wreg,f,c
  4755   004C9A  EF47  F026         	goto	u4335
  4756   004C9E  5005               	movf	??___fpclassifyf^0,w,c
  4757   004CA0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4758   004CA2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4759   004CA4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4760   004CA6  B4D8               	btfsc	status,2,c
  4761   004CA8  EF58  F026         	goto	u4341
  4762   004CAC  EF5B  F026         	goto	u4340
  4763   004CB0                     u4341:
  4764   004CB0  0E01               	movlw	1
  4765   004CB2  EF5C  F026         	goto	u4350
  4766   004CB6                     u4340:
  4767   004CB6  0E00               	movlw	0
  4768   004CB8                     u4350:
  4769   004CB8  6E01               	movwf	?___fpclassifyf^0,c
  4770   004CBA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4771   004CBC  EF64  F026         	goto	l1579
  4772   004CC0                     l4686:
  4773   004CC0  0E00               	movlw	0
  4774   004CC2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4775   004CC4  0E04               	movlw	4
  4776   004CC6  6E01               	movwf	?___fpclassifyf^0,c
  4777   004CC8                     l1579:
  4778   004CC8  0012               	return		;funcret
  4779   004CCA                     __end_of___fpclassifyf:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function ___fltol *****************
  4783 ;; Defined at:
  4784 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  f1              4    0[COMRAM] int 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  exp1            1    9[COMRAM] unsigned char 
  4789 ;;  sign1           1    8[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  4    0[COMRAM] long 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:       10 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_reverseOneBlock
  4810 ;;		_ForwardOneBlock
  4811 ;;		_Forwardhalfblock
  4812 ;;		_efgtoa
  4813 ;;		_Backhalfblock
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text11
  4818   0049C2                     __ptext11:
  4819                           	callstack 0
  4820   0049C2                     ___fltol:
  4821                           	callstack 25
  4822   0049C2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4823   0049C4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4824   0049C6  6E0A               	movwf	___fltol@exp1^0,c
  4825   0049C8  500A               	movf	___fltol@exp1^0,w,c
  4826   0049CA  A4D8               	btfss	status,2,c
  4827   0049CC  EFEA  F024         	goto	u4191
  4828   0049D0  EFEC  F024         	goto	u4190
  4829   0049D4                     u4191:
  4830   0049D4  EFF6  F024         	goto	l4612
  4831   0049D8                     u4190:
  4832   0049D8                     l4608:
  4833   0049D8  0E00               	movlw	0
  4834   0049DA  6E01               	movwf	?___fltol^0,c
  4835   0049DC  0E00               	movlw	0
  4836   0049DE  6E02               	movwf	(?___fltol+1)^0,c
  4837   0049E0  0E00               	movlw	0
  4838   0049E2  6E03               	movwf	(?___fltol+2)^0,c
  4839   0049E4  0E00               	movlw	0
  4840   0049E6  6E04               	movwf	(?___fltol+3)^0,c
  4841   0049E8  EF63  F025         	goto	l1052
  4842   0049EC                     l4612:
  4843   0049EC  C001  F005         	movff	___fltol@f1,??___fltol
  4844   0049F0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4845   0049F4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4846   0049F8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4847   0049FC  0E20               	movlw	32
  4848   0049FE  EF06  F025         	goto	u4200
  4849   004A02                     u4205:
  4850   004A02  90D8               	bcf	status,0,c
  4851   004A04  3208               	rrcf	(??___fltol+3)^0,f,c
  4852   004A06  3207               	rrcf	(??___fltol+2)^0,f,c
  4853   004A08  3206               	rrcf	(??___fltol+1)^0,f,c
  4854   004A0A  3205               	rrcf	??___fltol^0,f,c
  4855   004A0C                     u4200:
  4856   004A0C  2EE8               	decfsz	wreg,f,c
  4857   004A0E  EF01  F025         	goto	u4205
  4858   004A12  5005               	movf	??___fltol^0,w,c
  4859   004A14  6E09               	movwf	___fltol@sign1^0,c
  4860   004A16  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4861   004A18  0EFF               	movlw	255
  4862   004A1A  1601               	andwf	___fltol@f1^0,f,c
  4863   004A1C  0EFF               	movlw	255
  4864   004A1E  1602               	andwf	(___fltol@f1+1)^0,f,c
  4865   004A20  0EFF               	movlw	255
  4866   004A22  1603               	andwf	(___fltol@f1+2)^0,f,c
  4867   004A24  0E00               	movlw	0
  4868   004A26  1604               	andwf	(___fltol@f1+3)^0,f,c
  4869   004A28  0E96               	movlw	150
  4870   004A2A  5E0A               	subwf	___fltol@exp1^0,f,c
  4871   004A2C  BE0A               	btfsc	___fltol@exp1^0,7,c
  4872   004A2E  EF1D  F025         	goto	u4210
  4873   004A32  EF1B  F025         	goto	u4211
  4874   004A36                     u4211:
  4875   004A36  EF33  F025         	goto	l4632
  4876   004A3A                     u4210:
  4877   004A3A  500A               	movf	___fltol@exp1^0,w,c
  4878   004A3C  0A80               	xorlw	128
  4879   004A3E  0F97               	addlw	151
  4880   004A40  B0D8               	btfsc	status,0,c
  4881   004A42  EF25  F025         	goto	u4221
  4882   004A46  EF27  F025         	goto	u4220
  4883   004A4A                     u4221:
  4884   004A4A  EF29  F025         	goto	l4628
  4885   004A4E                     u4220:
  4886   004A4E  EFEC  F024         	goto	l4608
  4887   004A52                     l4628:
  4888   004A52  90D8               	bcf	status,0,c
  4889   004A54  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4890   004A56  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4891   004A58  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4892   004A5A  3201               	rrcf	___fltol@f1^0,f,c
  4893   004A5C  3E0A               	incfsz	___fltol@exp1^0,f,c
  4894   004A5E  EF29  F025         	goto	l4628
  4895   004A62  EF4B  F025         	goto	l4642
  4896   004A66                     l4632:
  4897   004A66  0E1F               	movlw	31
  4898   004A68  640A               	cpfsgt	___fltol@exp1^0,c
  4899   004A6A  EF39  F025         	goto	u4231
  4900   004A6E  EF3B  F025         	goto	u4230
  4901   004A72                     u4231:
  4902   004A72  EF43  F025         	goto	l4640
  4903   004A76                     u4230:
  4904   004A76  EFEC  F024         	goto	l4608
  4905   004A7A                     l4638:
  4906   004A7A  90D8               	bcf	status,0,c
  4907   004A7C  3601               	rlcf	___fltol@f1^0,f,c
  4908   004A7E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4909   004A80  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4910   004A82  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4911   004A84  060A               	decf	___fltol@exp1^0,f,c
  4912   004A86                     l4640:
  4913   004A86  500A               	movf	___fltol@exp1^0,w,c
  4914   004A88  A4D8               	btfss	status,2,c
  4915   004A8A  EF49  F025         	goto	u4241
  4916   004A8E  EF4B  F025         	goto	u4240
  4917   004A92                     u4241:
  4918   004A92  EF3D  F025         	goto	l4638
  4919   004A96                     u4240:
  4920   004A96                     l4642:
  4921   004A96  5009               	movf	___fltol@sign1^0,w,c
  4922   004A98  B4D8               	btfsc	status,2,c
  4923   004A9A  EF51  F025         	goto	u4251
  4924   004A9E  EF53  F025         	goto	u4250
  4925   004AA2                     u4251:
  4926   004AA2  EF5B  F025         	goto	l4646
  4927   004AA6                     u4250:
  4928   004AA6  1E04               	comf	(___fltol@f1+3)^0,f,c
  4929   004AA8  1E03               	comf	(___fltol@f1+2)^0,f,c
  4930   004AAA  1E02               	comf	(___fltol@f1+1)^0,f,c
  4931   004AAC  6C01               	negf	___fltol@f1^0,c
  4932   004AAE  0E00               	movlw	0
  4933   004AB0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4934   004AB2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4935   004AB4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4936   004AB6                     l4646:
  4937   004AB6  C001  F001         	movff	___fltol@f1,?___fltol
  4938   004ABA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4939   004ABE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4940   004AC2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4941   004AC6                     l1052:
  4942   004AC6  0012               	return		;funcret
  4943   004AC8                     __end_of___fltol:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function ___flneg *****************
  4947 ;; Defined at:
  4948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  f1              4    0[COMRAM] long 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  4    0[COMRAM] long 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_efgtoa
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text12
  4977   005EC2                     __ptext12:
  4978                           	callstack 0
  4979   005EC2                     ___flneg:
  4980                           	callstack 25
  4981   005EC2  5001               	movf	___flneg@f1^0,w,c
  4982   005EC4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4983   005EC6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4984   005EC8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4985   005ECA  B4D8               	btfsc	status,2,c
  4986   005ECC  EF6A  F02F         	goto	u4181
  4987   005ED0  EF6C  F02F         	goto	u4180
  4988   005ED4                     u4181:
  4989   005ED4  EF74  F02F         	goto	l4602
  4990   005ED8                     u4180:
  4991   005ED8  0E00               	movlw	0
  4992   005EDA  1A01               	xorwf	___flneg@f1^0,f,c
  4993   005EDC  0E00               	movlw	0
  4994   005EDE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4995   005EE0  0E00               	movlw	0
  4996   005EE2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4997   005EE4  0E80               	movlw	128
  4998   005EE6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4999   005EE8                     l4602:
  5000   005EE8  C001  F001         	movff	___flneg@f1,?___flneg
  5001   005EEC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5002   005EF0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5003   005EF4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5004   005EF8  0012               	return		;funcret
  5005   005EFA                     __end_of___flneg:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _dtoa *****************
  5009 ;; Defined at:
  5010 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5013 ;;		 -> sprintf@f(11), 
  5014 ;;  d               8   29[COMRAM] long long 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  n               8   51[COMRAM] long long 
  5017 ;;  i               2   59[COMRAM] int 
  5018 ;;  w               2   49[COMRAM] int 
  5019 ;;  p               2   47[COMRAM] int 
  5020 ;;  s               1   61[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5030 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:       35 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 5
  5037 ;; This function calls:
  5038 ;;		___aodiv
  5039 ;;		___aomod
  5040 ;;		_abs
  5041 ;;		_pad
  5042 ;; This function is called by:
  5043 ;;		_vfpfcnvrt
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text13
  5048   003B02                     __ptext13:
  5049                           	callstack 0
  5050   003B02                     _dtoa:
  5051                           	callstack 22
  5052   003B02                     
  5053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5054   003B02  C01E  F034         	movff	dtoa@d,dtoa@n
  5055   003B06  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5056   003B0A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5057   003B0E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5058   003B12  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5059   003B16  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5060   003B1A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5061   003B1E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5062   003B22                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5064   003B22  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5065   003B24  EF96  F01D         	goto	u4521
  5066   003B28  EF99  F01D         	goto	u4520
  5067   003B2C                     u4521:
  5068   003B2C  0E01               	movlw	1
  5069   003B2E  EF9A  F01D         	goto	u4530
  5070   003B32                     u4520:
  5071   003B32  0E00               	movlw	0
  5072   003B34                     u4530:
  5073   003B34  6E3E               	movwf	dtoa@s^0,c
  5074   003B36                     
  5075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5076   003B36  503E               	movf	dtoa@s^0,w,c
  5077   003B38  B4D8               	btfsc	status,2,c
  5078   003B3A  EFA1  F01D         	goto	u4541
  5079   003B3E  EFA3  F01D         	goto	u4540
  5080   003B42                     u4541:
  5081   003B42  EFB3  F01D         	goto	l4784
  5082   003B46                     u4540:
  5083   003B46                     
  5084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5085   003B46  1E3B               	comf	(dtoa@n+7)^0,f,c
  5086   003B48  1E3A               	comf	(dtoa@n+6)^0,f,c
  5087   003B4A  1E39               	comf	(dtoa@n+5)^0,f,c
  5088   003B4C  1E38               	comf	(dtoa@n+4)^0,f,c
  5089   003B4E  1E37               	comf	(dtoa@n+3)^0,f,c
  5090   003B50  1E36               	comf	(dtoa@n+2)^0,f,c
  5091   003B52  1E35               	comf	(dtoa@n+1)^0,f,c
  5092   003B54  6C34               	negf	dtoa@n^0,c
  5093   003B56  0E00               	movlw	0
  5094   003B58  2235               	addwfc	(dtoa@n+1)^0,f,c
  5095   003B5A  2236               	addwfc	(dtoa@n+2)^0,f,c
  5096   003B5C  2237               	addwfc	(dtoa@n+3)^0,f,c
  5097   003B5E  2238               	addwfc	(dtoa@n+4)^0,f,c
  5098   003B60  2239               	addwfc	(dtoa@n+5)^0,f,c
  5099   003B62  223A               	addwfc	(dtoa@n+6)^0,f,c
  5100   003B64  223B               	addwfc	(dtoa@n+7)^0,f,c
  5101   003B66                     l4784:
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5104   003B66  0100               	movlb	0	; () banked
  5105   003B68  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5106   003B6A  EFC1  F01D         	goto	u4550
  5107   003B6E  51EA               	movf	(_prec+1)& (0+255),w,b
  5108   003B70  E106               	bnz	u4551
  5109   003B72  05E9               	decf	_prec& (0+255),w,b
  5110   003B74  B0D8               	btfsc	status,0,c
  5111   003B76  EFBF  F01D         	goto	u4551
  5112   003B7A  EFC1  F01D         	goto	u4550
  5113   003B7E                     u4551:
  5114   003B7E  EFC7  F01D         	goto	l1474
  5115   003B82                     u4550:
  5116   003B82                     
  5117                           ; BSR set to: 0
  5118   003B82  0E00               	movlw	0
  5119   003B84  6E31               	movwf	(dtoa@p+1)^0,c
  5120   003B86  0E01               	movlw	1
  5121   003B88  6E30               	movwf	dtoa@p^0,c
  5122   003B8A  EFCB  F01D         	goto	l1476
  5123   003B8E                     l1474:
  5124                           
  5125                           ; BSR set to: 0
  5126   003B8E  C0E9  F030         	movff	_prec,dtoa@p
  5127   003B92  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5128   003B96                     l1476:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5132   003B96  C0E7  F032         	movff	_width,dtoa@w
  5133   003B9A  C0E8  F033         	movff	_width+1,dtoa@w+1
  5134   003B9E                     
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5137   003B9E  503E               	movf	dtoa@s^0,w,c
  5138   003BA0  B4D8               	btfsc	status,2,c
  5139   003BA2  EFD5  F01D         	goto	u4561
  5140   003BA6  EFD7  F01D         	goto	u4560
  5141   003BAA                     u4561:
  5142   003BAA  EFEE  F01D         	goto	l1477
  5143   003BAE                     u4560:
  5144   003BAE                     
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5147   003BAE  0632               	decf	dtoa@w^0,f,c
  5148   003BB0  A0D8               	btfss	status,0,c
  5149   003BB2  0633               	decf	(dtoa@w+1)^0,f,c
  5150   003BB4                     
  5151                           ; BSR set to: 0
  5152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5153   003BB4  503E               	movf	dtoa@s^0,w,c
  5154   003BB6  A4D8               	btfss	status,2,c
  5155   003BB8  EFE0  F01D         	goto	u4571
  5156   003BBC  EFE2  F01D         	goto	u4570
  5157   003BC0                     u4571:
  5158   003BC0  EFE8  F01D         	goto	l4796
  5159   003BC4                     u4570:
  5160   003BC4                     
  5161                           ; BSR set to: 0
  5162   003BC4  0E00               	movlw	0
  5163   003BC6  6E2F               	movwf	(_dtoa$2864+1)^0,c
  5164   003BC8  0E2B               	movlw	43
  5165   003BCA  6E2E               	movwf	_dtoa$2864^0,c
  5166   003BCC  EFEC  F01D         	goto	l4798
  5167   003BD0                     l4796:
  5168                           
  5169                           ; BSR set to: 0
  5170   003BD0  0E00               	movlw	0
  5171   003BD2  6E2F               	movwf	(_dtoa$2864+1)^0,c
  5172   003BD4  0E2D               	movlw	45
  5173   003BD6  6E2E               	movwf	_dtoa$2864^0,c
  5174   003BD8                     l4798:
  5175                           
  5176                           ; BSR set to: 0
  5177   003BD8  C02E  F03E         	movff	_dtoa$2864,dtoa@s
  5178   003BDC                     l1477:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5182   003BDC  0E00               	movlw	0
  5183   003BDE  6E3D               	movwf	(dtoa@i+1)^0,c
  5184   003BE0  0E4F               	movlw	79
  5185   003BE2  6E3C               	movwf	dtoa@i^0,c
  5186   003BE4                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5189   003BE4  0E00               	movlw	0
  5190   003BE6  0102               	movlb	2	; () banked
  5191   003BE8  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5192                           
  5193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5194   003BEA  EF73  F01E         	goto	l4812
  5195   003BEE                     l4802:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5198   003BEE  063C               	decf	dtoa@i^0,f,c
  5199   003BF0  A0D8               	btfss	status,0,c
  5200   003BF2  063D               	decf	(dtoa@i+1)^0,f,c
  5201   003BF4                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5203   003BF4  0EA0               	movlw	low _dbuf
  5204   003BF6  243C               	addwf	dtoa@i^0,w,c
  5205   003BF8  6ED9               	movwf	fsr2l,c
  5206   003BFA  0E02               	movlw	high _dbuf
  5207   003BFC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5208   003BFE  6EDA               	movwf	fsr2h,c
  5209   003C00  C034  F001         	movff	dtoa@n,___aomod@dividend
  5210   003C04  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5211   003C08  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5212   003C0C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5213   003C10  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5214   003C14  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5215   003C18  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5216   003C1C  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5217   003C20  0E0A               	movlw	10
  5218   003C22  6E09               	movwf	___aomod@divisor^0,c
  5219   003C24  0E00               	movlw	0
  5220   003C26  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5221   003C28  0E00               	movlw	0
  5222   003C2A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5223   003C2C  0E00               	movlw	0
  5224   003C2E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5225   003C30  0E00               	movlw	0
  5226   003C32  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5227   003C34  0E00               	movlw	0
  5228   003C36  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5229   003C38  0E00               	movlw	0
  5230   003C3A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5231   003C3C  0E00               	movlw	0
  5232   003C3E  6E10               	movwf	(___aomod@divisor+7)^0,c
  5233   003C40  EC2F  F024         	call	___aomod	;wreg free
  5234   003C44  C001  F026         	movff	?___aomod,??_dtoa
  5235   003C48  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5236   003C4C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5237   003C50  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5238   003C54  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5239   003C58  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5240   003C5C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5241   003C60  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5242   003C64  C026  F013         	movff	??_dtoa,abs@a
  5243   003C68  C027  F014         	movff	??_dtoa+1,abs@a+1
  5244   003C6C  EC03  F02F         	call	_abs	;wreg free
  5245   003C70  5013               	movf	?_abs^0,w,c
  5246   003C72  0F30               	addlw	48
  5247   003C74  6EDF               	movwf	indf2,c
  5248   003C76                     
  5249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5250   003C76  0630               	decf	dtoa@p^0,f,c
  5251   003C78  A0D8               	btfss	status,0,c
  5252   003C7A  0631               	decf	(dtoa@p+1)^0,f,c
  5253   003C7C                     
  5254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5255   003C7C  0632               	decf	dtoa@w^0,f,c
  5256   003C7E  A0D8               	btfss	status,0,c
  5257   003C80  0633               	decf	(dtoa@w+1)^0,f,c
  5258   003C82                     
  5259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5260   003C82  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5261   003C86  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5262   003C8A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5263   003C8E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5264   003C92  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5265   003C96  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5266   003C9A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5267   003C9E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5268   003CA2  0E0A               	movlw	10
  5269   003CA4  6E09               	movwf	___aodiv@divisor^0,c
  5270   003CA6  0E00               	movlw	0
  5271   003CA8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5272   003CAA  0E00               	movlw	0
  5273   003CAC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5274   003CAE  0E00               	movlw	0
  5275   003CB0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5276   003CB2  0E00               	movlw	0
  5277   003CB4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5278   003CB6  0E00               	movlw	0
  5279   003CB8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5280   003CBA  0E00               	movlw	0
  5281   003CBC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5282   003CBE  0E00               	movlw	0
  5283   003CC0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5284   003CC2  ECB5  F022         	call	___aodiv	;wreg free
  5285   003CC6  C001  F034         	movff	?___aodiv,dtoa@n
  5286   003CCA  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5287   003CCE  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5288   003CD2  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5289   003CD6  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5290   003CDA  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5291   003CDE  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5292   003CE2  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5293   003CE6                     l4812:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5296   003CE6  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5297   003CE8  EF7E  F01E         	goto	u4581
  5298   003CEC  503D               	movf	(dtoa@i+1)^0,w,c
  5299   003CEE  E108               	bnz	u4580
  5300   003CF0  043C               	decf	dtoa@i^0,w,c
  5301   003CF2  A0D8               	btfss	status,0,c
  5302   003CF4  EF7E  F01E         	goto	u4581
  5303   003CF8  EF80  F01E         	goto	u4580
  5304   003CFC                     u4581:
  5305   003CFC  EF9C  F01E         	goto	l4818
  5306   003D00                     u4580:
  5307   003D00  5034               	movf	dtoa@n^0,w,c
  5308   003D02  1035               	iorwf	(dtoa@n+1)^0,w,c
  5309   003D04  1036               	iorwf	(dtoa@n+2)^0,w,c
  5310   003D06  1037               	iorwf	(dtoa@n+3)^0,w,c
  5311   003D08  1038               	iorwf	(dtoa@n+4)^0,w,c
  5312   003D0A  1039               	iorwf	(dtoa@n+5)^0,w,c
  5313   003D0C  103A               	iorwf	(dtoa@n+6)^0,w,c
  5314   003D0E  103B               	iorwf	(dtoa@n+7)^0,w,c
  5315   003D10  A4D8               	btfss	status,2,c
  5316   003D12  EF8D  F01E         	goto	u4591
  5317   003D16  EF8F  F01E         	goto	u4590
  5318   003D1A                     u4591:
  5319   003D1A  EFF7  F01D         	goto	l4802
  5320   003D1E                     u4590:
  5321   003D1E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5322   003D20  EF9C  F01E         	goto	u4600
  5323   003D24  5031               	movf	(dtoa@p+1)^0,w,c
  5324   003D26  E106               	bnz	u4601
  5325   003D28  0430               	decf	dtoa@p^0,w,c
  5326   003D2A  B0D8               	btfsc	status,0,c
  5327   003D2C  EF9A  F01E         	goto	u4601
  5328   003D30  EF9C  F01E         	goto	u4600
  5329   003D34                     u4601:
  5330   003D34  EFF7  F01D         	goto	l4802
  5331   003D38                     u4600:
  5332   003D38                     l4818:
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5335   003D38  503E               	movf	dtoa@s^0,w,c
  5336   003D3A  B4D8               	btfsc	status,2,c
  5337   003D3C  EFA2  F01E         	goto	u4611
  5338   003D40  EFA4  F01E         	goto	u4610
  5339   003D44                     u4611:
  5340   003D44  EFAF  F01E         	goto	l4824
  5341   003D48                     u4610:
  5342   003D48                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5344   003D48  063C               	decf	dtoa@i^0,f,c
  5345   003D4A  A0D8               	btfss	status,0,c
  5346   003D4C  063D               	decf	(dtoa@i+1)^0,f,c
  5347   003D4E                     
  5348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5349   003D4E  0EA0               	movlw	low _dbuf
  5350   003D50  243C               	addwf	dtoa@i^0,w,c
  5351   003D52  6ED9               	movwf	fsr2l,c
  5352   003D54  0E02               	movlw	high _dbuf
  5353   003D56  203D               	addwfc	(dtoa@i+1)^0,w,c
  5354   003D58  6EDA               	movwf	fsr2h,c
  5355   003D5A  C03E  FFDF         	movff	dtoa@s,indf2
  5356   003D5E                     l4824:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5359   003D5E  C01C  F011         	movff	dtoa@fp,pad@fp
  5360   003D62  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5361   003D66  0EA0               	movlw	low _dbuf
  5362   003D68  243C               	addwf	dtoa@i^0,w,c
  5363   003D6A  6E13               	movwf	pad@buf^0,c
  5364   003D6C  0E02               	movlw	high _dbuf
  5365   003D6E  203D               	addwfc	(dtoa@i+1)^0,w,c
  5366   003D70  6E14               	movwf	(pad@buf+1)^0,c
  5367   003D72  C032  F015         	movff	dtoa@w,pad@p
  5368   003D76  C033  F016         	movff	dtoa@w+1,pad@p+1
  5369   003D7A  ECE9  F029         	call	_pad	;wreg free
  5370   003D7E  0012               	return		;funcret
  5371   003D80                     __end_of_dtoa:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _pad *****************
  5375 ;; Defined at:
  5376 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5379 ;;		 -> sprintf@f(11), 
  5380 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5381 ;;		 -> dbuf(80), 
  5382 ;;  p               2   20[COMRAM] int 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  w               2   25[COMRAM] int 
  5385 ;;  i               2   23[COMRAM] int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:       11 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 4
  5402 ;; This function calls:
  5403 ;;		_fputc
  5404 ;;		_fputs
  5405 ;; This function is called by:
  5406 ;;		_dtoa
  5407 ;;		_efgtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text14
  5412   0053D2                     __ptext14:
  5413                           	callstack 0
  5414   0053D2                     _pad:
  5415                           	callstack 22
  5416   0053D2                     
  5417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5418   0053D2  BE16               	btfsc	(pad@p+1)^0,7,c
  5419   0053D4  EFEE  F029         	goto	u4261
  5420   0053D8  EFF0  F029         	goto	u4260
  5421   0053DC                     u4261:
  5422   0053DC  EFF6  F029         	goto	l4654
  5423   0053E0                     u4260:
  5424   0053E0  C015  F01A         	movff	pad@p,pad@w
  5425   0053E4  C016  F01B         	movff	pad@p+1,pad@w+1
  5426   0053E8  EFFA  F029         	goto	l1465
  5427   0053EC                     l4654:
  5428   0053EC  0E00               	movlw	0
  5429   0053EE  6E1B               	movwf	(pad@w+1)^0,c
  5430   0053F0  0E00               	movlw	0
  5431   0053F2  6E1A               	movwf	pad@w^0,c
  5432   0053F4                     l1465:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5435   0053F4  0E00               	movlw	0
  5436   0053F6  6E19               	movwf	(pad@i+1)^0,c
  5437   0053F8  0E00               	movlw	0
  5438   0053FA  6E18               	movwf	pad@i^0,c
  5439                           
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5441   0053FC  EF0C  F02A         	goto	l4660
  5442   005400                     l4656:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5445   005400  0E00               	movlw	0
  5446   005402  6E02               	movwf	(fputc@c+1)^0,c
  5447   005404  0E20               	movlw	32
  5448   005406  6E01               	movwf	fputc@c^0,c
  5449   005408  C011  F003         	movff	pad@fp,fputc@fp
  5450   00540C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5451   005410  EC65  F026         	call	_fputc	;wreg free
  5452   005414                     
  5453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5454   005414  4A18               	infsnz	pad@i^0,f,c
  5455   005416  2A19               	incf	(pad@i+1)^0,f,c
  5456   005418                     l4660:
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5459   005418  501A               	movf	pad@w^0,w,c
  5460   00541A  5C18               	subwf	pad@i^0,w,c
  5461   00541C  5019               	movf	(pad@i+1)^0,w,c
  5462   00541E  0A80               	xorlw	128
  5463   005420  6E17               	movwf	??_pad^0,c
  5464   005422  501B               	movf	(pad@w+1)^0,w,c
  5465   005424  0A80               	xorlw	128
  5466   005426  5817               	subwfb	??_pad^0,w,c
  5467   005428  A0D8               	btfss	status,0,c
  5468   00542A  EF19  F02A         	goto	u4271
  5469   00542E  EF1B  F02A         	goto	u4270
  5470   005432                     u4271:
  5471   005432  EF00  F02A         	goto	l4656
  5472   005436                     u4270:
  5473   005436                     
  5474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5475   005436  C013  F00A         	movff	pad@buf,fputs@s
  5476   00543A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5477   00543E  C011  F00C         	movff	pad@fp,fputs@fp
  5478   005442  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5479   005446  ECC0  F02E         	call	_fputs	;wreg free
  5480   00544A  0012               	return		;funcret
  5481   00544C                     __end_of_pad:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function _fputs *****************
  5485 ;; Defined at:
  5486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5489 ;;		 -> dbuf(80), 
  5490 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5491 ;;		 -> sprintf@f(11), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  i               2   14[COMRAM] int 
  5494 ;;  c               1   13[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    9[COMRAM] int 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;Total ram usage:        7 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 3
  5511 ;; This function calls:
  5512 ;;		_fputc
  5513 ;; This function is called by:
  5514 ;;		_pad
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text15
  5519   005D80                     __ptext15:
  5520                           	callstack 0
  5521   005D80                     _fputs:
  5522                           	callstack 22
  5523   005D80  0E00               	movlw	0
  5524   005D82  6E10               	movwf	(fputs@i+1)^0,c
  5525   005D84  0E00               	movlw	0
  5526   005D86  6E0F               	movwf	fputs@i^0,c
  5527   005D88  EFD1  F02E         	goto	l4128
  5528   005D8C                     l4124:
  5529   005D8C  C00E  F001         	movff	fputs@c,fputc@c
  5530   005D90  6A02               	clrf	(fputc@c+1)^0,c
  5531   005D92  C00C  F003         	movff	fputs@fp,fputc@fp
  5532   005D96  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5533   005D9A  EC65  F026         	call	_fputc	;wreg free
  5534   005D9E  4A0F               	infsnz	fputs@i^0,f,c
  5535   005DA0  2A10               	incf	(fputs@i+1)^0,f,c
  5536   005DA2                     l4128:
  5537   005DA2  500F               	movf	fputs@i^0,w,c
  5538   005DA4  240A               	addwf	fputs@s^0,w,c
  5539   005DA6  6ED9               	movwf	fsr2l,c
  5540   005DA8  5010               	movf	(fputs@i+1)^0,w,c
  5541   005DAA  200B               	addwfc	(fputs@s+1)^0,w,c
  5542   005DAC  6EDA               	movwf	fsr2h,c
  5543   005DAE  50DF               	movf	indf2,w,c
  5544   005DB0  6E0E               	movwf	fputs@c^0,c
  5545   005DB2  500E               	movf	fputs@c^0,w,c
  5546   005DB4  A4D8               	btfss	status,2,c
  5547   005DB6  EFDF  F02E         	goto	u3431
  5548   005DBA  EFE1  F02E         	goto	u3430
  5549   005DBE                     u3431:
  5550   005DBE  EFC6  F02E         	goto	l4124
  5551   005DC2                     u3430:
  5552   005DC2  0012               	return		;funcret
  5553   005DC4                     __end_of_fputs:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _fputc *****************
  5557 ;; Defined at:
  5558 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  c               2    0[COMRAM] int 
  5561 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5562 ;;		 -> sprintf@f(11), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2    0[COMRAM] int 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;Total ram usage:        9 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 2
  5581 ;; This function calls:
  5582 ;;		_putch
  5583 ;; This function is called by:
  5584 ;;		_pad
  5585 ;;		_vfpfcnvrt
  5586 ;;		_fputs
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text16
  5591   004CCA                     __ptext16:
  5592                           	callstack 0
  5593   004CCA                     _fputc:
  5594                           	callstack 25
  5595   004CCA  5003               	movf	fputc@fp^0,w,c
  5596   004CCC  1004               	iorwf	(fputc@fp+1)^0,w,c
  5597   004CCE  B4D8               	btfsc	status,2,c
  5598   004CD0  EF6C  F026         	goto	u2981
  5599   004CD4  EF6E  F026         	goto	u2980
  5600   004CD8                     u2981:
  5601   004CD8  EF77  F026         	goto	l3894
  5602   004CDC                     u2980:
  5603   004CDC  5003               	movf	fputc@fp^0,w,c
  5604   004CDE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5605   004CE0  A4D8               	btfss	status,2,c
  5606   004CE2  EF75  F026         	goto	u2991
  5607   004CE6  EF77  F026         	goto	u2990
  5608   004CEA                     u2991:
  5609   004CEA  EF7C  F026         	goto	l3896
  5610   004CEE                     u2990:
  5611   004CEE                     l3894:
  5612   004CEE  5001               	movf	fputc@c^0,w,c
  5613   004CF0  EC7C  F030         	call	_putch
  5614   004CF4  EFC9  F026         	goto	l1625
  5615   004CF8                     l3896:
  5616   004CF8  EE20 F009          	lfsr	2,9
  5617   004CFC  5003               	movf	fputc@fp^0,w,c
  5618   004CFE  26D9               	addwf	fsr2l,f,c
  5619   004D00  5004               	movf	(fputc@fp+1)^0,w,c
  5620   004D02  22DA               	addwfc	fsr2h,f,c
  5621   004D04  50DE               	movf	postinc2,w,c
  5622   004D06  10DE               	iorwf	postinc2,w,c
  5623   004D08  B4D8               	btfsc	status,2,c
  5624   004D0A  EF89  F026         	goto	u3001
  5625   004D0E  EF8B  F026         	goto	u3000
  5626   004D12                     u3001:
  5627   004D12  EFA6  F026         	goto	l3900
  5628   004D16                     u3000:
  5629   004D16  EE20 F009          	lfsr	2,9
  5630   004D1A  5003               	movf	fputc@fp^0,w,c
  5631   004D1C  26D9               	addwf	fsr2l,f,c
  5632   004D1E  5004               	movf	(fputc@fp+1)^0,w,c
  5633   004D20  22DA               	addwfc	fsr2h,f,c
  5634   004D22  EE10 F003          	lfsr	1,3
  5635   004D26  5003               	movf	fputc@fp^0,w,c
  5636   004D28  26E1               	addwf	fsr1l,f,c
  5637   004D2A  5004               	movf	(fputc@fp+1)^0,w,c
  5638   004D2C  22E2               	addwfc	fsr1h,f,c
  5639   004D2E  50DE               	movf	postinc2,w,c
  5640   004D30  5CE6               	subwf	postinc1,w,c
  5641   004D32  50E6               	movf	postinc1,w,c
  5642   004D34  0A80               	xorlw	128
  5643   004D36  6E09               	movwf	(??_fputc+4)^0,c
  5644   004D38  50DE               	movf	postinc2,w,c
  5645   004D3A  0A80               	xorlw	128
  5646   004D3C  5809               	subwfb	(??_fputc+4)^0,w,c
  5647   004D3E  B0D8               	btfsc	status,0,c
  5648   004D40  EFA4  F026         	goto	u3011
  5649   004D44  EFA6  F026         	goto	u3010
  5650   004D48                     u3011:
  5651   004D48  EFC9  F026         	goto	l1625
  5652   004D4C                     u3010:
  5653   004D4C                     l3900:
  5654   004D4C  EE20 F003          	lfsr	2,3
  5655   004D50  5003               	movf	fputc@fp^0,w,c
  5656   004D52  26D9               	addwf	fsr2l,f,c
  5657   004D54  5004               	movf	(fputc@fp+1)^0,w,c
  5658   004D56  22DA               	addwfc	fsr2h,f,c
  5659   004D58  CFDE F005          	movff	postinc2,??_fputc
  5660   004D5C  CFDD F006          	movff	postdec2,??_fputc+1
  5661   004D60  C003  FFD9         	movff	fputc@fp,fsr2l
  5662   004D64  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5663   004D68  CFDE F007          	movff	postinc2,??_fputc+2
  5664   004D6C  CFDD F008          	movff	postdec2,??_fputc+3
  5665   004D70  5005               	movf	??_fputc^0,w,c
  5666   004D72  2407               	addwf	(??_fputc+2)^0,w,c
  5667   004D74  6ED9               	movwf	fsr2l,c
  5668   004D76  5006               	movf	(??_fputc+1)^0,w,c
  5669   004D78  2008               	addwfc	(??_fputc+3)^0,w,c
  5670   004D7A  6EDA               	movwf	fsr2h,c
  5671   004D7C  C001  FFDF         	movff	fputc@c,indf2
  5672   004D80  EE20 F003          	lfsr	2,3
  5673   004D84  5003               	movf	fputc@fp^0,w,c
  5674   004D86  26D9               	addwf	fsr2l,f,c
  5675   004D88  5004               	movf	(fputc@fp+1)^0,w,c
  5676   004D8A  22DA               	addwfc	fsr2h,f,c
  5677   004D8C  2ADE               	incf	postinc2,f,c
  5678   004D8E  0E00               	movlw	0
  5679   004D90  22DD               	addwfc	postdec2,f,c
  5680   004D92                     l1625:
  5681   004D92  0012               	return		;funcret
  5682   004D94                     __end_of_fputc:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _putch *****************
  5686 ;; Defined at:
  5687 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  c               1    wreg     unsigned char 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  c               1    0[COMRAM] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_fputc
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text17
  5716   0060F8                     __ptext17:
  5717                           	callstack 0
  5718   0060F8                     _putch:
  5719                           	callstack 25
  5720   0060F8  0012               	return		;funcret
  5721   0060FA                     __end_of_putch:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _abs *****************
  5725 ;; Defined at:
  5726 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  a               2   18[COMRAM] int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  2   18[COMRAM] int 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:        4 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_dtoa
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text18
  5755   005E06                     __ptext18:
  5756                           	callstack 0
  5757   005E06                     _abs:
  5758                           	callstack 25
  5759   005E06  BE14               	btfsc	(abs@a+1)^0,7,c
  5760   005E08  EF10  F02F         	goto	u4280
  5761   005E0C  5014               	movf	(abs@a+1)^0,w,c
  5762   005E0E  E106               	bnz	u4281
  5763   005E10  0413               	decf	abs@a^0,w,c
  5764   005E12  B0D8               	btfsc	status,0,c
  5765   005E14  EF0E  F02F         	goto	u4281
  5766   005E18  EF10  F02F         	goto	u4280
  5767   005E1C                     u4281:
  5768   005E1C  EF1E  F02F         	goto	l1584
  5769   005E20                     u4280:
  5770   005E20  C013  F015         	movff	abs@a,??_abs
  5771   005E24  C014  F016         	movff	abs@a+1,??_abs+1
  5772   005E28  1E15               	comf	??_abs^0,f,c
  5773   005E2A  1E16               	comf	(??_abs+1)^0,f,c
  5774   005E2C  4A15               	infsnz	??_abs^0,f,c
  5775   005E2E  2A16               	incf	(??_abs+1)^0,f,c
  5776   005E30  C015  F013         	movff	??_abs,?_abs
  5777   005E34  C016  F014         	movff	??_abs+1,?_abs+1
  5778   005E38  EF22  F02F         	goto	l1587
  5779   005E3C                     l1584:
  5780   005E3C  C013  F013         	movff	abs@a,?_abs
  5781   005E40  C014  F014         	movff	abs@a+1,?_abs+1
  5782   005E44                     l1587:
  5783   005E44  0012               	return		;funcret
  5784   005E46                     __end_of_abs:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function ___aomod *****************
  5788 ;; Defined at:
  5789 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  dividend        8    0[COMRAM] long long 
  5792 ;;  divisor         8    8[COMRAM] long long 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  sign            1   17[COMRAM] unsigned char 
  5795 ;;  counter         1   16[COMRAM] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  8    0[COMRAM] long long 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5805 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;Total ram usage:       18 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; Hardware stack levels required when called: 1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_dtoa
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text19
  5820   00485E                     __ptext19:
  5821                           	callstack 0
  5822   00485E                     ___aomod:
  5823                           	callstack 25
  5824   00485E  0E00               	movlw	0
  5825   004860  6E12               	movwf	___aomod@sign^0,c
  5826   004862  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5827   004864  EF38  F024         	goto	u3620
  5828   004868  EF36  F024         	goto	u3621
  5829   00486C                     u3621:
  5830   00486C  EF4A  F024         	goto	l4258
  5831   004870                     u3620:
  5832   004870  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5833   004872  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5834   004874  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5835   004876  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5836   004878  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5837   00487A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5838   00487C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5839   00487E  6C01               	negf	___aomod@dividend^0,c
  5840   004880  0E00               	movlw	0
  5841   004882  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5842   004884  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5843   004886  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5844   004888  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5845   00488A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5846   00488C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5847   00488E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5848   004890  0E01               	movlw	1
  5849   004892  6E12               	movwf	___aomod@sign^0,c
  5850   004894                     l4258:
  5851   004894  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5852   004896  EF51  F024         	goto	u3630
  5853   00489A  EF4F  F024         	goto	u3631
  5854   00489E                     u3631:
  5855   00489E  EF61  F024         	goto	l4262
  5856   0048A2                     u3630:
  5857   0048A2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5858   0048A4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5859   0048A6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5860   0048A8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5861   0048AA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5862   0048AC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5863   0048AE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5864   0048B0  6C09               	negf	___aomod@divisor^0,c
  5865   0048B2  0E00               	movlw	0
  5866   0048B4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5867   0048B6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5868   0048B8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5869   0048BA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5870   0048BC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5871   0048BE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5872   0048C0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5873   0048C2                     l4262:
  5874   0048C2  5009               	movf	___aomod@divisor^0,w,c
  5875   0048C4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5876   0048C6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5877   0048C8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5878   0048CA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5879   0048CC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5880   0048CE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5881   0048D0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5882   0048D2  B4D8               	btfsc	status,2,c
  5883   0048D4  EF6E  F024         	goto	u3641
  5884   0048D8  EF70  F024         	goto	u3640
  5885   0048DC                     u3641:
  5886   0048DC  EFB8  F024         	goto	l4278
  5887   0048E0                     u3640:
  5888   0048E0  0E01               	movlw	1
  5889   0048E2  6E11               	movwf	___aomod@counter^0,c
  5890   0048E4  EF7E  F024         	goto	l4268
  5891   0048E8                     l4266:
  5892   0048E8  90D8               	bcf	status,0,c
  5893   0048EA  3609               	rlcf	___aomod@divisor^0,f,c
  5894   0048EC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5895   0048EE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5896   0048F0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5897   0048F2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5898   0048F4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5899   0048F6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5900   0048F8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5901   0048FA  2A11               	incf	___aomod@counter^0,f,c
  5902   0048FC                     l4268:
  5903   0048FC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5904   0048FE  EF83  F024         	goto	u3651
  5905   004902  EF85  F024         	goto	u3650
  5906   004906                     u3651:
  5907   004906  EF74  F024         	goto	l4266
  5908   00490A                     u3650:
  5909   00490A                     l4270:
  5910   00490A  5009               	movf	___aomod@divisor^0,w,c
  5911   00490C  5C01               	subwf	___aomod@dividend^0,w,c
  5912   00490E  500A               	movf	(___aomod@divisor+1)^0,w,c
  5913   004910  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5914   004912  500B               	movf	(___aomod@divisor+2)^0,w,c
  5915   004914  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5916   004916  500C               	movf	(___aomod@divisor+3)^0,w,c
  5917   004918  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5918   00491A  500D               	movf	(___aomod@divisor+4)^0,w,c
  5919   00491C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5920   00491E  500E               	movf	(___aomod@divisor+5)^0,w,c
  5921   004920  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5922   004922  500F               	movf	(___aomod@divisor+6)^0,w,c
  5923   004924  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5924   004926  5010               	movf	(___aomod@divisor+7)^0,w,c
  5925   004928  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5926   00492A  A0D8               	btfss	status,0,c
  5927   00492C  EF9A  F024         	goto	u3661
  5928   004930  EF9C  F024         	goto	u3660
  5929   004934                     u3661:
  5930   004934  EFAC  F024         	goto	l4274
  5931   004938                     u3660:
  5932   004938  5009               	movf	___aomod@divisor^0,w,c
  5933   00493A  5E01               	subwf	___aomod@dividend^0,f,c
  5934   00493C  500A               	movf	(___aomod@divisor+1)^0,w,c
  5935   00493E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5936   004940  500B               	movf	(___aomod@divisor+2)^0,w,c
  5937   004942  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5938   004944  500C               	movf	(___aomod@divisor+3)^0,w,c
  5939   004946  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5940   004948  500D               	movf	(___aomod@divisor+4)^0,w,c
  5941   00494A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5942   00494C  500E               	movf	(___aomod@divisor+5)^0,w,c
  5943   00494E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5944   004950  500F               	movf	(___aomod@divisor+6)^0,w,c
  5945   004952  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5946   004954  5010               	movf	(___aomod@divisor+7)^0,w,c
  5947   004956  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5948   004958                     l4274:
  5949   004958  90D8               	bcf	status,0,c
  5950   00495A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5951   00495C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5952   00495E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5953   004960  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5954   004962  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5955   004964  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5956   004966  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5957   004968  3209               	rrcf	___aomod@divisor^0,f,c
  5958   00496A  2E11               	decfsz	___aomod@counter^0,f,c
  5959   00496C  EF85  F024         	goto	l4270
  5960   004970                     l4278:
  5961   004970  5012               	movf	___aomod@sign^0,w,c
  5962   004972  B4D8               	btfsc	status,2,c
  5963   004974  EFBE  F024         	goto	u3671
  5964   004978  EFC0  F024         	goto	u3670
  5965   00497C                     u3671:
  5966   00497C  EFD0  F024         	goto	l4282
  5967   004980                     u3670:
  5968   004980  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5969   004982  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5970   004984  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5971   004986  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5972   004988  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5973   00498A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5974   00498C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5975   00498E  6C01               	negf	___aomod@dividend^0,c
  5976   004990  0E00               	movlw	0
  5977   004992  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5978   004994  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5979   004996  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5980   004998  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5981   00499A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5982   00499C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5983   00499E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5984   0049A0                     l4282:
  5985   0049A0  C001  F001         	movff	___aomod@dividend,?___aomod
  5986   0049A4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5987   0049A8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5988   0049AC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5989   0049B0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5990   0049B4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5991   0049B8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5992   0049BC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5993   0049C0  0012               	return		;funcret
  5994   0049C2                     __end_of___aomod:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___aodiv *****************
  5998 ;; Defined at:
  5999 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  dividend        8    0[COMRAM] long long 
  6002 ;;  divisor         8    8[COMRAM] long long 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  quotient        8   18[COMRAM] long long 
  6005 ;;  sign            1   17[COMRAM] unsigned char 
  6006 ;;  counter         1   16[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  8    0[COMRAM] long long 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6016 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;Total ram usage:       26 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_dtoa
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text20
  6031   00456A                     __ptext20:
  6032                           	callstack 0
  6033   00456A                     ___aodiv:
  6034                           	callstack 25
  6035   00456A  0E00               	movlw	0
  6036   00456C  6E12               	movwf	___aodiv@sign^0,c
  6037   00456E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6038   004570  EFBE  F022         	goto	u3550
  6039   004574  EFBC  F022         	goto	u3551
  6040   004578                     u3551:
  6041   004578  EFD0  F022         	goto	l4214
  6042   00457C                     u3550:
  6043   00457C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6044   00457E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6045   004580  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6046   004582  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6047   004584  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6048   004586  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6049   004588  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6050   00458A  6C09               	negf	___aodiv@divisor^0,c
  6051   00458C  0E00               	movlw	0
  6052   00458E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6053   004590  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6054   004592  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6055   004594  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6056   004596  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6057   004598  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6058   00459A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6059   00459C  0E01               	movlw	1
  6060   00459E  6E12               	movwf	___aodiv@sign^0,c
  6061   0045A0                     l4214:
  6062   0045A0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6063   0045A2  EFD7  F022         	goto	u3560
  6064   0045A6  EFD5  F022         	goto	u3561
  6065   0045AA                     u3561:
  6066   0045AA  EFE9  F022         	goto	l4220
  6067   0045AE                     u3560:
  6068   0045AE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6069   0045B0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6070   0045B2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6071   0045B4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6072   0045B6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6073   0045B8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6074   0045BA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6075   0045BC  6C01               	negf	___aodiv@dividend^0,c
  6076   0045BE  0E00               	movlw	0
  6077   0045C0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6078   0045C2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6079   0045C4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6080   0045C6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6081   0045C8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6082   0045CA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6083   0045CC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6084   0045CE  0E01               	movlw	1
  6085   0045D0  1A12               	xorwf	___aodiv@sign^0,f,c
  6086   0045D2                     l4220:
  6087   0045D2  EE20  F013         	lfsr	2,___aodiv@quotient
  6088   0045D6  0E07               	movlw	7
  6089   0045D8                     u3571:
  6090   0045D8  6ADE               	clrf	postinc2,c
  6091   0045DA  06E8               	decf	wreg,f,c
  6092   0045DC  E2FD               	bc	u3571
  6093   0045DE  5009               	movf	___aodiv@divisor^0,w,c
  6094   0045E0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6095   0045E2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6096   0045E4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6097   0045E6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6098   0045E8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6099   0045EA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6100   0045EC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6101   0045EE  B4D8               	btfsc	status,2,c
  6102   0045F0  EFFC  F022         	goto	u3581
  6103   0045F4  EFFE  F022         	goto	u3580
  6104   0045F8                     u3581:
  6105   0045F8  EF50  F023         	goto	l4242
  6106   0045FC                     u3580:
  6107   0045FC  0E01               	movlw	1
  6108   0045FE  6E11               	movwf	___aodiv@counter^0,c
  6109   004600  EF0C  F023         	goto	l4228
  6110   004604                     l4226:
  6111   004604  90D8               	bcf	status,0,c
  6112   004606  3609               	rlcf	___aodiv@divisor^0,f,c
  6113   004608  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6114   00460A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6115   00460C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6116   00460E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6117   004610  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6118   004612  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6119   004614  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6120   004616  2A11               	incf	___aodiv@counter^0,f,c
  6121   004618                     l4228:
  6122   004618  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6123   00461A  EF11  F023         	goto	u3591
  6124   00461E  EF13  F023         	goto	u3590
  6125   004622                     u3591:
  6126   004622  EF02  F023         	goto	l4226
  6127   004626                     u3590:
  6128   004626                     l4230:
  6129   004626  90D8               	bcf	status,0,c
  6130   004628  3613               	rlcf	___aodiv@quotient^0,f,c
  6131   00462A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6132   00462C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6133   00462E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6134   004630  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6135   004632  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6136   004634  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6137   004636  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6138   004638  5009               	movf	___aodiv@divisor^0,w,c
  6139   00463A  5C01               	subwf	___aodiv@dividend^0,w,c
  6140   00463C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6141   00463E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6142   004640  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6143   004642  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6144   004644  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6145   004646  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6146   004648  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6147   00464A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6148   00464C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6149   00464E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6150   004650  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6151   004652  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6152   004654  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6153   004656  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6154   004658  A0D8               	btfss	status,0,c
  6155   00465A  EF31  F023         	goto	u3601
  6156   00465E  EF33  F023         	goto	u3600
  6157   004662                     u3601:
  6158   004662  EF44  F023         	goto	l4238
  6159   004666                     u3600:
  6160   004666  5009               	movf	___aodiv@divisor^0,w,c
  6161   004668  5E01               	subwf	___aodiv@dividend^0,f,c
  6162   00466A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6163   00466C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6164   00466E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6165   004670  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6166   004672  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6167   004674  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6168   004676  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6169   004678  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6170   00467A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6171   00467C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6172   00467E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6173   004680  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6174   004682  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6175   004684  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6176   004686  8013               	bsf	___aodiv@quotient^0,0,c
  6177   004688                     l4238:
  6178   004688  90D8               	bcf	status,0,c
  6179   00468A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6180   00468C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6181   00468E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6182   004690  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6183   004692  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6184   004694  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6185   004696  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6186   004698  3209               	rrcf	___aodiv@divisor^0,f,c
  6187   00469A  2E11               	decfsz	___aodiv@counter^0,f,c
  6188   00469C  EF13  F023         	goto	l4230
  6189   0046A0                     l4242:
  6190   0046A0  5012               	movf	___aodiv@sign^0,w,c
  6191   0046A2  B4D8               	btfsc	status,2,c
  6192   0046A4  EF56  F023         	goto	u3611
  6193   0046A8  EF58  F023         	goto	u3610
  6194   0046AC                     u3611:
  6195   0046AC  EF68  F023         	goto	l4246
  6196   0046B0                     u3610:
  6197   0046B0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6198   0046B2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6199   0046B4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6200   0046B6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6201   0046B8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6202   0046BA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6203   0046BC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6204   0046BE  6C13               	negf	___aodiv@quotient^0,c
  6205   0046C0  0E00               	movlw	0
  6206   0046C2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6207   0046C4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6208   0046C6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6209   0046C8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6210   0046CA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6211   0046CC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6212   0046CE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6213   0046D0                     l4246:
  6214   0046D0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6215   0046D4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6216   0046D8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6217   0046DC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6218   0046E0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6219   0046E4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6220   0046E8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6221   0046EC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6222   0046F0  0012               	return		;funcret
  6223   0046F2                     __end_of___aodiv:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _sendStringSerial4 *****************
  6227 ;; Defined at:
  6228 ;;		line 33 in file "serial.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  string          2    1[COMRAM] PTR unsigned char 
  6231 ;;		 -> main@buf(100), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;Total ram usage:        2 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; Hardware stack levels required when called: 2
  6250 ;; This function calls:
  6251 ;;		_sendCharSerial4
  6252 ;; This function is called by:
  6253 ;;		_main
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text21
  6258   005F68                     __ptext21:
  6259                           	callstack 0
  6260   005F68                     _sendStringSerial4:
  6261                           	callstack 28
  6262   005F68                     
  6263                           ;serial.c: 34:     while (*string!=0){
  6264   005F68  EFBF  F02F         	goto	l5584
  6265   005F6C                     l5580:
  6266                           
  6267                           ;serial.c: 35:         sendCharSerial4(*string++);
  6268   005F6C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6269   005F70  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6270   005F74  50DF               	movf	indf2,w,c
  6271   005F76  EC4A  F030         	call	_sendCharSerial4
  6272   005F7A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6273   005F7C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6274   005F7E                     l5584:
  6275                           
  6276                           ;serial.c: 34:     while (*string!=0){
  6277   005F7E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6278   005F82  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6279   005F86  50DF               	movf	indf2,w,c
  6280   005F88  A4D8               	btfss	status,2,c
  6281   005F8A  EFC9  F02F         	goto	u5531
  6282   005F8E  EFCB  F02F         	goto	u5530
  6283   005F92                     u5531:
  6284   005F92  EFB6  F02F         	goto	l5580
  6285   005F96                     u5530:
  6286   005F96  0012               	return		;funcret
  6287   005F98                     __end_of_sendStringSerial4:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _sendCharSerial4 *****************
  6291 ;; Defined at:
  6292 ;;		line 26 in file "serial.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  charToSend      1    wreg     unsigned char 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  charToSend      1    0[COMRAM] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        1 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_sendStringSerial4
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text22
  6321   006094                     __ptext22:
  6322                           	callstack 0
  6323   006094                     _sendCharSerial4:
  6324                           	callstack 28
  6325                           
  6326                           ;incstack = 0
  6327                           ;sendCharSerial4@charToSend stored from wreg
  6328   006094  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6329   006096                     l207:
  6330   006096  010E               	movlb	14	; () banked
  6331   006098  A537               	btfss	55,2,b	;volatile
  6332   00609A  EF51  F030         	goto	u5021
  6333   00609E  EF53  F030         	goto	u5020
  6334   0060A2                     u5021:
  6335   0060A2  EF4B  F030         	goto	l207
  6336   0060A6                     u5020:
  6337   0060A6                     
  6338                           ; BSR set to: 14
  6339                           ;serial.c: 28:     TX4REG = charToSend;
  6340   0060A6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6341   0060AA                     
  6342                           ; BSR set to: 14
  6343   0060AA  0012               	return		;funcret
  6344   0060AC                     __end_of_sendCharSerial4:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _readColours *****************
  6348 ;; Defined at:
  6349 ;;		line 106 in file "color.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  vals            2   11[COMRAM] PTR struct RGB
  6352 ;;		 -> vals(8), consecutive_read@vals(2), 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;Total ram usage:        2 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 4
  6371 ;; This function calls:
  6372 ;;		_color_read_Blue
  6373 ;;		_color_read_Green
  6374 ;;		_color_read_Red
  6375 ;;		_color_read_lum
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;;		_consecutive_read
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text23
  6383   0056C6                     __ptext23:
  6384                           	callstack 0
  6385   0056C6                     _readColours:
  6386                           	callstack 26
  6387   0056C6                     
  6388                           ;color.c: 108:     vals ->R = color_read_Red();
  6389   0056C6  ECB5  F02D         	call	_color_read_Red	;wreg free
  6390   0056CA  C00C  FFD9         	movff	readColours@vals,fsr2l
  6391   0056CE  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6392   0056D2  C005  FFDE         	movff	?_color_read_Red,postinc2
  6393   0056D6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6394                           
  6395                           ;color.c: 109:     vals ->B = color_read_Blue();
  6396   0056DA  EC05  F02E         	call	_color_read_Blue	;wreg free
  6397   0056DE  EE20 F004          	lfsr	2,4
  6398   0056E2  500C               	movf	readColours@vals^0,w,c
  6399   0056E4  26D9               	addwf	fsr2l,f,c
  6400   0056E6  500D               	movf	(readColours@vals+1)^0,w,c
  6401   0056E8  22DA               	addwfc	fsr2h,f,c
  6402   0056EA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6403   0056EE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6404                           
  6405                           ;color.c: 110:     vals ->G = color_read_Green();
  6406   0056F2  ECDD  F02D         	call	_color_read_Green	;wreg free
  6407   0056F6  EE20 F002          	lfsr	2,2
  6408   0056FA  500C               	movf	readColours@vals^0,w,c
  6409   0056FC  26D9               	addwf	fsr2l,f,c
  6410   0056FE  500D               	movf	(readColours@vals+1)^0,w,c
  6411   005700  22DA               	addwfc	fsr2h,f,c
  6412   005702  C005  FFDE         	movff	?_color_read_Green,postinc2
  6413   005706  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6414                           
  6415                           ;color.c: 111:     vals ->L = color_read_lum();
  6416   00570A  EC8D  F02D         	call	_color_read_lum	;wreg free
  6417   00570E  EE20 F006          	lfsr	2,6
  6418   005712  500C               	movf	readColours@vals^0,w,c
  6419   005714  26D9               	addwf	fsr2l,f,c
  6420   005716  500D               	movf	(readColours@vals+1)^0,w,c
  6421   005718  22DA               	addwfc	fsr2h,f,c
  6422   00571A  C005  FFDE         	movff	?_color_read_lum,postinc2
  6423   00571E  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6424   005722  0012               	return		;funcret
  6425   005724                     __end_of_readColours:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _color_read_lum *****************
  6429 ;; Defined at:
  6430 ;;		line 50 in file "color.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  tmp             2    9[COMRAM] unsigned int 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  2    4[COMRAM] unsigned int 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;Total ram usage:        7 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 3
  6451 ;; This function calls:
  6452 ;;		_I2C_2_Master_Read
  6453 ;;		_I2C_2_Master_RepStart
  6454 ;;		_I2C_2_Master_Start
  6455 ;;		_I2C_2_Master_Stop
  6456 ;;		_I2C_2_Master_Write
  6457 ;; This function is called by:
  6458 ;;		_readColours
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text24
  6463   005B1A                     __ptext24:
  6464                           	callstack 0
  6465   005B1A                     _color_read_lum:
  6466                           	callstack 26
  6467   005B1A                     
  6468                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6469   005B1A  EC72  F030         	call	_I2C_2_Master_Start	;wreg free
  6470                           
  6471                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6472   005B1E  0E52               	movlw	82
  6473   005B20  EC56  F030         	call	_I2C_2_Master_Write
  6474                           
  6475                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6476   005B24  0EB4               	movlw	180
  6477   005B26  EC56  F030         	call	_I2C_2_Master_Write
  6478                           
  6479                           ;color.c: 56:  I2C_2_Master_RepStart();
  6480   005B2A  EC68  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6481                           
  6482                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6483   005B2E  0E53               	movlw	83
  6484   005B30  EC56  F030         	call	_I2C_2_Master_Write
  6485                           
  6486                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6487   005B34  0E01               	movlw	1
  6488   005B36  ECE2  F02E         	call	_I2C_2_Master_Read
  6489   005B3A  6E07               	movwf	??_color_read_lum^0,c
  6490   005B3C  5007               	movf	??_color_read_lum^0,w,c
  6491   005B3E  6E0A               	movwf	color_read_lum@tmp^0,c
  6492   005B40  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6493                           
  6494                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6495   005B42  0E00               	movlw	0
  6496   005B44  ECE2  F02E         	call	_I2C_2_Master_Read
  6497   005B48  6E07               	movwf	??_color_read_lum^0,c
  6498   005B4A  5007               	movf	??_color_read_lum^0,w,c
  6499   005B4C  6E09               	movwf	(??_color_read_lum+2)^0,c
  6500   005B4E  6A08               	clrf	(??_color_read_lum+1)^0,c
  6501   005B50  500A               	movf	color_read_lum@tmp^0,w,c
  6502   005B52  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6503   005B54  6E0A               	movwf	color_read_lum@tmp^0,c
  6504   005B56  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6505   005B58  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6506   005B5A  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6507                           
  6508                           ;color.c: 60:  I2C_2_Master_Stop();
  6509   005B5C  EC6D  F030         	call	_I2C_2_Master_Stop	;wreg free
  6510   005B60                     
  6511                           ;color.c: 61:  return tmp;
  6512   005B60  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6513   005B64  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6514   005B68  0012               	return		;funcret
  6515   005B6A                     __end_of_color_read_lum:
  6516                           	callstack 0
  6517                           
  6518 ;; *************** function _color_read_Red *****************
  6519 ;; Defined at:
  6520 ;;		line 64 in file "color.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  tmp             2    9[COMRAM] unsigned int 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    4[COMRAM] unsigned int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;Total ram usage:        7 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 3
  6541 ;; This function calls:
  6542 ;;		_I2C_2_Master_Read
  6543 ;;		_I2C_2_Master_RepStart
  6544 ;;		_I2C_2_Master_Start
  6545 ;;		_I2C_2_Master_Stop
  6546 ;;		_I2C_2_Master_Write
  6547 ;; This function is called by:
  6548 ;;		_readColours
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text25
  6553   005B6A                     __ptext25:
  6554                           	callstack 0
  6555   005B6A                     _color_read_Red:
  6556                           	callstack 26
  6557   005B6A                     
  6558                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6559   005B6A  EC72  F030         	call	_I2C_2_Master_Start	;wreg free
  6560                           
  6561                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6562   005B6E  0E52               	movlw	82
  6563   005B70  EC56  F030         	call	_I2C_2_Master_Write
  6564                           
  6565                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6566   005B74  0EB6               	movlw	182
  6567   005B76  EC56  F030         	call	_I2C_2_Master_Write
  6568                           
  6569                           ;color.c: 70:  I2C_2_Master_RepStart();
  6570   005B7A  EC68  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6571                           
  6572                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6573   005B7E  0E53               	movlw	83
  6574   005B80  EC56  F030         	call	_I2C_2_Master_Write
  6575                           
  6576                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6577   005B84  0E01               	movlw	1
  6578   005B86  ECE2  F02E         	call	_I2C_2_Master_Read
  6579   005B8A  6E07               	movwf	??_color_read_Red^0,c
  6580   005B8C  5007               	movf	??_color_read_Red^0,w,c
  6581   005B8E  6E0A               	movwf	color_read_Red@tmp^0,c
  6582   005B90  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6583                           
  6584                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6585   005B92  0E00               	movlw	0
  6586   005B94  ECE2  F02E         	call	_I2C_2_Master_Read
  6587   005B98  6E07               	movwf	??_color_read_Red^0,c
  6588   005B9A  5007               	movf	??_color_read_Red^0,w,c
  6589   005B9C  6E09               	movwf	(??_color_read_Red+2)^0,c
  6590   005B9E  6A08               	clrf	(??_color_read_Red+1)^0,c
  6591   005BA0  500A               	movf	color_read_Red@tmp^0,w,c
  6592   005BA2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6593   005BA4  6E0A               	movwf	color_read_Red@tmp^0,c
  6594   005BA6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6595   005BA8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6596   005BAA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6597                           
  6598                           ;color.c: 74:  I2C_2_Master_Stop();
  6599   005BAC  EC6D  F030         	call	_I2C_2_Master_Stop	;wreg free
  6600   005BB0                     
  6601                           ;color.c: 75:  return tmp;
  6602   005BB0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6603   005BB4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6604   005BB8  0012               	return		;funcret
  6605   005BBA                     __end_of_color_read_Red:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function _color_read_Green *****************
  6609 ;; Defined at:
  6610 ;;		line 77 in file "color.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;		None
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  tmp             2    9[COMRAM] unsigned int 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    4[COMRAM] unsigned int 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:        7 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 3
  6631 ;; This function calls:
  6632 ;;		_I2C_2_Master_Read
  6633 ;;		_I2C_2_Master_RepStart
  6634 ;;		_I2C_2_Master_Start
  6635 ;;		_I2C_2_Master_Stop
  6636 ;;		_I2C_2_Master_Write
  6637 ;; This function is called by:
  6638 ;;		_readColours
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text26
  6643   005BBA                     __ptext26:
  6644                           	callstack 0
  6645   005BBA                     _color_read_Green:
  6646                           	callstack 26
  6647   005BBA                     
  6648                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  6649   005BBA  EC72  F030         	call	_I2C_2_Master_Start	;wreg free
  6650                           
  6651                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  6652   005BBE  0E52               	movlw	82
  6653   005BC0  EC56  F030         	call	_I2C_2_Master_Write
  6654                           
  6655                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  6656   005BC4  0EB8               	movlw	184
  6657   005BC6  EC56  F030         	call	_I2C_2_Master_Write
  6658                           
  6659                           ;color.c: 83:  I2C_2_Master_RepStart();
  6660   005BCA  EC68  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6661                           
  6662                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6663   005BCE  0E53               	movlw	83
  6664   005BD0  EC56  F030         	call	_I2C_2_Master_Write
  6665                           
  6666                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6667   005BD4  0E01               	movlw	1
  6668   005BD6  ECE2  F02E         	call	_I2C_2_Master_Read
  6669   005BDA  6E07               	movwf	??_color_read_Green^0,c
  6670   005BDC  5007               	movf	??_color_read_Green^0,w,c
  6671   005BDE  6E0A               	movwf	color_read_Green@tmp^0,c
  6672   005BE0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6673                           
  6674                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6675   005BE2  0E00               	movlw	0
  6676   005BE4  ECE2  F02E         	call	_I2C_2_Master_Read
  6677   005BE8  6E07               	movwf	??_color_read_Green^0,c
  6678   005BEA  5007               	movf	??_color_read_Green^0,w,c
  6679   005BEC  6E09               	movwf	(??_color_read_Green+2)^0,c
  6680   005BEE  6A08               	clrf	(??_color_read_Green+1)^0,c
  6681   005BF0  500A               	movf	color_read_Green@tmp^0,w,c
  6682   005BF2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6683   005BF4  6E0A               	movwf	color_read_Green@tmp^0,c
  6684   005BF6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6685   005BF8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6686   005BFA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6687                           
  6688                           ;color.c: 87:  I2C_2_Master_Stop();
  6689   005BFC  EC6D  F030         	call	_I2C_2_Master_Stop	;wreg free
  6690   005C00                     
  6691                           ;color.c: 88:  return tmp;
  6692   005C00  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6693   005C04  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6694   005C08  0012               	return		;funcret
  6695   005C0A                     __end_of_color_read_Green:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _color_read_Blue *****************
  6699 ;; Defined at:
  6700 ;;		line 91 in file "color.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  tmp             2    9[COMRAM] unsigned int 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2    4[COMRAM] unsigned int 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;Total ram usage:        7 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 3
  6721 ;; This function calls:
  6722 ;;		_I2C_2_Master_Read
  6723 ;;		_I2C_2_Master_RepStart
  6724 ;;		_I2C_2_Master_Start
  6725 ;;		_I2C_2_Master_Stop
  6726 ;;		_I2C_2_Master_Write
  6727 ;; This function is called by:
  6728 ;;		_readColours
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text27
  6733   005C0A                     __ptext27:
  6734                           	callstack 0
  6735   005C0A                     _color_read_Blue:
  6736                           	callstack 26
  6737   005C0A                     
  6738                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6739   005C0A  EC72  F030         	call	_I2C_2_Master_Start	;wreg free
  6740                           
  6741                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6742   005C0E  0E52               	movlw	82
  6743   005C10  EC56  F030         	call	_I2C_2_Master_Write
  6744                           
  6745                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6746   005C14  0EBA               	movlw	186
  6747   005C16  EC56  F030         	call	_I2C_2_Master_Write
  6748                           
  6749                           ;color.c: 97:  I2C_2_Master_RepStart();
  6750   005C1A  EC68  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6751                           
  6752                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6753   005C1E  0E53               	movlw	83
  6754   005C20  EC56  F030         	call	_I2C_2_Master_Write
  6755                           
  6756                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6757   005C24  0E01               	movlw	1
  6758   005C26  ECE2  F02E         	call	_I2C_2_Master_Read
  6759   005C2A  6E07               	movwf	??_color_read_Blue^0,c
  6760   005C2C  5007               	movf	??_color_read_Blue^0,w,c
  6761   005C2E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6762   005C30  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6763                           
  6764                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6765   005C32  0E00               	movlw	0
  6766   005C34  ECE2  F02E         	call	_I2C_2_Master_Read
  6767   005C38  6E07               	movwf	??_color_read_Blue^0,c
  6768   005C3A  5007               	movf	??_color_read_Blue^0,w,c
  6769   005C3C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6770   005C3E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6771   005C40  500A               	movf	color_read_Blue@tmp^0,w,c
  6772   005C42  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6773   005C44  6E0A               	movwf	color_read_Blue@tmp^0,c
  6774   005C46  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6775   005C48  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6776   005C4A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6777                           
  6778                           ;color.c: 101:  I2C_2_Master_Stop();
  6779   005C4C  EC6D  F030         	call	_I2C_2_Master_Stop	;wreg free
  6780   005C50                     
  6781                           ;color.c: 102:  return tmp;
  6782   005C50  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6783   005C54  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6784   005C58  0012               	return		;funcret
  6785   005C5A                     __end_of_color_read_Blue:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _I2C_2_Master_RepStart *****************
  6789 ;; Defined at:
  6790 ;;		line 33 in file "i2c.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 2
  6811 ;; This function calls:
  6812 ;;		_I2C_2_Master_Idle
  6813 ;; This function is called by:
  6814 ;;		_color_read_lum
  6815 ;;		_color_read_Red
  6816 ;;		_color_read_Green
  6817 ;;		_color_read_Blue
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text28
  6822   0060D0                     __ptext28:
  6823                           	callstack 0
  6824   0060D0                     _I2C_2_Master_RepStart:
  6825                           	callstack 26
  6826   0060D0                     
  6827                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6828   0060D0  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6829   0060D4                     
  6830                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6831   0060D4  010E               	movlb	14	; () banked
  6832   0060D6  83DA               	bsf	218,1,b	;volatile
  6833   0060D8                     
  6834                           ; BSR set to: 14
  6835   0060D8  0012               	return		;funcret
  6836   0060DA                     __end_of_I2C_2_Master_RepStart:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _I2C_2_Master_Read *****************
  6840 ;; Defined at:
  6841 ;;		line 51 in file "i2c.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  ack             1    wreg     unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  ack             1    2[COMRAM] unsigned char 
  6846 ;;  tmp             1    3[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      unsigned char 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;Total ram usage:        3 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 2
  6863 ;; This function calls:
  6864 ;;		_I2C_2_Master_Idle
  6865 ;; This function is called by:
  6866 ;;		_color_read_lum
  6867 ;;		_color_read_Red
  6868 ;;		_color_read_Green
  6869 ;;		_color_read_Blue
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text29
  6874   005DC4                     __ptext29:
  6875                           	callstack 0
  6876   005DC4                     _I2C_2_Master_Read:
  6877                           	callstack 26
  6878                           
  6879                           ; BSR set to: 14
  6880                           ;incstack = 0
  6881                           ;I2C_2_Master_Read@ack stored from wreg
  6882   005DC4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6883   005DC6                     
  6884                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6885   005DC6  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6886   005DCA                     
  6887                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6888   005DCA  010E               	movlb	14	; () banked
  6889   005DCC  87DA               	bsf	218,3,b	;volatile
  6890                           
  6891                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6892   005DCE  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6893   005DD2                     
  6894                           ;i2c.c: 57:   tmp = SSP2BUF;
  6895   005DD2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6896                           
  6897                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6898   005DD6  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
  6899   005DDA                     
  6900                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6901   005DDA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6902   005DDC  B4D8               	btfsc	status,2,c
  6903   005DDE  EFF3  F02E         	goto	u4941
  6904   005DE2  EFF7  F02E         	goto	u4940
  6905   005DE6                     u4941:
  6906   005DE6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6907   005DE8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6908   005DEA  EFF8  F02E         	goto	u4958
  6909   005DEE                     u4940:
  6910   005DEE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6911   005DF0                     u4958:
  6912   005DF0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6913   005DF2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6914   005DF4  010E               	movlb	14	; () banked
  6915   005DF6  51DA               	movf	218,w,b	;volatile
  6916   005DF8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6917   005DFA  0BDF               	andlw	-33
  6918   005DFC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6919   005DFE  6FDA               	movwf	218,b	;volatile
  6920   005E00                     
  6921                           ; BSR set to: 14
  6922                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6923   005E00  89DA               	bsf	218,4,b	;volatile
  6924   005E02                     
  6925                           ; BSR set to: 14
  6926                           ;i2c.c: 61:   return tmp;
  6927   005E02  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6928   005E04                     
  6929                           ; BSR set to: 14
  6930   005E04  0012               	return		;funcret
  6931   005E06                     __end_of_I2C_2_Master_Read:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function _initUSART4 *****************
  6935 ;; Defined at:
  6936 ;;		line 4 in file "serial.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;Total ram usage:        0 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text30
  6965   006076                     __ptext30:
  6966                           	callstack 0
  6967   006076                     _initUSART4:
  6968                           	callstack 29
  6969   006076                     
  6970                           ;serial.c: 5:     RC0PPS = 0x12;
  6971   006076  0E12               	movlw	18
  6972   006078  010E               	movlb	14	; () banked
  6973   00607A  6F62               	movwf	98,b	;volatile
  6974                           
  6975                           ;serial.c: 6:     RX4PPS = 0x11;
  6976   00607C  0E11               	movlw	17
  6977   00607E  6F15               	movwf	21,b	;volatile
  6978   006080                     
  6979                           ; BSR set to: 14
  6980                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6981   006080  97E9               	bcf	233,3,b	;volatile
  6982   006082                     
  6983                           ; BSR set to: 14
  6984                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6985   006082  95E8               	bcf	232,2,b	;volatile
  6986                           
  6987                           ;serial.c: 9:     SP4BRGL = 51;
  6988   006084  0E33               	movlw	51
  6989   006086  6FE5               	movwf	229,b	;volatile
  6990                           
  6991                           ;serial.c: 10:     SP4BRGH = 0;
  6992   006088  0E00               	movlw	0
  6993   00608A  6FE6               	movwf	230,b	;volatile
  6994   00608C                     
  6995                           ; BSR set to: 14
  6996                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  6997   00608C  89E7               	bsf	231,4,b	;volatile
  6998   00608E                     
  6999                           ; BSR set to: 14
  7000                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7001   00608E  8BE8               	bsf	232,5,b	;volatile
  7002   006090                     
  7003                           ; BSR set to: 14
  7004                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7005   006090  8FE7               	bsf	231,7,b	;volatile
  7006   006092                     
  7007                           ; BSR set to: 14
  7008   006092  0012               	return		;funcret
  7009   006094                     __end_of_initUSART4:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function _initDCmotorsPWM *****************
  7013 ;; Defined at:
  7014 ;;		line 7 in file "dc_motor.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      void 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;Total ram usage:        2 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; Hardware stack levels required when called: 1
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_main
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text31
  7043   0052CC                     __ptext31:
  7044                           	callstack 0
  7045   0052CC                     _initDCmotorsPWM:
  7046                           	callstack 29
  7047   0052CC                     
  7048                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7049   0052CC  0E05               	movlw	5
  7050   0052CE  010E               	movlb	14	; () banked
  7051   0052D0  6F74               	movwf	116,b	;volatile
  7052                           
  7053                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7054   0052D2  0E06               	movlw	6
  7055   0052D4  6F76               	movwf	118,b	;volatile
  7056                           
  7057                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7058   0052D6  0E07               	movlw	7
  7059   0052D8  6F69               	movwf	105,b	;volatile
  7060                           
  7061                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7062   0052DA  0E08               	movlw	8
  7063   0052DC  6F88               	movwf	136,b	;volatile
  7064   0052DE                     
  7065                           ; BSR set to: 14
  7066                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7067   0052DE  9485               	bcf	133,2,c	;volatile
  7068   0052E0                     
  7069                           ; BSR set to: 14
  7070                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7071   0052E0  9885               	bcf	133,4,c	;volatile
  7072   0052E2                     
  7073                           ; BSR set to: 14
  7074                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7075   0052E2  9E83               	bcf	131,7,c	;volatile
  7076   0052E4                     
  7077                           ; BSR set to: 14
  7078                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7079   0052E4  9C87               	bcf	135,6,c	;volatile
  7080                           
  7081                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7082   0052E6  50BD               	movf	189,w,c	;volatile
  7083   0052E8  0B8F               	andlw	-113
  7084   0052EA  0930               	iorlw	48
  7085   0052EC  6EBD               	movwf	189,c	;volatile
  7086                           
  7087                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7088   0052EE  0EE0               	movlw	-32
  7089   0052F0  16BE               	andwf	190,f,c	;volatile
  7090                           
  7091                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7092   0052F2  50BF               	movf	191,w,c	;volatile
  7093   0052F4  0BF0               	andlw	-16
  7094   0052F6  0901               	iorlw	1
  7095   0052F8  6EBF               	movwf	191,c	;volatile
  7096   0052FA                     
  7097                           ; BSR set to: 14
  7098                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7099   0052FA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7100   0052FE                     
  7101                           ; BSR set to: 14
  7102                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7103   0052FE  8EBD               	bsf	189,7,c	;volatile
  7104                           
  7105                           ;dc_motor.c: 35:     CCPR1H=0;
  7106   005300  0E00               	movlw	0
  7107   005302  6EAA               	movwf	170,c	;volatile
  7108                           
  7109                           ;dc_motor.c: 36:     CCPR2H=0;
  7110   005304  0E00               	movlw	0
  7111   005306  6EA6               	movwf	166,c	;volatile
  7112                           
  7113                           ;dc_motor.c: 37:     CCPR3H=0;
  7114   005308  0E00               	movlw	0
  7115   00530A  010F               	movlb	15	; () banked
  7116   00530C  6F25               	movwf	37,b	;volatile
  7117                           
  7118                           ;dc_motor.c: 38:     CCPR4H=0;
  7119   00530E  0E00               	movlw	0
  7120   005310  6F21               	movwf	33,b	;volatile
  7121                           
  7122                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7123   005312  0EFC               	movlw	-4
  7124   005314  16AD               	andwf	173,f,c	;volatile
  7125                           
  7126                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7127   005316  0EF3               	movlw	-13
  7128   005318  16AD               	andwf	173,f,c	;volatile
  7129                           
  7130                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7131   00531A  0ECF               	movlw	-49
  7132   00531C  16AD               	andwf	173,f,c	;volatile
  7133                           
  7134                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7135   00531E  0E3F               	movlw	-193
  7136   005320  16AD               	andwf	173,f,c	;volatile
  7137   005322                     
  7138                           ; BSR set to: 15
  7139                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7140   005322  88AB               	bsf	171,4,c	;volatile
  7141                           
  7142                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7143   005324  50AB               	movf	171,w,c	;volatile
  7144   005326  0BF0               	andlw	-16
  7145   005328  090C               	iorlw	12
  7146   00532A  6EAB               	movwf	171,c	;volatile
  7147   00532C                     
  7148                           ; BSR set to: 15
  7149                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7150   00532C  8EAB               	bsf	171,7,c	;volatile
  7151   00532E                     
  7152                           ; BSR set to: 15
  7153                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7154   00532E  88A7               	bsf	167,4,c	;volatile
  7155                           
  7156                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7157   005330  50A7               	movf	167,w,c	;volatile
  7158   005332  0BF0               	andlw	-16
  7159   005334  090C               	iorlw	12
  7160   005336  6EA7               	movwf	167,c	;volatile
  7161   005338                     
  7162                           ; BSR set to: 15
  7163                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7164   005338  8EA7               	bsf	167,7,c	;volatile
  7165   00533A                     
  7166                           ; BSR set to: 15
  7167                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7168   00533A  8926               	bsf	38,4,b	;volatile
  7169                           
  7170                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7171   00533C  5126               	movf	38,w,b	;volatile
  7172   00533E  0BF0               	andlw	-16
  7173   005340  090C               	iorlw	12
  7174   005342  6F26               	movwf	38,b	;volatile
  7175   005344                     
  7176                           ; BSR set to: 15
  7177                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7178   005344  8F26               	bsf	38,7,b	;volatile
  7179   005346                     
  7180                           ; BSR set to: 15
  7181                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7182   005346  8922               	bsf	34,4,b	;volatile
  7183                           
  7184                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7185   005348  5122               	movf	34,w,b	;volatile
  7186   00534A  0BF0               	andlw	-16
  7187   00534C  090C               	iorlw	12
  7188   00534E  6F22               	movwf	34,b	;volatile
  7189   005350                     
  7190                           ; BSR set to: 15
  7191                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7192   005350  8F22               	bsf	34,7,b	;volatile
  7193   005352                     
  7194                           ; BSR set to: 15
  7195   005352  0012               	return		;funcret
  7196   005354                     __end_of_initDCmotorsPWM:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _getTMR0val *****************
  7200 ;; Defined at:
  7201 ;;		line 28 in file "timers.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  moving          2    4[COMRAM] int 
  7206 ;;  temp            2    2[COMRAM] unsigned int 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;Total ram usage:        6 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; Hardware stack levels required when called: 1
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_main
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text32
  7231   005664                     __ptext32:
  7232                           	callstack 0
  7233   005664                     _getTMR0val:
  7234                           	callstack 29
  7235   005664                     
  7236                           ;timers.c: 30:     unsigned int temp= TMR0L;
  7237   005664  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7238   005668  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7239   00566A                     
  7240                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  7241   00566A  5003               	movf	getTMR0val@temp^0,w,c
  7242   00566C  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7243   005670  6A02               	clrf	(??_getTMR0val+1)^0,c
  7244   005672  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7245   005676  6A01               	clrf	??_getTMR0val^0,c
  7246   005678  1001               	iorwf	??_getTMR0val^0,w,c
  7247   00567A  6E05               	movwf	getTMR0val@moving^0,c
  7248   00567C  5002               	movf	(??_getTMR0val+1)^0,w,c
  7249   00567E  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7250                           
  7251                           ;timers.c: 33:     if (moving>700){
  7252   005680  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7253   005682  EF4C  F02B         	goto	u5621
  7254   005686  0EBD               	movlw	189
  7255   005688  5C05               	subwf	getTMR0val@moving^0,w,c
  7256   00568A  0E02               	movlw	2
  7257   00568C  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7258   00568E  A0D8               	btfss	status,0,c
  7259   005690  EF4C  F02B         	goto	u5621
  7260   005694  EF4E  F02B         	goto	u5620
  7261   005698                     u5621:
  7262   005698  EF54  F02B         	goto	l5684
  7263   00569C                     u5620:
  7264   00569C                     
  7265                           ;timers.c: 34:         moving=moving-700;
  7266   00569C  0E44               	movlw	68
  7267   00569E  2405               	addwf	getTMR0val@moving^0,w,c
  7268   0056A0  6E05               	movwf	getTMR0val@moving^0,c
  7269   0056A2  0EFD               	movlw	253
  7270   0056A4  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7271   0056A6  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7272   0056A8                     l5684:
  7273                           
  7274                           ;timers.c: 37:     Time_forward[move_count]=moving;
  7275   0056A8  90D8               	bcf	status,0,c
  7276   0056AA  0101               	movlb	1	; () banked
  7277   0056AC  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7278   0056AE  6ED9               	movwf	fsr2l,c
  7279   0056B0  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7280   0056B2  6EDA               	movwf	fsr2h,c
  7281   0056B4  0E3C               	movlw	low _Time_forward
  7282   0056B6  26D9               	addwf	fsr2l,f,c
  7283   0056B8  0E02               	movlw	high _Time_forward
  7284   0056BA  22DA               	addwfc	fsr2h,f,c
  7285   0056BC  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7286   0056C0  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7287   0056C4                     
  7288                           ; BSR set to: 1
  7289   0056C4  0012               	return		;funcret
  7290   0056C6                     __end_of_getTMR0val:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _colour_rel *****************
  7294 ;; Defined at:
  7295 ;;		line 115 in file "color.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  vals            2   74[COMRAM] PTR struct RGB
  7298 ;;		 -> vals(8), consecutive_read@vals(2), 
  7299 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7300 ;;		 -> rel(12), consecutive_read@rel(2), 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  B               4   20[BANK0 ] float 
  7303 ;;  G               4   16[BANK0 ] float 
  7304 ;;  R               4   12[BANK0 ] float 
  7305 ;;  L               4    0[BANK0 ] float 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;Total ram usage:       28 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 2
  7322 ;; This function calls:
  7323 ;;		___fladd
  7324 ;;		___fldiv
  7325 ;;		___xxtofl
  7326 ;; This function is called by:
  7327 ;;		_main
  7328 ;;		_consecutive_read
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text33
  7333   002F1C                     __ptext33:
  7334                           	callstack 0
  7335   002F1C                     _colour_rel:
  7336                           	callstack 28
  7337   002F1C                     
  7338                           ;color.c: 116:     float R = vals->R;
  7339   002F1C  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7340   002F20  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7341   002F24  CFDE F001          	movff	postinc2,___xxtofl@val
  7342   002F28  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7343   002F2C  0E00               	movlw	0
  7344   002F2E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7345   002F30  0EFF               	movlw	-1
  7346   002F32  6E03               	movwf	(___xxtofl@val+2)^0,c
  7347   002F34  6E04               	movwf	(___xxtofl@val+3)^0,c
  7348   002F36  0E01               	movlw	1
  7349   002F38  EC05  F021         	call	___xxtofl
  7350   002F3C  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7351   002F40  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7352   002F44  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7353   002F48  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7354                           
  7355                           ;color.c: 117:     float G = vals->G;
  7356   002F4C  EE20 F002          	lfsr	2,2
  7357   002F50  504B               	movf	colour_rel@vals^0,w,c
  7358   002F52  26D9               	addwf	fsr2l,f,c
  7359   002F54  504C               	movf	(colour_rel@vals+1)^0,w,c
  7360   002F56  22DA               	addwfc	fsr2h,f,c
  7361   002F58  CFDE F001          	movff	postinc2,___xxtofl@val
  7362   002F5C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7363   002F60  0E00               	movlw	0
  7364   002F62  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7365   002F64  0EFF               	movlw	-1
  7366   002F66  6E03               	movwf	(___xxtofl@val+2)^0,c
  7367   002F68  6E04               	movwf	(___xxtofl@val+3)^0,c
  7368   002F6A  0E01               	movlw	1
  7369   002F6C  EC05  F021         	call	___xxtofl
  7370   002F70  C001  F070         	movff	?___xxtofl,colour_rel@G
  7371   002F74  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7372   002F78  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7373   002F7C  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7374                           
  7375                           ;color.c: 118:     float B = vals->B;
  7376   002F80  EE20 F004          	lfsr	2,4
  7377   002F84  504B               	movf	colour_rel@vals^0,w,c
  7378   002F86  26D9               	addwf	fsr2l,f,c
  7379   002F88  504C               	movf	(colour_rel@vals+1)^0,w,c
  7380   002F8A  22DA               	addwfc	fsr2h,f,c
  7381   002F8C  CFDE F001          	movff	postinc2,___xxtofl@val
  7382   002F90  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7383   002F94  0E00               	movlw	0
  7384   002F96  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7385   002F98  0EFF               	movlw	-1
  7386   002F9A  6E03               	movwf	(___xxtofl@val+2)^0,c
  7387   002F9C  6E04               	movwf	(___xxtofl@val+3)^0,c
  7388   002F9E  0E01               	movlw	1
  7389   002FA0  EC05  F021         	call	___xxtofl
  7390   002FA4  C001  F074         	movff	?___xxtofl,colour_rel@B
  7391   002FA8  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7392   002FAC  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7393   002FB0  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7394                           
  7395                           ;color.c: 119:     float L = vals->L;
  7396   002FB4  EE20 F006          	lfsr	2,6
  7397   002FB8  504B               	movf	colour_rel@vals^0,w,c
  7398   002FBA  26D9               	addwf	fsr2l,f,c
  7399   002FBC  504C               	movf	(colour_rel@vals+1)^0,w,c
  7400   002FBE  22DA               	addwfc	fsr2h,f,c
  7401   002FC0  CFDE F001          	movff	postinc2,___xxtofl@val
  7402   002FC4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7403   002FC8  0E00               	movlw	0
  7404   002FCA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7405   002FCC  0EFF               	movlw	-1
  7406   002FCE  6E03               	movwf	(___xxtofl@val+2)^0,c
  7407   002FD0  6E04               	movwf	(___xxtofl@val+3)^0,c
  7408   002FD2  0E01               	movlw	1
  7409   002FD4  EC05  F021         	call	___xxtofl
  7410   002FD8  C001  F060         	movff	?___xxtofl,colour_rel@L
  7411   002FDC  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7412   002FE0  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7413   002FE4  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7414   002FE8                     
  7415                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7416   002FE8  C070  F005         	movff	colour_rel@G,___fladd@a
  7417   002FEC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7418   002FF0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7419   002FF4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7420   002FF8  C06C  F001         	movff	colour_rel@R,___fladd@b
  7421   002FFC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7422   003000  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7423   003004  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7424   003008  EC4C  F011         	call	___fladd	;wreg free
  7425   00300C  C001  F064         	movff	?___fladd,_colour_rel$3265
  7426   003010  C002  F065         	movff	?___fladd+1,_colour_rel$3265+1
  7427   003014  C003  F066         	movff	?___fladd+2,_colour_rel$3265+2
  7428   003018  C004  F067         	movff	?___fladd+3,_colour_rel$3265+3
  7429   00301C                     
  7430                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7431   00301C  C074  F005         	movff	colour_rel@B,___fladd@a
  7432   003020  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7433   003024  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7434   003028  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7435   00302C  C064  F001         	movff	_colour_rel$3265,___fladd@b
  7436   003030  C065  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7437   003034  C066  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7438   003038  C067  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7439   00303C  EC4C  F011         	call	___fladd	;wreg free
  7440   003040  C001  F068         	movff	?___fladd,_colour_rel$3266
  7441   003044  C002  F069         	movff	?___fladd+1,_colour_rel$3266+1
  7442   003048  C003  F06A         	movff	?___fladd+2,_colour_rel$3266+2
  7443   00304C  C004  F06B         	movff	?___fladd+3,_colour_rel$3266+3
  7444                           
  7445                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7446   003050  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7447   003054  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7448   003058  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7449   00305C  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7450   003060  C060  F005         	movff	colour_rel@L,___fladd@a
  7451   003064  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7452   003068  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7453   00306C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7454   003070  C068  F001         	movff	_colour_rel$3266,___fladd@b
  7455   003074  C069  F002         	movff	_colour_rel$3266+1,___fladd@b+1
  7456   003078  C06A  F003         	movff	_colour_rel$3266+2,___fladd@b+2
  7457   00307C  C06B  F004         	movff	_colour_rel$3266+3,___fladd@b+3
  7458   003080  EC4C  F011         	call	___fladd	;wreg free
  7459   003084  C001  F036         	movff	?___fladd,___fldiv@a
  7460   003088  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7461   00308C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7462   003090  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7463   003094  ECC1  F015         	call	___fldiv	;wreg free
  7464   003098  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7465   00309C  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7466   0030A0  C032  FFDE         	movff	?___fldiv,postinc2
  7467   0030A4  C033  FFDE         	movff	?___fldiv+1,postinc2
  7468   0030A8  C034  FFDE         	movff	?___fldiv+2,postinc2
  7469   0030AC  C035  FFDE         	movff	?___fldiv+3,postinc2
  7470   0030B0                     
  7471                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7472   0030B0  C070  F005         	movff	colour_rel@G,___fladd@a
  7473   0030B4  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7474   0030B8  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7475   0030BC  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7476   0030C0  C06C  F001         	movff	colour_rel@R,___fladd@b
  7477   0030C4  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7478   0030C8  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7479   0030CC  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7480   0030D0  EC4C  F011         	call	___fladd	;wreg free
  7481   0030D4  C001  F064         	movff	?___fladd,_colour_rel$3265
  7482   0030D8  C002  F065         	movff	?___fladd+1,_colour_rel$3265+1
  7483   0030DC  C003  F066         	movff	?___fladd+2,_colour_rel$3265+2
  7484   0030E0  C004  F067         	movff	?___fladd+3,_colour_rel$3265+3
  7485   0030E4                     
  7486                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7487   0030E4  C074  F005         	movff	colour_rel@B,___fladd@a
  7488   0030E8  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7489   0030EC  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7490   0030F0  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7491   0030F4  C064  F001         	movff	_colour_rel$3265,___fladd@b
  7492   0030F8  C065  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7493   0030FC  C066  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7494   003100  C067  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7495   003104  EC4C  F011         	call	___fladd	;wreg free
  7496   003108  C001  F068         	movff	?___fladd,_colour_rel$3266
  7497   00310C  C002  F069         	movff	?___fladd+1,_colour_rel$3266+1
  7498   003110  C003  F06A         	movff	?___fladd+2,_colour_rel$3266+2
  7499   003114  C004  F06B         	movff	?___fladd+3,_colour_rel$3266+3
  7500                           
  7501                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7502   003118  C074  F032         	movff	colour_rel@B,___fldiv@b
  7503   00311C  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7504   003120  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7505   003124  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7506   003128  C060  F005         	movff	colour_rel@L,___fladd@a
  7507   00312C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7508   003130  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7509   003134  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7510   003138  C068  F001         	movff	_colour_rel$3266,___fladd@b
  7511   00313C  C069  F002         	movff	_colour_rel$3266+1,___fladd@b+1
  7512   003140  C06A  F003         	movff	_colour_rel$3266+2,___fladd@b+2
  7513   003144  C06B  F004         	movff	_colour_rel$3266+3,___fladd@b+3
  7514   003148  EC4C  F011         	call	___fladd	;wreg free
  7515   00314C  C001  F036         	movff	?___fladd,___fldiv@a
  7516   003150  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7517   003154  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7518   003158  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7519   00315C  ECC1  F015         	call	___fldiv	;wreg free
  7520   003160  EE20 F008          	lfsr	2,8
  7521   003164  504D               	movf	colour_rel@rel^0,w,c
  7522   003166  26D9               	addwf	fsr2l,f,c
  7523   003168  504E               	movf	(colour_rel@rel+1)^0,w,c
  7524   00316A  22DA               	addwfc	fsr2h,f,c
  7525   00316C  C032  FFDE         	movff	?___fldiv,postinc2
  7526   003170  C033  FFDE         	movff	?___fldiv+1,postinc2
  7527   003174  C034  FFDE         	movff	?___fldiv+2,postinc2
  7528   003178  C035  FFDE         	movff	?___fldiv+3,postinc2
  7529   00317C                     
  7530                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7531   00317C  C070  F005         	movff	colour_rel@G,___fladd@a
  7532   003180  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7533   003184  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7534   003188  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7535   00318C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7536   003190  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7537   003194  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7538   003198  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7539   00319C  EC4C  F011         	call	___fladd	;wreg free
  7540   0031A0  C001  F064         	movff	?___fladd,_colour_rel$3265
  7541   0031A4  C002  F065         	movff	?___fladd+1,_colour_rel$3265+1
  7542   0031A8  C003  F066         	movff	?___fladd+2,_colour_rel$3265+2
  7543   0031AC  C004  F067         	movff	?___fladd+3,_colour_rel$3265+3
  7544   0031B0                     
  7545                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7546   0031B0  C074  F005         	movff	colour_rel@B,___fladd@a
  7547   0031B4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7548   0031B8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7549   0031BC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7550   0031C0  C064  F001         	movff	_colour_rel$3265,___fladd@b
  7551   0031C4  C065  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7552   0031C8  C066  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7553   0031CC  C067  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7554   0031D0  EC4C  F011         	call	___fladd	;wreg free
  7555   0031D4  C001  F068         	movff	?___fladd,_colour_rel$3266
  7556   0031D8  C002  F069         	movff	?___fladd+1,_colour_rel$3266+1
  7557   0031DC  C003  F06A         	movff	?___fladd+2,_colour_rel$3266+2
  7558   0031E0  C004  F06B         	movff	?___fladd+3,_colour_rel$3266+3
  7559                           
  7560                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7561   0031E4  C070  F032         	movff	colour_rel@G,___fldiv@b
  7562   0031E8  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7563   0031EC  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7564   0031F0  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7565   0031F4  C060  F005         	movff	colour_rel@L,___fladd@a
  7566   0031F8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7567   0031FC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7568   003200  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7569   003204  C068  F001         	movff	_colour_rel$3266,___fladd@b
  7570   003208  C069  F002         	movff	_colour_rel$3266+1,___fladd@b+1
  7571   00320C  C06A  F003         	movff	_colour_rel$3266+2,___fladd@b+2
  7572   003210  C06B  F004         	movff	_colour_rel$3266+3,___fladd@b+3
  7573   003214  EC4C  F011         	call	___fladd	;wreg free
  7574   003218  C001  F036         	movff	?___fladd,___fldiv@a
  7575   00321C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7576   003220  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7577   003224  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7578   003228  ECC1  F015         	call	___fldiv	;wreg free
  7579   00322C  EE20 F004          	lfsr	2,4
  7580   003230  504D               	movf	colour_rel@rel^0,w,c
  7581   003232  26D9               	addwf	fsr2l,f,c
  7582   003234  504E               	movf	(colour_rel@rel+1)^0,w,c
  7583   003236  22DA               	addwfc	fsr2h,f,c
  7584   003238  C032  FFDE         	movff	?___fldiv,postinc2
  7585   00323C  C033  FFDE         	movff	?___fldiv+1,postinc2
  7586   003240  C034  FFDE         	movff	?___fldiv+2,postinc2
  7587   003244  C035  FFDE         	movff	?___fldiv+3,postinc2
  7588   003248  0012               	return		;funcret
  7589   00324A                     __end_of_colour_rel:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _colour_move *****************
  7593 ;; Defined at:
  7594 ;;		line 8 in file "colour_move.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  recognized_c    2   44[COMRAM] int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;Total ram usage:        2 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 7
  7615 ;; This function calls:
  7616 ;;		_BlueMove
  7617 ;;		_GreenMove
  7618 ;;		_LightBlueMove
  7619 ;;		_OrangeMove
  7620 ;;		_PinkMove
  7621 ;;		_RedMove
  7622 ;;		_RetryMove
  7623 ;;		_YellowMove
  7624 ;;		_go_Home
  7625 ;; This function is called by:
  7626 ;;		_main
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text34
  7631   003D80                     __ptext34:
  7632                           	callstack 0
  7633   003D80                     _colour_move:
  7634                           	callstack 23
  7635   003D80                     
  7636                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7637   003D80  042D               	decf	colour_move@recognized_colour^0,w,c
  7638   003D82  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7639   003D84  A4D8               	btfss	status,2,c
  7640   003D86  EFC7  F01E         	goto	u5631
  7641   003D8A  EFC9  F01E         	goto	u5630
  7642   003D8E                     u5631:
  7643   003D8E  EFE7  F01E         	goto	l5716
  7644   003D92                     u5630:
  7645   003D92                     
  7646                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7647   003D92  0E61               	movlw	low _motorL
  7648   003D94  6E20               	movwf	RedMove@mL^0,c
  7649   003D96  0E01               	movlw	high _motorL
  7650   003D98  6E21               	movwf	(RedMove@mL+1)^0,c
  7651   003D9A  0E58               	movlw	low _motorR
  7652   003D9C  6E22               	movwf	RedMove@mR^0,c
  7653   003D9E  0E01               	movlw	high _motorR
  7654   003DA0  6E23               	movwf	(RedMove@mR+1)^0,c
  7655   003DA2  EC23  F02F         	call	_RedMove	;wreg free
  7656   003DA6                     
  7657                           ;colour_move.c: 14:         TMR0H=0;
  7658   003DA6  0E00               	movlw	0
  7659   003DA8  6ED4               	movwf	212,c	;volatile
  7660   003DAA                     
  7661                           ;colour_move.c: 15:         TMR0L=0;
  7662   003DAA  0E00               	movlw	0
  7663   003DAC  6ED3               	movwf	211,c	;volatile
  7664   003DAE                     
  7665                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7666   003DAE  0E1A               	movlw	low _WayBack
  7667   003DB0  0101               	movlb	1	; () banked
  7668   003DB2  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7669   003DB4  6ED9               	movwf	fsr2l,c
  7670   003DB6  0E01               	movlw	high _WayBack
  7671   003DB8  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7672   003DBA  6EDA               	movwf	fsr2h,c
  7673   003DBC  0E01               	movlw	1
  7674   003DBE  6EDF               	movwf	indf2,c
  7675   003DC0                     l5714:
  7676                           
  7677                           ; BSR set to: 1
  7678                           ;colour_move.c: 17:         lost_count=0;
  7679   003DC0  0E00               	movlw	0
  7680   003DC2  0100               	movlb	0	; () banked
  7681   003DC4  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7682   003DC6  0E00               	movlw	0
  7683   003DC8  6FEB               	movwf	_lost_count& (0+255),b
  7684                           
  7685                           ;colour_move.c: 18:     }
  7686   003DCA  EFFB  F01F         	goto	l752
  7687   003DCE                     l5716:
  7688   003DCE  0E02               	movlw	2
  7689   003DD0  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7690   003DD2  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7691   003DD4  A4D8               	btfss	status,2,c
  7692   003DD6  EFEF  F01E         	goto	u5641
  7693   003DDA  EFF1  F01E         	goto	u5640
  7694   003DDE                     u5641:
  7695   003DDE  EF0A  F01F         	goto	l5728
  7696   003DE2                     u5640:
  7697   003DE2                     
  7698                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7699   003DE2  0E61               	movlw	low _motorL
  7700   003DE4  6E20               	movwf	OrangeMove@mL^0,c
  7701   003DE6  0E01               	movlw	high _motorL
  7702   003DE8  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7703   003DEA  0E58               	movlw	low _motorR
  7704   003DEC  6E22               	movwf	OrangeMove@mR^0,c
  7705   003DEE  0E01               	movlw	high _motorR
  7706   003DF0  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7707   003DF2  EC98  F02C         	call	_OrangeMove	;wreg free
  7708   003DF6                     
  7709                           ;colour_move.c: 21:         TMR0H=0;
  7710   003DF6  0E00               	movlw	0
  7711   003DF8  6ED4               	movwf	212,c	;volatile
  7712   003DFA                     
  7713                           ;colour_move.c: 22:         TMR0L=0;
  7714   003DFA  0E00               	movlw	0
  7715   003DFC  6ED3               	movwf	211,c	;volatile
  7716   003DFE                     
  7717                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7718   003DFE  0E1A               	movlw	low _WayBack
  7719   003E00  0101               	movlb	1	; () banked
  7720   003E02  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7721   003E04  6ED9               	movwf	fsr2l,c
  7722   003E06  0E01               	movlw	high _WayBack
  7723   003E08  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7724   003E0A  6EDA               	movwf	fsr2h,c
  7725   003E0C  0E02               	movlw	2
  7726   003E0E  6EDF               	movwf	indf2,c
  7727   003E10  EFE0  F01E         	goto	l5714
  7728   003E14                     l5728:
  7729   003E14  0E03               	movlw	3
  7730   003E16  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7731   003E18  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7732   003E1A  A4D8               	btfss	status,2,c
  7733   003E1C  EF12  F01F         	goto	u5651
  7734   003E20  EF14  F01F         	goto	u5650
  7735   003E24                     u5651:
  7736   003E24  EF2D  F01F         	goto	l5740
  7737   003E28                     u5650:
  7738   003E28                     
  7739                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7740   003E28  0E61               	movlw	low _motorL
  7741   003E2A  6E20               	movwf	YellowMove@mL^0,c
  7742   003E2C  0E01               	movlw	high _motorL
  7743   003E2E  6E21               	movwf	(YellowMove@mL+1)^0,c
  7744   003E30  0E58               	movlw	low _motorR
  7745   003E32  6E22               	movwf	YellowMove@mR^0,c
  7746   003E34  0E01               	movlw	high _motorR
  7747   003E36  6E23               	movwf	(YellowMove@mR+1)^0,c
  7748   003E38  ECEA  F02C         	call	_YellowMove	;wreg free
  7749   003E3C                     
  7750                           ;colour_move.c: 28:         TMR0H=0;
  7751   003E3C  0E00               	movlw	0
  7752   003E3E  6ED4               	movwf	212,c	;volatile
  7753   003E40                     
  7754                           ;colour_move.c: 29:         TMR0L=0;
  7755   003E40  0E00               	movlw	0
  7756   003E42  6ED3               	movwf	211,c	;volatile
  7757   003E44                     
  7758                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7759   003E44  0E1A               	movlw	low _WayBack
  7760   003E46  0101               	movlb	1	; () banked
  7761   003E48  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7762   003E4A  6ED9               	movwf	fsr2l,c
  7763   003E4C  0E01               	movlw	high _WayBack
  7764   003E4E  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7765   003E50  6EDA               	movwf	fsr2h,c
  7766   003E52  0E03               	movlw	3
  7767   003E54  6EDF               	movwf	indf2,c
  7768   003E56  EFE0  F01E         	goto	l5714
  7769   003E5A                     l5740:
  7770   003E5A  0E04               	movlw	4
  7771   003E5C  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7772   003E5E  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7773   003E60  A4D8               	btfss	status,2,c
  7774   003E62  EF35  F01F         	goto	u5661
  7775   003E66  EF37  F01F         	goto	u5660
  7776   003E6A                     u5661:
  7777   003E6A  EF50  F01F         	goto	l5752
  7778   003E6E                     u5660:
  7779   003E6E                     
  7780                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7781   003E6E  0E61               	movlw	low _motorL
  7782   003E70  6E20               	movwf	BlueMove@mL^0,c
  7783   003E72  0E01               	movlw	high _motorL
  7784   003E74  6E21               	movwf	(BlueMove@mL+1)^0,c
  7785   003E76  0E58               	movlw	low _motorR
  7786   003E78  6E22               	movwf	BlueMove@mR^0,c
  7787   003E7A  0E01               	movlw	high _motorR
  7788   003E7C  6E23               	movwf	(BlueMove@mR+1)^0,c
  7789   003E7E  ECFF  F02A         	call	_BlueMove	;wreg free
  7790   003E82                     
  7791                           ;colour_move.c: 35:         TMR0H=0;
  7792   003E82  0E00               	movlw	0
  7793   003E84  6ED4               	movwf	212,c	;volatile
  7794   003E86                     
  7795                           ;colour_move.c: 36:         TMR0L=0;
  7796   003E86  0E00               	movlw	0
  7797   003E88  6ED3               	movwf	211,c	;volatile
  7798   003E8A                     
  7799                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7800   003E8A  0E1A               	movlw	low _WayBack
  7801   003E8C  0101               	movlb	1	; () banked
  7802   003E8E  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7803   003E90  6ED9               	movwf	fsr2l,c
  7804   003E92  0E01               	movlw	high _WayBack
  7805   003E94  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7806   003E96  6EDA               	movwf	fsr2h,c
  7807   003E98  0E04               	movlw	4
  7808   003E9A  6EDF               	movwf	indf2,c
  7809   003E9C  EFE0  F01E         	goto	l5714
  7810   003EA0                     l5752:
  7811   003EA0  0E05               	movlw	5
  7812   003EA2  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7813   003EA4  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7814   003EA6  A4D8               	btfss	status,2,c
  7815   003EA8  EF58  F01F         	goto	u5671
  7816   003EAC  EF5A  F01F         	goto	u5670
  7817   003EB0                     u5671:
  7818   003EB0  EF73  F01F         	goto	l5764
  7819   003EB4                     u5670:
  7820   003EB4                     
  7821                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7822   003EB4  0E61               	movlw	low _motorL
  7823   003EB6  6E20               	movwf	GreenMove@mL^0,c
  7824   003EB8  0E01               	movlw	high _motorL
  7825   003EBA  6E21               	movwf	(GreenMove@mL+1)^0,c
  7826   003EBC  0E58               	movlw	low _motorR
  7827   003EBE  6E22               	movwf	GreenMove@mR^0,c
  7828   003EC0  0E01               	movlw	high _motorR
  7829   003EC2  6E23               	movwf	(GreenMove@mR+1)^0,c
  7830   003EC4  EC42  F02F         	call	_GreenMove	;wreg free
  7831   003EC8                     
  7832                           ;colour_move.c: 42:         TMR0H=0;
  7833   003EC8  0E00               	movlw	0
  7834   003ECA  6ED4               	movwf	212,c	;volatile
  7835   003ECC                     
  7836                           ;colour_move.c: 43:         TMR0L=0;
  7837   003ECC  0E00               	movlw	0
  7838   003ECE  6ED3               	movwf	211,c	;volatile
  7839   003ED0                     
  7840                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7841   003ED0  0E1A               	movlw	low _WayBack
  7842   003ED2  0101               	movlb	1	; () banked
  7843   003ED4  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7844   003ED6  6ED9               	movwf	fsr2l,c
  7845   003ED8  0E01               	movlw	high _WayBack
  7846   003EDA  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7847   003EDC  6EDA               	movwf	fsr2h,c
  7848   003EDE  0E05               	movlw	5
  7849   003EE0  6EDF               	movwf	indf2,c
  7850   003EE2  EFE0  F01E         	goto	l5714
  7851   003EE6                     l5764:
  7852   003EE6  0E06               	movlw	6
  7853   003EE8  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7854   003EEA  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7855   003EEC  A4D8               	btfss	status,2,c
  7856   003EEE  EF7B  F01F         	goto	u5681
  7857   003EF2  EF7D  F01F         	goto	u5680
  7858   003EF6                     u5681:
  7859   003EF6  EF96  F01F         	goto	l5776
  7860   003EFA                     u5680:
  7861   003EFA                     
  7862                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7863   003EFA  0E61               	movlw	low _motorL
  7864   003EFC  6E20               	movwf	LightBlueMove@mL^0,c
  7865   003EFE  0E01               	movlw	high _motorL
  7866   003F00  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7867   003F02  0E58               	movlw	low _motorR
  7868   003F04  6E22               	movwf	LightBlueMove@mR^0,c
  7869   003F06  0E01               	movlw	high _motorR
  7870   003F08  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7871   003F0A  ECC1  F02C         	call	_LightBlueMove	;wreg free
  7872   003F0E                     
  7873                           ;colour_move.c: 49:         TMR0H=0;
  7874   003F0E  0E00               	movlw	0
  7875   003F10  6ED4               	movwf	212,c	;volatile
  7876   003F12                     
  7877                           ;colour_move.c: 50:         TMR0L=0;
  7878   003F12  0E00               	movlw	0
  7879   003F14  6ED3               	movwf	211,c	;volatile
  7880   003F16                     
  7881                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7882   003F16  0E1A               	movlw	low _WayBack
  7883   003F18  0101               	movlb	1	; () banked
  7884   003F1A  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7885   003F1C  6ED9               	movwf	fsr2l,c
  7886   003F1E  0E01               	movlw	high _WayBack
  7887   003F20  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7888   003F22  6EDA               	movwf	fsr2h,c
  7889   003F24  0E06               	movlw	6
  7890   003F26  6EDF               	movwf	indf2,c
  7891   003F28  EFE0  F01E         	goto	l5714
  7892   003F2C                     l5776:
  7893   003F2C  0E07               	movlw	7
  7894   003F2E  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7895   003F30  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7896   003F32  A4D8               	btfss	status,2,c
  7897   003F34  EF9E  F01F         	goto	u5691
  7898   003F38  EFA0  F01F         	goto	u5690
  7899   003F3C                     u5691:
  7900   003F3C  EFB9  F01F         	goto	l5788
  7901   003F40                     u5690:
  7902   003F40                     
  7903                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7904   003F40  0E61               	movlw	low _motorL
  7905   003F42  6E20               	movwf	PinkMove@mL^0,c
  7906   003F44  0E01               	movlw	high _motorL
  7907   003F46  6E21               	movwf	(PinkMove@mL+1)^0,c
  7908   003F48  0E58               	movlw	low _motorR
  7909   003F4A  6E22               	movwf	PinkMove@mR^0,c
  7910   003F4C  0E01               	movlw	high _motorR
  7911   003F4E  6E23               	movwf	(PinkMove@mR+1)^0,c
  7912   003F50  EC13  F02D         	call	_PinkMove	;wreg free
  7913   003F54                     
  7914                           ;colour_move.c: 56:         TMR0H=0;
  7915   003F54  0E00               	movlw	0
  7916   003F56  6ED4               	movwf	212,c	;volatile
  7917   003F58                     
  7918                           ;colour_move.c: 57:         TMR0L=0;
  7919   003F58  0E00               	movlw	0
  7920   003F5A  6ED3               	movwf	211,c	;volatile
  7921   003F5C                     
  7922                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7923   003F5C  0E1A               	movlw	low _WayBack
  7924   003F5E  0101               	movlb	1	; () banked
  7925   003F60  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7926   003F62  6ED9               	movwf	fsr2l,c
  7927   003F64  0E01               	movlw	high _WayBack
  7928   003F66  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7929   003F68  6EDA               	movwf	fsr2h,c
  7930   003F6A  0E07               	movlw	7
  7931   003F6C  6EDF               	movwf	indf2,c
  7932   003F6E  EFE0  F01E         	goto	l5714
  7933   003F72                     l5788:
  7934   003F72  0E0A               	movlw	10
  7935   003F74  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7936   003F76  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7937   003F78  A4D8               	btfss	status,2,c
  7938   003F7A  EFC1  F01F         	goto	u5701
  7939   003F7E  EFC3  F01F         	goto	u5700
  7940   003F82                     u5701:
  7941   003F82  EFF0  F01F         	goto	l5802
  7942   003F86                     u5700:
  7943   003F86                     
  7944                           ;colour_move.c: 62:         lost_count++;
  7945   003F86  0100               	movlb	0	; () banked
  7946   003F88  4BEB               	infsnz	_lost_count& (0+255),f,b
  7947   003F8A  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7948   003F8C                     
  7949                           ; BSR set to: 0
  7950                           ;colour_move.c: 63:         if (lost_count>=3){
  7951   003F8C  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7952   003F8E  EFD2  F01F         	goto	u5711
  7953   003F92  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7954   003F94  E109               	bnz	u5710
  7955   003F96  0E03               	movlw	3
  7956   003F98  5DEB               	subwf	_lost_count& (0+255),w,b
  7957   003F9A  A0D8               	btfss	status,0,c
  7958   003F9C  EFD2  F01F         	goto	u5711
  7959   003FA0  EFD4  F01F         	goto	u5710
  7960   003FA4                     u5711:
  7961   003FA4  EFE0  F01F         	goto	l5796
  7962   003FA8                     u5710:
  7963   003FA8                     l5794:
  7964                           
  7965                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  7966   003FA8  0E1A               	movlw	low _WayBack
  7967   003FAA  6E24               	movwf	go_Home@WayBack^0,c
  7968   003FAC  0E01               	movlw	high _WayBack
  7969   003FAE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  7970   003FB0  0E3C               	movlw	low _Time_forward
  7971   003FB2  6E26               	movwf	go_Home@Time_forward^0,c
  7972   003FB4  0E02               	movlw	high _Time_forward
  7973   003FB6  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  7974   003FB8  ECA8  F01A         	call	_go_Home	;wreg free
  7975                           
  7976                           ;colour_move.c: 65:         }
  7977   003FBC  EFFB  F01F         	goto	l752
  7978   003FC0                     l5796:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  7982   003FC0  0E61               	movlw	low _motorL
  7983   003FC2  6E20               	movwf	RetryMove@mL^0,c
  7984   003FC4  0E01               	movlw	high _motorL
  7985   003FC6  6E21               	movwf	(RetryMove@mL+1)^0,c
  7986   003FC8  0E58               	movlw	low _motorR
  7987   003FCA  6E22               	movwf	RetryMove@mR^0,c
  7988   003FCC  0E01               	movlw	high _motorR
  7989   003FCE  6E23               	movwf	(RetryMove@mR+1)^0,c
  7990   003FD0  EC97  F02A         	call	_RetryMove	;wreg free
  7991   003FD4                     
  7992                           ;colour_move.c: 68:             TMR0H=0;
  7993   003FD4  0E00               	movlw	0
  7994   003FD6  6ED4               	movwf	212,c	;volatile
  7995   003FD8                     
  7996                           ;colour_move.c: 69:             TMR0L=0;
  7997   003FD8  0E00               	movlw	0
  7998   003FDA  6ED3               	movwf	211,c	;volatile
  7999   003FDC  EFFB  F01F         	goto	l752
  8000   003FE0                     l5802:
  8001   003FE0  502D               	movf	colour_move@recognized_colour^0,w,c
  8002   003FE2  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8003   003FE4  A4D8               	btfss	status,2,c
  8004   003FE6  EFF7  F01F         	goto	u5721
  8005   003FEA  EFF9  F01F         	goto	u5720
  8006   003FEE                     u5721:
  8007   003FEE  EFFB  F01F         	goto	l744
  8008   003FF2                     u5720:
  8009   003FF2  EFD4  F01F         	goto	l5794
  8010   003FF6                     l744:
  8011   003FF6                     l752:
  8012   003FF6  0012               	return		;funcret
  8013   003FF8                     __end_of_colour_move:
  8014                           	callstack 0
  8015                           
  8016 ;; *************** function _go_Home *****************
  8017 ;; Defined at:
  8018 ;;		line 4 in file "Memory.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8021 ;;		 -> WayBack(50), 
  8022 ;;  Time_forward    2   37[COMRAM] PTR int 
  8023 ;;		 -> Time_forward(100), 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  i               2   42[COMRAM] int 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;Total ram usage:        9 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 6
  8042 ;; This function calls:
  8043 ;;		_BlueMove
  8044 ;;		_GreenMove
  8045 ;;		_LightBlueMove
  8046 ;;		_OrangeMove
  8047 ;;		_RedMove
  8048 ;;		_ReversePink
  8049 ;;		_ReverseYellow
  8050 ;;		_reverseDetect
  8051 ;;		_stop
  8052 ;;		_timed_forward
  8053 ;; This function is called by:
  8054 ;;		_main
  8055 ;;		_colour_move
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text35
  8060   003550                     __ptext35:
  8061                           	callstack 0
  8062   003550                     _go_Home:
  8063                           	callstack 24
  8064   003550                     
  8065                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8066   003550  0E61               	movlw	low _motorL
  8067   003552  6E20               	movwf	BlueMove@mL^0,c
  8068   003554  0E01               	movlw	high _motorL
  8069   003556  6E21               	movwf	(BlueMove@mL+1)^0,c
  8070   003558  0E58               	movlw	low _motorR
  8071   00355A  6E22               	movwf	BlueMove@mR^0,c
  8072   00355C  0E01               	movlw	high _motorR
  8073   00355E  6E23               	movwf	(BlueMove@mR+1)^0,c
  8074   003560  ECFF  F02A         	call	_BlueMove	;wreg free
  8075   003564                     
  8076                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8077   003564  9ED5               	bcf	213,7,c	;volatile
  8078   003566                     
  8079                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8080   003566  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8081   00356A  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8082   00356E                     l5246:
  8083   00356E  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8084   003570  EFBE  F01A         	goto	u5030
  8085   003574  EFBC  F01A         	goto	u5031
  8086   003578                     u5031:
  8087   003578  EFC0  F01A         	goto	l5250
  8088   00357C                     u5030:
  8089   00357C  EF17  F01C         	goto	l611
  8090   003580                     l5250:
  8091                           
  8092                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8093   003580  0E61               	movlw	low _motorL
  8094   003582  6E14               	movwf	timed_forward@mL^0,c
  8095   003584  0E01               	movlw	high _motorL
  8096   003586  6E15               	movwf	(timed_forward@mL+1)^0,c
  8097   003588  0E58               	movlw	low _motorR
  8098   00358A  6E16               	movwf	timed_forward@mR^0,c
  8099   00358C  0E01               	movlw	high _motorR
  8100   00358E  6E17               	movwf	(timed_forward@mR+1)^0,c
  8101   003590  90D8               	bcf	status,0,c
  8102   003592  342B               	rlcf	go_Home@i^0,w,c
  8103   003594  6ED9               	movwf	fsr2l,c
  8104   003596  342C               	rlcf	(go_Home@i+1)^0,w,c
  8105   003598  6EDA               	movwf	fsr2h,c
  8106   00359A  5026               	movf	go_Home@Time_forward^0,w,c
  8107   00359C  26D9               	addwf	fsr2l,f,c
  8108   00359E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8109   0035A0  22DA               	addwfc	fsr2h,f,c
  8110   0035A2  CFDE F018          	movff	postinc2,timed_forward@time
  8111   0035A6  CFDD F019          	movff	postdec2,timed_forward@time+1
  8112   0035AA  EC80  F027         	call	_timed_forward	;wreg free
  8113   0035AE                     
  8114                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8115   0035AE  502B               	movf	go_Home@i^0,w,c
  8116   0035B0  2424               	addwf	go_Home@WayBack^0,w,c
  8117   0035B2  6E28               	movwf	??_go_Home^0,c
  8118   0035B4  502C               	movf	(go_Home@i+1)^0,w,c
  8119   0035B6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8120   0035B8  6E29               	movwf	(??_go_Home+1)^0,c
  8121   0035BA  0EFF               	movlw	255
  8122   0035BC  2428               	addwf	??_go_Home^0,w,c
  8123   0035BE  6ED9               	movwf	fsr2l,c
  8124   0035C0  0EFF               	movlw	255
  8125   0035C2  2029               	addwfc	(??_go_Home+1)^0,w,c
  8126   0035C4  6EDA               	movwf	fsr2h,c
  8127   0035C6  04DE               	decf	postinc2,w,c
  8128   0035C8  A4D8               	btfss	status,2,c
  8129   0035CA  EFE9  F01A         	goto	u5041
  8130   0035CE  EFEB  F01A         	goto	u5040
  8131   0035D2                     u5041:
  8132   0035D2  EF01  F01B         	goto	l5256
  8133   0035D6                     u5040:
  8134   0035D6                     
  8135                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  8136   0035D6  0E61               	movlw	low _motorL
  8137   0035D8  6E1A               	movwf	reverseDetect@mL^0,c
  8138   0035DA  0E01               	movlw	high _motorL
  8139   0035DC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8140   0035DE  0E58               	movlw	low _motorR
  8141   0035E0  6E1C               	movwf	reverseDetect@mR^0,c
  8142   0035E2  0E01               	movlw	high _motorR
  8143   0035E4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8144   0035E6  EC92  F02B         	call	_reverseDetect	;wreg free
  8145                           
  8146                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8147   0035EA  0E61               	movlw	low _motorL
  8148   0035EC  6E20               	movwf	GreenMove@mL^0,c
  8149   0035EE  0E01               	movlw	high _motorL
  8150   0035F0  6E21               	movwf	(GreenMove@mL+1)^0,c
  8151   0035F2  0E58               	movlw	low _motorR
  8152   0035F4  6E22               	movwf	GreenMove@mR^0,c
  8153   0035F6  0E01               	movlw	high _motorR
  8154   0035F8  6E23               	movwf	(GreenMove@mR+1)^0,c
  8155   0035FA  EC42  F02F         	call	_GreenMove	;wreg free
  8156                           
  8157                           ;Memory.c: 14:         }
  8158   0035FE  EF03  F01C         	goto	l599
  8159   003602                     l5256:
  8160   003602  502B               	movf	go_Home@i^0,w,c
  8161   003604  2424               	addwf	go_Home@WayBack^0,w,c
  8162   003606  6E28               	movwf	??_go_Home^0,c
  8163   003608  502C               	movf	(go_Home@i+1)^0,w,c
  8164   00360A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8165   00360C  6E29               	movwf	(??_go_Home+1)^0,c
  8166   00360E  0EFF               	movlw	255
  8167   003610  2428               	addwf	??_go_Home^0,w,c
  8168   003612  6ED9               	movwf	fsr2l,c
  8169   003614  0EFF               	movlw	255
  8170   003616  2029               	addwfc	(??_go_Home+1)^0,w,c
  8171   003618  6EDA               	movwf	fsr2h,c
  8172   00361A  0E02               	movlw	2
  8173   00361C  18DE               	xorwf	postinc2,w,c
  8174   00361E  A4D8               	btfss	status,2,c
  8175   003620  EF14  F01B         	goto	u5051
  8176   003624  EF16  F01B         	goto	u5050
  8177   003628                     u5051:
  8178   003628  EF2C  F01B         	goto	l5260
  8179   00362C                     u5050:
  8180   00362C                     
  8181                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  8182   00362C  0E61               	movlw	low _motorL
  8183   00362E  6E1A               	movwf	reverseDetect@mL^0,c
  8184   003630  0E01               	movlw	high _motorL
  8185   003632  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8186   003634  0E58               	movlw	low _motorR
  8187   003636  6E1C               	movwf	reverseDetect@mR^0,c
  8188   003638  0E01               	movlw	high _motorR
  8189   00363A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8190   00363C  EC92  F02B         	call	_reverseDetect	;wreg free
  8191                           
  8192                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  8193   003640  0E61               	movlw	low _motorL
  8194   003642  6E20               	movwf	LightBlueMove@mL^0,c
  8195   003644  0E01               	movlw	high _motorL
  8196   003646  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  8197   003648  0E58               	movlw	low _motorR
  8198   00364A  6E22               	movwf	LightBlueMove@mR^0,c
  8199   00364C  0E01               	movlw	high _motorR
  8200   00364E  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  8201   003650  ECC1  F02C         	call	_LightBlueMove	;wreg free
  8202                           
  8203                           ;Memory.c: 18:         }
  8204   003654  EF03  F01C         	goto	l599
  8205   003658                     l5260:
  8206   003658  502B               	movf	go_Home@i^0,w,c
  8207   00365A  2424               	addwf	go_Home@WayBack^0,w,c
  8208   00365C  6E28               	movwf	??_go_Home^0,c
  8209   00365E  502C               	movf	(go_Home@i+1)^0,w,c
  8210   003660  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8211   003662  6E29               	movwf	(??_go_Home+1)^0,c
  8212   003664  0EFF               	movlw	255
  8213   003666  2428               	addwf	??_go_Home^0,w,c
  8214   003668  6ED9               	movwf	fsr2l,c
  8215   00366A  0EFF               	movlw	255
  8216   00366C  2029               	addwfc	(??_go_Home+1)^0,w,c
  8217   00366E  6EDA               	movwf	fsr2h,c
  8218   003670  0E03               	movlw	3
  8219   003672  18DE               	xorwf	postinc2,w,c
  8220   003674  A4D8               	btfss	status,2,c
  8221   003676  EF3F  F01B         	goto	u5061
  8222   00367A  EF41  F01B         	goto	u5060
  8223   00367E                     u5061:
  8224   00367E  EF57  F01B         	goto	l5264
  8225   003682                     u5060:
  8226   003682                     
  8227                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  8228   003682  0E61               	movlw	low _motorL
  8229   003684  6E1A               	movwf	reverseDetect@mL^0,c
  8230   003686  0E01               	movlw	high _motorL
  8231   003688  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8232   00368A  0E58               	movlw	low _motorR
  8233   00368C  6E1C               	movwf	reverseDetect@mR^0,c
  8234   00368E  0E01               	movlw	high _motorR
  8235   003690  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8236   003692  EC92  F02B         	call	_reverseDetect	;wreg free
  8237                           
  8238                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  8239   003696  0E61               	movlw	low _motorL
  8240   003698  6E20               	movwf	ReverseYellow@mL^0,c
  8241   00369A  0E01               	movlw	high _motorL
  8242   00369C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8243   00369E  0E58               	movlw	low _motorR
  8244   0036A0  6E22               	movwf	ReverseYellow@mR^0,c
  8245   0036A2  0E01               	movlw	high _motorR
  8246   0036A4  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8247   0036A6  ECCA  F026         	call	_ReverseYellow	;wreg free
  8248                           
  8249                           ;Memory.c: 22:         }
  8250   0036AA  EF03  F01C         	goto	l599
  8251   0036AE                     l5264:
  8252   0036AE  502B               	movf	go_Home@i^0,w,c
  8253   0036B0  2424               	addwf	go_Home@WayBack^0,w,c
  8254   0036B2  6E28               	movwf	??_go_Home^0,c
  8255   0036B4  502C               	movf	(go_Home@i+1)^0,w,c
  8256   0036B6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8257   0036B8  6E29               	movwf	(??_go_Home+1)^0,c
  8258   0036BA  0EFF               	movlw	255
  8259   0036BC  2428               	addwf	??_go_Home^0,w,c
  8260   0036BE  6ED9               	movwf	fsr2l,c
  8261   0036C0  0EFF               	movlw	255
  8262   0036C2  2029               	addwfc	(??_go_Home+1)^0,w,c
  8263   0036C4  6EDA               	movwf	fsr2h,c
  8264   0036C6  0E04               	movlw	4
  8265   0036C8  18DE               	xorwf	postinc2,w,c
  8266   0036CA  A4D8               	btfss	status,2,c
  8267   0036CC  EF6A  F01B         	goto	u5071
  8268   0036D0  EF6C  F01B         	goto	u5070
  8269   0036D4                     u5071:
  8270   0036D4  EF82  F01B         	goto	l5268
  8271   0036D8                     u5070:
  8272   0036D8                     
  8273                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  8274   0036D8  0E61               	movlw	low _motorL
  8275   0036DA  6E1A               	movwf	reverseDetect@mL^0,c
  8276   0036DC  0E01               	movlw	high _motorL
  8277   0036DE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8278   0036E0  0E58               	movlw	low _motorR
  8279   0036E2  6E1C               	movwf	reverseDetect@mR^0,c
  8280   0036E4  0E01               	movlw	high _motorR
  8281   0036E6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8282   0036E8  EC92  F02B         	call	_reverseDetect	;wreg free
  8283                           
  8284                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  8285   0036EC  0E61               	movlw	low _motorL
  8286   0036EE  6E20               	movwf	BlueMove@mL^0,c
  8287   0036F0  0E01               	movlw	high _motorL
  8288   0036F2  6E21               	movwf	(BlueMove@mL+1)^0,c
  8289   0036F4  0E58               	movlw	low _motorR
  8290   0036F6  6E22               	movwf	BlueMove@mR^0,c
  8291   0036F8  0E01               	movlw	high _motorR
  8292   0036FA  6E23               	movwf	(BlueMove@mR+1)^0,c
  8293   0036FC  ECFF  F02A         	call	_BlueMove	;wreg free
  8294                           
  8295                           ;Memory.c: 26:         }
  8296   003700  EF03  F01C         	goto	l599
  8297   003704                     l5268:
  8298   003704  502B               	movf	go_Home@i^0,w,c
  8299   003706  2424               	addwf	go_Home@WayBack^0,w,c
  8300   003708  6E28               	movwf	??_go_Home^0,c
  8301   00370A  502C               	movf	(go_Home@i+1)^0,w,c
  8302   00370C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8303   00370E  6E29               	movwf	(??_go_Home+1)^0,c
  8304   003710  0EFF               	movlw	255
  8305   003712  2428               	addwf	??_go_Home^0,w,c
  8306   003714  6ED9               	movwf	fsr2l,c
  8307   003716  0EFF               	movlw	255
  8308   003718  2029               	addwfc	(??_go_Home+1)^0,w,c
  8309   00371A  6EDA               	movwf	fsr2h,c
  8310   00371C  0E05               	movlw	5
  8311   00371E  18DE               	xorwf	postinc2,w,c
  8312   003720  A4D8               	btfss	status,2,c
  8313   003722  EF95  F01B         	goto	u5081
  8314   003726  EF97  F01B         	goto	u5080
  8315   00372A                     u5081:
  8316   00372A  EFAD  F01B         	goto	l5272
  8317   00372E                     u5080:
  8318   00372E                     
  8319                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  8320   00372E  0E61               	movlw	low _motorL
  8321   003730  6E1A               	movwf	reverseDetect@mL^0,c
  8322   003732  0E01               	movlw	high _motorL
  8323   003734  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8324   003736  0E58               	movlw	low _motorR
  8325   003738  6E1C               	movwf	reverseDetect@mR^0,c
  8326   00373A  0E01               	movlw	high _motorR
  8327   00373C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8328   00373E  EC92  F02B         	call	_reverseDetect	;wreg free
  8329                           
  8330                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8331   003742  0E61               	movlw	low _motorL
  8332   003744  6E20               	movwf	RedMove@mL^0,c
  8333   003746  0E01               	movlw	high _motorL
  8334   003748  6E21               	movwf	(RedMove@mL+1)^0,c
  8335   00374A  0E58               	movlw	low _motorR
  8336   00374C  6E22               	movwf	RedMove@mR^0,c
  8337   00374E  0E01               	movlw	high _motorR
  8338   003750  6E23               	movwf	(RedMove@mR+1)^0,c
  8339   003752  EC23  F02F         	call	_RedMove	;wreg free
  8340                           
  8341                           ;Memory.c: 30:         }
  8342   003756  EF03  F01C         	goto	l599
  8343   00375A                     l5272:
  8344   00375A  502B               	movf	go_Home@i^0,w,c
  8345   00375C  2424               	addwf	go_Home@WayBack^0,w,c
  8346   00375E  6E28               	movwf	??_go_Home^0,c
  8347   003760  502C               	movf	(go_Home@i+1)^0,w,c
  8348   003762  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8349   003764  6E29               	movwf	(??_go_Home+1)^0,c
  8350   003766  0EFF               	movlw	255
  8351   003768  2428               	addwf	??_go_Home^0,w,c
  8352   00376A  6ED9               	movwf	fsr2l,c
  8353   00376C  0EFF               	movlw	255
  8354   00376E  2029               	addwfc	(??_go_Home+1)^0,w,c
  8355   003770  6EDA               	movwf	fsr2h,c
  8356   003772  0E06               	movlw	6
  8357   003774  18DE               	xorwf	postinc2,w,c
  8358   003776  A4D8               	btfss	status,2,c
  8359   003778  EFC0  F01B         	goto	u5091
  8360   00377C  EFC2  F01B         	goto	u5090
  8361   003780                     u5091:
  8362   003780  EFD8  F01B         	goto	l5276
  8363   003784                     u5090:
  8364   003784                     
  8365                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8366   003784  0E61               	movlw	low _motorL
  8367   003786  6E1A               	movwf	reverseDetect@mL^0,c
  8368   003788  0E01               	movlw	high _motorL
  8369   00378A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8370   00378C  0E58               	movlw	low _motorR
  8371   00378E  6E1C               	movwf	reverseDetect@mR^0,c
  8372   003790  0E01               	movlw	high _motorR
  8373   003792  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8374   003794  EC92  F02B         	call	_reverseDetect	;wreg free
  8375                           
  8376                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8377   003798  0E61               	movlw	low _motorL
  8378   00379A  6E20               	movwf	OrangeMove@mL^0,c
  8379   00379C  0E01               	movlw	high _motorL
  8380   00379E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8381   0037A0  0E58               	movlw	low _motorR
  8382   0037A2  6E22               	movwf	OrangeMove@mR^0,c
  8383   0037A4  0E01               	movlw	high _motorR
  8384   0037A6  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8385   0037A8  EC98  F02C         	call	_OrangeMove	;wreg free
  8386                           
  8387                           ;Memory.c: 34:         }
  8388   0037AC  EF03  F01C         	goto	l599
  8389   0037B0                     l5276:
  8390   0037B0  502B               	movf	go_Home@i^0,w,c
  8391   0037B2  2424               	addwf	go_Home@WayBack^0,w,c
  8392   0037B4  6E28               	movwf	??_go_Home^0,c
  8393   0037B6  502C               	movf	(go_Home@i+1)^0,w,c
  8394   0037B8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8395   0037BA  6E29               	movwf	(??_go_Home+1)^0,c
  8396   0037BC  0EFF               	movlw	255
  8397   0037BE  2428               	addwf	??_go_Home^0,w,c
  8398   0037C0  6ED9               	movwf	fsr2l,c
  8399   0037C2  0EFF               	movlw	255
  8400   0037C4  2029               	addwfc	(??_go_Home+1)^0,w,c
  8401   0037C6  6EDA               	movwf	fsr2h,c
  8402   0037C8  0E07               	movlw	7
  8403   0037CA  18DE               	xorwf	postinc2,w,c
  8404   0037CC  A4D8               	btfss	status,2,c
  8405   0037CE  EFEB  F01B         	goto	u5101
  8406   0037D2  EFED  F01B         	goto	u5100
  8407   0037D6                     u5101:
  8408   0037D6  EF03  F01C         	goto	l605
  8409   0037DA                     u5100:
  8410   0037DA                     
  8411                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8412   0037DA  0E61               	movlw	low _motorL
  8413   0037DC  6E1A               	movwf	reverseDetect@mL^0,c
  8414   0037DE  0E01               	movlw	high _motorL
  8415   0037E0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8416   0037E2  0E58               	movlw	low _motorR
  8417   0037E4  6E1C               	movwf	reverseDetect@mR^0,c
  8418   0037E6  0E01               	movlw	high _motorR
  8419   0037E8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8420   0037EA  EC92  F02B         	call	_reverseDetect	;wreg free
  8421                           
  8422                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8423   0037EE  0E61               	movlw	low _motorL
  8424   0037F0  6E20               	movwf	ReversePink@mL^0,c
  8425   0037F2  0E01               	movlw	high _motorL
  8426   0037F4  6E21               	movwf	(ReversePink@mL+1)^0,c
  8427   0037F6  0E58               	movlw	low _motorR
  8428   0037F8  6E22               	movwf	ReversePink@mR^0,c
  8429   0037FA  0E01               	movlw	high _motorR
  8430   0037FC  6E23               	movwf	(ReversePink@mR+1)^0,c
  8431   0037FE  EC25  F027         	call	_ReversePink	;wreg free
  8432   003802  EF03  F01C         	goto	l599
  8433   003806                     l605:
  8434   003806                     l599:
  8435                           
  8436                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8437   003806  0E61               	movlw	low _motorL
  8438   003808  6E14               	movwf	stop@mL^0,c
  8439   00380A  0E01               	movlw	high _motorL
  8440   00380C  6E15               	movwf	(stop@mL+1)^0,c
  8441   00380E  0E58               	movlw	low _motorR
  8442   003810  6E16               	movwf	stop@mR^0,c
  8443   003812  0E01               	movlw	high _motorR
  8444   003814  6E17               	movwf	(stop@mR+1)^0,c
  8445   003816  ECAA  F029         	call	_stop	;wreg free
  8446   00381A                     
  8447                           ;Memory.c: 40:         run_flag=0;
  8448   00381A  0E00               	movlw	0
  8449   00381C  0101               	movlb	1	; () banked
  8450   00381E  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8451   003820  0E00               	movlw	0
  8452   003822  6FD8               	movwf	_run_flag& (0+255),b
  8453   003824                     
  8454                           ; BSR set to: 1
  8455                           ;Memory.c: 43:   }
  8456   003824  062B               	decf	go_Home@i^0,f,c
  8457   003826  A0D8               	btfss	status,0,c
  8458   003828  062C               	decf	(go_Home@i+1)^0,f,c
  8459   00382A  EFB7  F01A         	goto	l5246
  8460   00382E                     l611:
  8461   00382E  0012               	return		;funcret
  8462   003830                     __end_of_go_Home:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function _timed_forward *****************
  8466 ;; Defined at:
  8467 ;;		line 166 in file "dc_motor.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8470 ;;		 -> motorL(9), 
  8471 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8472 ;;		 -> motorR(9), 
  8473 ;;  time            2   23[COMRAM] int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8485 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;Total ram usage:        8 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 3
  8492 ;; This function calls:
  8493 ;;		_delayed_ms
  8494 ;;		_setMotorPWM
  8495 ;; This function is called by:
  8496 ;;		_go_Home
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text36
  8501   004F00                     __ptext36:
  8502                           	callstack 0
  8503   004F00                     _timed_forward:
  8504                           	callstack 26
  8505   004F00                     
  8506                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8507   004F00  EE20 F001          	lfsr	2,1
  8508   004F04  5014               	movf	timed_forward@mL^0,w,c
  8509   004F06  26D9               	addwf	fsr2l,f,c
  8510   004F08  5015               	movf	(timed_forward@mL+1)^0,w,c
  8511   004F0A  22DA               	addwfc	fsr2h,f,c
  8512   004F0C  0E01               	movlw	1
  8513   004F0E  6EDF               	movwf	indf2,c
  8514                           
  8515                           ;dc_motor.c: 170:     mR->direction =1;
  8516   004F10  EE20 F001          	lfsr	2,1
  8517   004F14  5016               	movf	timed_forward@mR^0,w,c
  8518   004F16  26D9               	addwf	fsr2l,f,c
  8519   004F18  5017               	movf	(timed_forward@mR+1)^0,w,c
  8520   004F1A  22DA               	addwfc	fsr2h,f,c
  8521   004F1C  0E01               	movlw	1
  8522   004F1E  6EDF               	movwf	indf2,c
  8523                           
  8524                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8525   004F20  EFB6  F027         	goto	l5090
  8526   004F24                     l5082:
  8527                           
  8528                           ;dc_motor.c: 173:         mL->power+=10;
  8529   004F24  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8530   004F28  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8531   004F2C  0E0A               	movlw	10
  8532   004F2E  26DF               	addwf	indf2,f,c
  8533                           
  8534                           ;dc_motor.c: 174:         mR->power+=10;
  8535   004F30  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8536   004F34  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8537   004F38  0E0A               	movlw	10
  8538   004F3A  26DF               	addwf	indf2,f,c
  8539   004F3C                     
  8540                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8541   004F3C  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8542   004F40  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8543   004F44  EC79  F023         	call	_setMotorPWM	;wreg free
  8544   004F48                     
  8545                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8546   004F48  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8547   004F4C  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8548   004F50  EC79  F023         	call	_setMotorPWM	;wreg free
  8549   004F54                     
  8550                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8551   004F54  0E02               	movlw	2
  8552   004F56  6E1B               	movwf	(??_timed_forward+1)^0,c
  8553   004F58  0EA0               	movlw	160
  8554   004F5A  6E1A               	movwf	??_timed_forward^0,c
  8555   004F5C  0E92               	movlw	146
  8556   004F5E                     u5987:
  8557   004F5E  2EE8               	decfsz	wreg,f,c
  8558   004F60  D7FE               	bra	u5987
  8559   004F62  2E1A               	decfsz	??_timed_forward^0,f,c
  8560   004F64  D7FC               	bra	u5987
  8561   004F66  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8562   004F68  D7FA               	bra	u5987
  8563   004F6A  D000               	nop2	
  8564   004F6C                     l5090:
  8565   004F6C  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8566   004F70  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8567   004F74  0E32               	movlw	50
  8568   004F76  60DF               	cpfslt	indf2,c
  8569   004F78  EFC0  F027         	goto	u4961
  8570   004F7C  EFC2  F027         	goto	u4960
  8571   004F80                     u4961:
  8572   004F80  EFCE  F027         	goto	l5094
  8573   004F84                     u4960:
  8574   004F84  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8575   004F88  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8576   004F8C  0E31               	movlw	49
  8577   004F8E  64DF               	cpfsgt	indf2,c
  8578   004F90  EFCC  F027         	goto	u4971
  8579   004F94  EFCE  F027         	goto	u4970
  8580   004F98                     u4971:
  8581   004F98  EF92  F027         	goto	l5082
  8582   004F9C                     u4970:
  8583   004F9C                     l5094:
  8584                           
  8585                           ;dc_motor.c: 182:     delayed_ms(time);
  8586   004F9C  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8587   004FA0  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8588   004FA4  EC7D  F02F         	call	_delayed_ms	;wreg free
  8589   004FA8  0012               	return		;funcret
  8590   004FAA                     __end_of_timed_forward:
  8591                           	callstack 0
  8592                           
  8593 ;; *************** function _delayed_ms *****************
  8594 ;; Defined at:
  8595 ;;		line 43 in file "timers.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  time            2    0[COMRAM] int 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  i               2    3[COMRAM] unsigned int 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;Total ram usage:        5 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 1
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_timed_forward
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text37
  8624   005EFA                     __ptext37:
  8625                           	callstack 0
  8626   005EFA                     _delayed_ms:
  8627                           	callstack 27
  8628   005EFA                     
  8629                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8630   005EFA  0E00               	movlw	0
  8631   005EFC  6E05               	movwf	(delayed_ms@i+1)^0,c
  8632   005EFE  0E00               	movlw	0
  8633   005F00  6E04               	movwf	delayed_ms@i^0,c
  8634   005F02  EF8D  F02F         	goto	l641
  8635   005F06                     l4744:
  8636                           
  8637                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8638   005F06  0E0B               	movlw	11
  8639   005F08  6E03               	movwf	??_delayed_ms^0,c
  8640   005F0A  0E62               	movlw	98
  8641   005F0C                     u5997:
  8642   005F0C  2EE8               	decfsz	wreg,f,c
  8643   005F0E  D7FE               	bra	u5997
  8644   005F10  2E03               	decfsz	??_delayed_ms^0,f,c
  8645   005F12  D7FC               	bra	u5997
  8646   005F14  D000               	nop2	
  8647   005F16                     
  8648                           ;timers.c: 46:     }
  8649   005F16  4A04               	infsnz	delayed_ms@i^0,f,c
  8650   005F18  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8651   005F1A                     l641:
  8652   005F1A  5001               	movf	delayed_ms@time^0,w,c
  8653   005F1C  5C04               	subwf	delayed_ms@i^0,w,c
  8654   005F1E  5002               	movf	(delayed_ms@time+1)^0,w,c
  8655   005F20  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8656   005F22  A0D8               	btfss	status,0,c
  8657   005F24  EF96  F02F         	goto	u4511
  8658   005F28  EF98  F02F         	goto	u4510
  8659   005F2C                     u4511:
  8660   005F2C  EF83  F02F         	goto	l4744
  8661   005F30                     u4510:
  8662   005F30  0012               	return		;funcret
  8663   005F32                     __end_of_delayed_ms:
  8664                           	callstack 0
  8665                           
  8666 ;; *************** function _ReverseYellow *****************
  8667 ;; Defined at:
  8668 ;;		line 334 in file "dc_motor.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8671 ;;		 -> motorL(9), 
  8672 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8673 ;;		 -> motorR(9), 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;Total ram usage:        4 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 5
  8692 ;; This function calls:
  8693 ;;		_ForwardOneBlock
  8694 ;;		_reverseDetect
  8695 ;;		_turnRight45
  8696 ;; This function is called by:
  8697 ;;		_go_Home
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text38
  8702   004D94                     __ptext38:
  8703                           	callstack 0
  8704   004D94                     _ReverseYellow:
  8705                           	callstack 24
  8706   004D94                     
  8707                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8708   004D94  0E61               	movlw	low _motorL
  8709   004D96  6E1A               	movwf	reverseDetect@mL^0,c
  8710   004D98  0E01               	movlw	high _motorL
  8711   004D9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8712   004D9C  0E58               	movlw	low _motorR
  8713   004D9E  6E1C               	movwf	reverseDetect@mR^0,c
  8714   004DA0  0E01               	movlw	high _motorR
  8715   004DA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8716   004DA4  EC92  F02B         	call	_reverseDetect	;wreg free
  8717                           
  8718                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8719   004DA8  0E61               	movlw	low _motorL
  8720   004DAA  6E1A               	movwf	turnRight45@mL^0,c
  8721   004DAC  0E01               	movlw	high _motorL
  8722   004DAE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8723   004DB0  0E58               	movlw	low _motorR
  8724   004DB2  6E1C               	movwf	turnRight45@mR^0,c
  8725   004DB4  0E01               	movlw	high _motorR
  8726   004DB6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8727   004DB8  EC2D  F02E         	call	_turnRight45	;wreg free
  8728                           
  8729                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8730   004DBC  0E61               	movlw	low _motorL
  8731   004DBE  6E1A               	movwf	turnRight45@mL^0,c
  8732   004DC0  0E01               	movlw	high _motorL
  8733   004DC2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8734   004DC4  0E58               	movlw	low _motorR
  8735   004DC6  6E1C               	movwf	turnRight45@mR^0,c
  8736   004DC8  0E01               	movlw	high _motorR
  8737   004DCA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8738   004DCC  EC2D  F02E         	call	_turnRight45	;wreg free
  8739                           
  8740                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8741   004DD0  0E61               	movlw	low _motorL
  8742   004DD2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8743   004DD4  0E01               	movlw	high _motorL
  8744   004DD6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8745   004DD8  0E58               	movlw	low _motorR
  8746   004DDA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8747   004DDC  0E01               	movlw	high _motorR
  8748   004DDE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8749   004DE0  ECEC  F02B         	call	_ForwardOneBlock	;wreg free
  8750                           
  8751                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8752   004DE4  0E61               	movlw	low _motorL
  8753   004DE6  6E1A               	movwf	reverseDetect@mL^0,c
  8754   004DE8  0E01               	movlw	high _motorL
  8755   004DEA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8756   004DEC  0E58               	movlw	low _motorR
  8757   004DEE  6E1C               	movwf	reverseDetect@mR^0,c
  8758   004DF0  0E01               	movlw	high _motorR
  8759   004DF2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8760   004DF4  EC92  F02B         	call	_reverseDetect	;wreg free
  8761                           
  8762                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8763   004DF8  0E61               	movlw	low _motorL
  8764   004DFA  6E1A               	movwf	turnRight45@mL^0,c
  8765   004DFC  0E01               	movlw	high _motorL
  8766   004DFE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8767   004E00  0E58               	movlw	low _motorR
  8768   004E02  6E1C               	movwf	turnRight45@mR^0,c
  8769   004E04  0E01               	movlw	high _motorR
  8770   004E06  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8771   004E08  EC2D  F02E         	call	_turnRight45	;wreg free
  8772                           
  8773                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8774   004E0C  0E61               	movlw	low _motorL
  8775   004E0E  6E1A               	movwf	turnRight45@mL^0,c
  8776   004E10  0E01               	movlw	high _motorL
  8777   004E12  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8778   004E14  0E58               	movlw	low _motorR
  8779   004E16  6E1C               	movwf	turnRight45@mR^0,c
  8780   004E18  0E01               	movlw	high _motorR
  8781   004E1A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8782   004E1C  EC2D  F02E         	call	_turnRight45	;wreg free
  8783                           
  8784                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8785   004E20  0E61               	movlw	low _motorL
  8786   004E22  6E1A               	movwf	turnRight45@mL^0,c
  8787   004E24  0E01               	movlw	high _motorL
  8788   004E26  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8789   004E28  0E58               	movlw	low _motorR
  8790   004E2A  6E1C               	movwf	turnRight45@mR^0,c
  8791   004E2C  0E01               	movlw	high _motorR
  8792   004E2E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8793   004E30  EC2D  F02E         	call	_turnRight45	;wreg free
  8794                           
  8795                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8796   004E34  0E61               	movlw	low _motorL
  8797   004E36  6E1A               	movwf	turnRight45@mL^0,c
  8798   004E38  0E01               	movlw	high _motorL
  8799   004E3A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8800   004E3C  0E58               	movlw	low _motorR
  8801   004E3E  6E1C               	movwf	turnRight45@mR^0,c
  8802   004E40  0E01               	movlw	high _motorR
  8803   004E42  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8804   004E44  EC2D  F02E         	call	_turnRight45	;wreg free
  8805   004E48  0012               	return		;funcret
  8806   004E4A                     __end_of_ReverseYellow:
  8807                           	callstack 0
  8808                           
  8809 ;; *************** function _ReversePink *****************
  8810 ;; Defined at:
  8811 ;;		line 345 in file "dc_motor.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8814 ;;		 -> motorL(9), 
  8815 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8816 ;;		 -> motorR(9), 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;Total ram usage:        4 bytes
  8833 ;; Hardware stack levels used: 1
  8834 ;; Hardware stack levels required when called: 5
  8835 ;; This function calls:
  8836 ;;		_ForwardOneBlock
  8837 ;;		_reverseDetect
  8838 ;;		_turnLeft45
  8839 ;; This function is called by:
  8840 ;;		_go_Home
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text39
  8845   004E4A                     __ptext39:
  8846                           	callstack 0
  8847   004E4A                     _ReversePink:
  8848                           	callstack 24
  8849   004E4A                     
  8850                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8851   004E4A  0E61               	movlw	low _motorL
  8852   004E4C  6E1A               	movwf	reverseDetect@mL^0,c
  8853   004E4E  0E01               	movlw	high _motorL
  8854   004E50  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8855   004E52  0E58               	movlw	low _motorR
  8856   004E54  6E1C               	movwf	reverseDetect@mR^0,c
  8857   004E56  0E01               	movlw	high _motorR
  8858   004E58  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8859   004E5A  EC92  F02B         	call	_reverseDetect	;wreg free
  8860                           
  8861                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8862   004E5E  0E61               	movlw	low _motorL
  8863   004E60  6E1A               	movwf	turnLeft45@mL^0,c
  8864   004E62  0E01               	movlw	high _motorL
  8865   004E64  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8866   004E66  0E58               	movlw	low _motorR
  8867   004E68  6E1C               	movwf	turnLeft45@mR^0,c
  8868   004E6A  0E01               	movlw	high _motorR
  8869   004E6C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8870   004E6E  EC54  F02E         	call	_turnLeft45	;wreg free
  8871                           
  8872                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8873   004E72  0E61               	movlw	low _motorL
  8874   004E74  6E1A               	movwf	turnLeft45@mL^0,c
  8875   004E76  0E01               	movlw	high _motorL
  8876   004E78  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8877   004E7A  0E58               	movlw	low _motorR
  8878   004E7C  6E1C               	movwf	turnLeft45@mR^0,c
  8879   004E7E  0E01               	movlw	high _motorR
  8880   004E80  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8881   004E82  EC54  F02E         	call	_turnLeft45	;wreg free
  8882                           
  8883                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8884   004E86  0E61               	movlw	low _motorL
  8885   004E88  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8886   004E8A  0E01               	movlw	high _motorL
  8887   004E8C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8888   004E8E  0E58               	movlw	low _motorR
  8889   004E90  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8890   004E92  0E01               	movlw	high _motorR
  8891   004E94  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8892   004E96  ECEC  F02B         	call	_ForwardOneBlock	;wreg free
  8893                           
  8894                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8895   004E9A  0E61               	movlw	low _motorL
  8896   004E9C  6E1A               	movwf	reverseDetect@mL^0,c
  8897   004E9E  0E01               	movlw	high _motorL
  8898   004EA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8899   004EA2  0E58               	movlw	low _motorR
  8900   004EA4  6E1C               	movwf	reverseDetect@mR^0,c
  8901   004EA6  0E01               	movlw	high _motorR
  8902   004EA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8903   004EAA  EC92  F02B         	call	_reverseDetect	;wreg free
  8904                           
  8905                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8906   004EAE  0E61               	movlw	low _motorL
  8907   004EB0  6E1A               	movwf	turnLeft45@mL^0,c
  8908   004EB2  0E01               	movlw	high _motorL
  8909   004EB4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8910   004EB6  0E58               	movlw	low _motorR
  8911   004EB8  6E1C               	movwf	turnLeft45@mR^0,c
  8912   004EBA  0E01               	movlw	high _motorR
  8913   004EBC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8914   004EBE  EC54  F02E         	call	_turnLeft45	;wreg free
  8915                           
  8916                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8917   004EC2  0E61               	movlw	low _motorL
  8918   004EC4  6E1A               	movwf	turnLeft45@mL^0,c
  8919   004EC6  0E01               	movlw	high _motorL
  8920   004EC8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8921   004ECA  0E58               	movlw	low _motorR
  8922   004ECC  6E1C               	movwf	turnLeft45@mR^0,c
  8923   004ECE  0E01               	movlw	high _motorR
  8924   004ED0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8925   004ED2  EC54  F02E         	call	_turnLeft45	;wreg free
  8926                           
  8927                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8928   004ED6  0E61               	movlw	low _motorL
  8929   004ED8  6E1A               	movwf	turnLeft45@mL^0,c
  8930   004EDA  0E01               	movlw	high _motorL
  8931   004EDC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8932   004EDE  0E58               	movlw	low _motorR
  8933   004EE0  6E1C               	movwf	turnLeft45@mR^0,c
  8934   004EE2  0E01               	movlw	high _motorR
  8935   004EE4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8936   004EE6  EC54  F02E         	call	_turnLeft45	;wreg free
  8937                           
  8938                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8939   004EEA  0E61               	movlw	low _motorL
  8940   004EEC  6E1A               	movwf	turnLeft45@mL^0,c
  8941   004EEE  0E01               	movlw	high _motorL
  8942   004EF0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8943   004EF2  0E58               	movlw	low _motorR
  8944   004EF4  6E1C               	movwf	turnLeft45@mR^0,c
  8945   004EF6  0E01               	movlw	high _motorR
  8946   004EF8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8947   004EFA  EC54  F02E         	call	_turnLeft45	;wreg free
  8948   004EFE  0012               	return		;funcret
  8949   004F00                     __end_of_ReversePink:
  8950                           	callstack 0
  8951                           
  8952 ;; *************** function _ForwardOneBlock *****************
  8953 ;; Defined at:
  8954 ;;		line 239 in file "dc_motor.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8957 ;;		 -> motorL(9), 
  8958 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8959 ;;		 -> motorR(9), 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        6 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 4
  8978 ;; This function calls:
  8979 ;;		_fullSpeedAhead
  8980 ;;		_stop
  8981 ;; This function is called by:
  8982 ;;		_ReverseYellow
  8983 ;;		_ReversePink
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text40
  8988   0057D8                     __ptext40:
  8989                           	callstack 0
  8990   0057D8                     _ForwardOneBlock:
  8991                           	callstack 24
  8992   0057D8                     
  8993                           ;dc_motor.c: 240:     fullSpeedAhead(mL,mR);
  8994   0057D8  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8995   0057DC  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8996   0057E0  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8997   0057E4  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8998   0057E8  EC17  F029         	call	_fullSpeedAhead	;wreg free
  8999   0057EC                     
  9000                           ;dc_motor.c: 241:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9001   0057EC  0E56               	movlw	86
  9002   0057EE  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9003   0057F0  0E3A               	movlw	58
  9004   0057F2  6E1E               	movwf	??_ForwardOneBlock^0,c
  9005   0057F4  0EF4               	movlw	244
  9006   0057F6                     u6007:
  9007   0057F6  2EE8               	decfsz	wreg,f,c
  9008   0057F8  D7FE               	bra	u6007
  9009   0057FA  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9010   0057FC  D7FC               	bra	u6007
  9011   0057FE  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9012   005800  D7FA               	bra	u6007
  9013   005802                     
  9014                           ;dc_motor.c: 242:     stop(&motorL, &motorR);
  9015   005802  0E61               	movlw	low _motorL
  9016   005804  6E14               	movwf	stop@mL^0,c
  9017   005806  0E01               	movlw	high _motorL
  9018   005808  6E15               	movwf	(stop@mL+1)^0,c
  9019   00580A  0E58               	movlw	low _motorR
  9020   00580C  6E16               	movwf	stop@mR^0,c
  9021   00580E  0E01               	movlw	high _motorR
  9022   005810  6E17               	movwf	(stop@mR+1)^0,c
  9023   005812  ECAA  F029         	call	_stop	;wreg free
  9024                           
  9025                           ;dc_motor.c: 243:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9026   005816  0E05               	movlw	5
  9027   005818  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9028   00581A  0E0F               	movlw	15
  9029   00581C  6E1E               	movwf	??_ForwardOneBlock^0,c
  9030   00581E  0EF1               	movlw	241
  9031   005820                     u6017:
  9032   005820  2EE8               	decfsz	wreg,f,c
  9033   005822  D7FE               	bra	u6017
  9034   005824  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9035   005826  D7FC               	bra	u6017
  9036   005828  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9037   00582A  D7FA               	bra	u6017
  9038   00582C  F000               	nop	
  9039   00582E  0012               	return		;funcret
  9040   005830                     __end_of_ForwardOneBlock:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _RedMove *****************
  9044 ;; Defined at:
  9045 ;;		line 263 in file "dc_motor.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9048 ;;		 -> motorL(9), 
  9049 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9050 ;;		 -> motorR(9), 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;Total ram usage:        4 bytes
  9067 ;; Hardware stack levels used: 1
  9068 ;; Hardware stack levels required when called: 5
  9069 ;; This function calls:
  9070 ;;		_reverseDetect
  9071 ;;		_turnRight45
  9072 ;; This function is called by:
  9073 ;;		_go_Home
  9074 ;;		_colour_move
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text41
  9079   005E46                     __ptext41:
  9080                           	callstack 0
  9081   005E46                     _RedMove:
  9082                           	callstack 24
  9083   005E46                     
  9084                           ;dc_motor.c: 264:     reverseDetect(&motorL, &motorR);
  9085   005E46  0E61               	movlw	low _motorL
  9086   005E48  6E1A               	movwf	reverseDetect@mL^0,c
  9087   005E4A  0E01               	movlw	high _motorL
  9088   005E4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9089   005E4E  0E58               	movlw	low _motorR
  9090   005E50  6E1C               	movwf	reverseDetect@mR^0,c
  9091   005E52  0E01               	movlw	high _motorR
  9092   005E54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9093   005E56  EC92  F02B         	call	_reverseDetect	;wreg free
  9094                           
  9095                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  9096   005E5A  0E61               	movlw	low _motorL
  9097   005E5C  6E1A               	movwf	turnRight45@mL^0,c
  9098   005E5E  0E01               	movlw	high _motorL
  9099   005E60  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9100   005E62  0E58               	movlw	low _motorR
  9101   005E64  6E1C               	movwf	turnRight45@mR^0,c
  9102   005E66  0E01               	movlw	high _motorR
  9103   005E68  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9104   005E6A  EC2D  F02E         	call	_turnRight45	;wreg free
  9105                           
  9106                           ;dc_motor.c: 267:     turnRight45(&motorL, &motorR);
  9107   005E6E  0E61               	movlw	low _motorL
  9108   005E70  6E1A               	movwf	turnRight45@mL^0,c
  9109   005E72  0E01               	movlw	high _motorL
  9110   005E74  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9111   005E76  0E58               	movlw	low _motorR
  9112   005E78  6E1C               	movwf	turnRight45@mR^0,c
  9113   005E7A  0E01               	movlw	high _motorR
  9114   005E7C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9115   005E7E  EC2D  F02E         	call	_turnRight45	;wreg free
  9116   005E82  0012               	return		;funcret
  9117   005E84                     __end_of_RedMove:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function _OrangeMove *****************
  9121 ;; Defined at:
  9122 ;;		line 309 in file "dc_motor.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9125 ;;		 -> motorL(9), 
  9126 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9127 ;;		 -> motorR(9), 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      void 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;Total ram usage:        4 bytes
  9144 ;; Hardware stack levels used: 1
  9145 ;; Hardware stack levels required when called: 5
  9146 ;; This function calls:
  9147 ;;		_reverseDetect
  9148 ;;		_turnRight45
  9149 ;; This function is called by:
  9150 ;;		_go_Home
  9151 ;;		_colour_move
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text42
  9156   005930                     __ptext42:
  9157                           	callstack 0
  9158   005930                     _OrangeMove:
  9159                           	callstack 24
  9160   005930                     
  9161                           ;dc_motor.c: 310:     reverseDetect(&motorL, &motorR);
  9162   005930  0E61               	movlw	low _motorL
  9163   005932  6E1A               	movwf	reverseDetect@mL^0,c
  9164   005934  0E01               	movlw	high _motorL
  9165   005936  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9166   005938  0E58               	movlw	low _motorR
  9167   00593A  6E1C               	movwf	reverseDetect@mR^0,c
  9168   00593C  0E01               	movlw	high _motorR
  9169   00593E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9170   005940  EC92  F02B         	call	_reverseDetect	;wreg free
  9171                           
  9172                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  9173   005944  0E61               	movlw	low _motorL
  9174   005946  6E1A               	movwf	turnRight45@mL^0,c
  9175   005948  0E01               	movlw	high _motorL
  9176   00594A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9177   00594C  0E58               	movlw	low _motorR
  9178   00594E  6E1C               	movwf	turnRight45@mR^0,c
  9179   005950  0E01               	movlw	high _motorR
  9180   005952  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9181   005954  EC2D  F02E         	call	_turnRight45	;wreg free
  9182                           
  9183                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  9184   005958  0E61               	movlw	low _motorL
  9185   00595A  6E1A               	movwf	turnRight45@mL^0,c
  9186   00595C  0E01               	movlw	high _motorL
  9187   00595E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9188   005960  0E58               	movlw	low _motorR
  9189   005962  6E1C               	movwf	turnRight45@mR^0,c
  9190   005964  0E01               	movlw	high _motorR
  9191   005966  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9192   005968  EC2D  F02E         	call	_turnRight45	;wreg free
  9193                           
  9194                           ;dc_motor.c: 314:     turnRight45(&motorL, &motorR);
  9195   00596C  0E61               	movlw	low _motorL
  9196   00596E  6E1A               	movwf	turnRight45@mL^0,c
  9197   005970  0E01               	movlw	high _motorL
  9198   005972  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9199   005974  0E58               	movlw	low _motorR
  9200   005976  6E1C               	movwf	turnRight45@mR^0,c
  9201   005978  0E01               	movlw	high _motorR
  9202   00597A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9203   00597C  EC2D  F02E         	call	_turnRight45	;wreg free
  9204   005980  0012               	return		;funcret
  9205   005982                     __end_of_OrangeMove:
  9206                           	callstack 0
  9207                           
  9208 ;; *************** function _LightBlueMove *****************
  9209 ;; Defined at:
  9210 ;;		line 318 in file "dc_motor.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9213 ;;		 -> motorL(9), 
  9214 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9215 ;;		 -> motorR(9), 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;Total ram usage:        4 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 5
  9234 ;; This function calls:
  9235 ;;		_reverseDetect
  9236 ;;		_turnLeft45
  9237 ;; This function is called by:
  9238 ;;		_go_Home
  9239 ;;		_colour_move
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text43
  9244   005982                     __ptext43:
  9245                           	callstack 0
  9246   005982                     _LightBlueMove:
  9247                           	callstack 24
  9248   005982                     
  9249                           ;dc_motor.c: 319:     reverseDetect(&motorL, &motorR);
  9250   005982  0E61               	movlw	low _motorL
  9251   005984  6E1A               	movwf	reverseDetect@mL^0,c
  9252   005986  0E01               	movlw	high _motorL
  9253   005988  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9254   00598A  0E58               	movlw	low _motorR
  9255   00598C  6E1C               	movwf	reverseDetect@mR^0,c
  9256   00598E  0E01               	movlw	high _motorR
  9257   005990  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9258   005992  EC92  F02B         	call	_reverseDetect	;wreg free
  9259                           
  9260                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9261   005996  0E61               	movlw	low _motorL
  9262   005998  6E1A               	movwf	turnLeft45@mL^0,c
  9263   00599A  0E01               	movlw	high _motorL
  9264   00599C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9265   00599E  0E58               	movlw	low _motorR
  9266   0059A0  6E1C               	movwf	turnLeft45@mR^0,c
  9267   0059A2  0E01               	movlw	high _motorR
  9268   0059A4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9269   0059A6  EC54  F02E         	call	_turnLeft45	;wreg free
  9270                           
  9271                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9272   0059AA  0E61               	movlw	low _motorL
  9273   0059AC  6E1A               	movwf	turnLeft45@mL^0,c
  9274   0059AE  0E01               	movlw	high _motorL
  9275   0059B0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9276   0059B2  0E58               	movlw	low _motorR
  9277   0059B4  6E1C               	movwf	turnLeft45@mR^0,c
  9278   0059B6  0E01               	movlw	high _motorR
  9279   0059B8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9280   0059BA  EC54  F02E         	call	_turnLeft45	;wreg free
  9281                           
  9282                           ;dc_motor.c: 323:     turnLeft45(&motorL, &motorR);
  9283   0059BE  0E61               	movlw	low _motorL
  9284   0059C0  6E1A               	movwf	turnLeft45@mL^0,c
  9285   0059C2  0E01               	movlw	high _motorL
  9286   0059C4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9287   0059C6  0E58               	movlw	low _motorR
  9288   0059C8  6E1C               	movwf	turnLeft45@mR^0,c
  9289   0059CA  0E01               	movlw	high _motorR
  9290   0059CC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9291   0059CE  EC54  F02E         	call	_turnLeft45	;wreg free
  9292   0059D2  0012               	return		;funcret
  9293   0059D4                     __end_of_LightBlueMove:
  9294                           	callstack 0
  9295                           
  9296 ;; *************** function _GreenMove *****************
  9297 ;; Defined at:
  9298 ;;		line 271 in file "dc_motor.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9301 ;;		 -> motorL(9), 
  9302 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9303 ;;		 -> motorR(9), 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;Total ram usage:        4 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 5
  9322 ;; This function calls:
  9323 ;;		_reverseDetect
  9324 ;;		_turnLeft45
  9325 ;; This function is called by:
  9326 ;;		_go_Home
  9327 ;;		_colour_move
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text44
  9332   005E84                     __ptext44:
  9333                           	callstack 0
  9334   005E84                     _GreenMove:
  9335                           	callstack 24
  9336   005E84                     
  9337                           ;dc_motor.c: 272:     reverseDetect(&motorL, &motorR);
  9338   005E84  0E61               	movlw	low _motorL
  9339   005E86  6E1A               	movwf	reverseDetect@mL^0,c
  9340   005E88  0E01               	movlw	high _motorL
  9341   005E8A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9342   005E8C  0E58               	movlw	low _motorR
  9343   005E8E  6E1C               	movwf	reverseDetect@mR^0,c
  9344   005E90  0E01               	movlw	high _motorR
  9345   005E92  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9346   005E94  EC92  F02B         	call	_reverseDetect	;wreg free
  9347                           
  9348                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9349   005E98  0E61               	movlw	low _motorL
  9350   005E9A  6E1A               	movwf	turnLeft45@mL^0,c
  9351   005E9C  0E01               	movlw	high _motorL
  9352   005E9E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9353   005EA0  0E58               	movlw	low _motorR
  9354   005EA2  6E1C               	movwf	turnLeft45@mR^0,c
  9355   005EA4  0E01               	movlw	high _motorR
  9356   005EA6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9357   005EA8  EC54  F02E         	call	_turnLeft45	;wreg free
  9358                           
  9359                           ;dc_motor.c: 275:     turnLeft45(&motorL, &motorR);
  9360   005EAC  0E61               	movlw	low _motorL
  9361   005EAE  6E1A               	movwf	turnLeft45@mL^0,c
  9362   005EB0  0E01               	movlw	high _motorL
  9363   005EB2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9364   005EB4  0E58               	movlw	low _motorR
  9365   005EB6  6E1C               	movwf	turnLeft45@mR^0,c
  9366   005EB8  0E01               	movlw	high _motorR
  9367   005EBA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9368   005EBC  EC54  F02E         	call	_turnLeft45	;wreg free
  9369   005EC0  0012               	return		;funcret
  9370   005EC2                     __end_of_GreenMove:
  9371                           	callstack 0
  9372                           
  9373 ;; *************** function _BlueMove *****************
  9374 ;; Defined at:
  9375 ;;		line 279 in file "dc_motor.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9378 ;;		 -> motorL(9), 
  9379 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9380 ;;		 -> motorR(9), 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;		None
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9396 ;;Total ram usage:        4 bytes
  9397 ;; Hardware stack levels used: 1
  9398 ;; Hardware stack levels required when called: 5
  9399 ;; This function calls:
  9400 ;;		_reverseDetect
  9401 ;;		_turnRight45
  9402 ;; This function is called by:
  9403 ;;		_go_Home
  9404 ;;		_colour_move
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text45
  9409   0055FE                     __ptext45:
  9410                           	callstack 0
  9411   0055FE                     _BlueMove:
  9412                           	callstack 24
  9413   0055FE                     
  9414                           ;dc_motor.c: 280:     reverseDetect(&motorL, &motorR);
  9415   0055FE  0E61               	movlw	low _motorL
  9416   005600  6E1A               	movwf	reverseDetect@mL^0,c
  9417   005602  0E01               	movlw	high _motorL
  9418   005604  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9419   005606  0E58               	movlw	low _motorR
  9420   005608  6E1C               	movwf	reverseDetect@mR^0,c
  9421   00560A  0E01               	movlw	high _motorR
  9422   00560C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9423   00560E  EC92  F02B         	call	_reverseDetect	;wreg free
  9424                           
  9425                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9426   005612  0E61               	movlw	low _motorL
  9427   005614  6E1A               	movwf	turnRight45@mL^0,c
  9428   005616  0E01               	movlw	high _motorL
  9429   005618  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9430   00561A  0E58               	movlw	low _motorR
  9431   00561C  6E1C               	movwf	turnRight45@mR^0,c
  9432   00561E  0E01               	movlw	high _motorR
  9433   005620  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9434   005622  EC2D  F02E         	call	_turnRight45	;wreg free
  9435                           
  9436                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9437   005626  0E61               	movlw	low _motorL
  9438   005628  6E1A               	movwf	turnRight45@mL^0,c
  9439   00562A  0E01               	movlw	high _motorL
  9440   00562C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9441   00562E  0E58               	movlw	low _motorR
  9442   005630  6E1C               	movwf	turnRight45@mR^0,c
  9443   005632  0E01               	movlw	high _motorR
  9444   005634  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9445   005636  EC2D  F02E         	call	_turnRight45	;wreg free
  9446                           
  9447                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9448   00563A  0E61               	movlw	low _motorL
  9449   00563C  6E1A               	movwf	turnRight45@mL^0,c
  9450   00563E  0E01               	movlw	high _motorL
  9451   005640  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9452   005642  0E58               	movlw	low _motorR
  9453   005644  6E1C               	movwf	turnRight45@mR^0,c
  9454   005646  0E01               	movlw	high _motorR
  9455   005648  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9456   00564A  EC2D  F02E         	call	_turnRight45	;wreg free
  9457                           
  9458                           ;dc_motor.c: 285:     turnRight45(&motorL, &motorR);
  9459   00564E  0E61               	movlw	low _motorL
  9460   005650  6E1A               	movwf	turnRight45@mL^0,c
  9461   005652  0E01               	movlw	high _motorL
  9462   005654  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9463   005656  0E58               	movlw	low _motorR
  9464   005658  6E1C               	movwf	turnRight45@mR^0,c
  9465   00565A  0E01               	movlw	high _motorR
  9466   00565C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9467   00565E  EC2D  F02E         	call	_turnRight45	;wreg free
  9468   005662  0012               	return		;funcret
  9469   005664                     __end_of_BlueMove:
  9470                           	callstack 0
  9471                           
  9472 ;; *************** function _YellowMove *****************
  9473 ;; Defined at:
  9474 ;;		line 289 in file "dc_motor.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9477 ;;		 -> motorL(9), 
  9478 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9479 ;;		 -> motorR(9), 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;		None
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  1    wreg      void 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9495 ;;Total ram usage:        4 bytes
  9496 ;; Hardware stack levels used: 1
  9497 ;; Hardware stack levels required when called: 5
  9498 ;; This function calls:
  9499 ;;		_reverseDetect
  9500 ;;		_reverseOneBlock
  9501 ;;		_turnRight45
  9502 ;; This function is called by:
  9503 ;;		_colour_move
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text46
  9508   0059D4                     __ptext46:
  9509                           	callstack 0
  9510   0059D4                     _YellowMove:
  9511                           	callstack 24
  9512   0059D4                     
  9513                           ;dc_motor.c: 290:     reverseDetect(&motorL, &motorR);
  9514   0059D4  0E61               	movlw	low _motorL
  9515   0059D6  6E1A               	movwf	reverseDetect@mL^0,c
  9516   0059D8  0E01               	movlw	high _motorL
  9517   0059DA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9518   0059DC  0E58               	movlw	low _motorR
  9519   0059DE  6E1C               	movwf	reverseDetect@mR^0,c
  9520   0059E0  0E01               	movlw	high _motorR
  9521   0059E2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9522   0059E4  EC92  F02B         	call	_reverseDetect	;wreg free
  9523                           
  9524                           ;dc_motor.c: 292:     reverseOneBlock(&motorL, &motorR);
  9525   0059E8  0E61               	movlw	low _motorL
  9526   0059EA  6E1A               	movwf	reverseOneBlock@mL^0,c
  9527   0059EC  0E01               	movlw	high _motorL
  9528   0059EE  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9529   0059F0  0E58               	movlw	low _motorR
  9530   0059F2  6E1C               	movwf	reverseOneBlock@mR^0,c
  9531   0059F4  0E01               	movlw	high _motorR
  9532   0059F6  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9533   0059F8  EC18  F02C         	call	_reverseOneBlock	;wreg free
  9534                           
  9535                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
  9536   0059FC  0E61               	movlw	low _motorL
  9537   0059FE  6E1A               	movwf	turnRight45@mL^0,c
  9538   005A00  0E01               	movlw	high _motorL
  9539   005A02  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9540   005A04  0E58               	movlw	low _motorR
  9541   005A06  6E1C               	movwf	turnRight45@mR^0,c
  9542   005A08  0E01               	movlw	high _motorR
  9543   005A0A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9544   005A0C  EC2D  F02E         	call	_turnRight45	;wreg free
  9545                           
  9546                           ;dc_motor.c: 295:     turnRight45(&motorL, &motorR);
  9547   005A10  0E61               	movlw	low _motorL
  9548   005A12  6E1A               	movwf	turnRight45@mL^0,c
  9549   005A14  0E01               	movlw	high _motorL
  9550   005A16  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9551   005A18  0E58               	movlw	low _motorR
  9552   005A1A  6E1C               	movwf	turnRight45@mR^0,c
  9553   005A1C  0E01               	movlw	high _motorR
  9554   005A1E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9555   005A20  EC2D  F02E         	call	_turnRight45	;wreg free
  9556   005A24  0012               	return		;funcret
  9557   005A26                     __end_of_YellowMove:
  9558                           	callstack 0
  9559                           
  9560 ;; *************** function _turnRight45 *****************
  9561 ;; Defined at:
  9562 ;;		line 212 in file "dc_motor.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9565 ;;		 -> motorL(9), 
  9566 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9567 ;;		 -> motorR(9), 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9583 ;;Total ram usage:        6 bytes
  9584 ;; Hardware stack levels used: 1
  9585 ;; Hardware stack levels required when called: 4
  9586 ;; This function calls:
  9587 ;;		_TurnDelay
  9588 ;;		_stop
  9589 ;;		_turnRight
  9590 ;; This function is called by:
  9591 ;;		_RedMove
  9592 ;;		_BlueMove
  9593 ;;		_YellowMove
  9594 ;;		_OrangeMove
  9595 ;;		_ReverseYellow
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text47
  9600   005C5A                     __ptext47:
  9601                           	callstack 0
  9602   005C5A                     _turnRight45:
  9603                           	callstack 24
  9604   005C5A                     
  9605                           ;dc_motor.c: 213:     turnRight(mL,mR);
  9606   005C5A  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9607   005C5E  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9608   005C62  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9609   005C66  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9610   005C6A  EC2A  F028         	call	_turnRight	;wreg free
  9611   005C6E                     
  9612                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
  9613   005C6E  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  9614   005C72  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  9615   005C76  EC99  F02F         	call	_TurnDelay	;wreg free
  9616   005C7A                     
  9617                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
  9618   005C7A  0E61               	movlw	low _motorL
  9619   005C7C  6E14               	movwf	stop@mL^0,c
  9620   005C7E  0E01               	movlw	high _motorL
  9621   005C80  6E15               	movwf	(stop@mL+1)^0,c
  9622   005C82  0E58               	movlw	low _motorR
  9623   005C84  6E16               	movwf	stop@mR^0,c
  9624   005C86  0E01               	movlw	high _motorR
  9625   005C88  6E17               	movwf	(stop@mR+1)^0,c
  9626   005C8A  ECAA  F029         	call	_stop	;wreg free
  9627   005C8E                     
  9628                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9629   005C8E  0E05               	movlw	5
  9630   005C90  6E1F               	movwf	(??_turnRight45+1)^0,c
  9631   005C92  0E0F               	movlw	15
  9632   005C94  6E1E               	movwf	??_turnRight45^0,c
  9633   005C96  0EF1               	movlw	241
  9634   005C98                     u6027:
  9635   005C98  2EE8               	decfsz	wreg,f,c
  9636   005C9A  D7FE               	bra	u6027
  9637   005C9C  2E1E               	decfsz	??_turnRight45^0,f,c
  9638   005C9E  D7FC               	bra	u6027
  9639   005CA0  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9640   005CA2  D7FA               	bra	u6027
  9641   005CA4  F000               	nop	
  9642   005CA6  0012               	return		;funcret
  9643   005CA8                     __end_of_turnRight45:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _turnRight *****************
  9647 ;; Defined at:
  9648 ;;		line 130 in file "dc_motor.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9651 ;;		 -> motorL(9), 
  9652 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9653 ;;		 -> motorR(9), 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;Total ram usage:        6 bytes
  9670 ;; Hardware stack levels used: 1
  9671 ;; Hardware stack levels required when called: 3
  9672 ;; This function calls:
  9673 ;;		_setMotorPWM
  9674 ;; This function is called by:
  9675 ;;		_turnRight45
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text48
  9680   005054                     __ptext48:
  9681                           	callstack 0
  9682   005054                     _turnRight:
  9683                           	callstack 24
  9684   005054                     
  9685                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
  9686   005054  EE20 F001          	lfsr	2,1
  9687   005058  5014               	movf	turnRight@mL^0,w,c
  9688   00505A  26D9               	addwf	fsr2l,f,c
  9689   00505C  5015               	movf	(turnRight@mL+1)^0,w,c
  9690   00505E  22DA               	addwfc	fsr2h,f,c
  9691   005060  0E01               	movlw	1
  9692   005062  6EDF               	movwf	indf2,c
  9693                           
  9694                           ;dc_motor.c: 133:     mR->direction =0;
  9695   005064  EE20 F001          	lfsr	2,1
  9696   005068  5016               	movf	turnRight@mR^0,w,c
  9697   00506A  26D9               	addwf	fsr2l,f,c
  9698   00506C  5017               	movf	(turnRight@mR+1)^0,w,c
  9699   00506E  22DA               	addwfc	fsr2h,f,c
  9700   005070  0E00               	movlw	0
  9701   005072  6EDF               	movwf	indf2,c
  9702                           
  9703                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
  9704   005074  EF60  F028         	goto	l4182
  9705   005078                     l4174:
  9706                           
  9707                           ;dc_motor.c: 137:         mL->power+=10;
  9708   005078  C014  FFD9         	movff	turnRight@mL,fsr2l
  9709   00507C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9710   005080  0E0A               	movlw	10
  9711   005082  26DF               	addwf	indf2,f,c
  9712                           
  9713                           ;dc_motor.c: 138:         mR->power+=10;
  9714   005084  C016  FFD9         	movff	turnRight@mR,fsr2l
  9715   005088  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9716   00508C  0E0A               	movlw	10
  9717   00508E  26DF               	addwf	indf2,f,c
  9718   005090                     
  9719                           ;dc_motor.c: 140:         setMotorPWM(mL);
  9720   005090  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9721   005094  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9722   005098  EC79  F023         	call	_setMotorPWM	;wreg free
  9723   00509C                     
  9724                           ;dc_motor.c: 141:         setMotorPWM(mR);
  9725   00509C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9726   0050A0  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9727   0050A4  EC79  F023         	call	_setMotorPWM	;wreg free
  9728   0050A8                     
  9729                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9730   0050A8  0E02               	movlw	2
  9731   0050AA  6E19               	movwf	(??_turnRight+1)^0,c
  9732   0050AC  0EA0               	movlw	160
  9733   0050AE  6E18               	movwf	??_turnRight^0,c
  9734   0050B0  0E92               	movlw	146
  9735   0050B2                     u6037:
  9736   0050B2  2EE8               	decfsz	wreg,f,c
  9737   0050B4  D7FE               	bra	u6037
  9738   0050B6  2E18               	decfsz	??_turnRight^0,f,c
  9739   0050B8  D7FC               	bra	u6037
  9740   0050BA  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9741   0050BC  D7FA               	bra	u6037
  9742   0050BE  D000               	nop2	
  9743   0050C0                     l4182:
  9744   0050C0  C014  FFD9         	movff	turnRight@mL,fsr2l
  9745   0050C4  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9746   0050C8  0E32               	movlw	50
  9747   0050CA  60DF               	cpfslt	indf2,c
  9748   0050CC  EF6A  F028         	goto	u3501
  9749   0050D0  EF6C  F028         	goto	u3500
  9750   0050D4                     u3501:
  9751   0050D4  EF78  F028         	goto	l454
  9752   0050D8                     u3500:
  9753   0050D8  C016  FFD9         	movff	turnRight@mR,fsr2l
  9754   0050DC  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9755   0050E0  0E31               	movlw	49
  9756   0050E2  64DF               	cpfsgt	indf2,c
  9757   0050E4  EF76  F028         	goto	u3511
  9758   0050E8  EF78  F028         	goto	u3510
  9759   0050EC                     u3511:
  9760   0050EC  EF3C  F028         	goto	l4174
  9761   0050F0                     u3510:
  9762   0050F0                     l454:
  9763   0050F0  0012               	return		;funcret
  9764   0050F2                     __end_of_turnRight:
  9765                           	callstack 0
  9766                           
  9767 ;; *************** function _RetryMove *****************
  9768 ;; Defined at:
  9769 ;;		line 326 in file "dc_motor.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9772 ;;		 -> motorL(9), 
  9773 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9774 ;;		 -> motorR(9), 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;Total ram usage:        6 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 5
  9793 ;; This function calls:
  9794 ;;		_fullSpeedAhead
  9795 ;;		_reverseDetect
  9796 ;;		_stop
  9797 ;; This function is called by:
  9798 ;;		_colour_move
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text49
  9803   00552E                     __ptext49:
  9804                           	callstack 0
  9805   00552E                     _RetryMove:
  9806                           	callstack 24
  9807   00552E                     
  9808                           ;dc_motor.c: 327:     reverseDetect(&motorL, &motorR);
  9809   00552E  0E61               	movlw	low _motorL
  9810   005530  6E1A               	movwf	reverseDetect@mL^0,c
  9811   005532  0E01               	movlw	high _motorL
  9812   005534  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9813   005536  0E58               	movlw	low _motorR
  9814   005538  6E1C               	movwf	reverseDetect@mR^0,c
  9815   00553A  0E01               	movlw	high _motorR
  9816   00553C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9817   00553E  EC92  F02B         	call	_reverseDetect	;wreg free
  9818                           
  9819                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
  9820   005542  0E61               	movlw	low _motorL
  9821   005544  6E14               	movwf	stop@mL^0,c
  9822   005546  0E01               	movlw	high _motorL
  9823   005548  6E15               	movwf	(stop@mL+1)^0,c
  9824   00554A  0E58               	movlw	low _motorR
  9825   00554C  6E16               	movwf	stop@mR^0,c
  9826   00554E  0E01               	movlw	high _motorR
  9827   005550  6E17               	movwf	(stop@mR+1)^0,c
  9828   005552  ECAA  F029         	call	_stop	;wreg free
  9829                           
  9830                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
  9831   005556  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9832   00555A  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9833   00555E  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9834   005562  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9835   005566  EC17  F029         	call	_fullSpeedAhead	;wreg free
  9836   00556A                     
  9837                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9838   00556A  0E29               	movlw	41
  9839   00556C  6E25               	movwf	(??_RetryMove+1)^0,c
  9840   00556E  0E96               	movlw	150
  9841   005570  6E24               	movwf	??_RetryMove^0,c
  9842   005572  0E7F               	movlw	127
  9843   005574                     u6047:
  9844   005574  2EE8               	decfsz	wreg,f,c
  9845   005576  D7FE               	bra	u6047
  9846   005578  2E24               	decfsz	??_RetryMove^0,f,c
  9847   00557A  D7FC               	bra	u6047
  9848   00557C  2E25               	decfsz	(??_RetryMove+1)^0,f,c
  9849   00557E  D7FA               	bra	u6047
  9850   005580  F000               	nop	
  9851   005582                     
  9852                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
  9853   005582  0E61               	movlw	low _motorL
  9854   005584  6E14               	movwf	stop@mL^0,c
  9855   005586  0E01               	movlw	high _motorL
  9856   005588  6E15               	movwf	(stop@mL+1)^0,c
  9857   00558A  0E58               	movlw	low _motorR
  9858   00558C  6E16               	movwf	stop@mR^0,c
  9859   00558E  0E01               	movlw	high _motorR
  9860   005590  6E17               	movwf	(stop@mR+1)^0,c
  9861   005592  ECAA  F029         	call	_stop	;wreg free
  9862   005596  0012               	return		;funcret
  9863   005598                     __end_of_RetryMove:
  9864                           	callstack 0
  9865                           
  9866 ;; *************** function _PinkMove *****************
  9867 ;; Defined at:
  9868 ;;		line 299 in file "dc_motor.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9871 ;;		 -> motorL(9), 
  9872 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9873 ;;		 -> motorR(9), 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;Total ram usage:        4 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 5
  9892 ;; This function calls:
  9893 ;;		_reverseDetect
  9894 ;;		_reverseOneBlock
  9895 ;;		_turnLeft45
  9896 ;; This function is called by:
  9897 ;;		_colour_move
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text50
  9902   005A26                     __ptext50:
  9903                           	callstack 0
  9904   005A26                     _PinkMove:
  9905                           	callstack 24
  9906   005A26                     
  9907                           ;dc_motor.c: 300:     reverseDetect(&motorL, &motorR);
  9908   005A26  0E61               	movlw	low _motorL
  9909   005A28  6E1A               	movwf	reverseDetect@mL^0,c
  9910   005A2A  0E01               	movlw	high _motorL
  9911   005A2C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9912   005A2E  0E58               	movlw	low _motorR
  9913   005A30  6E1C               	movwf	reverseDetect@mR^0,c
  9914   005A32  0E01               	movlw	high _motorR
  9915   005A34  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9916   005A36  EC92  F02B         	call	_reverseDetect	;wreg free
  9917                           
  9918                           ;dc_motor.c: 302:     reverseOneBlock(&motorL, &motorR);
  9919   005A3A  0E61               	movlw	low _motorL
  9920   005A3C  6E1A               	movwf	reverseOneBlock@mL^0,c
  9921   005A3E  0E01               	movlw	high _motorL
  9922   005A40  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9923   005A42  0E58               	movlw	low _motorR
  9924   005A44  6E1C               	movwf	reverseOneBlock@mR^0,c
  9925   005A46  0E01               	movlw	high _motorR
  9926   005A48  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9927   005A4A  EC18  F02C         	call	_reverseOneBlock	;wreg free
  9928                           
  9929                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
  9930   005A4E  0E61               	movlw	low _motorL
  9931   005A50  6E1A               	movwf	turnLeft45@mL^0,c
  9932   005A52  0E01               	movlw	high _motorL
  9933   005A54  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9934   005A56  0E58               	movlw	low _motorR
  9935   005A58  6E1C               	movwf	turnLeft45@mR^0,c
  9936   005A5A  0E01               	movlw	high _motorR
  9937   005A5C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9938   005A5E  EC54  F02E         	call	_turnLeft45	;wreg free
  9939                           
  9940                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  9941   005A62  0E61               	movlw	low _motorL
  9942   005A64  6E1A               	movwf	turnLeft45@mL^0,c
  9943   005A66  0E01               	movlw	high _motorL
  9944   005A68  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9945   005A6A  0E58               	movlw	low _motorR
  9946   005A6C  6E1C               	movwf	turnLeft45@mR^0,c
  9947   005A6E  0E01               	movlw	high _motorR
  9948   005A70  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9949   005A72  EC54  F02E         	call	_turnLeft45	;wreg free
  9950   005A76  0012               	return		;funcret
  9951   005A78                     __end_of_PinkMove:
  9952                           	callstack 0
  9953                           
  9954 ;; *************** function _turnLeft45 *****************
  9955 ;; Defined at:
  9956 ;;		line 219 in file "dc_motor.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9959 ;;		 -> motorL(9), 
  9960 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9961 ;;		 -> motorR(9), 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9976 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9977 ;;Total ram usage:        6 bytes
  9978 ;; Hardware stack levels used: 1
  9979 ;; Hardware stack levels required when called: 4
  9980 ;; This function calls:
  9981 ;;		_TurnDelay
  9982 ;;		_stop
  9983 ;;		_turnLeft
  9984 ;; This function is called by:
  9985 ;;		_GreenMove
  9986 ;;		_PinkMove
  9987 ;;		_LightBlueMove
  9988 ;;		_ReversePink
  9989 ;;		_turnCalibration
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text51
  9994   005CA8                     __ptext51:
  9995                           	callstack 0
  9996   005CA8                     _turnLeft45:
  9997                           	callstack 25
  9998   005CA8                     
  9999                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10000   005CA8  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10001   005CAC  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10002   005CB0  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10003   005CB4  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10004   005CB8  EC79  F028         	call	_turnLeft	;wreg free
 10005   005CBC                     
 10006                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10007   005CBC  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10008   005CC0  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10009   005CC4  EC99  F02F         	call	_TurnDelay	;wreg free
 10010   005CC8                     
 10011                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10012   005CC8  0E61               	movlw	low _motorL
 10013   005CCA  6E14               	movwf	stop@mL^0,c
 10014   005CCC  0E01               	movlw	high _motorL
 10015   005CCE  6E15               	movwf	(stop@mL+1)^0,c
 10016   005CD0  0E58               	movlw	low _motorR
 10017   005CD2  6E16               	movwf	stop@mR^0,c
 10018   005CD4  0E01               	movlw	high _motorR
 10019   005CD6  6E17               	movwf	(stop@mR+1)^0,c
 10020   005CD8  ECAA  F029         	call	_stop	;wreg free
 10021   005CDC                     
 10022                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10023   005CDC  0E05               	movlw	5
 10024   005CDE  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10025   005CE0  0E0F               	movlw	15
 10026   005CE2  6E1E               	movwf	??_turnLeft45^0,c
 10027   005CE4  0EF1               	movlw	241
 10028   005CE6                     u6057:
 10029   005CE6  2EE8               	decfsz	wreg,f,c
 10030   005CE8  D7FE               	bra	u6057
 10031   005CEA  2E1E               	decfsz	??_turnLeft45^0,f,c
 10032   005CEC  D7FC               	bra	u6057
 10033   005CEE  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10034   005CF0  D7FA               	bra	u6057
 10035   005CF2  F000               	nop	
 10036   005CF4  0012               	return		;funcret
 10037   005CF6                     __end_of_turnLeft45:
 10038                           	callstack 0
 10039                           
 10040 ;; *************** function _turnLeft *****************
 10041 ;; Defined at:
 10042 ;;		line 112 in file "dc_motor.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10045 ;;		 -> motorL(9), 
 10046 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10047 ;;		 -> motorR(9), 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10063 ;;Total ram usage:        6 bytes
 10064 ;; Hardware stack levels used: 1
 10065 ;; Hardware stack levels required when called: 3
 10066 ;; This function calls:
 10067 ;;		_setMotorPWM
 10068 ;; This function is called by:
 10069 ;;		_turnLeft45
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text52
 10074   0050F2                     __ptext52:
 10075                           	callstack 0
 10076   0050F2                     _turnLeft:
 10077                           	callstack 25
 10078   0050F2                     
 10079                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10080   0050F2  EE20 F001          	lfsr	2,1
 10081   0050F6  5014               	movf	turnLeft@mL^0,w,c
 10082   0050F8  26D9               	addwf	fsr2l,f,c
 10083   0050FA  5015               	movf	(turnLeft@mL+1)^0,w,c
 10084   0050FC  22DA               	addwfc	fsr2h,f,c
 10085   0050FE  0E00               	movlw	0
 10086   005100  6EDF               	movwf	indf2,c
 10087                           
 10088                           ;dc_motor.c: 115:     mR->direction =1;
 10089   005102  EE20 F001          	lfsr	2,1
 10090   005106  5016               	movf	turnLeft@mR^0,w,c
 10091   005108  26D9               	addwf	fsr2l,f,c
 10092   00510A  5017               	movf	(turnLeft@mR+1)^0,w,c
 10093   00510C  22DA               	addwfc	fsr2h,f,c
 10094   00510E  0E01               	movlw	1
 10095   005110  6EDF               	movwf	indf2,c
 10096                           
 10097                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10098   005112  EFAF  F028         	goto	l4168
 10099   005116                     l4160:
 10100                           
 10101                           ;dc_motor.c: 119:         mL->power+=10;
 10102   005116  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10103   00511A  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10104   00511E  0E0A               	movlw	10
 10105   005120  26DF               	addwf	indf2,f,c
 10106                           
 10107                           ;dc_motor.c: 120:         mR->power+=10;
 10108   005122  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10109   005126  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10110   00512A  0E0A               	movlw	10
 10111   00512C  26DF               	addwf	indf2,f,c
 10112   00512E                     
 10113                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10114   00512E  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10115   005132  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10116   005136  EC79  F023         	call	_setMotorPWM	;wreg free
 10117   00513A                     
 10118                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10119   00513A  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10120   00513E  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10121   005142  EC79  F023         	call	_setMotorPWM	;wreg free
 10122   005146                     
 10123                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10124   005146  0E02               	movlw	2
 10125   005148  6E19               	movwf	(??_turnLeft+1)^0,c
 10126   00514A  0EA0               	movlw	160
 10127   00514C  6E18               	movwf	??_turnLeft^0,c
 10128   00514E  0E92               	movlw	146
 10129   005150                     u6067:
 10130   005150  2EE8               	decfsz	wreg,f,c
 10131   005152  D7FE               	bra	u6067
 10132   005154  2E18               	decfsz	??_turnLeft^0,f,c
 10133   005156  D7FC               	bra	u6067
 10134   005158  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10135   00515A  D7FA               	bra	u6067
 10136   00515C  D000               	nop2	
 10137   00515E                     l4168:
 10138   00515E  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10139   005162  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10140   005166  0E32               	movlw	50
 10141   005168  60DF               	cpfslt	indf2,c
 10142   00516A  EFB9  F028         	goto	u3481
 10143   00516E  EFBB  F028         	goto	u3480
 10144   005172                     u3481:
 10145   005172  EFC7  F028         	goto	l446
 10146   005176                     u3480:
 10147   005176  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10148   00517A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10149   00517E  0E31               	movlw	49
 10150   005180  64DF               	cpfsgt	indf2,c
 10151   005182  EFC5  F028         	goto	u3491
 10152   005186  EFC7  F028         	goto	u3490
 10153   00518A                     u3491:
 10154   00518A  EF8B  F028         	goto	l4160
 10155   00518E                     u3490:
 10156   00518E                     l446:
 10157   00518E  0012               	return		;funcret
 10158   005190                     __end_of_turnLeft:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _TurnDelay *****************
 10162 ;; Defined at:
 10163 ;;		line 205 in file "dc_motor.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  Turn45Delay     2    0[COMRAM] int 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg, status,2, status,0
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;Total ram usage:        3 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; Hardware stack levels required when called: 1
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_turnRight45
 10188 ;;		_turnLeft45
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text53
 10193   005F32                     __ptext53:
 10194                           	callstack 0
 10195   005F32                     _TurnDelay:
 10196                           	callstack 27
 10197   005F32                     
 10198                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10199   005F32  EFA6  F02F         	goto	l481
 10200   005F36                     l4202:
 10201                           
 10202                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10203   005F36  0E15               	movlw	21
 10204   005F38  6E03               	movwf	??_TurnDelay^0,c
 10205   005F3A  0EC6               	movlw	198
 10206   005F3C                     u6077:
 10207   005F3C  2EE8               	decfsz	wreg,f,c
 10208   005F3E  D7FE               	bra	u6077
 10209   005F40  2E03               	decfsz	??_TurnDelay^0,f,c
 10210   005F42  D7FC               	bra	u6077
 10211   005F44  D000               	nop2	
 10212   005F46                     
 10213                           ;dc_motor.c: 208:         Turn45Delay--;
 10214   005F46  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10215   005F48  A0D8               	btfss	status,0,c
 10216   005F4A  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10217   005F4C                     l481:
 10218                           
 10219                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10220   005F4C  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10221   005F4E  EFB3  F02F         	goto	u3540
 10222   005F52  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10223   005F54  E106               	bnz	u3541
 10224   005F56  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10225   005F58  B0D8               	btfsc	status,0,c
 10226   005F5A  EFB1  F02F         	goto	u3541
 10227   005F5E  EFB3  F02F         	goto	u3540
 10228   005F62                     u3541:
 10229   005F62  EF9B  F02F         	goto	l4202
 10230   005F66                     u3540:
 10231   005F66  0012               	return		;funcret
 10232   005F68                     __end_of_TurnDelay:
 10233                           	callstack 0
 10234                           
 10235 ;; *************** function _reverseOneBlock *****************
 10236 ;; Defined at:
 10237 ;;		line 233 in file "dc_motor.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10240 ;;		 -> motorL(9), 
 10241 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10242 ;;		 -> motorR(9), 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;Total ram usage:        6 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 4
 10261 ;; This function calls:
 10262 ;;		_fullSpeedBack
 10263 ;;		_stop
 10264 ;; This function is called by:
 10265 ;;		_YellowMove
 10266 ;;		_PinkMove
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text54
 10271   005830                     __ptext54:
 10272                           	callstack 0
 10273   005830                     _reverseOneBlock:
 10274                           	callstack 24
 10275   005830                     
 10276                           ;dc_motor.c: 234:     fullSpeedBack(mL,mR);
 10277   005830  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10278   005834  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10279   005838  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10280   00583C  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10281   005840  ECC8  F028         	call	_fullSpeedBack	;wreg free
 10282   005844                     
 10283                           ;dc_motor.c: 235:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10284   005844  0E56               	movlw	86
 10285   005846  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10286   005848  0E3A               	movlw	58
 10287   00584A  6E1E               	movwf	??_reverseOneBlock^0,c
 10288   00584C  0EF4               	movlw	244
 10289   00584E                     u6087:
 10290   00584E  2EE8               	decfsz	wreg,f,c
 10291   005850  D7FE               	bra	u6087
 10292   005852  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10293   005854  D7FC               	bra	u6087
 10294   005856  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10295   005858  D7FA               	bra	u6087
 10296   00585A                     
 10297                           ;dc_motor.c: 236:     stop(&motorL, &motorR);
 10298   00585A  0E61               	movlw	low _motorL
 10299   00585C  6E14               	movwf	stop@mL^0,c
 10300   00585E  0E01               	movlw	high _motorL
 10301   005860  6E15               	movwf	(stop@mL+1)^0,c
 10302   005862  0E58               	movlw	low _motorR
 10303   005864  6E16               	movwf	stop@mR^0,c
 10304   005866  0E01               	movlw	high _motorR
 10305   005868  6E17               	movwf	(stop@mR+1)^0,c
 10306   00586A  ECAA  F029         	call	_stop	;wreg free
 10307                           
 10308                           ;dc_motor.c: 237:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10309   00586E  0E05               	movlw	5
 10310   005870  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10311   005872  0E0F               	movlw	15
 10312   005874  6E1E               	movwf	??_reverseOneBlock^0,c
 10313   005876  0EF1               	movlw	241
 10314   005878                     u6097:
 10315   005878  2EE8               	decfsz	wreg,f,c
 10316   00587A  D7FE               	bra	u6097
 10317   00587C  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10318   00587E  D7FC               	bra	u6097
 10319   005880  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10320   005882  D7FA               	bra	u6097
 10321   005884  F000               	nop	
 10322   005886  0012               	return		;funcret
 10323   005888                     __end_of_reverseOneBlock:
 10324                           	callstack 0
 10325                           
 10326 ;; *************** function _reverseDetect *****************
 10327 ;; Defined at:
 10328 ;;		line 226 in file "dc_motor.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10331 ;;		 -> motorL(9), 
 10332 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10333 ;;		 -> motorR(9), 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10349 ;;Total ram usage:        6 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 4
 10352 ;; This function calls:
 10353 ;;		_fullSpeedBack
 10354 ;;		_stop
 10355 ;; This function is called by:
 10356 ;;		_RedMove
 10357 ;;		_GreenMove
 10358 ;;		_BlueMove
 10359 ;;		_YellowMove
 10360 ;;		_PinkMove
 10361 ;;		_OrangeMove
 10362 ;;		_LightBlueMove
 10363 ;;		_RetryMove
 10364 ;;		_ReverseYellow
 10365 ;;		_ReversePink
 10366 ;;		_go_Home
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text55
 10371   005724                     __ptext55:
 10372                           	callstack 0
 10373   005724                     _reverseDetect:
 10374                           	callstack 25
 10375   005724                     
 10376                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10377   005724  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10378   005728  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10379   00572C  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10380   005730  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10381   005734  ECC8  F028         	call	_fullSpeedBack	;wreg free
 10382   005738                     
 10383                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10384   005738  0E11               	movlw	17
 10385   00573A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10386   00573C  0E3C               	movlw	60
 10387   00573E  6E1E               	movwf	??_reverseDetect^0,c
 10388   005740  0ECB               	movlw	203
 10389   005742                     u6107:
 10390   005742  2EE8               	decfsz	wreg,f,c
 10391   005744  D7FE               	bra	u6107
 10392   005746  2E1E               	decfsz	??_reverseDetect^0,f,c
 10393   005748  D7FC               	bra	u6107
 10394   00574A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10395   00574C  D7FA               	bra	u6107
 10396   00574E  F000               	nop	
 10397   005750                     
 10398                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10399   005750  0E61               	movlw	low _motorL
 10400   005752  6E14               	movwf	stop@mL^0,c
 10401   005754  0E01               	movlw	high _motorL
 10402   005756  6E15               	movwf	(stop@mL+1)^0,c
 10403   005758  0E58               	movlw	low _motorR
 10404   00575A  6E16               	movwf	stop@mR^0,c
 10405   00575C  0E01               	movlw	high _motorR
 10406   00575E  6E17               	movwf	(stop@mR+1)^0,c
 10407   005760  ECAA  F029         	call	_stop	;wreg free
 10408                           
 10409                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10410   005764  0E05               	movlw	5
 10411   005766  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10412   005768  0E0F               	movlw	15
 10413   00576A  6E1E               	movwf	??_reverseDetect^0,c
 10414   00576C  0EF1               	movlw	241
 10415   00576E                     u6117:
 10416   00576E  2EE8               	decfsz	wreg,f,c
 10417   005770  D7FE               	bra	u6117
 10418   005772  2E1E               	decfsz	??_reverseDetect^0,f,c
 10419   005774  D7FC               	bra	u6117
 10420   005776  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10421   005778  D7FA               	bra	u6117
 10422   00577A  F000               	nop	
 10423   00577C  0012               	return		;funcret
 10424   00577E                     __end_of_reverseDetect:
 10425                           	callstack 0
 10426                           
 10427 ;; *************** function _fullSpeedBack *****************
 10428 ;; Defined at:
 10429 ;;		line 186 in file "dc_motor.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10432 ;;		 -> motorL(9), 
 10433 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10434 ;;		 -> motorR(9), 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10450 ;;Total ram usage:        6 bytes
 10451 ;; Hardware stack levels used: 1
 10452 ;; Hardware stack levels required when called: 3
 10453 ;; This function calls:
 10454 ;;		_setMotorPWM
 10455 ;; This function is called by:
 10456 ;;		_reverseDetect
 10457 ;;		_reverseOneBlock
 10458 ;;		_Backhalfblock
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text56
 10463   005190                     __ptext56:
 10464                           	callstack 0
 10465   005190                     _fullSpeedBack:
 10466                           	callstack 25
 10467   005190                     
 10468                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10469   005190  EE20 F001          	lfsr	2,1
 10470   005194  5014               	movf	fullSpeedBack@mL^0,w,c
 10471   005196  26D9               	addwf	fsr2l,f,c
 10472   005198  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10473   00519A  22DA               	addwfc	fsr2h,f,c
 10474   00519C  0E00               	movlw	0
 10475   00519E  6EDF               	movwf	indf2,c
 10476                           
 10477                           ;dc_motor.c: 190:     mR->direction =0;
 10478   0051A0  EE20 F001          	lfsr	2,1
 10479   0051A4  5016               	movf	fullSpeedBack@mR^0,w,c
 10480   0051A6  26D9               	addwf	fsr2l,f,c
 10481   0051A8  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10482   0051AA  22DA               	addwfc	fsr2h,f,c
 10483   0051AC  0E00               	movlw	0
 10484   0051AE  6EDF               	movwf	indf2,c
 10485                           
 10486                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10487   0051B0  EFFE  F028         	goto	l4196
 10488   0051B4                     l4188:
 10489                           
 10490                           ;dc_motor.c: 193:         mL->power+=10;
 10491   0051B4  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10492   0051B8  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10493   0051BC  0E0A               	movlw	10
 10494   0051BE  26DF               	addwf	indf2,f,c
 10495                           
 10496                           ;dc_motor.c: 194:         mR->power+=10;
 10497   0051C0  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10498   0051C4  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10499   0051C8  0E0A               	movlw	10
 10500   0051CA  26DF               	addwf	indf2,f,c
 10501   0051CC                     
 10502                           ;dc_motor.c: 196:         setMotorPWM(mL);
 10503   0051CC  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10504   0051D0  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10505   0051D4  EC79  F023         	call	_setMotorPWM	;wreg free
 10506   0051D8                     
 10507                           ;dc_motor.c: 197:         setMotorPWM(mR);
 10508   0051D8  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10509   0051DC  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10510   0051E0  EC79  F023         	call	_setMotorPWM	;wreg free
 10511   0051E4                     
 10512                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10513   0051E4  0E02               	movlw	2
 10514   0051E6  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10515   0051E8  0EA0               	movlw	160
 10516   0051EA  6E18               	movwf	??_fullSpeedBack^0,c
 10517   0051EC  0E92               	movlw	146
 10518   0051EE                     u6127:
 10519   0051EE  2EE8               	decfsz	wreg,f,c
 10520   0051F0  D7FE               	bra	u6127
 10521   0051F2  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10522   0051F4  D7FC               	bra	u6127
 10523   0051F6  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10524   0051F8  D7FA               	bra	u6127
 10525   0051FA  D000               	nop2	
 10526   0051FC                     l4196:
 10527   0051FC  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10528   005200  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10529   005204  0E32               	movlw	50
 10530   005206  60DF               	cpfslt	indf2,c
 10531   005208  EF08  F029         	goto	u3521
 10532   00520C  EF0A  F029         	goto	u3520
 10533   005210                     u3521:
 10534   005210  EF16  F029         	goto	l478
 10535   005214                     u3520:
 10536   005214  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10537   005218  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10538   00521C  0E31               	movlw	49
 10539   00521E  64DF               	cpfsgt	indf2,c
 10540   005220  EF14  F029         	goto	u3531
 10541   005224  EF16  F029         	goto	u3530
 10542   005228                     u3531:
 10543   005228  EFDA  F028         	goto	l4188
 10544   00522C                     u3530:
 10545   00522C                     l478:
 10546   00522C  0012               	return		;funcret
 10547   00522E                     __end_of_fullSpeedBack:
 10548                           	callstack 0
 10549                           
 10550 ;; *************** function _color_click_init *****************
 10551 ;; Defined at:
 10552 ;;		line 8 in file "color.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1    wreg      void 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0, cstack
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;Total ram usage:        1 bytes
 10571 ;; Hardware stack levels used: 1
 10572 ;; Hardware stack levels required when called: 4
 10573 ;; This function calls:
 10574 ;;		_I2C_2_Master_Init
 10575 ;;		_color_writetoaddr
 10576 ;; This function is called by:
 10577 ;;		_main
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text57
 10582   005A78                     __ptext57:
 10583                           	callstack 0
 10584   005A78                     _color_click_init:
 10585                           	callstack 26
 10586   005A78                     
 10587                           ;color.c: 11:     I2C_2_Master_Init();
 10588   005A78  ECCC  F02F         	call	_I2C_2_Master_Init	;wreg free
 10589   005A7C                     
 10590                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 10591   005A7C  0E01               	movlw	1
 10592   005A7E  6E03               	movwf	color_writetoaddr@value^0,c
 10593   005A80  0E00               	movlw	0
 10594   005A82  EC1B  F030         	call	_color_writetoaddr
 10595   005A86                     
 10596                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10597   005A86  0E3F               	movlw	63
 10598   005A88  6E05               	movwf	??_color_click_init^0,c
 10599   005A8A  0E55               	movlw	85
 10600   005A8C                     u6137:
 10601   005A8C  2EE8               	decfsz	wreg,f,c
 10602   005A8E  D7FE               	bra	u6137
 10603   005A90  2E05               	decfsz	??_color_click_init^0,f,c
 10604   005A92  D7FC               	bra	u6137
 10605   005A94  F000               	nop	
 10606   005A96                     
 10607                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 10608   005A96  0E03               	movlw	3
 10609   005A98  6E03               	movwf	color_writetoaddr@value^0,c
 10610   005A9A  0E00               	movlw	0
 10611   005A9C  EC1B  F030         	call	_color_writetoaddr
 10612   005AA0                     
 10613                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 10614   005AA0  0ED5               	movlw	213
 10615   005AA2  6E03               	movwf	color_writetoaddr@value^0,c
 10616   005AA4  0E01               	movlw	1
 10617   005AA6  EC1B  F030         	call	_color_writetoaddr
 10618   005AAA                     
 10619                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 10620   005AAA  0E00               	movlw	0
 10621   005AAC  6E03               	movwf	color_writetoaddr@value^0,c
 10622   005AAE  0E0F               	movlw	15
 10623   005AB0  EC1B  F030         	call	_color_writetoaddr
 10624   005AB4                     
 10625                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 10626   005AB4  9287               	bcf	135,1,c	;volatile
 10627   005AB6                     
 10628                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 10629   005AB6  9881               	bcf	129,4,c	;volatile
 10630   005AB8                     
 10631                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 10632   005AB8  9E86               	bcf	134,7,c	;volatile
 10633   005ABA                     
 10634                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 10635   005ABA  9684               	bcf	132,3,c	;volatile
 10636   005ABC                     
 10637                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 10638   005ABC  9884               	bcf	132,4,c	;volatile
 10639   005ABE                     
 10640                           ;color.c: 29:     LATGbits.LATG1=0;
 10641   005ABE  927F               	bcf	127,1,c	;volatile
 10642   005AC0                     
 10643                           ;color.c: 30:     LATFbits.LATF7=0;
 10644   005AC0  9E7E               	bcf	126,7,c	;volatile
 10645   005AC2                     
 10646                           ;color.c: 31:     LATAbits.LATA4=0;
 10647   005AC2  9879               	bcf	121,4,c	;volatile
 10648   005AC4                     
 10649                           ;color.c: 33:     LATDbits.LATD3=0;
 10650   005AC4  967C               	bcf	124,3,c	;volatile
 10651   005AC6                     
 10652                           ;color.c: 34:     LATDbits.LATD4=0;
 10653   005AC6  987C               	bcf	124,4,c	;volatile
 10654   005AC8  0012               	return		;funcret
 10655   005ACA                     __end_of_color_click_init:
 10656                           	callstack 0
 10657                           
 10658 ;; *************** function _color_writetoaddr *****************
 10659 ;; Defined at:
 10660 ;;		line 42 in file "color.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  address         1    wreg     unsigned char 
 10663 ;;  value           1    2[COMRAM] unsigned char 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  address         1    3[COMRAM] unsigned char 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10675 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10679 ;;Total ram usage:        2 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 3
 10682 ;; This function calls:
 10683 ;;		_I2C_2_Master_Start
 10684 ;;		_I2C_2_Master_Stop
 10685 ;;		_I2C_2_Master_Write
 10686 ;; This function is called by:
 10687 ;;		_color_click_init
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text58
 10692   006036                     __ptext58:
 10693                           	callstack 0
 10694   006036                     _color_writetoaddr:
 10695                           	callstack 26
 10696                           
 10697                           ;incstack = 0
 10698                           ;color_writetoaddr@address stored from wreg
 10699   006036  6E04               	movwf	color_writetoaddr@address^0,c
 10700   006038                     
 10701                           ;color.c: 43:     I2C_2_Master_Start();
 10702   006038  EC72  F030         	call	_I2C_2_Master_Start	;wreg free
 10703                           
 10704                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 10705   00603C  0E52               	movlw	82
 10706   00603E  EC56  F030         	call	_I2C_2_Master_Write
 10707                           
 10708                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 10709   006042  5004               	movf	color_writetoaddr@address^0,w,c
 10710   006044  0980               	iorlw	128
 10711   006046  EC56  F030         	call	_I2C_2_Master_Write
 10712                           
 10713                           ;color.c: 46:     I2C_2_Master_Write(value);
 10714   00604A  5003               	movf	color_writetoaddr@value^0,w,c
 10715   00604C  EC56  F030         	call	_I2C_2_Master_Write
 10716                           
 10717                           ;color.c: 47:     I2C_2_Master_Stop();
 10718   006050  EC6D  F030         	call	_I2C_2_Master_Stop	;wreg free
 10719   006054  0012               	return		;funcret
 10720   006056                     __end_of_color_writetoaddr:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function _I2C_2_Master_Write *****************
 10724 ;; Defined at:
 10725 ;;		line 45 in file "i2c.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  data_byte       1    wreg     unsigned char 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  data_byte       1    1[COMRAM] unsigned char 
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      void 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10743 ;;Total ram usage:        1 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 2
 10746 ;; This function calls:
 10747 ;;		_I2C_2_Master_Idle
 10748 ;; This function is called by:
 10749 ;;		_color_writetoaddr
 10750 ;;		_color_read_lum
 10751 ;;		_color_read_Red
 10752 ;;		_color_read_Green
 10753 ;;		_color_read_Blue
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text59
 10758   0060AC                     __ptext59:
 10759                           	callstack 0
 10760   0060AC                     _I2C_2_Master_Write:
 10761                           	callstack 26
 10762                           
 10763                           ;incstack = 0
 10764                           ;I2C_2_Master_Write@data_byte stored from wreg
 10765   0060AC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10766   0060AE                     
 10767                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10768   0060AE  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10769   0060B2                     
 10770                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10771   0060B2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10772   0060B6  0012               	return		;funcret
 10773   0060B8                     __end_of_I2C_2_Master_Write:
 10774                           	callstack 0
 10775                           
 10776 ;; *************** function _I2C_2_Master_Stop *****************
 10777 ;; Defined at:
 10778 ;;		line 39 in file "i2c.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  1    wreg      void 
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0, cstack
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;Total ram usage:        0 bytes
 10797 ;; Hardware stack levels used: 1
 10798 ;; Hardware stack levels required when called: 2
 10799 ;; This function calls:
 10800 ;;		_I2C_2_Master_Idle
 10801 ;; This function is called by:
 10802 ;;		_color_writetoaddr
 10803 ;;		_color_read_lum
 10804 ;;		_color_read_Red
 10805 ;;		_color_read_Green
 10806 ;;		_color_read_Blue
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text60
 10811   0060DA                     __ptext60:
 10812                           	callstack 0
 10813   0060DA                     _I2C_2_Master_Stop:
 10814                           	callstack 26
 10815   0060DA                     
 10816                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10817   0060DA  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10818   0060DE                     
 10819                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10820   0060DE  010E               	movlb	14	; () banked
 10821   0060E0  85DA               	bsf	218,2,b	;volatile
 10822   0060E2                     
 10823                           ; BSR set to: 14
 10824   0060E2  0012               	return		;funcret
 10825   0060E4                     __end_of_I2C_2_Master_Stop:
 10826                           	callstack 0
 10827                           
 10828 ;; *************** function _I2C_2_Master_Start *****************
 10829 ;; Defined at:
 10830 ;;		line 27 in file "i2c.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;Total ram usage:        0 bytes
 10849 ;; Hardware stack levels used: 1
 10850 ;; Hardware stack levels required when called: 2
 10851 ;; This function calls:
 10852 ;;		_I2C_2_Master_Idle
 10853 ;; This function is called by:
 10854 ;;		_color_writetoaddr
 10855 ;;		_color_read_lum
 10856 ;;		_color_read_Red
 10857 ;;		_color_read_Green
 10858 ;;		_color_read_Blue
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text61
 10863   0060E4                     __ptext61:
 10864                           	callstack 0
 10865   0060E4                     _I2C_2_Master_Start:
 10866                           	callstack 26
 10867   0060E4                     
 10868                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10869   0060E4  ECE1  F02F         	call	_I2C_2_Master_Idle	;wreg free
 10870   0060E8                     
 10871                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10872   0060E8  010E               	movlb	14	; () banked
 10873   0060EA  81DA               	bsf	218,0,b	;volatile
 10874   0060EC                     
 10875                           ; BSR set to: 14
 10876   0060EC  0012               	return		;funcret
 10877   0060EE                     __end_of_I2C_2_Master_Start:
 10878                           	callstack 0
 10879                           
 10880 ;; *************** function _I2C_2_Master_Idle *****************
 10881 ;; Defined at:
 10882 ;;		line 22 in file "i2c.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10900 ;;Total ram usage:        1 bytes
 10901 ;; Hardware stack levels used: 1
 10902 ;; Hardware stack levels required when called: 1
 10903 ;; This function calls:
 10904 ;;		Nothing
 10905 ;; This function is called by:
 10906 ;;		_I2C_2_Master_Start
 10907 ;;		_I2C_2_Master_RepStart
 10908 ;;		_I2C_2_Master_Stop
 10909 ;;		_I2C_2_Master_Write
 10910 ;;		_I2C_2_Master_Read
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text62
 10915   005FC2                     __ptext62:
 10916                           	callstack 0
 10917   005FC2                     _I2C_2_Master_Idle:
 10918                           	callstack 26
 10919   005FC2                     l145:
 10920   005FC2  010E               	movlb	14	; () banked
 10921   005FC4  B5D8               	btfsc	216,2,b	;volatile
 10922   005FC6  EFE7  F02F         	goto	u4491
 10923   005FCA  EFE9  F02F         	goto	u4490
 10924   005FCE                     u4491:
 10925   005FCE  EFE1  F02F         	goto	l145
 10926   005FD2                     u4490:
 10927   005FD2                     
 10928                           ; BSR set to: 14
 10929   005FD2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10930   005FD6  0E1F               	movlw	31
 10931   005FD8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10932   005FDA  A4D8               	btfss	status,2,c
 10933   005FDC  EFF2  F02F         	goto	u4501
 10934   005FE0  EFF4  F02F         	goto	u4500
 10935   005FE4                     u4501:
 10936   005FE4  EFE1  F02F         	goto	l145
 10937   005FE8                     u4500:
 10938   005FE8                     
 10939                           ; BSR set to: 14
 10940   005FE8  0012               	return		;funcret
 10941   005FEA                     __end_of_I2C_2_Master_Idle:
 10942                           	callstack 0
 10943                           
 10944 ;; *************** function _I2C_2_Master_Init *****************
 10945 ;; Defined at:
 10946 ;;		line 4 in file "i2c.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;		None
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, status,2
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10964 ;;Total ram usage:        0 bytes
 10965 ;; Hardware stack levels used: 1
 10966 ;; Hardware stack levels required when called: 1
 10967 ;; This function calls:
 10968 ;;		Nothing
 10969 ;; This function is called by:
 10970 ;;		_color_click_init
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text63
 10976   005F98                     __ptext63:
 10977                           	callstack 0
 10978   005F98                     _I2C_2_Master_Init:
 10979                           	callstack 28
 10980   005F98                     
 10981                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10982   005F98  010E               	movlb	14	; () banked
 10983   005F9A  51D9               	movf	217,w,b	;volatile
 10984   005F9C  0BF0               	andlw	-16
 10985   005F9E  0908               	iorlw	8
 10986   005FA0  6FD9               	movwf	217,b	;volatile
 10987   005FA2                     
 10988                           ; BSR set to: 14
 10989                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10990   005FA2  8BD9               	bsf	217,5,b	;volatile
 10991                           
 10992                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10993   005FA4  0E9F               	movlw	159
 10994   005FA6  6FD6               	movwf	214,b	;volatile
 10995   005FA8                     
 10996                           ; BSR set to: 14
 10997                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10998   005FA8  8A84               	bsf	132,5,c	;volatile
 10999   005FAA                     
 11000                           ; BSR set to: 14
 11001                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11002   005FAA  8C84               	bsf	132,6,c	;volatile
 11003   005FAC                     
 11004                           ; BSR set to: 14
 11005                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11006   005FAC  9BA7               	bcf	167,5,b	;volatile
 11007   005FAE                     
 11008                           ; BSR set to: 14
 11009                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11010   005FAE  9DA7               	bcf	167,6,b	;volatile
 11011                           
 11012                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11013   005FB0  0E1D               	movlw	29
 11014   005FB2  6F1D               	movwf	29,b	;volatile
 11015                           
 11016                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11017   005FB4  0E1E               	movlw	30
 11018   005FB6  6F1C               	movwf	28,b	;volatile
 11019                           
 11020                           ;i2c.c: 18:   RD5PPS=0x1C;
 11021   005FB8  0E1C               	movlw	28
 11022   005FBA  6F6F               	movwf	111,b	;volatile
 11023                           
 11024                           ;i2c.c: 19:   RD6PPS=0x1B;
 11025   005FBC  0E1B               	movlw	27
 11026   005FBE  6F70               	movwf	112,b	;volatile
 11027   005FC0                     
 11028                           ; BSR set to: 14
 11029   005FC0  0012               	return		;funcret
 11030   005FC2                     __end_of_I2C_2_Master_Init:
 11031                           	callstack 0
 11032                           
 11033 ;; *************** function _Timer0_init *****************
 11034 ;; Defined at:
 11035 ;;		line 8 in file "timers.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, status,2
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used: 1
 11055 ;; Hardware stack levels required when called: 1
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text64
 11064   006056                     __ptext64:
 11065                           	callstack 0
 11066   006056                     _Timer0_init:
 11067                           	callstack 29
 11068   006056                     
 11069                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11070   006056  50D6               	movf	214,w,c	;volatile
 11071   006058  0B1F               	andlw	-225
 11072   00605A  0940               	iorlw	64
 11073   00605C  6ED6               	movwf	214,c	;volatile
 11074   00605E                     
 11075                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11076   00605E  88D6               	bsf	214,4,c	;volatile
 11077                           
 11078                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11079   006060  50D6               	movf	214,w,c	;volatile
 11080   006062  0BF0               	andlw	-16
 11081   006064  090D               	iorlw	13
 11082   006066  6ED6               	movwf	214,c	;volatile
 11083   006068                     
 11084                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11085   006068  88D5               	bsf	213,4,c	;volatile
 11086                           
 11087                           ;timers.c: 16:     TMR0H=0;
 11088   00606A  0E00               	movlw	0
 11089   00606C  6ED4               	movwf	212,c	;volatile
 11090                           
 11091                           ;timers.c: 17:     TMR0L=0;
 11092   00606E  0E00               	movlw	0
 11093   006070  6ED3               	movwf	211,c	;volatile
 11094   006072                     
 11095                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11096   006072  9ED5               	bcf	213,7,c	;volatile
 11097   006074  0012               	return		;funcret
 11098   006076                     __end_of_Timer0_init:
 11099                           	callstack 0
 11100                           
 11101 ;; *************** function _LED_init *****************
 11102 ;; Defined at:
 11103 ;;		line 6 in file "LED_buttons.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		None
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used: 1
 11123 ;; Hardware stack levels required when called: 1
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_main
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text65
 11132   005FEA                     __ptext65:
 11133                           	callstack 0
 11134   005FEA                     _LED_init:
 11135                           	callstack 29
 11136   005FEA                     
 11137                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11138   005FEA  9287               	bcf	135,1,c	;volatile
 11139                           
 11140                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11141   005FEC  9881               	bcf	129,4,c	;volatile
 11142                           
 11143                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11144   005FEE  9E86               	bcf	134,7,c	;volatile
 11145                           
 11146                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11147   005FF0  827F               	bsf	127,1,c	;volatile
 11148                           
 11149                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11150   005FF2  8879               	bsf	121,4,c	;volatile
 11151                           
 11152                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11153   005FF4  8E7E               	bsf	126,7,c	;volatile
 11154                           
 11155                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11156   005FF6  9E7C               	bcf	124,7,c	;volatile
 11157                           
 11158                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11159   005FF8  9E84               	bcf	132,7,c	;volatile
 11160                           
 11161                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11162   005FFA  9680               	bcf	128,3,c	;volatile
 11163                           
 11164                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11165   005FFC  9688               	bcf	136,3,c	;volatile
 11166                           
 11167                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11168   005FFE  9080               	bcf	128,0,c	;volatile
 11169                           
 11170                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11171   006000  9088               	bcf	136,0,c	;volatile
 11172                           
 11173                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11174   006002  907E               	bcf	126,0,c	;volatile
 11175                           
 11176                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11177   006004  9086               	bcf	134,0,c	;volatile
 11178                           
 11179                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11180   006006  987C               	bcf	124,4,c	;volatile
 11181                           
 11182                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11183   006008  9884               	bcf	132,4,c	;volatile
 11184                           
 11185                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11186   00600A  967C               	bcf	124,3,c	;volatile
 11187                           
 11188                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11189   00600C  9684               	bcf	132,3,c	;volatile
 11190   00600E  0012               	return		;funcret
 11191   006010                     __end_of_LED_init:
 11192                           	callstack 0
 11193                           
 11194 ;; *************** function _Interrupts_init *****************
 11195 ;; Defined at:
 11196 ;;		line 9 in file "interrupts.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;		None
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      void 
 11203 ;; Registers used:
 11204 ;;		None
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;Total ram usage:        0 bytes
 11215 ;; Hardware stack levels used: 1
 11216 ;; Hardware stack levels required when called: 1
 11217 ;; This function calls:
 11218 ;;		Nothing
 11219 ;; This function is called by:
 11220 ;;		_main
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text66
 11225   0060B8                     __ptext66:
 11226                           	callstack 0
 11227   0060B8                     _Interrupts_init:
 11228                           	callstack 29
 11229   0060B8                     
 11230                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11231   0060B8  9AF2               	bcf	242,5,c	;volatile
 11232                           
 11233                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11234   0060BA  9CF2               	bcf	242,6,c	;volatile
 11235                           
 11236                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11237   0060BC  8EF2               	bsf	242,7,c	;volatile
 11238                           
 11239                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11240   0060BE  010E               	movlb	14	; () banked
 11241   0060C0  8B29               	bsf	41,5,b	;volatile
 11242   0060C2                     
 11243                           ; BSR set to: 14
 11244   0060C2  0012               	return		;funcret
 11245   0060C4                     __end_of_Interrupts_init:
 11246                           	callstack 0
 11247                           
 11248 ;; *************** function _Forwardhalfblock *****************
 11249 ;; Defined at:
 11250 ;;		line 246 in file "dc_motor.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11253 ;;		 -> motorL(9), 
 11254 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11255 ;;		 -> motorR(9), 
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;		None
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      void 
 11260 ;; Registers used:
 11261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;Total ram usage:        6 bytes
 11272 ;; Hardware stack levels used: 1
 11273 ;; Hardware stack levels required when called: 4
 11274 ;; This function calls:
 11275 ;;		_fullSpeedAhead
 11276 ;;		_stop
 11277 ;; This function is called by:
 11278 ;;		_main
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text67
 11283   00577E                     __ptext67:
 11284                           	callstack 0
 11285   00577E                     _Forwardhalfblock:
 11286                           	callstack 26
 11287   00577E                     
 11288                           ;dc_motor.c: 247:     fullSpeedAhead(mL,mR);
 11289   00577E  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11290   005782  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11291   005786  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11292   00578A  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11293   00578E  EC17  F029         	call	_fullSpeedAhead	;wreg free
 11294   005792                     
 11295                           ;dc_motor.c: 248:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11296   005792  0E2B               	movlw	43
 11297   005794  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11298   005796  0E9D               	movlw	157
 11299   005798  6E1E               	movwf	??_Forwardhalfblock^0,c
 11300   00579A  0EF9               	movlw	249
 11301   00579C                     u6147:
 11302   00579C  2EE8               	decfsz	wreg,f,c
 11303   00579E  D7FE               	bra	u6147
 11304   0057A0  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11305   0057A2  D7FC               	bra	u6147
 11306   0057A4  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11307   0057A6  D7FA               	bra	u6147
 11308   0057A8  F000               	nop	
 11309   0057AA                     
 11310                           ;dc_motor.c: 249:     stop(&motorL, &motorR);
 11311   0057AA  0E61               	movlw	low _motorL
 11312   0057AC  6E14               	movwf	stop@mL^0,c
 11313   0057AE  0E01               	movlw	high _motorL
 11314   0057B0  6E15               	movwf	(stop@mL+1)^0,c
 11315   0057B2  0E58               	movlw	low _motorR
 11316   0057B4  6E16               	movwf	stop@mR^0,c
 11317   0057B6  0E01               	movlw	high _motorR
 11318   0057B8  6E17               	movwf	(stop@mR+1)^0,c
 11319   0057BA  ECAA  F029         	call	_stop	;wreg free
 11320                           
 11321                           ;dc_motor.c: 250:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11322   0057BE  0E05               	movlw	5
 11323   0057C0  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11324   0057C2  0E0F               	movlw	15
 11325   0057C4  6E1E               	movwf	??_Forwardhalfblock^0,c
 11326   0057C6  0EF1               	movlw	241
 11327   0057C8                     u6157:
 11328   0057C8  2EE8               	decfsz	wreg,f,c
 11329   0057CA  D7FE               	bra	u6157
 11330   0057CC  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11331   0057CE  D7FC               	bra	u6157
 11332   0057D0  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11333   0057D2  D7FA               	bra	u6157
 11334   0057D4  F000               	nop	
 11335   0057D6  0012               	return		;funcret
 11336   0057D8                     __end_of_Forwardhalfblock:
 11337                           	callstack 0
 11338                           
 11339 ;; *************** function _stop *****************
 11340 ;; Defined at:
 11341 ;;		line 94 in file "dc_motor.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11344 ;;		 -> motorL(9), 
 11345 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11346 ;;		 -> motorR(9), 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;		None
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      void 
 11351 ;; Registers used:
 11352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11362 ;;Total ram usage:        6 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; Hardware stack levels required when called: 3
 11365 ;; This function calls:
 11366 ;;		_setMotorPWM
 11367 ;; This function is called by:
 11368 ;;		_main
 11369 ;;		_turnRight45
 11370 ;;		_turnLeft45
 11371 ;;		_reverseDetect
 11372 ;;		_reverseOneBlock
 11373 ;;		_ForwardOneBlock
 11374 ;;		_Forwardhalfblock
 11375 ;;		_RetryMove
 11376 ;;		_go_Home
 11377 ;;		_Backhalfblock
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text68
 11382   005354                     __ptext68:
 11383                           	callstack 0
 11384   005354                     _stop:
 11385                           	callstack 25
 11386   005354                     
 11387                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11388   005354  EFD0  F029         	goto	l4154
 11389   005358                     l4146:
 11390                           
 11391                           ;dc_motor.c: 98:         mL->power-=10;
 11392   005358  C014  FFD9         	movff	stop@mL,fsr2l
 11393   00535C  C015  FFDA         	movff	stop@mL+1,fsr2h
 11394   005360  0E0A               	movlw	10
 11395   005362  5EDF               	subwf	indf2,f,c
 11396                           
 11397                           ;dc_motor.c: 99:         mR->power-=10;
 11398   005364  C016  FFD9         	movff	stop@mR,fsr2l
 11399   005368  C017  FFDA         	movff	stop@mR+1,fsr2h
 11400   00536C  0E0A               	movlw	10
 11401   00536E  5EDF               	subwf	indf2,f,c
 11402   005370                     
 11403                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11404   005370  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11405   005374  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11406   005378  EC79  F023         	call	_setMotorPWM	;wreg free
 11407   00537C                     
 11408                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11409   00537C  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11410   005380  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11411   005384  EC79  F023         	call	_setMotorPWM	;wreg free
 11412   005388                     
 11413                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11414   005388  0E02               	movlw	2
 11415   00538A  6E19               	movwf	(??_stop+1)^0,c
 11416   00538C  0EA0               	movlw	160
 11417   00538E  6E18               	movwf	??_stop^0,c
 11418   005390  0E92               	movlw	146
 11419   005392                     u6167:
 11420   005392  2EE8               	decfsz	wreg,f,c
 11421   005394  D7FE               	bra	u6167
 11422   005396  2E18               	decfsz	??_stop^0,f,c
 11423   005398  D7FC               	bra	u6167
 11424   00539A  2E19               	decfsz	(??_stop+1)^0,f,c
 11425   00539C  D7FA               	bra	u6167
 11426   00539E  D000               	nop2	
 11427   0053A0                     l4154:
 11428                           
 11429                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11430   0053A0  C014  FFD9         	movff	stop@mL,fsr2l
 11431   0053A4  C015  FFDA         	movff	stop@mL+1,fsr2h
 11432   0053A8  50DF               	movf	indf2,w,c
 11433   0053AA  A4D8               	btfss	status,2,c
 11434   0053AC  EFDA  F029         	goto	u3461
 11435   0053B0  EFDC  F029         	goto	u3460
 11436   0053B4                     u3461:
 11437   0053B4  EFAC  F029         	goto	l4146
 11438   0053B8                     u3460:
 11439   0053B8  C016  FFD9         	movff	stop@mR,fsr2l
 11440   0053BC  C017  FFDA         	movff	stop@mR+1,fsr2h
 11441   0053C0  50DF               	movf	indf2,w,c
 11442   0053C2  A4D8               	btfss	status,2,c
 11443   0053C4  EFE6  F029         	goto	u3471
 11444   0053C8  EFE8  F029         	goto	u3470
 11445   0053CC                     u3471:
 11446   0053CC  EFAC  F029         	goto	l4146
 11447   0053D0                     u3470:
 11448   0053D0  0012               	return		;funcret
 11449   0053D2                     __end_of_stop:
 11450                           	callstack 0
 11451                           
 11452 ;; *************** function _fullSpeedAhead *****************
 11453 ;; Defined at:
 11454 ;;		line 148 in file "dc_motor.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11457 ;;		 -> motorL(9), 
 11458 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11459 ;;		 -> motorR(9), 
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11475 ;;Total ram usage:        6 bytes
 11476 ;; Hardware stack levels used: 1
 11477 ;; Hardware stack levels required when called: 3
 11478 ;; This function calls:
 11479 ;;		_setMotorPWM
 11480 ;; This function is called by:
 11481 ;;		_main
 11482 ;;		_ForwardOneBlock
 11483 ;;		_Forwardhalfblock
 11484 ;;		_RetryMove
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text69
 11489   00522E                     __ptext69:
 11490                           	callstack 0
 11491   00522E                     _fullSpeedAhead:
 11492                           	callstack 24
 11493   00522E                     
 11494                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11495   00522E  EE20 F001          	lfsr	2,1
 11496   005232  5014               	movf	fullSpeedAhead@mL^0,w,c
 11497   005234  26D9               	addwf	fsr2l,f,c
 11498   005236  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11499   005238  22DA               	addwfc	fsr2h,f,c
 11500   00523A  0E01               	movlw	1
 11501   00523C  6EDF               	movwf	indf2,c
 11502                           
 11503                           ;dc_motor.c: 152:     mR->direction =1;
 11504   00523E  EE20 F001          	lfsr	2,1
 11505   005242  5016               	movf	fullSpeedAhead@mR^0,w,c
 11506   005244  26D9               	addwf	fsr2l,f,c
 11507   005246  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11508   005248  22DA               	addwfc	fsr2h,f,c
 11509   00524A  0E01               	movlw	1
 11510   00524C  6EDF               	movwf	indf2,c
 11511                           
 11512                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11513   00524E  EF4D  F029         	goto	l4140
 11514   005252                     l4132:
 11515                           
 11516                           ;dc_motor.c: 155:         mL->power+=10;
 11517   005252  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11518   005256  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11519   00525A  0E0A               	movlw	10
 11520   00525C  26DF               	addwf	indf2,f,c
 11521                           
 11522                           ;dc_motor.c: 156:         mR->power+=10;
 11523   00525E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11524   005262  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11525   005266  0E0A               	movlw	10
 11526   005268  26DF               	addwf	indf2,f,c
 11527   00526A                     
 11528                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11529   00526A  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11530   00526E  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11531   005272  EC79  F023         	call	_setMotorPWM	;wreg free
 11532   005276                     
 11533                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11534   005276  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11535   00527A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11536   00527E  EC79  F023         	call	_setMotorPWM	;wreg free
 11537   005282                     
 11538                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11539   005282  0E02               	movlw	2
 11540   005284  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11541   005286  0EA0               	movlw	160
 11542   005288  6E18               	movwf	??_fullSpeedAhead^0,c
 11543   00528A  0E92               	movlw	146
 11544   00528C                     u6177:
 11545   00528C  2EE8               	decfsz	wreg,f,c
 11546   00528E  D7FE               	bra	u6177
 11547   005290  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11548   005292  D7FC               	bra	u6177
 11549   005294  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11550   005296  D7FA               	bra	u6177
 11551   005298  D000               	nop2	
 11552   00529A                     l4140:
 11553   00529A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11554   00529E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11555   0052A2  0E32               	movlw	50
 11556   0052A4  60DF               	cpfslt	indf2,c
 11557   0052A6  EF57  F029         	goto	u3441
 11558   0052AA  EF59  F029         	goto	u3440
 11559   0052AE                     u3441:
 11560   0052AE  EF65  F029         	goto	l462
 11561   0052B2                     u3440:
 11562   0052B2  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11563   0052B6  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11564   0052BA  0E31               	movlw	49
 11565   0052BC  64DF               	cpfsgt	indf2,c
 11566   0052BE  EF63  F029         	goto	u3451
 11567   0052C2  EF65  F029         	goto	u3450
 11568   0052C6                     u3451:
 11569   0052C6  EF29  F029         	goto	l4132
 11570   0052CA                     u3450:
 11571   0052CA                     l462:
 11572   0052CA  0012               	return		;funcret
 11573   0052CC                     __end_of_fullSpeedAhead:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _setMotorPWM *****************
 11577 ;; Defined at:
 11578 ;;		line 69 in file "dc_motor.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11581 ;;		 -> motorR(9), motorL(9), 
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;  negDuty         1   18[COMRAM] unsigned char 
 11584 ;;  posDuty         1   17[COMRAM] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  1    wreg      void 
 11587 ;; Registers used:
 11588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11595 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11597 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11598 ;;Total ram usage:        6 bytes
 11599 ;; Hardware stack levels used: 1
 11600 ;; Hardware stack levels required when called: 2
 11601 ;; This function calls:
 11602 ;;		___lwdiv
 11603 ;;		___wmul
 11604 ;; This function is called by:
 11605 ;;		_stop
 11606 ;;		_turnLeft
 11607 ;;		_turnRight
 11608 ;;		_fullSpeedAhead
 11609 ;;		_timed_forward
 11610 ;;		_fullSpeedBack
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text70
 11615   0046F2                     __ptext70:
 11616                           	callstack 0
 11617   0046F2                     _setMotorPWM:
 11618                           	callstack 25
 11619   0046F2                     
 11620                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11621   0046F2  EE20 F002          	lfsr	2,2
 11622   0046F6  500E               	movf	setMotorPWM@m^0,w,c
 11623   0046F8  26D9               	addwf	fsr2l,f,c
 11624   0046FA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11625   0046FC  22DA               	addwfc	fsr2h,f,c
 11626   0046FE  50DF               	movf	indf2,w,c
 11627   004700  B4D8               	btfsc	status,2,c
 11628   004702  EF85  F023         	goto	u3021
 11629   004706  EF87  F023         	goto	u3020
 11630   00470A                     u3021:
 11631   00470A  EFBB  F023         	goto	l3910
 11632   00470E                     u3020:
 11633   00470E                     
 11634                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11635   00470E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11636   004712  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11637   004716  50DF               	movf	indf2,w,c
 11638   004718  6E10               	movwf	??_setMotorPWM^0,c
 11639   00471A  5010               	movf	??_setMotorPWM^0,w,c
 11640   00471C  6E01               	movwf	___wmul@multiplier^0,c
 11641   00471E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11642   004720  EE20 F003          	lfsr	2,3
 11643   004724  500E               	movf	setMotorPWM@m^0,w,c
 11644   004726  26D9               	addwf	fsr2l,f,c
 11645   004728  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11646   00472A  22DA               	addwfc	fsr2h,f,c
 11647   00472C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11648   004730  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11649   004734  EC08  F030         	call	___wmul	;wreg free
 11650   004738  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11651   00473C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11652   004740  0E00               	movlw	0
 11653   004742  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11654   004744  0E64               	movlw	100
 11655   004746  6E09               	movwf	___lwdiv@divisor^0,c
 11656   004748  EC26  F02A         	call	___lwdiv	;wreg free
 11657   00474C  EE20 F003          	lfsr	2,3
 11658   004750  500E               	movf	setMotorPWM@m^0,w,c
 11659   004752  26D9               	addwf	fsr2l,f,c
 11660   004754  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11661   004756  22DA               	addwfc	fsr2h,f,c
 11662   004758  50DF               	movf	indf2,w,c
 11663   00475A  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11664   00475C  5007               	movf	?___lwdiv^0,w,c
 11665   00475E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11666   004760  6E12               	movwf	setMotorPWM@posDuty^0,c
 11667   004762                     
 11668                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11669   004762  EE20 F003          	lfsr	2,3
 11670   004766  500E               	movf	setMotorPWM@m^0,w,c
 11671   004768  26D9               	addwf	fsr2l,f,c
 11672   00476A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11673   00476C  22DA               	addwfc	fsr2h,f,c
 11674   00476E  50DF               	movf	indf2,w,c
 11675   004770  6E13               	movwf	setMotorPWM@negDuty^0,c
 11676                           
 11677                           ;dc_motor.c: 76:     }
 11678   004772  EFDE  F023         	goto	l3914
 11679   004776                     l3910:
 11680                           
 11681                           ;dc_motor.c: 78:         posDuty=0;
 11682   004776  0E00               	movlw	0
 11683   004778  6E12               	movwf	setMotorPWM@posDuty^0,c
 11684   00477A                     
 11685                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11686   00477A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11687   00477E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11688   004782  50DF               	movf	indf2,w,c
 11689   004784  6E10               	movwf	??_setMotorPWM^0,c
 11690   004786  5010               	movf	??_setMotorPWM^0,w,c
 11691   004788  6E01               	movwf	___wmul@multiplier^0,c
 11692   00478A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11693   00478C  EE20 F003          	lfsr	2,3
 11694   004790  500E               	movf	setMotorPWM@m^0,w,c
 11695   004792  26D9               	addwf	fsr2l,f,c
 11696   004794  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11697   004796  22DA               	addwfc	fsr2h,f,c
 11698   004798  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11699   00479C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11700   0047A0  EC08  F030         	call	___wmul	;wreg free
 11701   0047A4  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11702   0047A8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11703   0047AC  0E00               	movlw	0
 11704   0047AE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11705   0047B0  0E64               	movlw	100
 11706   0047B2  6E09               	movwf	___lwdiv@divisor^0,c
 11707   0047B4  EC26  F02A         	call	___lwdiv	;wreg free
 11708   0047B8  5007               	movf	?___lwdiv^0,w,c
 11709   0047BA  6E13               	movwf	setMotorPWM@negDuty^0,c
 11710   0047BC                     l3914:
 11711                           
 11712                           ;dc_motor.c: 82:     if (m->direction) {
 11713   0047BC  EE20 F001          	lfsr	2,1
 11714   0047C0  500E               	movf	setMotorPWM@m^0,w,c
 11715   0047C2  26D9               	addwf	fsr2l,f,c
 11716   0047C4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11717   0047C6  22DA               	addwfc	fsr2h,f,c
 11718   0047C8  50DF               	movf	indf2,w,c
 11719   0047CA  B4D8               	btfsc	status,2,c
 11720   0047CC  EFEA  F023         	goto	u3031
 11721   0047D0  EFEC  F023         	goto	u3030
 11722   0047D4                     u3031:
 11723   0047D4  EF0E  F024         	goto	l3918
 11724   0047D8                     u3030:
 11725   0047D8                     
 11726                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 11727   0047D8  EE20 F005          	lfsr	2,5
 11728   0047DC  500E               	movf	setMotorPWM@m^0,w,c
 11729   0047DE  26D9               	addwf	fsr2l,f,c
 11730   0047E0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11731   0047E2  22DA               	addwfc	fsr2h,f,c
 11732   0047E4  CFDE F010          	movff	postinc2,??_setMotorPWM
 11733   0047E8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11734   0047EC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11735   0047F0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11736   0047F4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11737                           
 11738                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 11739   0047F8  EE20 F007          	lfsr	2,7
 11740   0047FC  500E               	movf	setMotorPWM@m^0,w,c
 11741   0047FE  26D9               	addwf	fsr2l,f,c
 11742   004800  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11743   004802  22DA               	addwfc	fsr2h,f,c
 11744   004804  CFDE F010          	movff	postinc2,??_setMotorPWM
 11745   004808  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11746   00480C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11747   004810  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11748   004814  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11749                           
 11750                           ;dc_motor.c: 87:     } else {
 11751   004818  EF2E  F024         	goto	l432
 11752   00481C                     l3918:
 11753                           
 11754                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 11755   00481C  EE20 F005          	lfsr	2,5
 11756   004820  500E               	movf	setMotorPWM@m^0,w,c
 11757   004822  26D9               	addwf	fsr2l,f,c
 11758   004824  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11759   004826  22DA               	addwfc	fsr2h,f,c
 11760   004828  CFDE F010          	movff	postinc2,??_setMotorPWM
 11761   00482C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11762   004830  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11763   004834  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11764   004838  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11765                           
 11766                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 11767   00483C  EE20 F007          	lfsr	2,7
 11768   004840  500E               	movf	setMotorPWM@m^0,w,c
 11769   004842  26D9               	addwf	fsr2l,f,c
 11770   004844  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11771   004846  22DA               	addwfc	fsr2h,f,c
 11772   004848  CFDE F010          	movff	postinc2,??_setMotorPWM
 11773   00484C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11774   004850  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11775   004854  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11776   004858  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11777   00485C                     l432:
 11778   00485C  0012               	return		;funcret
 11779   00485E                     __end_of_setMotorPWM:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function ___wmul *****************
 11783 ;; Defined at:
 11784 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  multiplier      2    0[COMRAM] unsigned int 
 11787 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;  product         2    4[COMRAM] unsigned int 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  2    0[COMRAM] unsigned int 
 11792 ;; Registers used:
 11793 ;;		wreg, status,2, status,0, prodl, prodh
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11803 ;;Total ram usage:        6 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; Hardware stack levels required when called: 1
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_setMotorPWM
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text71
 11814   006010                     __ptext71:
 11815                           	callstack 0
 11816   006010                     ___wmul:
 11817                           	callstack 25
 11818   006010  5001               	movf	___wmul@multiplier^0,w,c
 11819   006012  0203               	mulwf	___wmul@multiplicand^0,c
 11820   006014  CFF3 F005          	movff	prodl,___wmul@product
 11821   006018  CFF4 F006          	movff	prodh,___wmul@product+1
 11822   00601C  5001               	movf	___wmul@multiplier^0,w,c
 11823   00601E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11824   006020  50F3               	movf	243,w,c
 11825   006022  2606               	addwf	(___wmul@product+1)^0,f,c
 11826   006024  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11827   006026  0203               	mulwf	___wmul@multiplicand^0,c
 11828   006028  50F3               	movf	243,w,c
 11829   00602A  2606               	addwf	(___wmul@product+1)^0,f,c
 11830   00602C  C005  F001         	movff	___wmul@product,?___wmul
 11831   006030  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11832   006034  0012               	return		;funcret
 11833   006036                     __end_of___wmul:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function ___lwdiv *****************
 11837 ;; Defined at:
 11838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;  dividend        2    6[COMRAM] unsigned int 
 11841 ;;  divisor         2    8[COMRAM] unsigned int 
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;  quotient        2   10[COMRAM] unsigned int 
 11844 ;;  counter         1   12[COMRAM] unsigned char 
 11845 ;; Return value:  Size  Location     Type
 11846 ;;                  2    6[COMRAM] unsigned int 
 11847 ;; Registers used:
 11848 ;;		wreg, status,2, status,0
 11849 ;; Tracked objects:
 11850 ;;		On entry : 0/0
 11851 ;;		On exit  : 0/0
 11852 ;;		Unchanged: 0/0
 11853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11858 ;;Total ram usage:        7 bytes
 11859 ;; Hardware stack levels used: 1
 11860 ;; Hardware stack levels required when called: 1
 11861 ;; This function calls:
 11862 ;;		Nothing
 11863 ;; This function is called by:
 11864 ;;		_setMotorPWM
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text72
 11869   00544C                     __ptext72:
 11870                           	callstack 0
 11871   00544C                     ___lwdiv:
 11872                           	callstack 25
 11873   00544C  0E00               	movlw	0
 11874   00544E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11875   005450  0E00               	movlw	0
 11876   005452  6E0B               	movwf	___lwdiv@quotient^0,c
 11877   005454  5009               	movf	___lwdiv@divisor^0,w,c
 11878   005456  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11879   005458  B4D8               	btfsc	status,2,c
 11880   00545A  EF31  F02A         	goto	u2951
 11881   00545E  EF33  F02A         	goto	u2950
 11882   005462                     u2951:
 11883   005462  EF5B  F02A         	goto	l1246
 11884   005466                     u2950:
 11885   005466  0E01               	movlw	1
 11886   005468  6E0D               	movwf	___lwdiv@counter^0,c
 11887   00546A  EF3B  F02A         	goto	l3876
 11888   00546E                     l3874:
 11889   00546E  90D8               	bcf	status,0,c
 11890   005470  3609               	rlcf	___lwdiv@divisor^0,f,c
 11891   005472  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11892   005474  2A0D               	incf	___lwdiv@counter^0,f,c
 11893   005476                     l3876:
 11894   005476  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11895   005478  EF40  F02A         	goto	u2961
 11896   00547C  EF42  F02A         	goto	u2960
 11897   005480                     u2961:
 11898   005480  EF37  F02A         	goto	l3874
 11899   005484                     u2960:
 11900   005484                     l3878:
 11901   005484  90D8               	bcf	status,0,c
 11902   005486  360B               	rlcf	___lwdiv@quotient^0,f,c
 11903   005488  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11904   00548A  5009               	movf	___lwdiv@divisor^0,w,c
 11905   00548C  5C07               	subwf	___lwdiv@dividend^0,w,c
 11906   00548E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11907   005490  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11908   005492  A0D8               	btfss	status,0,c
 11909   005494  EF4E  F02A         	goto	u2971
 11910   005498  EF50  F02A         	goto	u2970
 11911   00549C                     u2971:
 11912   00549C  EF55  F02A         	goto	l3886
 11913   0054A0                     u2970:
 11914   0054A0  5009               	movf	___lwdiv@divisor^0,w,c
 11915   0054A2  5E07               	subwf	___lwdiv@dividend^0,f,c
 11916   0054A4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11917   0054A6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11918   0054A8  800B               	bsf	___lwdiv@quotient^0,0,c
 11919   0054AA                     l3886:
 11920   0054AA  90D8               	bcf	status,0,c
 11921   0054AC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11922   0054AE  3209               	rrcf	___lwdiv@divisor^0,f,c
 11923   0054B0  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11924   0054B2  EF42  F02A         	goto	l3878
 11925   0054B6                     l1246:
 11926   0054B6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11927   0054BA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11928   0054BE  0012               	return		;funcret
 11929   0054C0                     __end_of___lwdiv:
 11930                           	callstack 0
 11931                           
 11932 ;; *************** function _Colour_decider *****************
 11933 ;; Defined at:
 11934 ;;		line 126 in file "color.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;  vals            2   74[COMRAM] PTR struct RGB
 11937 ;;		 -> vals(8), consecutive_read@vals(2), 
 11938 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11939 ;;		 -> rel(12), consecutive_read@rel(2), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;  RGB_col        12    6[BANK0 ] float [3]
 11942 ;;  Hue             4   28[BANK0 ] float 
 11943 ;;  Cmin            4   22[BANK0 ] float 
 11944 ;;  Cmax            4   18[BANK0 ] float 
 11945 ;;  i               2   26[BANK0 ] int 
 11946 ;;  Cmax_i          2    4[BANK0 ] int 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2   74[COMRAM] int 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11957 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11959 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11960 ;;Total ram usage:       38 bytes
 11961 ;; Hardware stack levels used: 1
 11962 ;; Hardware stack levels required when called: 3
 11963 ;; This function calls:
 11964 ;;		___fladd
 11965 ;;		___fldiv
 11966 ;;		___fleq
 11967 ;;		___flge
 11968 ;;		___flmul
 11969 ;;		___flsub
 11970 ;;		___xxtofl
 11971 ;; This function is called by:
 11972 ;;		_main
 11973 ;;		_consecutive_read
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text73
 11978   000E3E                     __ptext73:
 11979                           	callstack 0
 11980   000E3E                     _Colour_decider:
 11981                           	callstack 27
 11982   000E3E                     
 11983                           ;color.c: 127:     float Cmax = 0;
 11984   000E3E  0E00               	movlw	0
 11985   000E40  0100               	movlb	0	; () banked
 11986   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11987   000E44  0E00               	movlw	0
 11988   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11989   000E48  0E00               	movlw	0
 11990   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11991   000E4C  0E00               	movlw	0
 11992   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11993                           
 11994                           ;color.c: 128:     float Cmin= 100000;
 11995   000E50  0E00               	movlw	0
 11996   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11997   000E54  0E50               	movlw	80
 11998   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11999   000E58  0EC3               	movlw	195
 12000   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12001   000E5C  0E47               	movlw	71
 12002   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12003                           
 12004                           ;color.c: 129:     int Cmax_i =4;
 12005   000E60  0E00               	movlw	0
 12006   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12007   000E64  0E04               	movlw	4
 12008   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12009   000E68                     
 12010                           ; BSR set to: 0
 12011                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12012   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12013   000E6C  0E0B               	movlw	11
 12014   000E6E                     u5221:
 12015   000E6E  6ADE               	clrf	postinc2,c
 12016   000E70  06E8               	decf	wreg,f,c
 12017   000E72  E2FD               	bc	u5221
 12018   000E74                     
 12019                           ; BSR set to: 0
 12020   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12021   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12022   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 12023   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12024   000E84  0E00               	movlw	0
 12025   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12026   000E88  0EFF               	movlw	-1
 12027   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 12028   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 12029   000E8E  0E01               	movlw	1
 12030   000E90  EC05  F021         	call	___xxtofl
 12031   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12032   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12033   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12034   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12035   000EA4  EE20 F002          	lfsr	2,2
 12036   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 12037   000EAA  26D9               	addwf	fsr2l,f,c
 12038   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12039   000EAE  22DA               	addwfc	fsr2h,f,c
 12040   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 12041   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12042   000EB8  0E00               	movlw	0
 12043   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12044   000EBC  0EFF               	movlw	-1
 12045   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 12046   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12047   000EC2  0E01               	movlw	1
 12048   000EC4  EC05  F021         	call	___xxtofl
 12049   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12050   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12051   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12052   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12053   000ED8  EE20 F004          	lfsr	2,4
 12054   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 12055   000EDE  26D9               	addwf	fsr2l,f,c
 12056   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12057   000EE2  22DA               	addwfc	fsr2h,f,c
 12058   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 12059   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12060   000EEC  0E00               	movlw	0
 12061   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12062   000EF0  0EFF               	movlw	-1
 12063   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12064   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12065   000EF6  0E01               	movlw	1
 12066   000EF8  EC05  F021         	call	___xxtofl
 12067   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12068   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12069   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12070   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12071   000F0C                     
 12072                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12073   000F0C  0E00               	movlw	0
 12074   000F0E  0100               	movlb	0	; () banked
 12075   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12076   000F12  0E00               	movlw	0
 12077   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 12078   000F16                     l5416:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12082   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12083   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12084   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12085   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12086   000F26  0E66               	movlw	low Colour_decider@RGB_col
 12087   000F28  6E4F               	movwf	??_Colour_decider^0,c
 12088   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 12089   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 12090   000F2E  90D8               	bcf	status,0,c
 12091   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12092   000F32  6ED9               	movwf	fsr2l,c
 12093   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12094   000F36  6EDA               	movwf	fsr2h,c
 12095   000F38  90D8               	bcf	status,0,c
 12096   000F3A  36D9               	rlcf	fsr2l,f,c
 12097   000F3C  36DA               	rlcf	fsr2h,f,c
 12098   000F3E  504F               	movf	??_Colour_decider^0,w,c
 12099   000F40  26D9               	addwf	fsr2l,f,c
 12100   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 12101   000F44  22DA               	addwfc	fsr2h,f,c
 12102   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 12103   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12104   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12105   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12106   000F56  EC64  F025         	call	___flge	;wreg free
 12107   000F5A  B0D8               	btfsc	status,0,c
 12108   000F5C  EFB2  F007         	goto	u5231
 12109   000F60  EFB4  F007         	goto	u5230
 12110   000F64                     u5231:
 12111   000F64  EFD1  F007         	goto	l5422
 12112   000F68                     u5230:
 12113   000F68                     
 12114                           ;color.c: 138:             Cmax=RGB_col[i];
 12115   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12116   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12117   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12118   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12119   000F70  90D8               	bcf	status,0,c
 12120   000F72  0100               	movlb	0	; () banked
 12121   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12122   000F76  6ED9               	movwf	fsr2l,c
 12123   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12124   000F7A  6EDA               	movwf	fsr2h,c
 12125   000F7C  90D8               	bcf	status,0,c
 12126   000F7E  36D9               	rlcf	fsr2l,f,c
 12127   000F80  36DA               	rlcf	fsr2h,f,c
 12128   000F82  504F               	movf	??_Colour_decider^0,w,c
 12129   000F84  26D9               	addwf	fsr2l,f,c
 12130   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12131   000F88  22DA               	addwfc	fsr2h,f,c
 12132   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12133   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12134   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12135   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12136   000F9A                     
 12137                           ; BSR set to: 0
 12138                           ;color.c: 139:             Cmax_i=i;
 12139   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12140   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12141   000FA2                     l5422:
 12142                           
 12143                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12144   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12145   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12146   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12147   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12148   000FAA  90D8               	bcf	status,0,c
 12149   000FAC  0100               	movlb	0	; () banked
 12150   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12151   000FB0  6ED9               	movwf	fsr2l,c
 12152   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12153   000FB4  6EDA               	movwf	fsr2h,c
 12154   000FB6  90D8               	bcf	status,0,c
 12155   000FB8  36D9               	rlcf	fsr2l,f,c
 12156   000FBA  36DA               	rlcf	fsr2h,f,c
 12157   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12158   000FBE  26D9               	addwf	fsr2l,f,c
 12159   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12160   000FC2  22DA               	addwfc	fsr2h,f,c
 12161   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12162   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12163   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12164   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12165   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12166   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12167   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12168   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12169   000FE4  EC64  F025         	call	___flge	;wreg free
 12170   000FE8  B0D8               	btfsc	status,0,c
 12171   000FEA  EFF9  F007         	goto	u5241
 12172   000FEE  EFFB  F007         	goto	u5240
 12173   000FF2                     u5241:
 12174   000FF2  EF14  F008         	goto	l5426
 12175   000FF6                     u5240:
 12176   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12177   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12178   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12179   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12180   000FFE  90D8               	bcf	status,0,c
 12181   001000  0100               	movlb	0	; () banked
 12182   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12183   001004  6ED9               	movwf	fsr2l,c
 12184   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12185   001008  6EDA               	movwf	fsr2h,c
 12186   00100A  90D8               	bcf	status,0,c
 12187   00100C  36D9               	rlcf	fsr2l,f,c
 12188   00100E  36DA               	rlcf	fsr2h,f,c
 12189   001010  504F               	movf	??_Colour_decider^0,w,c
 12190   001012  26D9               	addwf	fsr2l,f,c
 12191   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12192   001016  22DA               	addwfc	fsr2h,f,c
 12193   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12194   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12195   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12196   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12197   001028                     l5426:
 12198                           
 12199                           ;color.c: 142:     }
 12200   001028  0100               	movlb	0	; () banked
 12201   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12202   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12203   00102E                     
 12204                           ; BSR set to: 0
 12205   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12206   001030  EF23  F008         	goto	u5251
 12207   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12208   001036  E109               	bnz	u5250
 12209   001038  0E03               	movlw	3
 12210   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12211   00103C  A0D8               	btfss	status,0,c
 12212   00103E  EF23  F008         	goto	u5251
 12213   001042  EF25  F008         	goto	u5250
 12214   001046                     u5251:
 12215   001046  EF8B  F007         	goto	l5416
 12216   00104A                     u5250:
 12217   00104A                     
 12218                           ; BSR set to: 0
 12219                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12220   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12221   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12222   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12223   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12224   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12225   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12226   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12227   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12228   00106A  EC7B  F02E         	call	___flsub	;wreg free
 12229   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12230   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12231   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12232   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12233   00107E  0E00               	movlw	0
 12234   001080  6E36               	movwf	___fleq@ff2^0,c
 12235   001082  0E00               	movlw	0
 12236   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12237   001086  0E00               	movlw	0
 12238   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12239   00108A  0E00               	movlw	0
 12240   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12241   00108E  ECD5  F027         	call	___fleq	;wreg free
 12242   001092  A0D8               	btfss	status,0,c
 12243   001094  EF4E  F008         	goto	u5261
 12244   001098  EF50  F008         	goto	u5260
 12245   00109C                     u5261:
 12246   00109C  EF56  F008         	goto	l5436
 12247   0010A0                     u5260:
 12248   0010A0                     l5432:
 12249   0010A0  0E00               	movlw	0
 12250   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12251   0010A4  0E00               	movlw	0
 12252   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12253   0010A8  EF4E  F00C         	goto	l80
 12254   0010AC                     l5436:
 12255                           
 12256                           ;color.c: 147:     if (Cmax_i==0){
 12257   0010AC  0100               	movlb	0	; () banked
 12258   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12259   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12260   0010B2  A4D8               	btfss	status,2,c
 12261   0010B4  EF5E  F008         	goto	u5271
 12262   0010B8  EF60  F008         	goto	u5270
 12263   0010BC                     u5271:
 12264   0010BC  EFD4  F008         	goto	l5444
 12265   0010C0                     u5270:
 12266   0010C0                     
 12267                           ; BSR set to: 0
 12268                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12269   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12270   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12271   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12272   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12273   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12274   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12275   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12276   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12277   0010E0  EC7B  F02E         	call	___flsub	;wreg free
 12278   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12279   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12280   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12281   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12282   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12283   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12284   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12285   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12286   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12287   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12288   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12289   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12290   001114  EC7B  F02E         	call	___flsub	;wreg free
 12291   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12292   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12293   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12294   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12295   001128  ECC1  F015         	call	___fldiv	;wreg free
 12296   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12297   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12298   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12299   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12300   00113C  0E00               	movlw	0
 12301   00113E  6E15               	movwf	___flmul@a^0,c
 12302   001140  0E00               	movlw	0
 12303   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12304   001144  0E70               	movlw	112
 12305   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12306   001148  0E42               	movlw	66
 12307   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12308   00114C  ECAC  F013         	call	___flmul	;wreg free
 12309   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12310   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12311   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12312   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12313   001160                     
 12314                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12315   001160  0100               	movlb	0	; () banked
 12316   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12317   001164  EFB8  F008         	goto	u5280
 12318   001168  EFB6  F008         	goto	u5281
 12319   00116C                     u5281:
 12320   00116C  EFB3  F009         	goto	l5454
 12321   001170                     u5280:
 12322   001170                     
 12323                           ; BSR set to: 0
 12324   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12325   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12326   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12327   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12328   001180  0E00               	movlw	0
 12329   001182  6E05               	movwf	___fladd@a^0,c
 12330   001184  0E00               	movlw	0
 12331   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12332   001188  0EB4               	movlw	180
 12333   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12334   00118C  0E43               	movlw	67
 12335   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12336   001190  EC4C  F011         	call	___fladd	;wreg free
 12337   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12338   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12339   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12340   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12341   0011A4  EFB3  F009         	goto	l5454
 12342   0011A8                     l5444:
 12343                           
 12344                           ; BSR set to: 0
 12345   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12346   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12347   0011AC  A4D8               	btfss	status,2,c
 12348   0011AE  EFDB  F008         	goto	u5291
 12349   0011B2  EFDD  F008         	goto	u5290
 12350   0011B6                     u5291:
 12351   0011B6  EF49  F009         	goto	l5450
 12352   0011BA                     u5290:
 12353   0011BA                     
 12354                           ; BSR set to: 0
 12355                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12356   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12357   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12358   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12359   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12360   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12361   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12362   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12363   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12364   0011DA  EC7B  F02E         	call	___flsub	;wreg free
 12365   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12366   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12367   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12368   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12369   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12370   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12371   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12372   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12373   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12374   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12375   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12376   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12377   00120E  EC7B  F02E         	call	___flsub	;wreg free
 12378   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12379   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12380   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12381   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12382   001222  ECC1  F015         	call	___fldiv	;wreg free
 12383   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3267
 12384   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3267+1
 12385   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3267+2
 12386   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3267+3
 12387   001236                     
 12388                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12389   001236  0E00               	movlw	0
 12390   001238  6E05               	movwf	___fladd@a^0,c
 12391   00123A  0E00               	movlw	0
 12392   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12393   00123E  0E00               	movlw	0
 12394   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12395   001242  0E40               	movlw	64
 12396   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12397   001246  C060  F001         	movff	_Colour_decider$3267,___fladd@b
 12398   00124A  C061  F002         	movff	_Colour_decider$3267+1,___fladd@b+1
 12399   00124E  C062  F003         	movff	_Colour_decider$3267+2,___fladd@b+2
 12400   001252  C063  F004         	movff	_Colour_decider$3267+3,___fladd@b+3
 12401   001256  EC4C  F011         	call	___fladd	;wreg free
 12402   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12403   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12404   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12405   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12406   00126A  0E00               	movlw	0
 12407   00126C  6E15               	movwf	___flmul@a^0,c
 12408   00126E  0E00               	movlw	0
 12409   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12410   001272  0E70               	movlw	112
 12411   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12412   001276  0E42               	movlw	66
 12413   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12414   00127A  ECAC  F013         	call	___flmul	;wreg free
 12415   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12416   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12417   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12418   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12419                           
 12420                           ;color.c: 156:     }
 12421   00128E  EFB3  F009         	goto	l5454
 12422   001292                     l5450:
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12426   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12427   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12428   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12429   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12430   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12431   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12432   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12433   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12434   0012B2  EC7B  F02E         	call	___flsub	;wreg free
 12435   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12436   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12437   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12438   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12439   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12440   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12441   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12442   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12443   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12444   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12445   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12446   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12447   0012E6  EC7B  F02E         	call	___flsub	;wreg free
 12448   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12449   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12450   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12451   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12452   0012FA  ECC1  F015         	call	___fldiv	;wreg free
 12453   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3267
 12454   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3267+1
 12455   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3267+2
 12456   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3267+3
 12457   00130E                     
 12458                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12459   00130E  0E00               	movlw	0
 12460   001310  6E05               	movwf	___fladd@a^0,c
 12461   001312  0E00               	movlw	0
 12462   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12463   001316  0E80               	movlw	128
 12464   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12465   00131A  0E40               	movlw	64
 12466   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12467   00131E  C060  F001         	movff	_Colour_decider$3267,___fladd@b
 12468   001322  C061  F002         	movff	_Colour_decider$3267+1,___fladd@b+1
 12469   001326  C062  F003         	movff	_Colour_decider$3267+2,___fladd@b+2
 12470   00132A  C063  F004         	movff	_Colour_decider$3267+3,___fladd@b+3
 12471   00132E  EC4C  F011         	call	___fladd	;wreg free
 12472   001332  C001  F011         	movff	?___fladd,___flmul@b
 12473   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12474   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12475   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12476   001342  0E00               	movlw	0
 12477   001344  6E15               	movwf	___flmul@a^0,c
 12478   001346  0E00               	movlw	0
 12479   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12480   00134A  0E70               	movlw	112
 12481   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12482   00134E  0E42               	movlw	66
 12483   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12484   001352  ECAC  F013         	call	___flmul	;wreg free
 12485   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12486   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12487   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12488   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12489   001366                     l5454:
 12490                           
 12491                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12492   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12493   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12494   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12495   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12496   001376  0E00               	movlw	0
 12497   001378  6E2E               	movwf	___flge@ff2^0,c
 12498   00137A  0E00               	movlw	0
 12499   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12500   00137E  0EA5               	movlw	165
 12501   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12502   001382  0E43               	movlw	67
 12503   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12504   001386  EC64  F025         	call	___flge	;wreg free
 12505   00138A  A0D8               	btfss	status,0,c
 12506   00138C  EFCA  F009         	goto	u5301
 12507   001390  EFCC  F009         	goto	u5300
 12508   001394                     u5301:
 12509   001394  EFEB  F009         	goto	l5464
 12510   001398                     u5300:
 12511   001398  0E00               	movlw	0
 12512   00139A  6E2A               	movwf	___flge@ff1^0,c
 12513   00139C  0E00               	movlw	0
 12514   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12515   0013A0  0EB4               	movlw	180
 12516   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12517   0013A4  0E43               	movlw	67
 12518   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12519   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12520   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12521   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12522   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12523   0013B8  EC64  F025         	call	___flge	;wreg free
 12524   0013BC  A0D8               	btfss	status,0,c
 12525   0013BE  EFE3  F009         	goto	u5311
 12526   0013C2  EFE5  F009         	goto	u5310
 12527   0013C6                     u5311:
 12528   0013C6  EFEB  F009         	goto	l5464
 12529   0013CA                     u5310:
 12530   0013CA                     
 12531                           ;color.c: 164:         return 1;
 12532   0013CA  0E00               	movlw	0
 12533   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12534   0013CE  0E01               	movlw	1
 12535   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12536   0013D2  EF4E  F00C         	goto	l80
 12537   0013D6                     l5464:
 12538   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12539   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12540   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12541   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12542   0013E6  0E00               	movlw	0
 12543   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12544   0013EA  0E00               	movlw	0
 12545   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12546   0013EE  0EA0               	movlw	160
 12547   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12548   0013F2  0E40               	movlw	64
 12549   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12550   0013F6  EC64  F025         	call	___flge	;wreg free
 12551   0013FA  A0D8               	btfss	status,0,c
 12552   0013FC  EF02  F00A         	goto	u5321
 12553   001400  EF04  F00A         	goto	u5320
 12554   001404                     u5321:
 12555   001404  EF23  F00A         	goto	l5474
 12556   001408                     u5320:
 12557   001408  0E00               	movlw	0
 12558   00140A  6E2A               	movwf	___flge@ff1^0,c
 12559   00140C  0E00               	movlw	0
 12560   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12561   001410  0E30               	movlw	48
 12562   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12563   001414  0E41               	movlw	65
 12564   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12565   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12566   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12567   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12568   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12569   001428  EC64  F025         	call	___flge	;wreg free
 12570   00142C  A0D8               	btfss	status,0,c
 12571   00142E  EF1B  F00A         	goto	u5331
 12572   001432  EF1D  F00A         	goto	u5330
 12573   001436                     u5331:
 12574   001436  EF23  F00A         	goto	l5474
 12575   00143A                     u5330:
 12576   00143A                     
 12577                           ;color.c: 168:         return 2;
 12578   00143A  0E00               	movlw	0
 12579   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12580   00143E  0E02               	movlw	2
 12581   001440  6E4B               	movwf	?_Colour_decider^0,c
 12582   001442  EF4E  F00C         	goto	l80
 12583   001446                     l5474:
 12584   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12585   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12586   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12587   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12588   001456  0E00               	movlw	0
 12589   001458  6E2E               	movwf	___flge@ff2^0,c
 12590   00145A  0E00               	movlw	0
 12591   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12592   00145E  0E90               	movlw	144
 12593   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12594   001462  0E41               	movlw	65
 12595   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12596   001466  EC64  F025         	call	___flge	;wreg free
 12597   00146A  A0D8               	btfss	status,0,c
 12598   00146C  EF3A  F00A         	goto	u5341
 12599   001470  EF3C  F00A         	goto	u5340
 12600   001474                     u5341:
 12601   001474  EFF0  F00A         	goto	l5504
 12602   001478                     u5340:
 12603   001478  0E00               	movlw	0
 12604   00147A  6E2A               	movwf	___flge@ff1^0,c
 12605   00147C  0E00               	movlw	0
 12606   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12607   001480  0EC8               	movlw	200
 12608   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12609   001484  0E41               	movlw	65
 12610   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12611   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12612   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12613   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12614   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12615   001498  EC64  F025         	call	___flge	;wreg free
 12616   00149C  A0D8               	btfss	status,0,c
 12617   00149E  EF53  F00A         	goto	u5351
 12618   0014A2  EF55  F00A         	goto	u5350
 12619   0014A6                     u5351:
 12620   0014A6  EFF0  F00A         	goto	l5504
 12621   0014AA                     u5350:
 12622   0014AA                     
 12623                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12624   0014AA  0EB8               	movlw	184
 12625   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12626   0014AE  0E1E               	movlw	30
 12627   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12628   0014B2  0E85               	movlw	133
 12629   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12630   0014B6  0E3E               	movlw	62
 12631   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12632   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12633   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12634   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12635   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12636   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12637   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12638   0014D2  EC64  F025         	call	___flge	;wreg free
 12639   0014D6  A0D8               	btfss	status,0,c
 12640   0014D8  EF70  F00A         	goto	u5361
 12641   0014DC  EF72  F00A         	goto	u5360
 12642   0014E0                     u5361:
 12643   0014E0  EFA8  F00A         	goto	l5490
 12644   0014E4                     u5360:
 12645   0014E4  0ECD               	movlw	205
 12646   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12647   0014E8  0ECC               	movlw	204
 12648   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12649   0014EC  0ECC               	movlw	204
 12650   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12651   0014F0  0E3D               	movlw	61
 12652   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12653   0014F4  EE20 F008          	lfsr	2,8
 12654   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12655   0014FA  26D9               	addwf	fsr2l,f,c
 12656   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12657   0014FE  22DA               	addwfc	fsr2h,f,c
 12658   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12659   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12660   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12661   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12662   001510  EC64  F025         	call	___flge	;wreg free
 12663   001514  B0D8               	btfsc	status,0,c
 12664   001516  EF8F  F00A         	goto	u5371
 12665   00151A  EF91  F00A         	goto	u5370
 12666   00151E                     u5371:
 12667   00151E  EFA8  F00A         	goto	l5490
 12668   001522                     u5370:
 12669   001522  EE20 F006          	lfsr	2,6
 12670   001526  504B               	movf	Colour_decider@vals^0,w,c
 12671   001528  26D9               	addwf	fsr2l,f,c
 12672   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12673   00152C  22DA               	addwfc	fsr2h,f,c
 12674   00152E  0E01               	movlw	1
 12675   001530  BEDB               	btfsc	plusw2,7,c
 12676   001532  EFA4  F00A         	goto	u5381
 12677   001536  0EE9               	movlw	233
 12678   001538  5CDE               	subwf	postinc2,w,c
 12679   00153A  0E03               	movlw	3
 12680   00153C  58DE               	subwfb	postinc2,w,c
 12681   00153E  A0D8               	btfss	status,0,c
 12682   001540  EFA4  F00A         	goto	u5381
 12683   001544  EFA6  F00A         	goto	u5380
 12684   001548                     u5381:
 12685   001548  EFA8  F00A         	goto	l5490
 12686   00154C                     u5380:
 12687   00154C  EF50  F008         	goto	l5432
 12688   001550                     l5490:
 12689   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12690   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12691   001558  CFDE F02A          	movff	postinc2,___flge@ff1
 12692   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12693   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12694   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12695   001568  0EB8               	movlw	184
 12696   00156A  6E2E               	movwf	___flge@ff2^0,c
 12697   00156C  0E1E               	movlw	30
 12698   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12699   001570  0E85               	movlw	133
 12700   001572  6E30               	movwf	(___flge@ff2+2)^0,c
 12701   001574  0E3E               	movlw	62
 12702   001576  6E31               	movwf	(___flge@ff2+3)^0,c
 12703   001578  EC64  F025         	call	___flge	;wreg free
 12704   00157C  A0D8               	btfss	status,0,c
 12705   00157E  EFC3  F00A         	goto	u5391
 12706   001582  EFC5  F00A         	goto	u5390
 12707   001586                     u5391:
 12708   001586  EFEA  F00A         	goto	l5500
 12709   00158A                     u5390:
 12710   00158A  EE20 F008          	lfsr	2,8
 12711   00158E  504D               	movf	Colour_decider@rel^0,w,c
 12712   001590  26D9               	addwf	fsr2l,f,c
 12713   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12714   001594  22DA               	addwfc	fsr2h,f,c
 12715   001596  CFDE F02A          	movff	postinc2,___flge@ff1
 12716   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12717   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12718   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12719   0015A6  0ECD               	movlw	205
 12720   0015A8  6E2E               	movwf	___flge@ff2^0,c
 12721   0015AA  0ECC               	movlw	204
 12722   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12723   0015AE  0ECC               	movlw	204
 12724   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12725   0015B2  0E3D               	movlw	61
 12726   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12727   0015B6  EC64  F025         	call	___flge	;wreg free
 12728   0015BA  B0D8               	btfsc	status,0,c
 12729   0015BC  EFE2  F00A         	goto	u5401
 12730   0015C0  EFE4  F00A         	goto	u5400
 12731   0015C4                     u5401:
 12732   0015C4  EFEA  F00A         	goto	l5500
 12733   0015C8                     u5400:
 12734   0015C8                     
 12735                           ;color.c: 177:             return 3;
 12736   0015C8  0E00               	movlw	0
 12737   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12738   0015CC  0E03               	movlw	3
 12739   0015CE  6E4B               	movwf	?_Colour_decider^0,c
 12740   0015D0  EF4E  F00C         	goto	l80
 12741   0015D4                     l5500:
 12742                           
 12743                           ;color.c: 180:             return 10;
 12744   0015D4  0E00               	movlw	0
 12745   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12746   0015D8  0E0A               	movlw	10
 12747   0015DA  6E4B               	movwf	?_Colour_decider^0,c
 12748   0015DC  EF4E  F00C         	goto	l80
 12749   0015E0                     l5504:
 12750   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12751   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12752   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12753   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12754   0015F0  0E00               	movlw	0
 12755   0015F2  6E2E               	movwf	___flge@ff2^0,c
 12756   0015F4  0E00               	movlw	0
 12757   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12758   0015F8  0EAA               	movlw	170
 12759   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12760   0015FC  0E42               	movlw	66
 12761   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12762   001600  EC64  F025         	call	___flge	;wreg free
 12763   001604  A0D8               	btfss	status,0,c
 12764   001606  EF07  F00B         	goto	u5411
 12765   00160A  EF09  F00B         	goto	u5410
 12766   00160E                     u5411:
 12767   00160E  EF28  F00B         	goto	l5514
 12768   001612                     u5410:
 12769   001612  0E00               	movlw	0
 12770   001614  6E2A               	movwf	___flge@ff1^0,c
 12771   001616  0E00               	movlw	0
 12772   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
 12773   00161A  0E20               	movlw	32
 12774   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12775   00161E  0E43               	movlw	67
 12776   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
 12777   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12778   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12779   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12780   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12781   001632  EC64  F025         	call	___flge	;wreg free
 12782   001636  A0D8               	btfss	status,0,c
 12783   001638  EF20  F00B         	goto	u5421
 12784   00163C  EF22  F00B         	goto	u5420
 12785   001640                     u5421:
 12786   001640  EF28  F00B         	goto	l5514
 12787   001644                     u5420:
 12788   001644                     
 12789                           ;color.c: 186:         return 4;
 12790   001644  0E00               	movlw	0
 12791   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12792   001648  0E04               	movlw	4
 12793   00164A  6E4B               	movwf	?_Colour_decider^0,c
 12794   00164C  EF4E  F00C         	goto	l80
 12795   001650                     l5514:
 12796   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12797   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12798   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12799   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12800   001660  0E00               	movlw	0
 12801   001662  6E2E               	movwf	___flge@ff2^0,c
 12802   001664  0E00               	movlw	0
 12803   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
 12804   001668  0E70               	movlw	112
 12805   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
 12806   00166C  0E42               	movlw	66
 12807   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
 12808   001670  EC64  F025         	call	___flge	;wreg free
 12809   001674  A0D8               	btfss	status,0,c
 12810   001676  EF3F  F00B         	goto	u5431
 12811   00167A  EF41  F00B         	goto	u5430
 12812   00167E                     u5431:
 12813   00167E  EFE2  F00B         	goto	l5542
 12814   001682                     u5430:
 12815   001682  0E00               	movlw	0
 12816   001684  6E2A               	movwf	___flge@ff1^0,c
 12817   001686  0E00               	movlw	0
 12818   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
 12819   00168A  0E9A               	movlw	154
 12820   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12821   00168E  0E42               	movlw	66
 12822   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
 12823   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12824   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12825   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12826   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12827   0016A2  EC64  F025         	call	___flge	;wreg free
 12828   0016A6  A0D8               	btfss	status,0,c
 12829   0016A8  EF58  F00B         	goto	u5441
 12830   0016AC  EF5A  F00B         	goto	u5440
 12831   0016B0                     u5441:
 12832   0016B0  EFE2  F00B         	goto	l5542
 12833   0016B4                     u5440:
 12834   0016B4                     
 12835                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12836   0016B4  EE20 F008          	lfsr	2,8
 12837   0016B8  504D               	movf	Colour_decider@rel^0,w,c
 12838   0016BA  26D9               	addwf	fsr2l,f,c
 12839   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12840   0016BE  22DA               	addwfc	fsr2h,f,c
 12841   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
 12842   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12843   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12844   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12845   0016D0  0E8F               	movlw	143
 12846   0016D2  6E2E               	movwf	___flge@ff2^0,c
 12847   0016D4  0EC2               	movlw	194
 12848   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12849   0016D8  0EF5               	movlw	245
 12850   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
 12851   0016DC  0E3D               	movlw	61
 12852   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
 12853   0016E0  EC64  F025         	call	___flge	;wreg free
 12854   0016E4  A0D8               	btfss	status,0,c
 12855   0016E6  EF77  F00B         	goto	u5451
 12856   0016EA  EF79  F00B         	goto	u5450
 12857   0016EE                     u5451:
 12858   0016EE  EF9E  F00B         	goto	l5528
 12859   0016F2                     u5450:
 12860   0016F2  EE20 F004          	lfsr	2,4
 12861   0016F6  504D               	movf	Colour_decider@rel^0,w,c
 12862   0016F8  26D9               	addwf	fsr2l,f,c
 12863   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12864   0016FC  22DA               	addwfc	fsr2h,f,c
 12865   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
 12866   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12867   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12868   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12869   00170E  0E3D               	movlw	61
 12870   001710  6E2E               	movwf	___flge@ff2^0,c
 12871   001712  0E0A               	movlw	10
 12872   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
 12873   001716  0E57               	movlw	87
 12874   001718  6E30               	movwf	(___flge@ff2+2)^0,c
 12875   00171A  0E3E               	movlw	62
 12876   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
 12877   00171E  EC64  F025         	call	___flge	;wreg free
 12878   001722  B0D8               	btfsc	status,0,c
 12879   001724  EF96  F00B         	goto	u5461
 12880   001728  EF98  F00B         	goto	u5460
 12881   00172C                     u5461:
 12882   00172C  EF9E  F00B         	goto	l5528
 12883   001730                     u5460:
 12884   001730                     
 12885                           ;color.c: 192:             return 6;
 12886   001730  0E00               	movlw	0
 12887   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12888   001734  0E06               	movlw	6
 12889   001736  6E4B               	movwf	?_Colour_decider^0,c
 12890   001738  EF4E  F00C         	goto	l80
 12891   00173C                     l5528:
 12892   00173C  EE20 F008          	lfsr	2,8
 12893   001740  504D               	movf	Colour_decider@rel^0,w,c
 12894   001742  26D9               	addwf	fsr2l,f,c
 12895   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12896   001746  22DA               	addwfc	fsr2h,f,c
 12897   001748  CFDE F02A          	movff	postinc2,___flge@ff1
 12898   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12899   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12900   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12901   001758  0E8F               	movlw	143
 12902   00175A  6E2E               	movwf	___flge@ff2^0,c
 12903   00175C  0EC2               	movlw	194
 12904   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12905   001760  0EF5               	movlw	245
 12906   001762  6E30               	movwf	(___flge@ff2+2)^0,c
 12907   001764  0E3D               	movlw	61
 12908   001766  6E31               	movwf	(___flge@ff2+3)^0,c
 12909   001768  EC64  F025         	call	___flge	;wreg free
 12910   00176C  B0D8               	btfsc	status,0,c
 12911   00176E  EFBB  F00B         	goto	u5471
 12912   001772  EFBD  F00B         	goto	u5470
 12913   001776                     u5471:
 12914   001776  EFEA  F00A         	goto	l5500
 12915   00177A                     u5470:
 12916   00177A  0E3D               	movlw	61
 12917   00177C  6E2A               	movwf	___flge@ff1^0,c
 12918   00177E  0E0A               	movlw	10
 12919   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
 12920   001782  0E57               	movlw	87
 12921   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
 12922   001786  0E3E               	movlw	62
 12923   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
 12924   00178A  EE20 F004          	lfsr	2,4
 12925   00178E  504D               	movf	Colour_decider@rel^0,w,c
 12926   001790  26D9               	addwf	fsr2l,f,c
 12927   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12928   001794  22DA               	addwfc	fsr2h,f,c
 12929   001796  CFDE F02E          	movff	postinc2,___flge@ff2
 12930   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12931   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12932   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12933   0017A6  EC64  F025         	call	___flge	;wreg free
 12934   0017AA  B0D8               	btfsc	status,0,c
 12935   0017AC  EFDA  F00B         	goto	u5481
 12936   0017B0  EFDC  F00B         	goto	u5480
 12937   0017B4                     u5481:
 12938   0017B4  EFEA  F00A         	goto	l5500
 12939   0017B8                     u5480:
 12940   0017B8                     
 12941                           ;color.c: 195:             return 5;
 12942   0017B8  0E00               	movlw	0
 12943   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12944   0017BC  0E05               	movlw	5
 12945   0017BE  6E4B               	movwf	?_Colour_decider^0,c
 12946   0017C0  EF4E  F00C         	goto	l80
 12947   0017C4                     l5542:
 12948   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12949   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12950   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12951   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12952   0017D4  0E00               	movlw	0
 12953   0017D6  6E2E               	movwf	___flge@ff2^0,c
 12954   0017D8  0E00               	movlw	0
 12955   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12956   0017DC  0E40               	movlw	64
 12957   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
 12958   0017E0  0E41               	movlw	65
 12959   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
 12960   0017E4  EC64  F025         	call	___flge	;wreg free
 12961   0017E8  A0D8               	btfss	status,0,c
 12962   0017EA  EFF9  F00B         	goto	u5491
 12963   0017EE  EFFB  F00B         	goto	u5490
 12964   0017F2                     u5491:
 12965   0017F2  EF1A  F00C         	goto	l5552
 12966   0017F6                     u5490:
 12967   0017F6  0E00               	movlw	0
 12968   0017F8  6E2A               	movwf	___flge@ff1^0,c
 12969   0017FA  0E00               	movlw	0
 12970   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12971   0017FE  0E88               	movlw	136
 12972   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
 12973   001802  0E41               	movlw	65
 12974   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
 12975   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12976   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12977   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12978   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12979   001816  EC64  F025         	call	___flge	;wreg free
 12980   00181A  A0D8               	btfss	status,0,c
 12981   00181C  EF12  F00C         	goto	u5501
 12982   001820  EF14  F00C         	goto	u5500
 12983   001824                     u5501:
 12984   001824  EF1A  F00C         	goto	l5552
 12985   001828                     u5500:
 12986   001828                     
 12987                           ;color.c: 204:             return 7;
 12988   001828  0E00               	movlw	0
 12989   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12990   00182C  0E07               	movlw	7
 12991   00182E  6E4B               	movwf	?_Colour_decider^0,c
 12992   001830  EF4E  F00C         	goto	l80
 12993   001834                     l5552:
 12994   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12995   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12996   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12997   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12998   001844  0E00               	movlw	0
 12999   001846  6E2E               	movwf	___flge@ff2^0,c
 13000   001848  0E00               	movlw	0
 13001   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
 13002   00184C  0EB0               	movlw	176
 13003   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
 13004   001850  0E41               	movlw	65
 13005   001852  6E31               	movwf	(___flge@ff2+3)^0,c
 13006   001854  EC64  F025         	call	___flge	;wreg free
 13007   001858  A0D8               	btfss	status,0,c
 13008   00185A  EF31  F00C         	goto	u5511
 13009   00185E  EF33  F00C         	goto	u5510
 13010   001862                     u5511:
 13011   001862  EFEA  F00A         	goto	l5500
 13012   001866                     u5510:
 13013   001866  0E00               	movlw	0
 13014   001868  6E2A               	movwf	___flge@ff1^0,c
 13015   00186A  0E00               	movlw	0
 13016   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
 13017   00186E  0EC0               	movlw	192
 13018   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
 13019   001872  0E41               	movlw	65
 13020   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
 13021   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13022   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13023   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13024   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13025   001886  EC64  F025         	call	___flge	;wreg free
 13026   00188A  A0D8               	btfss	status,0,c
 13027   00188C  EF4A  F00C         	goto	u5521
 13028   001890  EF4C  F00C         	goto	u5520
 13029   001894                     u5521:
 13030   001894  EFEA  F00A         	goto	l5500
 13031   001898                     u5520:
 13032   001898  EF50  F008         	goto	l5432
 13033   00189C                     l80:
 13034   00189C  0012               	return		;funcret
 13035   00189E                     __end_of_Colour_decider:
 13036                           	callstack 0
 13037                           
 13038 ;; *************** function ___xxtofl *****************
 13039 ;; Defined at:
 13040 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  sign            1    wreg     unsigned char 
 13043 ;;  val             4    0[COMRAM] long 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  sign            1    8[COMRAM] unsigned char 
 13046 ;;  arg             4   10[COMRAM] unsigned long 
 13047 ;;  exp             1    9[COMRAM] unsigned char 
 13048 ;; Return value:  Size  Location     Type
 13049 ;;                  4    0[COMRAM] unsigned char 
 13050 ;; Registers used:
 13051 ;;		wreg, status,2, status,0
 13052 ;; Tracked objects:
 13053 ;;		On entry : 0/0
 13054 ;;		On exit  : 0/0
 13055 ;;		Unchanged: 0/0
 13056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13058 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13060 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13061 ;;Total ram usage:       14 bytes
 13062 ;; Hardware stack levels used: 1
 13063 ;; Hardware stack levels required when called: 1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_colour_rel
 13068 ;;		_Colour_decider
 13069 ;;		_reverseOneBlock
 13070 ;;		_ForwardOneBlock
 13071 ;;		_Forwardhalfblock
 13072 ;;		_Backhalfblock
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text74
 13077   00420A                     __ptext74:
 13078                           	callstack 0
 13079   00420A                     ___xxtofl:
 13080                           	callstack 28
 13081                           
 13082                           ;incstack = 0
 13083                           ;___xxtofl@sign stored from wreg
 13084   00420A  6E09               	movwf	___xxtofl@sign^0,c
 13085   00420C  5009               	movf	___xxtofl@sign^0,w,c
 13086   00420E  B4D8               	btfsc	status,2,c
 13087   004210  EF0C  F021         	goto	u5111
 13088   004214  EF0E  F021         	goto	u5110
 13089   004218                     u5111:
 13090   004218  EF30  F021         	goto	l1410
 13091   00421C                     u5110:
 13092   00421C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13093   00421E  EF15  F021         	goto	u5120
 13094   004222  EF13  F021         	goto	u5121
 13095   004226                     u5121:
 13096   004226  EF30  F021         	goto	l1410
 13097   00422A                     u5120:
 13098   00422A  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13099   00422E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13100   004232  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13101   004236  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13102   00423A  1E05               	comf	??___xxtofl^0,f,c
 13103   00423C  1E06               	comf	(??___xxtofl+1)^0,f,c
 13104   00423E  1E07               	comf	(??___xxtofl+2)^0,f,c
 13105   004240  1E08               	comf	(??___xxtofl+3)^0,f,c
 13106   004242  2A05               	incf	??___xxtofl^0,f,c
 13107   004244  0E00               	movlw	0
 13108   004246  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13109   004248  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13110   00424A  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13111   00424C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13112   004250  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13113   004254  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13114   004258  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13115   00425C  EF38  F021         	goto	l5302
 13116   004260                     l1410:
 13117   004260  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13118   004264  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13119   004268  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13120   00426C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13121   004270                     l5302:
 13122   004270  5001               	movf	___xxtofl@val^0,w,c
 13123   004272  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13124   004274  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13125   004276  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13126   004278  A4D8               	btfss	status,2,c
 13127   00427A  EF41  F021         	goto	u5131
 13128   00427E  EF43  F021         	goto	u5130
 13129   004282                     u5131:
 13130   004282  EF4D  F021         	goto	l5308
 13131   004286                     u5130:
 13132   004286  0E00               	movlw	0
 13133   004288  6E01               	movwf	?___xxtofl^0,c
 13134   00428A  0E00               	movlw	0
 13135   00428C  6E02               	movwf	(?___xxtofl+1)^0,c
 13136   00428E  0E00               	movlw	0
 13137   004290  6E03               	movwf	(?___xxtofl+2)^0,c
 13138   004292  0E00               	movlw	0
 13139   004294  6E04               	movwf	(?___xxtofl+3)^0,c
 13140   004296  EFDE  F021         	goto	l1413
 13141   00429A                     l5308:
 13142   00429A  0E96               	movlw	150
 13143   00429C  6E0A               	movwf	___xxtofl@exp^0,c
 13144   00429E  EF57  F021         	goto	l5312
 13145   0042A2                     l5310:
 13146   0042A2  2A0A               	incf	___xxtofl@exp^0,f,c
 13147   0042A4  90D8               	bcf	status,0,c
 13148   0042A6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13149   0042A8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13150   0042AA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13151   0042AC  320B               	rrcf	___xxtofl@arg^0,f,c
 13152   0042AE                     l5312:
 13153   0042AE  0E00               	movlw	0
 13154   0042B0  140B               	andwf	___xxtofl@arg^0,w,c
 13155   0042B2  6E05               	movwf	??___xxtofl^0,c
 13156   0042B4  0E00               	movlw	0
 13157   0042B6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13158   0042B8  6E06               	movwf	(??___xxtofl+1)^0,c
 13159   0042BA  0E00               	movlw	0
 13160   0042BC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13161   0042BE  6E07               	movwf	(??___xxtofl+2)^0,c
 13162   0042C0  0EFE               	movlw	254
 13163   0042C2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13164   0042C4  6E08               	movwf	(??___xxtofl+3)^0,c
 13165   0042C6  5005               	movf	??___xxtofl^0,w,c
 13166   0042C8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13167   0042CA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13168   0042CC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13169   0042CE  A4D8               	btfss	status,2,c
 13170   0042D0  EF6C  F021         	goto	u5141
 13171   0042D4  EF6E  F021         	goto	u5140
 13172   0042D8                     u5141:
 13173   0042D8  EF51  F021         	goto	l5310
 13174   0042DC                     u5140:
 13175   0042DC  EF7C  F021         	goto	l1417
 13176   0042E0                     l5314:
 13177   0042E0  2A0A               	incf	___xxtofl@exp^0,f,c
 13178   0042E2  0E01               	movlw	1
 13179   0042E4  260B               	addwf	___xxtofl@arg^0,f,c
 13180   0042E6  0E00               	movlw	0
 13181   0042E8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13182   0042EA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13183   0042EC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13184   0042EE  90D8               	bcf	status,0,c
 13185   0042F0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13186   0042F2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13187   0042F4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13188   0042F6  320B               	rrcf	___xxtofl@arg^0,f,c
 13189   0042F8                     l1417:
 13190   0042F8  0E00               	movlw	0
 13191   0042FA  140B               	andwf	___xxtofl@arg^0,w,c
 13192   0042FC  6E05               	movwf	??___xxtofl^0,c
 13193   0042FE  0E00               	movlw	0
 13194   004300  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13195   004302  6E06               	movwf	(??___xxtofl+1)^0,c
 13196   004304  0E00               	movlw	0
 13197   004306  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13198   004308  6E07               	movwf	(??___xxtofl+2)^0,c
 13199   00430A  0EFF               	movlw	255
 13200   00430C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13201   00430E  6E08               	movwf	(??___xxtofl+3)^0,c
 13202   004310  5005               	movf	??___xxtofl^0,w,c
 13203   004312  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13204   004314  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13205   004316  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13206   004318  A4D8               	btfss	status,2,c
 13207   00431A  EF91  F021         	goto	u5151
 13208   00431E  EF93  F021         	goto	u5150
 13209   004322                     u5151:
 13210   004322  EF70  F021         	goto	l5314
 13211   004326                     u5150:
 13212   004326  EF9B  F021         	goto	l5322
 13213   00432A                     l5320:
 13214   00432A  060A               	decf	___xxtofl@exp^0,f,c
 13215   00432C  90D8               	bcf	status,0,c
 13216   00432E  360B               	rlcf	___xxtofl@arg^0,f,c
 13217   004330  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13218   004332  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13219   004334  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13220   004336                     l5322:
 13221   004336  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13222   004338  EFA0  F021         	goto	u5161
 13223   00433C  EFA2  F021         	goto	u5160
 13224   004340                     u5161:
 13225   004340  EFAA  F021         	goto	l1424
 13226   004344                     u5160:
 13227   004344  0E02               	movlw	2
 13228   004346  600A               	cpfslt	___xxtofl@exp^0,c
 13229   004348  EFA8  F021         	goto	u5171
 13230   00434C  EFAA  F021         	goto	u5170
 13231   004350                     u5171:
 13232   004350  EF95  F021         	goto	l5320
 13233   004354                     u5170:
 13234   004354                     l1424:
 13235   004354  B00A               	btfsc	___xxtofl@exp^0,0,c
 13236   004356  EFAF  F021         	goto	u5181
 13237   00435A  EFB1  F021         	goto	u5180
 13238   00435E                     u5181:
 13239   00435E  EFB2  F021         	goto	l5328
 13240   004362                     u5180:
 13241   004362  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13242   004364                     l5328:
 13243   004364  90D8               	bcf	status,0,c
 13244   004366  320A               	rrcf	___xxtofl@exp^0,f,c
 13245   004368  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13246   00436C  6A06               	clrf	(??___xxtofl+1)^0,c
 13247   00436E  6A07               	clrf	(??___xxtofl+2)^0,c
 13248   004370  6A08               	clrf	(??___xxtofl+3)^0,c
 13249   004372  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13250   004376  6A07               	clrf	(??___xxtofl+2)^0,c
 13251   004378  6A06               	clrf	(??___xxtofl+1)^0,c
 13252   00437A  6A05               	clrf	??___xxtofl^0,c
 13253   00437C  5005               	movf	??___xxtofl^0,w,c
 13254   00437E  120B               	iorwf	___xxtofl@arg^0,f,c
 13255   004380  5006               	movf	(??___xxtofl+1)^0,w,c
 13256   004382  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13257   004384  5007               	movf	(??___xxtofl+2)^0,w,c
 13258   004386  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13259   004388  5008               	movf	(??___xxtofl+3)^0,w,c
 13260   00438A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13261   00438C  5009               	movf	___xxtofl@sign^0,w,c
 13262   00438E  B4D8               	btfsc	status,2,c
 13263   004390  EFCC  F021         	goto	u5191
 13264   004394  EFCE  F021         	goto	u5190
 13265   004398                     u5191:
 13266   004398  EFD6  F021         	goto	l5338
 13267   00439C                     u5190:
 13268   00439C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13269   00439E  EFD5  F021         	goto	u5200
 13270   0043A2  EFD3  F021         	goto	u5201
 13271   0043A6                     u5201:
 13272   0043A6  EFD6  F021         	goto	l5338
 13273   0043AA                     u5200:
 13274   0043AA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13275   0043AC                     l5338:
 13276   0043AC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13277   0043B0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13278   0043B4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13279   0043B8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13280   0043BC                     l1413:
 13281   0043BC  0012               	return		;funcret
 13282   0043BE                     __end_of___xxtofl:
 13283                           	callstack 0
 13284                           
 13285 ;; *************** function ___flsub *****************
 13286 ;; Defined at:
 13287 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;  b               4   41[COMRAM] unsigned char 
 13290 ;;  a               4   45[COMRAM] unsigned char 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;		None
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  4   41[COMRAM] unsigned char 
 13295 ;; Registers used:
 13296 ;;		wreg, status,2, status,0, cstack
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13305 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13306 ;;Total ram usage:        8 bytes
 13307 ;; Hardware stack levels used: 1
 13308 ;; Hardware stack levels required when called: 2
 13309 ;; This function calls:
 13310 ;;		___fladd
 13311 ;; This function is called by:
 13312 ;;		_Colour_decider
 13313 ;;		_efgtoa
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text75
 13318   005CF6                     __ptext75:
 13319                           	callstack 0
 13320   005CF6                     ___flsub:
 13321                           	callstack 24
 13322   005CF6  0E00               	movlw	0
 13323   005CF8  1A2E               	xorwf	___flsub@a^0,f,c
 13324   005CFA  0E00               	movlw	0
 13325   005CFC  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13326   005CFE  0E00               	movlw	0
 13327   005D00  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13328   005D02  0E80               	movlw	128
 13329   005D04  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13330   005D06  C02A  F001         	movff	___flsub@b,___fladd@b
 13331   005D0A  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13332   005D0E  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13333   005D12  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13334   005D16  C02E  F005         	movff	___flsub@a,___fladd@a
 13335   005D1A  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13336   005D1E  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13337   005D22  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13338   005D26  EC4C  F011         	call	___fladd	;wreg free
 13339   005D2A  C001  F02A         	movff	?___fladd,?___flsub
 13340   005D2E  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13341   005D32  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13342   005D36  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13343   005D3A  0012               	return		;funcret
 13344   005D3C                     __end_of___flsub:
 13345                           	callstack 0
 13346                           
 13347 ;; *************** function ___fladd *****************
 13348 ;; Defined at:
 13349 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  b               4    0[COMRAM] unsigned char 
 13352 ;;  a               4    4[COMRAM] unsigned char 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;  grs             1   15[COMRAM] unsigned char 
 13355 ;;  bexp            1   14[COMRAM] unsigned char 
 13356 ;;  aexp            1   13[COMRAM] unsigned char 
 13357 ;;  signs           1   12[COMRAM] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  4    0[COMRAM] unsigned char 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13367 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13370 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13371 ;;Total ram usage:       16 bytes
 13372 ;; Hardware stack levels used: 1
 13373 ;; Hardware stack levels required when called: 1
 13374 ;; This function calls:
 13375 ;;		Nothing
 13376 ;; This function is called by:
 13377 ;;		_colour_rel
 13378 ;;		_Colour_decider
 13379 ;;		___flsub
 13380 ;;		_efgtoa
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text76
 13385   002298                     __ptext76:
 13386                           	callstack 0
 13387   002298                     ___fladd:
 13388                           	callstack 24
 13389   002298  5004               	movf	(___fladd@b+3)^0,w,c
 13390   00229A  0B80               	andlw	128
 13391   00229C  6E0D               	movwf	___fladd@signs^0,c
 13392   00229E  5004               	movf	(___fladd@b+3)^0,w,c
 13393   0022A0  2404               	addwf	(___fladd@b+3)^0,w,c
 13394   0022A2  6E0F               	movwf	___fladd@bexp^0,c
 13395   0022A4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13396   0022A6  EF57  F011         	goto	u3041
 13397   0022AA  EF59  F011         	goto	u3040
 13398   0022AE                     u3041:
 13399   0022AE  EF5A  F011         	goto	l3926
 13400   0022B2                     u3040:
 13401   0022B2  800F               	bsf	___fladd@bexp^0,0,c
 13402   0022B4                     l3926:
 13403   0022B4  500F               	movf	___fladd@bexp^0,w,c
 13404   0022B6  B4D8               	btfsc	status,2,c
 13405   0022B8  EF60  F011         	goto	u3051
 13406   0022BC  EF62  F011         	goto	u3050
 13407   0022C0                     u3051:
 13408   0022C0  EF77  F011         	goto	l3936
 13409   0022C4                     u3050:
 13410   0022C4  280F               	incf	___fladd@bexp^0,w,c
 13411   0022C6  A4D8               	btfss	status,2,c
 13412   0022C8  EF68  F011         	goto	u3061
 13413   0022CC  EF6A  F011         	goto	u3060
 13414   0022D0                     u3061:
 13415   0022D0  EF72  F011         	goto	l3932
 13416   0022D4                     u3060:
 13417   0022D4  0E00               	movlw	0
 13418   0022D6  6E01               	movwf	___fladd@b^0,c
 13419   0022D8  0E00               	movlw	0
 13420   0022DA  6E02               	movwf	(___fladd@b+1)^0,c
 13421   0022DC  0E00               	movlw	0
 13422   0022DE  6E03               	movwf	(___fladd@b+2)^0,c
 13423   0022E0  0E00               	movlw	0
 13424   0022E2  6E04               	movwf	(___fladd@b+3)^0,c
 13425   0022E4                     l3932:
 13426   0022E4  8E03               	bsf	(___fladd@b+2)^0,7,c
 13427   0022E6  0E00               	movlw	0
 13428   0022E8  6E04               	movwf	(___fladd@b+3)^0,c
 13429   0022EA  EF7F  F011         	goto	l3938
 13430   0022EE                     l3936:
 13431   0022EE  0E00               	movlw	0
 13432   0022F0  6E01               	movwf	___fladd@b^0,c
 13433   0022F2  0E00               	movlw	0
 13434   0022F4  6E02               	movwf	(___fladd@b+1)^0,c
 13435   0022F6  0E00               	movlw	0
 13436   0022F8  6E03               	movwf	(___fladd@b+2)^0,c
 13437   0022FA  0E00               	movlw	0
 13438   0022FC  6E04               	movwf	(___fladd@b+3)^0,c
 13439   0022FE                     l3938:
 13440   0022FE  5008               	movf	(___fladd@a+3)^0,w,c
 13441   002300  0B80               	andlw	128
 13442   002302  6E0E               	movwf	___fladd@aexp^0,c
 13443   002304  500D               	movf	___fladd@signs^0,w,c
 13444   002306  180E               	xorwf	___fladd@aexp^0,w,c
 13445   002308  B4D8               	btfsc	status,2,c
 13446   00230A  EF89  F011         	goto	u3071
 13447   00230E  EF8B  F011         	goto	u3070
 13448   002312                     u3071:
 13449   002312  EF8C  F011         	goto	l3944
 13450   002316                     u3070:
 13451   002316  8C0D               	bsf	___fladd@signs^0,6,c
 13452   002318                     l3944:
 13453   002318  5008               	movf	(___fladd@a+3)^0,w,c
 13454   00231A  2408               	addwf	(___fladd@a+3)^0,w,c
 13455   00231C  6E0E               	movwf	___fladd@aexp^0,c
 13456   00231E  AE07               	btfss	(___fladd@a+2)^0,7,c
 13457   002320  EF94  F011         	goto	u3081
 13458   002324  EF96  F011         	goto	u3080
 13459   002328                     u3081:
 13460   002328  EF97  F011         	goto	l3950
 13461   00232C                     u3080:
 13462   00232C  800E               	bsf	___fladd@aexp^0,0,c
 13463   00232E                     l3950:
 13464   00232E  500E               	movf	___fladd@aexp^0,w,c
 13465   002330  B4D8               	btfsc	status,2,c
 13466   002332  EF9D  F011         	goto	u3091
 13467   002336  EF9F  F011         	goto	u3090
 13468   00233A                     u3091:
 13469   00233A  EFB4  F011         	goto	l3960
 13470   00233E                     u3090:
 13471   00233E  280E               	incf	___fladd@aexp^0,w,c
 13472   002340  A4D8               	btfss	status,2,c
 13473   002342  EFA5  F011         	goto	u3101
 13474   002346  EFA7  F011         	goto	u3100
 13475   00234A                     u3101:
 13476   00234A  EFAF  F011         	goto	l3956
 13477   00234E                     u3100:
 13478   00234E  0E00               	movlw	0
 13479   002350  6E05               	movwf	___fladd@a^0,c
 13480   002352  0E00               	movlw	0
 13481   002354  6E06               	movwf	(___fladd@a+1)^0,c
 13482   002356  0E00               	movlw	0
 13483   002358  6E07               	movwf	(___fladd@a+2)^0,c
 13484   00235A  0E00               	movlw	0
 13485   00235C  6E08               	movwf	(___fladd@a+3)^0,c
 13486   00235E                     l3956:
 13487   00235E  8E07               	bsf	(___fladd@a+2)^0,7,c
 13488   002360  0E00               	movlw	0
 13489   002362  6E08               	movwf	(___fladd@a+3)^0,c
 13490   002364  EFBC  F011         	goto	l3962
 13491   002368                     l3960:
 13492   002368  0E00               	movlw	0
 13493   00236A  6E05               	movwf	___fladd@a^0,c
 13494   00236C  0E00               	movlw	0
 13495   00236E  6E06               	movwf	(___fladd@a+1)^0,c
 13496   002370  0E00               	movlw	0
 13497   002372  6E07               	movwf	(___fladd@a+2)^0,c
 13498   002374  0E00               	movlw	0
 13499   002376  6E08               	movwf	(___fladd@a+3)^0,c
 13500   002378                     l3962:
 13501   002378  500F               	movf	___fladd@bexp^0,w,c
 13502   00237A  5C0E               	subwf	___fladd@aexp^0,w,c
 13503   00237C  B0D8               	btfsc	status,0,c
 13504   00237E  EFC3  F011         	goto	u3111
 13505   002382  EFC5  F011         	goto	u3110
 13506   002386                     u3111:
 13507   002386  EFEC  F011         	goto	l3998
 13508   00238A                     u3110:
 13509   00238A  AC0D               	btfss	___fladd@signs^0,6,c
 13510   00238C  EFCA  F011         	goto	u3121
 13511   002390  EFCC  F011         	goto	u3120
 13512   002394                     u3121:
 13513   002394  EFCE  F011         	goto	l3968
 13514   002398                     u3120:
 13515   002398  0E80               	movlw	128
 13516   00239A  1A0D               	xorwf	___fladd@signs^0,f,c
 13517   00239C                     l3968:
 13518   00239C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13519   0023A0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13520   0023A4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13521   0023A8  C001  F010         	movff	___fladd@b,___fladd@grs
 13522   0023AC  C005  F001         	movff	___fladd@a,___fladd@b
 13523   0023B0  C010  F005         	movff	___fladd@grs,___fladd@a
 13524   0023B4  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13525   0023B8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13526   0023BC  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13527   0023C0  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13528   0023C4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13529   0023C8  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13530   0023CC  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13531   0023D0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13532   0023D4  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13533   0023D8                     l3998:
 13534   0023D8  0E00               	movlw	0
 13535   0023DA  6E10               	movwf	___fladd@grs^0,c
 13536   0023DC  500F               	movf	___fladd@bexp^0,w,c
 13537   0023DE  C00E  F009         	movff	___fladd@aexp,??___fladd
 13538   0023E2  6A0A               	clrf	(??___fladd+1)^0,c
 13539   0023E4  5E09               	subwf	??___fladd^0,f,c
 13540   0023E6  0E00               	movlw	0
 13541   0023E8  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13542   0023EA  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13543   0023EC  EF01  F012         	goto	u3131
 13544   0023F0  500A               	movf	(??___fladd+1)^0,w,c
 13545   0023F2  E109               	bnz	u3130
 13546   0023F4  0E1A               	movlw	26
 13547   0023F6  5C09               	subwf	??___fladd^0,w,c
 13548   0023F8  A0D8               	btfss	status,0,c
 13549   0023FA  EF01  F012         	goto	u3131
 13550   0023FE  EF03  F012         	goto	u3130
 13551   002402                     u3131:
 13552   002402  EF3A  F012         	goto	l1284
 13553   002406                     u3130:
 13554   002406  5001               	movf	___fladd@b^0,w,c
 13555   002408  1002               	iorwf	(___fladd@b+1)^0,w,c
 13556   00240A  1003               	iorwf	(___fladd@b+2)^0,w,c
 13557   00240C  1004               	iorwf	(___fladd@b+3)^0,w,c
 13558   00240E  A4D8               	btfss	status,2,c
 13559   002410  EF0C  F012         	goto	u3141
 13560   002414  EF0F  F012         	goto	u3140
 13561   002418                     u3141:
 13562   002418  0E01               	movlw	1
 13563   00241A  EF10  F012         	goto	u3150
 13564   00241E                     u3140:
 13565   00241E  0E00               	movlw	0
 13566   002420                     u3150:
 13567   002420  6E10               	movwf	___fladd@grs^0,c
 13568   002422  0E00               	movlw	0
 13569   002424  6E01               	movwf	___fladd@b^0,c
 13570   002426  0E00               	movlw	0
 13571   002428  6E02               	movwf	(___fladd@b+1)^0,c
 13572   00242A  0E00               	movlw	0
 13573   00242C  6E03               	movwf	(___fladd@b+2)^0,c
 13574   00242E  0E00               	movlw	0
 13575   002430  6E04               	movwf	(___fladd@b+3)^0,c
 13576   002432  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13577   002436  EF43  F012         	goto	l1283
 13578   00243A                     l1285:
 13579   00243A  A010               	btfss	___fladd@grs^0,0,c
 13580   00243C  EF22  F012         	goto	u3161
 13581   002440  EF24  F012         	goto	u3160
 13582   002444                     u3161:
 13583   002444  EF2A  F012         	goto	l4010
 13584   002448                     u3160:
 13585   002448  90D8               	bcf	status,0,c
 13586   00244A  3010               	rrcf	___fladd@grs^0,w,c
 13587   00244C  0901               	iorlw	1
 13588   00244E  6E10               	movwf	___fladd@grs^0,c
 13589   002450  EF2C  F012         	goto	l4012
 13590   002454                     l4010:
 13591   002454  90D8               	bcf	status,0,c
 13592   002456  3210               	rrcf	___fladd@grs^0,f,c
 13593   002458                     l4012:
 13594   002458  A001               	btfss	___fladd@b^0,0,c
 13595   00245A  EF31  F012         	goto	u3171
 13596   00245E  EF33  F012         	goto	u3170
 13597   002462                     u3171:
 13598   002462  EF34  F012         	goto	l4016
 13599   002466                     u3170:
 13600   002466  8E10               	bsf	___fladd@grs^0,7,c
 13601   002468                     l4016:
 13602   002468  3404               	rlcf	(___fladd@b+3)^0,w,c
 13603   00246A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13604   00246C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13605   00246E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13606   002470  3201               	rrcf	___fladd@b^0,f,c
 13607   002472  2A0F               	incf	___fladd@bexp^0,f,c
 13608   002474                     l1284:
 13609   002474  500E               	movf	___fladd@aexp^0,w,c
 13610   002476  5C0F               	subwf	___fladd@bexp^0,w,c
 13611   002478  A0D8               	btfss	status,0,c
 13612   00247A  EF41  F012         	goto	u3181
 13613   00247E  EF43  F012         	goto	u3180
 13614   002482                     u3181:
 13615   002482  EF1D  F012         	goto	l1285
 13616   002486                     u3180:
 13617   002486                     l1283:
 13618   002486  BC0D               	btfsc	___fladd@signs^0,6,c
 13619   002488  EF48  F012         	goto	u3191
 13620   00248C  EF4A  F012         	goto	u3190
 13621   002490                     u3191:
 13622   002490  EF8A  F012         	goto	l4044
 13623   002494                     u3190:
 13624   002494  500F               	movf	___fladd@bexp^0,w,c
 13625   002496  A4D8               	btfss	status,2,c
 13626   002498  EF50  F012         	goto	u3201
 13627   00249C  EF52  F012         	goto	u3200
 13628   0024A0                     u3201:
 13629   0024A0  EF5C  F012         	goto	l4026
 13630   0024A4                     u3200:
 13631   0024A4  0E00               	movlw	0
 13632   0024A6  6E01               	movwf	?___fladd^0,c
 13633   0024A8  0E00               	movlw	0
 13634   0024AA  6E02               	movwf	(?___fladd+1)^0,c
 13635   0024AC  0E00               	movlw	0
 13636   0024AE  6E03               	movwf	(?___fladd+2)^0,c
 13637   0024B0  0E00               	movlw	0
 13638   0024B2  6E04               	movwf	(?___fladd+3)^0,c
 13639   0024B4  EFAB  F013         	goto	l1292
 13640   0024B8                     l4026:
 13641   0024B8  5005               	movf	___fladd@a^0,w,c
 13642   0024BA  2601               	addwf	___fladd@b^0,f,c
 13643   0024BC  5006               	movf	(___fladd@a+1)^0,w,c
 13644   0024BE  2202               	addwfc	(___fladd@b+1)^0,f,c
 13645   0024C0  5007               	movf	(___fladd@a+2)^0,w,c
 13646   0024C2  2203               	addwfc	(___fladd@b+2)^0,f,c
 13647   0024C4  5008               	movf	(___fladd@a+3)^0,w,c
 13648   0024C6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13649   0024C8  A004               	btfss	(___fladd@b+3)^0,0,c
 13650   0024CA  EF69  F012         	goto	u3211
 13651   0024CE  EF6B  F012         	goto	u3210
 13652   0024D2                     u3211:
 13653   0024D2  EF17  F013         	goto	l4080
 13654   0024D6                     u3210:
 13655   0024D6  A010               	btfss	___fladd@grs^0,0,c
 13656   0024D8  EF70  F012         	goto	u3221
 13657   0024DC  EF72  F012         	goto	u3220
 13658   0024E0                     u3221:
 13659   0024E0  EF78  F012         	goto	l4034
 13660   0024E4                     u3220:
 13661   0024E4  90D8               	bcf	status,0,c
 13662   0024E6  3010               	rrcf	___fladd@grs^0,w,c
 13663   0024E8  0901               	iorlw	1
 13664   0024EA  6E10               	movwf	___fladd@grs^0,c
 13665   0024EC  EF7A  F012         	goto	l4036
 13666   0024F0                     l4034:
 13667   0024F0  90D8               	bcf	status,0,c
 13668   0024F2  3210               	rrcf	___fladd@grs^0,f,c
 13669   0024F4                     l4036:
 13670   0024F4  A001               	btfss	___fladd@b^0,0,c
 13671   0024F6  EF7F  F012         	goto	u3231
 13672   0024FA  EF81  F012         	goto	u3230
 13673   0024FE                     u3231:
 13674   0024FE  EF82  F012         	goto	l4040
 13675   002502                     u3230:
 13676   002502  8E10               	bsf	___fladd@grs^0,7,c
 13677   002504                     l4040:
 13678   002504  3404               	rlcf	(___fladd@b+3)^0,w,c
 13679   002506  3204               	rrcf	(___fladd@b+3)^0,f,c
 13680   002508  3203               	rrcf	(___fladd@b+2)^0,f,c
 13681   00250A  3202               	rrcf	(___fladd@b+1)^0,f,c
 13682   00250C  3201               	rrcf	___fladd@b^0,f,c
 13683   00250E  2A0F               	incf	___fladd@bexp^0,f,c
 13684   002510  EF17  F013         	goto	l4080
 13685   002514                     l4044:
 13686   002514  5005               	movf	___fladd@a^0,w,c
 13687   002516  5C01               	subwf	___fladd@b^0,w,c
 13688   002518  5006               	movf	(___fladd@a+1)^0,w,c
 13689   00251A  5802               	subwfb	(___fladd@b+1)^0,w,c
 13690   00251C  5007               	movf	(___fladd@a+2)^0,w,c
 13691   00251E  5803               	subwfb	(___fladd@b+2)^0,w,c
 13692   002520  5004               	movf	(___fladd@b+3)^0,w,c
 13693   002522  0A80               	xorlw	128
 13694   002524  6E09               	movwf	??___fladd^0,c
 13695   002526  5008               	movf	(___fladd@a+3)^0,w,c
 13696   002528  0A80               	xorlw	128
 13697   00252A  5809               	subwfb	??___fladd^0,w,c
 13698   00252C  B0D8               	btfsc	status,0,c
 13699   00252E  EF9B  F012         	goto	u3241
 13700   002532  EF9D  F012         	goto	u3240
 13701   002536                     u3241:
 13702   002536  EFC8  F012         	goto	l4054
 13703   00253A                     u3240:
 13704   00253A  5001               	movf	___fladd@b^0,w,c
 13705   00253C  5C05               	subwf	___fladd@a^0,w,c
 13706   00253E  6E09               	movwf	??___fladd^0,c
 13707   002540  5002               	movf	(___fladd@b+1)^0,w,c
 13708   002542  5806               	subwfb	(___fladd@a+1)^0,w,c
 13709   002544  6E0A               	movwf	(??___fladd+1)^0,c
 13710   002546  5003               	movf	(___fladd@b+2)^0,w,c
 13711   002548  5807               	subwfb	(___fladd@a+2)^0,w,c
 13712   00254A  6E0B               	movwf	(??___fladd+2)^0,c
 13713   00254C  5004               	movf	(___fladd@b+3)^0,w,c
 13714   00254E  5808               	subwfb	(___fladd@a+3)^0,w,c
 13715   002550  6E0C               	movwf	(??___fladd+3)^0,c
 13716   002552  0EFF               	movlw	255
 13717   002554  2409               	addwf	??___fladd^0,w,c
 13718   002556  6E01               	movwf	___fladd@b^0,c
 13719   002558  0EFF               	movlw	255
 13720   00255A  200A               	addwfc	(??___fladd+1)^0,w,c
 13721   00255C  6E02               	movwf	(___fladd@b+1)^0,c
 13722   00255E  0EFF               	movlw	255
 13723   002560  200B               	addwfc	(??___fladd+2)^0,w,c
 13724   002562  6E03               	movwf	(___fladd@b+2)^0,c
 13725   002564  0EFF               	movlw	255
 13726   002566  200C               	addwfc	(??___fladd+3)^0,w,c
 13727   002568  6E04               	movwf	(___fladd@b+3)^0,c
 13728   00256A  0E80               	movlw	128
 13729   00256C  1A0D               	xorwf	___fladd@signs^0,f,c
 13730   00256E  6C10               	negf	___fladd@grs^0,c
 13731   002570  5010               	movf	___fladd@grs^0,w,c
 13732   002572  A4D8               	btfss	status,2,c
 13733   002574  EFBE  F012         	goto	u3251
 13734   002578  EFC0  F012         	goto	u3250
 13735   00257C                     u3251:
 13736   00257C  EFD0  F012         	goto	l1300
 13737   002580                     u3250:
 13738   002580  0E01               	movlw	1
 13739   002582  2601               	addwf	___fladd@b^0,f,c
 13740   002584  0E00               	movlw	0
 13741   002586  2202               	addwfc	(___fladd@b+1)^0,f,c
 13742   002588  2203               	addwfc	(___fladd@b+2)^0,f,c
 13743   00258A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13744   00258C  EFD0  F012         	goto	l1300
 13745   002590                     l4054:
 13746   002590  5005               	movf	___fladd@a^0,w,c
 13747   002592  5E01               	subwf	___fladd@b^0,f,c
 13748   002594  5006               	movf	(___fladd@a+1)^0,w,c
 13749   002596  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13750   002598  5007               	movf	(___fladd@a+2)^0,w,c
 13751   00259A  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13752   00259C  5008               	movf	(___fladd@a+3)^0,w,c
 13753   00259E  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13754   0025A0                     l1300:
 13755   0025A0  5001               	movf	___fladd@b^0,w,c
 13756   0025A2  1002               	iorwf	(___fladd@b+1)^0,w,c
 13757   0025A4  1003               	iorwf	(___fladd@b+2)^0,w,c
 13758   0025A6  1004               	iorwf	(___fladd@b+3)^0,w,c
 13759   0025A8  A4D8               	btfss	status,2,c
 13760   0025AA  EFD9  F012         	goto	u3261
 13761   0025AE  EFDB  F012         	goto	u3260
 13762   0025B2                     u3261:
 13763   0025B2  EF10  F013         	goto	l4078
 13764   0025B6                     u3260:
 13765   0025B6  5010               	movf	___fladd@grs^0,w,c
 13766   0025B8  A4D8               	btfss	status,2,c
 13767   0025BA  EFE1  F012         	goto	u3271
 13768   0025BE  EFE3  F012         	goto	u3270
 13769   0025C2                     u3271:
 13770   0025C2  EF10  F013         	goto	l4078
 13771   0025C6                     u3270:
 13772   0025C6  0E00               	movlw	0
 13773   0025C8  6E01               	movwf	?___fladd^0,c
 13774   0025CA  0E00               	movlw	0
 13775   0025CC  6E02               	movwf	(?___fladd+1)^0,c
 13776   0025CE  0E00               	movlw	0
 13777   0025D0  6E03               	movwf	(?___fladd+2)^0,c
 13778   0025D2  0E00               	movlw	0
 13779   0025D4  6E04               	movwf	(?___fladd+3)^0,c
 13780   0025D6  EFAB  F013         	goto	l1292
 13781   0025DA                     l4062:
 13782   0025DA  90D8               	bcf	status,0,c
 13783   0025DC  3601               	rlcf	___fladd@b^0,f,c
 13784   0025DE  3602               	rlcf	(___fladd@b+1)^0,f,c
 13785   0025E0  3603               	rlcf	(___fladd@b+2)^0,f,c
 13786   0025E2  3604               	rlcf	(___fladd@b+3)^0,f,c
 13787   0025E4  AE10               	btfss	___fladd@grs^0,7,c
 13788   0025E6  EFF7  F012         	goto	u3281
 13789   0025EA  EFF9  F012         	goto	u3280
 13790   0025EE                     u3281:
 13791   0025EE  EFFA  F012         	goto	l4068
 13792   0025F2                     u3280:
 13793   0025F2  8001               	bsf	___fladd@b^0,0,c
 13794   0025F4                     l4068:
 13795   0025F4  A010               	btfss	___fladd@grs^0,0,c
 13796   0025F6  EFFF  F012         	goto	u3291
 13797   0025FA  EF01  F013         	goto	u3290
 13798   0025FE                     u3291:
 13799   0025FE  EF05  F013         	goto	l4072
 13800   002602                     u3290:
 13801   002602  80D8               	bsf	status,0,c
 13802   002604  3610               	rlcf	___fladd@grs^0,f,c
 13803   002606  EF07  F013         	goto	l4074
 13804   00260A                     l4072:
 13805   00260A  90D8               	bcf	status,0,c
 13806   00260C  3610               	rlcf	___fladd@grs^0,f,c
 13807   00260E                     l4074:
 13808   00260E  500F               	movf	___fladd@bexp^0,w,c
 13809   002610  B4D8               	btfsc	status,2,c
 13810   002612  EF0D  F013         	goto	u3301
 13811   002616  EF0F  F013         	goto	u3300
 13812   00261A                     u3301:
 13813   00261A  EF10  F013         	goto	l4078
 13814   00261E                     u3300:
 13815   00261E  060F               	decf	___fladd@bexp^0,f,c
 13816   002620                     l4078:
 13817   002620  AE03               	btfss	(___fladd@b+2)^0,7,c
 13818   002622  EF15  F013         	goto	u3311
 13819   002626  EF17  F013         	goto	u3310
 13820   00262A                     u3311:
 13821   00262A  EFED  F012         	goto	l4062
 13822   00262E                     u3310:
 13823   00262E                     l4080:
 13824   00262E  0E00               	movlw	0
 13825   002630  6E0E               	movwf	___fladd@aexp^0,c
 13826   002632  AE10               	btfss	___fladd@grs^0,7,c
 13827   002634  EF1E  F013         	goto	u3321
 13828   002638  EF20  F013         	goto	u3320
 13829   00263C                     u3321:
 13830   00263C  EF38  F013         	goto	l1309
 13831   002640                     u3320:
 13832   002640  C010  F009         	movff	___fladd@grs,??___fladd
 13833   002644  0E7F               	movlw	127
 13834   002646  1609               	andwf	??___fladd^0,f,c
 13835   002648  B4D8               	btfsc	status,2,c
 13836   00264A  EF29  F013         	goto	u3331
 13837   00264E  EF2B  F013         	goto	u3330
 13838   002652                     u3331:
 13839   002652  EF2F  F013         	goto	l1310
 13840   002656                     u3330:
 13841   002656                     l4086:
 13842   002656  0E01               	movlw	1
 13843   002658  6E0E               	movwf	___fladd@aexp^0,c
 13844   00265A  EF38  F013         	goto	l1309
 13845   00265E                     l1310:
 13846   00265E  A001               	btfss	___fladd@b^0,0,c
 13847   002660  EF34  F013         	goto	u3341
 13848   002664  EF36  F013         	goto	u3340
 13849   002668                     u3341:
 13850   002668  EF38  F013         	goto	l1309
 13851   00266C                     u3340:
 13852   00266C  EF2B  F013         	goto	l4086
 13853   002670                     l1309:
 13854   002670  500E               	movf	___fladd@aexp^0,w,c
 13855   002672  B4D8               	btfsc	status,2,c
 13856   002674  EF3E  F013         	goto	u3351
 13857   002678  EF40  F013         	goto	u3350
 13858   00267C                     u3351:
 13859   00267C  EF6B  F013         	goto	l4098
 13860   002680                     u3350:
 13861   002680  0E01               	movlw	1
 13862   002682  2601               	addwf	___fladd@b^0,f,c
 13863   002684  0E00               	movlw	0
 13864   002686  2202               	addwfc	(___fladd@b+1)^0,f,c
 13865   002688  2203               	addwfc	(___fladd@b+2)^0,f,c
 13866   00268A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13867   00268C  A004               	btfss	(___fladd@b+3)^0,0,c
 13868   00268E  EF4B  F013         	goto	u3361
 13869   002692  EF4D  F013         	goto	u3360
 13870   002696                     u3361:
 13871   002696  EF6B  F013         	goto	l4098
 13872   00269A                     u3360:
 13873   00269A  C001  F009         	movff	___fladd@b,??___fladd
 13874   00269E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13875   0026A2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13876   0026A6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13877   0026AA  340C               	rlcf	(??___fladd+3)^0,w,c
 13878   0026AC  320C               	rrcf	(??___fladd+3)^0,f,c
 13879   0026AE  320B               	rrcf	(??___fladd+2)^0,f,c
 13880   0026B0  320A               	rrcf	(??___fladd+1)^0,f,c
 13881   0026B2  3209               	rrcf	??___fladd^0,f,c
 13882   0026B4  C009  F001         	movff	??___fladd,___fladd@b
 13883   0026B8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13884   0026BC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13885   0026C0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13886   0026C4  280F               	incf	___fladd@bexp^0,w,c
 13887   0026C6  B4D8               	btfsc	status,2,c
 13888   0026C8  EF68  F013         	goto	u3371
 13889   0026CC  EF6A  F013         	goto	u3370
 13890   0026D0                     u3371:
 13891   0026D0  EF6B  F013         	goto	l4098
 13892   0026D4                     u3370:
 13893   0026D4  2A0F               	incf	___fladd@bexp^0,f,c
 13894   0026D6                     l4098:
 13895   0026D6  280F               	incf	___fladd@bexp^0,w,c
 13896   0026D8  B4D8               	btfsc	status,2,c
 13897   0026DA  EF71  F013         	goto	u3381
 13898   0026DE  EF73  F013         	goto	u3380
 13899   0026E2                     u3381:
 13900   0026E2  EF7B  F013         	goto	l4102
 13901   0026E6                     u3380:
 13902   0026E6  500F               	movf	___fladd@bexp^0,w,c
 13903   0026E8  A4D8               	btfss	status,2,c
 13904   0026EA  EF79  F013         	goto	u3391
 13905   0026EE  EF7B  F013         	goto	u3390
 13906   0026F2                     u3391:
 13907   0026F2  EF8D  F013         	goto	l4106
 13908   0026F6                     u3390:
 13909   0026F6                     l4102:
 13910   0026F6  0E00               	movlw	0
 13911   0026F8  6E01               	movwf	___fladd@b^0,c
 13912   0026FA  0E00               	movlw	0
 13913   0026FC  6E02               	movwf	(___fladd@b+1)^0,c
 13914   0026FE  0E00               	movlw	0
 13915   002700  6E03               	movwf	(___fladd@b+2)^0,c
 13916   002702  0E00               	movlw	0
 13917   002704  6E04               	movwf	(___fladd@b+3)^0,c
 13918   002706  500F               	movf	___fladd@bexp^0,w,c
 13919   002708  A4D8               	btfss	status,2,c
 13920   00270A  EF89  F013         	goto	u3401
 13921   00270E  EF8B  F013         	goto	u3400
 13922   002712                     u3401:
 13923   002712  EF8D  F013         	goto	l4106
 13924   002716                     u3400:
 13925   002716  0E00               	movlw	0
 13926   002718  6E0D               	movwf	___fladd@signs^0,c
 13927   00271A                     l4106:
 13928   00271A  A00F               	btfss	___fladd@bexp^0,0,c
 13929   00271C  EF92  F013         	goto	u3411
 13930   002720  EF94  F013         	goto	u3410
 13931   002724                     u3411:
 13932   002724  EF97  F013         	goto	l4110
 13933   002728                     u3410:
 13934   002728  8E03               	bsf	(___fladd@b+2)^0,7,c
 13935   00272A  EF98  F013         	goto	l4112
 13936   00272E                     l4110:
 13937   00272E  9E03               	bcf	(___fladd@b+2)^0,7,c
 13938   002730                     l4112:
 13939   002730  90D8               	bcf	status,0,c
 13940   002732  300F               	rrcf	___fladd@bexp^0,w,c
 13941   002734  6E04               	movwf	(___fladd@b+3)^0,c
 13942   002736  AE0D               	btfss	___fladd@signs^0,7,c
 13943   002738  EFA0  F013         	goto	u3421
 13944   00273C  EFA2  F013         	goto	u3420
 13945   002740                     u3421:
 13946   002740  EFA3  F013         	goto	l4118
 13947   002744                     u3420:
 13948   002744  8E04               	bsf	(___fladd@b+3)^0,7,c
 13949   002746                     l4118:
 13950   002746  C001  F001         	movff	___fladd@b,?___fladd
 13951   00274A  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13952   00274E  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13953   002752  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13954   002756                     l1292:
 13955   002756  0012               	return		;funcret
 13956   002758                     __end_of___fladd:
 13957                           	callstack 0
 13958                           
 13959 ;; *************** function ___flmul *****************
 13960 ;; Defined at:
 13961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;  b               4   16[COMRAM] unsigned char 
 13964 ;;  a               4   20[COMRAM] unsigned char 
 13965 ;; Auto vars:     Size  Location     Type
 13966 ;;  prod            4   35[COMRAM] struct .
 13967 ;;  grs             4   29[COMRAM] unsigned long 
 13968 ;;  temp            2   39[COMRAM] struct .
 13969 ;;  bexp            1   34[COMRAM] unsigned char 
 13970 ;;  aexp            1   33[COMRAM] unsigned char 
 13971 ;;  sign            1   28[COMRAM] unsigned char 
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  4   16[COMRAM] unsigned char 
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0, prodl, prodh
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13981 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13982 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13984 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13985 ;;Total ram usage:       25 bytes
 13986 ;; Hardware stack levels used: 1
 13987 ;; Hardware stack levels required when called: 1
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_Colour_decider
 13992 ;;		_reverseOneBlock
 13993 ;;		_ForwardOneBlock
 13994 ;;		_Forwardhalfblock
 13995 ;;		_efgtoa
 13996 ;;		_Backhalfblock
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           	psect	text77
 14001   002758                     __ptext77:
 14002                           	callstack 0
 14003   002758                     ___flmul:
 14004                           	callstack 25
 14005   002758  5014               	movf	(___flmul@b+3)^0,w,c
 14006   00275A  0B80               	andlw	128
 14007   00275C  6E1D               	movwf	___flmul@sign^0,c
 14008   00275E  5014               	movf	(___flmul@b+3)^0,w,c
 14009   002760  2414               	addwf	(___flmul@b+3)^0,w,c
 14010   002762  6E23               	movwf	___flmul@bexp^0,c
 14011   002764  AE13               	btfss	(___flmul@b+2)^0,7,c
 14012   002766  EFB7  F013         	goto	u3911
 14013   00276A  EFB9  F013         	goto	u3910
 14014   00276E                     u3911:
 14015   00276E  EFBA  F013         	goto	l4430
 14016   002772                     u3910:
 14017   002772  8023               	bsf	___flmul@bexp^0,0,c
 14018   002774                     l4430:
 14019   002774  5023               	movf	___flmul@bexp^0,w,c
 14020   002776  B4D8               	btfsc	status,2,c
 14021   002778  EFC0  F013         	goto	u3921
 14022   00277C  EFC2  F013         	goto	u3920
 14023   002780                     u3921:
 14024   002780  EFD5  F013         	goto	l4438
 14025   002784                     u3920:
 14026   002784  2823               	incf	___flmul@bexp^0,w,c
 14027   002786  A4D8               	btfss	status,2,c
 14028   002788  EFC8  F013         	goto	u3931
 14029   00278C  EFCA  F013         	goto	u3930
 14030   002790                     u3931:
 14031   002790  EFD2  F013         	goto	l4436
 14032   002794                     u3930:
 14033   002794  0E00               	movlw	0
 14034   002796  6E11               	movwf	___flmul@b^0,c
 14035   002798  0E00               	movlw	0
 14036   00279A  6E12               	movwf	(___flmul@b+1)^0,c
 14037   00279C  0E00               	movlw	0
 14038   00279E  6E13               	movwf	(___flmul@b+2)^0,c
 14039   0027A0  0E00               	movlw	0
 14040   0027A2  6E14               	movwf	(___flmul@b+3)^0,c
 14041   0027A4                     l4436:
 14042   0027A4  8E13               	bsf	(___flmul@b+2)^0,7,c
 14043   0027A6  EFDD  F013         	goto	l4440
 14044   0027AA                     l4438:
 14045   0027AA  0E00               	movlw	0
 14046   0027AC  6E11               	movwf	___flmul@b^0,c
 14047   0027AE  0E00               	movlw	0
 14048   0027B0  6E12               	movwf	(___flmul@b+1)^0,c
 14049   0027B2  0E00               	movlw	0
 14050   0027B4  6E13               	movwf	(___flmul@b+2)^0,c
 14051   0027B6  0E00               	movlw	0
 14052   0027B8  6E14               	movwf	(___flmul@b+3)^0,c
 14053   0027BA                     l4440:
 14054   0027BA  5018               	movf	(___flmul@a+3)^0,w,c
 14055   0027BC  0B80               	andlw	128
 14056   0027BE  1A1D               	xorwf	___flmul@sign^0,f,c
 14057   0027C0  5018               	movf	(___flmul@a+3)^0,w,c
 14058   0027C2  2418               	addwf	(___flmul@a+3)^0,w,c
 14059   0027C4  6E22               	movwf	___flmul@aexp^0,c
 14060   0027C6  AE17               	btfss	(___flmul@a+2)^0,7,c
 14061   0027C8  EFE8  F013         	goto	u3941
 14062   0027CC  EFEA  F013         	goto	u3940
 14063   0027D0                     u3941:
 14064   0027D0  EFEB  F013         	goto	l4448
 14065   0027D4                     u3940:
 14066   0027D4  8022               	bsf	___flmul@aexp^0,0,c
 14067   0027D6                     l4448:
 14068   0027D6  5022               	movf	___flmul@aexp^0,w,c
 14069   0027D8  B4D8               	btfsc	status,2,c
 14070   0027DA  EFF1  F013         	goto	u3951
 14071   0027DE  EFF3  F013         	goto	u3950
 14072   0027E2                     u3951:
 14073   0027E2  EF06  F014         	goto	l4456
 14074   0027E6                     u3950:
 14075   0027E6  2822               	incf	___flmul@aexp^0,w,c
 14076   0027E8  A4D8               	btfss	status,2,c
 14077   0027EA  EFF9  F013         	goto	u3961
 14078   0027EE  EFFB  F013         	goto	u3960
 14079   0027F2                     u3961:
 14080   0027F2  EF03  F014         	goto	l4454
 14081   0027F6                     u3960:
 14082   0027F6  0E00               	movlw	0
 14083   0027F8  6E15               	movwf	___flmul@a^0,c
 14084   0027FA  0E00               	movlw	0
 14085   0027FC  6E16               	movwf	(___flmul@a+1)^0,c
 14086   0027FE  0E00               	movlw	0
 14087   002800  6E17               	movwf	(___flmul@a+2)^0,c
 14088   002802  0E00               	movlw	0
 14089   002804  6E18               	movwf	(___flmul@a+3)^0,c
 14090   002806                     l4454:
 14091   002806  8E17               	bsf	(___flmul@a+2)^0,7,c
 14092   002808  EF0E  F014         	goto	l1369
 14093   00280C                     l4456:
 14094   00280C  0E00               	movlw	0
 14095   00280E  6E15               	movwf	___flmul@a^0,c
 14096   002810  0E00               	movlw	0
 14097   002812  6E16               	movwf	(___flmul@a+1)^0,c
 14098   002814  0E00               	movlw	0
 14099   002816  6E17               	movwf	(___flmul@a+2)^0,c
 14100   002818  0E00               	movlw	0
 14101   00281A  6E18               	movwf	(___flmul@a+3)^0,c
 14102   00281C                     l1369:
 14103   00281C  5022               	movf	___flmul@aexp^0,w,c
 14104   00281E  B4D8               	btfsc	status,2,c
 14105   002820  EF14  F014         	goto	u3971
 14106   002824  EF16  F014         	goto	u3970
 14107   002828                     u3971:
 14108   002828  EF1E  F014         	goto	l4460
 14109   00282C                     u3970:
 14110   00282C  5023               	movf	___flmul@bexp^0,w,c
 14111   00282E  A4D8               	btfss	status,2,c
 14112   002830  EF1C  F014         	goto	u3981
 14113   002834  EF1E  F014         	goto	u3980
 14114   002838                     u3981:
 14115   002838  EF28  F014         	goto	l4464
 14116   00283C                     u3980:
 14117   00283C                     l4460:
 14118   00283C  0E00               	movlw	0
 14119   00283E  6E11               	movwf	?___flmul^0,c
 14120   002840  0E00               	movlw	0
 14121   002842  6E12               	movwf	(?___flmul+1)^0,c
 14122   002844  0E00               	movlw	0
 14123   002846  6E13               	movwf	(?___flmul+2)^0,c
 14124   002848  0E00               	movlw	0
 14125   00284A  6E14               	movwf	(?___flmul+3)^0,c
 14126   00284C  EFC0  F015         	goto	l1373
 14127   002850                     l4464:
 14128   002850  5017               	movf	(___flmul@a+2)^0,w,c
 14129   002852  0211               	mulwf	___flmul@b^0,c
 14130   002854  CFF3 F028          	movff	prodl,___flmul@temp
 14131   002858  CFF4 F029          	movff	prodh,___flmul@temp+1
 14132   00285C  5028               	movf	___flmul@temp^0,w,c
 14133   00285E  6E1E               	movwf	___flmul@grs^0,c
 14134   002860  6A1F               	clrf	(___flmul@grs+1)^0,c
 14135   002862  6A20               	clrf	(___flmul@grs+2)^0,c
 14136   002864  6A21               	clrf	(___flmul@grs+3)^0,c
 14137   002866  5029               	movf	(___flmul@temp+1)^0,w,c
 14138   002868  6E24               	movwf	___flmul@prod^0,c
 14139   00286A  6A25               	clrf	(___flmul@prod+1)^0,c
 14140   00286C  6A26               	clrf	(___flmul@prod+2)^0,c
 14141   00286E  6A27               	clrf	(___flmul@prod+3)^0,c
 14142   002870  5016               	movf	(___flmul@a+1)^0,w,c
 14143   002872  0212               	mulwf	(___flmul@b+1)^0,c
 14144   002874  CFF3 F028          	movff	prodl,___flmul@temp
 14145   002878  CFF4 F029          	movff	prodh,___flmul@temp+1
 14146   00287C  5028               	movf	___flmul@temp^0,w,c
 14147   00287E  261E               	addwf	___flmul@grs^0,f,c
 14148   002880  0E00               	movlw	0
 14149   002882  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14150   002884  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14151   002886  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14152   002888  5029               	movf	(___flmul@temp+1)^0,w,c
 14153   00288A  2624               	addwf	___flmul@prod^0,f,c
 14154   00288C  0E00               	movlw	0
 14155   00288E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14156   002890  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14157   002892  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14158   002894  5015               	movf	___flmul@a^0,w,c
 14159   002896  0213               	mulwf	(___flmul@b+2)^0,c
 14160   002898  CFF3 F028          	movff	prodl,___flmul@temp
 14161   00289C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14162   0028A0  5028               	movf	___flmul@temp^0,w,c
 14163   0028A2  261E               	addwf	___flmul@grs^0,f,c
 14164   0028A4  0E00               	movlw	0
 14165   0028A6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14166   0028A8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14167   0028AA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14168   0028AC  5029               	movf	(___flmul@temp+1)^0,w,c
 14169   0028AE  2624               	addwf	___flmul@prod^0,f,c
 14170   0028B0  0E00               	movlw	0
 14171   0028B2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14172   0028B4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14173   0028B6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14174   0028B8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14175   0028BC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14176   0028C0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14177   0028C4  6A1E               	clrf	___flmul@grs^0,c
 14178   0028C6  5015               	movf	___flmul@a^0,w,c
 14179   0028C8  0212               	mulwf	(___flmul@b+1)^0,c
 14180   0028CA  CFF3 F028          	movff	prodl,___flmul@temp
 14181   0028CE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14182   0028D2  5028               	movf	___flmul@temp^0,w,c
 14183   0028D4  261E               	addwf	___flmul@grs^0,f,c
 14184   0028D6  5029               	movf	(___flmul@temp+1)^0,w,c
 14185   0028D8  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14186   0028DA  0E00               	movlw	0
 14187   0028DC  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14188   0028DE  0E00               	movlw	0
 14189   0028E0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14190   0028E2  5016               	movf	(___flmul@a+1)^0,w,c
 14191   0028E4  0211               	mulwf	___flmul@b^0,c
 14192   0028E6  CFF3 F028          	movff	prodl,___flmul@temp
 14193   0028EA  CFF4 F029          	movff	prodh,___flmul@temp+1
 14194   0028EE  5028               	movf	___flmul@temp^0,w,c
 14195   0028F0  261E               	addwf	___flmul@grs^0,f,c
 14196   0028F2  5029               	movf	(___flmul@temp+1)^0,w,c
 14197   0028F4  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14198   0028F6  0E00               	movlw	0
 14199   0028F8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14200   0028FA  0E00               	movlw	0
 14201   0028FC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14202   0028FE  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14203   002902  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14204   002906  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14205   00290A  6A1E               	clrf	___flmul@grs^0,c
 14206   00290C  5015               	movf	___flmul@a^0,w,c
 14207   00290E  0211               	mulwf	___flmul@b^0,c
 14208   002910  CFF3 F028          	movff	prodl,___flmul@temp
 14209   002914  CFF4 F029          	movff	prodh,___flmul@temp+1
 14210   002918  5028               	movf	___flmul@temp^0,w,c
 14211   00291A  261E               	addwf	___flmul@grs^0,f,c
 14212   00291C  5029               	movf	(___flmul@temp+1)^0,w,c
 14213   00291E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14214   002920  0E00               	movlw	0
 14215   002922  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14216   002924  0E00               	movlw	0
 14217   002926  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14218   002928  5017               	movf	(___flmul@a+2)^0,w,c
 14219   00292A  0212               	mulwf	(___flmul@b+1)^0,c
 14220   00292C  CFF3 F028          	movff	prodl,___flmul@temp
 14221   002930  CFF4 F029          	movff	prodh,___flmul@temp+1
 14222   002934  5028               	movf	___flmul@temp^0,w,c
 14223   002936  2624               	addwf	___flmul@prod^0,f,c
 14224   002938  5029               	movf	(___flmul@temp+1)^0,w,c
 14225   00293A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14226   00293C  0E00               	movlw	0
 14227   00293E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14228   002940  0E00               	movlw	0
 14229   002942  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14230   002944  5016               	movf	(___flmul@a+1)^0,w,c
 14231   002946  0213               	mulwf	(___flmul@b+2)^0,c
 14232   002948  CFF3 F028          	movff	prodl,___flmul@temp
 14233   00294C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14234   002950  5028               	movf	___flmul@temp^0,w,c
 14235   002952  2624               	addwf	___flmul@prod^0,f,c
 14236   002954  5029               	movf	(___flmul@temp+1)^0,w,c
 14237   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14238   002958  0E00               	movlw	0
 14239   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14240   00295C  0E00               	movlw	0
 14241   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14242   002960  5017               	movf	(___flmul@a+2)^0,w,c
 14243   002962  0213               	mulwf	(___flmul@b+2)^0,c
 14244   002964  CFF3 F028          	movff	prodl,___flmul@temp
 14245   002968  CFF4 F029          	movff	prodh,___flmul@temp+1
 14246   00296C  5028               	movf	___flmul@temp^0,w,c
 14247   00296E  6E19               	movwf	??___flmul^0,c
 14248   002970  5029               	movf	(___flmul@temp+1)^0,w,c
 14249   002972  6E1A               	movwf	(??___flmul+1)^0,c
 14250   002974  6A1B               	clrf	(??___flmul+2)^0,c
 14251   002976  6A1C               	clrf	(??___flmul+3)^0,c
 14252   002978  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14253   00297C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14254   002980  C019  F01A         	movff	??___flmul,??___flmul+1
 14255   002984  6A19               	clrf	??___flmul^0,c
 14256   002986  5019               	movf	??___flmul^0,w,c
 14257   002988  2624               	addwf	___flmul@prod^0,f,c
 14258   00298A  501A               	movf	(??___flmul+1)^0,w,c
 14259   00298C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14260   00298E  501B               	movf	(??___flmul+2)^0,w,c
 14261   002990  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14262   002992  501C               	movf	(??___flmul+3)^0,w,c
 14263   002994  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14264   002996  C01E  F019         	movff	___flmul@grs,??___flmul
 14265   00299A  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14266   00299E  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14267   0029A2  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14268   0029A6  0E19               	movlw	25
 14269   0029A8  EFDB  F014         	goto	u3990
 14270   0029AC                     u3995:
 14271   0029AC  90D8               	bcf	status,0,c
 14272   0029AE  321C               	rrcf	(??___flmul+3)^0,f,c
 14273   0029B0  321B               	rrcf	(??___flmul+2)^0,f,c
 14274   0029B2  321A               	rrcf	(??___flmul+1)^0,f,c
 14275   0029B4  3219               	rrcf	??___flmul^0,f,c
 14276   0029B6                     u3990:
 14277   0029B6  2EE8               	decfsz	wreg,f,c
 14278   0029B8  EFD6  F014         	goto	u3995
 14279   0029BC  5019               	movf	??___flmul^0,w,c
 14280   0029BE  2624               	addwf	___flmul@prod^0,f,c
 14281   0029C0  501A               	movf	(??___flmul+1)^0,w,c
 14282   0029C2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14283   0029C4  501B               	movf	(??___flmul+2)^0,w,c
 14284   0029C6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14285   0029C8  501C               	movf	(??___flmul+3)^0,w,c
 14286   0029CA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14287   0029CC  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14288   0029D0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14289   0029D4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14290   0029D8  6A1E               	clrf	___flmul@grs^0,c
 14291   0029DA  5022               	movf	___flmul@aexp^0,w,c
 14292   0029DC  C023  F019         	movff	___flmul@bexp,??___flmul
 14293   0029E0  6A1A               	clrf	(??___flmul+1)^0,c
 14294   0029E2  2619               	addwf	??___flmul^0,f,c
 14295   0029E4  0E00               	movlw	0
 14296   0029E6  221A               	addwfc	(??___flmul+1)^0,f,c
 14297   0029E8  0E82               	movlw	130
 14298   0029EA  2419               	addwf	??___flmul^0,w,c
 14299   0029EC  6E28               	movwf	___flmul@temp^0,c
 14300   0029EE  0EFF               	movlw	255
 14301   0029F0  201A               	addwfc	(??___flmul+1)^0,w,c
 14302   0029F2  6E29               	movwf	(___flmul@temp+1)^0,c
 14303   0029F4  EF11  F015         	goto	l4512
 14304   0029F8                     l4506:
 14305   0029F8  90D8               	bcf	status,0,c
 14306   0029FA  3624               	rlcf	___flmul@prod^0,f,c
 14307   0029FC  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14308   0029FE  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14309   002A00  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14310   002A02  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14311   002A04  EF06  F015         	goto	u4001
 14312   002A08  EF08  F015         	goto	u4000
 14313   002A0C                     u4001:
 14314   002A0C  EF09  F015         	goto	l1376
 14315   002A10                     u4000:
 14316   002A10  8024               	bsf	___flmul@prod^0,0,c
 14317   002A12                     l1376:
 14318   002A12  90D8               	bcf	status,0,c
 14319   002A14  361E               	rlcf	___flmul@grs^0,f,c
 14320   002A16  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14321   002A18  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14322   002A1A  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14323   002A1C  0628               	decf	___flmul@temp^0,f,c
 14324   002A1E  A0D8               	btfss	status,0,c
 14325   002A20  0629               	decf	(___flmul@temp+1)^0,f,c
 14326   002A22                     l4512:
 14327   002A22  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14328   002A24  EF16  F015         	goto	u4011
 14329   002A28  EF18  F015         	goto	u4010
 14330   002A2C                     u4011:
 14331   002A2C  EFFC  F014         	goto	l4506
 14332   002A30                     u4010:
 14333   002A30  0E00               	movlw	0
 14334   002A32  6E22               	movwf	___flmul@aexp^0,c
 14335   002A34  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14336   002A36  EF1F  F015         	goto	u4021
 14337   002A3A  EF21  F015         	goto	u4020
 14338   002A3E                     u4021:
 14339   002A3E  EF45  F015         	goto	l1378
 14340   002A42                     u4020:
 14341   002A42  0EFF               	movlw	255
 14342   002A44  141E               	andwf	___flmul@grs^0,w,c
 14343   002A46  6E19               	movwf	??___flmul^0,c
 14344   002A48  0EFF               	movlw	255
 14345   002A4A  141F               	andwf	(___flmul@grs+1)^0,w,c
 14346   002A4C  6E1A               	movwf	(??___flmul+1)^0,c
 14347   002A4E  0EFF               	movlw	255
 14348   002A50  1420               	andwf	(___flmul@grs+2)^0,w,c
 14349   002A52  6E1B               	movwf	(??___flmul+2)^0,c
 14350   002A54  0E7F               	movlw	127
 14351   002A56  1421               	andwf	(___flmul@grs+3)^0,w,c
 14352   002A58  6E1C               	movwf	(??___flmul+3)^0,c
 14353   002A5A  5019               	movf	??___flmul^0,w,c
 14354   002A5C  101A               	iorwf	(??___flmul+1)^0,w,c
 14355   002A5E  101B               	iorwf	(??___flmul+2)^0,w,c
 14356   002A60  101C               	iorwf	(??___flmul+3)^0,w,c
 14357   002A62  B4D8               	btfsc	status,2,c
 14358   002A64  EF36  F015         	goto	u4031
 14359   002A68  EF38  F015         	goto	u4030
 14360   002A6C                     u4031:
 14361   002A6C  EF3C  F015         	goto	l1379
 14362   002A70                     u4030:
 14363   002A70                     l4520:
 14364   002A70  0E01               	movlw	1
 14365   002A72  6E22               	movwf	___flmul@aexp^0,c
 14366   002A74  EF45  F015         	goto	l1378
 14367   002A78                     l1379:
 14368   002A78  A024               	btfss	___flmul@prod^0,0,c
 14369   002A7A  EF41  F015         	goto	u4041
 14370   002A7E  EF43  F015         	goto	u4040
 14371   002A82                     u4041:
 14372   002A82  EF45  F015         	goto	l1378
 14373   002A86                     u4040:
 14374   002A86  EF38  F015         	goto	l4520
 14375   002A8A                     l1378:
 14376   002A8A  5022               	movf	___flmul@aexp^0,w,c
 14377   002A8C  B4D8               	btfsc	status,2,c
 14378   002A8E  EF4B  F015         	goto	u4051
 14379   002A92  EF4D  F015         	goto	u4050
 14380   002A96                     u4051:
 14381   002A96  EF71  F015         	goto	l4532
 14382   002A9A                     u4050:
 14383   002A9A  0E01               	movlw	1
 14384   002A9C  2624               	addwf	___flmul@prod^0,f,c
 14385   002A9E  0E00               	movlw	0
 14386   002AA0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14387   002AA2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14388   002AA4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14389   002AA6  A027               	btfss	(___flmul@prod+3)^0,0,c
 14390   002AA8  EF58  F015         	goto	u4061
 14391   002AAC  EF5A  F015         	goto	u4060
 14392   002AB0                     u4061:
 14393   002AB0  EF71  F015         	goto	l4532
 14394   002AB4                     u4060:
 14395   002AB4  C024  F019         	movff	___flmul@prod,??___flmul
 14396   002AB8  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14397   002ABC  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14398   002AC0  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14399   002AC4  341C               	rlcf	(??___flmul+3)^0,w,c
 14400   002AC6  321C               	rrcf	(??___flmul+3)^0,f,c
 14401   002AC8  321B               	rrcf	(??___flmul+2)^0,f,c
 14402   002ACA  321A               	rrcf	(??___flmul+1)^0,f,c
 14403   002ACC  3219               	rrcf	??___flmul^0,f,c
 14404   002ACE  C019  F024         	movff	??___flmul,___flmul@prod
 14405   002AD2  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14406   002AD6  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14407   002ADA  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14408   002ADE  4A28               	infsnz	___flmul@temp^0,f,c
 14409   002AE0  2A29               	incf	(___flmul@temp+1)^0,f,c
 14410   002AE2                     l4532:
 14411   002AE2  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14412   002AE4  EF7C  F015         	goto	u4071
 14413   002AE8  5029               	movf	(___flmul@temp+1)^0,w,c
 14414   002AEA  E108               	bnz	u4070
 14415   002AEC  2828               	incf	___flmul@temp^0,w,c
 14416   002AEE  A0D8               	btfss	status,0,c
 14417   002AF0  EF7C  F015         	goto	u4071
 14418   002AF4  EF7E  F015         	goto	u4070
 14419   002AF8                     u4071:
 14420   002AF8  EF88  F015         	goto	l4536
 14421   002AFC                     u4070:
 14422   002AFC  0E00               	movlw	0
 14423   002AFE  6E24               	movwf	___flmul@prod^0,c
 14424   002B00  0E00               	movlw	0
 14425   002B02  6E25               	movwf	(___flmul@prod+1)^0,c
 14426   002B04  0E80               	movlw	128
 14427   002B06  6E26               	movwf	(___flmul@prod+2)^0,c
 14428   002B08  0E7F               	movlw	127
 14429   002B0A  6E27               	movwf	(___flmul@prod+3)^0,c
 14430   002B0C  EFB6  F015         	goto	l4548
 14431   002B10                     l4536:
 14432   002B10  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14433   002B12  EF95  F015         	goto	u4080
 14434   002B16  5029               	movf	(___flmul@temp+1)^0,w,c
 14435   002B18  E106               	bnz	u4081
 14436   002B1A  0428               	decf	___flmul@temp^0,w,c
 14437   002B1C  B0D8               	btfsc	status,0,c
 14438   002B1E  EF93  F015         	goto	u4081
 14439   002B22  EF95  F015         	goto	u4080
 14440   002B26                     u4081:
 14441   002B26  EFA1  F015         	goto	l1386
 14442   002B2A                     u4080:
 14443   002B2A  0E00               	movlw	0
 14444   002B2C  6E24               	movwf	___flmul@prod^0,c
 14445   002B2E  0E00               	movlw	0
 14446   002B30  6E25               	movwf	(___flmul@prod+1)^0,c
 14447   002B32  0E00               	movlw	0
 14448   002B34  6E26               	movwf	(___flmul@prod+2)^0,c
 14449   002B36  0E00               	movlw	0
 14450   002B38  6E27               	movwf	(___flmul@prod+3)^0,c
 14451   002B3A  0E00               	movlw	0
 14452   002B3C  6E1D               	movwf	___flmul@sign^0,c
 14453   002B3E  EFB6  F015         	goto	l4548
 14454   002B42                     l1386:
 14455   002B42  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14456   002B46  0EFF               	movlw	255
 14457   002B48  1624               	andwf	___flmul@prod^0,f,c
 14458   002B4A  0EFF               	movlw	255
 14459   002B4C  1625               	andwf	(___flmul@prod+1)^0,f,c
 14460   002B4E  0E7F               	movlw	127
 14461   002B50  1626               	andwf	(___flmul@prod+2)^0,f,c
 14462   002B52  0E00               	movlw	0
 14463   002B54  1627               	andwf	(___flmul@prod+3)^0,f,c
 14464   002B56  A023               	btfss	___flmul@bexp^0,0,c
 14465   002B58  EFB0  F015         	goto	u4091
 14466   002B5C  EFB2  F015         	goto	u4090
 14467   002B60                     u4091:
 14468   002B60  EFB3  F015         	goto	l4546
 14469   002B64                     u4090:
 14470   002B64  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14471   002B66                     l4546:
 14472   002B66  90D8               	bcf	status,0,c
 14473   002B68  3023               	rrcf	___flmul@bexp^0,w,c
 14474   002B6A  6E27               	movwf	(___flmul@prod+3)^0,c
 14475   002B6C                     l4548:
 14476   002B6C  501D               	movf	___flmul@sign^0,w,c
 14477   002B6E  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14478   002B70  C024  F011         	movff	___flmul@prod,?___flmul
 14479   002B74  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14480   002B78  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14481   002B7C  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14482   002B80                     l1373:
 14483   002B80  0012               	return		;funcret
 14484   002B82                     __end_of___flmul:
 14485                           	callstack 0
 14486                           
 14487 ;; *************** function ___flge *****************
 14488 ;; Defined at:
 14489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  ff1             4   41[COMRAM] unsigned char 
 14492 ;;  ff2             4   45[COMRAM] unsigned char 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;		None               void
 14497 ;; Registers used:
 14498 ;;		wreg, status,2, status,0
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14504 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14506 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14507 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14508 ;;Total ram usage:       12 bytes
 14509 ;; Hardware stack levels used: 1
 14510 ;; Hardware stack levels required when called: 1
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_Colour_decider
 14515 ;;		_efgtoa
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text78
 14520   004AC8                     __ptext78:
 14521                           	callstack 0
 14522   004AC8                     ___flge:
 14523                           	callstack 25
 14524   004AC8  0E00               	movlw	0
 14525   004ACA  142A               	andwf	___flge@ff1^0,w,c
 14526   004ACC  6E32               	movwf	??___flge^0,c
 14527   004ACE  0E00               	movlw	0
 14528   004AD0  142B               	andwf	(___flge@ff1+1)^0,w,c
 14529   004AD2  6E33               	movwf	(??___flge+1)^0,c
 14530   004AD4  0E80               	movlw	128
 14531   004AD6  142C               	andwf	(___flge@ff1+2)^0,w,c
 14532   004AD8  6E34               	movwf	(??___flge+2)^0,c
 14533   004ADA  0E7F               	movlw	127
 14534   004ADC  142D               	andwf	(___flge@ff1+3)^0,w,c
 14535   004ADE  6E35               	movwf	(??___flge+3)^0,c
 14536   004AE0  5032               	movf	??___flge^0,w,c
 14537   004AE2  1033               	iorwf	(??___flge+1)^0,w,c
 14538   004AE4  1034               	iorwf	(??___flge+2)^0,w,c
 14539   004AE6  1035               	iorwf	(??___flge+3)^0,w,c
 14540   004AE8  A4D8               	btfss	status,2,c
 14541   004AEA  EF79  F025         	goto	u4131
 14542   004AEE  EF7B  F025         	goto	u4130
 14543   004AF2                     u4131:
 14544   004AF2  EF83  F025         	goto	l4580
 14545   004AF6                     u4130:
 14546   004AF6  0E00               	movlw	0
 14547   004AF8  6E2A               	movwf	___flge@ff1^0,c
 14548   004AFA  0E00               	movlw	0
 14549   004AFC  6E2B               	movwf	(___flge@ff1+1)^0,c
 14550   004AFE  0E00               	movlw	0
 14551   004B00  6E2C               	movwf	(___flge@ff1+2)^0,c
 14552   004B02  0E00               	movlw	0
 14553   004B04  6E2D               	movwf	(___flge@ff1+3)^0,c
 14554   004B06                     l4580:
 14555   004B06  0E00               	movlw	0
 14556   004B08  142E               	andwf	___flge@ff2^0,w,c
 14557   004B0A  6E32               	movwf	??___flge^0,c
 14558   004B0C  0E00               	movlw	0
 14559   004B0E  142F               	andwf	(___flge@ff2+1)^0,w,c
 14560   004B10  6E33               	movwf	(??___flge+1)^0,c
 14561   004B12  0E80               	movlw	128
 14562   004B14  1430               	andwf	(___flge@ff2+2)^0,w,c
 14563   004B16  6E34               	movwf	(??___flge+2)^0,c
 14564   004B18  0E7F               	movlw	127
 14565   004B1A  1431               	andwf	(___flge@ff2+3)^0,w,c
 14566   004B1C  6E35               	movwf	(??___flge+3)^0,c
 14567   004B1E  5032               	movf	??___flge^0,w,c
 14568   004B20  1033               	iorwf	(??___flge+1)^0,w,c
 14569   004B22  1034               	iorwf	(??___flge+2)^0,w,c
 14570   004B24  1035               	iorwf	(??___flge+3)^0,w,c
 14571   004B26  A4D8               	btfss	status,2,c
 14572   004B28  EF98  F025         	goto	u4141
 14573   004B2C  EF9A  F025         	goto	u4140
 14574   004B30                     u4141:
 14575   004B30  EFA2  F025         	goto	l4584
 14576   004B34                     u4140:
 14577   004B34  0E00               	movlw	0
 14578   004B36  6E2E               	movwf	___flge@ff2^0,c
 14579   004B38  0E00               	movlw	0
 14580   004B3A  6E2F               	movwf	(___flge@ff2+1)^0,c
 14581   004B3C  0E00               	movlw	0
 14582   004B3E  6E30               	movwf	(___flge@ff2+2)^0,c
 14583   004B40  0E00               	movlw	0
 14584   004B42  6E31               	movwf	(___flge@ff2+3)^0,c
 14585   004B44                     l4584:
 14586   004B44  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14587   004B46  EFA7  F025         	goto	u4151
 14588   004B4A  EFA9  F025         	goto	u4150
 14589   004B4E                     u4151:
 14590   004B4E  EFB2  F025         	goto	l4588
 14591   004B52                     u4150:
 14592   004B52  6C2A               	negf	___flge@ff1^0,c
 14593   004B54  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14594   004B56  B0D8               	btfsc	status,0,c
 14595   004B58  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14596   004B5A  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14597   004B5C  B0D8               	btfsc	status,0,c
 14598   004B5E  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14599   004B60  0E80               	movlw	128
 14600   004B62  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14601   004B64                     l4588:
 14602   004B64  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14603   004B66  EFB7  F025         	goto	u4161
 14604   004B6A  EFB9  F025         	goto	u4160
 14605   004B6E                     u4161:
 14606   004B6E  EFC2  F025         	goto	l1020
 14607   004B72                     u4160:
 14608   004B72  6C2E               	negf	___flge@ff2^0,c
 14609   004B74  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14610   004B76  B0D8               	btfsc	status,0,c
 14611   004B78  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14612   004B7A  1E30               	comf	(___flge@ff2+2)^0,f,c
 14613   004B7C  B0D8               	btfsc	status,0,c
 14614   004B7E  2A30               	incf	(___flge@ff2+2)^0,f,c
 14615   004B80  0E80               	movlw	128
 14616   004B82  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14617   004B84                     l1020:
 14618   004B84  0E00               	movlw	0
 14619   004B86  1A2A               	xorwf	___flge@ff1^0,f,c
 14620   004B88  0E00               	movlw	0
 14621   004B8A  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14622   004B8C  0E00               	movlw	0
 14623   004B8E  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14624   004B90  0E80               	movlw	128
 14625   004B92  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14626   004B94  0E00               	movlw	0
 14627   004B96  1A2E               	xorwf	___flge@ff2^0,f,c
 14628   004B98  0E00               	movlw	0
 14629   004B9A  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14630   004B9C  0E00               	movlw	0
 14631   004B9E  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14632   004BA0  0E80               	movlw	128
 14633   004BA2  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14634   004BA4  502E               	movf	___flge@ff2^0,w,c
 14635   004BA6  5C2A               	subwf	___flge@ff1^0,w,c
 14636   004BA8  502F               	movf	(___flge@ff2+1)^0,w,c
 14637   004BAA  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14638   004BAC  5030               	movf	(___flge@ff2+2)^0,w,c
 14639   004BAE  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14640   004BB0  5031               	movf	(___flge@ff2+3)^0,w,c
 14641   004BB2  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14642   004BB4  B0D8               	btfsc	status,0,c
 14643   004BB6  EFDF  F025         	goto	u4171
 14644   004BBA  EFE1  F025         	goto	u4170
 14645   004BBE                     u4171:
 14646   004BBE  EFE4  F025         	goto	l4594
 14647   004BC2                     u4170:
 14648   004BC2  90D8               	bcf	status,0,c
 14649   004BC4  EFE5  F025         	goto	l1025
 14650   004BC8                     l4594:
 14651   004BC8  80D8               	bsf	status,0,c
 14652   004BCA                     l1025:
 14653   004BCA  0012               	return		;funcret
 14654   004BCC                     __end_of___flge:
 14655                           	callstack 0
 14656                           
 14657 ;; *************** function ___fleq *****************
 14658 ;; Defined at:
 14659 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  ff1             4   49[COMRAM] unsigned char 
 14662 ;;  ff2             4   53[COMRAM] unsigned char 
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;		None
 14665 ;; Return value:  Size  Location     Type
 14666 ;;		None               void
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14674 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;Total ram usage:       12 bytes
 14679 ;; Hardware stack levels used: 1
 14680 ;; Hardware stack levels required when called: 1
 14681 ;; This function calls:
 14682 ;;		Nothing
 14683 ;; This function is called by:
 14684 ;;		_Colour_decider
 14685 ;;		_efgtoa
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text79
 14690   004FAA                     __ptext79:
 14691                           	callstack 0
 14692   004FAA                     ___fleq:
 14693                           	callstack 25
 14694   004FAA  0E00               	movlw	0
 14695   004FAC  1432               	andwf	___fleq@ff1^0,w,c
 14696   004FAE  6E3A               	movwf	??___fleq^0,c
 14697   004FB0  0E00               	movlw	0
 14698   004FB2  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14699   004FB4  6E3B               	movwf	(??___fleq+1)^0,c
 14700   004FB6  0E80               	movlw	128
 14701   004FB8  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14702   004FBA  6E3C               	movwf	(??___fleq+2)^0,c
 14703   004FBC  0E7F               	movlw	127
 14704   004FBE  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14705   004FC0  6E3D               	movwf	(??___fleq+3)^0,c
 14706   004FC2  503A               	movf	??___fleq^0,w,c
 14707   004FC4  103B               	iorwf	(??___fleq+1)^0,w,c
 14708   004FC6  103C               	iorwf	(??___fleq+2)^0,w,c
 14709   004FC8  103D               	iorwf	(??___fleq+3)^0,w,c
 14710   004FCA  A4D8               	btfss	status,2,c
 14711   004FCC  EFEA  F027         	goto	u4101
 14712   004FD0  EFEC  F027         	goto	u4100
 14713   004FD4                     u4101:
 14714   004FD4  EFF4  F027         	goto	l4564
 14715   004FD8                     u4100:
 14716   004FD8  0E00               	movlw	0
 14717   004FDA  6E32               	movwf	___fleq@ff1^0,c
 14718   004FDC  0E00               	movlw	0
 14719   004FDE  6E33               	movwf	(___fleq@ff1+1)^0,c
 14720   004FE0  0E00               	movlw	0
 14721   004FE2  6E34               	movwf	(___fleq@ff1+2)^0,c
 14722   004FE4  0E00               	movlw	0
 14723   004FE6  6E35               	movwf	(___fleq@ff1+3)^0,c
 14724   004FE8                     l4564:
 14725   004FE8  0E00               	movlw	0
 14726   004FEA  1436               	andwf	___fleq@ff2^0,w,c
 14727   004FEC  6E3A               	movwf	??___fleq^0,c
 14728   004FEE  0E00               	movlw	0
 14729   004FF0  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14730   004FF2  6E3B               	movwf	(??___fleq+1)^0,c
 14731   004FF4  0E80               	movlw	128
 14732   004FF6  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14733   004FF8  6E3C               	movwf	(??___fleq+2)^0,c
 14734   004FFA  0E7F               	movlw	127
 14735   004FFC  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14736   004FFE  6E3D               	movwf	(??___fleq+3)^0,c
 14737   005000  503A               	movf	??___fleq^0,w,c
 14738   005002  103B               	iorwf	(??___fleq+1)^0,w,c
 14739   005004  103C               	iorwf	(??___fleq+2)^0,w,c
 14740   005006  103D               	iorwf	(??___fleq+3)^0,w,c
 14741   005008  A4D8               	btfss	status,2,c
 14742   00500A  EF09  F028         	goto	u4111
 14743   00500E  EF0B  F028         	goto	u4110
 14744   005012                     u4111:
 14745   005012  EF13  F028         	goto	l4568
 14746   005016                     u4110:
 14747   005016  0E00               	movlw	0
 14748   005018  6E36               	movwf	___fleq@ff2^0,c
 14749   00501A  0E00               	movlw	0
 14750   00501C  6E37               	movwf	(___fleq@ff2+1)^0,c
 14751   00501E  0E00               	movlw	0
 14752   005020  6E38               	movwf	(___fleq@ff2+2)^0,c
 14753   005022  0E00               	movlw	0
 14754   005024  6E39               	movwf	(___fleq@ff2+3)^0,c
 14755   005026                     l4568:
 14756   005026  5036               	movf	___fleq@ff2^0,w,c
 14757   005028  1832               	xorwf	___fleq@ff1^0,w,c
 14758   00502A  E10F               	bnz	u4120
 14759   00502C  5037               	movf	(___fleq@ff2+1)^0,w,c
 14760   00502E  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14761   005030  E10C               	bnz	u4120
 14762   005032  5038               	movf	(___fleq@ff2+2)^0,w,c
 14763   005034  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14764   005036  E109               	bnz	u4120
 14765   005038  5039               	movf	(___fleq@ff2+3)^0,w,c
 14766   00503A  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14767   00503C  B4D8               	btfsc	status,2,c
 14768   00503E  EF23  F028         	goto	u4121
 14769   005042  EF25  F028         	goto	u4120
 14770   005046                     u4121:
 14771   005046  EF28  F028         	goto	l4572
 14772   00504A                     u4120:
 14773   00504A  90D8               	bcf	status,0,c
 14774   00504C  EF29  F028         	goto	l1014
 14775   005050                     l4572:
 14776   005050  80D8               	bsf	status,0,c
 14777   005052                     l1014:
 14778   005052  0012               	return		;funcret
 14779   005054                     __end_of___fleq:
 14780                           	callstack 0
 14781                           
 14782 ;; *************** function ___fldiv *****************
 14783 ;; Defined at:
 14784 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  b               4   49[COMRAM] unsigned char 
 14787 ;;  a               4   53[COMRAM] unsigned char 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  grs             4   68[COMRAM] unsigned long 
 14790 ;;  rem             4   61[COMRAM] unsigned long 
 14791 ;;  new_exp         2   66[COMRAM] short 
 14792 ;;  aexp            1   73[COMRAM] unsigned char 
 14793 ;;  bexp            1   72[COMRAM] unsigned char 
 14794 ;;  sign            1   65[COMRAM] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  4   49[COMRAM] unsigned char 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14804 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14808 ;;Total ram usage:       25 bytes
 14809 ;; Hardware stack levels used: 1
 14810 ;; Hardware stack levels required when called: 1
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_colour_rel
 14815 ;;		_Colour_decider
 14816 ;;		_efgtoa
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text80
 14821   002B82                     __ptext80:
 14822                           	callstack 0
 14823   002B82                     ___fldiv:
 14824                           	callstack 25
 14825   002B82  5035               	movf	(___fldiv@b+3)^0,w,c
 14826   002B84  0B80               	andlw	128
 14827   002B86  6E42               	movwf	___fldiv@sign^0,c
 14828   002B88  5035               	movf	(___fldiv@b+3)^0,w,c
 14829   002B8A  2435               	addwf	(___fldiv@b+3)^0,w,c
 14830   002B8C  6E49               	movwf	___fldiv@bexp^0,c
 14831   002B8E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14832   002B90  EFCC  F015         	goto	u3681
 14833   002B94  EFCE  F015         	goto	u3680
 14834   002B98                     u3681:
 14835   002B98  EFCF  F015         	goto	l4292
 14836   002B9C                     u3680:
 14837   002B9C  8049               	bsf	___fldiv@bexp^0,0,c
 14838   002B9E                     l4292:
 14839   002B9E  5049               	movf	___fldiv@bexp^0,w,c
 14840   002BA0  B4D8               	btfsc	status,2,c
 14841   002BA2  EFD5  F015         	goto	u3691
 14842   002BA6  EFD7  F015         	goto	u3690
 14843   002BAA                     u3691:
 14844   002BAA  EFEC  F015         	goto	l4302
 14845   002BAE                     u3690:
 14846   002BAE  2849               	incf	___fldiv@bexp^0,w,c
 14847   002BB0  A4D8               	btfss	status,2,c
 14848   002BB2  EFDD  F015         	goto	u3701
 14849   002BB6  EFDF  F015         	goto	u3700
 14850   002BBA                     u3701:
 14851   002BBA  EFE7  F015         	goto	l4298
 14852   002BBE                     u3700:
 14853   002BBE  0E00               	movlw	0
 14854   002BC0  6E32               	movwf	___fldiv@b^0,c
 14855   002BC2  0E00               	movlw	0
 14856   002BC4  6E33               	movwf	(___fldiv@b+1)^0,c
 14857   002BC6  0E00               	movlw	0
 14858   002BC8  6E34               	movwf	(___fldiv@b+2)^0,c
 14859   002BCA  0E00               	movlw	0
 14860   002BCC  6E35               	movwf	(___fldiv@b+3)^0,c
 14861   002BCE                     l4298:
 14862   002BCE  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14863   002BD0  0E00               	movlw	0
 14864   002BD2  6E35               	movwf	(___fldiv@b+3)^0,c
 14865   002BD4  EFF4  F015         	goto	l4304
 14866   002BD8                     l4302:
 14867   002BD8  0E00               	movlw	0
 14868   002BDA  6E32               	movwf	___fldiv@b^0,c
 14869   002BDC  0E00               	movlw	0
 14870   002BDE  6E33               	movwf	(___fldiv@b+1)^0,c
 14871   002BE0  0E00               	movlw	0
 14872   002BE2  6E34               	movwf	(___fldiv@b+2)^0,c
 14873   002BE4  0E00               	movlw	0
 14874   002BE6  6E35               	movwf	(___fldiv@b+3)^0,c
 14875   002BE8                     l4304:
 14876   002BE8  5039               	movf	(___fldiv@a+3)^0,w,c
 14877   002BEA  0B80               	andlw	128
 14878   002BEC  1A42               	xorwf	___fldiv@sign^0,f,c
 14879   002BEE  5039               	movf	(___fldiv@a+3)^0,w,c
 14880   002BF0  2439               	addwf	(___fldiv@a+3)^0,w,c
 14881   002BF2  6E4A               	movwf	___fldiv@aexp^0,c
 14882   002BF4  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14883   002BF6  EFFF  F015         	goto	u3711
 14884   002BFA  EF01  F016         	goto	u3710
 14885   002BFE                     u3711:
 14886   002BFE  EF02  F016         	goto	l4312
 14887   002C02                     u3710:
 14888   002C02  804A               	bsf	___fldiv@aexp^0,0,c
 14889   002C04                     l4312:
 14890   002C04  504A               	movf	___fldiv@aexp^0,w,c
 14891   002C06  B4D8               	btfsc	status,2,c
 14892   002C08  EF08  F016         	goto	u3721
 14893   002C0C  EF0A  F016         	goto	u3720
 14894   002C10                     u3721:
 14895   002C10  EF1F  F016         	goto	l4322
 14896   002C14                     u3720:
 14897   002C14  284A               	incf	___fldiv@aexp^0,w,c
 14898   002C16  A4D8               	btfss	status,2,c
 14899   002C18  EF10  F016         	goto	u3731
 14900   002C1C  EF12  F016         	goto	u3730
 14901   002C20                     u3731:
 14902   002C20  EF1A  F016         	goto	l4318
 14903   002C24                     u3730:
 14904   002C24  0E00               	movlw	0
 14905   002C26  6E36               	movwf	___fldiv@a^0,c
 14906   002C28  0E00               	movlw	0
 14907   002C2A  6E37               	movwf	(___fldiv@a+1)^0,c
 14908   002C2C  0E00               	movlw	0
 14909   002C2E  6E38               	movwf	(___fldiv@a+2)^0,c
 14910   002C30  0E00               	movlw	0
 14911   002C32  6E39               	movwf	(___fldiv@a+3)^0,c
 14912   002C34                     l4318:
 14913   002C34  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14914   002C36  0E00               	movlw	0
 14915   002C38  6E39               	movwf	(___fldiv@a+3)^0,c
 14916   002C3A  EF27  F016         	goto	l4324
 14917   002C3E                     l4322:
 14918   002C3E  0E00               	movlw	0
 14919   002C40  6E36               	movwf	___fldiv@a^0,c
 14920   002C42  0E00               	movlw	0
 14921   002C44  6E37               	movwf	(___fldiv@a+1)^0,c
 14922   002C46  0E00               	movlw	0
 14923   002C48  6E38               	movwf	(___fldiv@a+2)^0,c
 14924   002C4A  0E00               	movlw	0
 14925   002C4C  6E39               	movwf	(___fldiv@a+3)^0,c
 14926   002C4E                     l4324:
 14927   002C4E  5036               	movf	___fldiv@a^0,w,c
 14928   002C50  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14929   002C52  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14930   002C54  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14931   002C56  A4D8               	btfss	status,2,c
 14932   002C58  EF30  F016         	goto	u3741
 14933   002C5C  EF32  F016         	goto	u3740
 14934   002C60                     u3741:
 14935   002C60  EF4A  F016         	goto	l4336
 14936   002C64                     u3740:
 14937   002C64  0E00               	movlw	0
 14938   002C66  6E32               	movwf	___fldiv@b^0,c
 14939   002C68  0E00               	movlw	0
 14940   002C6A  6E33               	movwf	(___fldiv@b+1)^0,c
 14941   002C6C  0E00               	movlw	0
 14942   002C6E  6E34               	movwf	(___fldiv@b+2)^0,c
 14943   002C70  0E00               	movlw	0
 14944   002C72  6E35               	movwf	(___fldiv@b+3)^0,c
 14945   002C74  0E80               	movlw	128
 14946   002C76  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14947   002C78  0E7F               	movlw	127
 14948   002C7A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14949   002C7C                     l4330:
 14950   002C7C  5042               	movf	___fldiv@sign^0,w,c
 14951   002C7E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14952   002C80  C032  F032         	movff	___fldiv@b,?___fldiv
 14953   002C84  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14954   002C88  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14955   002C8C  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14956   002C90  EF8D  F017         	goto	l1337
 14957   002C94                     l4336:
 14958   002C94  5049               	movf	___fldiv@bexp^0,w,c
 14959   002C96  A4D8               	btfss	status,2,c
 14960   002C98  EF50  F016         	goto	u3751
 14961   002C9C  EF52  F016         	goto	u3750
 14962   002CA0                     u3751:
 14963   002CA0  EF5C  F016         	goto	l4344
 14964   002CA4                     u3750:
 14965   002CA4  0E00               	movlw	0
 14966   002CA6  6E32               	movwf	?___fldiv^0,c
 14967   002CA8  0E00               	movlw	0
 14968   002CAA  6E33               	movwf	(?___fldiv+1)^0,c
 14969   002CAC  0E00               	movlw	0
 14970   002CAE  6E34               	movwf	(?___fldiv+2)^0,c
 14971   002CB0  0E00               	movlw	0
 14972   002CB2  6E35               	movwf	(?___fldiv+3)^0,c
 14973   002CB4  EF8D  F017         	goto	l1337
 14974   002CB8                     l4344:
 14975   002CB8  504A               	movf	___fldiv@aexp^0,w,c
 14976   002CBA  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14977   002CBE  6A3B               	clrf	(??___fldiv+1)^0,c
 14978   002CC0  5E3A               	subwf	??___fldiv^0,f,c
 14979   002CC2  0E00               	movlw	0
 14980   002CC4  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14981   002CC6  0E7F               	movlw	127
 14982   002CC8  243A               	addwf	??___fldiv^0,w,c
 14983   002CCA  6E43               	movwf	___fldiv@new_exp^0,c
 14984   002CCC  0E00               	movlw	0
 14985   002CCE  203B               	addwfc	(??___fldiv+1)^0,w,c
 14986   002CD0  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14987   002CD2  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14988   002CD6  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14989   002CDA  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14990   002CDE  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14991   002CE2  0E00               	movlw	0
 14992   002CE4  6E32               	movwf	___fldiv@b^0,c
 14993   002CE6  0E00               	movlw	0
 14994   002CE8  6E33               	movwf	(___fldiv@b+1)^0,c
 14995   002CEA  0E00               	movlw	0
 14996   002CEC  6E34               	movwf	(___fldiv@b+2)^0,c
 14997   002CEE  0E00               	movlw	0
 14998   002CF0  6E35               	movwf	(___fldiv@b+3)^0,c
 14999   002CF2  0E00               	movlw	0
 15000   002CF4  6E45               	movwf	___fldiv@grs^0,c
 15001   002CF6  0E00               	movlw	0
 15002   002CF8  6E46               	movwf	(___fldiv@grs+1)^0,c
 15003   002CFA  0E00               	movlw	0
 15004   002CFC  6E47               	movwf	(___fldiv@grs+2)^0,c
 15005   002CFE  0E00               	movlw	0
 15006   002D00  6E48               	movwf	(___fldiv@grs+3)^0,c
 15007   002D02  0E00               	movlw	0
 15008   002D04  6E4A               	movwf	___fldiv@aexp^0,c
 15009   002D06  EFBD  F016         	goto	l1339
 15010   002D0A                     l4354:
 15011   002D0A  504A               	movf	___fldiv@aexp^0,w,c
 15012   002D0C  B4D8               	btfsc	status,2,c
 15013   002D0E  EF8B  F016         	goto	u3761
 15014   002D12  EF8D  F016         	goto	u3760
 15015   002D16                     u3761:
 15016   002D16  EFA4  F016         	goto	l4362
 15017   002D1A                     u3760:
 15018   002D1A  90D8               	bcf	status,0,c
 15019   002D1C  363E               	rlcf	___fldiv@rem^0,f,c
 15020   002D1E  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15021   002D20  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15022   002D22  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15023   002D24  90D8               	bcf	status,0,c
 15024   002D26  3632               	rlcf	___fldiv@b^0,f,c
 15025   002D28  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15026   002D2A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15027   002D2C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15028   002D2E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15029   002D30  EF9C  F016         	goto	u3771
 15030   002D34  EF9E  F016         	goto	u3770
 15031   002D38                     u3771:
 15032   002D38  EF9F  F016         	goto	l1342
 15033   002D3C                     u3770:
 15034   002D3C  8032               	bsf	___fldiv@b^0,0,c
 15035   002D3E                     l1342:
 15036   002D3E  90D8               	bcf	status,0,c
 15037   002D40  3645               	rlcf	___fldiv@grs^0,f,c
 15038   002D42  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15039   002D44  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15040   002D46  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15041   002D48                     l4362:
 15042   002D48  5036               	movf	___fldiv@a^0,w,c
 15043   002D4A  5C3E               	subwf	___fldiv@rem^0,w,c
 15044   002D4C  5037               	movf	(___fldiv@a+1)^0,w,c
 15045   002D4E  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15046   002D50  5038               	movf	(___fldiv@a+2)^0,w,c
 15047   002D52  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15048   002D54  5039               	movf	(___fldiv@a+3)^0,w,c
 15049   002D56  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15050   002D58  A0D8               	btfss	status,0,c
 15051   002D5A  EFB1  F016         	goto	u3781
 15052   002D5E  EFB3  F016         	goto	u3780
 15053   002D62                     u3781:
 15054   002D62  EFBC  F016         	goto	l4368
 15055   002D66                     u3780:
 15056   002D66  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15057   002D68  5036               	movf	___fldiv@a^0,w,c
 15058   002D6A  5E3E               	subwf	___fldiv@rem^0,f,c
 15059   002D6C  5037               	movf	(___fldiv@a+1)^0,w,c
 15060   002D6E  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15061   002D70  5038               	movf	(___fldiv@a+2)^0,w,c
 15062   002D72  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15063   002D74  5039               	movf	(___fldiv@a+3)^0,w,c
 15064   002D76  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15065   002D78                     l4368:
 15066   002D78  2A4A               	incf	___fldiv@aexp^0,f,c
 15067   002D7A                     l1339:
 15068   002D7A  0E19               	movlw	25
 15069   002D7C  644A               	cpfsgt	___fldiv@aexp^0,c
 15070   002D7E  EFC3  F016         	goto	u3791
 15071   002D82  EFC5  F016         	goto	u3790
 15072   002D86                     u3791:
 15073   002D86  EF85  F016         	goto	l4354
 15074   002D8A                     u3790:
 15075   002D8A  503E               	movf	___fldiv@rem^0,w,c
 15076   002D8C  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15077   002D8E  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15078   002D90  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15079   002D92  B4D8               	btfsc	status,2,c
 15080   002D94  EFCE  F016         	goto	u3801
 15081   002D98  EFD0  F016         	goto	u3800
 15082   002D9C                     u3801:
 15083   002D9C  EFE8  F016         	goto	l4380
 15084   002DA0                     u3800:
 15085   002DA0  8045               	bsf	___fldiv@grs^0,0,c
 15086   002DA2  EFE8  F016         	goto	l4380
 15087   002DA6                     l4374:
 15088   002DA6  90D8               	bcf	status,0,c
 15089   002DA8  3632               	rlcf	___fldiv@b^0,f,c
 15090   002DAA  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15091   002DAC  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15092   002DAE  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15093   002DB0  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15094   002DB2  EFDD  F016         	goto	u3811
 15095   002DB6  EFDF  F016         	goto	u3810
 15096   002DBA                     u3811:
 15097   002DBA  EFE0  F016         	goto	l1348
 15098   002DBE                     u3810:
 15099   002DBE  8032               	bsf	___fldiv@b^0,0,c
 15100   002DC0                     l1348:
 15101   002DC0  90D8               	bcf	status,0,c
 15102   002DC2  3645               	rlcf	___fldiv@grs^0,f,c
 15103   002DC4  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15104   002DC6  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15105   002DC8  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15106   002DCA  0643               	decf	___fldiv@new_exp^0,f,c
 15107   002DCC  A0D8               	btfss	status,0,c
 15108   002DCE  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15109   002DD0                     l4380:
 15110   002DD0  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15111   002DD2  EFED  F016         	goto	u3821
 15112   002DD6  EFEF  F016         	goto	u3820
 15113   002DDA                     u3821:
 15114   002DDA  EFD3  F016         	goto	l4374
 15115   002DDE                     u3820:
 15116   002DDE  0E00               	movlw	0
 15117   002DE0  6E4A               	movwf	___fldiv@aexp^0,c
 15118   002DE2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15119   002DE4  EFF6  F016         	goto	u3831
 15120   002DE8  EFF8  F016         	goto	u3830
 15121   002DEC                     u3831:
 15122   002DEC  EF1C  F017         	goto	l1350
 15123   002DF0                     u3830:
 15124   002DF0  0EFF               	movlw	255
 15125   002DF2  1445               	andwf	___fldiv@grs^0,w,c
 15126   002DF4  6E3A               	movwf	??___fldiv^0,c
 15127   002DF6  0EFF               	movlw	255
 15128   002DF8  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15129   002DFA  6E3B               	movwf	(??___fldiv+1)^0,c
 15130   002DFC  0EFF               	movlw	255
 15131   002DFE  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15132   002E00  6E3C               	movwf	(??___fldiv+2)^0,c
 15133   002E02  0E7F               	movlw	127
 15134   002E04  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15135   002E06  6E3D               	movwf	(??___fldiv+3)^0,c
 15136   002E08  503A               	movf	??___fldiv^0,w,c
 15137   002E0A  103B               	iorwf	(??___fldiv+1)^0,w,c
 15138   002E0C  103C               	iorwf	(??___fldiv+2)^0,w,c
 15139   002E0E  103D               	iorwf	(??___fldiv+3)^0,w,c
 15140   002E10  B4D8               	btfsc	status,2,c
 15141   002E12  EF0D  F017         	goto	u3841
 15142   002E16  EF0F  F017         	goto	u3840
 15143   002E1A                     u3841:
 15144   002E1A  EF13  F017         	goto	l1351
 15145   002E1E                     u3840:
 15146   002E1E                     l4388:
 15147   002E1E  0E01               	movlw	1
 15148   002E20  6E4A               	movwf	___fldiv@aexp^0,c
 15149   002E22  EF1C  F017         	goto	l1350
 15150   002E26                     l1351:
 15151   002E26  A032               	btfss	___fldiv@b^0,0,c
 15152   002E28  EF18  F017         	goto	u3851
 15153   002E2C  EF1A  F017         	goto	u3850
 15154   002E30                     u3851:
 15155   002E30  EF1C  F017         	goto	l1350
 15156   002E34                     u3850:
 15157   002E34  EF0F  F017         	goto	l4388
 15158   002E38                     l1350:
 15159   002E38  504A               	movf	___fldiv@aexp^0,w,c
 15160   002E3A  B4D8               	btfsc	status,2,c
 15161   002E3C  EF22  F017         	goto	u3861
 15162   002E40  EF24  F017         	goto	u3860
 15163   002E44                     u3861:
 15164   002E44  EF48  F017         	goto	l4400
 15165   002E48                     u3860:
 15166   002E48  0E01               	movlw	1
 15167   002E4A  2632               	addwf	___fldiv@b^0,f,c
 15168   002E4C  0E00               	movlw	0
 15169   002E4E  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15170   002E50  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15171   002E52  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15172   002E54  A035               	btfss	(___fldiv@b+3)^0,0,c
 15173   002E56  EF2F  F017         	goto	u3871
 15174   002E5A  EF31  F017         	goto	u3870
 15175   002E5E                     u3871:
 15176   002E5E  EF48  F017         	goto	l4400
 15177   002E62                     u3870:
 15178   002E62  C032  F03A         	movff	___fldiv@b,??___fldiv
 15179   002E66  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15180   002E6A  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15181   002E6E  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15182   002E72  343D               	rlcf	(??___fldiv+3)^0,w,c
 15183   002E74  323D               	rrcf	(??___fldiv+3)^0,f,c
 15184   002E76  323C               	rrcf	(??___fldiv+2)^0,f,c
 15185   002E78  323B               	rrcf	(??___fldiv+1)^0,f,c
 15186   002E7A  323A               	rrcf	??___fldiv^0,f,c
 15187   002E7C  C03A  F032         	movff	??___fldiv,___fldiv@b
 15188   002E80  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15189   002E84  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15190   002E88  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15191   002E8C  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15192   002E8E  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15193   002E90                     l4400:
 15194   002E90  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15195   002E92  EF53  F017         	goto	u3881
 15196   002E96  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15197   002E98  E108               	bnz	u3880
 15198   002E9A  2843               	incf	___fldiv@new_exp^0,w,c
 15199   002E9C  A0D8               	btfss	status,0,c
 15200   002E9E  EF53  F017         	goto	u3881
 15201   002EA2  EF55  F017         	goto	u3880
 15202   002EA6                     u3881:
 15203   002EA6  EF60  F017         	goto	l4404
 15204   002EAA                     u3880:
 15205   002EAA  0E00               	movlw	0
 15206   002EAC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15207   002EAE  6843               	setf	___fldiv@new_exp^0,c
 15208   002EB0  0E00               	movlw	0
 15209   002EB2  6E32               	movwf	___fldiv@b^0,c
 15210   002EB4  0E00               	movlw	0
 15211   002EB6  6E33               	movwf	(___fldiv@b+1)^0,c
 15212   002EB8  0E00               	movlw	0
 15213   002EBA  6E34               	movwf	(___fldiv@b+2)^0,c
 15214   002EBC  0E00               	movlw	0
 15215   002EBE  6E35               	movwf	(___fldiv@b+3)^0,c
 15216   002EC0                     l4404:
 15217   002EC0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15218   002EC2  EF6D  F017         	goto	u3890
 15219   002EC6  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15220   002EC8  E106               	bnz	u3891
 15221   002ECA  0443               	decf	___fldiv@new_exp^0,w,c
 15222   002ECC  B0D8               	btfsc	status,0,c
 15223   002ECE  EF6B  F017         	goto	u3891
 15224   002ED2  EF6D  F017         	goto	u3890
 15225   002ED6                     u3891:
 15226   002ED6  EF7B  F017         	goto	l4408
 15227   002EDA                     u3890:
 15228   002EDA  0E00               	movlw	0
 15229   002EDC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15230   002EDE  0E00               	movlw	0
 15231   002EE0  6E43               	movwf	___fldiv@new_exp^0,c
 15232   002EE2  0E00               	movlw	0
 15233   002EE4  6E32               	movwf	___fldiv@b^0,c
 15234   002EE6  0E00               	movlw	0
 15235   002EE8  6E33               	movwf	(___fldiv@b+1)^0,c
 15236   002EEA  0E00               	movlw	0
 15237   002EEC  6E34               	movwf	(___fldiv@b+2)^0,c
 15238   002EEE  0E00               	movlw	0
 15239   002EF0  6E35               	movwf	(___fldiv@b+3)^0,c
 15240   002EF2  0E00               	movlw	0
 15241   002EF4  6E42               	movwf	___fldiv@sign^0,c
 15242   002EF6                     l4408:
 15243   002EF6  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15244   002EFA  A049               	btfss	___fldiv@bexp^0,0,c
 15245   002EFC  EF82  F017         	goto	u3901
 15246   002F00  EF84  F017         	goto	u3900
 15247   002F04                     u3901:
 15248   002F04  EF87  F017         	goto	l4414
 15249   002F08                     u3900:
 15250   002F08  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15251   002F0A  EF88  F017         	goto	l4416
 15252   002F0E                     l4414:
 15253   002F0E  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15254   002F10                     l4416:
 15255   002F10  90D8               	bcf	status,0,c
 15256   002F12  3049               	rrcf	___fldiv@bexp^0,w,c
 15257   002F14  6E35               	movwf	(___fldiv@b+3)^0,c
 15258   002F16  EF3E  F016         	goto	l4330
 15259   002F1A                     l1337:
 15260   002F1A  0012               	return		;funcret
 15261   002F1C                     __end_of___fldiv:
 15262                           	callstack 0
 15263                           
 15264 ;; *************** function _Buttons_init *****************
 15265 ;; Defined at:
 15266 ;;		line 43 in file "LED_buttons.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;		None
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;		None
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      void 
 15273 ;; Registers used:
 15274 ;;		None
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15284 ;;Total ram usage:        0 bytes
 15285 ;; Hardware stack levels used: 1
 15286 ;; Hardware stack levels required when called: 1
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_main
 15291 ;; This function uses a non-reentrant model
 15292 ;;
 15293                           
 15294                           	psect	text81
 15295   0060C4                     __ptext81:
 15296                           	callstack 0
 15297   0060C4                     _Buttons_init:
 15298                           	callstack 29
 15299   0060C4                     
 15300                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15301   0060C4  8486               	bsf	134,2,c	;volatile
 15302                           
 15303                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15304   0060C6  010E               	movlb	14	; () banked
 15305   0060C8  95B4               	bcf	180,2,b	;volatile
 15306                           
 15307                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15308   0060CA  8686               	bsf	134,3,c	;volatile
 15309                           
 15310                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15311   0060CC  97B4               	bcf	180,3,b	;volatile
 15312   0060CE                     
 15313                           ; BSR set to: 14
 15314   0060CE  0012               	return		;funcret
 15315   0060D0                     __end_of_Buttons_init:
 15316                           	callstack 0
 15317                           
 15318 ;; *************** function _HighISR *****************
 15319 ;; Defined at:
 15320 ;;		line 23 in file "interrupts.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;		None
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg, status,2
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15338 ;;Total ram usage:        0 bytes
 15339 ;; Hardware stack levels used: 1
 15340 ;; This function calls:
 15341 ;;		Nothing
 15342 ;; This function is called by:
 15343 ;;		Interrupt level 2
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           	psect	intcode
 15348   000008                     __pintcode:
 15349                           	callstack 0
 15350   000008                     _HighISR:
 15351                           	callstack 22
 15352                           
 15353                           ; BSR set to: 14
 15354                           ;incstack = 0
 15355   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15356   00000A                     
 15357                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15358   00000A  010E               	movlb	14	; () banked
 15359   00000C  AB33               	btfss	51,5,b	;volatile
 15360   00000E  EF0B  F000         	goto	i2u575_41
 15361   000012  EF0D  F000         	goto	i2u575_40
 15362   000016                     i2u575_41:
 15363   000016  EF18  F000         	goto	i2l237
 15364   00001A                     i2u575_40:
 15365   00001A                     
 15366                           ; BSR set to: 14
 15367                           ;interrupts.c: 26:         TMR0H=0;
 15368   00001A  0E00               	movlw	0
 15369   00001C  6ED4               	movwf	212,c	;volatile
 15370                           
 15371                           ;interrupts.c: 27:         TMR0L=0;
 15372   00001E  0E00               	movlw	0
 15373   000020  6ED3               	movwf	211,c	;volatile
 15374                           
 15375                           ;interrupts.c: 28:         lost_flag=1;
 15376   000022  0E00               	movlw	0
 15377   000024  0101               	movlb	1	; () banked
 15378   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15379   000028  0E01               	movlw	1
 15380   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15381   00002C                     
 15382                           ; BSR set to: 1
 15383                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15384   00002C  010E               	movlb	14	; () banked
 15385   00002E  9B33               	bcf	51,5,b	;volatile
 15386   000030                     i2l237:
 15387                           
 15388                           ; BSR set to: 14
 15389   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15390   000032  0011               	retfie		f
 15391   000034                     __end_of_HighISR:
 15392                           	callstack 0
 15393                           
 15394                           	psect	rparam
 15395   000000                     
 15396                           	psect	temp
 15397   00005F                     btemp:
 15398                           	callstack 0
 15399   00005F                     	ds	1
 15400   000000                     int$flags	set	btemp
 15401   000000                     wtemp8	set	btemp+1
 15402   000000                     ttemp5	set	btemp+1
 15403   000000                     ttemp6	set	btemp+4
 15404   000000                     ttemp7	set	btemp+8
 15405                           
 15406                           	psect	idloc
 15407                           
 15408                           ;Config register IDLOC0 @ 0x200000
 15409                           ;	unspecified, using default values
 15410   200000                     	org	2097152
 15411   200000  0FFF               	dw	4095
 15412                           
 15413                           ;Config register IDLOC1 @ 0x200002
 15414                           ;	unspecified, using default values
 15415   200002                     	org	2097154
 15416   200002  0FFF               	dw	4095
 15417                           
 15418                           ;Config register IDLOC2 @ 0x200004
 15419                           ;	unspecified, using default values
 15420   200004                     	org	2097156
 15421   200004  0FFF               	dw	4095
 15422                           
 15423                           ;Config register IDLOC3 @ 0x200006
 15424                           ;	unspecified, using default values
 15425   200006                     	org	2097158
 15426   200006  0FFF               	dw	4095
 15427                           
 15428                           ;Config register IDLOC4 @ 0x200008
 15429                           ;	unspecified, using default values
 15430   200008                     	org	2097160
 15431   200008  0FFF               	dw	4095
 15432                           
 15433                           ;Config register IDLOC5 @ 0x20000A
 15434                           ;	unspecified, using default values
 15435   20000A                     	org	2097162
 15436   20000A  0FFF               	dw	4095
 15437                           
 15438                           ;Config register IDLOC6 @ 0x20000C
 15439                           ;	unspecified, using default values
 15440   20000C                     	org	2097164
 15441   20000C  0FFF               	dw	4095
 15442                           
 15443                           ;Config register IDLOC7 @ 0x20000E
 15444                           ;	unspecified, using default values
 15445   20000E                     	org	2097166
 15446   20000E  0FFF               	dw	4095
 15447                           
 15448                           	psect	config
 15449                           
 15450                           ;Config register CONFIG1L @ 0x300000
 15451                           ;	External Oscillator mode Selection bits
 15452                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15453                           ;	Power-up default value for COSC bits
 15454                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15455   300000                     	org	3145728
 15456   300000  AA                 	db	170
 15457                           
 15458                           ;Config register CONFIG1H @ 0x300001
 15459                           ;	unspecified, using default values
 15460                           ;	Clock Out Enable bit
 15461                           ;	CLKOUTEN = 0x1, unprogrammed default
 15462                           ;	Clock Switch Enable bit
 15463                           ;	CSWEN = 0x1, unprogrammed default
 15464                           ;	Fail-Safe Clock Monitor Enable bit
 15465                           ;	FCMEN = 0x1, unprogrammed default
 15466   300001                     	org	3145729
 15467   300001  FF                 	db	255
 15468                           
 15469                           ;Config register CONFIG2L @ 0x300002
 15470                           ;	unspecified, using default values
 15471                           ;	Master Clear Enable bit
 15472                           ;	MCLRE = 0x1, unprogrammed default
 15473                           ;	Power-up Timer Enable bit
 15474                           ;	PWRTE = 0x1, unprogrammed default
 15475                           ;	Low-power BOR enable bit
 15476                           ;	LPBOREN = 0x1, unprogrammed default
 15477                           ;	Brown-out Reset Enable bits
 15478                           ;	BOREN = 0x3, unprogrammed default
 15479   300002                     	org	3145730
 15480   300002  FF                 	db	255
 15481                           
 15482                           ;Config register CONFIG2H @ 0x300003
 15483                           ;	unspecified, using default values
 15484                           ;	Brown Out Reset Voltage selection bits
 15485                           ;	BORV = 0x3, unprogrammed default
 15486                           ;	ZCD Disable bit
 15487                           ;	ZCD = 0x1, unprogrammed default
 15488                           ;	PPSLOCK bit One-Way Set Enable bit
 15489                           ;	PPS1WAY = 0x1, unprogrammed default
 15490                           ;	Stack Full/Underflow Reset Enable bit
 15491                           ;	STVREN = 0x1, unprogrammed default
 15492                           ;	Debugger Enable bit
 15493                           ;	DEBUG = 0x1, unprogrammed default
 15494                           ;	Extended Instruction Set Enable bit
 15495                           ;	XINST = 0x1, unprogrammed default
 15496   300003                     	org	3145731
 15497   300003  FF                 	db	255
 15498                           
 15499                           ;Config register CONFIG3L @ 0x300004
 15500                           ;	WDT Period Select bits
 15501                           ;	WDTCPS = 0x1F, unprogrammed default
 15502                           ;	WDT operating mode
 15503                           ;	WDTE = OFF, WDT Disabled
 15504   300004                     	org	3145732
 15505   300004  9F                 	db	159
 15506                           
 15507                           ;Config register CONFIG3H @ 0x300005
 15508                           ;	unspecified, using default values
 15509                           ;	WDT Window Select bits
 15510                           ;	WDTCWS = 0x7, unprogrammed default
 15511                           ;	WDT input clock selector
 15512                           ;	WDTCCS = 0x7, unprogrammed default
 15513   300005                     	org	3145733
 15514   300005  FF                 	db	255
 15515                           
 15516                           ;Config register CONFIG4L @ 0x300006
 15517                           ;	unspecified, using default values
 15518                           ;	Write Protection Block 0
 15519                           ;	WRT0 = 0x1, unprogrammed default
 15520                           ;	Write Protection Block 1
 15521                           ;	WRT1 = 0x1, unprogrammed default
 15522                           ;	Write Protection Block 2
 15523                           ;	WRT2 = 0x1, unprogrammed default
 15524                           ;	Write Protection Block 3
 15525                           ;	WRT3 = 0x1, unprogrammed default
 15526                           ;	Write Protection Block 3
 15527                           ;	WRT4 = 0x1, unprogrammed default
 15528                           ;	Write Protection Block 3
 15529                           ;	WRT5 = 0x1, unprogrammed default
 15530                           ;	Write Protection Block 3
 15531                           ;	WRT6 = 0x1, unprogrammed default
 15532                           ;	Write Protection Block 3
 15533                           ;	WRT7 = 0x1, unprogrammed default
 15534   300006                     	org	3145734
 15535   300006  FF                 	db	255
 15536                           
 15537                           ;Config register CONFIG4H @ 0x300007
 15538                           ;	unspecified, using default values
 15539                           ;	Configuration Register Write Protection bit
 15540                           ;	WRTC = 0x1, unprogrammed default
 15541                           ;	Boot Block Write Protection bit
 15542                           ;	WRTB = 0x1, unprogrammed default
 15543                           ;	Data EEPROM Write Protection bit
 15544                           ;	WRTD = 0x1, unprogrammed default
 15545                           ;	Scanner Enable bit
 15546                           ;	SCANE = 0x1, unprogrammed default
 15547                           ;	Low Voltage Programming Enable bit
 15548                           ;	LVP = 0x1, unprogrammed default
 15549   300007                     	org	3145735
 15550   300007  FF                 	db	255
 15551                           
 15552                           ;Config register CONFIG5L @ 0x300008
 15553                           ;	unspecified, using default values
 15554                           ;	UserNVM Program Memory Code Protection bit
 15555                           ;	CP = 0x1, unprogrammed default
 15556                           ;	DataNVM Memory Code Protection bit
 15557                           ;	CPD = 0x1, unprogrammed default
 15558   300008                     	org	3145736
 15559   300008  FF                 	db	255
 15560                           
 15561                           ;Config register CONFIG5H @ 0x300009
 15562                           ;	unspecified, using default values
 15563   300009                     	org	3145737
 15564   300009  FF                 	db	255
 15565                           
 15566                           ;Config register CONFIG6L @ 0x30000A
 15567                           ;	unspecified, using default values
 15568                           ;	Table Read Protection Block 0
 15569                           ;	EBTR0 = 0x1, unprogrammed default
 15570                           ;	Table Read Protection Block 1
 15571                           ;	EBTR1 = 0x1, unprogrammed default
 15572                           ;	Table Read Protection Block 2
 15573                           ;	EBTR2 = 0x1, unprogrammed default
 15574                           ;	Table Read Protection Block 3
 15575                           ;	EBTR3 = 0x1, unprogrammed default
 15576                           ;	Table Read Protection Block 4
 15577                           ;	EBTR4 = 0x1, unprogrammed default
 15578                           ;	Table Read Protection Block 5
 15579                           ;	EBTR5 = 0x1, unprogrammed default
 15580                           ;	Table Read Protection Block 6
 15581                           ;	EBTR6 = 0x1, unprogrammed default
 15582                           ;	Table Read Protection Block 7
 15583                           ;	EBTR7 = 0x1, unprogrammed default
 15584   30000A                     	org	3145738
 15585   30000A  FF                 	db	255
 15586                           
 15587                           ;Config register CONFIG6H @ 0x30000B
 15588                           ;	unspecified, using default values
 15589                           ;	Boot Block Table Read Protection bit
 15590                           ;	EBTRB = 0x1, unprogrammed default
 15591   30000B                     	org	3145739
 15592   30000B  FF                 	db	255
 15593                           tosu	equ	0xFFF
 15594                           tosh	equ	0xFFE
 15595                           tosl	equ	0xFFD
 15596                           stkptr	equ	0xFFC
 15597                           pclatu	equ	0xFFB
 15598                           pclath	equ	0xFFA
 15599                           pcl	equ	0xFF9
 15600                           tblptru	equ	0xFF8
 15601                           tblptrh	equ	0xFF7
 15602                           tblptrl	equ	0xFF6
 15603                           tablat	equ	0xFF5
 15604                           prodh	equ	0xFF4
 15605                           prodl	equ	0xFF3
 15606                           indf0	equ	0xFEF
 15607                           postinc0	equ	0xFEE
 15608                           postdec0	equ	0xFED
 15609                           preinc0	equ	0xFEC
 15610                           plusw0	equ	0xFEB
 15611                           fsr0h	equ	0xFEA
 15612                           fsr0l	equ	0xFE9
 15613                           wreg	equ	0xFE8
 15614                           indf1	equ	0xFE7
 15615                           postinc1	equ	0xFE6
 15616                           postdec1	equ	0xFE5
 15617                           preinc1	equ	0xFE4
 15618                           plusw1	equ	0xFE3
 15619                           fsr1h	equ	0xFE2
 15620                           fsr1l	equ	0xFE1
 15621                           bsr	equ	0xFE0
 15622                           indf2	equ	0xFDF
 15623                           postinc2	equ	0xFDE
 15624                           postdec2	equ	0xFDD
 15625                           preinc2	equ	0xFDC
 15626                           plusw2	equ	0xFDB
 15627                           fsr2h	equ	0xFDA
 15628                           fsr2l	equ	0xFD9
 15629                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2836$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2752$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2752$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), consecutive_read@rel(COMRAM[2]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), consecutive_read@vals(COMRAM[2]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), consecutive_read@rel(COMRAM[2]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), consecutive_read@vals(COMRAM[2]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), consecutive_read@vals(COMRAM[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  571691
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     768
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9176
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  319266
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23853
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _reverseDetect
         _fullSpeedBack
           _setMotorPWM
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _BlueMove
       _GreenMove
       _LightBlueMove
       _OrangeMove
       _RedMove
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _reverseDetect
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 02:02:19 2023

               _color_read_Red 5B6A                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B1A                   ___fldiv@sign 0042                _color_read_Blue 5C0A  
                           l52 6054                             l61 5C08                             l70 3248  
                           l55 5B68                             l80 189C                             l64 5C58  
                           l49 5AC8                             l58 5BB8                             l67 5722  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 43BE  
             _color_read_Green 5BBA                readColours@vals 000C              ??_Interrupts_init 0001  
                          l210 60AA                            l142 5FC0                            l231 60C2  
                          l151 60EC                            l207 6096                            l160 60B6  
                          l216 5F96                            l145 5FC2                            l154 60D8  
                          l163 5E04                            l148 5FE8                            l157 60E2  
                          l502 57D6                            l342 38D2                            l511 5EC0  
                          l432 485C                            l520 5A76                            l425 5352  
                          l514 5662                            l523 5980                            l611 382E  
                          l508 5E82                            l532 4E48                            l356 3AFE  
                          l517 5A24                            l605 3806                            l541 4432  
                          l462 52CA                            l438 53D0                            l446 518E  
                          l454 50F0                            l526 59D2                            l470 4FA8  
                          l198 6092                            l550 454E                            l542 448C  
                          l535 4EFE                            l551 4568                            l543 44FC  
                          l544 44C4                            l481 5F4C                            l529 5596  
                          l641 5F1A                            l634 6074                            l490 5CF4  
                          l539 43DC                            l484 5F66                            l644 5F30  
                          l493 577C                            l549 4518                            l478 522C  
                          l638 56C4                            l487 5CA6                            l672 60CE  
                          l496 5886                            l744 3FF6                            l752 3FF6  
                          l755 6034                            l499 582E                            l669 600E  
                          l599 3806                            l882 49C0                            l869 46F0  
                          _abs 5E06                            _pad 53D2                            _rel 014C  
                 ?_colour_move 002D                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         l1020 4B84                           l1014 5052                           l1025 4BCA  
                         ?_abs 0013                           l1300 25A0                           l1052 4AC6  
                         l1029 5EF8                           l1310 265E                           l1410 4260  
                         l1309 2670                           l1325 5D3A                           l1413 43BC  
                         l1253 54BE                           l1350 2E38                           l1342 2D3E  
                         l1246 54B6                           l1502 1C30                           l1351 2E26  
                         l4000 23DC                           l1424 4354                           l1504 1A76  
                         l1337 2F1A                           l1417 42F8                           l1433 592E  
                         l4010 2454                           l4002 2406                           l1339 2D7A  
                         l1283 2486                           l1348 2DC0                           l4100 26E6  
                         l1292 2756                           l4020 2494                           l4012 2458  
                         l4004 2422                           l1284 2474                           l1604 55EC  
                         l1532 2078                           l1373 2B80                           l1285 243A  
                         l1613 5B18                           l4110 272E                           l4102 26F6  
                         l4030 24D6                           l4022 24A4                           l4014 2466  
                         l4006 2432                           l1607 55FC                           l1376 2A12  
                         l4112 2730                           l4104 2716                           l4040 2504  
                         l4032 24E4                           l4016 2468                           l4008 2448  
                         l4200 5F32                           l5000 20B2                           l1369 281C  
                         l1625 4D92                           l1633 5DC2                           l1465 53F4  
                         l1386 2B42                           l1378 2A8A                           l4114 2736  
                         l4106 271A                           l4050 2570                           l4042 250E  
                         l4034 24F0                           l4026 24B8                           l4018 2472  
                         l4130 522E                           l4202 5F36                           l4210 457C  
                         l4122 5D80                           l1474 3B8E                           l1642 5D7E  
                         l5002 20BA                           l5010 20DA                           l1379 2A78  
                         l1547 354E                           l4300 2BD0                           l4116 2744  
                         l4108 2728                           l4052 2580                           l4036 24F4  
                         l4028 24C8                           l4044 2514                           l4132 5252  
                         l4140 529A                           l5100 585A                           l4204 5F46  
                         l4220 45D2                           l4212 459C                           l1636 60F8  
                         l4124 5D8C                           l1476 3B96                           l5020 2160  
                         l5012 20EC                           l5004 20CA                           l1469 544A  
                         l1477 3BDC                           l4310 2C02                           l4302 2BD8  
                         l4118 2746                           l4070 2602                           l4062 25DA  
                         l4046 253A                           l4054 2590                           l4038 2502  
                         l4142 52B2                           l4134 526A                           l4150 537C  
                         l5110 5982                           l5102 5E46                           l4230 4626  
                         l4222 45DE                           l4214 45A0                           l4206 456A  
                         l4126 5D9E                           l5030 21DA                           l5022 2194  
                         l5014 20FE                           l5006 20CE                           l4400 2E90  
                         l4320 2C36                           l4312 2C04                           l4304 2BE8  
                         l4072 260A                           l4064 25E4                           l4056 25B6  
                         l4048 256E                           l4080 262E                           l4136 5276  
                         l4152 5388                           l4144 5354                           l5200 5FA2  
                         l4160 5116                           l5104 5E84                           l5112 4D94  
                         l4240 469A                           l4232 4638                           l4224 45FC  
                         l4216 45AE                           l4208 456E                           l1584 5E3C  
                         l4128 5DA2                           l1488 3D7E                           l5040 2248  
                         l5032 21E2                           l5024 219C                           l5016 2102  
                         l5008 20D4                           l5120 3280                           l1593 4208  
                         l1569 58DC                           l4410 2EFA                           l4402 2EAA  
                         l4330 2C7C                           l4314 2C14                           l4322 2C3E  
                         l4306 2BEE                           l4090 2680                           l4082 2632  
                         l4074 260E                           l4066 25F2                           l4058 25C6  
                         l4138 5282                           l4146 5358                           l4154 53A0  
                         l5202 5FA8                           l5050 60E4                           l5210 6038  
                         l4170 5176                           l4162 512E                           l5106 55FE  
                         l5114 4E4A                           l4234 4666                           l4226 4604  
                         l4242 46A0                           l4218 45CE                           l4250 485E  
                         l5042 2258                           l5034 21F2                           l5018 2108  
                         l5026 21A0                           l5130 32E2                           l5122 328E  
                         l1587 5E44                           l1579 4CC8                           l1499 2296  
                         l4412 2F08                           l4404 2EC0                           l4340 2CA4  
                         l4332 2C80                           l4324 2C4E                           l4316 2C24  
                         l4308 2BF4                           l4500 2996                           l4092 268C  
                         l4084 2640                           l4076 261E                           l4068 25F4  
                         l5300 422A                           l4156 53B8                           l4148 5370  
                         l5204 5FAA                           l5052 60E8                           l5060 60DE  
                         l4164 513A                           l4180 50A8                           l4172 5054  
                         l5108 5930                           l5220 5BB0                           l5212 5B1A  
                         l4244 46B0                           l4236 4686                           l4228 4618  
                         l4260 48A2                           l4252 4862                           l1596 414C  
                         l5044 226E                           l5036 2222                           l5028 21BE  
                         l5140 338E                           l5132 3338                           l5124 3292  
                         l5116 324A                           l4414 2F0E                           l4406 2EDA  
                         l4350 2CF2                           l4326 2C64                           l4318 2C34  
                         l4510 2A10                           l4502 29CC                           l4430 2774  
                         l4094 269A                           l4086 2656                           l4078 2620  
                         l5310 42A2                           l5302 4270                           l5206 5FAC  
                         l5054 60AE                           l4190 51CC                           l4166 5146  
                         l4158 50F2                           l4174 5078                           l4182 50C0  
                         l5070 5DD2                           l5062 60D0                           l5230 5C0A  
                         l5214 5B60                           l4246 46D0                           l4238 4688  
                         l4270 490A                           l4262 48C2                           l4254 4870  
                         l5046 2276                           l5038 2230                           l5142 3396  
                         l5150 33D8                           l5126 32A2                           l5118 3272  
                         l4416 2F10                           l4408 2EF6                           l4360 2D3C  
                         l4352 2D02                           l4344 2CB8                           l4328 2C74  
                         l4336 2C94                           l4520 2A70                           l4512 2A22  
                         l4504 29DA                           l4440 27BA                           l4432 2784  
                         l4424 2758                           l4096 26D4                           l5320 432A  
                         l5312 42AE                           l5304 4286                           l5400 0E3E  
                         l5208 5FAE                           l5056 60B2                           l4192 51D8  
                         l4168 515E                           l4184 50D8                           l4176 5090  
                         l5080 4F00                           l5240 3550                           l5072 5DDA  
                         l5064 60D4                           l5232 5C50                           l5224 5BBA  
                         l4280 4980                           l4272 4938                           l4264 48E0  
                         l4256 4890                           l4600 5ED8                           l5160 348E  
                         l5152 33FC                           l5144 339E                           l5136 3368  
                         l5128 32C2                           l4370 2D8A                           l4362 2D48  
                         l4354 2D0A                           l4346 2CD2                           l4338 2CA4  
                         l4290 2B9C                           l4530 2ADE                           l4514 2A30  
                         l4506 29F8                           l4450 27E6                           l4442 27C0  
                         l4434 2794                           l4426 2764                           l4098 26D6  
                         l5330 4368                           l5322 4336                           l5314 42E0  
                         l5410 0F0C                           l5402 0E68                           l5058 60DA  
                         l4194 51E4                           l4186 5190                           l4178 509C  
                         l5082 4F24                           l5090 4F6C                           l5250 3580  
                         l5242 3564                           l5074 5E00                           l5066 5DC6  
                         l5226 5C00                           l5218 5B6A                           l4282 49A0  
                         l4274 4958                           l4266 48E8                           l4258 4894  
                         l4602 5EE8                           l5162 34AE                           l5154 3430  
                         l5170 3510                           l5138 3378                           l4372 2DA0  
                         l4380 2DD0                           l4364 2D66                           l4356 2D1A  
                         l4348 2CE2                           l4292 2B9E                           l4540 2B46  
                         l4524 2A9A                           l4532 2AE2                           l4516 2A34  
                         l4508 2A02                           l4460 283C                           l4452 27F6  
                         l4444 27C6                           l4436 27A4                           l4428 2772  
                         l5332 438C                           l5324 4344                           l5316 42E2  
                         l5308 429A                           l5500 15D4                           l5420 0F9A  
                         l5404 0E74                           l4188 51B4                           l4196 51FC  
                         l5092 4F84                           l5084 4F3C                           l5260 3658  
                         l5252 35AE                           l5244 3566                           l5076 5E02  
                         l5068 5DCA                           l5236 6096                           l4276 496A  
                         l4268 48FC                           l3900 4D4C                           l4620 4A2C  
                         l4612 49EC                           l4700 4018                           l5148 33A6  
                         l4382 2DDE                           l4374 2DA6                           l4366 2D68  
                         l4358 2D2E                           l4294 2BAE                           l4286 2B82  
                         l4550 2B70                           l4542 2B56                           l4534 2AFC  
                         l4526 2AA6                           l4518 2A42                           l4470 287C  
                         l4454 2806                           l4446 27D4                           l4438 27AA  
                         l5334 439C                           l5326 4362                           l5318 42EE  
                         l5430 104A                           l5422 0FA2                           l5406 0EA4  
                         l3910 4776                           l4198 5214                           l5094 4F9C  
                         l5086 4F48                           l5270 372E                           l5262 3682  
                         l5254 35D6                           l5246 356E                           l5238 60A6  
                         l4278 4970                           l4630 4A5C                           l4622 4A3A  
                         l4614 4A16                           l4606 49C2                           l4710 4100  
                         l4702 406E                           l5158 3464                           l5174 3522  
                         l5342 5888                           ?_pad 0011                           l4392 2E48  
                         l4384 2DE2                           l4376 2DB0                           l4368 2D78  
                         l4296 2BBE                           l4288 2B8E                           l4560 4FAA  
                         l4544 2B64                           l4536 2B10                           l4528 2AB4  
                         l4480 28C6                           l4472 2888                           l4464 2850  
                         l4456 280C                           l4448 27D6                           l3920 2298  
                         l5336 43AA                           l5328 4364                           l5520 16F2  
                         l5504 15E0                           l5440 1160                           l5432 10A0  
                         l5424 0FF6                           l5416 0F16                           l5408 0ED8  
                         l3912 477A                           l3904 46F2                           l5360 5AA0  
                         l5352 5A78                           l5096 5830                           l5088 4F54  
                         l5280 381A                           l5272 375A                           l5264 36AE  
                         l5256 3602                           l5600 52E4                           l4800 3BE4  
                         l4640 4A86                           l4632 4A66                           l4616 4A18  
                         l4608 49D8                           l4720 41E8                           l4712 413C  
                         l4704 4082                           l5168 34E0                           l5344 5894  
                         l4394 2E54                           l4386 2DF0                           l4378 2DBE  
                         l4298 2BCE                           l4570 504A                           l4562 4FD8  
                         l4546 2B66                           l4538 2B2A                           l4490 2918  
                         l4482 28D2                           l4474 28A0                           l4466 285C  
                         l4458 282C                           l3930 22D4                           l3922 22A4  
                         l4554 5CF6                           l5338 43AC                           l5530 177A  
                         l5522 1730                           l5506 1612                           l5514 1650  
                         l5450 1292                           l5442 1170                           l5426 1028  
                         l5418 0F68                           l3914 47BC                           l3906 470E  
                         l5370 5ABA                           l5362 5AAA                           l5354 5A7C  
                         l5098 5844                           l5290 552E                           l5282 3824  
                         l5274 3784                           l5266 36D8                           l5258 362C  
                         l5610 532E                           l5602 52FA                           l4650 53D2  
                         l4810 3C82                           l4802 3BEE                           l4642 4A96  
                         l4618 4A28                           l4722 41F8                           l4706 4090  
                         l4714 4170                           l4730 5AEA                           l6074 33BA  
                         l5346 58B2                           l4396 2E62                           l4388 2E1E  
                         l4572 5050                           l4564 4FE8                           l4580 4B06  
                         l4548 2B6C                           l4492 2928                           l4484 28E2  
                         l4476 28AC                           l4468 2866                           l3940 2304  
                         l3932 22E4                           l3924 22B2                           l4556 5D06  
                         l5532 17B8                           l5516 1682                           l5508 1644  
                         l5452 130E                           l5444 11A8                           l5436 10AC  
                         l5428 102E                           l3916 47D8                           l3908 4762  
                         l4740 5FD2                           l5380 5AC4                           l5372 5ABC  
                         l5364 5AB4                           l5356 5A86                           l5292 556A  
                         l5276 37B0                           l5268 3704                           l5620 5350  
                         l5612 5338                           l5604 52FE                           l4660 5418  
                         l4652 53E0                           l4820 3D48                           l4804 3BF4  
                         l4812 3CE6                           l4644 4AA6                           l4628 4A52  
                         l4716 41AC                           l4732 5AEE                           l4900 1AFE  
                         l6076 3478                           l5348 58D2                           l5700 591C  
                         l4398 2E8C                           l4566 5016                           l4590 4B72  
                         l4582 4B34                           l4494 2944                           l4486 28EE  
                         l4478 28B8                           l3950 232E                           l3942 2316  
                         l3934 22E6                           l3926 22B4                           l5518 16B4  
                         l5542 17C4                           l5446 11BA                           l5454 1366  
                         l5438 10C0                           l3870 5454                           l3862 6010  
                         l3918 481C                           l5622 6056                           l5198 5F98  
                         l5382 5AC6                           l5374 5ABE                           l5366 5AB6  
                         l5358 5A96                           l5294 5582                           l4750 5C6E  
                         l5286 59D4                           l4742 5EFA                           l5278 37DA  
                         l5710 3DAA                           l5390 301C                           l5614 533A  
                         l5606 5322                           l4662 5436                           l4654 53EC  
                         l4822 3D4E                           l4814 3D00                           l4806 3C76  
                         l4646 4AB6                           l4638 4A7A                           l4670 4BEC  
                         l4718 41C0                           l4734 5AFA                           l4726 5ACA  
                         l4910 1BBE                           l4902 1B30                           l4830 18A4  
                         l6078 3502                           l5630 43BE                           l4568 5026  
                         l4592 4BC2                           l4584 4B44                           l4576 4AC8  
                         l4496 2950                           l4488 28FE                           l3952 233E  
                         l3960 2368                           l3944 2318                           l3928 22C4  
                         l3936 22EE                           l5296 420C                           l5544 17F6  
                         l5552 1834                           l5528 173C                           l5480 14E4  
                         l5456 1398                           l5464 13D6                           l5448 1236  
                         l3880 548A                           l3872 5466                           l3864 602C  
                         l5624 605E                           l5376 5AC0                           l5368 5AB8  
                         l4760 5CC8                           l5288 5A26                           l4752 5C7A  
                         l4744 5F06                           l5800 3FD8                           l5720 3DF6  
                         l5712 3DAE                           l5704 3D80                           l5392 30B0  
                         l5616 5344                           l5608 532C                           l5384 56C6  
                         l4664 5E06                           l4656 5400                           l4824 3D5E  
                         l4816 3D1E                           l4808 3C7C                           l4672 4C2A  
                         l4680 4C6A                           l4728 5ADE                           l4736 5AFE  
                         l4920 1C54                           l4904 1B6E                           l4840 18F4  
                         l4832 18B4                           l5640 445A                           l5632 43C0  
                         l4594 4BC8                           l4586 4B52                           l4578 4AF6  
                         l4498 296C                           l3970 23A0                           l3962 2378  
                         l3954 234E                           l3946 231E                           l3938 22FE  
                         l5298 421C                           l5554 1866                           l5546 1828  
                         l5482 1522                           l5490 1550                           l5466 1408  
                         l5474 1446                           l5458 13CA                           l3882 54A0  
                         l3874 546E                           l5626 6068                           l4738 5FC2  
                         l5378 5AC2                           l4762 5CDC                           l4754 5C8E  
                         l4770 57D8                           l4746 5F16                           l5802 3FE0  
                         l5730 3E28                           l5722 3DFA                           l5714 3DC0  
                         l5706 3D92                           l5394 30E4                           l5386 2F1C  
                         l5618 5346                           l5570 6082                           l4666 5E20  
                         l3890 4CCA                           l4658 5414                           l4818 3D38  
                         l4682 4C7C                           l4674 4C52                           l4690 5D3C  
                         l4930 1C88                           l4922 1C5C                           l4906 1B82  
                         l4914 1BFE                           l4850 1930                           l4842 18FC  
                         l4834 18C2                           l5650 449A                           l5642 4468  
                         l5634 43DE                           l4588 4B64                           l3980 23B4  
                         l3972 23A4                           l3964 238A                           l3956 235E  
                         l3948 232C                           l5492 158A                           l5476 1478  
                         l5468 143A                           l3884 54A8                           l3876 5476  
                         l3868 544C                           l5628 6072                           l4764 5724  
                         l4756 5CA8                           l4748 5C5A                           l4772 57EC  
                         l5732 3E3C                           l5740 3E5A                           l5724 3DFE  
                         l5708 3DA6                           l5716 3DCE                           l5396 317C  
                         l5388 2FE8                           l5572 608C                           l5580 5F6C  
                         l3892 4CDC                           l4780 3B36                           l4676 4C5E  
                         l4668 4BCC                           l4692 5D4C                           l4940 1CD2  
                         l4932 1CA0                           l4924 1C64                           l4916 1C38  
                         l4908 1BB6                           l4860 1976                           l4844 190C  
                         l4852 1934                           l4836 18C6                           l4828 189E  
                         l5660 44DC                           l5652 44A4                           l5644 446C  
                         l5636 4434                           l5900 398E                           l5590 60C4  
                         l3990 23C8                           l3982 23B8                           l3974 23A8  
                         l3966 2398                           l3958 2360                           l5494 15C8  
                         l5478 14AA                           l3886 54AA                           l3878 5484  
                         l4766 5738                           l4758 5CBC                           l4774 5802  
                         l5742 3E6E                           l5734 3E40                           l5718 3DE2  
                         l5398 31B0                           l5574 608E                           l5566 6076  
                         l5582 5F7A                           l3894 4CEE                           l4790 3BAE  
                         l4782 3B46                           l4598 5EC2                           l4686 4CC0  
                         l4694 5598                           l4942 1CE6                           l4950 1DDC  
                         l4934 1CB2                           l4926 1C68                           l4918 1C48  
                         l4862 197E                           l4854 195A                           l4870 19C0  
                         l4846 191C                           l4838 18EA                           l5670 451A  
                         l5662 44DE                           l5654 44A6                           l5646 4484  
                         l5638 444C                           l5910 39FE                           l5902 39A8  
                         l3992 23CC                           l3984 23BC                           l3976 23AC  
                         l3968 239C                           l3888 54B0                           l4768 5750  
                         l5760 3ED0                           l5744 3E82                           l5752 3EA0  
                         l5736 3E44                           l5728 3E14                           l5680 566A  
                         l5592 52CC                           l5576 6090                           l5568 6080  
                         l5584 5F7E                           l3896 4CF8                           l4792 3BB4  
                         l4784 3B66                           l4776 3B02                           l4696 55B6  
                         l4960 1EA8                           l4952 1DFA                           l4944 1D4A  
                         l4928 1C7A                           l4936 1CBA                           l4880 1A0A  
                         l4872 19E6                           l4864 1996                           l4856 196C  
                         l4848 1928                           l5664 44F6                           l5656 44BE  
                         l5648 4486                           l5672 4532                           l5920 3A8A  
                         l5912 3A06                           l5904 39B4                           l5840 3840  
                         l5832 3830                           l3994 23D0                           l3986 23C0  
                         l3978 23B0                           l5690 57AA                           l5586 60B8  
                         l5770 3F12                           l5754 3EB4                           l5746 3E86  
                         l5682 569C                           l5594 52DE                           l5578 5F68  
                         l3898 4D16                           l4794 3BC4                           l4786 3B82  
                         l4778 3B22                           l4698 3FF8                           l4970 1F58  
                         l4962 1EB8                           l4954 1E2E                           l4946 1DA2  
                         l4938 1CC2                           l4890 1A40                           l4874 19F8  
                         l4866 19A0                           l4858 1970                           l5674 4540  
                         l5658 44D2                           l5666 44FC                           l5930 3AD6  
                         l5922 3A96                           l5914 3A0E                           l5906 39C8  
                         l5850 385E                           l5842 3844                           l5834 3834  
                         l3996 23D4                           l3988 23C4                           l5588 5FEA  
                         l5780 3F54                           l5772 3F16                           l5756 3EC8  
                         l5764 3EE6                           l5748 3E8A                           l5684 56A8  
                         l5596 52E0                           l4796 3BD0                           l4788 3B9E  
                         l4980 1FBC                           l4972 1F8C                           l4964 1EC8  
                         l4956 1E60                           l4948 1DD6                           l4876 19FC  
                         l5692 58DE                           l5676 4550                           l5668 450A  
                         l5908 39E4                           l5916 3A16                           l5924 3AA6  
                         l5932 3AEA                           l5860 387E                           l5852 3862  
                         l5844 3848                           l5836 3838                           l3998 23D8  
                         l5686 577E                           l5790 3F86                           l5782 3F58  
                         l5766 3EFA                           l5758 3ECC                           l5678 5664  
                         l5598 52E2                           l4798 3BD8                           l4990 206E  
                         l4982 1FC2                           l4974 1FA0                           l4966 1EFC  
                         l4958 1E76                           l4894 1A86                           l4878 1A02  
                         l5694 58F0                           l5926 3AB8                           l5918 3A34  
                         l5870 389A                           l5862 3882                           l5854 3866  
                         l5846 3854                           l5838 383C                           l5688 5792  
                         l5792 3F8C                           l5784 3F5C                           l5768 3F0E  
                         l5776 3F2C                           l4992 208A                           l4984 1FCA  
                         l4968 1F52                           l4976 1FA4                           l4896 1A8C  
                         l4888 1A26                           l5696 58F8                           l5928 3ABC  
                         l5880 38FA                           l5872 38A2                           l5864 3886  
                         l5856 386E                           l5848 3858                           l5794 3FA8  
                         l5778 3F40                           l4994 2098                           l4986 1FD6  
                         l4978 1FB4                           l4898 1AC0                           l5698 5900  
                         l5890 393C                           l5882 3900                           l5874 38B6  
                         l5866 388A                           l5858 3876                           l5796 3FC0  
                         l5788 3F72                           l4996 20A8                           l4988 204E  
                         l5892 395A                           l5884 3908                           l5876 38B8  
                         l5868 3892                           l5798 3FD4                           l4998 20AC  
                         l5894 395E                           l5886 391C                           l5878 38E0  
                         l5896 3962                           l5888 3928                           l5898 3976  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E34                           STR_5 0E38                           u3000 4D16  
                         u3001 4D12                           u3010 4D4C                           u3011 4D48  
                         u3100 234E                           u3020 470E                           u3101 234A  
                         u3021 470A                           u3110 238A                           u3030 47D8  
                         u3111 2386                           u3031 47D4                           u4000 2A10  
                         u3200 24A4                           u3120 2398                           u3040 22B2  
                 _BAUD4CONbits 000EE9                           u4001 2A0C                           u3201 24A0  
                         u3121 2394                           u3041 22AE                           u4010 2A30  
                         u3210 24D6                           u3130 2406                           u3050 22C4  
                         u4011 2A2C                           u3211 24D2                           u3131 2402  
                         u3051 22C0                           u4100 4FD8                           u4020 2A42  
                         u3300 261E                           u3220 24E4                           u3140 241E  
                         u3060 22D4                           u4101 4FD4                           u4021 2A3E  
                         u3301 261A                           u3221 24E0                           u3141 2418  
                         u3061 22D0                           u4110 5016                           u4030 2A70  
                         u3310 262E                           u3230 2502                           u3150 2420  
                         u3070 2316                           u4111 5012                           u4031 2A6C  
                         u3311 262A                           u3231 24FE                           u3071 2312  
                         u4120 504A                           u4040 2A86                           u3400 2716  
                         u3320 2640                           u3240 253A                           u3160 2448  
                         u3080 232C                           u4200 4A0C                           u5000 32E2  
                         u4121 5046                           u4041 2A82                           u3401 2712  
                         u3321 263C                           u3241 2536                           u3161 2444  
                         u3081 2328                           u5001 32DE                           u4130 4AF6  
                         u4050 2A9A                           u3410 2728                           u3330 2656  
                         u3250 2580                           u3170 2466                           u3090 233E  
                         u4210 4A3A                           u5010 33F8                           _T2PR 000FBC  
                         u4131 4AF2                           u4051 2A96                           u3411 2724  
                         u3331 2652                           u3251 257C                           u3171 2462  
                         u3091 233A                           u4211 4A36                           u5011 33F4  
                         u4140 4B34                           u4060 2AB4                           u3420 2744  
                         u3340 266C                           u3260 25B6                           u3180 2486  
                         u3500 50D8                           u5100 37DA                           u5020 60A6  
                         u4220 4A4E                           u4300 4C2A                           u4141 4B30  
                         u4061 2AB0                           u3421 2740                           u3341 2668  
                         u3261 25B2                           u3181 2482                           u3501 50D4  
                         u5101 37D6                           u5021 60A2                           u4221 4A4A  
                         u4205 4A02                           u4301 4C26                           u4150 4B52  
                         u4070 2AFC                           u3350 2680                           u3270 25C6  
                         u3190 2494                           u5110 421C                           u3510 50F0  
                         u5030 357C                           u3430 5DC2                           u4230 4A76  
                         u4310 4C52                           u4151 4B4E                           u4071 2AF8  
                         u3351 267C                           u3271 25C2                           u3191 2490  
                         u5111 4218                           u3511 50EC                           u5031 3578  
                         u3431 5DBE                           u4231 4A72                           u4311 4C4E  
                         u4160 4B72                           u4080 2B2A                           u3360 269A  
                         u3280 25F2                           u5200 43AA                           u5120 422A  
                         u3440 52B2                           u3520 5214                           u5040 35D6  
                         u3600 4666                           u4240 4A96                           u4320 4C7C  
                         u4400 4090                           u4161 4B6E                           u4081 2B26  
                         u3361 2696                           u3281 25EE                           u5201 43A6  
                         u5121 4226                           u3441 52AE                           u3521 5210  
                         u5041 35D2                           u3601 4662                           u4241 4A92  
                         u4321 4C78                           u4401 408C                           u4170 4BC2  
                         u4090 2B64                           u3370 26D4                           u3290 2602  
                         u5130 4286                           u3450 52CA                           u3530 522C  
                         u5050 362C                           u3610 46B0                           u4250 4AA6  
                         u5210 58D2                           u4171 4BBE                           u4091 2B60  
                         u3371 26D0                           u3291 25FE                           u5131 4282  
                         u3451 52C6                           u3531 5228                           u5051 3628  
                         u3611 46AC                           u4251 4AA2                           u5211 58CE  
                         u3700 2BBE                           u3380 26E6                           u5140 42DC  
                         u5300 1398                           u3460 53B8                           u4500 5FE8  
                         u3540 5F66                           u5060 3682                           u3620 4870  
                         u4260 53E0                           u4180 5ED8                           u4340 4CB6  
                         u4420 40FC                           u3701 2BBA                           u3381 26E2  
                         u5141 42D8                           u5301 1394                           u5221 0E6E  
                         u3461 53B4                           u4501 5FE4                           u3541 5F62  
                         u5061 367E                           u3621 486C                           u4261 53DC  
                         u4181 5ED4                           u4341 4CB0                           u4421 40F8  
                         u3710 2C02                           u3390 26F6                           u5150 4326  
                         u5310 13CA                           u5230 0F68                           u3470 53D0  
                         u4510 5F30                           u5070 36D8                           u3550 457C  
                         u3630 48A2                           u4270 5436                           u4190 49D8  
                         u4350 4CB8                           u4430 4120                           u3711 2BFE  
                         u3391 26F2                           u5151 4322                           u5311 13C6  
                         u5231 0F64                           u3471 53CC                           u6007 57F6  
                         u4511 5F2C                           u5071 36D4                           u3551 4578  
                         u3631 489E                           u4271 5432                           u4191 49D4  
                         u4335 4C8E                           u4415 40A4                           u3800 2DA0  
                         u3720 2C14                           u5160 4344                           u5400 15C8  
                         u5320 1408                           u5240 0FF6                           u3480 5176  
                         u5080 372E                           u3560 45AE                           u3640 48E0  
                         u4280 5E20                           u4600 3D38                           u4520 3B32  
                         u4440 413C                           u4416 40AE                           u4360 5D7E  
                         u3801 2D9C                           u3721 2C10                           u5161 4340  
                         u5401 15C4                           u5321 1404                           u5241 0FF2  
                         u3481 5172                           u6017 5820                           u5081 372A  
                         u3561 45AA                           u3641 48DC                           u4281 5E1C  
                         u4601 3D34                           u4521 3B2C                           u4441 4138  
                         u4417 40BE                           u4361 5D7A                           u3810 2DBE  
                         u3730 2C24                           u5170 4354                           u5410 1612  
                         u5330 143A                           u5250 104A                           u3490 518E  
                         u5090 3784                           u3650 490A                           u4610 3D48  
                         u4530 3B34                           u4290 4C0C                           u4450 4190  
                         u4370 55B6                           u3811 2DBA                           u3731 2C20  
                         u5171 4350                           u5411 160E                           u5331 1436  
                         u5251 1046                           u6107 5742                           u3491 518A  
                         u6027 5C98                           u5091 3780                           u3571 45D8  
                         u3651 4906                           u4611 3D44                           u4435 4116  
                         u4371 55B2                           u3900 2F08                           u3820 2DDE  
                         u3740 2C64                           u5180 4362                           u5500 1828  
                         u5420 1644                           u5340 1478                           u5260 10A0  
                         u3580 45FC                           u3660 4938                           u4540 3B46  
                         u4460 41AC                           u4380 4040                           u4700 1AFE  
                         u4620 18C2                           u3901 2F04                           u3821 2DDA  
                         u3741 2C60                           u5181 435E                           u5501 1824  
                         u5421 1640                           u5341 1474                           u5261 109C  
                         u6117 576E                           u6037 50B2                           u3581 45F8  
                         u3661 4934                           u4541 3B42                           u4461 41A8  
                         u4701 1AFA                           u4621 18BE                           u3830 2DF0  
                         u3750 2CA4                           u3910 2772                           u5190 439C  
                         u5510 1866                           u5430 1682                           u5350 14AA  
                         u5270 10C0                           u2950 5466                           u3590 4626  
                         u3670 4980                           u4550 3B82                           u4470 41E8  
                         u4390 406E                           u4710 1B30                           u4630 190C  
                         u3831 2DEC                           u3751 2CA0                           u3911 276E  
                         u5191 4398                           u5511 1862                           u5431 167E  
                         u5351 14A6                           u5271 10BC                           u2951 5462  
                         u6127 51EE                           u6047 5574                           u3591 4622  
                         u3671 497C                           u4551 3B7E                           u4295 4C02  
                         u4471 41E4                           u4455 4186                           u4391 406A  
                         u4711 1B2C                           u4631 1908                           u3840 2E1E  
                         u3760 2D1A                           u3680 2B9C                           u3920 2784  
                         u5520 1898                           u5440 16B4                           u5360 14E4  
                         u5280 1170                           u2960 5484                           u4560 3BAE  
                         u4480 5B18                           u4800 1E60                           u4720 1B6E  
                         u4640 191C                           u5600 4540                           u3841 2E1A  
                         u3761 2D16                           u3681 2B98                           u3921 2780  
                         u5521 1894                           u5441 16B0                           u5361 14E0  
                         u5281 116C                           u2961 5480                           u6137 5A8C  
                         u6057 5CE6                           u4561 3BAA                           u4385 4036  
                         u4481 5B14                           u4801 1E5C                           u4721 1B6A  
                         u4641 1918                           u5601 453C                           u3850 2E34  
                         u3770 2D3C                           u3690 2BAE                           u3930 2794  
                         u5450 16F2                           u5370 1522                           u5290 11BA  
                         u2970 54A0                           u4490 5FD2                           u5530 5F96  
                         u4570 3BC4                           u4810 1EA8                           u4730 1BFA  
                         u4650 195A                           u5610 454E                           u3851 2E30  
                         u3771 2D38                           u3691 2BAA                           u3931 2790  
                         u5451 16EE                           u5371 151E                           u5291 11B6  
                         u2971 549C                           u6147 579C                           u4491 5FCE  
                         u6067 5150                           u5531 5F92                           u4571 3BC0  
                         u4811 1EA4                           u4731 1BF6                           u4651 1956  
                         u5611 454A                           u3860 2E48                           u3780 2D66  
                         u3940 27D4                           u5460 1730                           u5380 154C  
                         u5700 3F86                           u5620 569C                           u2980 4CDC  
                         u4580 3D00                           u4900 21DA                           u4820 1EB8  
                         u4740 1C30                           u4660 196C                           u5540 445A  
                         u3861 2E44                           u3781 2D62                           u3941 27D0  
                         u5461 172C                           u5381 1548                           u6157 57C8  
                         u6077 5F3C                           u5701 3F82                           u5621 5698  
                         u2981 4CD8                           u4581 3CFC                           u4901 21D6  
                         u4821 1EB4                           u4741 1C2C                           u4661 1968  
                         u5541 4456                           u3870 2E62                           u3790 2D8A  
                         u3950 27E6                           u5470 177A                           u5390 158A  
                         u5710 3FA8                           u5630 3D92                           u2990 4CEE  
                         u4590 3D1E                           u4910 2242                           u4830 1F52  
                         u4750 1C48                           u4670 19E6                           u5550 4468  
                         u3871 2E5E                           u3791 2D86                           u3951 27E2  
                         u5471 1776                           u5391 1586                           u6167 5392  
                         u6087 584E                           u5711 3FA4                           u5631 3D8E  
                         u2991 4CEA                           u4591 3D1A                           u4911 223C  
                         u4831 1F4E                           u4751 1C44                           u4671 19E2  
                         u5551 4464                           u3880 2EAA                           u3960 27F6  
                         u5480 17B8                           u5720 3FF2                           u5640 3DE2  
                         u4920 2244                           u4840 1FA0                           u4760 1C7A  
                         u4680 19F8                           u5560 449A                           u5800 3AB8  
                         u3881 2EA6                           u3961 27F2                           u5481 17B4  
                         u6177 528C                           u6097 5878                           u5721 3FEE  
                         u5641 3DDE                           u4841 1F9C                           u4761 1C76  
                         u4681 19F4                           u5561 4496                           u5801 3AB4  
                         u3890 2EDA                           u3970 282C                           u5490 17F6  
                         u5650 3E28                           u4930 2258                           u4850 204E  
                         u4770 1C88                           u4690 1A72                           u5570 44D2  
                         u5810 3AFE                           u3891 2ED6                           u3971 2828  
                         u5491 17F2                           u5651 3E24                           u4931 2254  
                         u4851 204A                           u4771 1C84                           u4691 1A6E  
                         u5571 44CE                           u5811 3AFA                           u3980 283C  
                         u5660 3E6E                           u4940 5DEE                           u4860 208A  
                         u4780 1CB2                           u5580 450A                           u3981 2838  
                         u5661 3E6A                           u4941 5DE6                           u4861 2086  
                         u4781 1CAE                           u5581 4506                           u3990 29B6  
                         u5670 3EB4                           u4870 2098                           u4790 1DFA  
                         u5590 4518                           u5671 3EB0                           u4871 2094  
                         u4791 1DF6                           u5591 4514                           u4960 4F84  
                         u5680 3EFA                           u4880 20EC                           u5760 38E0  
                         u4961 4F80                           u5681 3EF6                           u4881 20E8  
                         u5761 38DC                           u4970 4F9C                           u5690 3F40  
                         u4890 21BE                           u5770 395A                           u3995 29AC  
                         u4971 4F98                           u5691 3F3C                           u4891 21BA  
                         u5907 399A                           u5771 3956                           u4980 3272  
                         u5780 39FE                           u4981 326E                           u5917 43CA  
                         u5781 39FA                           u4958 5DF0                           u4990 32C2  
                         u5790 3A34                           u4991 32BE                           u5927 443E  
                         u5791 3A30                           u5937 4476                           u5947 44B0  
                         u5957 44E8                           u5967 4524                           u5887 38C4  
                         u5977 455A                           u5897 38EC                           u5987 4F5E  
                         u5997 5F0C                  _LightBlueMove 5982                           abs@a 0013  
                         _dbuf 02A0                           _labs 5598                           _main 3830  
                         _dtoa 3B02                           _prec 00E9                           _vals 016A  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 5354                  ___fpclassifyf 4BCC                           prodh 000FF4  
                         prodl 000FF3                           start 0034                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 5BBA                __end_of_HighISR 0034         __end_of_color_read_lum 5B6A  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 5E84                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 5C5A                _RunOneBlockTime 00F2  
             __end_of_LED_init 6010                  ___fltol@sign1 0009                __end_of___aodiv 46F2  
                        ?_labs 0001                __end_of___fladd 2758                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 49C2                __end_of___fldiv 2F1C  
              __end_of___flneg 5EFA                __end_of___flmul 2B82                __end_of___flsub 5D3C  
              __end_of___fltol 4AC8                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 54C0                          i2l237 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3830  
      __end_of_sendCharSerial4 60AC     __end_of_I2C_2_Master_Start 60EE     __end_of_I2C_2_Master_Write 60B8  
                 YellowMove@mL 0020                          _flags 00ED                   YellowMove@mR 0022  
                        _fputc 4CCA                          _fputs 5D80                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F6  
                        _width 00E7                          _putch 60F8                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5                  ?_Buttons_init 0001                          plusw2 000FDB  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 5930                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5C5A  
        _I2C_2_Master_RepStart 60D0               __end_of_BlueMove 5664                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 54C0        __end_of_turnCalibration 456A                _reverseOneBlock 5830  
                 __end_of_labs 55FE                   __end_of_main 3B02                   __end_of_dtoa 3D80  
                 __end_of_stop 53D2                _colour_rel$3265 0064                _colour_rel$3266 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 4E4A               __end_of_PinkMove 5A78                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
               ??_Buttons_init 0001                         _RG6PPS 000E88                         i2l5830 002C  
                       i2l5826 000A                         i2l5828 001A                      ??_HighISR 0001  
     __end_of_color_click_init 5ACA                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 5930               __end_of___xxtofl 43BE                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4AC8                         ___fleq 4FAA  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 6010              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 189E  
                    ??___lwdiv 000B                         _floorf 3FF8                         _memcpy 5ACA  
                       clear_0 5506                         clear_1 5512                         clear_2 551E  
                       _motorL 0161                         _motorR 0158                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5D3C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 58DE  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 5190                     ___flge@ff1 002A  
                   _YellowMove 59D4                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5524  
      __end_of_reverseOneBlock 5888                     ___flneg@f1 0001       __end_of_color_read_Green 5C0A  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 60B8  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 5190  
                 __pidataBANK0 60EE                   __pidataBANK1 60F4                  __end_of_fputc 4D94  
                __end_of_fputs 5DC4                  __end_of_putch 60FA              __end_of_GreenMove 5EC2  
          __end_of_Timer0_init 6076            __end_of_ReversePink 4F00                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14364 00D3  
        __end_of_reverseDetect 577E                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 577E  
                   ??_LED_init 0001                     _getTMR0val 5664              __end_of_RetryMove 5598  
                    ?_PinkMove 0020              _color_writetoaddr 6036                     _delayed_ms 5EFA  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001           __end_of_Buttons_init 60D0  
            __end_of_TurnDelay 5F68          __end_of_timed_forward 4FAA            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2F1C  
      __end_of_Interrupts_init 60C4         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 6056                        _RedMove 5E46             _I2C_2_Master_Start 60E4  
                   ??_PinkMove 0024                     _initUSART4 6076             _I2C_2_Master_Write 60AC  
                      __Hparam 0000                        _WayBack 011A                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 6056                    RetryMove@mL 0020  
                  RetryMove@mR 0022        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4E4A                        ___aodiv 456A  
                      ___fladd 2298                        ___aomod 485E                        ___fldiv 2B82  
                      ___flneg 5EC2                        ___flmul 2758                        ___flsub 5CF6  
                      ___fltol 49C2            ?_I2C_2_Master_Start 0001                        ___lwdiv 544C  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 54C0  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3550  
                      __ptext0 3830                        __ptext1 43BE                        __ptext2 58DE  
                      __ptext3 5888                        __ptext4 324A                        __ptext5 189E  
                      __ptext6 5D3C                        __ptext7 5ACA                        __ptext8 5598  
                      __ptext9 3FF8                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F1              color_read_lum@tmp 000A                        main@buf 0172  
                      _sprintf 58DE           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5524                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 01DA                    ?_delayed_ms 0001  
            turnCalibration@mL 0020              turnCalibration@mR 0022                     _lost_count 00EB  
            __end_of_vfpfcnvrt 3550                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F4  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 52CC                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 50F2  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                 _consecuitive 0116                    _CCP1CONbits 000FAB                     main@colour 01D6  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5CA8  
               __end_of___flge 4BCC                 __end_of___fleq 5054                 _fullSpeedAhead 522E  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 6036                 __end_of_efgtoa 2298                 __end_of_floorf 420A  
               __end_of_memcpy 5B1A                     floorf@F526 00DF       __end_of_Forwardhalfblock 57D8  
                ??_colour_move 002F                      _GreenMove 5E84                 __end_of_strcpy 5D80  
          start_initialization 54C0                    __end_of_abs 5E46                    __end_of_pad 544C  
                _TxBufWriteCnt 00EF          __end_of_LightBlueMove 59D4                   ??_OrangeMove 0024  
                 _Buttons_init 60C4          __end_of___fpclassifyf 4CCA            color_read_Green@tmp 000A  
 colour_move@recognized_colour 002D        __end_of_initDCmotorsPWM 5354                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 52CC                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 552E                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F2  
                  __pdataBANK1 01D8                _ForwardOneBlock 57D8                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4D94                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 5982                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5F32                  __pcstackBANK0 0060                  __pcstackBANK1 0172  
             ___aodiv@dividend 0001            __end_of_colour_move 3FF8                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2895 006F               ___lwdiv@dividend 0007                      _dtoa$2864 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3267 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5A26           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 5724  
            _I2C_2_Master_Idle 5FC2              _I2C_2_Master_Init 5F98              _I2C_2_Master_Read 5DC4  
            _I2C_2_Master_Stop 60DA                     ?_TurnDelay 0001                   _RxBufReadCnt 00F0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0005  
               colour_rel@vals 004B              _sendStringSerial4 5F68            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _LED_init 5FEA  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 5830                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0114  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u575_40 001A  
                     i2u575_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E3E            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 324A      __end_of_I2C_2_Master_Idle 5FEA  
    __end_of_I2C_2_Master_Init 5FC2      __end_of_I2C_2_Master_Read 5E06              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 60E4                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024                    _colour_move 3D80              ??_color_read_Blue 0007  
           __end_of_getTMR0val 56C6                   _TxBufReadCnt 00EE                       _BlueMove 55FE  
                    _turnRight 5054             __end_of_delayed_ms 5F32                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 54D4                      copy_data1 54F4  
    __end_of_sendStringSerial4 5F98                   ??_colour_rel 004F                  _reverseDetect 5724  
__end_of_I2C_2_Master_RepStart 60DA             color_read_Blue@tmp 000A            __end_of_setMotorPWM 485E  
                 ??_initUSART4 0001                       _PinkMove 5A26                       __Hrparam 0000  
       __end_of_Colour_decider 189E                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 522E  
                  ??_RetryMove 0024           TurnDelay@Turn45Delay 0001                    _readColours 56C6  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 324A                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4                  _timed_forward 4F00  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 001A                       ___xxtofl 420A  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                    ??_TurnDelay 0003  
                 _Time_forward 023C                ___lwdiv@divisor 0009             __end_of_initUSART4 6094  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 4BCC                       __ptext11 49C2                       __ptext20 456A  
                     __ptext12 5EC2                       __ptext21 5F68                       __ptext13 3B02  
                     __ptext30 6076                       __ptext22 6094                       __ptext14 53D2  
                     __ptext31 52CC                       __ptext23 56C6                       __ptext15 5D80  
                     __ptext40 57D8                       __ptext32 5664                       __ptext24 5B1A  
                     __ptext16 4CCA                       __ptext41 5E46                       __ptext33 2F1C  
                     __ptext25 5B6A                       __ptext17 60F8                       __ptext50 5A26  
                     __ptext42 5930                       __ptext34 3D80                       __ptext26 5BBA  
                     __ptext18 5E06                       __ptext51 5CA8                       __ptext43 5982  
                     __ptext35 3550                       __ptext27 5C0A                       __ptext19 485E  
                     __ptext60 60DA                       __ptext52 50F2                       __ptext44 5E84  
                     __ptext36 4F00                       __ptext28 60D0                       __ptext61 60E4  
                     __ptext53 5F32                       __ptext45 55FE                       __ptext37 5EFA  
                     __ptext29 5DC4                       __ptext70 46F2                       __ptext62 5FC2  
                     __ptext54 5830                       __ptext46 59D4                       __ptext38 4D94  
                     __ptext71 6010                       __ptext63 5F98                       __ptext55 5724  
                     __ptext47 5C5A                       __ptext39 4E4A                       __ptext80 2B82  
                     __ptext72 544C                       __ptext64 6056                       __ptext56 5190  
                     __ptext48 5054                       __ptext81 60C4                       __ptext73 0E3E  
                     __ptext65 5FEA                       __ptext57 5A78                       __ptext49 552E  
                     __ptext74 420A                       __ptext66 60B8                       __ptext58 6036  
                     __ptext75 5CF6                       __ptext67 577E                       __ptext59 60AC  
                     __ptext76 2298                       __ptext68 5354                       __ptext77 2758  
                     __ptext69 522E                       __ptext78 4AC8                       __ptext79 4FAA  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 5888                       _run_flag 01D8  
                ??_turnRight45 001E                       _turnLeft 50F2               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
                   _INTCONbits 000FF2                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 46F2                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                 getTMR0val@temp 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5A78                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5CA8  
                  _prev_colour 0118                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5CF6                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 6094                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
