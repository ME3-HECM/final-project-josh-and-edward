

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 20:46:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93   000000                     
    94                           ; Generated 06/04/2022 GMT
    95                           ; 
    96                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F67K40 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000000                     
   129                           	psect	idataBANK0
   130   004E04                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _DataFlag
   134   004E04  01                 	db	1
   135                           
   136                           	psect	idataBANK1
   137   004DFC                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   004DFC  07D0               	dw	2000
   142                           
   143                           ;initializer for _Turn45Delay
   144   004DFE  00DC               	dw	220
   145                           
   146                           ;initializer for _power
   147   004E00  001E               	dw	30
   148   000000                     _TRISEbits	set	3973
   149   000000                     _TX4REG	set	3812
   150   000000                     _RC4STAbits	set	3815
   151   000000                     _SP4BRGH	set	3814
   152   000000                     _SSP2CON2bits	set	3802
   153   000000                     _RX4PPS	set	3605
   154   000000                     _SSP2CLKPPS	set	3612
   155   000000                     _SSP2DATPPS	set	3613
   156   000000                     _ANSELDbits	set	3751
   157   000000                     _SSP2ADD	set	3798
   158   000000                     _SSP2CON1bits	set	3801
   159   000000                     _LATAbits	set	3961
   160   000000                     _LATFbits	set	3966
   161   000000                     _LATGbits	set	3967
   162   000000                     _TRISAbits	set	3969
   163   000000                     _TRISGbits	set	3975
   164   000000                     _PORTFbits	set	3982
   165   000000                     _INTCONbits	set	4082
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _TRISCbits	set	3971
   169   000000                     _TRISDbits	set	3972
   170   000000                     _TRISFbits	set	3974
   171   000000                     _LATDbits	set	3964
   172   000000                     _RC4REG	set	3811
   173   000000                     _SP4BRGL	set	3813
   174   000000                     _TX4STAbits	set	3816
   175   000000                     _BAUD4CONbits	set	3817
   176   000000                     _SSP2CON2	set	3802
   177   000000                     _SSP2STAT	set	3800
   178   000000                     _ANSELFbits	set	3764
   179   000000                     _SSP2BUF	set	3797
   180   000000                     _PIE0bits	set	3625
   181   000000                     _PIE2bits	set	3627
   182   000000                     _PIE4bits	set	3629
   183   000000                     _PIR4bits	set	3639
   184   000000                     _RC0PPS	set	3682
   185   000000                     _RD5PPS	set	3695
   186   000000                     _RE2PPS	set	3700
   187   000000                     _RD6PPS	set	3696
   188   000000                     _RC7PPS	set	3689
   189   000000                     _CCPR4H	set	3873
   190   000000                     _CCPR3H	set	3877
   191   000000                     _PIR0bits	set	3635
   192   000000                     _CCP1CONbits	set	4011
   193   000000                     _CCPTMRS0bits	set	4013
   194   000000                     _T2PR	set	4028
   195   000000                     _T2CONbits	set	4029
   196   000000                     _TMR0L	set	4051
   197   000000                     _TMR0H	set	4052
   198   000000                     _CCP2CONbits	set	4007
   199   000000                     _CCP3CONbits	set	3878
   200   000000                     _CCP4CONbits	set	3874
   201   000000                     _T0CON1bits	set	4054
   202   000000                     _T0CON0bits	set	4053
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  64                 	db	100	;'d'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  64                 	db	100	;'d'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  64                 	db	100	;'d'
   238   000E18  20                 	db	32
   239   000E19  74                 	db	116	;'t'
   240   000E1A  69                 	db	105	;'i'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  65                 	db	101	;'e'
   243   000E1D  72                 	db	114	;'r'
   244   000E1E  3D                 	db	61	;'='
   245   000E1F  25                 	db	37
   246   000E20  64                 	db	100	;'d'
   247   000E21  20                 	db	32
   248   000E22  0D                 	db	13
   249   000E23  0A                 	db	10
   250   000E24  00                 	db	0
   251   000E25  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   004376                     __pcinit:
   257                           	callstack 0
   258   004376                     start_initialization:
   259                           	callstack 0
   260   004376                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK1 (6 bytes)
   264                           ; load TBLPTR registers with __pidataBANK1
   265   004376  0EFC               	movlw	low __pidataBANK1
   266   004378  6EF6               	movwf	tblptrl,c
   267   00437A  0E4D               	movlw	high __pidataBANK1
   268   00437C  6EF7               	movwf	tblptrh,c
   269   00437E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   270   004380  6EF8               	movwf	tblptru,c
   271   004382  EE01  F0CD         	lfsr	0,__pdataBANK1
   272   004386  EE10 F006          	lfsr	1,6
   273   00438A                     copy_data0:
   274   00438A  0009               	tblrd		*+
   275   00438C  CFF5 FFEE          	movff	tablat,postinc0
   276   004390  50E5               	movf	postdec1,w,c
   277   004392  50E1               	movf	fsr1l,w,c
   278   004394  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to BANK0 (1 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   004396  0E04               	movlw	low __pidataBANK0
   283   004398  6EF6               	movwf	tblptrl,c
   284   00439A  0E4E               	movlw	high __pidataBANK0
   285   00439C  6EF7               	movwf	tblptrh,c
   286   00439E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   0043A0  6EF8               	movwf	tblptru,c
   288   0043A2  0009               	tblrd		*+	;fetch initializer
   289   0043A4  CFF5 F0FE          	movff	tablat,__pdataBANK0
   290                           
   291                           ; Clear objects allocated to BANK2 (100 bytes)
   292   0043A8  EE02  F000         	lfsr	0,__pbssBANK2
   293   0043AC  0E64               	movlw	100
   294   0043AE                     clear_0:
   295   0043AE  6AEE               	clrf	postinc0,c
   296   0043B0  06E8               	decf	wreg,f,c
   297   0043B2  E1FD               	bnz	clear_0
   298                           
   299                           ; Clear objects allocated to BANK1 (205 bytes)
   300   0043B4  EE01  F000         	lfsr	0,__pbssBANK1
   301   0043B8  0ECD               	movlw	205
   302   0043BA                     clear_1:
   303   0043BA  6AEE               	clrf	postinc0,c
   304   0043BC  06E8               	decf	wreg,f,c
   305   0043BE  E1FD               	bnz	clear_1
   306                           
   307                           ; Clear objects allocated to BANK0 (16 bytes)
   308   0043C0  EE00  F0EE         	lfsr	0,__pbssBANK0
   309   0043C4  0E10               	movlw	16
   310   0043C6                     clear_2:
   311   0043C6  6AEE               	clrf	postinc0,c
   312   0043C8  06E8               	decf	wreg,f,c
   313   0043CA  E1FD               	bnz	clear_2
   314                           
   315                           ; Clear objects allocated to COMRAM (4 bytes)
   316   0043CC  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   317   0043CE  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   318   0043D0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   319   0043D2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   320   0043D4                     end_of_initialization:
   321                           	callstack 0
   322   0043D4                     __end_of__initialization:
   323                           	callstack 0
   324   0043D4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   325   0043D6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   326   0043D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   327   0043DA  6EF8               	movwf	tblptru,c
   328   0043DC  0E0E               	movlw	high __Lsmallconst
   329   0043DE  6EF7               	movwf	tblptrh,c
   330   0043E0  0100               	movlb	0
   331   0043E2  EF81  F00C         	goto	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMRAM
   334   00005B                     __pbssCOMRAM:
   335                           	callstack 0
   336   00005B                     _TxBufReadCnt:
   337                           	callstack 0
   338   00005B                     	ds	1
   339   00005C                     _TxBufWriteCnt:
   340                           	callstack 0
   341   00005C                     	ds	1
   342   00005D                     _RxBufReadCnt:
   343                           	callstack 0
   344   00005D                     	ds	1
   345   00005E                     _RxBufWriteCnt:
   346                           	callstack 0
   347   00005E                     	ds	1
   348                           
   349                           	psect	bssBANK0
   350   0000EE                     __pbssBANK0:
   351                           	callstack 0
   352   0000EE                     _prec:
   353                           	callstack 0
   354   0000EE                     	ds	2
   355   0000F0                     _move_count:
   356                           	callstack 0
   357   0000F0                     	ds	2
   358   0000F2                     _lost_flag:
   359                           	callstack 0
   360   0000F2                     	ds	2
   361   0000F4                     _flags:
   362                           	callstack 0
   363   0000F4                     	ds	1
   364   0000F5                     _motorL:
   365                           	callstack 0
   366   0000F5                     	ds	9
   367                           
   368                           	psect	dataBANK0
   369   0000FE                     __pdataBANK0:
   370                           	callstack 0
   371   0000FE                     _DataFlag:
   372                           	callstack 0
   373   0000FE                     	ds	1
   374                           
   375                           	psect	bssBANK1
   376   000100                     __pbssBANK1:
   377                           	callstack 0
   378   000100                     _EUSART4TXbuf:
   379                           	callstack 0
   380   000100                     	ds	60
   381   00013C                     _EUSART4RXbuf:
   382                           	callstack 0
   383   00013C                     	ds	20
   384   000150                     	ds	12
   385   00015C                     _width:
   386                           	callstack 0
   387   00015C                     	ds	2
   388   00015E                     _WayBack:
   389                           	callstack 0
   390   00015E                     	ds	50
   391   000190                     _dbuf:
   392                           	callstack 0
   393   000190                     	ds	32
   394   0001B0                     _rel:
   395                           	callstack 0
   396   0001B0                     	ds	12
   397   0001BC                     _motorR:
   398                           	callstack 0
   399   0001BC                     	ds	9
   400   0001C5                     _vals:
   401                           	callstack 0
   402   0001C5                     	ds	8
   403                           
   404                           	psect	dataBANK1
   405   0001CD                     __pdataBANK1:
   406                           	callstack 0
   407   0001CD                     _RunOneBlockTime:
   408                           	callstack 0
   409   0001CD                     	ds	2
   410   0001CF                     _Turn45Delay:
   411                           	callstack 0
   412   0001CF                     	ds	2
   413   0001D1                     _power:
   414                           	callstack 0
   415   0001D1                     	ds	2
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _Time_forward:
   421                           	callstack 0
   422   000200                     	ds	100
   423                           
   424                           	psect	cstackBANK0
   425   000060                     __pcstackBANK0:
   426                           	callstack 0
   427   000060                     ?_sprintf:
   428                           	callstack 0
   429   000060                     sprintf@s:
   430                           	callstack 0
   431   000060                     _Colour_decider$2952:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x0
   435   000060                     	ds	2
   436   000062                     sprintf@fmt:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000062                     	ds	2
   441   000064                     Colour_decider@Cmax_i:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445   000064                     	ds	2
   446   000066                     Colour_decider@RGB_col:
   447                           	callstack 0
   448                           
   449                           ; 12 bytes @ 0x6
   450   000066                     	ds	6
   451   00006C                     sprintf@ap:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xC
   455   00006C                     	ds	2
   456   00006E                     sprintf@f:
   457                           	callstack 0
   458                           
   459                           ; 11 bytes @ 0xE
   460   00006E                     	ds	4
   461   000072                     Colour_decider@Cmax:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x12
   465   000072                     	ds	4
   466   000076                     Colour_decider@Cmin:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x16
   470   000076                     	ds	4
   471   00007A                     Colour_decider@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1A
   475   00007A                     	ds	2
   476   00007C                     Colour_decider@Hue:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x1C
   480   00007C                     	ds	4
   481   000080                     main@buf:
   482                           	callstack 0
   483                           
   484                           ; 100 bytes @ 0x20
   485   000080                     	ds	100
   486   0000E4                     main@temp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x84
   490   0000E4                     	ds	2
   491   0000E6                     main@run_flag:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x86
   495   0000E6                     	ds	2
   496   0000E8                     main@consecuitive:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x88
   500   0000E8                     	ds	2
   501   0000EA                     main@colour:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x8A
   505   0000EA                     	ds	2
   506   0000EC                     main@prev_colour:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x8C
   510   0000EC                     	ds	2
   511                           
   512                           	psect	cstackCOMRAM
   513   000001                     __pcstackCOMRAM:
   514                           	callstack 0
   515   000001                     ??_I2C_2_Master_Idle:
   516   000001                     ?___wmul:
   517                           	callstack 0
   518   000001                     ?___fladd:
   519                           	callstack 0
   520   000001                     ?___xxtofl:
   521                           	callstack 0
   522   000001                     ?___aodiv:
   523                           	callstack 0
   524   000001                     ?___aomod:
   525                           	callstack 0
   526   000001                     sendCharSerial4@charToSend:
   527                           	callstack 0
   528   000001                     initDCmotorsPWM@PWMperiod:
   529                           	callstack 0
   530   000001                     getTMR0val@moving:
   531                           	callstack 0
   532   000001                     delayed_ms@time:
   533                           	callstack 0
   534   000001                     ___wmul@multiplier:
   535                           	callstack 0
   536   000001                     fputc@c:
   537                           	callstack 0
   538   000001                     ___flge@ff1:
   539                           	callstack 0
   540   000001                     ___fladd@b:
   541                           	callstack 0
   542   000001                     ___xxtofl@val:
   543                           	callstack 0
   544   000001                     ___aodiv@dividend:
   545                           	callstack 0
   546   000001                     ___aomod@dividend:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550   000001                     	ds	1
   551   000002                     ??_I2C_2_Master_Read:
   552   000002                     I2C_2_Master_Write@data_byte:
   553                           	callstack 0
   554   000002                     sendStringSerial4@string:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1
   558   000002                     	ds	1
   559   000003                     ??_delayed_ms:
   560   000003                     color_writetoaddr@value:
   561                           	callstack 0
   562   000003                     I2C_2_Master_Read@ack:
   563                           	callstack 0
   564   000003                     ___wmul@multiplicand:
   565                           	callstack 0
   566   000003                     fputc@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570   000003                     	ds	1
   571   000004                     color_writetoaddr@address:
   572                           	callstack 0
   573   000004                     I2C_2_Master_Read@tmp:
   574                           	callstack 0
   575   000004                     delayed_ms@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x3
   579   000004                     	ds	1
   580   000005                     ??_fputc:
   581   000005                     ??_color_click_init:
   582   000005                     ??___xxtofl:
   583   000005                     ?_color_read_lum:
   584                           	callstack 0
   585   000005                     ?_color_read_Red:
   586                           	callstack 0
   587   000005                     ?_color_read_Green:
   588                           	callstack 0
   589   000005                     ?_color_read_Blue:
   590                           	callstack 0
   591   000005                     ___wmul@product:
   592                           	callstack 0
   593   000005                     ___flge@ff2:
   594                           	callstack 0
   595   000005                     ___fladd@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x4
   599   000005                     	ds	2
   600   000007                     ??_color_read_lum:
   601   000007                     ??_color_read_Red:
   602   000007                     ??_color_read_Green:
   603   000007                     ??_color_read_Blue:
   604   000007                     ?___lwdiv:
   605                           	callstack 0
   606   000007                     ___lwdiv@dividend:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x6
   610   000007                     	ds	2
   611   000009                     ??___fladd:
   612   000009                     ??___flge:
   613   000009                     ___xxtofl@sign:
   614                           	callstack 0
   615   000009                     ___lwdiv@divisor:
   616                           	callstack 0
   617   000009                     ___aodiv@divisor:
   618                           	callstack 0
   619   000009                     ___aomod@divisor:
   620                           	callstack 0
   621                           
   622                           ; 8 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     ___xxtofl@exp:
   625                           	callstack 0
   626   00000A                     color_read_lum@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Red@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Green@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Blue@tmp:
   633                           	callstack 0
   634   00000A                     fputs@s:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x9
   638   00000A                     	ds	1
   639   00000B                     ___lwdiv@quotient:
   640                           	callstack 0
   641   00000B                     ___xxtofl@arg:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xA
   645   00000B                     	ds	1
   646   00000C                     readColours@vals:
   647                           	callstack 0
   648   00000C                     fputs@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0xB
   652   00000C                     	ds	1
   653   00000D                     ___lwdiv@counter:
   654                           	callstack 0
   655   00000D                     ___fladd@signs:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xC
   659   00000D                     	ds	1
   660   00000E                     ___fladd@aexp:
   661                           	callstack 0
   662   00000E                     fputs@c:
   663                           	callstack 0
   664   00000E                     setMotorPWM@m:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0xD
   668   00000E                     	ds	1
   669   00000F                     ___fladd@bexp:
   670                           	callstack 0
   671   00000F                     fputs@i:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xE
   675   00000F                     	ds	1
   676   000010                     ??_setMotorPWM:
   677   000010                     ___fladd@grs:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0xF
   681   000010                     	ds	1
   682   000011                     ?___flsub:
   683                           	callstack 0
   684   000011                     ___aodiv@counter:
   685                           	callstack 0
   686   000011                     ___aomod@counter:
   687                           	callstack 0
   688   000011                     pad@fp:
   689                           	callstack 0
   690   000011                     ___flsub@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x10
   694   000011                     	ds	1
   695   000012                     setMotorPWM@posDuty:
   696                           	callstack 0
   697   000012                     ___aodiv@sign:
   698                           	callstack 0
   699   000012                     ___aomod@sign:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x11
   703   000012                     	ds	1
   704   000013                     ?_abs:
   705                           	callstack 0
   706   000013                     setMotorPWM@negDuty:
   707                           	callstack 0
   708   000013                     pad@buf:
   709                           	callstack 0
   710   000013                     abs@a:
   711                           	callstack 0
   712   000013                     ___aodiv@quotient:
   713                           	callstack 0
   714                           
   715                           ; 8 bytes @ 0x12
   716   000013                     	ds	1
   717   000014                     stop@mL:
   718                           	callstack 0
   719   000014                     turnLeft@mL:
   720                           	callstack 0
   721   000014                     turnRight@mL:
   722                           	callstack 0
   723   000014                     fullSpeedAhead@mL:
   724                           	callstack 0
   725   000014                     timed_forward@mL:
   726                           	callstack 0
   727   000014                     fullSpeedBack@mL:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x13
   731   000014                     	ds	1
   732   000015                     ??_abs:
   733   000015                     pad@p:
   734                           	callstack 0
   735   000015                     ___flsub@a:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x14
   739   000015                     	ds	1
   740   000016                     stop@mR:
   741                           	callstack 0
   742   000016                     turnLeft@mR:
   743                           	callstack 0
   744   000016                     turnRight@mR:
   745                           	callstack 0
   746   000016                     fullSpeedAhead@mR:
   747                           	callstack 0
   748   000016                     timed_forward@mR:
   749                           	callstack 0
   750   000016                     fullSpeedBack@mR:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x15
   754   000016                     	ds	1
   755   000017                     ??_pad:
   756                           
   757                           ; 1 bytes @ 0x16
   758   000017                     	ds	1
   759   000018                     ??_fullSpeedAhead:
   760   000018                     ??_stop:
   761   000018                     ??_turnLeft:
   762   000018                     ??_turnRight:
   763   000018                     ??_fullSpeedBack:
   764   000018                     timed_forward@time:
   765                           	callstack 0
   766   000018                     pad@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x17
   770   000018                     	ds	1
   771   000019                     ?___fldiv:
   772                           	callstack 0
   773   000019                     ___fleq@ff1:
   774                           	callstack 0
   775   000019                     ___fldiv@b:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x18
   779   000019                     	ds	1
   780   00001A                     ??_timed_forward:
   781   00001A                     turnRight45@mL:
   782                           	callstack 0
   783   00001A                     turnLeft45@mL:
   784                           	callstack 0
   785   00001A                     reverseDetect@mL:
   786                           	callstack 0
   787   00001A                     reverseOneBlock@mL:
   788                           	callstack 0
   789   00001A                     ForwardOneBlock@mL:
   790                           	callstack 0
   791   00001A                     Forwardhalfblock@mL:
   792                           	callstack 0
   793   00001A                     Backhalfblock@mL:
   794                           	callstack 0
   795   00001A                     pad@w:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x19
   799   00001A                     	ds	2
   800   00001C                     turnRight45@mR:
   801                           	callstack 0
   802   00001C                     turnLeft45@mR:
   803                           	callstack 0
   804   00001C                     reverseDetect@mR:
   805                           	callstack 0
   806   00001C                     reverseOneBlock@mR:
   807                           	callstack 0
   808   00001C                     ForwardOneBlock@mR:
   809                           	callstack 0
   810   00001C                     Forwardhalfblock@mR:
   811                           	callstack 0
   812   00001C                     Backhalfblock@mR:
   813                           	callstack 0
   814   00001C                     dtoa@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x1B
   818   00001C                     	ds	1
   819   00001D                     ___fleq@ff2:
   820                           	callstack 0
   821   00001D                     ___fldiv@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x1C
   825   00001D                     	ds	1
   826   00001E                     ??_Forwardhalfblock:
   827   00001E                     ??_turnRight45:
   828   00001E                     ??_turnLeft45:
   829   00001E                     ??_reverseDetect:
   830   00001E                     ??_reverseOneBlock:
   831   00001E                     ??_ForwardOneBlock:
   832   00001E                     ??_Backhalfblock:
   833   00001E                     dtoa@d:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0x1D
   837   00001E                     	ds	2
   838   000020                     RedMove@mL:
   839                           	callstack 0
   840   000020                     GreenMove@mL:
   841                           	callstack 0
   842   000020                     BlueMove@mL:
   843                           	callstack 0
   844   000020                     YellowMove@mL:
   845                           	callstack 0
   846   000020                     PinkMove@mL:
   847                           	callstack 0
   848   000020                     OrangeMove@mL:
   849                           	callstack 0
   850   000020                     LightBlueMove@mL:
   851                           	callstack 0
   852   000020                     RetryMove@mL:
   853                           	callstack 0
   854   000020                     ReverseYellow@mL:
   855                           	callstack 0
   856   000020                     ReversePink@mL:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1F
   860   000020                     	ds	1
   861   000021                     ??___fldiv:
   862   000021                     ??___fleq:
   863                           
   864                           ; 1 bytes @ 0x20
   865   000021                     	ds	1
   866   000022                     RedMove@mR:
   867                           	callstack 0
   868   000022                     GreenMove@mR:
   869                           	callstack 0
   870   000022                     BlueMove@mR:
   871                           	callstack 0
   872   000022                     YellowMove@mR:
   873                           	callstack 0
   874   000022                     PinkMove@mR:
   875                           	callstack 0
   876   000022                     OrangeMove@mR:
   877                           	callstack 0
   878   000022                     LightBlueMove@mR:
   879                           	callstack 0
   880   000022                     RetryMove@mR:
   881                           	callstack 0
   882   000022                     ReverseYellow@mR:
   883                           	callstack 0
   884   000022                     ReversePink@mR:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	2
   889   000024                     go_Home@WayBack:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x23
   893   000024                     	ds	1
   894   000025                     ___fldiv@rem:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x24
   898   000025                     	ds	1
   899   000026                     ??_dtoa:
   900   000026                     go_Home@Time_forward:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904   000026                     	ds	2
   905   000028                     ??_go_Home:
   906                           
   907                           ; 1 bytes @ 0x27
   908   000028                     	ds	1
   909   000029                     ___fldiv@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x28
   913   000029                     	ds	1
   914   00002A                     ___fldiv@new_exp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x29
   918   00002A                     	ds	1
   919   00002B                     go_Home@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2A
   923   00002B                     	ds	1
   924   00002C                     ___fldiv@grs:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x2B
   928   00002C                     	ds	2
   929   00002E                     _dtoa$2629:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2D
   933   00002E                     	ds	2
   934   000030                     ___fldiv@bexp:
   935                           	callstack 0
   936   000030                     dtoa@p:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2F
   940   000030                     	ds	1
   941   000031                     ___fldiv@aexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x30
   945   000031                     	ds	1
   946   000032                     ?___flmul:
   947                           	callstack 0
   948   000032                     colour_rel@vals:
   949                           	callstack 0
   950   000032                     dtoa@w:
   951                           	callstack 0
   952   000032                     ___flmul@b:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x31
   956   000032                     	ds	2
   957   000034                     colour_rel@rel:
   958                           	callstack 0
   959   000034                     dtoa@n:
   960                           	callstack 0
   961                           
   962                           ; 8 bytes @ 0x33
   963   000034                     	ds	2
   964   000036                     colour_rel@L:
   965                           	callstack 0
   966   000036                     ___flmul@a:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x35
   970   000036                     	ds	4
   971   00003A                     ??___flmul:
   972   00003A                     _colour_rel$2950:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x39
   976   00003A                     	ds	2
   977   00003C                     dtoa@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3B
   981   00003C                     	ds	2
   982   00003E                     ___flmul@sign:
   983                           	callstack 0
   984   00003E                     dtoa@s:
   985                           	callstack 0
   986   00003E                     _colour_rel$2951:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3D
   990   00003E                     	ds	1
   991   00003F                     vfpfcnvrt@fp:
   992                           	callstack 0
   993   00003F                     ___flmul@grs:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x3E
   997   00003F                     	ds	2
   998   000041                     vfpfcnvrt@fmt:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x40
  1002   000041                     	ds	1
  1003   000042                     colour_rel@R:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x41
  1007   000042                     	ds	1
  1008   000043                     ___flmul@aexp:
  1009                           	callstack 0
  1010   000043                     vfpfcnvrt@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x42
  1014   000043                     	ds	1
  1015   000044                     ___flmul@bexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x43
  1019   000044                     	ds	1
  1020   000045                     ??_vfpfcnvrt:
  1021   000045                     ___flmul@prod:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x44
  1025   000045                     	ds	1
  1026   000046                     colour_rel@G:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x45
  1030   000046                     	ds	1
  1031   000047                     vfpfcnvrt@convarg:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x46
  1035   000047                     	ds	2
  1036   000049                     ___flmul@temp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x48
  1040   000049                     	ds	1
  1041   00004A                     colour_rel@B:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x49
  1045   00004A                     	ds	1
  1046   00004B                     ?_Colour_decider:
  1047                           	callstack 0
  1048   00004B                     Colour_decider@vals:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x4A
  1052   00004B                     	ds	2
  1053   00004D                     Colour_decider@rel:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4C
  1057   00004D                     	ds	2
  1058   00004F                     ??_Colour_decider:
  1059   00004F                     vfpfcnvrt@cp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x4E
  1063   00004F                     	ds	2
  1064   000051                     ?_vfprintf:
  1065                           	callstack 0
  1066   000051                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x50
  1070   000051                     	ds	2
  1071   000053                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x52
  1075   000053                     	ds	2
  1076   000055                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x54
  1080   000055                     	ds	2
  1081   000057                     vfprintf@cfmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x56
  1085   000057                     	ds	2
  1086   000059                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0x58
  1089   000059                     	ds	2
  1090                           
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  colour          2  138[BANK0 ] int 
  1101 ;;  temp            2  132[BANK0 ] int 
  1102 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1103 ;;  prev_colour     2  140[BANK0 ] int 
  1104 ;;  consecuitive    2  136[BANK0 ] int 
  1105 ;;  run_flag        2  134[BANK0 ] int 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1116 ;;      Locals:         0     110       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Totals:         2     110       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;Total ram usage:      112 bytes
  1120 ;; Hardware stack levels required when called: 9
  1121 ;; This function calls:
  1122 ;;		_BlueMove
  1123 ;;		_Colour_decider
  1124 ;;		_Forwardhalfblock
  1125 ;;		_GreenMove
  1126 ;;		_I2C_2_Master_Init
  1127 ;;		_Interrupts_init
  1128 ;;		_LightBlueMove
  1129 ;;		_OrangeMove
  1130 ;;		_PinkMove
  1131 ;;		_RedMove
  1132 ;;		_RetryMove
  1133 ;;		_Timer0_init
  1134 ;;		_YellowMove
  1135 ;;		_color_click_init
  1136 ;;		_colour_rel
  1137 ;;		_fullSpeedAhead
  1138 ;;		_getTMR0val
  1139 ;;		_go_Home
  1140 ;;		_initDCmotorsPWM
  1141 ;;		_initUSART4
  1142 ;;		_readColours
  1143 ;;		_sendStringSerial4
  1144 ;;		_sprintf
  1145 ;;		_stop
  1146 ;; This function is called by:
  1147 ;;		Startup code after reset
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text0
  1152   001902                     __ptext0:
  1153                           	callstack 0
  1154   001902                     _main:
  1155                           	callstack 22
  1156   001902                     
  1157                           ;main.c: 31:     initUSART4();
  1158   001902  ECC7  F026         	call	_initUSART4	;wreg free
  1159   001906                     
  1160                           ;main.c: 32:     Interrupts_init();
  1161   001906  ECE2  F026         	call	_Interrupts_init	;wreg free
  1162   00190A                     
  1163                           ;main.c: 33:     color_click_init();
  1164   00190A  EC09  F024         	call	_color_click_init	;wreg free
  1165   00190E                     
  1166                           ;main.c: 34:     I2C_2_Master_Init();
  1167   00190E  EC43  F026         	call	_I2C_2_Master_Init	;wreg free
  1168   001912                     
  1169                           ;main.c: 35:     Timer0_init();
  1170   001912  ECB7  F026         	call	_Timer0_init	;wreg free
  1171   001916                     
  1172                           ;main.c: 36:     initDCmotorsPWM(200);
  1173   001916  0E00               	movlw	0
  1174   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1175   00191A  0EC8               	movlw	200
  1176   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1177   00191E  ECC1  F020         	call	_initDCmotorsPWM	;wreg free
  1178   001922                     
  1179                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1180   001922  9287               	bcf	135,1,c	;volatile
  1181   001924                     
  1182                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1183   001924  9881               	bcf	129,4,c	;volatile
  1184   001926                     
  1185                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1186   001926  9E86               	bcf	134,7,c	;volatile
  1187   001928                     
  1188                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1189   001928  8486               	bsf	134,2,c	;volatile
  1190   00192A                     
  1191                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1192   00192A  010E               	movlb	14	; () banked
  1193   00192C  95B4               	bcf	180,2,b	;volatile
  1194   00192E                     
  1195                           ; BSR set to: 14
  1196                           ;main.c: 43:     LATGbits.LATG1=1;
  1197   00192E  827F               	bsf	127,1,c	;volatile
  1198   001930                     
  1199                           ; BSR set to: 14
  1200                           ;main.c: 44:     LATAbits.LATA4=1;
  1201   001930  8879               	bsf	121,4,c	;volatile
  1202   001932                     
  1203                           ; BSR set to: 14
  1204                           ;main.c: 45:     LATFbits.LATF7=1;
  1205   001932  8E7E               	bsf	126,7,c	;volatile
  1206   001934                     
  1207                           ; BSR set to: 14
  1208                           ;main.c: 49:     motorL.power=0;
  1209   001934  0E00               	movlw	0
  1210   001936  0100               	movlb	0	; () banked
  1211   001938  6FF5               	movwf	_motorL& (0+255),b
  1212   00193A                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 50:     motorL.direction=1;
  1215   00193A  0E01               	movlw	1
  1216   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1217   00193E                     
  1218                           ; BSR set to: 0
  1219                           ;main.c: 51:     motorL.brakemode=1;
  1220   00193E  0E01               	movlw	1
  1221   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1222   001942                     
  1223                           ; BSR set to: 0
  1224                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1225   001942  0EAA               	movlw	170
  1226   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1227   001946  0E0F               	movlw	15
  1228   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1229   00194A                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1232   00194A  0EA6               	movlw	166
  1233   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1234   00194E  0E0F               	movlw	15
  1235   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1236   001952                     
  1237                           ; BSR set to: 0
  1238                           ;main.c: 54:     motorL.PWMperiod=200;
  1239   001952  0E00               	movlw	0
  1240   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1241   001956  0EC8               	movlw	200
  1242   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1243   00195A                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 55:     motorR.power=0;
  1246   00195A  0E00               	movlw	0
  1247   00195C  0101               	movlb	1	; () banked
  1248   00195E  6FBC               	movwf	_motorR& (0+255),b
  1249   001960                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 56:     motorR.direction=1;
  1252   001960  0E01               	movlw	1
  1253   001962  6FBD               	movwf	(_motorR+1)& (0+255),b
  1254   001964                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 57:     motorR.brakemode=1;
  1257   001964  0E01               	movlw	1
  1258   001966  6FBE               	movwf	(_motorR+2)& (0+255),b
  1259   001968                     
  1260                           ; BSR set to: 1
  1261                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1262   001968  0E25               	movlw	37
  1263   00196A  6FC1               	movwf	(_motorR+5)& (0+255),b
  1264   00196C  0E0F               	movlw	15
  1265   00196E  6FC2               	movwf	(_motorR+6)& (0+255),b
  1266   001970                     
  1267                           ; BSR set to: 1
  1268                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1269   001970  0E21               	movlw	33
  1270   001972  6FC3               	movwf	(_motorR+7)& (0+255),b
  1271   001974  0E0F               	movlw	15
  1272   001976  6FC4               	movwf	(_motorR+8)& (0+255),b
  1273   001978                     
  1274                           ; BSR set to: 1
  1275                           ;main.c: 60:     motorR.PWMperiod=200;
  1276   001978  0E00               	movlw	0
  1277   00197A  6FC0               	movwf	(_motorR+4)& (0+255),b
  1278   00197C  0EC8               	movlw	200
  1279   00197E  6FBF               	movwf	(_motorR+3)& (0+255),b
  1280   001980                     
  1281                           ; BSR set to: 1
  1282                           ;main.c: 61:     int consecuitive=0;
  1283   001980  0E00               	movlw	0
  1284   001982  0100               	movlb	0	; () banked
  1285   001984  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1286   001986  0E00               	movlw	0
  1287   001988  6FE8               	movwf	main@consecuitive& (0+255),b
  1288   00198A                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 62:     int prev_colour =0;
  1291   00198A  0E00               	movlw	0
  1292   00198C  6FED               	movwf	(main@prev_colour+1)& (0+255),b
  1293   00198E  0E00               	movlw	0
  1294   001990  6FEC               	movwf	main@prev_colour& (0+255),b
  1295   001992                     
  1296                           ; BSR set to: 0
  1297                           ;main.c: 63:     int run_flag=1;
  1298   001992  0E00               	movlw	0
  1299   001994  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1300   001996  0E01               	movlw	1
  1301   001998  6FE6               	movwf	main@run_flag& (0+255),b
  1302   00199A                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 64:     move_count=-1;
  1305   00199A  69F0               	setf	_move_count& (0+255),b	;volatile
  1306   00199C  69F1               	setf	(_move_count+1)& (0+255),b	;volatile
  1307   00199E                     l391:
  1308   00199E  B48E               	btfsc	142,2,c	;volatile
  1309   0019A0  EFD4  F00C         	goto	u4461
  1310   0019A4  EFD6  F00C         	goto	u4460
  1311   0019A8                     u4461:
  1312   0019A8  EFCF  F00C         	goto	l391
  1313   0019AC                     u4460:
  1314   0019AC                     
  1315                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1316   0019AC  0E52               	movlw	82
  1317   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1318   0019B0  0E2B               	movlw	43
  1319   0019B2  6E59               	movwf	??_main^0,c
  1320   0019B4  0E00               	movlw	0
  1321   0019B6                     u4747:
  1322   0019B6  2EE8               	decfsz	wreg,f,c
  1323   0019B8  D7FE               	bra	u4747
  1324   0019BA  2E59               	decfsz	??_main^0,f,c
  1325   0019BC  D7FC               	bra	u4747
  1326   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1327   0019C0  D7FA               	bra	u4747
  1328   0019C2  D000               	nop2	
  1329   0019C4                     
  1330                           ;main.c: 67:     TMR0H=0;
  1331   0019C4  0E00               	movlw	0
  1332   0019C6  6ED4               	movwf	212,c	;volatile
  1333   0019C8                     
  1334                           ;main.c: 68:     TMR0L=0;
  1335   0019C8  0E00               	movlw	0
  1336   0019CA  6ED3               	movwf	211,c	;volatile
  1337                           
  1338                           ;main.c: 69:     while (run_flag)
  1339   0019CC  EF16  F00F         	goto	l4862
  1340   0019D0                     l4724:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1344   0019D0  0EF5               	movlw	low _motorL
  1345   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1346   0019D4  0E00               	movlw	high _motorL
  1347   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1348   0019D8  0EBC               	movlw	low _motorR
  1349   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1350   0019DC  0E01               	movlw	high _motorR
  1351   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1352   0019E0  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  1353   0019E4                     
  1354                           ;main.c: 77:         readColours(&vals);
  1355   0019E4  0EC5               	movlw	low _vals
  1356   0019E6  6E0C               	movwf	readColours@vals^0,c
  1357   0019E8  0E01               	movlw	high _vals
  1358   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1359   0019EC  EC26  F022         	call	_readColours	;wreg free
  1360   0019F0                     
  1361                           ;main.c: 80:         colour_rel(&vals, &rel);
  1362   0019F0  0EC5               	movlw	low _vals
  1363   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1364   0019F4  0E01               	movlw	high _vals
  1365   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1366   0019F8  0EB0               	movlw	low _rel
  1367   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1368   0019FC  0E01               	movlw	high _rel
  1369   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1370   001A00  EC64  F015         	call	_colour_rel	;wreg free
  1371   001A04                     
  1372                           ;main.c: 83:         if (vals.L>=500){
  1373   001A04  0101               	movlb	1	; () banked
  1374   001A06  BFCC               	btfsc	(_vals+7)& (0+255),7,b
  1375   001A08  EF0F  F00D         	goto	u4471
  1376   001A0C  0EF4               	movlw	244
  1377   001A0E  5DCB               	subwf	(_vals+6)& (0+255),w,b
  1378   001A10  0E01               	movlw	1
  1379   001A12  59CC               	subwfb	(_vals+7)& (0+255),w,b
  1380   001A14  A0D8               	btfss	status,0,c
  1381   001A16  EF0F  F00D         	goto	u4471
  1382   001A1A  EF11  F00D         	goto	u4470
  1383   001A1E                     u4471:
  1384   001A1E  EFDC  F00E         	goto	l4846
  1385   001A22                     u4470:
  1386   001A22                     
  1387                           ; BSR set to: 1
  1388                           ;main.c: 84:             move_count++;
  1389   001A22  0100               	movlb	0	; () banked
  1390   001A24  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1391   001A26  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1392   001A28                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 85:             getTMR0val();
  1395   001A28  EC81  F026         	call	_getTMR0val	;wreg free
  1396   001A2C                     
  1397                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1398   001A2C  0EF5               	movlw	low _motorL
  1399   001A2E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1400   001A30  0E00               	movlw	high _motorL
  1401   001A32  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1402   001A34  0EBC               	movlw	low _motorR
  1403   001A36  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1404   001A38  0E01               	movlw	high _motorR
  1405   001A3A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1406   001A3C  EC82  F022         	call	_Forwardhalfblock	;wreg free
  1407   001A40                     
  1408                           ;main.c: 89:             stop(&motorL, &motorR);
  1409   001A40  0EF5               	movlw	low _motorL
  1410   001A42  6E14               	movwf	stop@mL^0,c
  1411   001A44  0E00               	movlw	high _motorL
  1412   001A46  6E15               	movwf	(stop@mL+1)^0,c
  1413   001A48  0EBC               	movlw	low _motorR
  1414   001A4A  6E16               	movwf	stop@mR^0,c
  1415   001A4C  0E01               	movlw	high _motorR
  1416   001A4E  6E17               	movwf	(stop@mR+1)^0,c
  1417   001A50  EC05  F021         	call	_stop	;wreg free
  1418   001A54                     
  1419                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1420   001A54  0E11               	movlw	17
  1421   001A56  6E5A               	movwf	(??_main+1)^0,c
  1422   001A58  0E3C               	movlw	60
  1423   001A5A  6E59               	movwf	??_main^0,c
  1424   001A5C  0ECB               	movlw	203
  1425   001A5E                     u4757:
  1426   001A5E  2EE8               	decfsz	wreg,f,c
  1427   001A60  D7FE               	bra	u4757
  1428   001A62  2E59               	decfsz	??_main^0,f,c
  1429   001A64  D7FC               	bra	u4757
  1430   001A66  2E5A               	decfsz	(??_main+1)^0,f,c
  1431   001A68  D7FA               	bra	u4757
  1432   001A6A  F000               	nop	
  1433                           
  1434                           ;main.c: 97:             while (consecuitive<20){
  1435   001A6C  EF6B  F00D         	goto	l4754
  1436   001A70                     l4742:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1440   001A70  0EC5               	movlw	low _vals
  1441   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1442   001A74  0E01               	movlw	high _vals
  1443   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1444   001A78  0EB0               	movlw	low _rel
  1445   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1446   001A7C  0E01               	movlw	high _rel
  1447   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1448   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1449   001A84  C04B  F0EA         	movff	?_Colour_decider,main@colour
  1450   001A88  C04C  F0EB         	movff	?_Colour_decider+1,main@colour+1
  1451   001A8C                     
  1452                           ;main.c: 99:                 if (colour==prev_colour){
  1453   001A8C  0100               	movlb	0	; () banked
  1454   001A8E  51EC               	movf	main@prev_colour& (0+255),w,b
  1455   001A90  19EA               	xorwf	main@colour& (0+255),w,b
  1456   001A92  E107               	bnz	u4481
  1457   001A94  51ED               	movf	(main@prev_colour+1)& (0+255),w,b
  1458   001A96  19EB               	xorwf	(main@colour+1)& (0+255),w,b
  1459   001A98  A4D8               	btfss	status,2,c
  1460   001A9A  EF51  F00D         	goto	u4481
  1461   001A9E  EF53  F00D         	goto	u4480
  1462   001AA2                     u4481:
  1463   001AA2  EF57  F00D         	goto	l4748
  1464   001AA6                     u4480:
  1465   001AA6                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 100:                     consecuitive++;
  1468   001AA6  4BE8               	infsnz	main@consecuitive& (0+255),f,b
  1469   001AA8  2BE9               	incf	(main@consecuitive+1)& (0+255),f,b
  1470                           
  1471                           ;main.c: 101:                 }
  1472   001AAA  EF5B  F00D         	goto	l4750
  1473   001AAE                     l4748:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 103:                     consecuitive=0;
  1477   001AAE  0E00               	movlw	0
  1478   001AB0  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1479   001AB2  0E00               	movlw	0
  1480   001AB4  6FE8               	movwf	main@consecuitive& (0+255),b
  1481   001AB6                     l4750:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;main.c: 105:                 prev_colour=colour;
  1485   001AB6  C0EA  F0EC         	movff	main@colour,main@prev_colour
  1486   001ABA  C0EB  F0ED         	movff	main@colour+1,main@prev_colour+1
  1487   001ABE                     
  1488                           ; BSR set to: 0
  1489                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1490   001ABE  0E05               	movlw	5
  1491   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1492   001AC2  0E0F               	movlw	15
  1493   001AC4  6E59               	movwf	??_main^0,c
  1494   001AC6  0EF1               	movlw	241
  1495   001AC8                     u4767:
  1496   001AC8  2EE8               	decfsz	wreg,f,c
  1497   001ACA  D7FE               	bra	u4767
  1498   001ACC  2E59               	decfsz	??_main^0,f,c
  1499   001ACE  D7FC               	bra	u4767
  1500   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1501   001AD2  D7FA               	bra	u4767
  1502   001AD4  F000               	nop	
  1503   001AD6                     l4754:
  1504                           
  1505                           ;main.c: 97:             while (consecuitive<20){
  1506   001AD6  0100               	movlb	0	; () banked
  1507   001AD8  BFE9               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1508   001ADA  EF78  F00D         	goto	u4491
  1509   001ADE  51E9               	movf	(main@consecuitive+1)& (0+255),w,b
  1510   001AE0  E109               	bnz	u4490
  1511   001AE2  0E14               	movlw	20
  1512   001AE4  5DE8               	subwf	main@consecuitive& (0+255),w,b
  1513   001AE6  A0D8               	btfss	status,0,c
  1514   001AE8  EF78  F00D         	goto	u4491
  1515   001AEC  EF7A  F00D         	goto	u4490
  1516   001AF0                     u4491:
  1517   001AF0  EF38  F00D         	goto	l4742
  1518   001AF4                     u4490:
  1519   001AF4                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 108:             consecuitive=0;
  1522   001AF4  0E00               	movlw	0
  1523   001AF6  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1524   001AF8  0E00               	movlw	0
  1525   001AFA  6FE8               	movwf	main@consecuitive& (0+255),b
  1526   001AFC                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 109:             int temp=TMR0L;
  1529   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1530   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1531   001B02                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1534   001B02  0E80               	movlw	low main@buf
  1535   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1536   001B06  0E00               	movlw	high main@buf
  1537   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1538   001B0A  0E01               	movlw	low STR_1
  1539   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1540   001B0E  0E0E               	movlw	high STR_1
  1541   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1542   001B12  C1C5  F064         	movff	_vals,?_sprintf+4
  1543   001B16  C1C6  F065         	movff	_vals+1,?_sprintf+5
  1544   001B1A  C1C7  F066         	movff	_vals+2,?_sprintf+6
  1545   001B1E  C1C8  F067         	movff	_vals+3,?_sprintf+7
  1546   001B22  C1C9  F068         	movff	_vals+4,?_sprintf+8
  1547   001B26  C1CA  F069         	movff	_vals+5,?_sprintf+9
  1548   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1549   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1550   001B30  EC8E  F023         	call	_sprintf	;wreg free
  1551   001B34                     
  1552                           ;main.c: 113:             sendStringSerial4(buf);
  1553   001B34  0E80               	movlw	low main@buf
  1554   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1555   001B38  0E00               	movlw	high main@buf
  1556   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1557   001B3C  EC2B  F026         	call	_sendStringSerial4	;wreg free
  1558   001B40                     
  1559                           ;main.c: 115:             if (prev_colour==1){
  1560   001B40  0100               	movlb	0	; () banked
  1561   001B42  05EC               	decf	main@prev_colour& (0+255),w,b
  1562   001B44  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1563   001B46  A4D8               	btfss	status,2,c
  1564   001B48  EFA8  F00D         	goto	u4501
  1565   001B4C  EFAA  F00D         	goto	u4500
  1566   001B50                     u4501:
  1567   001B50  EFC3  F00D         	goto	l4774
  1568   001B54                     u4500:
  1569   001B54                     
  1570                           ; BSR set to: 0
  1571                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1572   001B54  0EF5               	movlw	low _motorL
  1573   001B56  6E20               	movwf	RedMove@mL^0,c
  1574   001B58  0E00               	movlw	high _motorL
  1575   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1576   001B5C  0EBC               	movlw	low _motorR
  1577   001B5E  6E22               	movwf	RedMove@mR^0,c
  1578   001B60  0E01               	movlw	high _motorR
  1579   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1580   001B64  ECD1  F025         	call	_RedMove	;wreg free
  1581   001B68                     
  1582                           ;main.c: 117:                 TMR0H=0;
  1583   001B68  0E00               	movlw	0
  1584   001B6A  6ED4               	movwf	212,c	;volatile
  1585   001B6C                     
  1586                           ;main.c: 118:                 TMR0L=0;
  1587   001B6C  0E00               	movlw	0
  1588   001B6E  6ED3               	movwf	211,c	;volatile
  1589   001B70                     
  1590                           ;main.c: 119:                 WayBack[move_count]=1;
  1591   001B70  0E5E               	movlw	low _WayBack
  1592   001B72  0100               	movlb	0	; () banked
  1593   001B74  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1594   001B76  6ED9               	movwf	fsr2l,c
  1595   001B78  0E01               	movlw	high _WayBack
  1596   001B7A  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1597   001B7C  6EDA               	movwf	fsr2h,c
  1598   001B7E  0E01               	movlw	1
  1599   001B80  6EDF               	movwf	indf2,c
  1600                           
  1601                           ;main.c: 120:             }
  1602   001B82  EF16  F00F         	goto	l4862
  1603   001B86                     l4774:
  1604                           
  1605                           ; BSR set to: 0
  1606   001B86  0E02               	movlw	2
  1607   001B88  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1608   001B8A  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1609   001B8C  A4D8               	btfss	status,2,c
  1610   001B8E  EFCB  F00D         	goto	u4511
  1611   001B92  EFCD  F00D         	goto	u4510
  1612   001B96                     u4511:
  1613   001B96  EFE6  F00D         	goto	l4784
  1614   001B9A                     u4510:
  1615   001B9A                     
  1616                           ; BSR set to: 0
  1617                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1618   001B9A  0EF5               	movlw	low _motorL
  1619   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1620   001B9E  0E00               	movlw	high _motorL
  1621   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1622   001BA2  0EBC               	movlw	low _motorR
  1623   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1624   001BA6  0E01               	movlw	high _motorR
  1625   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1626   001BAA  ECB7  F023         	call	_OrangeMove	;wreg free
  1627   001BAE                     
  1628                           ;main.c: 123:                 TMR0H=0;
  1629   001BAE  0E00               	movlw	0
  1630   001BB0  6ED4               	movwf	212,c	;volatile
  1631   001BB2                     
  1632                           ;main.c: 124:                 TMR0L=0;
  1633   001BB2  0E00               	movlw	0
  1634   001BB4  6ED3               	movwf	211,c	;volatile
  1635   001BB6                     
  1636                           ;main.c: 125:                 WayBack[move_count]=2;
  1637   001BB6  0E5E               	movlw	low _WayBack
  1638   001BB8  0100               	movlb	0	; () banked
  1639   001BBA  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1640   001BBC  6ED9               	movwf	fsr2l,c
  1641   001BBE  0E01               	movlw	high _WayBack
  1642   001BC0  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1643   001BC2  6EDA               	movwf	fsr2h,c
  1644   001BC4  0E02               	movlw	2
  1645   001BC6  6EDF               	movwf	indf2,c
  1646                           
  1647                           ;main.c: 126:             }
  1648   001BC8  EF16  F00F         	goto	l4862
  1649   001BCC                     l4784:
  1650                           
  1651                           ; BSR set to: 0
  1652   001BCC  0E03               	movlw	3
  1653   001BCE  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1654   001BD0  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1655   001BD2  A4D8               	btfss	status,2,c
  1656   001BD4  EFEE  F00D         	goto	u4521
  1657   001BD8  EFF0  F00D         	goto	u4520
  1658   001BDC                     u4521:
  1659   001BDC  EF09  F00E         	goto	l4794
  1660   001BE0                     u4520:
  1661   001BE0                     
  1662                           ; BSR set to: 0
  1663                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1664   001BE0  0EF5               	movlw	low _motorL
  1665   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1666   001BE4  0E00               	movlw	high _motorL
  1667   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1668   001BE8  0EBC               	movlw	low _motorR
  1669   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1670   001BEC  0E01               	movlw	high _motorR
  1671   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1672   001BF0  EC32  F024         	call	_YellowMove	;wreg free
  1673   001BF4                     
  1674                           ;main.c: 129:                 TMR0H=0;
  1675   001BF4  0E00               	movlw	0
  1676   001BF6  6ED4               	movwf	212,c	;volatile
  1677   001BF8                     
  1678                           ;main.c: 130:                 TMR0L=0;
  1679   001BF8  0E00               	movlw	0
  1680   001BFA  6ED3               	movwf	211,c	;volatile
  1681   001BFC                     
  1682                           ;main.c: 131:                 WayBack[move_count]=3;
  1683   001BFC  0E5E               	movlw	low _WayBack
  1684   001BFE  0100               	movlb	0	; () banked
  1685   001C00  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1686   001C02  6ED9               	movwf	fsr2l,c
  1687   001C04  0E01               	movlw	high _WayBack
  1688   001C06  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1689   001C08  6EDA               	movwf	fsr2h,c
  1690   001C0A  0E03               	movlw	3
  1691   001C0C  6EDF               	movwf	indf2,c
  1692                           
  1693                           ;main.c: 132:             }
  1694   001C0E  EF16  F00F         	goto	l4862
  1695   001C12                     l4794:
  1696                           
  1697                           ; BSR set to: 0
  1698   001C12  0E04               	movlw	4
  1699   001C14  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1700   001C16  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1701   001C18  A4D8               	btfss	status,2,c
  1702   001C1A  EF11  F00E         	goto	u4531
  1703   001C1E  EF13  F00E         	goto	u4530
  1704   001C22                     u4531:
  1705   001C22  EF2C  F00E         	goto	l4804
  1706   001C26                     u4530:
  1707   001C26                     
  1708                           ; BSR set to: 0
  1709                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1710   001C26  0EF5               	movlw	low _motorL
  1711   001C28  6E20               	movwf	BlueMove@mL^0,c
  1712   001C2A  0E00               	movlw	high _motorL
  1713   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1714   001C2E  0EBC               	movlw	low _motorR
  1715   001C30  6E22               	movwf	BlueMove@mR^0,c
  1716   001C32  0E01               	movlw	high _motorR
  1717   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1718   001C36  ECF3  F021         	call	_BlueMove	;wreg free
  1719   001C3A                     
  1720                           ;main.c: 135:                 TMR0H=0;
  1721   001C3A  0E00               	movlw	0
  1722   001C3C  6ED4               	movwf	212,c	;volatile
  1723   001C3E                     
  1724                           ;main.c: 136:                 TMR0L=0;
  1725   001C3E  0E00               	movlw	0
  1726   001C40  6ED3               	movwf	211,c	;volatile
  1727   001C42                     
  1728                           ;main.c: 137:                 WayBack[move_count]=4;
  1729   001C42  0E5E               	movlw	low _WayBack
  1730   001C44  0100               	movlb	0	; () banked
  1731   001C46  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1732   001C48  6ED9               	movwf	fsr2l,c
  1733   001C4A  0E01               	movlw	high _WayBack
  1734   001C4C  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1735   001C4E  6EDA               	movwf	fsr2h,c
  1736   001C50  0E04               	movlw	4
  1737   001C52  6EDF               	movwf	indf2,c
  1738                           
  1739                           ;main.c: 138:             }
  1740   001C54  EF16  F00F         	goto	l4862
  1741   001C58                     l4804:
  1742                           
  1743                           ; BSR set to: 0
  1744   001C58  0E05               	movlw	5
  1745   001C5A  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1746   001C5C  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1747   001C5E  A4D8               	btfss	status,2,c
  1748   001C60  EF34  F00E         	goto	u4541
  1749   001C64  EF36  F00E         	goto	u4540
  1750   001C68                     u4541:
  1751   001C68  EF4F  F00E         	goto	l4814
  1752   001C6C                     u4540:
  1753   001C6C                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1756   001C6C  0EF5               	movlw	low _motorL
  1757   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1758   001C70  0E00               	movlw	high _motorL
  1759   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1760   001C74  0EBC               	movlw	low _motorR
  1761   001C76  6E22               	movwf	GreenMove@mR^0,c
  1762   001C78  0E01               	movlw	high _motorR
  1763   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1764   001C7C  ECF0  F025         	call	_GreenMove	;wreg free
  1765   001C80                     
  1766                           ;main.c: 141:                 TMR0H=0;
  1767   001C80  0E00               	movlw	0
  1768   001C82  6ED4               	movwf	212,c	;volatile
  1769   001C84                     
  1770                           ;main.c: 142:                 TMR0L=0;
  1771   001C84  0E00               	movlw	0
  1772   001C86  6ED3               	movwf	211,c	;volatile
  1773   001C88                     
  1774                           ;main.c: 143:                 WayBack[move_count]=5;
  1775   001C88  0E5E               	movlw	low _WayBack
  1776   001C8A  0100               	movlb	0	; () banked
  1777   001C8C  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1778   001C8E  6ED9               	movwf	fsr2l,c
  1779   001C90  0E01               	movlw	high _WayBack
  1780   001C92  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1781   001C94  6EDA               	movwf	fsr2h,c
  1782   001C96  0E05               	movlw	5
  1783   001C98  6EDF               	movwf	indf2,c
  1784                           
  1785                           ;main.c: 144:             }
  1786   001C9A  EF16  F00F         	goto	l4862
  1787   001C9E                     l4814:
  1788                           
  1789                           ; BSR set to: 0
  1790   001C9E  0E06               	movlw	6
  1791   001CA0  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1792   001CA2  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1793   001CA4  A4D8               	btfss	status,2,c
  1794   001CA6  EF57  F00E         	goto	u4551
  1795   001CAA  EF59  F00E         	goto	u4550
  1796   001CAE                     u4551:
  1797   001CAE  EF72  F00E         	goto	l4824
  1798   001CB2                     u4550:
  1799   001CB2                     
  1800                           ; BSR set to: 0
  1801                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1802   001CB2  0EF5               	movlw	low _motorL
  1803   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1804   001CB6  0E00               	movlw	high _motorL
  1805   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1806   001CBA  0EBC               	movlw	low _motorR
  1807   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1808   001CBE  0E01               	movlw	high _motorR
  1809   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1810   001CC2  ECE0  F023         	call	_LightBlueMove	;wreg free
  1811   001CC6                     
  1812                           ;main.c: 147:                 TMR0H=0;
  1813   001CC6  0E00               	movlw	0
  1814   001CC8  6ED4               	movwf	212,c	;volatile
  1815   001CCA                     
  1816                           ;main.c: 148:                 TMR0L=0;
  1817   001CCA  0E00               	movlw	0
  1818   001CCC  6ED3               	movwf	211,c	;volatile
  1819   001CCE                     
  1820                           ;main.c: 149:                 WayBack[move_count]=6;
  1821   001CCE  0E5E               	movlw	low _WayBack
  1822   001CD0  0100               	movlb	0	; () banked
  1823   001CD2  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1824   001CD4  6ED9               	movwf	fsr2l,c
  1825   001CD6  0E01               	movlw	high _WayBack
  1826   001CD8  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1827   001CDA  6EDA               	movwf	fsr2h,c
  1828   001CDC  0E06               	movlw	6
  1829   001CDE  6EDF               	movwf	indf2,c
  1830                           
  1831                           ;main.c: 150:             }
  1832   001CE0  EF16  F00F         	goto	l4862
  1833   001CE4                     l4824:
  1834                           
  1835                           ; BSR set to: 0
  1836   001CE4  0E07               	movlw	7
  1837   001CE6  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1838   001CE8  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1839   001CEA  A4D8               	btfss	status,2,c
  1840   001CEC  EF7A  F00E         	goto	u4561
  1841   001CF0  EF7C  F00E         	goto	u4560
  1842   001CF4                     u4561:
  1843   001CF4  EF95  F00E         	goto	l4834
  1844   001CF8                     u4560:
  1845   001CF8                     
  1846                           ; BSR set to: 0
  1847                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  1848   001CF8  0EF5               	movlw	low _motorL
  1849   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1850   001CFC  0E00               	movlw	high _motorL
  1851   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1852   001D00  0EBC               	movlw	low _motorR
  1853   001D02  6E22               	movwf	PinkMove@mR^0,c
  1854   001D04  0E01               	movlw	high _motorR
  1855   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1856   001D08  EC5B  F024         	call	_PinkMove	;wreg free
  1857   001D0C                     
  1858                           ;main.c: 153:                 TMR0H=0;
  1859   001D0C  0E00               	movlw	0
  1860   001D0E  6ED4               	movwf	212,c	;volatile
  1861   001D10                     
  1862                           ;main.c: 154:                 TMR0L=0;
  1863   001D10  0E00               	movlw	0
  1864   001D12  6ED3               	movwf	211,c	;volatile
  1865   001D14                     
  1866                           ;main.c: 155:                 WayBack[move_count]=7;
  1867   001D14  0E5E               	movlw	low _WayBack
  1868   001D16  0100               	movlb	0	; () banked
  1869   001D18  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1870   001D1A  6ED9               	movwf	fsr2l,c
  1871   001D1C  0E01               	movlw	high _WayBack
  1872   001D1E  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1873   001D20  6EDA               	movwf	fsr2h,c
  1874   001D22  0E07               	movlw	7
  1875   001D24  6EDF               	movwf	indf2,c
  1876                           
  1877                           ;main.c: 156:             }
  1878   001D26  EF16  F00F         	goto	l4862
  1879   001D2A                     l4834:
  1880                           
  1881                           ; BSR set to: 0
  1882   001D2A  0E0A               	movlw	10
  1883   001D2C  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1884   001D2E  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1885   001D30  A4D8               	btfss	status,2,c
  1886   001D32  EF9D  F00E         	goto	u4571
  1887   001D36  EF9F  F00E         	goto	u4570
  1888   001D3A                     u4571:
  1889   001D3A  EFAB  F00E         	goto	l4838
  1890   001D3E                     u4570:
  1891   001D3E                     
  1892                           ; BSR set to: 0
  1893                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  1894   001D3E  0EF5               	movlw	low _motorL
  1895   001D40  6E20               	movwf	RetryMove@mL^0,c
  1896   001D42  0E00               	movlw	high _motorL
  1897   001D44  6E21               	movwf	(RetryMove@mL+1)^0,c
  1898   001D46  0EBC               	movlw	low _motorR
  1899   001D48  6E22               	movwf	RetryMove@mR^0,c
  1900   001D4A  0E01               	movlw	high _motorR
  1901   001D4C  6E23               	movwf	(RetryMove@mR+1)^0,c
  1902   001D4E  EC58  F026         	call	_RetryMove	;wreg free
  1903                           
  1904                           ;main.c: 159:             }
  1905   001D52  EF16  F00F         	goto	l4862
  1906   001D56                     l4838:
  1907                           
  1908                           ; BSR set to: 0
  1909   001D56  51EC               	movf	main@prev_colour& (0+255),w,b
  1910   001D58  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1911   001D5A  A4D8               	btfss	status,2,c
  1912   001D5C  EFB2  F00E         	goto	u4581
  1913   001D60  EFB4  F00E         	goto	u4580
  1914   001D64                     u4581:
  1915   001D64  EFDA  F00E         	goto	l413
  1916   001D68                     u4580:
  1917   001D68                     
  1918                           ; BSR set to: 0
  1919                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  1920   001D68  0EF5               	movlw	low _motorL
  1921   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1922   001D6C  0E00               	movlw	high _motorL
  1923   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1924   001D70  0EBC               	movlw	low _motorR
  1925   001D72  6E22               	movwf	BlueMove@mR^0,c
  1926   001D74  0E01               	movlw	high _motorR
  1927   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1928   001D78  ECF3  F021         	call	_BlueMove	;wreg free
  1929   001D7C                     
  1930                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  1931   001D7C  9ED5               	bcf	213,7,c	;volatile
  1932                           
  1933                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  1934   001D7E  0E5E               	movlw	low _WayBack
  1935   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1936   001D82  0E01               	movlw	high _WayBack
  1937   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1938   001D86  0E00               	movlw	low _Time_forward
  1939   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1940   001D8A  0E02               	movlw	high _Time_forward
  1941   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1942   001D8E  ECFB  F016         	call	_go_Home	;wreg free
  1943                           
  1944                           ;main.c: 164:                 stop(&motorL, &motorR);
  1945   001D92  0EF5               	movlw	low _motorL
  1946   001D94  6E14               	movwf	stop@mL^0,c
  1947   001D96  0E00               	movlw	high _motorL
  1948   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1949   001D9A  0EBC               	movlw	low _motorR
  1950   001D9C  6E16               	movwf	stop@mR^0,c
  1951   001D9E  0E01               	movlw	high _motorR
  1952   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1953   001DA2  EC05  F021         	call	_stop	;wreg free
  1954   001DA6                     l4844:
  1955                           
  1956                           ;main.c: 165:                 run_flag=0;
  1957   001DA6  0E00               	movlw	0
  1958   001DA8  0100               	movlb	0	; () banked
  1959   001DAA  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1960   001DAC  0E00               	movlw	0
  1961   001DAE  6FE6               	movwf	main@run_flag& (0+255),b
  1962   001DB0  EF16  F00F         	goto	l4862
  1963   001DB4                     l413:
  1964                           
  1965                           ; BSR set to: 0
  1966   001DB4  EF16  F00F         	goto	l4862
  1967   001DB8                     l4846:
  1968                           
  1969                           ; BSR set to: 1
  1970   001DB8  0100               	movlb	0	; () banked
  1971   001DBA  51F2               	movf	_lost_flag& (0+255),w,b
  1972   001DBC  11F3               	iorwf	(_lost_flag+1)& (0+255),w,b
  1973   001DBE  B4D8               	btfsc	status,2,c
  1974   001DC0  EFE4  F00E         	goto	u4591
  1975   001DC4  EFE6  F00E         	goto	u4590
  1976   001DC8                     u4591:
  1977   001DC8  EF16  F00F         	goto	l4862
  1978   001DCC                     u4590:
  1979   001DCC                     
  1980                           ; BSR set to: 0
  1981                           ;main.c: 171:             move_count++;
  1982   001DCC  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1983   001DCE  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1984   001DD0                     
  1985                           ; BSR set to: 0
  1986                           ;main.c: 172:             Time_forward[move_count]=65535;
  1987   001DD0  90D8               	bcf	status,0,c
  1988   001DD2  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  1989   001DD4  6ED9               	movwf	fsr2l,c
  1990   001DD6  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1991   001DD8  6EDA               	movwf	fsr2h,c
  1992   001DDA  0E00               	movlw	low _Time_forward
  1993   001DDC  26D9               	addwf	fsr2l,f,c
  1994   001DDE  0E02               	movlw	high _Time_forward
  1995   001DE0  22DA               	addwfc	fsr2h,f,c
  1996   001DE2  0EFF               	movlw	255
  1997   001DE4  6EDE               	movwf	postinc2,c
  1998   001DE6  0EFF               	movlw	255
  1999   001DE8  6EDD               	movwf	postdec2,c
  2000   001DEA                     
  2001                           ; BSR set to: 0
  2002                           ;main.c: 173:             BlueMove(&motorL, &motorR);
  2003   001DEA  0EF5               	movlw	low _motorL
  2004   001DEC  6E20               	movwf	BlueMove@mL^0,c
  2005   001DEE  0E00               	movlw	high _motorL
  2006   001DF0  6E21               	movwf	(BlueMove@mL+1)^0,c
  2007   001DF2  0EBC               	movlw	low _motorR
  2008   001DF4  6E22               	movwf	BlueMove@mR^0,c
  2009   001DF6  0E01               	movlw	high _motorR
  2010   001DF8  6E23               	movwf	(BlueMove@mR+1)^0,c
  2011   001DFA  ECF3  F021         	call	_BlueMove	;wreg free
  2012   001DFE                     
  2013                           ;main.c: 174:             T0CON0bits.T0EN=0;
  2014   001DFE  9ED5               	bcf	213,7,c	;volatile
  2015   001E00                     
  2016                           ;main.c: 175:             go_Home(WayBack, Time_forward);
  2017   001E00  0E5E               	movlw	low _WayBack
  2018   001E02  6E24               	movwf	go_Home@WayBack^0,c
  2019   001E04  0E01               	movlw	high _WayBack
  2020   001E06  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2021   001E08  0E00               	movlw	low _Time_forward
  2022   001E0A  6E26               	movwf	go_Home@Time_forward^0,c
  2023   001E0C  0E02               	movlw	high _Time_forward
  2024   001E0E  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2025   001E10  ECFB  F016         	call	_go_Home	;wreg free
  2026   001E14                     
  2027                           ;main.c: 176:             stop(&motorL, &motorR);
  2028   001E14  0EF5               	movlw	low _motorL
  2029   001E16  6E14               	movwf	stop@mL^0,c
  2030   001E18  0E00               	movlw	high _motorL
  2031   001E1A  6E15               	movwf	(stop@mL+1)^0,c
  2032   001E1C  0EBC               	movlw	low _motorR
  2033   001E1E  6E16               	movwf	stop@mR^0,c
  2034   001E20  0E01               	movlw	high _motorR
  2035   001E22  6E17               	movwf	(stop@mR+1)^0,c
  2036   001E24  EC05  F021         	call	_stop	;wreg free
  2037   001E28  EFD3  F00E         	goto	l4844
  2038   001E2C                     l4862:
  2039                           
  2040                           ;main.c: 69:     while (run_flag)
  2041   001E2C  0100               	movlb	0	; () banked
  2042   001E2E  51E6               	movf	main@run_flag& (0+255),w,b
  2043   001E30  11E7               	iorwf	(main@run_flag+1)& (0+255),w,b
  2044   001E32  A4D8               	btfss	status,2,c
  2045   001E34  EF1E  F00F         	goto	u4601
  2046   001E38  EF20  F00F         	goto	u4600
  2047   001E3C                     u4601:
  2048   001E3C  EFE8  F00C         	goto	l4724
  2049   001E40                     u4600:
  2050   001E40                     
  2051                           ; BSR set to: 0
  2052   001E40  EF17  F000         	goto	start
  2053   001E44                     __end_of_main:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _sprintf *****************
  2057 ;; Defined at:
  2058 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2061 ;;		 -> main@buf(100), 
  2062 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2063 ;;		 -> STR_1(36), 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2066 ;;  ap              2   12[BANK0 ] PTR void [1]
  2067 ;;		 -> ?_sprintf(2), 
  2068 ;;  ret             2    0        int 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    0[BANK0 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2078 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;Total ram usage:       25 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 8
  2085 ;; This function calls:
  2086 ;;		_vfprintf
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text1
  2093   00471C                     __ptext1:
  2094                           	callstack 0
  2095   00471C                     _sprintf:
  2096                           	callstack 22
  2097   00471C  0E64               	movlw	low (?_sprintf+4)
  2098   00471E  0100               	movlb	0	; () banked
  2099   004720  6F6C               	movwf	sprintf@ap& (0+255),b
  2100   004722  0E00               	movlw	high (?_sprintf+4)
  2101   004724  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2102   004726  C060  F06E         	movff	sprintf@s,sprintf@f
  2103   00472A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2104   00472E                     
  2105                           ; BSR set to: 0
  2106   00472E  0E00               	movlw	0
  2107   004730  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2108   004732  0E00               	movlw	0
  2109   004734  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2110   004736                     
  2111                           ; BSR set to: 0
  2112   004736  0E00               	movlw	0
  2113   004738  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2114   00473A  0E00               	movlw	0
  2115   00473C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2116   00473E                     
  2117                           ; BSR set to: 0
  2118   00473E  0E6E               	movlw	low sprintf@f
  2119   004740  6E51               	movwf	vfprintf@fp^0,c
  2120   004742  0E00               	movlw	high sprintf@f
  2121   004744  6E52               	movwf	(vfprintf@fp+1)^0,c
  2122   004746  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2123   00474A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2124   00474E  0E6C               	movlw	low sprintf@ap
  2125   004750  6E55               	movwf	vfprintf@ap^0,c
  2126   004752  0E00               	movlw	high sprintf@ap
  2127   004754  6E56               	movwf	(vfprintf@ap+1)^0,c
  2128   004756  EC24  F025         	call	_vfprintf	;wreg free
  2129   00475A  0100               	movlb	0	; () banked
  2130   00475C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2131   00475E  2560               	addwf	sprintf@s& (0+255),w,b
  2132   004760  6ED9               	movwf	fsr2l,c
  2133   004762  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2134   004764  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2135   004766  6EDA               	movwf	fsr2h,c
  2136   004768  0E00               	movlw	0
  2137   00476A  6EDF               	movwf	indf2,c
  2138   00476C                     
  2139                           ; BSR set to: 0
  2140   00476C  0012               	return		;funcret
  2141   00476E                     __end_of_sprintf:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _vfprintf *****************
  2145 ;; Defined at:
  2146 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2149 ;;		 -> sprintf@f(11), 
  2150 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2151 ;;		 -> STR_1(36), 
  2152 ;;  ap              2   84[COMRAM] PTR PTR void 
  2153 ;;		 -> sprintf@ap(2), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2156 ;;		 -> STR_1(36), 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2   80[COMRAM] int 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:        8 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 7
  2173 ;; This function calls:
  2174 ;;		_vfpfcnvrt
  2175 ;; This function is called by:
  2176 ;;		_sprintf
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text2
  2181   004A48                     __ptext2:
  2182                           	callstack 0
  2183   004A48                     _vfprintf:
  2184                           	callstack 22
  2185   004A48                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2187   004A48  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2188   004A4C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2191   004A50  EF38  F025         	goto	l4232
  2192   004A54                     l4230:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2195   004A54  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2196   004A58  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2197   004A5C  0E57               	movlw	low vfprintf@cfmt
  2198   004A5E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2199   004A60  0E00               	movlw	high vfprintf@cfmt
  2200   004A62  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2201   004A64  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2202   004A68  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2203   004A6C  EC96  F01C         	call	_vfpfcnvrt	;wreg free
  2204   004A70                     l4232:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2207   004A70  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2208   004A74  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2209   004A78                     	if	0	;tblptru may be non-zero
  2210   004A78                     	endif
  2211   004A78                     	if	0	;tblptru may be non-zero
  2212   004A78                     	endif
  2213   004A78  0008               	tblrd		*
  2214   004A7A  50F5               	movf	tablat,w,c
  2215   004A7C  0900               	iorlw	0
  2216   004A7E  A4D8               	btfss	status,2,c
  2217   004A80  EF44  F025         	goto	u3941
  2218   004A84  EF46  F025         	goto	u3940
  2219   004A88                     u3941:
  2220   004A88  EF2A  F025         	goto	l4230
  2221   004A8C                     u3940:
  2222   004A8C                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2224   004A8C  0E00               	movlw	0
  2225   004A8E  6E52               	movwf	(?_vfprintf+1)^0,c
  2226   004A90  0E00               	movlw	0
  2227   004A92  6E51               	movwf	?_vfprintf^0,c
  2228   004A94  0012               	return		;funcret
  2229   004A96                     __end_of_vfprintf:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _vfpfcnvrt *****************
  2233 ;; Defined at:
  2234 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2237 ;;		 -> sprintf@f(11), 
  2238 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2239 ;;		 -> vfprintf@cfmt(2), 
  2240 ;;  ap              2   66[COMRAM] PTR PTR void 
  2241 ;;		 -> sprintf@ap(2), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  convarg         8   70[COMRAM] struct .
  2244 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2245 ;;		 -> STR_1(36), 
  2246 ;;  i               2    0        int 
  2247 ;;  done            2    0        int 
  2248 ;;  c               1    0        unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;Total ram usage:       18 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 6
  2265 ;; This function calls:
  2266 ;;		_dtoa
  2267 ;;		_fputc
  2268 ;; This function is called by:
  2269 ;;		_vfprintf
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text3
  2274   00392C                     __ptext3:
  2275                           	callstack 0
  2276   00392C                     _vfpfcnvrt:
  2277                           	callstack 22
  2278   00392C                     
  2279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2280   00392C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281   003930  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282   003934  CFDE FFF6          	movff	postinc2,tblptrl
  2283   003938  CFDD FFF7          	movff	postdec2,tblptrh
  2284   00393C                     	if	0	;tblptru may be non-zero
  2285   00393C                     	endif
  2286   00393C                     	if	0	;tblptru may be non-zero
  2287   00393C                     	endif
  2288   00393C  0008               	tblrd		*
  2289   00393E  50F5               	movf	tablat,w,c
  2290   003940  0A25               	xorlw	37
  2291   003942  A4D8               	btfss	status,2,c
  2292   003944  EFA6  F01C         	goto	u3281
  2293   003948  EFA8  F01C         	goto	u3280
  2294   00394C                     u3281:
  2295   00394C  EF29  F01D         	goto	l3774
  2296   003950                     u3280:
  2297   003950                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2299   003950  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2300   003954  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2301   003958  2ADE               	incf	postinc2,f,c
  2302   00395A  0E00               	movlw	0
  2303   00395C  22DD               	addwfc	postdec2,f,c
  2304   00395E                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2306   00395E  0E00               	movlw	0
  2307   003960  0101               	movlb	1	; () banked
  2308   003962  6F5D               	movwf	(_width+1)& (0+255),b
  2309   003964  0E00               	movlw	0
  2310   003966  6F5C               	movwf	_width& (0+255),b
  2311   003968  C15C  F0F4         	movff	_width,_flags
  2312   00396C                     
  2313                           ; BSR set to: 1
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2315   00396C  0100               	movlb	0	; () banked
  2316   00396E  69EE               	setf	_prec& (0+255),b
  2317   003970  69EF               	setf	(_prec+1)& (0+255),b
  2318   003972                     
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2321   003972  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322   003976  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323   00397A  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2324   00397E  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2325   003982                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2328   003982  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2329   003986  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2330   00398A                     	if	0	;tblptru may be non-zero
  2331   00398A                     	endif
  2332   00398A                     	if	0	;tblptru may be non-zero
  2333   00398A                     	endif
  2334   00398A  0008               	tblrd		*
  2335   00398C  50F5               	movf	tablat,w,c
  2336   00398E  0A64               	xorlw	100
  2337   003990  B4D8               	btfsc	status,2,c
  2338   003992  EFCD  F01C         	goto	u3291
  2339   003996  EFCF  F01C         	goto	u3290
  2340   00399A                     u3291:
  2341   00399A  EFDD  F01C         	goto	l3764
  2342   00399E                     u3290:
  2343   00399E                     
  2344                           ; BSR set to: 0
  2345   00399E  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2346   0039A2  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2347   0039A6                     	if	0	;tblptru may be non-zero
  2348   0039A6                     	endif
  2349   0039A6                     	if	0	;tblptru may be non-zero
  2350   0039A6                     	endif
  2351   0039A6  0008               	tblrd		*
  2352   0039A8  50F5               	movf	tablat,w,c
  2353   0039AA  0A69               	xorlw	105
  2354   0039AC  A4D8               	btfss	status,2,c
  2355   0039AE  EFDB  F01C         	goto	u3301
  2356   0039B2  EFDD  F01C         	goto	u3300
  2357   0039B6                     u3301:
  2358   0039B6  EF20  F01D         	goto	l3770
  2359   0039BA                     u3300:
  2360   0039BA                     l3764:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2364   0039BA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2365   0039BE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2366   0039C2  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2367   0039C6  0E02               	movlw	2
  2368   0039C8  26DE               	addwf	postinc2,f,c
  2369   0039CA  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2370   0039CE  0E00               	movlw	0
  2371   0039D0  22DD               	addwfc	postdec2,f,c
  2372   0039D2  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2373   0039D6  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2374   0039DA  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2375   0039DE  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2376   0039E2  0E00               	movlw	0
  2377   0039E4  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2378   0039E6  0EFF               	movlw	-1
  2379   0039E8  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2380   0039EA  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2381   0039EC  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2382   0039EE  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2383   0039F0  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2384   0039F2  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2387   0039F4  0E01               	movlw	1
  2388   0039F6  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2389   0039F8  6E45               	movwf	??_vfpfcnvrt^0,c
  2390   0039FA  0E00               	movlw	0
  2391   0039FC  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2392   0039FE  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2393   003A00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394   003A04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395   003A08  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2396   003A0C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2397   003A10                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2400   003A10  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2401   003A14  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2402   003A18  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2403   003A1C  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2404   003A20  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2405   003A24  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2406   003A28  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2407   003A2C  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2408   003A30  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2409   003A34  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2410   003A38  EC51  F018         	call	_dtoa	;wreg free
  2411   003A3C  EF3D  F01D         	goto	l1398
  2412   003A40                     l3770:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2415   003A40  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416   003A44  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417   003A48  2ADE               	incf	postinc2,f,c
  2418   003A4A  0E00               	movlw	0
  2419   003A4C  22DD               	addwfc	postdec2,f,c
  2420   003A4E  EF3D  F01D         	goto	l1398
  2421   003A52                     l3774:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2424   003A52  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   003A56  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   003A5A  CFDE FFF6          	movff	postinc2,tblptrl
  2427   003A5E  CFDD FFF7          	movff	postdec2,tblptrh
  2428   003A62                     	if	0	;tblptru may be non-zero
  2429   003A62                     	endif
  2430   003A62                     	if	0	;tblptru may be non-zero
  2431   003A62                     	endif
  2432   003A62  0008               	tblrd		*
  2433   003A64  50F5               	movf	tablat,w,c
  2434   003A66  6E01               	movwf	fputc@c^0,c
  2435   003A68  6A02               	clrf	(fputc@c+1)^0,c
  2436   003A6A  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2437   003A6E  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2438   003A72  ECC0  F01D         	call	_fputc	;wreg free
  2439   003A76  EF20  F01D         	goto	l3770
  2440   003A7A                     l1398:
  2441   003A7A  0012               	return		;funcret
  2442   003A7C                     __end_of_vfpfcnvrt:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _dtoa *****************
  2446 ;; Defined at:
  2447 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2450 ;;		 -> sprintf@f(11), 
  2451 ;;  d               8   29[COMRAM] long long 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  n               8   51[COMRAM] long long 
  2454 ;;  i               2   59[COMRAM] int 
  2455 ;;  w               2   49[COMRAM] int 
  2456 ;;  p               2   47[COMRAM] int 
  2457 ;;  s               1   61[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:       35 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 5
  2474 ;; This function calls:
  2475 ;;		___aodiv
  2476 ;;		___aomod
  2477 ;;		_abs
  2478 ;;		_pad
  2479 ;; This function is called by:
  2480 ;;		_vfpfcnvrt
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text4
  2485   0030A2                     __ptext4:
  2486                           	callstack 0
  2487   0030A2                     _dtoa:
  2488                           	callstack 22
  2489   0030A2                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2491   0030A2  C01E  F034         	movff	dtoa@d,dtoa@n
  2492   0030A6  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2493   0030AA  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2494   0030AE  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2495   0030B2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2496   0030B6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2497   0030BA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2498   0030BE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2499   0030C2                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2501   0030C2  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2502   0030C4  EF66  F018         	goto	u2761
  2503   0030C8  EF69  F018         	goto	u2760
  2504   0030CC                     u2761:
  2505   0030CC  0E01               	movlw	1
  2506   0030CE  EF6A  F018         	goto	u2770
  2507   0030D2                     u2760:
  2508   0030D2  0E00               	movlw	0
  2509   0030D4                     u2770:
  2510   0030D4  6E3E               	movwf	dtoa@s^0,c
  2511   0030D6                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2513   0030D6  503E               	movf	dtoa@s^0,w,c
  2514   0030D8  B4D8               	btfsc	status,2,c
  2515   0030DA  EF71  F018         	goto	u2781
  2516   0030DE  EF73  F018         	goto	u2780
  2517   0030E2                     u2781:
  2518   0030E2  EF83  F018         	goto	l3444
  2519   0030E6                     u2780:
  2520   0030E6                     
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2522   0030E6  1E3B               	comf	(dtoa@n+7)^0,f,c
  2523   0030E8  1E3A               	comf	(dtoa@n+6)^0,f,c
  2524   0030EA  1E39               	comf	(dtoa@n+5)^0,f,c
  2525   0030EC  1E38               	comf	(dtoa@n+4)^0,f,c
  2526   0030EE  1E37               	comf	(dtoa@n+3)^0,f,c
  2527   0030F0  1E36               	comf	(dtoa@n+2)^0,f,c
  2528   0030F2  1E35               	comf	(dtoa@n+1)^0,f,c
  2529   0030F4  6C34               	negf	dtoa@n^0,c
  2530   0030F6  0E00               	movlw	0
  2531   0030F8  2235               	addwfc	(dtoa@n+1)^0,f,c
  2532   0030FA  2236               	addwfc	(dtoa@n+2)^0,f,c
  2533   0030FC  2237               	addwfc	(dtoa@n+3)^0,f,c
  2534   0030FE  2238               	addwfc	(dtoa@n+4)^0,f,c
  2535   003100  2239               	addwfc	(dtoa@n+5)^0,f,c
  2536   003102  223A               	addwfc	(dtoa@n+6)^0,f,c
  2537   003104  223B               	addwfc	(dtoa@n+7)^0,f,c
  2538   003106                     l3444:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2541   003106  0100               	movlb	0	; () banked
  2542   003108  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  2543   00310A  EF91  F018         	goto	u2790
  2544   00310E  51EF               	movf	(_prec+1)& (0+255),w,b
  2545   003110  E106               	bnz	u2791
  2546   003112  05EE               	decf	_prec& (0+255),w,b
  2547   003114  B0D8               	btfsc	status,0,c
  2548   003116  EF8F  F018         	goto	u2791
  2549   00311A  EF91  F018         	goto	u2790
  2550   00311E                     u2791:
  2551   00311E  EF97  F018         	goto	l1377
  2552   003122                     u2790:
  2553   003122                     
  2554                           ; BSR set to: 0
  2555   003122  0E00               	movlw	0
  2556   003124  6E31               	movwf	(dtoa@p+1)^0,c
  2557   003126  0E01               	movlw	1
  2558   003128  6E30               	movwf	dtoa@p^0,c
  2559   00312A  EF9B  F018         	goto	l1379
  2560   00312E                     l1377:
  2561                           
  2562                           ; BSR set to: 0
  2563   00312E  C0EE  F030         	movff	_prec,dtoa@p
  2564   003132  C0EF  F031         	movff	_prec+1,dtoa@p+1
  2565   003136                     l1379:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2569   003136  C15C  F032         	movff	_width,dtoa@w
  2570   00313A  C15D  F033         	movff	_width+1,dtoa@w+1
  2571   00313E                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2574   00313E  503E               	movf	dtoa@s^0,w,c
  2575   003140  B4D8               	btfsc	status,2,c
  2576   003142  EFA5  F018         	goto	u2801
  2577   003146  EFA7  F018         	goto	u2800
  2578   00314A                     u2801:
  2579   00314A  EFBE  F018         	goto	l1380
  2580   00314E                     u2800:
  2581   00314E                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2584   00314E  0632               	decf	dtoa@w^0,f,c
  2585   003150  A0D8               	btfss	status,0,c
  2586   003152  0633               	decf	(dtoa@w+1)^0,f,c
  2587   003154                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2590   003154  503E               	movf	dtoa@s^0,w,c
  2591   003156  A4D8               	btfss	status,2,c
  2592   003158  EFB0  F018         	goto	u2811
  2593   00315C  EFB2  F018         	goto	u2810
  2594   003160                     u2811:
  2595   003160  EFB8  F018         	goto	l3456
  2596   003164                     u2810:
  2597   003164                     
  2598                           ; BSR set to: 0
  2599   003164  0E00               	movlw	0
  2600   003166  6E2F               	movwf	(_dtoa$2629+1)^0,c
  2601   003168  0E2B               	movlw	43
  2602   00316A  6E2E               	movwf	_dtoa$2629^0,c
  2603   00316C  EFBC  F018         	goto	l3458
  2604   003170                     l3456:
  2605                           
  2606                           ; BSR set to: 0
  2607   003170  0E00               	movlw	0
  2608   003172  6E2F               	movwf	(_dtoa$2629+1)^0,c
  2609   003174  0E2D               	movlw	45
  2610   003176  6E2E               	movwf	_dtoa$2629^0,c
  2611   003178                     l3458:
  2612                           
  2613                           ; BSR set to: 0
  2614   003178  C02E  F03E         	movff	_dtoa$2629,dtoa@s
  2615   00317C                     l1380:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2619   00317C  0E00               	movlw	0
  2620   00317E  6E3D               	movwf	(dtoa@i+1)^0,c
  2621   003180  0E1F               	movlw	31
  2622   003182  6E3C               	movwf	dtoa@i^0,c
  2623   003184                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2626   003184  0E00               	movlw	0
  2627   003186  0101               	movlb	1	; () banked
  2628   003188  6FAF               	movwf	(_dbuf+31)& (0+255),b
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2631   00318A  EF43  F019         	goto	l3472
  2632   00318E                     l3462:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2635   00318E  063C               	decf	dtoa@i^0,f,c
  2636   003190  A0D8               	btfss	status,0,c
  2637   003192  063D               	decf	(dtoa@i+1)^0,f,c
  2638   003194                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2640   003194  0E90               	movlw	low _dbuf
  2641   003196  243C               	addwf	dtoa@i^0,w,c
  2642   003198  6ED9               	movwf	fsr2l,c
  2643   00319A  0E01               	movlw	high _dbuf
  2644   00319C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2645   00319E  6EDA               	movwf	fsr2h,c
  2646   0031A0  C034  F001         	movff	dtoa@n,___aomod@dividend
  2647   0031A4  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2648   0031A8  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2649   0031AC  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2650   0031B0  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2651   0031B4  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2652   0031B8  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2653   0031BC  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2654   0031C0  0E0A               	movlw	10
  2655   0031C2  6E09               	movwf	___aomod@divisor^0,c
  2656   0031C4  0E00               	movlw	0
  2657   0031C6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2658   0031C8  0E00               	movlw	0
  2659   0031CA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2660   0031CC  0E00               	movlw	0
  2661   0031CE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2662   0031D0  0E00               	movlw	0
  2663   0031D2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2664   0031D4  0E00               	movlw	0
  2665   0031D6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2666   0031D8  0E00               	movlw	0
  2667   0031DA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2668   0031DC  0E00               	movlw	0
  2669   0031DE  6E10               	movwf	(___aomod@divisor+7)^0,c
  2670   0031E0  ECE4  F01B         	call	___aomod	;wreg free
  2671   0031E4  C001  F026         	movff	?___aomod,??_dtoa
  2672   0031E8  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2673   0031EC  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2674   0031F0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2675   0031F4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2676   0031F8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2677   0031FC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2678   003200  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2679   003204  C026  F013         	movff	??_dtoa,abs@a
  2680   003208  C027  F014         	movff	??_dtoa+1,abs@a+1
  2681   00320C  ECB1  F025         	call	_abs	;wreg free
  2682   003210  5013               	movf	?_abs^0,w,c
  2683   003212  0F30               	addlw	48
  2684   003214  6EDF               	movwf	indf2,c
  2685   003216                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2687   003216  0630               	decf	dtoa@p^0,f,c
  2688   003218  A0D8               	btfss	status,0,c
  2689   00321A  0631               	decf	(dtoa@p+1)^0,f,c
  2690   00321C                     
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2692   00321C  0632               	decf	dtoa@w^0,f,c
  2693   00321E  A0D8               	btfss	status,0,c
  2694   003220  0633               	decf	(dtoa@w+1)^0,f,c
  2695   003222                     
  2696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2697   003222  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2698   003226  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2699   00322A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2700   00322E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2701   003232  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2702   003236  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2703   00323A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2704   00323E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2705   003242  0E0A               	movlw	10
  2706   003244  6E09               	movwf	___aodiv@divisor^0,c
  2707   003246  0E00               	movlw	0
  2708   003248  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2709   00324A  0E00               	movlw	0
  2710   00324C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2711   00324E  0E00               	movlw	0
  2712   003250  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2713   003252  0E00               	movlw	0
  2714   003254  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2715   003256  0E00               	movlw	0
  2716   003258  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2717   00325A  0E00               	movlw	0
  2718   00325C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2719   00325E  0E00               	movlw	0
  2720   003260  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2721   003262  EC6A  F01A         	call	___aodiv	;wreg free
  2722   003266  C001  F034         	movff	?___aodiv,dtoa@n
  2723   00326A  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2724   00326E  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2725   003272  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2726   003276  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2727   00327A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2728   00327E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2729   003282  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2730   003286                     l3472:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2733   003286  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2734   003288  EF4E  F019         	goto	u2821
  2735   00328C  503D               	movf	(dtoa@i+1)^0,w,c
  2736   00328E  E108               	bnz	u2820
  2737   003290  043C               	decf	dtoa@i^0,w,c
  2738   003292  A0D8               	btfss	status,0,c
  2739   003294  EF4E  F019         	goto	u2821
  2740   003298  EF50  F019         	goto	u2820
  2741   00329C                     u2821:
  2742   00329C  EF6C  F019         	goto	l3478
  2743   0032A0                     u2820:
  2744   0032A0  5034               	movf	dtoa@n^0,w,c
  2745   0032A2  1035               	iorwf	(dtoa@n+1)^0,w,c
  2746   0032A4  1036               	iorwf	(dtoa@n+2)^0,w,c
  2747   0032A6  1037               	iorwf	(dtoa@n+3)^0,w,c
  2748   0032A8  1038               	iorwf	(dtoa@n+4)^0,w,c
  2749   0032AA  1039               	iorwf	(dtoa@n+5)^0,w,c
  2750   0032AC  103A               	iorwf	(dtoa@n+6)^0,w,c
  2751   0032AE  103B               	iorwf	(dtoa@n+7)^0,w,c
  2752   0032B0  A4D8               	btfss	status,2,c
  2753   0032B2  EF5D  F019         	goto	u2831
  2754   0032B6  EF5F  F019         	goto	u2830
  2755   0032BA                     u2831:
  2756   0032BA  EFC7  F018         	goto	l3462
  2757   0032BE                     u2830:
  2758   0032BE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2759   0032C0  EF6C  F019         	goto	u2840
  2760   0032C4  5031               	movf	(dtoa@p+1)^0,w,c
  2761   0032C6  E106               	bnz	u2841
  2762   0032C8  0430               	decf	dtoa@p^0,w,c
  2763   0032CA  B0D8               	btfsc	status,0,c
  2764   0032CC  EF6A  F019         	goto	u2841
  2765   0032D0  EF6C  F019         	goto	u2840
  2766   0032D4                     u2841:
  2767   0032D4  EFC7  F018         	goto	l3462
  2768   0032D8                     u2840:
  2769   0032D8                     l3478:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2772   0032D8  503E               	movf	dtoa@s^0,w,c
  2773   0032DA  B4D8               	btfsc	status,2,c
  2774   0032DC  EF72  F019         	goto	u2851
  2775   0032E0  EF74  F019         	goto	u2850
  2776   0032E4                     u2851:
  2777   0032E4  EF7F  F019         	goto	l3484
  2778   0032E8                     u2850:
  2779   0032E8                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2781   0032E8  063C               	decf	dtoa@i^0,f,c
  2782   0032EA  A0D8               	btfss	status,0,c
  2783   0032EC  063D               	decf	(dtoa@i+1)^0,f,c
  2784   0032EE                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2786   0032EE  0E90               	movlw	low _dbuf
  2787   0032F0  243C               	addwf	dtoa@i^0,w,c
  2788   0032F2  6ED9               	movwf	fsr2l,c
  2789   0032F4  0E01               	movlw	high _dbuf
  2790   0032F6  203D               	addwfc	(dtoa@i+1)^0,w,c
  2791   0032F8  6EDA               	movwf	fsr2h,c
  2792   0032FA  C03E  FFDF         	movff	dtoa@s,indf2
  2793   0032FE                     l3484:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2796   0032FE  C01C  F011         	movff	dtoa@fp,pad@fp
  2797   003302  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2798   003306  0E90               	movlw	low _dbuf
  2799   003308  243C               	addwf	dtoa@i^0,w,c
  2800   00330A  6E13               	movwf	pad@buf^0,c
  2801   00330C  0E01               	movlw	high _dbuf
  2802   00330E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2803   003310  6E14               	movwf	(pad@buf+1)^0,c
  2804   003312  C032  F015         	movff	dtoa@w,pad@p
  2805   003316  C033  F016         	movff	dtoa@w+1,pad@p+1
  2806   00331A  EC44  F021         	call	_pad	;wreg free
  2807   00331E  0012               	return		;funcret
  2808   003320                     __end_of_dtoa:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _pad *****************
  2812 ;; Defined at:
  2813 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2816 ;;		 -> sprintf@f(11), 
  2817 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2818 ;;		 -> dbuf(32), 
  2819 ;;  p               2   20[COMRAM] int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  w               2   25[COMRAM] int 
  2822 ;;  i               2   23[COMRAM] int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;Total ram usage:       11 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 4
  2839 ;; This function calls:
  2840 ;;		_fputc
  2841 ;;		_fputs
  2842 ;; This function is called by:
  2843 ;;		_dtoa
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text5
  2848   004288                     __ptext5:
  2849                           	callstack 0
  2850   004288                     _pad:
  2851                           	callstack 22
  2852   004288                     
  2853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2854   004288  BE16               	btfsc	(pad@p+1)^0,7,c
  2855   00428A  EF49  F021         	goto	u2611
  2856   00428E  EF4B  F021         	goto	u2610
  2857   004292                     u2611:
  2858   004292  EF51  F021         	goto	l3348
  2859   004296                     u2610:
  2860   004296  C015  F01A         	movff	pad@p,pad@w
  2861   00429A  C016  F01B         	movff	pad@p+1,pad@w+1
  2862   00429E  EF55  F021         	goto	l1368
  2863   0042A2                     l3348:
  2864   0042A2  0E00               	movlw	0
  2865   0042A4  6E1B               	movwf	(pad@w+1)^0,c
  2866   0042A6  0E00               	movlw	0
  2867   0042A8  6E1A               	movwf	pad@w^0,c
  2868   0042AA                     l1368:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2871   0042AA  0E00               	movlw	0
  2872   0042AC  6E19               	movwf	(pad@i+1)^0,c
  2873   0042AE  0E00               	movlw	0
  2874   0042B0  6E18               	movwf	pad@i^0,c
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2877   0042B2  EF67  F021         	goto	l3354
  2878   0042B6                     l3350:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2881   0042B6  0E00               	movlw	0
  2882   0042B8  6E02               	movwf	(fputc@c+1)^0,c
  2883   0042BA  0E20               	movlw	32
  2884   0042BC  6E01               	movwf	fputc@c^0,c
  2885   0042BE  C011  F003         	movff	pad@fp,fputc@fp
  2886   0042C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2887   0042C6  ECC0  F01D         	call	_fputc	;wreg free
  2888   0042CA                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2890   0042CA  4A18               	infsnz	pad@i^0,f,c
  2891   0042CC  2A19               	incf	(pad@i+1)^0,f,c
  2892   0042CE                     l3354:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2895   0042CE  501A               	movf	pad@w^0,w,c
  2896   0042D0  5C18               	subwf	pad@i^0,w,c
  2897   0042D2  5019               	movf	(pad@i+1)^0,w,c
  2898   0042D4  0A80               	xorlw	128
  2899   0042D6  6E17               	movwf	??_pad^0,c
  2900   0042D8  501B               	movf	(pad@w+1)^0,w,c
  2901   0042DA  0A80               	xorlw	128
  2902   0042DC  5817               	subwfb	??_pad^0,w,c
  2903   0042DE  A0D8               	btfss	status,0,c
  2904   0042E0  EF74  F021         	goto	u2621
  2905   0042E4  EF76  F021         	goto	u2620
  2906   0042E8                     u2621:
  2907   0042E8  EF5B  F021         	goto	l3350
  2908   0042EC                     u2620:
  2909   0042EC                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2911   0042EC  C013  F00A         	movff	pad@buf,fputs@s
  2912   0042F0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2913   0042F4  C011  F00C         	movff	pad@fp,fputs@fp
  2914   0042F8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2915   0042FC  EC6E  F025         	call	_fputs	;wreg free
  2916   004300  0012               	return		;funcret
  2917   004302                     __end_of_pad:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _fputs *****************
  2921 ;; Defined at:
  2922 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2925 ;;		 -> dbuf(32), 
  2926 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2927 ;;		 -> sprintf@f(11), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  i               2   14[COMRAM] int 
  2930 ;;  c               1   13[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    9[COMRAM] int 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:        7 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 3
  2947 ;; This function calls:
  2948 ;;		_fputc
  2949 ;; This function is called by:
  2950 ;;		_pad
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text6
  2955   004ADC                     __ptext6:
  2956                           	callstack 0
  2957   004ADC                     _fputs:
  2958                           	callstack 22
  2959   004ADC  0E00               	movlw	0
  2960   004ADE  6E10               	movwf	(fputs@i+1)^0,c
  2961   004AE0  0E00               	movlw	0
  2962   004AE2  6E0F               	movwf	fputs@i^0,c
  2963   004AE4  EF7F  F025         	goto	l3246
  2964   004AE8                     l3242:
  2965   004AE8  C00E  F001         	movff	fputs@c,fputc@c
  2966   004AEC  6A02               	clrf	(fputc@c+1)^0,c
  2967   004AEE  C00C  F003         	movff	fputs@fp,fputc@fp
  2968   004AF2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2969   004AF6  ECC0  F01D         	call	_fputc	;wreg free
  2970   004AFA  4A0F               	infsnz	fputs@i^0,f,c
  2971   004AFC  2A10               	incf	(fputs@i+1)^0,f,c
  2972   004AFE                     l3246:
  2973   004AFE  500F               	movf	fputs@i^0,w,c
  2974   004B00  240A               	addwf	fputs@s^0,w,c
  2975   004B02  6ED9               	movwf	fsr2l,c
  2976   004B04  5010               	movf	(fputs@i+1)^0,w,c
  2977   004B06  200B               	addwfc	(fputs@s+1)^0,w,c
  2978   004B08  6EDA               	movwf	fsr2h,c
  2979   004B0A  50DF               	movf	indf2,w,c
  2980   004B0C  6E0E               	movwf	fputs@c^0,c
  2981   004B0E  500E               	movf	fputs@c^0,w,c
  2982   004B10  A4D8               	btfss	status,2,c
  2983   004B12  EF8D  F025         	goto	u2451
  2984   004B16  EF8F  F025         	goto	u2450
  2985   004B1A                     u2451:
  2986   004B1A  EF74  F025         	goto	l3242
  2987   004B1E                     u2450:
  2988   004B1E  0012               	return		;funcret
  2989   004B20                     __end_of_fputs:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _fputc *****************
  2993 ;; Defined at:
  2994 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               2    0[COMRAM] int 
  2997 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2998 ;;		 -> sprintf@f(11), 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  2    0[COMRAM] int 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:        9 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_putch
  3019 ;; This function is called by:
  3020 ;;		_pad
  3021 ;;		_vfpfcnvrt
  3022 ;;		_fputs
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text7
  3027   003B80                     __ptext7:
  3028                           	callstack 0
  3029   003B80                     _fputc:
  3030                           	callstack 25
  3031   003B80  5003               	movf	fputc@fp^0,w,c
  3032   003B82  1004               	iorwf	(fputc@fp+1)^0,w,c
  3033   003B84  B4D8               	btfsc	status,2,c
  3034   003B86  EFC7  F01D         	goto	u2381
  3035   003B8A  EFC9  F01D         	goto	u2380
  3036   003B8E                     u2381:
  3037   003B8E  EFD2  F01D         	goto	l3202
  3038   003B92                     u2380:
  3039   003B92  5003               	movf	fputc@fp^0,w,c
  3040   003B94  1004               	iorwf	(fputc@fp+1)^0,w,c
  3041   003B96  A4D8               	btfss	status,2,c
  3042   003B98  EFD0  F01D         	goto	u2391
  3043   003B9C  EFD2  F01D         	goto	u2390
  3044   003BA0                     u2391:
  3045   003BA0  EFD7  F01D         	goto	l3204
  3046   003BA4                     u2390:
  3047   003BA4                     l3202:
  3048   003BA4  5001               	movf	fputc@c^0,w,c
  3049   003BA6  EC01  F027         	call	_putch
  3050   003BAA  EF24  F01E         	goto	l1423
  3051   003BAE                     l3204:
  3052   003BAE  EE20 F009          	lfsr	2,9
  3053   003BB2  5003               	movf	fputc@fp^0,w,c
  3054   003BB4  26D9               	addwf	fsr2l,f,c
  3055   003BB6  5004               	movf	(fputc@fp+1)^0,w,c
  3056   003BB8  22DA               	addwfc	fsr2h,f,c
  3057   003BBA  50DE               	movf	postinc2,w,c
  3058   003BBC  10DE               	iorwf	postinc2,w,c
  3059   003BBE  B4D8               	btfsc	status,2,c
  3060   003BC0  EFE4  F01D         	goto	u2401
  3061   003BC4  EFE6  F01D         	goto	u2400
  3062   003BC8                     u2401:
  3063   003BC8  EF01  F01E         	goto	l3208
  3064   003BCC                     u2400:
  3065   003BCC  EE20 F009          	lfsr	2,9
  3066   003BD0  5003               	movf	fputc@fp^0,w,c
  3067   003BD2  26D9               	addwf	fsr2l,f,c
  3068   003BD4  5004               	movf	(fputc@fp+1)^0,w,c
  3069   003BD6  22DA               	addwfc	fsr2h,f,c
  3070   003BD8  EE10 F003          	lfsr	1,3
  3071   003BDC  5003               	movf	fputc@fp^0,w,c
  3072   003BDE  26E1               	addwf	fsr1l,f,c
  3073   003BE0  5004               	movf	(fputc@fp+1)^0,w,c
  3074   003BE2  22E2               	addwfc	fsr1h,f,c
  3075   003BE4  50DE               	movf	postinc2,w,c
  3076   003BE6  5CE6               	subwf	postinc1,w,c
  3077   003BE8  50E6               	movf	postinc1,w,c
  3078   003BEA  0A80               	xorlw	128
  3079   003BEC  6E09               	movwf	(??_fputc+4)^0,c
  3080   003BEE  50DE               	movf	postinc2,w,c
  3081   003BF0  0A80               	xorlw	128
  3082   003BF2  5809               	subwfb	(??_fputc+4)^0,w,c
  3083   003BF4  B0D8               	btfsc	status,0,c
  3084   003BF6  EFFF  F01D         	goto	u2411
  3085   003BFA  EF01  F01E         	goto	u2410
  3086   003BFE                     u2411:
  3087   003BFE  EF24  F01E         	goto	l1423
  3088   003C02                     u2410:
  3089   003C02                     l3208:
  3090   003C02  EE20 F003          	lfsr	2,3
  3091   003C06  5003               	movf	fputc@fp^0,w,c
  3092   003C08  26D9               	addwf	fsr2l,f,c
  3093   003C0A  5004               	movf	(fputc@fp+1)^0,w,c
  3094   003C0C  22DA               	addwfc	fsr2h,f,c
  3095   003C0E  CFDE F005          	movff	postinc2,??_fputc
  3096   003C12  CFDD F006          	movff	postdec2,??_fputc+1
  3097   003C16  C003  FFD9         	movff	fputc@fp,fsr2l
  3098   003C1A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3099   003C1E  CFDE F007          	movff	postinc2,??_fputc+2
  3100   003C22  CFDD F008          	movff	postdec2,??_fputc+3
  3101   003C26  5005               	movf	??_fputc^0,w,c
  3102   003C28  2407               	addwf	(??_fputc+2)^0,w,c
  3103   003C2A  6ED9               	movwf	fsr2l,c
  3104   003C2C  5006               	movf	(??_fputc+1)^0,w,c
  3105   003C2E  2008               	addwfc	(??_fputc+3)^0,w,c
  3106   003C30  6EDA               	movwf	fsr2h,c
  3107   003C32  C001  FFDF         	movff	fputc@c,indf2
  3108   003C36  EE20 F003          	lfsr	2,3
  3109   003C3A  5003               	movf	fputc@fp^0,w,c
  3110   003C3C  26D9               	addwf	fsr2l,f,c
  3111   003C3E  5004               	movf	(fputc@fp+1)^0,w,c
  3112   003C40  22DA               	addwfc	fsr2h,f,c
  3113   003C42  2ADE               	incf	postinc2,f,c
  3114   003C44  0E00               	movlw	0
  3115   003C46  22DD               	addwfc	postdec2,f,c
  3116   003C48                     l1423:
  3117   003C48  0012               	return		;funcret
  3118   003C4A                     __end_of_fputc:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _putch *****************
  3122 ;; Defined at:
  3123 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  c               1    wreg     unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  c               1    0[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_fputc
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text8
  3152   004E02                     __ptext8:
  3153                           	callstack 0
  3154   004E02                     _putch:
  3155                           	callstack 25
  3156   004E02  0012               	return		;funcret
  3157   004E04                     __end_of_putch:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _abs *****************
  3161 ;; Defined at:
  3162 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  a               2   18[COMRAM] int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2   18[COMRAM] int 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;Total ram usage:        4 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 1
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_dtoa
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text9
  3191   004B62                     __ptext9:
  3192                           	callstack 0
  3193   004B62                     _abs:
  3194                           	callstack 25
  3195   004B62  BE14               	btfsc	(abs@a+1)^0,7,c
  3196   004B64  EFBE  F025         	goto	u2630
  3197   004B68  5014               	movf	(abs@a+1)^0,w,c
  3198   004B6A  E106               	bnz	u2631
  3199   004B6C  0413               	decf	abs@a^0,w,c
  3200   004B6E  B0D8               	btfsc	status,0,c
  3201   004B70  EFBC  F025         	goto	u2631
  3202   004B74  EFBE  F025         	goto	u2630
  3203   004B78                     u2631:
  3204   004B78  EFCC  F025         	goto	l1408
  3205   004B7C                     u2630:
  3206   004B7C  C013  F015         	movff	abs@a,??_abs
  3207   004B80  C014  F016         	movff	abs@a+1,??_abs+1
  3208   004B84  1E15               	comf	??_abs^0,f,c
  3209   004B86  1E16               	comf	(??_abs+1)^0,f,c
  3210   004B88  4A15               	infsnz	??_abs^0,f,c
  3211   004B8A  2A16               	incf	(??_abs+1)^0,f,c
  3212   004B8C  C015  F013         	movff	??_abs,?_abs
  3213   004B90  C016  F014         	movff	??_abs+1,?_abs+1
  3214   004B94  EFD0  F025         	goto	l1411
  3215   004B98                     l1408:
  3216   004B98  C013  F013         	movff	abs@a,?_abs
  3217   004B9C  C014  F014         	movff	abs@a+1,?_abs+1
  3218   004BA0                     l1411:
  3219   004BA0  0012               	return		;funcret
  3220   004BA2                     __end_of_abs:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function ___aomod *****************
  3224 ;; Defined at:
  3225 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  dividend        8    0[COMRAM] long long 
  3228 ;;  divisor         8    8[COMRAM] long long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  sign            1   17[COMRAM] unsigned char 
  3231 ;;  counter         1   16[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  8    0[COMRAM] long long 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3241 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;Total ram usage:       18 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_dtoa
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text10
  3256   0037C8                     __ptext10:
  3257                           	callstack 0
  3258   0037C8                     ___aomod:
  3259                           	callstack 25
  3260   0037C8  0E00               	movlw	0
  3261   0037CA  6E12               	movwf	___aomod@sign^0,c
  3262   0037CC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3263   0037CE  EFED  F01B         	goto	u2550
  3264   0037D2  EFEB  F01B         	goto	u2551
  3265   0037D6                     u2551:
  3266   0037D6  EFFF  F01B         	goto	l3316
  3267   0037DA                     u2550:
  3268   0037DA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3269   0037DC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3270   0037DE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3271   0037E0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3272   0037E2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3273   0037E4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3274   0037E6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3275   0037E8  6C01               	negf	___aomod@dividend^0,c
  3276   0037EA  0E00               	movlw	0
  3277   0037EC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3278   0037EE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3279   0037F0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3280   0037F2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3281   0037F4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3282   0037F6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3283   0037F8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3284   0037FA  0E01               	movlw	1
  3285   0037FC  6E12               	movwf	___aomod@sign^0,c
  3286   0037FE                     l3316:
  3287   0037FE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3288   003800  EF06  F01C         	goto	u2560
  3289   003804  EF04  F01C         	goto	u2561
  3290   003808                     u2561:
  3291   003808  EF16  F01C         	goto	l3320
  3292   00380C                     u2560:
  3293   00380C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3294   00380E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3295   003810  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3296   003812  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3297   003814  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3298   003816  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3299   003818  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3300   00381A  6C09               	negf	___aomod@divisor^0,c
  3301   00381C  0E00               	movlw	0
  3302   00381E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3303   003820  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3304   003822  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3305   003824  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3306   003826  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3307   003828  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3308   00382A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3309   00382C                     l3320:
  3310   00382C  5009               	movf	___aomod@divisor^0,w,c
  3311   00382E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3312   003830  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3313   003832  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3314   003834  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3315   003836  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3316   003838  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3317   00383A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3318   00383C  B4D8               	btfsc	status,2,c
  3319   00383E  EF23  F01C         	goto	u2571
  3320   003842  EF25  F01C         	goto	u2570
  3321   003846                     u2571:
  3322   003846  EF6D  F01C         	goto	l3336
  3323   00384A                     u2570:
  3324   00384A  0E01               	movlw	1
  3325   00384C  6E11               	movwf	___aomod@counter^0,c
  3326   00384E  EF33  F01C         	goto	l3326
  3327   003852                     l3324:
  3328   003852  90D8               	bcf	status,0,c
  3329   003854  3609               	rlcf	___aomod@divisor^0,f,c
  3330   003856  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3331   003858  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3332   00385A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3333   00385C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3334   00385E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3335   003860  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3336   003862  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3337   003864  2A11               	incf	___aomod@counter^0,f,c
  3338   003866                     l3326:
  3339   003866  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3340   003868  EF38  F01C         	goto	u2581
  3341   00386C  EF3A  F01C         	goto	u2580
  3342   003870                     u2581:
  3343   003870  EF29  F01C         	goto	l3324
  3344   003874                     u2580:
  3345   003874                     l3328:
  3346   003874  5009               	movf	___aomod@divisor^0,w,c
  3347   003876  5C01               	subwf	___aomod@dividend^0,w,c
  3348   003878  500A               	movf	(___aomod@divisor+1)^0,w,c
  3349   00387A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3350   00387C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3351   00387E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3352   003880  500C               	movf	(___aomod@divisor+3)^0,w,c
  3353   003882  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3354   003884  500D               	movf	(___aomod@divisor+4)^0,w,c
  3355   003886  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3356   003888  500E               	movf	(___aomod@divisor+5)^0,w,c
  3357   00388A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3358   00388C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3359   00388E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3360   003890  5010               	movf	(___aomod@divisor+7)^0,w,c
  3361   003892  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3362   003894  A0D8               	btfss	status,0,c
  3363   003896  EF4F  F01C         	goto	u2591
  3364   00389A  EF51  F01C         	goto	u2590
  3365   00389E                     u2591:
  3366   00389E  EF61  F01C         	goto	l3332
  3367   0038A2                     u2590:
  3368   0038A2  5009               	movf	___aomod@divisor^0,w,c
  3369   0038A4  5E01               	subwf	___aomod@dividend^0,f,c
  3370   0038A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  3371   0038A8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3372   0038AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  3373   0038AC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3374   0038AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  3375   0038B0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3376   0038B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  3377   0038B4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3378   0038B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  3379   0038B8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3380   0038BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  3381   0038BC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3382   0038BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  3383   0038C0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3384   0038C2                     l3332:
  3385   0038C2  90D8               	bcf	status,0,c
  3386   0038C4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3387   0038C6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3388   0038C8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3389   0038CA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3390   0038CC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3391   0038CE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3392   0038D0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3393   0038D2  3209               	rrcf	___aomod@divisor^0,f,c
  3394   0038D4  2E11               	decfsz	___aomod@counter^0,f,c
  3395   0038D6  EF3A  F01C         	goto	l3328
  3396   0038DA                     l3336:
  3397   0038DA  5012               	movf	___aomod@sign^0,w,c
  3398   0038DC  B4D8               	btfsc	status,2,c
  3399   0038DE  EF73  F01C         	goto	u2601
  3400   0038E2  EF75  F01C         	goto	u2600
  3401   0038E6                     u2601:
  3402   0038E6  EF85  F01C         	goto	l3340
  3403   0038EA                     u2600:
  3404   0038EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3405   0038EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3406   0038EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3407   0038F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3408   0038F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3409   0038F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3410   0038F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3411   0038F8  6C01               	negf	___aomod@dividend^0,c
  3412   0038FA  0E00               	movlw	0
  3413   0038FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3414   0038FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3415   003900  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3416   003902  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3417   003904  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3418   003906  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3419   003908  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3420   00390A                     l3340:
  3421   00390A  C001  F001         	movff	___aomod@dividend,?___aomod
  3422   00390E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3423   003912  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3424   003916  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3425   00391A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3426   00391E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3427   003922  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3428   003926  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3429   00392A  0012               	return		;funcret
  3430   00392C                     __end_of___aomod:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function ___aodiv *****************
  3434 ;; Defined at:
  3435 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  dividend        8    0[COMRAM] long long 
  3438 ;;  divisor         8    8[COMRAM] long long 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        8   18[COMRAM] long long 
  3441 ;;  sign            1   17[COMRAM] unsigned char 
  3442 ;;  counter         1   16[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  8    0[COMRAM] long long 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3452 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;Total ram usage:       26 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_dtoa
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text11
  3467   0034D4                     __ptext11:
  3468                           	callstack 0
  3469   0034D4                     ___aodiv:
  3470                           	callstack 25
  3471   0034D4  0E00               	movlw	0
  3472   0034D6  6E12               	movwf	___aodiv@sign^0,c
  3473   0034D8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3474   0034DA  EF73  F01A         	goto	u2480
  3475   0034DE  EF71  F01A         	goto	u2481
  3476   0034E2                     u2481:
  3477   0034E2  EF85  F01A         	goto	l3272
  3478   0034E6                     u2480:
  3479   0034E6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3480   0034E8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3481   0034EA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3482   0034EC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3483   0034EE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3484   0034F0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3485   0034F2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3486   0034F4  6C09               	negf	___aodiv@divisor^0,c
  3487   0034F6  0E00               	movlw	0
  3488   0034F8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3489   0034FA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3490   0034FC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3491   0034FE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3492   003500  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3493   003502  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3494   003504  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3495   003506  0E01               	movlw	1
  3496   003508  6E12               	movwf	___aodiv@sign^0,c
  3497   00350A                     l3272:
  3498   00350A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3499   00350C  EF8C  F01A         	goto	u2490
  3500   003510  EF8A  F01A         	goto	u2491
  3501   003514                     u2491:
  3502   003514  EF9E  F01A         	goto	l3278
  3503   003518                     u2490:
  3504   003518  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3505   00351A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3506   00351C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3507   00351E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3508   003520  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3509   003522  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3510   003524  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3511   003526  6C01               	negf	___aodiv@dividend^0,c
  3512   003528  0E00               	movlw	0
  3513   00352A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3514   00352C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3515   00352E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3516   003530  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3517   003532  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3518   003534  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3519   003536  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3520   003538  0E01               	movlw	1
  3521   00353A  1A12               	xorwf	___aodiv@sign^0,f,c
  3522   00353C                     l3278:
  3523   00353C  EE20  F013         	lfsr	2,___aodiv@quotient
  3524   003540  0E07               	movlw	7
  3525   003542                     u2501:
  3526   003542  6ADE               	clrf	postinc2,c
  3527   003544  06E8               	decf	wreg,f,c
  3528   003546  E2FD               	bc	u2501
  3529   003548  5009               	movf	___aodiv@divisor^0,w,c
  3530   00354A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3531   00354C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3532   00354E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3533   003550  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3534   003552  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3535   003554  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3536   003556  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3537   003558  B4D8               	btfsc	status,2,c
  3538   00355A  EFB1  F01A         	goto	u2511
  3539   00355E  EFB3  F01A         	goto	u2510
  3540   003562                     u2511:
  3541   003562  EF05  F01B         	goto	l3300
  3542   003566                     u2510:
  3543   003566  0E01               	movlw	1
  3544   003568  6E11               	movwf	___aodiv@counter^0,c
  3545   00356A  EFC1  F01A         	goto	l3286
  3546   00356E                     l3284:
  3547   00356E  90D8               	bcf	status,0,c
  3548   003570  3609               	rlcf	___aodiv@divisor^0,f,c
  3549   003572  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3550   003574  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3551   003576  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3552   003578  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3553   00357A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3554   00357C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3555   00357E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3556   003580  2A11               	incf	___aodiv@counter^0,f,c
  3557   003582                     l3286:
  3558   003582  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3559   003584  EFC6  F01A         	goto	u2521
  3560   003588  EFC8  F01A         	goto	u2520
  3561   00358C                     u2521:
  3562   00358C  EFB7  F01A         	goto	l3284
  3563   003590                     u2520:
  3564   003590                     l3288:
  3565   003590  90D8               	bcf	status,0,c
  3566   003592  3613               	rlcf	___aodiv@quotient^0,f,c
  3567   003594  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3568   003596  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3569   003598  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3570   00359A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3571   00359C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3572   00359E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3573   0035A0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3574   0035A2  5009               	movf	___aodiv@divisor^0,w,c
  3575   0035A4  5C01               	subwf	___aodiv@dividend^0,w,c
  3576   0035A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3577   0035A8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3578   0035AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3579   0035AC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3580   0035AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3581   0035B0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3582   0035B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3583   0035B4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3584   0035B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3585   0035B8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3586   0035BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3587   0035BC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3588   0035BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3589   0035C0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3590   0035C2  A0D8               	btfss	status,0,c
  3591   0035C4  EFE6  F01A         	goto	u2531
  3592   0035C8  EFE8  F01A         	goto	u2530
  3593   0035CC                     u2531:
  3594   0035CC  EFF9  F01A         	goto	l3296
  3595   0035D0                     u2530:
  3596   0035D0  5009               	movf	___aodiv@divisor^0,w,c
  3597   0035D2  5E01               	subwf	___aodiv@dividend^0,f,c
  3598   0035D4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3599   0035D6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3600   0035D8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3601   0035DA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3602   0035DC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3603   0035DE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3604   0035E0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3605   0035E2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3606   0035E4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3607   0035E6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3608   0035E8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3609   0035EA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3610   0035EC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3611   0035EE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3612   0035F0  8013               	bsf	___aodiv@quotient^0,0,c
  3613   0035F2                     l3296:
  3614   0035F2  90D8               	bcf	status,0,c
  3615   0035F4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3616   0035F6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3617   0035F8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3618   0035FA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3619   0035FC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3620   0035FE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3621   003600  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3622   003602  3209               	rrcf	___aodiv@divisor^0,f,c
  3623   003604  2E11               	decfsz	___aodiv@counter^0,f,c
  3624   003606  EFC8  F01A         	goto	l3288
  3625   00360A                     l3300:
  3626   00360A  5012               	movf	___aodiv@sign^0,w,c
  3627   00360C  B4D8               	btfsc	status,2,c
  3628   00360E  EF0B  F01B         	goto	u2541
  3629   003612  EF0D  F01B         	goto	u2540
  3630   003616                     u2541:
  3631   003616  EF1D  F01B         	goto	l3304
  3632   00361A                     u2540:
  3633   00361A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3634   00361C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3635   00361E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3636   003620  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3637   003622  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3638   003624  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3639   003626  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3640   003628  6C13               	negf	___aodiv@quotient^0,c
  3641   00362A  0E00               	movlw	0
  3642   00362C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3643   00362E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3644   003630  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3645   003632  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3646   003634  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3647   003636  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3648   003638  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3649   00363A                     l3304:
  3650   00363A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3651   00363E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3652   003642  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3653   003646  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3654   00364A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3655   00364E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3656   003652  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3657   003656  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3658   00365A  0012               	return		;funcret
  3659   00365C                     __end_of___aodiv:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _sendStringSerial4 *****************
  3663 ;; Defined at:
  3664 ;;		line 33 in file "serial.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  string          2    1[COMRAM] PTR unsigned char 
  3667 ;;		 -> main@buf(100), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		_sendCharSerial4
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text12
  3694   004C56                     __ptext12:
  3695                           	callstack 0
  3696   004C56                     _sendStringSerial4:
  3697                           	callstack 28
  3698   004C56                     
  3699                           ;serial.c: 34:     while (*string!=0){
  3700   004C56  EF36  F026         	goto	l4488
  3701   004C5A                     l4484:
  3702                           
  3703                           ;serial.c: 35:         sendCharSerial4(*string++);
  3704   004C5A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3705   004C5E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3706   004C62  50DF               	movf	indf2,w,c
  3707   004C64  ECD6  F026         	call	_sendCharSerial4
  3708   004C68  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3709   004C6A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3710   004C6C                     l4488:
  3711                           
  3712                           ;serial.c: 34:     while (*string!=0){
  3713   004C6C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3714   004C70  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3715   004C74  50DF               	movf	indf2,w,c
  3716   004C76  A4D8               	btfss	status,2,c
  3717   004C78  EF40  F026         	goto	u4281
  3718   004C7C  EF42  F026         	goto	u4280
  3719   004C80                     u4281:
  3720   004C80  EF2D  F026         	goto	l4484
  3721   004C84                     u4280:
  3722   004C84  0012               	return		;funcret
  3723   004C86                     __end_of_sendStringSerial4:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _sendCharSerial4 *****************
  3727 ;; Defined at:
  3728 ;;		line 26 in file "serial.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  charToSend      1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  charToSend      1    0[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_sendStringSerial4
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text13
  3757   004DAC                     __ptext13:
  3758                           	callstack 0
  3759   004DAC                     _sendCharSerial4:
  3760                           	callstack 28
  3761                           
  3762                           ;incstack = 0
  3763                           ;sendCharSerial4@charToSend stored from wreg
  3764   004DAC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3765   004DAE                     l209:
  3766   004DAE  010E               	movlb	14	; () banked
  3767   004DB0  A537               	btfss	55,2,b	;volatile
  3768   004DB2  EFDD  F026         	goto	u3311
  3769   004DB6  EFDF  F026         	goto	u3310
  3770   004DBA                     u3311:
  3771   004DBA  EFD7  F026         	goto	l209
  3772   004DBE                     u3310:
  3773   004DBE                     
  3774                           ; BSR set to: 14
  3775                           ;serial.c: 28:     TX4REG = charToSend;
  3776   004DBE  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3777   004DC2                     
  3778                           ; BSR set to: 14
  3779   004DC2  0012               	return		;funcret
  3780   004DC4                     __end_of_sendCharSerial4:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _readColours *****************
  3784 ;; Defined at:
  3785 ;;		line 105 in file "color.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  vals            2   11[COMRAM] PTR struct RGB
  3788 ;;		 -> vals(8), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:        2 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 4
  3807 ;; This function calls:
  3808 ;;		_color_read_Blue
  3809 ;;		_color_read_Green
  3810 ;;		_color_read_Red
  3811 ;;		_color_read_lum
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text14
  3818   00444C                     __ptext14:
  3819                           	callstack 0
  3820   00444C                     _readColours:
  3821                           	callstack 26
  3822   00444C                     
  3823                           ;color.c: 107:     vals ->R = color_read_Red();
  3824   00444C  ECAC  F024         	call	_color_read_Red	;wreg free
  3825   004450  C00C  FFD9         	movff	readColours@vals,fsr2l
  3826   004454  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3827   004458  C005  FFDE         	movff	?_color_read_Red,postinc2
  3828   00445C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3829                           
  3830                           ;color.c: 108:     vals ->B = color_read_Blue();
  3831   004460  ECFC  F024         	call	_color_read_Blue	;wreg free
  3832   004464  EE20 F004          	lfsr	2,4
  3833   004468  500C               	movf	readColours@vals^0,w,c
  3834   00446A  26D9               	addwf	fsr2l,f,c
  3835   00446C  500D               	movf	(readColours@vals+1)^0,w,c
  3836   00446E  22DA               	addwfc	fsr2h,f,c
  3837   004470  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3838   004474  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3839                           
  3840                           ;color.c: 109:     vals ->G = color_read_Green();
  3841   004478  ECD4  F024         	call	_color_read_Green	;wreg free
  3842   00447C  EE20 F002          	lfsr	2,2
  3843   004480  500C               	movf	readColours@vals^0,w,c
  3844   004482  26D9               	addwf	fsr2l,f,c
  3845   004484  500D               	movf	(readColours@vals+1)^0,w,c
  3846   004486  22DA               	addwfc	fsr2h,f,c
  3847   004488  C005  FFDE         	movff	?_color_read_Green,postinc2
  3848   00448C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3849                           
  3850                           ;color.c: 110:     vals ->L = color_read_lum();
  3851   004490  EC84  F024         	call	_color_read_lum	;wreg free
  3852   004494  EE20 F006          	lfsr	2,6
  3853   004498  500C               	movf	readColours@vals^0,w,c
  3854   00449A  26D9               	addwf	fsr2l,f,c
  3855   00449C  500D               	movf	(readColours@vals+1)^0,w,c
  3856   00449E  22DA               	addwfc	fsr2h,f,c
  3857   0044A0  C005  FFDE         	movff	?_color_read_lum,postinc2
  3858   0044A4  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3859   0044A8  0012               	return		;funcret
  3860   0044AA                     __end_of_readColours:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _color_read_lum *****************
  3864 ;; Defined at:
  3865 ;;		line 49 in file "color.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  tmp             2    9[COMRAM] unsigned int 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    4[COMRAM] unsigned int 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;Total ram usage:        7 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 3
  3886 ;; This function calls:
  3887 ;;		_I2C_2_Master_Read
  3888 ;;		_I2C_2_Master_RepStart
  3889 ;;		_I2C_2_Master_Start
  3890 ;;		_I2C_2_Master_Stop
  3891 ;;		_I2C_2_Master_Write
  3892 ;; This function is called by:
  3893 ;;		_readColours
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text15
  3898   004908                     __ptext15:
  3899                           	callstack 0
  3900   004908                     _color_read_lum:
  3901                           	callstack 26
  3902   004908                     
  3903                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3904   004908  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  3905                           
  3906                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3907   00490C  0E52               	movlw	82
  3908   00490E  ECE9  F026         	call	_I2C_2_Master_Write
  3909                           
  3910                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3911   004912  0EB4               	movlw	180
  3912   004914  ECE9  F026         	call	_I2C_2_Master_Write
  3913                           
  3914                           ;color.c: 55:  I2C_2_Master_RepStart();
  3915   004918  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3916                           
  3917                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3918   00491C  0E53               	movlw	83
  3919   00491E  ECE9  F026         	call	_I2C_2_Master_Write
  3920                           
  3921                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3922   004922  0E01               	movlw	1
  3923   004924  EC90  F025         	call	_I2C_2_Master_Read
  3924   004928  6E07               	movwf	??_color_read_lum^0,c
  3925   00492A  5007               	movf	??_color_read_lum^0,w,c
  3926   00492C  6E0A               	movwf	color_read_lum@tmp^0,c
  3927   00492E  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3928                           
  3929                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3930   004930  0E00               	movlw	0
  3931   004932  EC90  F025         	call	_I2C_2_Master_Read
  3932   004936  6E07               	movwf	??_color_read_lum^0,c
  3933   004938  5007               	movf	??_color_read_lum^0,w,c
  3934   00493A  6E09               	movwf	(??_color_read_lum+2)^0,c
  3935   00493C  6A08               	clrf	(??_color_read_lum+1)^0,c
  3936   00493E  500A               	movf	color_read_lum@tmp^0,w,c
  3937   004940  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3938   004942  6E0A               	movwf	color_read_lum@tmp^0,c
  3939   004944  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3940   004946  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3941   004948  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3942                           
  3943                           ;color.c: 59:  I2C_2_Master_Stop();
  3944   00494A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3945   00494E                     
  3946                           ;color.c: 60:  return tmp;
  3947   00494E  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3948   004952  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3949   004956  0012               	return		;funcret
  3950   004958                     __end_of_color_read_lum:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _color_read_Red *****************
  3954 ;; Defined at:
  3955 ;;		line 63 in file "color.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  tmp             2    9[COMRAM] unsigned int 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2    4[COMRAM] unsigned int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;Total ram usage:        7 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		_I2C_2_Master_Read
  3978 ;;		_I2C_2_Master_RepStart
  3979 ;;		_I2C_2_Master_Start
  3980 ;;		_I2C_2_Master_Stop
  3981 ;;		_I2C_2_Master_Write
  3982 ;; This function is called by:
  3983 ;;		_readColours
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text16
  3988   004958                     __ptext16:
  3989                           	callstack 0
  3990   004958                     _color_read_Red:
  3991                           	callstack 26
  3992   004958                     
  3993                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3994   004958  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  3995                           
  3996                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3997   00495C  0E52               	movlw	82
  3998   00495E  ECE9  F026         	call	_I2C_2_Master_Write
  3999                           
  4000                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  4001   004962  0EB6               	movlw	182
  4002   004964  ECE9  F026         	call	_I2C_2_Master_Write
  4003                           
  4004                           ;color.c: 69:  I2C_2_Master_RepStart();
  4005   004968  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4006                           
  4007                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4008   00496C  0E53               	movlw	83
  4009   00496E  ECE9  F026         	call	_I2C_2_Master_Write
  4010                           
  4011                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4012   004972  0E01               	movlw	1
  4013   004974  EC90  F025         	call	_I2C_2_Master_Read
  4014   004978  6E07               	movwf	??_color_read_Red^0,c
  4015   00497A  5007               	movf	??_color_read_Red^0,w,c
  4016   00497C  6E0A               	movwf	color_read_Red@tmp^0,c
  4017   00497E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4018                           
  4019                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4020   004980  0E00               	movlw	0
  4021   004982  EC90  F025         	call	_I2C_2_Master_Read
  4022   004986  6E07               	movwf	??_color_read_Red^0,c
  4023   004988  5007               	movf	??_color_read_Red^0,w,c
  4024   00498A  6E09               	movwf	(??_color_read_Red+2)^0,c
  4025   00498C  6A08               	clrf	(??_color_read_Red+1)^0,c
  4026   00498E  500A               	movf	color_read_Red@tmp^0,w,c
  4027   004990  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4028   004992  6E0A               	movwf	color_read_Red@tmp^0,c
  4029   004994  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4030   004996  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4031   004998  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4032                           
  4033                           ;color.c: 73:  I2C_2_Master_Stop();
  4034   00499A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4035   00499E                     
  4036                           ;color.c: 74:  return tmp;
  4037   00499E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4038   0049A2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4039   0049A6  0012               	return		;funcret
  4040   0049A8                     __end_of_color_read_Red:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _color_read_Green *****************
  4044 ;; Defined at:
  4045 ;;		line 76 in file "color.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  tmp             2    9[COMRAM] unsigned int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    4[COMRAM] unsigned int 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        7 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 3
  4066 ;; This function calls:
  4067 ;;		_I2C_2_Master_Read
  4068 ;;		_I2C_2_Master_RepStart
  4069 ;;		_I2C_2_Master_Start
  4070 ;;		_I2C_2_Master_Stop
  4071 ;;		_I2C_2_Master_Write
  4072 ;; This function is called by:
  4073 ;;		_readColours
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text17
  4078   0049A8                     __ptext17:
  4079                           	callstack 0
  4080   0049A8                     _color_read_Green:
  4081                           	callstack 26
  4082   0049A8                     
  4083                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4084   0049A8  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  4085                           
  4086                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4087   0049AC  0E52               	movlw	82
  4088   0049AE  ECE9  F026         	call	_I2C_2_Master_Write
  4089                           
  4090                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4091   0049B2  0EB8               	movlw	184
  4092   0049B4  ECE9  F026         	call	_I2C_2_Master_Write
  4093                           
  4094                           ;color.c: 82:  I2C_2_Master_RepStart();
  4095   0049B8  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4096                           
  4097                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4098   0049BC  0E53               	movlw	83
  4099   0049BE  ECE9  F026         	call	_I2C_2_Master_Write
  4100                           
  4101                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4102   0049C2  0E01               	movlw	1
  4103   0049C4  EC90  F025         	call	_I2C_2_Master_Read
  4104   0049C8  6E07               	movwf	??_color_read_Green^0,c
  4105   0049CA  5007               	movf	??_color_read_Green^0,w,c
  4106   0049CC  6E0A               	movwf	color_read_Green@tmp^0,c
  4107   0049CE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4108                           
  4109                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4110   0049D0  0E00               	movlw	0
  4111   0049D2  EC90  F025         	call	_I2C_2_Master_Read
  4112   0049D6  6E07               	movwf	??_color_read_Green^0,c
  4113   0049D8  5007               	movf	??_color_read_Green^0,w,c
  4114   0049DA  6E09               	movwf	(??_color_read_Green+2)^0,c
  4115   0049DC  6A08               	clrf	(??_color_read_Green+1)^0,c
  4116   0049DE  500A               	movf	color_read_Green@tmp^0,w,c
  4117   0049E0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4118   0049E2  6E0A               	movwf	color_read_Green@tmp^0,c
  4119   0049E4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4120   0049E6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4121   0049E8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4122                           
  4123                           ;color.c: 86:  I2C_2_Master_Stop();
  4124   0049EA  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4125   0049EE                     
  4126                           ;color.c: 87:  return tmp;
  4127   0049EE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4128   0049F2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4129   0049F6  0012               	return		;funcret
  4130   0049F8                     __end_of_color_read_Green:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _color_read_Blue *****************
  4134 ;; Defined at:
  4135 ;;		line 90 in file "color.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  tmp             2    9[COMRAM] unsigned int 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    4[COMRAM] unsigned int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        7 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 3
  4156 ;; This function calls:
  4157 ;;		_I2C_2_Master_Read
  4158 ;;		_I2C_2_Master_RepStart
  4159 ;;		_I2C_2_Master_Start
  4160 ;;		_I2C_2_Master_Stop
  4161 ;;		_I2C_2_Master_Write
  4162 ;; This function is called by:
  4163 ;;		_readColours
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text18
  4168   0049F8                     __ptext18:
  4169                           	callstack 0
  4170   0049F8                     _color_read_Blue:
  4171                           	callstack 26
  4172   0049F8                     
  4173                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4174   0049F8  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  4175                           
  4176                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4177   0049FC  0E52               	movlw	82
  4178   0049FE  ECE9  F026         	call	_I2C_2_Master_Write
  4179                           
  4180                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4181   004A02  0EBA               	movlw	186
  4182   004A04  ECE9  F026         	call	_I2C_2_Master_Write
  4183                           
  4184                           ;color.c: 96:  I2C_2_Master_RepStart();
  4185   004A08  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4186                           
  4187                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4188   004A0C  0E53               	movlw	83
  4189   004A0E  ECE9  F026         	call	_I2C_2_Master_Write
  4190                           
  4191                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4192   004A12  0E01               	movlw	1
  4193   004A14  EC90  F025         	call	_I2C_2_Master_Read
  4194   004A18  6E07               	movwf	??_color_read_Blue^0,c
  4195   004A1A  5007               	movf	??_color_read_Blue^0,w,c
  4196   004A1C  6E0A               	movwf	color_read_Blue@tmp^0,c
  4197   004A1E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4198                           
  4199                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4200   004A20  0E00               	movlw	0
  4201   004A22  EC90  F025         	call	_I2C_2_Master_Read
  4202   004A26  6E07               	movwf	??_color_read_Blue^0,c
  4203   004A28  5007               	movf	??_color_read_Blue^0,w,c
  4204   004A2A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4205   004A2C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4206   004A2E  500A               	movf	color_read_Blue@tmp^0,w,c
  4207   004A30  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4208   004A32  6E0A               	movwf	color_read_Blue@tmp^0,c
  4209   004A34  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4210   004A36  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4211   004A38  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4212                           
  4213                           ;color.c: 100:  I2C_2_Master_Stop();
  4214   004A3A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4215   004A3E                     
  4216                           ;color.c: 101:  return tmp;
  4217   004A3E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4218   004A42  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4219   004A46  0012               	return		;funcret
  4220   004A48                     __end_of_color_read_Blue:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _I2C_2_Master_RepStart *****************
  4224 ;; Defined at:
  4225 ;;		line 33 in file "i2c.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 2
  4246 ;; This function calls:
  4247 ;;		_I2C_2_Master_Idle
  4248 ;; This function is called by:
  4249 ;;		_color_read_lum
  4250 ;;		_color_read_Red
  4251 ;;		_color_read_Green
  4252 ;;		_color_read_Blue
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text19
  4257   004DDE                     __ptext19:
  4258                           	callstack 0
  4259   004DDE                     _I2C_2_Master_RepStart:
  4260                           	callstack 26
  4261   004DDE                     
  4262                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4263   004DDE  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4264   004DE2                     
  4265                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4266   004DE2  010E               	movlb	14	; () banked
  4267   004DE4  83DA               	bsf	218,1,b	;volatile
  4268   004DE6                     
  4269                           ; BSR set to: 14
  4270   004DE6  0012               	return		;funcret
  4271   004DE8                     __end_of_I2C_2_Master_RepStart:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _I2C_2_Master_Read *****************
  4275 ;; Defined at:
  4276 ;;		line 51 in file "i2c.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  ack             1    wreg     unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  ack             1    2[COMRAM] unsigned char 
  4281 ;;  tmp             1    3[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;Total ram usage:        3 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 2
  4298 ;; This function calls:
  4299 ;;		_I2C_2_Master_Idle
  4300 ;; This function is called by:
  4301 ;;		_color_read_lum
  4302 ;;		_color_read_Red
  4303 ;;		_color_read_Green
  4304 ;;		_color_read_Blue
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text20
  4309   004B20                     __ptext20:
  4310                           	callstack 0
  4311   004B20                     _I2C_2_Master_Read:
  4312                           	callstack 26
  4313                           
  4314                           ; BSR set to: 14
  4315                           ;incstack = 0
  4316                           ;I2C_2_Master_Read@ack stored from wreg
  4317   004B20  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4318   004B22                     
  4319                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4320   004B22  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4321   004B26                     
  4322                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4323   004B26  010E               	movlb	14	; () banked
  4324   004B28  87DA               	bsf	218,3,b	;volatile
  4325                           
  4326                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4327   004B2A  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4328   004B2E                     
  4329                           ;i2c.c: 57:   tmp = SSP2BUF;
  4330   004B2E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4331                           
  4332                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4333   004B32  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4334   004B36                     
  4335                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4336   004B36  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4337   004B38  B4D8               	btfsc	status,2,c
  4338   004B3A  EFA1  F025         	goto	u2861
  4339   004B3E  EFA5  F025         	goto	u2860
  4340   004B42                     u2861:
  4341   004B42  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4342   004B44  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4343   004B46  EFA6  F025         	goto	u2878
  4344   004B4A                     u2860:
  4345   004B4A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4346   004B4C                     u2878:
  4347   004B4C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4348   004B4E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4349   004B50  010E               	movlb	14	; () banked
  4350   004B52  51DA               	movf	218,w,b	;volatile
  4351   004B54  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4352   004B56  0BDF               	andlw	-33
  4353   004B58  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4354   004B5A  6FDA               	movwf	218,b	;volatile
  4355   004B5C                     
  4356                           ; BSR set to: 14
  4357                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4358   004B5C  89DA               	bsf	218,4,b	;volatile
  4359   004B5E                     
  4360                           ; BSR set to: 14
  4361                           ;i2c.c: 61:   return tmp;
  4362   004B5E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4363   004B60                     
  4364                           ; BSR set to: 14
  4365   004B60  0012               	return		;funcret
  4366   004B62                     __end_of_I2C_2_Master_Read:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _initUSART4 *****************
  4370 ;; Defined at:
  4371 ;;		line 4 in file "serial.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text21
  4400   004D8E                     __ptext21:
  4401                           	callstack 0
  4402   004D8E                     _initUSART4:
  4403                           	callstack 29
  4404   004D8E                     
  4405                           ;serial.c: 5:     RC0PPS = 0x12;
  4406   004D8E  0E12               	movlw	18
  4407   004D90  010E               	movlb	14	; () banked
  4408   004D92  6F62               	movwf	98,b	;volatile
  4409                           
  4410                           ;serial.c: 6:     RX4PPS = 0x11;
  4411   004D94  0E11               	movlw	17
  4412   004D96  6F15               	movwf	21,b	;volatile
  4413   004D98                     
  4414                           ; BSR set to: 14
  4415                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4416   004D98  97E9               	bcf	233,3,b	;volatile
  4417   004D9A                     
  4418                           ; BSR set to: 14
  4419                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4420   004D9A  95E8               	bcf	232,2,b	;volatile
  4421                           
  4422                           ;serial.c: 9:     SP4BRGL = 51;
  4423   004D9C  0E33               	movlw	51
  4424   004D9E  6FE5               	movwf	229,b	;volatile
  4425                           
  4426                           ;serial.c: 10:     SP4BRGH = 0;
  4427   004DA0  0E00               	movlw	0
  4428   004DA2  6FE6               	movwf	230,b	;volatile
  4429   004DA4                     
  4430                           ; BSR set to: 14
  4431                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4432   004DA4  89E7               	bsf	231,4,b	;volatile
  4433   004DA6                     
  4434                           ; BSR set to: 14
  4435                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4436   004DA6  8BE8               	bsf	232,5,b	;volatile
  4437   004DA8                     
  4438                           ; BSR set to: 14
  4439                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4440   004DA8  8FE7               	bsf	231,7,b	;volatile
  4441   004DAA                     
  4442                           ; BSR set to: 14
  4443   004DAA  0012               	return		;funcret
  4444   004DAC                     __end_of_initUSART4:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _initDCmotorsPWM *****************
  4448 ;; Defined at:
  4449 ;;		line 5 in file "dc_motor.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;Total ram usage:        2 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text22
  4478   004182                     __ptext22:
  4479                           	callstack 0
  4480   004182                     _initDCmotorsPWM:
  4481                           	callstack 29
  4482   004182                     
  4483                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4484   004182  0E05               	movlw	5
  4485   004184  010E               	movlb	14	; () banked
  4486   004186  6F74               	movwf	116,b	;volatile
  4487                           
  4488                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4489   004188  0E06               	movlw	6
  4490   00418A  6F76               	movwf	118,b	;volatile
  4491                           
  4492                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4493   00418C  0E07               	movlw	7
  4494   00418E  6F69               	movwf	105,b	;volatile
  4495                           
  4496                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4497   004190  0E08               	movlw	8
  4498   004192  6F88               	movwf	136,b	;volatile
  4499   004194                     
  4500                           ; BSR set to: 14
  4501                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4502   004194  9485               	bcf	133,2,c	;volatile
  4503   004196                     
  4504                           ; BSR set to: 14
  4505                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4506   004196  9885               	bcf	133,4,c	;volatile
  4507   004198                     
  4508                           ; BSR set to: 14
  4509                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4510   004198  9E83               	bcf	131,7,c	;volatile
  4511   00419A                     
  4512                           ; BSR set to: 14
  4513                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4514   00419A  9C87               	bcf	135,6,c	;volatile
  4515                           
  4516                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4517   00419C  50BD               	movf	189,w,c	;volatile
  4518   00419E  0B8F               	andlw	-113
  4519   0041A0  0930               	iorlw	48
  4520   0041A2  6EBD               	movwf	189,c	;volatile
  4521                           
  4522                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4523   0041A4  0EE0               	movlw	-32
  4524   0041A6  16BE               	andwf	190,f,c	;volatile
  4525                           
  4526                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4527   0041A8  50BF               	movf	191,w,c	;volatile
  4528   0041AA  0BF0               	andlw	-16
  4529   0041AC  0901               	iorlw	1
  4530   0041AE  6EBF               	movwf	191,c	;volatile
  4531   0041B0                     
  4532                           ; BSR set to: 14
  4533                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4534   0041B0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4535   0041B4                     
  4536                           ; BSR set to: 14
  4537                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4538   0041B4  8EBD               	bsf	189,7,c	;volatile
  4539                           
  4540                           ;dc_motor.c: 33:     CCPR1H=0;
  4541   0041B6  0E00               	movlw	0
  4542   0041B8  6EAA               	movwf	170,c	;volatile
  4543                           
  4544                           ;dc_motor.c: 34:     CCPR2H=0;
  4545   0041BA  0E00               	movlw	0
  4546   0041BC  6EA6               	movwf	166,c	;volatile
  4547                           
  4548                           ;dc_motor.c: 35:     CCPR3H=0;
  4549   0041BE  0E00               	movlw	0
  4550   0041C0  010F               	movlb	15	; () banked
  4551   0041C2  6F25               	movwf	37,b	;volatile
  4552                           
  4553                           ;dc_motor.c: 36:     CCPR4H=0;
  4554   0041C4  0E00               	movlw	0
  4555   0041C6  6F21               	movwf	33,b	;volatile
  4556                           
  4557                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4558   0041C8  0EFC               	movlw	-4
  4559   0041CA  16AD               	andwf	173,f,c	;volatile
  4560                           
  4561                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4562   0041CC  0EF3               	movlw	-13
  4563   0041CE  16AD               	andwf	173,f,c	;volatile
  4564                           
  4565                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4566   0041D0  0ECF               	movlw	-49
  4567   0041D2  16AD               	andwf	173,f,c	;volatile
  4568                           
  4569                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4570   0041D4  0E3F               	movlw	-193
  4571   0041D6  16AD               	andwf	173,f,c	;volatile
  4572   0041D8                     
  4573                           ; BSR set to: 15
  4574                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4575   0041D8  88AB               	bsf	171,4,c	;volatile
  4576                           
  4577                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4578   0041DA  50AB               	movf	171,w,c	;volatile
  4579   0041DC  0BF0               	andlw	-16
  4580   0041DE  090C               	iorlw	12
  4581   0041E0  6EAB               	movwf	171,c	;volatile
  4582   0041E2                     
  4583                           ; BSR set to: 15
  4584                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4585   0041E2  8EAB               	bsf	171,7,c	;volatile
  4586   0041E4                     
  4587                           ; BSR set to: 15
  4588                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4589   0041E4  88A7               	bsf	167,4,c	;volatile
  4590                           
  4591                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4592   0041E6  50A7               	movf	167,w,c	;volatile
  4593   0041E8  0BF0               	andlw	-16
  4594   0041EA  090C               	iorlw	12
  4595   0041EC  6EA7               	movwf	167,c	;volatile
  4596   0041EE                     
  4597                           ; BSR set to: 15
  4598                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4599   0041EE  8EA7               	bsf	167,7,c	;volatile
  4600   0041F0                     
  4601                           ; BSR set to: 15
  4602                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4603   0041F0  8926               	bsf	38,4,b	;volatile
  4604                           
  4605                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4606   0041F2  5126               	movf	38,w,b	;volatile
  4607   0041F4  0BF0               	andlw	-16
  4608   0041F6  090C               	iorlw	12
  4609   0041F8  6F26               	movwf	38,b	;volatile
  4610   0041FA                     
  4611                           ; BSR set to: 15
  4612                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4613   0041FA  8F26               	bsf	38,7,b	;volatile
  4614   0041FC                     
  4615                           ; BSR set to: 15
  4616                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4617   0041FC  8922               	bsf	34,4,b	;volatile
  4618                           
  4619                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4620   0041FE  5122               	movf	34,w,b	;volatile
  4621   004200  0BF0               	andlw	-16
  4622   004202  090C               	iorlw	12
  4623   004204  6F22               	movwf	34,b	;volatile
  4624   004206                     
  4625                           ; BSR set to: 15
  4626                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4627   004206  8F22               	bsf	34,7,b	;volatile
  4628   004208                     
  4629                           ; BSR set to: 15
  4630   004208  0012               	return		;funcret
  4631   00420A                     __end_of_initDCmotorsPWM:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _go_Home *****************
  4635 ;; Defined at:
  4636 ;;		line 4 in file "Memory.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4639 ;;		 -> WayBack(50), 
  4640 ;;  Time_forward    2   37[COMRAM] PTR int 
  4641 ;;		 -> Time_forward(100), 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  i               2   42[COMRAM] int 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;Total ram usage:        9 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 6
  4660 ;; This function calls:
  4661 ;;		_BlueMove
  4662 ;;		_GreenMove
  4663 ;;		_LightBlueMove
  4664 ;;		_OrangeMove
  4665 ;;		_RedMove
  4666 ;;		_ReversePink
  4667 ;;		_ReverseYellow
  4668 ;;		_reverseDetect
  4669 ;;		_timed_forward
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text23
  4676   002DF6                     __ptext23:
  4677                           	callstack 0
  4678   002DF6                     _go_Home:
  4679                           	callstack 24
  4680   002DF6                     
  4681                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4682   002DF6  C0F0  F02B         	movff	_move_count,go_Home@i	;volatile
  4683   002DFA  C0F1  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  4684   002DFE                     l4568:
  4685   002DFE  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  4686   002E00  EF06  F017         	goto	u4320
  4687   002E04  EF04  F017         	goto	u4321
  4688   002E08                     u4321:
  4689   002E08  EF08  F017         	goto	l4572
  4690   002E0C                     u4320:
  4691   002E0C  EF50  F018         	goto	l635
  4692   002E10                     l4572:
  4693                           
  4694                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  4695   002E10  0EF5               	movlw	low _motorL
  4696   002E12  6E14               	movwf	timed_forward@mL^0,c
  4697   002E14  0E00               	movlw	high _motorL
  4698   002E16  6E15               	movwf	(timed_forward@mL+1)^0,c
  4699   002E18  0EBC               	movlw	low _motorR
  4700   002E1A  6E16               	movwf	timed_forward@mR^0,c
  4701   002E1C  0E01               	movlw	high _motorR
  4702   002E1E  6E17               	movwf	(timed_forward@mR+1)^0,c
  4703   002E20  90D8               	bcf	status,0,c
  4704   002E22  342B               	rlcf	go_Home@i^0,w,c
  4705   002E24  6ED9               	movwf	fsr2l,c
  4706   002E26  342C               	rlcf	(go_Home@i+1)^0,w,c
  4707   002E28  6EDA               	movwf	fsr2h,c
  4708   002E2A  5026               	movf	go_Home@Time_forward^0,w,c
  4709   002E2C  26D9               	addwf	fsr2l,f,c
  4710   002E2E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4711   002E30  22DA               	addwfc	fsr2h,f,c
  4712   002E32  CFDE F018          	movff	postinc2,timed_forward@time
  4713   002E36  CFDD F019          	movff	postdec2,timed_forward@time+1
  4714   002E3A  ECDB  F01E         	call	_timed_forward	;wreg free
  4715   002E3E                     
  4716                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  4717   002E3E  502B               	movf	go_Home@i^0,w,c
  4718   002E40  2424               	addwf	go_Home@WayBack^0,w,c
  4719   002E42  6E28               	movwf	??_go_Home^0,c
  4720   002E44  502C               	movf	(go_Home@i+1)^0,w,c
  4721   002E46  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4722   002E48  6E29               	movwf	(??_go_Home+1)^0,c
  4723   002E4A  0EFF               	movlw	255
  4724   002E4C  2428               	addwf	??_go_Home^0,w,c
  4725   002E4E  6ED9               	movwf	fsr2l,c
  4726   002E50  0EFF               	movlw	255
  4727   002E52  2029               	addwfc	(??_go_Home+1)^0,w,c
  4728   002E54  6EDA               	movwf	fsr2h,c
  4729   002E56  04DE               	decf	postinc2,w,c
  4730   002E58  A4D8               	btfss	status,2,c
  4731   002E5A  EF31  F017         	goto	u4331
  4732   002E5E  EF33  F017         	goto	u4330
  4733   002E62                     u4331:
  4734   002E62  EF49  F017         	goto	l4578
  4735   002E66                     u4330:
  4736   002E66                     
  4737                           ;Memory.c: 22:             reverseDetect(&motorL, &motorR);
  4738   002E66  0EF5               	movlw	low _motorL
  4739   002E68  6E1A               	movwf	reverseDetect@mL^0,c
  4740   002E6A  0E00               	movlw	high _motorL
  4741   002E6C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4742   002E6E  0EBC               	movlw	low _motorR
  4743   002E70  6E1C               	movwf	reverseDetect@mR^0,c
  4744   002E72  0E01               	movlw	high _motorR
  4745   002E74  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4746   002E76  EC09  F023         	call	_reverseDetect	;wreg free
  4747                           
  4748                           ;Memory.c: 23:             GreenMove(&motorL, &motorR);
  4749   002E7A  0EF5               	movlw	low _motorL
  4750   002E7C  6E20               	movwf	GreenMove@mL^0,c
  4751   002E7E  0E00               	movlw	high _motorL
  4752   002E80  6E21               	movwf	(GreenMove@mL+1)^0,c
  4753   002E82  0EBC               	movlw	low _motorR
  4754   002E84  6E22               	movwf	GreenMove@mR^0,c
  4755   002E86  0E01               	movlw	high _motorR
  4756   002E88  6E23               	movwf	(GreenMove@mR+1)^0,c
  4757   002E8A  ECF0  F025         	call	_GreenMove	;wreg free
  4758                           
  4759                           ;Memory.c: 24:         }
  4760   002E8E  EF4B  F018         	goto	l4602
  4761   002E92                     l4578:
  4762   002E92  502B               	movf	go_Home@i^0,w,c
  4763   002E94  2424               	addwf	go_Home@WayBack^0,w,c
  4764   002E96  6E28               	movwf	??_go_Home^0,c
  4765   002E98  502C               	movf	(go_Home@i+1)^0,w,c
  4766   002E9A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4767   002E9C  6E29               	movwf	(??_go_Home+1)^0,c
  4768   002E9E  0EFF               	movlw	255
  4769   002EA0  2428               	addwf	??_go_Home^0,w,c
  4770   002EA2  6ED9               	movwf	fsr2l,c
  4771   002EA4  0EFF               	movlw	255
  4772   002EA6  2029               	addwfc	(??_go_Home+1)^0,w,c
  4773   002EA8  6EDA               	movwf	fsr2h,c
  4774   002EAA  0E02               	movlw	2
  4775   002EAC  18DE               	xorwf	postinc2,w,c
  4776   002EAE  A4D8               	btfss	status,2,c
  4777   002EB0  EF5C  F017         	goto	u4341
  4778   002EB4  EF5E  F017         	goto	u4340
  4779   002EB8                     u4341:
  4780   002EB8  EF74  F017         	goto	l4582
  4781   002EBC                     u4340:
  4782   002EBC                     
  4783                           ;Memory.c: 26:             reverseDetect(&motorL, &motorR);
  4784   002EBC  0EF5               	movlw	low _motorL
  4785   002EBE  6E1A               	movwf	reverseDetect@mL^0,c
  4786   002EC0  0E00               	movlw	high _motorL
  4787   002EC2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4788   002EC4  0EBC               	movlw	low _motorR
  4789   002EC6  6E1C               	movwf	reverseDetect@mR^0,c
  4790   002EC8  0E01               	movlw	high _motorR
  4791   002ECA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4792   002ECC  EC09  F023         	call	_reverseDetect	;wreg free
  4793                           
  4794                           ;Memory.c: 27:             LightBlueMove(&motorL, &motorR);
  4795   002ED0  0EF5               	movlw	low _motorL
  4796   002ED2  6E20               	movwf	LightBlueMove@mL^0,c
  4797   002ED4  0E00               	movlw	high _motorL
  4798   002ED6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4799   002ED8  0EBC               	movlw	low _motorR
  4800   002EDA  6E22               	movwf	LightBlueMove@mR^0,c
  4801   002EDC  0E01               	movlw	high _motorR
  4802   002EDE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4803   002EE0  ECE0  F023         	call	_LightBlueMove	;wreg free
  4804                           
  4805                           ;Memory.c: 28:         }
  4806   002EE4  EF4B  F018         	goto	l4602
  4807   002EE8                     l4582:
  4808   002EE8  502B               	movf	go_Home@i^0,w,c
  4809   002EEA  2424               	addwf	go_Home@WayBack^0,w,c
  4810   002EEC  6E28               	movwf	??_go_Home^0,c
  4811   002EEE  502C               	movf	(go_Home@i+1)^0,w,c
  4812   002EF0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4813   002EF2  6E29               	movwf	(??_go_Home+1)^0,c
  4814   002EF4  0EFF               	movlw	255
  4815   002EF6  2428               	addwf	??_go_Home^0,w,c
  4816   002EF8  6ED9               	movwf	fsr2l,c
  4817   002EFA  0EFF               	movlw	255
  4818   002EFC  2029               	addwfc	(??_go_Home+1)^0,w,c
  4819   002EFE  6EDA               	movwf	fsr2h,c
  4820   002F00  0E03               	movlw	3
  4821   002F02  18DE               	xorwf	postinc2,w,c
  4822   002F04  A4D8               	btfss	status,2,c
  4823   002F06  EF87  F017         	goto	u4351
  4824   002F0A  EF89  F017         	goto	u4350
  4825   002F0E                     u4351:
  4826   002F0E  EF9F  F017         	goto	l4586
  4827   002F12                     u4350:
  4828   002F12                     
  4829                           ;Memory.c: 30:             reverseDetect(&motorL, &motorR);
  4830   002F12  0EF5               	movlw	low _motorL
  4831   002F14  6E1A               	movwf	reverseDetect@mL^0,c
  4832   002F16  0E00               	movlw	high _motorL
  4833   002F18  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4834   002F1A  0EBC               	movlw	low _motorR
  4835   002F1C  6E1C               	movwf	reverseDetect@mR^0,c
  4836   002F1E  0E01               	movlw	high _motorR
  4837   002F20  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4838   002F22  EC09  F023         	call	_reverseDetect	;wreg free
  4839                           
  4840                           ;Memory.c: 31:             ReverseYellow(&motorL, &motorR);
  4841   002F26  0EF5               	movlw	low _motorL
  4842   002F28  6E20               	movwf	ReverseYellow@mL^0,c
  4843   002F2A  0E00               	movlw	high _motorL
  4844   002F2C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4845   002F2E  0EBC               	movlw	low _motorR
  4846   002F30  6E22               	movwf	ReverseYellow@mR^0,c
  4847   002F32  0E01               	movlw	high _motorR
  4848   002F34  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4849   002F36  EC25  F01E         	call	_ReverseYellow	;wreg free
  4850                           
  4851                           ;Memory.c: 32:         }
  4852   002F3A  EF4B  F018         	goto	l4602
  4853   002F3E                     l4586:
  4854   002F3E  502B               	movf	go_Home@i^0,w,c
  4855   002F40  2424               	addwf	go_Home@WayBack^0,w,c
  4856   002F42  6E28               	movwf	??_go_Home^0,c
  4857   002F44  502C               	movf	(go_Home@i+1)^0,w,c
  4858   002F46  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4859   002F48  6E29               	movwf	(??_go_Home+1)^0,c
  4860   002F4A  0EFF               	movlw	255
  4861   002F4C  2428               	addwf	??_go_Home^0,w,c
  4862   002F4E  6ED9               	movwf	fsr2l,c
  4863   002F50  0EFF               	movlw	255
  4864   002F52  2029               	addwfc	(??_go_Home+1)^0,w,c
  4865   002F54  6EDA               	movwf	fsr2h,c
  4866   002F56  0E04               	movlw	4
  4867   002F58  18DE               	xorwf	postinc2,w,c
  4868   002F5A  A4D8               	btfss	status,2,c
  4869   002F5C  EFB2  F017         	goto	u4361
  4870   002F60  EFB4  F017         	goto	u4360
  4871   002F64                     u4361:
  4872   002F64  EFCA  F017         	goto	l4590
  4873   002F68                     u4360:
  4874   002F68                     
  4875                           ;Memory.c: 34:             reverseDetect(&motorL, &motorR);
  4876   002F68  0EF5               	movlw	low _motorL
  4877   002F6A  6E1A               	movwf	reverseDetect@mL^0,c
  4878   002F6C  0E00               	movlw	high _motorL
  4879   002F6E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4880   002F70  0EBC               	movlw	low _motorR
  4881   002F72  6E1C               	movwf	reverseDetect@mR^0,c
  4882   002F74  0E01               	movlw	high _motorR
  4883   002F76  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4884   002F78  EC09  F023         	call	_reverseDetect	;wreg free
  4885                           
  4886                           ;Memory.c: 35:             BlueMove(&motorL, &motorR);
  4887   002F7C  0EF5               	movlw	low _motorL
  4888   002F7E  6E20               	movwf	BlueMove@mL^0,c
  4889   002F80  0E00               	movlw	high _motorL
  4890   002F82  6E21               	movwf	(BlueMove@mL+1)^0,c
  4891   002F84  0EBC               	movlw	low _motorR
  4892   002F86  6E22               	movwf	BlueMove@mR^0,c
  4893   002F88  0E01               	movlw	high _motorR
  4894   002F8A  6E23               	movwf	(BlueMove@mR+1)^0,c
  4895   002F8C  ECF3  F021         	call	_BlueMove	;wreg free
  4896                           
  4897                           ;Memory.c: 36:         }
  4898   002F90  EF4B  F018         	goto	l4602
  4899   002F94                     l4590:
  4900   002F94  502B               	movf	go_Home@i^0,w,c
  4901   002F96  2424               	addwf	go_Home@WayBack^0,w,c
  4902   002F98  6E28               	movwf	??_go_Home^0,c
  4903   002F9A  502C               	movf	(go_Home@i+1)^0,w,c
  4904   002F9C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4905   002F9E  6E29               	movwf	(??_go_Home+1)^0,c
  4906   002FA0  0EFF               	movlw	255
  4907   002FA2  2428               	addwf	??_go_Home^0,w,c
  4908   002FA4  6ED9               	movwf	fsr2l,c
  4909   002FA6  0EFF               	movlw	255
  4910   002FA8  2029               	addwfc	(??_go_Home+1)^0,w,c
  4911   002FAA  6EDA               	movwf	fsr2h,c
  4912   002FAC  0E05               	movlw	5
  4913   002FAE  18DE               	xorwf	postinc2,w,c
  4914   002FB0  A4D8               	btfss	status,2,c
  4915   002FB2  EFDD  F017         	goto	u4371
  4916   002FB6  EFDF  F017         	goto	u4370
  4917   002FBA                     u4371:
  4918   002FBA  EFF5  F017         	goto	l4594
  4919   002FBE                     u4370:
  4920   002FBE                     
  4921                           ;Memory.c: 38:             reverseDetect(&motorL, &motorR);
  4922   002FBE  0EF5               	movlw	low _motorL
  4923   002FC0  6E1A               	movwf	reverseDetect@mL^0,c
  4924   002FC2  0E00               	movlw	high _motorL
  4925   002FC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4926   002FC6  0EBC               	movlw	low _motorR
  4927   002FC8  6E1C               	movwf	reverseDetect@mR^0,c
  4928   002FCA  0E01               	movlw	high _motorR
  4929   002FCC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4930   002FCE  EC09  F023         	call	_reverseDetect	;wreg free
  4931                           
  4932                           ;Memory.c: 39:             RedMove(&motorL, &motorR);
  4933   002FD2  0EF5               	movlw	low _motorL
  4934   002FD4  6E20               	movwf	RedMove@mL^0,c
  4935   002FD6  0E00               	movlw	high _motorL
  4936   002FD8  6E21               	movwf	(RedMove@mL+1)^0,c
  4937   002FDA  0EBC               	movlw	low _motorR
  4938   002FDC  6E22               	movwf	RedMove@mR^0,c
  4939   002FDE  0E01               	movlw	high _motorR
  4940   002FE0  6E23               	movwf	(RedMove@mR+1)^0,c
  4941   002FE2  ECD1  F025         	call	_RedMove	;wreg free
  4942                           
  4943                           ;Memory.c: 40:         }
  4944   002FE6  EF4B  F018         	goto	l4602
  4945   002FEA                     l4594:
  4946   002FEA  502B               	movf	go_Home@i^0,w,c
  4947   002FEC  2424               	addwf	go_Home@WayBack^0,w,c
  4948   002FEE  6E28               	movwf	??_go_Home^0,c
  4949   002FF0  502C               	movf	(go_Home@i+1)^0,w,c
  4950   002FF2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4951   002FF4  6E29               	movwf	(??_go_Home+1)^0,c
  4952   002FF6  0EFF               	movlw	255
  4953   002FF8  2428               	addwf	??_go_Home^0,w,c
  4954   002FFA  6ED9               	movwf	fsr2l,c
  4955   002FFC  0EFF               	movlw	255
  4956   002FFE  2029               	addwfc	(??_go_Home+1)^0,w,c
  4957   003000  6EDA               	movwf	fsr2h,c
  4958   003002  0E06               	movlw	6
  4959   003004  18DE               	xorwf	postinc2,w,c
  4960   003006  A4D8               	btfss	status,2,c
  4961   003008  EF08  F018         	goto	u4381
  4962   00300C  EF0A  F018         	goto	u4380
  4963   003010                     u4381:
  4964   003010  EF20  F018         	goto	l4598
  4965   003014                     u4380:
  4966   003014                     
  4967                           ;Memory.c: 42:             reverseDetect(&motorL, &motorR);
  4968   003014  0EF5               	movlw	low _motorL
  4969   003016  6E1A               	movwf	reverseDetect@mL^0,c
  4970   003018  0E00               	movlw	high _motorL
  4971   00301A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4972   00301C  0EBC               	movlw	low _motorR
  4973   00301E  6E1C               	movwf	reverseDetect@mR^0,c
  4974   003020  0E01               	movlw	high _motorR
  4975   003022  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4976   003024  EC09  F023         	call	_reverseDetect	;wreg free
  4977                           
  4978                           ;Memory.c: 43:             OrangeMove(&motorL, &motorR);
  4979   003028  0EF5               	movlw	low _motorL
  4980   00302A  6E20               	movwf	OrangeMove@mL^0,c
  4981   00302C  0E00               	movlw	high _motorL
  4982   00302E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4983   003030  0EBC               	movlw	low _motorR
  4984   003032  6E22               	movwf	OrangeMove@mR^0,c
  4985   003034  0E01               	movlw	high _motorR
  4986   003036  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4987   003038  ECB7  F023         	call	_OrangeMove	;wreg free
  4988                           
  4989                           ;Memory.c: 44:         }
  4990   00303C  EF4B  F018         	goto	l4602
  4991   003040                     l4598:
  4992   003040  502B               	movf	go_Home@i^0,w,c
  4993   003042  2424               	addwf	go_Home@WayBack^0,w,c
  4994   003044  6E28               	movwf	??_go_Home^0,c
  4995   003046  502C               	movf	(go_Home@i+1)^0,w,c
  4996   003048  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4997   00304A  6E29               	movwf	(??_go_Home+1)^0,c
  4998   00304C  0EFF               	movlw	255
  4999   00304E  2428               	addwf	??_go_Home^0,w,c
  5000   003050  6ED9               	movwf	fsr2l,c
  5001   003052  0EFF               	movlw	255
  5002   003054  2029               	addwfc	(??_go_Home+1)^0,w,c
  5003   003056  6EDA               	movwf	fsr2h,c
  5004   003058  0E07               	movlw	7
  5005   00305A  18DE               	xorwf	postinc2,w,c
  5006   00305C  A4D8               	btfss	status,2,c
  5007   00305E  EF33  F018         	goto	u4391
  5008   003062  EF35  F018         	goto	u4390
  5009   003066                     u4391:
  5010   003066  EF4B  F018         	goto	l629
  5011   00306A                     u4390:
  5012   00306A                     
  5013                           ;Memory.c: 46:             reverseDetect(&motorL, &motorR);
  5014   00306A  0EF5               	movlw	low _motorL
  5015   00306C  6E1A               	movwf	reverseDetect@mL^0,c
  5016   00306E  0E00               	movlw	high _motorL
  5017   003070  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5018   003072  0EBC               	movlw	low _motorR
  5019   003074  6E1C               	movwf	reverseDetect@mR^0,c
  5020   003076  0E01               	movlw	high _motorR
  5021   003078  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5022   00307A  EC09  F023         	call	_reverseDetect	;wreg free
  5023                           
  5024                           ;Memory.c: 47:             ReversePink(&motorL, &motorR);
  5025   00307E  0EF5               	movlw	low _motorL
  5026   003080  6E20               	movwf	ReversePink@mL^0,c
  5027   003082  0E00               	movlw	high _motorL
  5028   003084  6E21               	movwf	(ReversePink@mL+1)^0,c
  5029   003086  0EBC               	movlw	low _motorR
  5030   003088  6E22               	movwf	ReversePink@mR^0,c
  5031   00308A  0E01               	movlw	high _motorR
  5032   00308C  6E23               	movwf	(ReversePink@mR+1)^0,c
  5033   00308E  EC80  F01E         	call	_ReversePink	;wreg free
  5034   003092  EF4B  F018         	goto	l4602
  5035   003096                     l629:
  5036   003096                     l4602:
  5037                           
  5038                           ;Memory.c: 51:   }
  5039   003096  062B               	decf	go_Home@i^0,f,c
  5040   003098  A0D8               	btfss	status,0,c
  5041   00309A  062C               	decf	(go_Home@i+1)^0,f,c
  5042   00309C  EFFF  F016         	goto	l4568
  5043   0030A0                     l635:
  5044   0030A0  0012               	return		;funcret
  5045   0030A2                     __end_of_go_Home:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _timed_forward *****************
  5049 ;; Defined at:
  5050 ;;		line 164 in file "dc_motor.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5053 ;;		 -> motorL(9), 
  5054 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5055 ;;		 -> motorR(9), 
  5056 ;;  time            2   23[COMRAM] int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;Total ram usage:        8 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 3
  5075 ;; This function calls:
  5076 ;;		_delayed_ms
  5077 ;;		_setMotorPWM
  5078 ;; This function is called by:
  5079 ;;		_go_Home
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text24
  5084   003DB6                     __ptext24:
  5085                           	callstack 0
  5086   003DB6                     _timed_forward:
  5087                           	callstack 26
  5088   003DB6                     
  5089                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  5090   003DB6  EE20 F001          	lfsr	2,1
  5091   003DBA  5014               	movf	timed_forward@mL^0,w,c
  5092   003DBC  26D9               	addwf	fsr2l,f,c
  5093   003DBE  5015               	movf	(timed_forward@mL+1)^0,w,c
  5094   003DC0  22DA               	addwfc	fsr2h,f,c
  5095   003DC2  0E01               	movlw	1
  5096   003DC4  6EDF               	movwf	indf2,c
  5097                           
  5098                           ;dc_motor.c: 168:     mR->direction =1;
  5099   003DC6  EE20 F001          	lfsr	2,1
  5100   003DCA  5016               	movf	timed_forward@mR^0,w,c
  5101   003DCC  26D9               	addwf	fsr2l,f,c
  5102   003DCE  5017               	movf	(timed_forward@mR+1)^0,w,c
  5103   003DD0  22DA               	addwfc	fsr2h,f,c
  5104   003DD2  0E01               	movlw	1
  5105   003DD4  6EDF               	movwf	indf2,c
  5106                           
  5107                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  5108   003DD6  EF11  F01F         	goto	l3848
  5109   003DDA                     l3840:
  5110                           
  5111                           ;dc_motor.c: 171:         mL->power+=10;
  5112   003DDA  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5113   003DDE  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5114   003DE2  0E0A               	movlw	10
  5115   003DE4  26DF               	addwf	indf2,f,c
  5116                           
  5117                           ;dc_motor.c: 172:         mR->power+=10;
  5118   003DE6  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5119   003DEA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5120   003DEE  0E0A               	movlw	10
  5121   003DF0  26DF               	addwf	indf2,f,c
  5122   003DF2                     
  5123                           ;dc_motor.c: 174:         setMotorPWM(mL);
  5124   003DF2  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5125   003DF6  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5126   003DFA  EC2E  F01B         	call	_setMotorPWM	;wreg free
  5127   003DFE                     
  5128                           ;dc_motor.c: 175:         setMotorPWM(mR);
  5129   003DFE  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5130   003E02  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5131   003E06  EC2E  F01B         	call	_setMotorPWM	;wreg free
  5132   003E0A                     
  5133                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5134   003E0A  0E02               	movlw	2
  5135   003E0C  6E1B               	movwf	(??_timed_forward+1)^0,c
  5136   003E0E  0EA0               	movlw	160
  5137   003E10  6E1A               	movwf	??_timed_forward^0,c
  5138   003E12  0E92               	movlw	146
  5139   003E14                     u4777:
  5140   003E14  2EE8               	decfsz	wreg,f,c
  5141   003E16  D7FE               	bra	u4777
  5142   003E18  2E1A               	decfsz	??_timed_forward^0,f,c
  5143   003E1A  D7FC               	bra	u4777
  5144   003E1C  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5145   003E1E  D7FA               	bra	u4777
  5146   003E20  D000               	nop2	
  5147   003E22                     l3848:
  5148   003E22  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5149   003E26  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5150   003E2A  0E1E               	movlw	30
  5151   003E2C  60DF               	cpfslt	indf2,c
  5152   003E2E  EF1B  F01F         	goto	u3321
  5153   003E32  EF1D  F01F         	goto	u3320
  5154   003E36                     u3321:
  5155   003E36  EF29  F01F         	goto	l3852
  5156   003E3A                     u3320:
  5157   003E3A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5158   003E3E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5159   003E42  0E1D               	movlw	29
  5160   003E44  64DF               	cpfsgt	indf2,c
  5161   003E46  EF27  F01F         	goto	u3331
  5162   003E4A  EF29  F01F         	goto	u3330
  5163   003E4E                     u3331:
  5164   003E4E  EFED  F01E         	goto	l3840
  5165   003E52                     u3330:
  5166   003E52                     l3852:
  5167                           
  5168                           ;dc_motor.c: 180:     delayed_ms(time);
  5169   003E52  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5170   003E56  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5171   003E5A  EC0F  F026         	call	_delayed_ms	;wreg free
  5172   003E5E  0012               	return		;funcret
  5173   003E60                     __end_of_timed_forward:
  5174                           	callstack 0
  5175                           
  5176 ;; *************** function _delayed_ms *****************
  5177 ;; Defined at:
  5178 ;;		line 39 in file "timers.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  time            2    0[COMRAM] int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  i               2    3[COMRAM] unsigned int 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;Total ram usage:        5 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_timed_forward
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text25
  5207   004C1E                     __ptext25:
  5208                           	callstack 0
  5209   004C1E                     _delayed_ms:
  5210                           	callstack 27
  5211   004C1E                     
  5212                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5213   004C1E  0E00               	movlw	0
  5214   004C20  6E05               	movwf	(delayed_ms@i+1)^0,c
  5215   004C22  0E00               	movlw	0
  5216   004C24  6E04               	movwf	delayed_ms@i^0,c
  5217   004C26  EF1F  F026         	goto	l662
  5218   004C2A                     l3520:
  5219                           
  5220                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5221   004C2A  0E15               	movlw	21
  5222   004C2C  6E03               	movwf	??_delayed_ms^0,c
  5223   004C2E  0EC6               	movlw	198
  5224   004C30                     u4787:
  5225   004C30  2EE8               	decfsz	wreg,f,c
  5226   004C32  D7FE               	bra	u4787
  5227   004C34  2E03               	decfsz	??_delayed_ms^0,f,c
  5228   004C36  D7FC               	bra	u4787
  5229   004C38  D000               	nop2	
  5230   004C3A                     
  5231                           ;timers.c: 42:     }
  5232   004C3A  4A04               	infsnz	delayed_ms@i^0,f,c
  5233   004C3C  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5234   004C3E                     l662:
  5235   004C3E  5001               	movf	delayed_ms@time^0,w,c
  5236   004C40  5C04               	subwf	delayed_ms@i^0,w,c
  5237   004C42  5002               	movf	(delayed_ms@time+1)^0,w,c
  5238   004C44  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5239   004C46  A0D8               	btfss	status,0,c
  5240   004C48  EF28  F026         	goto	u2881
  5241   004C4C  EF2A  F026         	goto	u2880
  5242   004C50                     u2881:
  5243   004C50  EF15  F026         	goto	l3520
  5244   004C54                     u2880:
  5245   004C54  0012               	return		;funcret
  5246   004C56                     __end_of_delayed_ms:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _ReverseYellow *****************
  5250 ;; Defined at:
  5251 ;;		line 320 in file "dc_motor.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5254 ;;		 -> motorL(9), 
  5255 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5256 ;;		 -> motorR(9), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 5
  5275 ;; This function calls:
  5276 ;;		_ForwardOneBlock
  5277 ;;		_reverseDetect
  5278 ;;		_turnRight45
  5279 ;; This function is called by:
  5280 ;;		_go_Home
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text26
  5285   003C4A                     __ptext26:
  5286                           	callstack 0
  5287   003C4A                     _ReverseYellow:
  5288                           	callstack 24
  5289   003C4A                     
  5290                           ;dc_motor.c: 321:     reverseDetect(&motorL, &motorR);
  5291   003C4A  0EF5               	movlw	low _motorL
  5292   003C4C  6E1A               	movwf	reverseDetect@mL^0,c
  5293   003C4E  0E00               	movlw	high _motorL
  5294   003C50  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5295   003C52  0EBC               	movlw	low _motorR
  5296   003C54  6E1C               	movwf	reverseDetect@mR^0,c
  5297   003C56  0E01               	movlw	high _motorR
  5298   003C58  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5299   003C5A  EC09  F023         	call	_reverseDetect	;wreg free
  5300                           
  5301                           ;dc_motor.c: 322:     turnRight45(&motorL, &motorR);
  5302   003C5E  0EF5               	movlw	low _motorL
  5303   003C60  6E1A               	movwf	turnRight45@mL^0,c
  5304   003C62  0E00               	movlw	high _motorL
  5305   003C64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5306   003C66  0EBC               	movlw	low _motorR
  5307   003C68  6E1C               	movwf	turnRight45@mR^0,c
  5308   003C6A  0E01               	movlw	high _motorR
  5309   003C6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5310   003C6E  EC36  F023         	call	_turnRight45	;wreg free
  5311                           
  5312                           ;dc_motor.c: 323:     turnRight45(&motorL, &motorR);
  5313   003C72  0EF5               	movlw	low _motorL
  5314   003C74  6E1A               	movwf	turnRight45@mL^0,c
  5315   003C76  0E00               	movlw	high _motorL
  5316   003C78  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5317   003C7A  0EBC               	movlw	low _motorR
  5318   003C7C  6E1C               	movwf	turnRight45@mR^0,c
  5319   003C7E  0E01               	movlw	high _motorR
  5320   003C80  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5321   003C82  EC36  F023         	call	_turnRight45	;wreg free
  5322                           
  5323                           ;dc_motor.c: 324:     ForwardOneBlock(&motorL, &motorR);
  5324   003C86  0EF5               	movlw	low _motorL
  5325   003C88  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5326   003C8A  0E00               	movlw	high _motorL
  5327   003C8C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5328   003C8E  0EBC               	movlw	low _motorR
  5329   003C90  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5330   003C92  0E01               	movlw	high _motorR
  5331   003C94  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5332   003C96  EC55  F022         	call	_ForwardOneBlock	;wreg free
  5333                           
  5334                           ;dc_motor.c: 325:     reverseDetect(&motorL, &motorR);
  5335   003C9A  0EF5               	movlw	low _motorL
  5336   003C9C  6E1A               	movwf	reverseDetect@mL^0,c
  5337   003C9E  0E00               	movlw	high _motorL
  5338   003CA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5339   003CA2  0EBC               	movlw	low _motorR
  5340   003CA4  6E1C               	movwf	reverseDetect@mR^0,c
  5341   003CA6  0E01               	movlw	high _motorR
  5342   003CA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5343   003CAA  EC09  F023         	call	_reverseDetect	;wreg free
  5344                           
  5345                           ;dc_motor.c: 326:     turnRight45(&motorL, &motorR);
  5346   003CAE  0EF5               	movlw	low _motorL
  5347   003CB0  6E1A               	movwf	turnRight45@mL^0,c
  5348   003CB2  0E00               	movlw	high _motorL
  5349   003CB4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5350   003CB6  0EBC               	movlw	low _motorR
  5351   003CB8  6E1C               	movwf	turnRight45@mR^0,c
  5352   003CBA  0E01               	movlw	high _motorR
  5353   003CBC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5354   003CBE  EC36  F023         	call	_turnRight45	;wreg free
  5355                           
  5356                           ;dc_motor.c: 327:     turnRight45(&motorL, &motorR);
  5357   003CC2  0EF5               	movlw	low _motorL
  5358   003CC4  6E1A               	movwf	turnRight45@mL^0,c
  5359   003CC6  0E00               	movlw	high _motorL
  5360   003CC8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5361   003CCA  0EBC               	movlw	low _motorR
  5362   003CCC  6E1C               	movwf	turnRight45@mR^0,c
  5363   003CCE  0E01               	movlw	high _motorR
  5364   003CD0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5365   003CD2  EC36  F023         	call	_turnRight45	;wreg free
  5366                           
  5367                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
  5368   003CD6  0EF5               	movlw	low _motorL
  5369   003CD8  6E1A               	movwf	turnRight45@mL^0,c
  5370   003CDA  0E00               	movlw	high _motorL
  5371   003CDC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5372   003CDE  0EBC               	movlw	low _motorR
  5373   003CE0  6E1C               	movwf	turnRight45@mR^0,c
  5374   003CE2  0E01               	movlw	high _motorR
  5375   003CE4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5376   003CE6  EC36  F023         	call	_turnRight45	;wreg free
  5377                           
  5378                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
  5379   003CEA  0EF5               	movlw	low _motorL
  5380   003CEC  6E1A               	movwf	turnRight45@mL^0,c
  5381   003CEE  0E00               	movlw	high _motorL
  5382   003CF0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5383   003CF2  0EBC               	movlw	low _motorR
  5384   003CF4  6E1C               	movwf	turnRight45@mR^0,c
  5385   003CF6  0E01               	movlw	high _motorR
  5386   003CF8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5387   003CFA  EC36  F023         	call	_turnRight45	;wreg free
  5388   003CFE  0012               	return		;funcret
  5389   003D00                     __end_of_ReverseYellow:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _ReversePink *****************
  5393 ;; Defined at:
  5394 ;;		line 332 in file "dc_motor.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5397 ;;		 -> motorL(9), 
  5398 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5399 ;;		 -> motorR(9), 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;Total ram usage:        4 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; Hardware stack levels required when called: 5
  5418 ;; This function calls:
  5419 ;;		_ForwardOneBlock
  5420 ;;		_reverseDetect
  5421 ;;		_turnLeft45
  5422 ;; This function is called by:
  5423 ;;		_go_Home
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text27
  5428   003D00                     __ptext27:
  5429                           	callstack 0
  5430   003D00                     _ReversePink:
  5431                           	callstack 24
  5432   003D00                     
  5433                           ;dc_motor.c: 333:     reverseDetect(&motorL, &motorR);
  5434   003D00  0EF5               	movlw	low _motorL
  5435   003D02  6E1A               	movwf	reverseDetect@mL^0,c
  5436   003D04  0E00               	movlw	high _motorL
  5437   003D06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5438   003D08  0EBC               	movlw	low _motorR
  5439   003D0A  6E1C               	movwf	reverseDetect@mR^0,c
  5440   003D0C  0E01               	movlw	high _motorR
  5441   003D0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5442   003D10  EC09  F023         	call	_reverseDetect	;wreg free
  5443                           
  5444                           ;dc_motor.c: 334:     turnLeft45(&motorL, &motorR);
  5445   003D14  0EF5               	movlw	low _motorL
  5446   003D16  6E1A               	movwf	turnLeft45@mL^0,c
  5447   003D18  0E00               	movlw	high _motorL
  5448   003D1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5449   003D1C  0EBC               	movlw	low _motorR
  5450   003D1E  6E1C               	movwf	turnLeft45@mR^0,c
  5451   003D20  0E01               	movlw	high _motorR
  5452   003D22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5453   003D24  EC62  F023         	call	_turnLeft45	;wreg free
  5454                           
  5455                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5456   003D28  0EF5               	movlw	low _motorL
  5457   003D2A  6E1A               	movwf	turnLeft45@mL^0,c
  5458   003D2C  0E00               	movlw	high _motorL
  5459   003D2E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5460   003D30  0EBC               	movlw	low _motorR
  5461   003D32  6E1C               	movwf	turnLeft45@mR^0,c
  5462   003D34  0E01               	movlw	high _motorR
  5463   003D36  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5464   003D38  EC62  F023         	call	_turnLeft45	;wreg free
  5465                           
  5466                           ;dc_motor.c: 336:     ForwardOneBlock(&motorL, &motorR);
  5467   003D3C  0EF5               	movlw	low _motorL
  5468   003D3E  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5469   003D40  0E00               	movlw	high _motorL
  5470   003D42  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5471   003D44  0EBC               	movlw	low _motorR
  5472   003D46  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5473   003D48  0E01               	movlw	high _motorR
  5474   003D4A  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5475   003D4C  EC55  F022         	call	_ForwardOneBlock	;wreg free
  5476                           
  5477                           ;dc_motor.c: 337:     reverseDetect(&motorL, &motorR);
  5478   003D50  0EF5               	movlw	low _motorL
  5479   003D52  6E1A               	movwf	reverseDetect@mL^0,c
  5480   003D54  0E00               	movlw	high _motorL
  5481   003D56  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5482   003D58  0EBC               	movlw	low _motorR
  5483   003D5A  6E1C               	movwf	reverseDetect@mR^0,c
  5484   003D5C  0E01               	movlw	high _motorR
  5485   003D5E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5486   003D60  EC09  F023         	call	_reverseDetect	;wreg free
  5487                           
  5488                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
  5489   003D64  0EF5               	movlw	low _motorL
  5490   003D66  6E1A               	movwf	turnLeft45@mL^0,c
  5491   003D68  0E00               	movlw	high _motorL
  5492   003D6A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5493   003D6C  0EBC               	movlw	low _motorR
  5494   003D6E  6E1C               	movwf	turnLeft45@mR^0,c
  5495   003D70  0E01               	movlw	high _motorR
  5496   003D72  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5497   003D74  EC62  F023         	call	_turnLeft45	;wreg free
  5498                           
  5499                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
  5500   003D78  0EF5               	movlw	low _motorL
  5501   003D7A  6E1A               	movwf	turnLeft45@mL^0,c
  5502   003D7C  0E00               	movlw	high _motorL
  5503   003D7E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5504   003D80  0EBC               	movlw	low _motorR
  5505   003D82  6E1C               	movwf	turnLeft45@mR^0,c
  5506   003D84  0E01               	movlw	high _motorR
  5507   003D86  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5508   003D88  EC62  F023         	call	_turnLeft45	;wreg free
  5509                           
  5510                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
  5511   003D8C  0EF5               	movlw	low _motorL
  5512   003D8E  6E1A               	movwf	turnLeft45@mL^0,c
  5513   003D90  0E00               	movlw	high _motorL
  5514   003D92  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5515   003D94  0EBC               	movlw	low _motorR
  5516   003D96  6E1C               	movwf	turnLeft45@mR^0,c
  5517   003D98  0E01               	movlw	high _motorR
  5518   003D9A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5519   003D9C  EC62  F023         	call	_turnLeft45	;wreg free
  5520                           
  5521                           ;dc_motor.c: 341:     turnLeft45(&motorL, &motorR);
  5522   003DA0  0EF5               	movlw	low _motorL
  5523   003DA2  6E1A               	movwf	turnLeft45@mL^0,c
  5524   003DA4  0E00               	movlw	high _motorL
  5525   003DA6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5526   003DA8  0EBC               	movlw	low _motorR
  5527   003DAA  6E1C               	movwf	turnLeft45@mR^0,c
  5528   003DAC  0E01               	movlw	high _motorR
  5529   003DAE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5530   003DB0  EC62  F023         	call	_turnLeft45	;wreg free
  5531   003DB4  0012               	return		;funcret
  5532   003DB6                     __end_of_ReversePink:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _ForwardOneBlock *****************
  5536 ;; Defined at:
  5537 ;;		line 228 in file "dc_motor.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5540 ;;		 -> motorL(9), 
  5541 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5542 ;;		 -> motorR(9), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;Total ram usage:        6 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 4
  5561 ;; This function calls:
  5562 ;;		_fullSpeedAhead
  5563 ;;		_stop
  5564 ;; This function is called by:
  5565 ;;		_ReverseYellow
  5566 ;;		_ReversePink
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text28
  5571   0044AA                     __ptext28:
  5572                           	callstack 0
  5573   0044AA                     _ForwardOneBlock:
  5574                           	callstack 24
  5575   0044AA                     
  5576                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  5577   0044AA  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5578   0044AE  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5579   0044B2  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5580   0044B6  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5581   0044BA  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  5582   0044BE                     
  5583                           ;dc_motor.c: 230:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5584   0044BE  0EA3               	movlw	163
  5585   0044C0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5586   0044C2  0E57               	movlw	87
  5587   0044C4  6E1E               	movwf	??_ForwardOneBlock^0,c
  5588   0044C6  0E02               	movlw	2
  5589   0044C8                     u4797:
  5590   0044C8  2EE8               	decfsz	wreg,f,c
  5591   0044CA  D7FE               	bra	u4797
  5592   0044CC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5593   0044CE  D7FC               	bra	u4797
  5594   0044D0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5595   0044D2  D7FA               	bra	u4797
  5596   0044D4  D000               	nop2	
  5597   0044D6                     
  5598                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  5599   0044D6  0EF5               	movlw	low _motorL
  5600   0044D8  6E14               	movwf	stop@mL^0,c
  5601   0044DA  0E00               	movlw	high _motorL
  5602   0044DC  6E15               	movwf	(stop@mL+1)^0,c
  5603   0044DE  0EBC               	movlw	low _motorR
  5604   0044E0  6E16               	movwf	stop@mR^0,c
  5605   0044E2  0E01               	movlw	high _motorR
  5606   0044E4  6E17               	movwf	(stop@mR+1)^0,c
  5607   0044E6  EC05  F021         	call	_stop	;wreg free
  5608                           
  5609                           ;dc_motor.c: 232:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5610   0044EA  0E05               	movlw	5
  5611   0044EC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5612   0044EE  0E0F               	movlw	15
  5613   0044F0  6E1E               	movwf	??_ForwardOneBlock^0,c
  5614   0044F2  0EF1               	movlw	241
  5615   0044F4                     u4807:
  5616   0044F4  2EE8               	decfsz	wreg,f,c
  5617   0044F6  D7FE               	bra	u4807
  5618   0044F8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5619   0044FA  D7FC               	bra	u4807
  5620   0044FC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5621   0044FE  D7FA               	bra	u4807
  5622   004500  F000               	nop	
  5623   004502  0012               	return		;funcret
  5624   004504                     __end_of_ForwardOneBlock:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function _RedMove *****************
  5628 ;; Defined at:
  5629 ;;		line 252 in file "dc_motor.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5632 ;;		 -> motorL(9), 
  5633 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5634 ;;		 -> motorR(9), 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;Total ram usage:        4 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 5
  5653 ;; This function calls:
  5654 ;;		_reverseDetect
  5655 ;;		_turnRight45
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;;		_go_Home
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text29
  5663   004BA2                     __ptext29:
  5664                           	callstack 0
  5665   004BA2                     _RedMove:
  5666                           	callstack 24
  5667   004BA2                     
  5668                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  5669   004BA2  0EF5               	movlw	low _motorL
  5670   004BA4  6E1A               	movwf	reverseDetect@mL^0,c
  5671   004BA6  0E00               	movlw	high _motorL
  5672   004BA8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5673   004BAA  0EBC               	movlw	low _motorR
  5674   004BAC  6E1C               	movwf	reverseDetect@mR^0,c
  5675   004BAE  0E01               	movlw	high _motorR
  5676   004BB0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5677   004BB2  EC09  F023         	call	_reverseDetect	;wreg free
  5678                           
  5679                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  5680   004BB6  0EF5               	movlw	low _motorL
  5681   004BB8  6E1A               	movwf	turnRight45@mL^0,c
  5682   004BBA  0E00               	movlw	high _motorL
  5683   004BBC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5684   004BBE  0EBC               	movlw	low _motorR
  5685   004BC0  6E1C               	movwf	turnRight45@mR^0,c
  5686   004BC2  0E01               	movlw	high _motorR
  5687   004BC4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5688   004BC6  EC36  F023         	call	_turnRight45	;wreg free
  5689                           
  5690                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  5691   004BCA  0EF5               	movlw	low _motorL
  5692   004BCC  6E1A               	movwf	turnRight45@mL^0,c
  5693   004BCE  0E00               	movlw	high _motorL
  5694   004BD0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5695   004BD2  0EBC               	movlw	low _motorR
  5696   004BD4  6E1C               	movwf	turnRight45@mR^0,c
  5697   004BD6  0E01               	movlw	high _motorR
  5698   004BD8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5699   004BDA  EC36  F023         	call	_turnRight45	;wreg free
  5700   004BDE  0012               	return		;funcret
  5701   004BE0                     __end_of_RedMove:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _OrangeMove *****************
  5705 ;; Defined at:
  5706 ;;		line 298 in file "dc_motor.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5709 ;;		 -> motorL(9), 
  5710 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5711 ;;		 -> motorR(9), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;Total ram usage:        4 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 5
  5730 ;; This function calls:
  5731 ;;		_reverseDetect
  5732 ;;		_turnRight45
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;;		_go_Home
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text30
  5740   00476E                     __ptext30:
  5741                           	callstack 0
  5742   00476E                     _OrangeMove:
  5743                           	callstack 24
  5744   00476E                     
  5745                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  5746   00476E  0EF5               	movlw	low _motorL
  5747   004770  6E1A               	movwf	reverseDetect@mL^0,c
  5748   004772  0E00               	movlw	high _motorL
  5749   004774  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5750   004776  0EBC               	movlw	low _motorR
  5751   004778  6E1C               	movwf	reverseDetect@mR^0,c
  5752   00477A  0E01               	movlw	high _motorR
  5753   00477C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5754   00477E  EC09  F023         	call	_reverseDetect	;wreg free
  5755                           
  5756                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  5757   004782  0EF5               	movlw	low _motorL
  5758   004784  6E1A               	movwf	turnRight45@mL^0,c
  5759   004786  0E00               	movlw	high _motorL
  5760   004788  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5761   00478A  0EBC               	movlw	low _motorR
  5762   00478C  6E1C               	movwf	turnRight45@mR^0,c
  5763   00478E  0E01               	movlw	high _motorR
  5764   004790  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5765   004792  EC36  F023         	call	_turnRight45	;wreg free
  5766                           
  5767                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  5768   004796  0EF5               	movlw	low _motorL
  5769   004798  6E1A               	movwf	turnRight45@mL^0,c
  5770   00479A  0E00               	movlw	high _motorL
  5771   00479C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5772   00479E  0EBC               	movlw	low _motorR
  5773   0047A0  6E1C               	movwf	turnRight45@mR^0,c
  5774   0047A2  0E01               	movlw	high _motorR
  5775   0047A4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5776   0047A6  EC36  F023         	call	_turnRight45	;wreg free
  5777                           
  5778                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  5779   0047AA  0EF5               	movlw	low _motorL
  5780   0047AC  6E1A               	movwf	turnRight45@mL^0,c
  5781   0047AE  0E00               	movlw	high _motorL
  5782   0047B0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5783   0047B2  0EBC               	movlw	low _motorR
  5784   0047B4  6E1C               	movwf	turnRight45@mR^0,c
  5785   0047B6  0E01               	movlw	high _motorR
  5786   0047B8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5787   0047BA  EC36  F023         	call	_turnRight45	;wreg free
  5788   0047BE  0012               	return		;funcret
  5789   0047C0                     __end_of_OrangeMove:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function _LightBlueMove *****************
  5793 ;; Defined at:
  5794 ;;		line 307 in file "dc_motor.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5797 ;;		 -> motorL(9), 
  5798 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5799 ;;		 -> motorR(9), 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;Total ram usage:        4 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 5
  5818 ;; This function calls:
  5819 ;;		_reverseDetect
  5820 ;;		_turnLeft45
  5821 ;; This function is called by:
  5822 ;;		_main
  5823 ;;		_go_Home
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text31
  5828   0047C0                     __ptext31:
  5829                           	callstack 0
  5830   0047C0                     _LightBlueMove:
  5831                           	callstack 24
  5832   0047C0                     
  5833                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  5834   0047C0  0EF5               	movlw	low _motorL
  5835   0047C2  6E1A               	movwf	reverseDetect@mL^0,c
  5836   0047C4  0E00               	movlw	high _motorL
  5837   0047C6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5838   0047C8  0EBC               	movlw	low _motorR
  5839   0047CA  6E1C               	movwf	reverseDetect@mR^0,c
  5840   0047CC  0E01               	movlw	high _motorR
  5841   0047CE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5842   0047D0  EC09  F023         	call	_reverseDetect	;wreg free
  5843                           
  5844                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  5845   0047D4  0EF5               	movlw	low _motorL
  5846   0047D6  6E1A               	movwf	turnLeft45@mL^0,c
  5847   0047D8  0E00               	movlw	high _motorL
  5848   0047DA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5849   0047DC  0EBC               	movlw	low _motorR
  5850   0047DE  6E1C               	movwf	turnLeft45@mR^0,c
  5851   0047E0  0E01               	movlw	high _motorR
  5852   0047E2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5853   0047E4  EC62  F023         	call	_turnLeft45	;wreg free
  5854                           
  5855                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  5856   0047E8  0EF5               	movlw	low _motorL
  5857   0047EA  6E1A               	movwf	turnLeft45@mL^0,c
  5858   0047EC  0E00               	movlw	high _motorL
  5859   0047EE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5860   0047F0  0EBC               	movlw	low _motorR
  5861   0047F2  6E1C               	movwf	turnLeft45@mR^0,c
  5862   0047F4  0E01               	movlw	high _motorR
  5863   0047F6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5864   0047F8  EC62  F023         	call	_turnLeft45	;wreg free
  5865                           
  5866                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  5867   0047FC  0EF5               	movlw	low _motorL
  5868   0047FE  6E1A               	movwf	turnLeft45@mL^0,c
  5869   004800  0E00               	movlw	high _motorL
  5870   004802  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5871   004804  0EBC               	movlw	low _motorR
  5872   004806  6E1C               	movwf	turnLeft45@mR^0,c
  5873   004808  0E01               	movlw	high _motorR
  5874   00480A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5875   00480C  EC62  F023         	call	_turnLeft45	;wreg free
  5876   004810  0012               	return		;funcret
  5877   004812                     __end_of_LightBlueMove:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _GreenMove *****************
  5881 ;; Defined at:
  5882 ;;		line 260 in file "dc_motor.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5885 ;;		 -> motorL(9), 
  5886 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5887 ;;		 -> motorR(9), 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 5
  5906 ;; This function calls:
  5907 ;;		_reverseDetect
  5908 ;;		_turnLeft45
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;;		_go_Home
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text32
  5916   004BE0                     __ptext32:
  5917                           	callstack 0
  5918   004BE0                     _GreenMove:
  5919                           	callstack 24
  5920   004BE0                     
  5921                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  5922   004BE0  0EF5               	movlw	low _motorL
  5923   004BE2  6E1A               	movwf	reverseDetect@mL^0,c
  5924   004BE4  0E00               	movlw	high _motorL
  5925   004BE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5926   004BE8  0EBC               	movlw	low _motorR
  5927   004BEA  6E1C               	movwf	reverseDetect@mR^0,c
  5928   004BEC  0E01               	movlw	high _motorR
  5929   004BEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5930   004BF0  EC09  F023         	call	_reverseDetect	;wreg free
  5931                           
  5932                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  5933   004BF4  0EF5               	movlw	low _motorL
  5934   004BF6  6E1A               	movwf	turnLeft45@mL^0,c
  5935   004BF8  0E00               	movlw	high _motorL
  5936   004BFA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5937   004BFC  0EBC               	movlw	low _motorR
  5938   004BFE  6E1C               	movwf	turnLeft45@mR^0,c
  5939   004C00  0E01               	movlw	high _motorR
  5940   004C02  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5941   004C04  EC62  F023         	call	_turnLeft45	;wreg free
  5942                           
  5943                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  5944   004C08  0EF5               	movlw	low _motorL
  5945   004C0A  6E1A               	movwf	turnLeft45@mL^0,c
  5946   004C0C  0E00               	movlw	high _motorL
  5947   004C0E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5948   004C10  0EBC               	movlw	low _motorR
  5949   004C12  6E1C               	movwf	turnLeft45@mR^0,c
  5950   004C14  0E01               	movlw	high _motorR
  5951   004C16  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5952   004C18  EC62  F023         	call	_turnLeft45	;wreg free
  5953   004C1C  0012               	return		;funcret
  5954   004C1E                     __end_of_GreenMove:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _BlueMove *****************
  5958 ;; Defined at:
  5959 ;;		line 268 in file "dc_motor.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5962 ;;		 -> motorL(9), 
  5963 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5964 ;;		 -> motorR(9), 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5980 ;;Total ram usage:        4 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 5
  5983 ;; This function calls:
  5984 ;;		_reverseDetect
  5985 ;;		_turnRight45
  5986 ;; This function is called by:
  5987 ;;		_main
  5988 ;;		_go_Home
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text33
  5993   0043E6                     __ptext33:
  5994                           	callstack 0
  5995   0043E6                     _BlueMove:
  5996                           	callstack 24
  5997   0043E6                     
  5998                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5999   0043E6  0EF5               	movlw	low _motorL
  6000   0043E8  6E1A               	movwf	reverseDetect@mL^0,c
  6001   0043EA  0E00               	movlw	high _motorL
  6002   0043EC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6003   0043EE  0EBC               	movlw	low _motorR
  6004   0043F0  6E1C               	movwf	reverseDetect@mR^0,c
  6005   0043F2  0E01               	movlw	high _motorR
  6006   0043F4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6007   0043F6  EC09  F023         	call	_reverseDetect	;wreg free
  6008                           
  6009                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  6010   0043FA  0EF5               	movlw	low _motorL
  6011   0043FC  6E1A               	movwf	turnRight45@mL^0,c
  6012   0043FE  0E00               	movlw	high _motorL
  6013   004400  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6014   004402  0EBC               	movlw	low _motorR
  6015   004404  6E1C               	movwf	turnRight45@mR^0,c
  6016   004406  0E01               	movlw	high _motorR
  6017   004408  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6018   00440A  EC36  F023         	call	_turnRight45	;wreg free
  6019                           
  6020                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  6021   00440E  0EF5               	movlw	low _motorL
  6022   004410  6E1A               	movwf	turnRight45@mL^0,c
  6023   004412  0E00               	movlw	high _motorL
  6024   004414  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6025   004416  0EBC               	movlw	low _motorR
  6026   004418  6E1C               	movwf	turnRight45@mR^0,c
  6027   00441A  0E01               	movlw	high _motorR
  6028   00441C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6029   00441E  EC36  F023         	call	_turnRight45	;wreg free
  6030                           
  6031                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  6032   004422  0EF5               	movlw	low _motorL
  6033   004424  6E1A               	movwf	turnRight45@mL^0,c
  6034   004426  0E00               	movlw	high _motorL
  6035   004428  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6036   00442A  0EBC               	movlw	low _motorR
  6037   00442C  6E1C               	movwf	turnRight45@mR^0,c
  6038   00442E  0E01               	movlw	high _motorR
  6039   004430  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6040   004432  EC36  F023         	call	_turnRight45	;wreg free
  6041                           
  6042                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  6043   004436  0EF5               	movlw	low _motorL
  6044   004438  6E1A               	movwf	turnRight45@mL^0,c
  6045   00443A  0E00               	movlw	high _motorL
  6046   00443C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6047   00443E  0EBC               	movlw	low _motorR
  6048   004440  6E1C               	movwf	turnRight45@mR^0,c
  6049   004442  0E01               	movlw	high _motorR
  6050   004444  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6051   004446  EC36  F023         	call	_turnRight45	;wreg free
  6052   00444A  0012               	return		;funcret
  6053   00444C                     __end_of_BlueMove:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _getTMR0val *****************
  6057 ;; Defined at:
  6058 ;;		line 28 in file "timers.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  moving          2    0[COMRAM] int 
  6063 ;;  temp            2    0        unsigned int 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_main
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text34
  6088   004D02                     __ptext34:
  6089                           	callstack 0
  6090   004D02                     _getTMR0val:
  6091                           	callstack 29
  6092   004D02  50D3               	movf	211,w,c	;volatile
  6093   004D04                     
  6094                           ;timers.c: 32:     int moving=TMR0H<<8;
  6095   004D04  50D4               	movf	212,w,c	;volatile
  6096   004D06  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6097   004D08  6A01               	clrf	getTMR0val@moving^0,c
  6098   004D0A                     
  6099                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6100   004D0A  90D8               	bcf	status,0,c
  6101   004D0C  0100               	movlb	0	; () banked
  6102   004D0E  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  6103   004D10  6ED9               	movwf	fsr2l,c
  6104   004D12  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6105   004D14  6EDA               	movwf	fsr2h,c
  6106   004D16  0E00               	movlw	low _Time_forward
  6107   004D18  26D9               	addwf	fsr2l,f,c
  6108   004D1A  0E02               	movlw	high _Time_forward
  6109   004D1C  22DA               	addwfc	fsr2h,f,c
  6110   004D1E  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6111   004D22  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6112   004D26                     
  6113                           ; BSR set to: 0
  6114   004D26  0012               	return		;funcret
  6115   004D28                     __end_of_getTMR0val:
  6116                           	callstack 0
  6117                           
  6118 ;; *************** function _colour_rel *****************
  6119 ;; Defined at:
  6120 ;;		line 114 in file "color.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  vals            2   49[COMRAM] PTR struct RGB
  6123 ;;		 -> vals(8), 
  6124 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6125 ;;		 -> rel(12), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  B               4   73[COMRAM] float 
  6128 ;;  G               4   69[COMRAM] float 
  6129 ;;  R               4   65[COMRAM] float 
  6130 ;;  L               4   53[COMRAM] float 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;Total ram usage:       28 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 2
  6147 ;; This function calls:
  6148 ;;		___fladd
  6149 ;;		___fldiv
  6150 ;;		___xxtofl
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text35
  6157   002AC8                     __ptext35:
  6158                           	callstack 0
  6159   002AC8                     _colour_rel:
  6160                           	callstack 28
  6161   002AC8                     
  6162                           ;color.c: 115:     float R = vals->R;
  6163   002AC8  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6164   002ACC  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6165   002AD0  CFDE F001          	movff	postinc2,___xxtofl@val
  6166   002AD4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6167   002AD8  0E00               	movlw	0
  6168   002ADA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6169   002ADC  0EFF               	movlw	-1
  6170   002ADE  6E03               	movwf	(___xxtofl@val+2)^0,c
  6171   002AE0  6E04               	movwf	(___xxtofl@val+3)^0,c
  6172   002AE2  0E01               	movlw	1
  6173   002AE4  EC90  F019         	call	___xxtofl
  6174   002AE8  C001  F042         	movff	?___xxtofl,colour_rel@R
  6175   002AEC  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6176   002AF0  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6177   002AF4  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6178                           
  6179                           ;color.c: 116:     float G = vals->G;
  6180   002AF8  EE20 F002          	lfsr	2,2
  6181   002AFC  5032               	movf	colour_rel@vals^0,w,c
  6182   002AFE  26D9               	addwf	fsr2l,f,c
  6183   002B00  5033               	movf	(colour_rel@vals+1)^0,w,c
  6184   002B02  22DA               	addwfc	fsr2h,f,c
  6185   002B04  CFDE F001          	movff	postinc2,___xxtofl@val
  6186   002B08  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6187   002B0C  0E00               	movlw	0
  6188   002B0E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6189   002B10  0EFF               	movlw	-1
  6190   002B12  6E03               	movwf	(___xxtofl@val+2)^0,c
  6191   002B14  6E04               	movwf	(___xxtofl@val+3)^0,c
  6192   002B16  0E01               	movlw	1
  6193   002B18  EC90  F019         	call	___xxtofl
  6194   002B1C  C001  F046         	movff	?___xxtofl,colour_rel@G
  6195   002B20  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6196   002B24  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6197   002B28  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6198                           
  6199                           ;color.c: 117:     float B = vals->B;
  6200   002B2C  EE20 F004          	lfsr	2,4
  6201   002B30  5032               	movf	colour_rel@vals^0,w,c
  6202   002B32  26D9               	addwf	fsr2l,f,c
  6203   002B34  5033               	movf	(colour_rel@vals+1)^0,w,c
  6204   002B36  22DA               	addwfc	fsr2h,f,c
  6205   002B38  CFDE F001          	movff	postinc2,___xxtofl@val
  6206   002B3C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6207   002B40  0E00               	movlw	0
  6208   002B42  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6209   002B44  0EFF               	movlw	-1
  6210   002B46  6E03               	movwf	(___xxtofl@val+2)^0,c
  6211   002B48  6E04               	movwf	(___xxtofl@val+3)^0,c
  6212   002B4A  0E01               	movlw	1
  6213   002B4C  EC90  F019         	call	___xxtofl
  6214   002B50  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6215   002B54  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6216   002B58  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6217   002B5C  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6218                           
  6219                           ;color.c: 118:     float L = vals->L;
  6220   002B60  EE20 F006          	lfsr	2,6
  6221   002B64  5032               	movf	colour_rel@vals^0,w,c
  6222   002B66  26D9               	addwf	fsr2l,f,c
  6223   002B68  5033               	movf	(colour_rel@vals+1)^0,w,c
  6224   002B6A  22DA               	addwfc	fsr2h,f,c
  6225   002B6C  CFDE F001          	movff	postinc2,___xxtofl@val
  6226   002B70  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6227   002B74  0E00               	movlw	0
  6228   002B76  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6229   002B78  0EFF               	movlw	-1
  6230   002B7A  6E03               	movwf	(___xxtofl@val+2)^0,c
  6231   002B7C  6E04               	movwf	(___xxtofl@val+3)^0,c
  6232   002B7E  0E01               	movlw	1
  6233   002B80  EC90  F019         	call	___xxtofl
  6234   002B84  C001  F036         	movff	?___xxtofl,colour_rel@L
  6235   002B88  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6236   002B8C  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6237   002B90  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6238   002B94                     
  6239                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6240   002B94  C046  F005         	movff	colour_rel@G,___fladd@a
  6241   002B98  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6242   002B9C  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6243   002BA0  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6244   002BA4  C042  F001         	movff	colour_rel@R,___fladd@b
  6245   002BA8  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6246   002BAC  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6247   002BB0  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6248   002BB4  EC22  F00F         	call	___fladd	;wreg free
  6249   002BB8  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6250   002BBC  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6251   002BC0  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6252   002BC4  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6253   002BC8                     
  6254                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6255   002BC8  C04A  F005         	movff	colour_rel@B,___fladd@a
  6256   002BCC  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6257   002BD0  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6258   002BD4  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6259   002BD8  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6260   002BDC  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6261   002BE0  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6262   002BE4  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6263   002BE8  EC22  F00F         	call	___fladd	;wreg free
  6264   002BEC  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6265   002BF0  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6266   002BF4  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6267   002BF8  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6268                           
  6269                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6270   002BFC  C042  F019         	movff	colour_rel@R,___fldiv@b
  6271   002C00  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6272   002C04  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6273   002C08  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6274   002C0C  C036  F005         	movff	colour_rel@L,___fladd@a
  6275   002C10  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6276   002C14  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6277   002C18  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6278   002C1C  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6279   002C20  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6280   002C24  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6281   002C28  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6282   002C2C  EC22  F00F         	call	___fladd	;wreg free
  6283   002C30  C001  F01D         	movff	?___fladd,___fldiv@a
  6284   002C34  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6285   002C38  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6286   002C3C  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6287   002C40  EC97  F013         	call	___fldiv	;wreg free
  6288   002C44  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6289   002C48  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6290   002C4C  C019  FFDE         	movff	?___fldiv,postinc2
  6291   002C50  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6292   002C54  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6293   002C58  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6294   002C5C                     
  6295                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6296   002C5C  C046  F005         	movff	colour_rel@G,___fladd@a
  6297   002C60  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6298   002C64  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6299   002C68  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6300   002C6C  C042  F001         	movff	colour_rel@R,___fladd@b
  6301   002C70  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6302   002C74  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6303   002C78  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6304   002C7C  EC22  F00F         	call	___fladd	;wreg free
  6305   002C80  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6306   002C84  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6307   002C88  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6308   002C8C  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6309   002C90                     
  6310                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6311   002C90  C04A  F005         	movff	colour_rel@B,___fladd@a
  6312   002C94  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6313   002C98  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6314   002C9C  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6315   002CA0  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6316   002CA4  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6317   002CA8  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6318   002CAC  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6319   002CB0  EC22  F00F         	call	___fladd	;wreg free
  6320   002CB4  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6321   002CB8  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6322   002CBC  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6323   002CC0  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6324                           
  6325                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6326   002CC4  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6327   002CC8  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6328   002CCC  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6329   002CD0  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6330   002CD4  C036  F005         	movff	colour_rel@L,___fladd@a
  6331   002CD8  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6332   002CDC  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6333   002CE0  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6334   002CE4  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6335   002CE8  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6336   002CEC  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6337   002CF0  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6338   002CF4  EC22  F00F         	call	___fladd	;wreg free
  6339   002CF8  C001  F01D         	movff	?___fladd,___fldiv@a
  6340   002CFC  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6341   002D00  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6342   002D04  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6343   002D08  EC97  F013         	call	___fldiv	;wreg free
  6344   002D0C  EE20 F008          	lfsr	2,8
  6345   002D10  5034               	movf	colour_rel@rel^0,w,c
  6346   002D12  26D9               	addwf	fsr2l,f,c
  6347   002D14  5035               	movf	(colour_rel@rel+1)^0,w,c
  6348   002D16  22DA               	addwfc	fsr2h,f,c
  6349   002D18  C019  FFDE         	movff	?___fldiv,postinc2
  6350   002D1C  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6351   002D20  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6352   002D24  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6353   002D28                     
  6354                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6355   002D28  C046  F005         	movff	colour_rel@G,___fladd@a
  6356   002D2C  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6357   002D30  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6358   002D34  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6359   002D38  C042  F001         	movff	colour_rel@R,___fladd@b
  6360   002D3C  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6361   002D40  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6362   002D44  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6363   002D48  EC22  F00F         	call	___fladd	;wreg free
  6364   002D4C  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6365   002D50  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6366   002D54  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6367   002D58  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6368   002D5C                     
  6369                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6370   002D5C  C04A  F005         	movff	colour_rel@B,___fladd@a
  6371   002D60  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6372   002D64  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6373   002D68  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6374   002D6C  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6375   002D70  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6376   002D74  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6377   002D78  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6378   002D7C  EC22  F00F         	call	___fladd	;wreg free
  6379   002D80  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6380   002D84  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6381   002D88  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6382   002D8C  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6383                           
  6384                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6385   002D90  C046  F019         	movff	colour_rel@G,___fldiv@b
  6386   002D94  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6387   002D98  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6388   002D9C  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6389   002DA0  C036  F005         	movff	colour_rel@L,___fladd@a
  6390   002DA4  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6391   002DA8  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6392   002DAC  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6393   002DB0  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6394   002DB4  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6395   002DB8  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6396   002DBC  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6397   002DC0  EC22  F00F         	call	___fladd	;wreg free
  6398   002DC4  C001  F01D         	movff	?___fladd,___fldiv@a
  6399   002DC8  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6400   002DCC  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6401   002DD0  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6402   002DD4  EC97  F013         	call	___fldiv	;wreg free
  6403   002DD8  EE20 F004          	lfsr	2,4
  6404   002DDC  5034               	movf	colour_rel@rel^0,w,c
  6405   002DDE  26D9               	addwf	fsr2l,f,c
  6406   002DE0  5035               	movf	(colour_rel@rel+1)^0,w,c
  6407   002DE2  22DA               	addwfc	fsr2h,f,c
  6408   002DE4  C019  FFDE         	movff	?___fldiv,postinc2
  6409   002DE8  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6410   002DEC  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6411   002DF0  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6412   002DF4  0012               	return		;funcret
  6413   002DF6                     __end_of_colour_rel:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _color_click_init *****************
  6417 ;; Defined at:
  6418 ;;		line 7 in file "color.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;Total ram usage:        1 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 4
  6439 ;; This function calls:
  6440 ;;		_I2C_2_Master_Init
  6441 ;;		_color_writetoaddr
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text36
  6448   004812                     __ptext36:
  6449                           	callstack 0
  6450   004812                     _color_click_init:
  6451                           	callstack 26
  6452   004812                     
  6453                           ;color.c: 10:     I2C_2_Master_Init();
  6454   004812  EC43  F026         	call	_I2C_2_Master_Init	;wreg free
  6455   004816                     
  6456                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6457   004816  0E01               	movlw	1
  6458   004818  6E03               	movwf	color_writetoaddr@value^0,c
  6459   00481A  0E00               	movlw	0
  6460   00481C  ECA7  F026         	call	_color_writetoaddr
  6461   004820                     
  6462                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6463   004820  0E3F               	movlw	63
  6464   004822  6E05               	movwf	??_color_click_init^0,c
  6465   004824  0E55               	movlw	85
  6466   004826                     u4817:
  6467   004826  2EE8               	decfsz	wreg,f,c
  6468   004828  D7FE               	bra	u4817
  6469   00482A  2E05               	decfsz	??_color_click_init^0,f,c
  6470   00482C  D7FC               	bra	u4817
  6471   00482E  F000               	nop	
  6472   004830                     
  6473                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6474   004830  0E03               	movlw	3
  6475   004832  6E03               	movwf	color_writetoaddr@value^0,c
  6476   004834  0E00               	movlw	0
  6477   004836  ECA7  F026         	call	_color_writetoaddr
  6478   00483A                     
  6479                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6480   00483A  0ED5               	movlw	213
  6481   00483C  6E03               	movwf	color_writetoaddr@value^0,c
  6482   00483E  0E01               	movlw	1
  6483   004840  ECA7  F026         	call	_color_writetoaddr
  6484   004844                     
  6485                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6486   004844  0E00               	movlw	0
  6487   004846  6E03               	movwf	color_writetoaddr@value^0,c
  6488   004848  0E0F               	movlw	15
  6489   00484A  ECA7  F026         	call	_color_writetoaddr
  6490   00484E                     
  6491                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6492   00484E  9287               	bcf	135,1,c	;volatile
  6493   004850                     
  6494                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6495   004850  9881               	bcf	129,4,c	;volatile
  6496   004852                     
  6497                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6498   004852  9E86               	bcf	134,7,c	;volatile
  6499   004854                     
  6500                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6501   004854  9684               	bcf	132,3,c	;volatile
  6502   004856                     
  6503                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6504   004856  9884               	bcf	132,4,c	;volatile
  6505   004858                     
  6506                           ;color.c: 28:     LATGbits.LATG1=0;
  6507   004858  927F               	bcf	127,1,c	;volatile
  6508   00485A                     
  6509                           ;color.c: 29:     LATFbits.LATF7=0;
  6510   00485A  9E7E               	bcf	126,7,c	;volatile
  6511   00485C                     
  6512                           ;color.c: 30:     LATAbits.LATA4=0;
  6513   00485C  9879               	bcf	121,4,c	;volatile
  6514   00485E                     
  6515                           ;color.c: 32:     LATDbits.LATD3=0;
  6516   00485E  967C               	bcf	124,3,c	;volatile
  6517   004860                     
  6518                           ;color.c: 33:     LATDbits.LATD4=0;
  6519   004860  987C               	bcf	124,4,c	;volatile
  6520   004862  0012               	return		;funcret
  6521   004864                     __end_of_color_click_init:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _color_writetoaddr *****************
  6525 ;; Defined at:
  6526 ;;		line 41 in file "color.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  address         1    wreg     unsigned char 
  6529 ;;  value           1    2[COMRAM] unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  address         1    3[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;Total ram usage:        2 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 3
  6548 ;; This function calls:
  6549 ;;		_I2C_2_Master_Start
  6550 ;;		_I2C_2_Master_Stop
  6551 ;;		_I2C_2_Master_Write
  6552 ;; This function is called by:
  6553 ;;		_color_click_init
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text37
  6558   004D4E                     __ptext37:
  6559                           	callstack 0
  6560   004D4E                     _color_writetoaddr:
  6561                           	callstack 26
  6562                           
  6563                           ;incstack = 0
  6564                           ;color_writetoaddr@address stored from wreg
  6565   004D4E  6E04               	movwf	color_writetoaddr@address^0,c
  6566   004D50                     
  6567                           ;color.c: 42:     I2C_2_Master_Start();
  6568   004D50  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6571   004D54  0E52               	movlw	82
  6572   004D56  ECE9  F026         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6575   004D5A  5004               	movf	color_writetoaddr@address^0,w,c
  6576   004D5C  0980               	iorlw	128
  6577   004D5E  ECE9  F026         	call	_I2C_2_Master_Write
  6578                           
  6579                           ;color.c: 45:     I2C_2_Master_Write(value);
  6580   004D62  5003               	movf	color_writetoaddr@value^0,w,c
  6581   004D64  ECE9  F026         	call	_I2C_2_Master_Write
  6582                           
  6583                           ;color.c: 46:     I2C_2_Master_Stop();
  6584   004D68  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  6585   004D6C  0012               	return		;funcret
  6586   004D6E                     __end_of_color_writetoaddr:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _I2C_2_Master_Write *****************
  6590 ;; Defined at:
  6591 ;;		line 45 in file "i2c.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  data_byte       1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  data_byte       1    1[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;Total ram usage:        1 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; Hardware stack levels required when called: 2
  6612 ;; This function calls:
  6613 ;;		_I2C_2_Master_Idle
  6614 ;; This function is called by:
  6615 ;;		_color_writetoaddr
  6616 ;;		_color_read_lum
  6617 ;;		_color_read_Red
  6618 ;;		_color_read_Green
  6619 ;;		_color_read_Blue
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text38
  6624   004DD2                     __ptext38:
  6625                           	callstack 0
  6626   004DD2                     _I2C_2_Master_Write:
  6627                           	callstack 26
  6628                           
  6629                           ;incstack = 0
  6630                           ;I2C_2_Master_Write@data_byte stored from wreg
  6631   004DD2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6632   004DD4                     
  6633                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6634   004DD4  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6635   004DD8                     
  6636                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6637   004DD8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6638   004DDC  0012               	return		;funcret
  6639   004DDE                     __end_of_I2C_2_Master_Write:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _I2C_2_Master_Stop *****************
  6643 ;; Defined at:
  6644 ;;		line 39 in file "i2c.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 2
  6665 ;; This function calls:
  6666 ;;		_I2C_2_Master_Idle
  6667 ;; This function is called by:
  6668 ;;		_color_writetoaddr
  6669 ;;		_color_read_lum
  6670 ;;		_color_read_Red
  6671 ;;		_color_read_Green
  6672 ;;		_color_read_Blue
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text39
  6677   004DE8                     __ptext39:
  6678                           	callstack 0
  6679   004DE8                     _I2C_2_Master_Stop:
  6680                           	callstack 26
  6681   004DE8                     
  6682                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6683   004DE8  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6684   004DEC                     
  6685                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6686   004DEC  010E               	movlb	14	; () banked
  6687   004DEE  85DA               	bsf	218,2,b	;volatile
  6688   004DF0                     
  6689                           ; BSR set to: 14
  6690   004DF0  0012               	return		;funcret
  6691   004DF2                     __end_of_I2C_2_Master_Stop:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _I2C_2_Master_Start *****************
  6695 ;; Defined at:
  6696 ;;		line 27 in file "i2c.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		_I2C_2_Master_Idle
  6719 ;; This function is called by:
  6720 ;;		_color_writetoaddr
  6721 ;;		_color_read_lum
  6722 ;;		_color_read_Red
  6723 ;;		_color_read_Green
  6724 ;;		_color_read_Blue
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text40
  6729   004DF2                     __ptext40:
  6730                           	callstack 0
  6731   004DF2                     _I2C_2_Master_Start:
  6732                           	callstack 26
  6733   004DF2                     
  6734                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6735   004DF2  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6736   004DF6                     
  6737                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6738   004DF6  010E               	movlb	14	; () banked
  6739   004DF8  81DA               	bsf	218,0,b	;volatile
  6740   004DFA                     
  6741                           ; BSR set to: 14
  6742   004DFA  0012               	return		;funcret
  6743   004DFC                     __end_of_I2C_2_Master_Start:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _I2C_2_Master_Idle *****************
  6747 ;; Defined at:
  6748 ;;		line 22 in file "i2c.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;Total ram usage:        1 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_I2C_2_Master_Start
  6773 ;;		_I2C_2_Master_RepStart
  6774 ;;		_I2C_2_Master_Stop
  6775 ;;		_I2C_2_Master_Write
  6776 ;;		_I2C_2_Master_Read
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text41
  6781   004CDA                     __ptext41:
  6782                           	callstack 0
  6783   004CDA                     _I2C_2_Master_Idle:
  6784                           	callstack 26
  6785   004CDA                     l143:
  6786   004CDA  010E               	movlb	14	; () banked
  6787   004CDC  B5D8               	btfsc	216,2,b	;volatile
  6788   004CDE  EF73  F026         	goto	u2641
  6789   004CE2  EF75  F026         	goto	u2640
  6790   004CE6                     u2641:
  6791   004CE6  EF6D  F026         	goto	l143
  6792   004CEA                     u2640:
  6793   004CEA                     
  6794                           ; BSR set to: 14
  6795   004CEA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6796   004CEE  0E1F               	movlw	31
  6797   004CF0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6798   004CF2  A4D8               	btfss	status,2,c
  6799   004CF4  EF7E  F026         	goto	u2651
  6800   004CF8  EF80  F026         	goto	u2650
  6801   004CFC                     u2651:
  6802   004CFC  EF6D  F026         	goto	l143
  6803   004D00                     u2650:
  6804   004D00                     
  6805                           ; BSR set to: 14
  6806   004D00  0012               	return		;funcret
  6807   004D02                     __end_of_I2C_2_Master_Idle:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _I2C_2_Master_Init *****************
  6811 ;; Defined at:
  6812 ;;		line 4 in file "i2c.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_color_click_init
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text42
  6842   004C86                     __ptext42:
  6843                           	callstack 0
  6844   004C86                     _I2C_2_Master_Init:
  6845                           	callstack 28
  6846   004C86                     
  6847                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6848   004C86  010E               	movlb	14	; () banked
  6849   004C88  51D9               	movf	217,w,b	;volatile
  6850   004C8A  0BF0               	andlw	-16
  6851   004C8C  0908               	iorlw	8
  6852   004C8E  6FD9               	movwf	217,b	;volatile
  6853   004C90                     
  6854                           ; BSR set to: 14
  6855                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6856   004C90  8BD9               	bsf	217,5,b	;volatile
  6857                           
  6858                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6859   004C92  0E9F               	movlw	159
  6860   004C94  6FD6               	movwf	214,b	;volatile
  6861   004C96                     
  6862                           ; BSR set to: 14
  6863                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6864   004C96  8A84               	bsf	132,5,c	;volatile
  6865   004C98                     
  6866                           ; BSR set to: 14
  6867                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6868   004C98  8C84               	bsf	132,6,c	;volatile
  6869   004C9A                     
  6870                           ; BSR set to: 14
  6871                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6872   004C9A  9BA7               	bcf	167,5,b	;volatile
  6873   004C9C                     
  6874                           ; BSR set to: 14
  6875                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6876   004C9C  9DA7               	bcf	167,6,b	;volatile
  6877                           
  6878                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6879   004C9E  0E1D               	movlw	29
  6880   004CA0  6F1D               	movwf	29,b	;volatile
  6881                           
  6882                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6883   004CA2  0E1E               	movlw	30
  6884   004CA4  6F1C               	movwf	28,b	;volatile
  6885                           
  6886                           ;i2c.c: 18:   RD5PPS=0x1C;
  6887   004CA6  0E1C               	movlw	28
  6888   004CA8  6F6F               	movwf	111,b	;volatile
  6889                           
  6890                           ;i2c.c: 19:   RD6PPS=0x1B;
  6891   004CAA  0E1B               	movlw	27
  6892   004CAC  6F70               	movwf	112,b	;volatile
  6893   004CAE                     
  6894                           ; BSR set to: 14
  6895   004CAE  0012               	return		;funcret
  6896   004CB0                     __end_of_I2C_2_Master_Init:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _YellowMove *****************
  6900 ;; Defined at:
  6901 ;;		line 278 in file "dc_motor.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6904 ;;		 -> motorL(9), 
  6905 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6906 ;;		 -> motorR(9), 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;Total ram usage:        4 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 5
  6925 ;; This function calls:
  6926 ;;		_reverseDetect
  6927 ;;		_reverseOneBlock
  6928 ;;		_turnRight45
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text43
  6935   004864                     __ptext43:
  6936                           	callstack 0
  6937   004864                     _YellowMove:
  6938                           	callstack 25
  6939   004864                     
  6940                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6941   004864  0EF5               	movlw	low _motorL
  6942   004866  6E1A               	movwf	reverseDetect@mL^0,c
  6943   004868  0E00               	movlw	high _motorL
  6944   00486A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6945   00486C  0EBC               	movlw	low _motorR
  6946   00486E  6E1C               	movwf	reverseDetect@mR^0,c
  6947   004870  0E01               	movlw	high _motorR
  6948   004872  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6949   004874  EC09  F023         	call	_reverseDetect	;wreg free
  6950                           
  6951                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  6952   004878  0EF5               	movlw	low _motorL
  6953   00487A  6E1A               	movwf	reverseOneBlock@mL^0,c
  6954   00487C  0E00               	movlw	high _motorL
  6955   00487E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6956   004880  0EBC               	movlw	low _motorR
  6957   004882  6E1C               	movwf	reverseOneBlock@mR^0,c
  6958   004884  0E01               	movlw	high _motorR
  6959   004886  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6960   004888  ECDC  F022         	call	_reverseOneBlock	;wreg free
  6961                           
  6962                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6963   00488C  0EF5               	movlw	low _motorL
  6964   00488E  6E1A               	movwf	turnRight45@mL^0,c
  6965   004890  0E00               	movlw	high _motorL
  6966   004892  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6967   004894  0EBC               	movlw	low _motorR
  6968   004896  6E1C               	movwf	turnRight45@mR^0,c
  6969   004898  0E01               	movlw	high _motorR
  6970   00489A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6971   00489C  EC36  F023         	call	_turnRight45	;wreg free
  6972                           
  6973                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6974   0048A0  0EF5               	movlw	low _motorL
  6975   0048A2  6E1A               	movwf	turnRight45@mL^0,c
  6976   0048A4  0E00               	movlw	high _motorL
  6977   0048A6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6978   0048A8  0EBC               	movlw	low _motorR
  6979   0048AA  6E1C               	movwf	turnRight45@mR^0,c
  6980   0048AC  0E01               	movlw	high _motorR
  6981   0048AE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6982   0048B0  EC36  F023         	call	_turnRight45	;wreg free
  6983   0048B4  0012               	return		;funcret
  6984   0048B6                     __end_of_YellowMove:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function _turnRight45 *****************
  6988 ;; Defined at:
  6989 ;;		line 201 in file "dc_motor.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6992 ;;		 -> motorL(9), 
  6993 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6994 ;;		 -> motorR(9), 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;Total ram usage:        6 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; Hardware stack levels required when called: 4
  7013 ;; This function calls:
  7014 ;;		_stop
  7015 ;;		_turnRight
  7016 ;; This function is called by:
  7017 ;;		_RedMove
  7018 ;;		_BlueMove
  7019 ;;		_YellowMove
  7020 ;;		_OrangeMove
  7021 ;;		_ReverseYellow
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text44
  7026   00466C                     __ptext44:
  7027                           	callstack 0
  7028   00466C                     _turnRight45:
  7029                           	callstack 24
  7030   00466C                     
  7031                           ;dc_motor.c: 202:     turnRight(mL,mR);
  7032   00466C  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  7033   004670  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  7034   004674  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  7035   004678  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  7036   00467C  EC85  F01F         	call	_turnRight	;wreg free
  7037   004680                     
  7038                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7039   004680  0E12               	movlw	18
  7040   004682  6E1F               	movwf	(??_turnRight45+1)^0,c
  7041   004684  0EDC               	movlw	220
  7042   004686  6E1E               	movwf	??_turnRight45^0,c
  7043   004688  0E60               	movlw	96
  7044   00468A                     u4827:
  7045   00468A  2EE8               	decfsz	wreg,f,c
  7046   00468C  D7FE               	bra	u4827
  7047   00468E  2E1E               	decfsz	??_turnRight45^0,f,c
  7048   004690  D7FC               	bra	u4827
  7049   004692  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7050   004694  D7FA               	bra	u4827
  7051   004696                     
  7052                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  7053   004696  0EF5               	movlw	low _motorL
  7054   004698  6E14               	movwf	stop@mL^0,c
  7055   00469A  0E00               	movlw	high _motorL
  7056   00469C  6E15               	movwf	(stop@mL+1)^0,c
  7057   00469E  0EBC               	movlw	low _motorR
  7058   0046A0  6E16               	movwf	stop@mR^0,c
  7059   0046A2  0E01               	movlw	high _motorR
  7060   0046A4  6E17               	movwf	(stop@mR+1)^0,c
  7061   0046A6  EC05  F021         	call	_stop	;wreg free
  7062                           
  7063                           ;dc_motor.c: 205:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7064   0046AA  0E05               	movlw	5
  7065   0046AC  6E1F               	movwf	(??_turnRight45+1)^0,c
  7066   0046AE  0E0F               	movlw	15
  7067   0046B0  6E1E               	movwf	??_turnRight45^0,c
  7068   0046B2  0EF1               	movlw	241
  7069   0046B4                     u4837:
  7070   0046B4  2EE8               	decfsz	wreg,f,c
  7071   0046B6  D7FE               	bra	u4837
  7072   0046B8  2E1E               	decfsz	??_turnRight45^0,f,c
  7073   0046BA  D7FC               	bra	u4837
  7074   0046BC  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7075   0046BE  D7FA               	bra	u4837
  7076   0046C0  F000               	nop	
  7077   0046C2  0012               	return		;funcret
  7078   0046C4                     __end_of_turnRight45:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _turnRight *****************
  7082 ;; Defined at:
  7083 ;;		line 128 in file "dc_motor.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7086 ;;		 -> motorL(9), 
  7087 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7088 ;;		 -> motorR(9), 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;Total ram usage:        6 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 3
  7107 ;; This function calls:
  7108 ;;		_setMotorPWM
  7109 ;; This function is called by:
  7110 ;;		_turnRight45
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text45
  7115   003F0A                     __ptext45:
  7116                           	callstack 0
  7117   003F0A                     _turnRight:
  7118                           	callstack 24
  7119   003F0A                     
  7120                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  7121   003F0A  EE20 F001          	lfsr	2,1
  7122   003F0E  5014               	movf	turnRight@mL^0,w,c
  7123   003F10  26D9               	addwf	fsr2l,f,c
  7124   003F12  5015               	movf	(turnRight@mL+1)^0,w,c
  7125   003F14  22DA               	addwfc	fsr2h,f,c
  7126   003F16  0E01               	movlw	1
  7127   003F18  6EDF               	movwf	indf2,c
  7128                           
  7129                           ;dc_motor.c: 131:     mR->direction =0;
  7130   003F1A  EE20 F001          	lfsr	2,1
  7131   003F1E  5016               	movf	turnRight@mR^0,w,c
  7132   003F20  26D9               	addwf	fsr2l,f,c
  7133   003F22  5017               	movf	(turnRight@mR+1)^0,w,c
  7134   003F24  22DA               	addwfc	fsr2h,f,c
  7135   003F26  0E00               	movlw	0
  7136   003F28  6EDF               	movwf	indf2,c
  7137                           
  7138                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  7139   003F2A  EFBB  F01F         	goto	l3418
  7140   003F2E                     l3410:
  7141                           
  7142                           ;dc_motor.c: 135:         mL->power+=10;
  7143   003F2E  C014  FFD9         	movff	turnRight@mL,fsr2l
  7144   003F32  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7145   003F36  0E0A               	movlw	10
  7146   003F38  26DF               	addwf	indf2,f,c
  7147                           
  7148                           ;dc_motor.c: 136:         mR->power+=10;
  7149   003F3A  C016  FFD9         	movff	turnRight@mR,fsr2l
  7150   003F3E  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7151   003F42  0E0A               	movlw	10
  7152   003F44  26DF               	addwf	indf2,f,c
  7153   003F46                     
  7154                           ;dc_motor.c: 138:         setMotorPWM(mL);
  7155   003F46  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7156   003F4A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7157   003F4E  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7158   003F52                     
  7159                           ;dc_motor.c: 139:         setMotorPWM(mR);
  7160   003F52  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7161   003F56  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7162   003F5A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7163   003F5E                     
  7164                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7165   003F5E  0E02               	movlw	2
  7166   003F60  6E19               	movwf	(??_turnRight+1)^0,c
  7167   003F62  0EA0               	movlw	160
  7168   003F64  6E18               	movwf	??_turnRight^0,c
  7169   003F66  0E92               	movlw	146
  7170   003F68                     u4847:
  7171   003F68  2EE8               	decfsz	wreg,f,c
  7172   003F6A  D7FE               	bra	u4847
  7173   003F6C  2E18               	decfsz	??_turnRight^0,f,c
  7174   003F6E  D7FC               	bra	u4847
  7175   003F70  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7176   003F72  D7FA               	bra	u4847
  7177   003F74  D000               	nop2	
  7178   003F76                     l3418:
  7179   003F76  C014  FFD9         	movff	turnRight@mL,fsr2l
  7180   003F7A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7181   003F7E  0E1E               	movlw	30
  7182   003F80  60DF               	cpfslt	indf2,c
  7183   003F82  EFC5  F01F         	goto	u2721
  7184   003F86  EFC7  F01F         	goto	u2720
  7185   003F8A                     u2721:
  7186   003F8A  EFD3  F01F         	goto	l508
  7187   003F8E                     u2720:
  7188   003F8E  C016  FFD9         	movff	turnRight@mR,fsr2l
  7189   003F92  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7190   003F96  0E1D               	movlw	29
  7191   003F98  64DF               	cpfsgt	indf2,c
  7192   003F9A  EFD1  F01F         	goto	u2731
  7193   003F9E  EFD3  F01F         	goto	u2730
  7194   003FA2                     u2731:
  7195   003FA2  EF97  F01F         	goto	l3410
  7196   003FA6                     u2730:
  7197   003FA6                     l508:
  7198   003FA6  0012               	return		;funcret
  7199   003FA8                     __end_of_turnRight:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _Timer0_init *****************
  7203 ;; Defined at:
  7204 ;;		line 8 in file "timers.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text46
  7233   004D6E                     __ptext46:
  7234                           	callstack 0
  7235   004D6E                     _Timer0_init:
  7236                           	callstack 29
  7237   004D6E                     
  7238                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7239   004D6E  50D6               	movf	214,w,c	;volatile
  7240   004D70  0B1F               	andlw	-225
  7241   004D72  0940               	iorlw	64
  7242   004D74  6ED6               	movwf	214,c	;volatile
  7243   004D76                     
  7244                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7245   004D76  88D6               	bsf	214,4,c	;volatile
  7246                           
  7247                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7248   004D78  50D6               	movf	214,w,c	;volatile
  7249   004D7A  0BF0               	andlw	-16
  7250   004D7C  090E               	iorlw	14
  7251   004D7E  6ED6               	movwf	214,c	;volatile
  7252   004D80                     
  7253                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7254   004D80  88D5               	bsf	213,4,c	;volatile
  7255                           
  7256                           ;timers.c: 16:     TMR0H=0;
  7257   004D82  0E00               	movlw	0
  7258   004D84  6ED4               	movwf	212,c	;volatile
  7259                           
  7260                           ;timers.c: 17:     TMR0L=0;
  7261   004D86  0E00               	movlw	0
  7262   004D88  6ED3               	movwf	211,c	;volatile
  7263   004D8A                     
  7264                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7265   004D8A  8ED5               	bsf	213,7,c	;volatile
  7266   004D8C  0012               	return		;funcret
  7267   004D8E                     __end_of_Timer0_init:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _RetryMove *****************
  7271 ;; Defined at:
  7272 ;;		line 315 in file "dc_motor.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7275 ;;		 -> motorL(9), 
  7276 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7277 ;;		 -> motorR(9), 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        4 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 5
  7296 ;; This function calls:
  7297 ;;		_Backhalfblock
  7298 ;;		_Forwardhalfblock
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text47
  7305   004CB0                     __ptext47:
  7306                           	callstack 0
  7307   004CB0                     _RetryMove:
  7308                           	callstack 25
  7309   004CB0                     
  7310                           ;dc_motor.c: 316:     Backhalfblock(&motorL, &motorR);
  7311   004CB0  0EF5               	movlw	low _motorL
  7312   004CB2  6E1A               	movwf	Backhalfblock@mL^0,c
  7313   004CB4  0E00               	movlw	high _motorL
  7314   004CB6  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  7315   004CB8  0EBC               	movlw	low _motorR
  7316   004CBA  6E1C               	movwf	Backhalfblock@mR^0,c
  7317   004CBC  0E01               	movlw	high _motorR
  7318   004CBE  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  7319   004CC0  ECAF  F022         	call	_Backhalfblock	;wreg free
  7320                           
  7321                           ;dc_motor.c: 317:     Forwardhalfblock(&motorL, &motorR);
  7322   004CC4  0EF5               	movlw	low _motorL
  7323   004CC6  6E1A               	movwf	Forwardhalfblock@mL^0,c
  7324   004CC8  0E00               	movlw	high _motorL
  7325   004CCA  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  7326   004CCC  0EBC               	movlw	low _motorR
  7327   004CCE  6E1C               	movwf	Forwardhalfblock@mR^0,c
  7328   004CD0  0E01               	movlw	high _motorR
  7329   004CD2  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  7330   004CD4  EC82  F022         	call	_Forwardhalfblock	;wreg free
  7331   004CD8  0012               	return		;funcret
  7332   004CDA                     __end_of_RetryMove:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _Forwardhalfblock *****************
  7336 ;; Defined at:
  7337 ;;		line 235 in file "dc_motor.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7340 ;;		 -> motorL(9), 
  7341 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7342 ;;		 -> motorR(9), 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;Total ram usage:        6 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 4
  7361 ;; This function calls:
  7362 ;;		_fullSpeedAhead
  7363 ;;		_stop
  7364 ;; This function is called by:
  7365 ;;		_main
  7366 ;;		_RetryMove
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text48
  7371   004504                     __ptext48:
  7372                           	callstack 0
  7373   004504                     _Forwardhalfblock:
  7374                           	callstack 25
  7375   004504                     
  7376                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
  7377   004504  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  7378   004508  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  7379   00450C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  7380   004510  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  7381   004514  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  7382   004518                     
  7383                           ;dc_motor.c: 237:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  7384   004518  0E52               	movlw	82
  7385   00451A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7386   00451C  0E2B               	movlw	43
  7387   00451E  6E1E               	movwf	??_Forwardhalfblock^0,c
  7388   004520  0E00               	movlw	0
  7389   004522                     u4857:
  7390   004522  2EE8               	decfsz	wreg,f,c
  7391   004524  D7FE               	bra	u4857
  7392   004526  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7393   004528  D7FC               	bra	u4857
  7394   00452A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7395   00452C  D7FA               	bra	u4857
  7396   00452E  D000               	nop2	
  7397   004530                     
  7398                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
  7399   004530  0EF5               	movlw	low _motorL
  7400   004532  6E14               	movwf	stop@mL^0,c
  7401   004534  0E00               	movlw	high _motorL
  7402   004536  6E15               	movwf	(stop@mL+1)^0,c
  7403   004538  0EBC               	movlw	low _motorR
  7404   00453A  6E16               	movwf	stop@mR^0,c
  7405   00453C  0E01               	movlw	high _motorR
  7406   00453E  6E17               	movwf	(stop@mR+1)^0,c
  7407   004540  EC05  F021         	call	_stop	;wreg free
  7408                           
  7409                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7410   004544  0E05               	movlw	5
  7411   004546  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7412   004548  0E0F               	movlw	15
  7413   00454A  6E1E               	movwf	??_Forwardhalfblock^0,c
  7414   00454C  0EF1               	movlw	241
  7415   00454E                     u4867:
  7416   00454E  2EE8               	decfsz	wreg,f,c
  7417   004550  D7FE               	bra	u4867
  7418   004552  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7419   004554  D7FC               	bra	u4867
  7420   004556  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7421   004558  D7FA               	bra	u4867
  7422   00455A  F000               	nop	
  7423   00455C  0012               	return		;funcret
  7424   00455E                     __end_of_Forwardhalfblock:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _fullSpeedAhead *****************
  7428 ;; Defined at:
  7429 ;;		line 146 in file "dc_motor.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7432 ;;		 -> motorL(9), 
  7433 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7434 ;;		 -> motorR(9), 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        6 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 3
  7453 ;; This function calls:
  7454 ;;		_setMotorPWM
  7455 ;; This function is called by:
  7456 ;;		_main
  7457 ;;		_ForwardOneBlock
  7458 ;;		_Forwardhalfblock
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text49
  7463   003FA8                     __ptext49:
  7464                           	callstack 0
  7465   003FA8                     _fullSpeedAhead:
  7466                           	callstack 24
  7467   003FA8                     
  7468                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  7469   003FA8  EE20 F001          	lfsr	2,1
  7470   003FAC  5014               	movf	fullSpeedAhead@mL^0,w,c
  7471   003FAE  26D9               	addwf	fsr2l,f,c
  7472   003FB0  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7473   003FB2  22DA               	addwfc	fsr2h,f,c
  7474   003FB4  0E01               	movlw	1
  7475   003FB6  6EDF               	movwf	indf2,c
  7476                           
  7477                           ;dc_motor.c: 150:     mR->direction =1;
  7478   003FB8  EE20 F001          	lfsr	2,1
  7479   003FBC  5016               	movf	fullSpeedAhead@mR^0,w,c
  7480   003FBE  26D9               	addwf	fsr2l,f,c
  7481   003FC0  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7482   003FC2  22DA               	addwfc	fsr2h,f,c
  7483   003FC4  0E01               	movlw	1
  7484   003FC6  6EDF               	movwf	indf2,c
  7485                           
  7486                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  7487   003FC8  EF0A  F020         	goto	l3376
  7488   003FCC                     l3368:
  7489                           
  7490                           ;dc_motor.c: 153:         mL->power+=10;
  7491   003FCC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7492   003FD0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7493   003FD4  0E0A               	movlw	10
  7494   003FD6  26DF               	addwf	indf2,f,c
  7495                           
  7496                           ;dc_motor.c: 154:         mR->power+=10;
  7497   003FD8  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7498   003FDC  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7499   003FE0  0E0A               	movlw	10
  7500   003FE2  26DF               	addwf	indf2,f,c
  7501   003FE4                     
  7502                           ;dc_motor.c: 156:         setMotorPWM(mL);
  7503   003FE4  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7504   003FE8  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7505   003FEC  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7506   003FF0                     
  7507                           ;dc_motor.c: 157:         setMotorPWM(mR);
  7508   003FF0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7509   003FF4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7510   003FF8  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7511   003FFC                     
  7512                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7513   003FFC  0E02               	movlw	2
  7514   003FFE  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  7515   004000  0EA0               	movlw	160
  7516   004002  6E18               	movwf	??_fullSpeedAhead^0,c
  7517   004004  0E92               	movlw	146
  7518   004006                     u4877:
  7519   004006  2EE8               	decfsz	wreg,f,c
  7520   004008  D7FE               	bra	u4877
  7521   00400A  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7522   00400C  D7FC               	bra	u4877
  7523   00400E  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  7524   004010  D7FA               	bra	u4877
  7525   004012  D000               	nop2	
  7526   004014                     l3376:
  7527   004014  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7528   004018  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7529   00401C  0E1E               	movlw	30
  7530   00401E  60DF               	cpfslt	indf2,c
  7531   004020  EF14  F020         	goto	u2661
  7532   004024  EF16  F020         	goto	u2660
  7533   004028                     u2661:
  7534   004028  EF22  F020         	goto	l516
  7535   00402C                     u2660:
  7536   00402C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7537   004030  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7538   004034  0E1D               	movlw	29
  7539   004036  64DF               	cpfsgt	indf2,c
  7540   004038  EF20  F020         	goto	u2671
  7541   00403C  EF22  F020         	goto	u2670
  7542   004040                     u2671:
  7543   004040  EFE6  F01F         	goto	l3368
  7544   004044                     u2670:
  7545   004044                     l516:
  7546   004044  0012               	return		;funcret
  7547   004046                     __end_of_fullSpeedAhead:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _Backhalfblock *****************
  7551 ;; Defined at:
  7552 ;;		line 241 in file "dc_motor.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7555 ;;		 -> motorL(9), 
  7556 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7557 ;;		 -> motorR(9), 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;Total ram usage:        6 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 4
  7576 ;; This function calls:
  7577 ;;		_fullSpeedBack
  7578 ;;		_stop
  7579 ;; This function is called by:
  7580 ;;		_RetryMove
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text50
  7585   00455E                     __ptext50:
  7586                           	callstack 0
  7587   00455E                     _Backhalfblock:
  7588                           	callstack 25
  7589   00455E                     
  7590                           ;dc_motor.c: 242:     fullSpeedBack(mL,mR);
  7591   00455E  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  7592   004562  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  7593   004566  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  7594   00456A  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  7595   00456E  EC72  F020         	call	_fullSpeedBack	;wreg free
  7596   004572                     
  7597                           ;dc_motor.c: 243:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  7598   004572  0E52               	movlw	82
  7599   004574  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  7600   004576  0E2B               	movlw	43
  7601   004578  6E1E               	movwf	??_Backhalfblock^0,c
  7602   00457A  0E00               	movlw	0
  7603   00457C                     u4887:
  7604   00457C  2EE8               	decfsz	wreg,f,c
  7605   00457E  D7FE               	bra	u4887
  7606   004580  2E1E               	decfsz	??_Backhalfblock^0,f,c
  7607   004582  D7FC               	bra	u4887
  7608   004584  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  7609   004586  D7FA               	bra	u4887
  7610   004588  D000               	nop2	
  7611   00458A                     
  7612                           ;dc_motor.c: 244:     stop(&motorL, &motorR);
  7613   00458A  0EF5               	movlw	low _motorL
  7614   00458C  6E14               	movwf	stop@mL^0,c
  7615   00458E  0E00               	movlw	high _motorL
  7616   004590  6E15               	movwf	(stop@mL+1)^0,c
  7617   004592  0EBC               	movlw	low _motorR
  7618   004594  6E16               	movwf	stop@mR^0,c
  7619   004596  0E01               	movlw	high _motorR
  7620   004598  6E17               	movwf	(stop@mR+1)^0,c
  7621   00459A  EC05  F021         	call	_stop	;wreg free
  7622                           
  7623                           ;dc_motor.c: 245:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7624   00459E  0E05               	movlw	5
  7625   0045A0  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  7626   0045A2  0E0F               	movlw	15
  7627   0045A4  6E1E               	movwf	??_Backhalfblock^0,c
  7628   0045A6  0EF1               	movlw	241
  7629   0045A8                     u4897:
  7630   0045A8  2EE8               	decfsz	wreg,f,c
  7631   0045AA  D7FE               	bra	u4897
  7632   0045AC  2E1E               	decfsz	??_Backhalfblock^0,f,c
  7633   0045AE  D7FC               	bra	u4897
  7634   0045B0  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  7635   0045B2  D7FA               	bra	u4897
  7636   0045B4  F000               	nop	
  7637   0045B6  0012               	return		;funcret
  7638   0045B8                     __end_of_Backhalfblock:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _PinkMove *****************
  7642 ;; Defined at:
  7643 ;;		line 288 in file "dc_motor.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7646 ;;		 -> motorL(9), 
  7647 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7648 ;;		 -> motorR(9), 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;Total ram usage:        4 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 5
  7667 ;; This function calls:
  7668 ;;		_reverseDetect
  7669 ;;		_reverseOneBlock
  7670 ;;		_turnLeft45
  7671 ;; This function is called by:
  7672 ;;		_main
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text51
  7677   0048B6                     __ptext51:
  7678                           	callstack 0
  7679   0048B6                     _PinkMove:
  7680                           	callstack 25
  7681   0048B6                     
  7682                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7683   0048B6  0EF5               	movlw	low _motorL
  7684   0048B8  6E1A               	movwf	reverseDetect@mL^0,c
  7685   0048BA  0E00               	movlw	high _motorL
  7686   0048BC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7687   0048BE  0EBC               	movlw	low _motorR
  7688   0048C0  6E1C               	movwf	reverseDetect@mR^0,c
  7689   0048C2  0E01               	movlw	high _motorR
  7690   0048C4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7691   0048C6  EC09  F023         	call	_reverseDetect	;wreg free
  7692                           
  7693                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7694   0048CA  0EF5               	movlw	low _motorL
  7695   0048CC  6E1A               	movwf	reverseOneBlock@mL^0,c
  7696   0048CE  0E00               	movlw	high _motorL
  7697   0048D0  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7698   0048D2  0EBC               	movlw	low _motorR
  7699   0048D4  6E1C               	movwf	reverseOneBlock@mR^0,c
  7700   0048D6  0E01               	movlw	high _motorR
  7701   0048D8  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7702   0048DA  ECDC  F022         	call	_reverseOneBlock	;wreg free
  7703                           
  7704                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
  7705   0048DE  0EF5               	movlw	low _motorL
  7706   0048E0  6E1A               	movwf	turnLeft45@mL^0,c
  7707   0048E2  0E00               	movlw	high _motorL
  7708   0048E4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7709   0048E6  0EBC               	movlw	low _motorR
  7710   0048E8  6E1C               	movwf	turnLeft45@mR^0,c
  7711   0048EA  0E01               	movlw	high _motorR
  7712   0048EC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7713   0048EE  EC62  F023         	call	_turnLeft45	;wreg free
  7714                           
  7715                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
  7716   0048F2  0EF5               	movlw	low _motorL
  7717   0048F4  6E1A               	movwf	turnLeft45@mL^0,c
  7718   0048F6  0E00               	movlw	high _motorL
  7719   0048F8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7720   0048FA  0EBC               	movlw	low _motorR
  7721   0048FC  6E1C               	movwf	turnLeft45@mR^0,c
  7722   0048FE  0E01               	movlw	high _motorR
  7723   004900  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7724   004902  EC62  F023         	call	_turnLeft45	;wreg free
  7725   004906  0012               	return		;funcret
  7726   004908                     __end_of_PinkMove:
  7727                           	callstack 0
  7728                           
  7729 ;; *************** function _turnLeft45 *****************
  7730 ;; Defined at:
  7731 ;;		line 208 in file "dc_motor.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7734 ;;		 -> motorL(9), 
  7735 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7736 ;;		 -> motorR(9), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;Total ram usage:        6 bytes
  7753 ;; Hardware stack levels used: 1
  7754 ;; Hardware stack levels required when called: 4
  7755 ;; This function calls:
  7756 ;;		_stop
  7757 ;;		_turnLeft
  7758 ;; This function is called by:
  7759 ;;		_GreenMove
  7760 ;;		_PinkMove
  7761 ;;		_LightBlueMove
  7762 ;;		_ReversePink
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text52
  7767   0046C4                     __ptext52:
  7768                           	callstack 0
  7769   0046C4                     _turnLeft45:
  7770                           	callstack 24
  7771   0046C4                     
  7772                           ;dc_motor.c: 209:     turnLeft(mL,mR);
  7773   0046C4  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7774   0046C8  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7775   0046CC  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7776   0046D0  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7777   0046D4  EC23  F020         	call	_turnLeft	;wreg free
  7778   0046D8                     
  7779                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7780   0046D8  0E12               	movlw	18
  7781   0046DA  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7782   0046DC  0EDC               	movlw	220
  7783   0046DE  6E1E               	movwf	??_turnLeft45^0,c
  7784   0046E0  0E60               	movlw	96
  7785   0046E2                     u4907:
  7786   0046E2  2EE8               	decfsz	wreg,f,c
  7787   0046E4  D7FE               	bra	u4907
  7788   0046E6  2E1E               	decfsz	??_turnLeft45^0,f,c
  7789   0046E8  D7FC               	bra	u4907
  7790   0046EA  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7791   0046EC  D7FA               	bra	u4907
  7792   0046EE                     
  7793                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7794   0046EE  0EF5               	movlw	low _motorL
  7795   0046F0  6E14               	movwf	stop@mL^0,c
  7796   0046F2  0E00               	movlw	high _motorL
  7797   0046F4  6E15               	movwf	(stop@mL+1)^0,c
  7798   0046F6  0EBC               	movlw	low _motorR
  7799   0046F8  6E16               	movwf	stop@mR^0,c
  7800   0046FA  0E01               	movlw	high _motorR
  7801   0046FC  6E17               	movwf	(stop@mR+1)^0,c
  7802   0046FE  EC05  F021         	call	_stop	;wreg free
  7803                           
  7804                           ;dc_motor.c: 212:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7805   004702  0E05               	movlw	5
  7806   004704  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7807   004706  0E0F               	movlw	15
  7808   004708  6E1E               	movwf	??_turnLeft45^0,c
  7809   00470A  0EF1               	movlw	241
  7810   00470C                     u4917:
  7811   00470C  2EE8               	decfsz	wreg,f,c
  7812   00470E  D7FE               	bra	u4917
  7813   004710  2E1E               	decfsz	??_turnLeft45^0,f,c
  7814   004712  D7FC               	bra	u4917
  7815   004714  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7816   004716  D7FA               	bra	u4917
  7817   004718  F000               	nop	
  7818   00471A  0012               	return		;funcret
  7819   00471C                     __end_of_turnLeft45:
  7820                           	callstack 0
  7821                           
  7822 ;; *************** function _turnLeft *****************
  7823 ;; Defined at:
  7824 ;;		line 110 in file "dc_motor.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7827 ;;		 -> motorL(9), 
  7828 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7829 ;;		 -> motorR(9), 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:        6 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 3
  7848 ;; This function calls:
  7849 ;;		_setMotorPWM
  7850 ;; This function is called by:
  7851 ;;		_turnLeft45
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text53
  7856   004046                     __ptext53:
  7857                           	callstack 0
  7858   004046                     _turnLeft:
  7859                           	callstack 24
  7860   004046                     
  7861                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7862   004046  EE20 F001          	lfsr	2,1
  7863   00404A  5014               	movf	turnLeft@mL^0,w,c
  7864   00404C  26D9               	addwf	fsr2l,f,c
  7865   00404E  5015               	movf	(turnLeft@mL+1)^0,w,c
  7866   004050  22DA               	addwfc	fsr2h,f,c
  7867   004052  0E00               	movlw	0
  7868   004054  6EDF               	movwf	indf2,c
  7869                           
  7870                           ;dc_motor.c: 113:     mR->direction =1;
  7871   004056  EE20 F001          	lfsr	2,1
  7872   00405A  5016               	movf	turnLeft@mR^0,w,c
  7873   00405C  26D9               	addwf	fsr2l,f,c
  7874   00405E  5017               	movf	(turnLeft@mR+1)^0,w,c
  7875   004060  22DA               	addwfc	fsr2h,f,c
  7876   004062  0E01               	movlw	1
  7877   004064  6EDF               	movwf	indf2,c
  7878                           
  7879                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7880   004066  EF59  F020         	goto	l3404
  7881   00406A                     l3396:
  7882                           
  7883                           ;dc_motor.c: 117:         mL->power+=10;
  7884   00406A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7885   00406E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7886   004072  0E0A               	movlw	10
  7887   004074  26DF               	addwf	indf2,f,c
  7888                           
  7889                           ;dc_motor.c: 118:         mR->power+=10;
  7890   004076  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7891   00407A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7892   00407E  0E0A               	movlw	10
  7893   004080  26DF               	addwf	indf2,f,c
  7894   004082                     
  7895                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7896   004082  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7897   004086  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7898   00408A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7899   00408E                     
  7900                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7901   00408E  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7902   004092  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7903   004096  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7904   00409A                     
  7905                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7906   00409A  0E02               	movlw	2
  7907   00409C  6E19               	movwf	(??_turnLeft+1)^0,c
  7908   00409E  0EA0               	movlw	160
  7909   0040A0  6E18               	movwf	??_turnLeft^0,c
  7910   0040A2  0E92               	movlw	146
  7911   0040A4                     u4927:
  7912   0040A4  2EE8               	decfsz	wreg,f,c
  7913   0040A6  D7FE               	bra	u4927
  7914   0040A8  2E18               	decfsz	??_turnLeft^0,f,c
  7915   0040AA  D7FC               	bra	u4927
  7916   0040AC  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7917   0040AE  D7FA               	bra	u4927
  7918   0040B0  D000               	nop2	
  7919   0040B2                     l3404:
  7920   0040B2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7921   0040B6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7922   0040BA  0E1E               	movlw	30
  7923   0040BC  60DF               	cpfslt	indf2,c
  7924   0040BE  EF63  F020         	goto	u2701
  7925   0040C2  EF65  F020         	goto	u2700
  7926   0040C6                     u2701:
  7927   0040C6  EF71  F020         	goto	l500
  7928   0040CA                     u2700:
  7929   0040CA  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7930   0040CE  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7931   0040D2  0E1D               	movlw	29
  7932   0040D4  64DF               	cpfsgt	indf2,c
  7933   0040D6  EF6F  F020         	goto	u2711
  7934   0040DA  EF71  F020         	goto	u2710
  7935   0040DE                     u2711:
  7936   0040DE  EF35  F020         	goto	l3396
  7937   0040E2                     u2710:
  7938   0040E2                     l500:
  7939   0040E2  0012               	return		;funcret
  7940   0040E4                     __end_of_turnLeft:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _reverseOneBlock *****************
  7944 ;; Defined at:
  7945 ;;		line 222 in file "dc_motor.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7948 ;;		 -> motorL(9), 
  7949 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7950 ;;		 -> motorR(9), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:        6 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 4
  7969 ;; This function calls:
  7970 ;;		_fullSpeedBack
  7971 ;;		_stop
  7972 ;; This function is called by:
  7973 ;;		_YellowMove
  7974 ;;		_PinkMove
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text54
  7979   0045B8                     __ptext54:
  7980                           	callstack 0
  7981   0045B8                     _reverseOneBlock:
  7982                           	callstack 25
  7983   0045B8                     
  7984                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
  7985   0045B8  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7986   0045BC  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7987   0045C0  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7988   0045C4  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7989   0045C8  EC72  F020         	call	_fullSpeedBack	;wreg free
  7990   0045CC                     
  7991                           ;dc_motor.c: 224:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7992   0045CC  0EA3               	movlw	163
  7993   0045CE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7994   0045D0  0E57               	movlw	87
  7995   0045D2  6E1E               	movwf	??_reverseOneBlock^0,c
  7996   0045D4  0E02               	movlw	2
  7997   0045D6                     u4937:
  7998   0045D6  2EE8               	decfsz	wreg,f,c
  7999   0045D8  D7FE               	bra	u4937
  8000   0045DA  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8001   0045DC  D7FC               	bra	u4937
  8002   0045DE  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8003   0045E0  D7FA               	bra	u4937
  8004   0045E2  D000               	nop2	
  8005   0045E4                     
  8006                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
  8007   0045E4  0EF5               	movlw	low _motorL
  8008   0045E6  6E14               	movwf	stop@mL^0,c
  8009   0045E8  0E00               	movlw	high _motorL
  8010   0045EA  6E15               	movwf	(stop@mL+1)^0,c
  8011   0045EC  0EBC               	movlw	low _motorR
  8012   0045EE  6E16               	movwf	stop@mR^0,c
  8013   0045F0  0E01               	movlw	high _motorR
  8014   0045F2  6E17               	movwf	(stop@mR+1)^0,c
  8015   0045F4  EC05  F021         	call	_stop	;wreg free
  8016                           
  8017                           ;dc_motor.c: 226:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8018   0045F8  0E05               	movlw	5
  8019   0045FA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  8020   0045FC  0E0F               	movlw	15
  8021   0045FE  6E1E               	movwf	??_reverseOneBlock^0,c
  8022   004600  0EF1               	movlw	241
  8023   004602                     u4947:
  8024   004602  2EE8               	decfsz	wreg,f,c
  8025   004604  D7FE               	bra	u4947
  8026   004606  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8027   004608  D7FC               	bra	u4947
  8028   00460A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8029   00460C  D7FA               	bra	u4947
  8030   00460E  F000               	nop	
  8031   004610  0012               	return		;funcret
  8032   004612                     __end_of_reverseOneBlock:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _reverseDetect *****************
  8036 ;; Defined at:
  8037 ;;		line 215 in file "dc_motor.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8040 ;;		 -> motorL(9), 
  8041 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8042 ;;		 -> motorR(9), 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 4
  8061 ;; This function calls:
  8062 ;;		_fullSpeedBack
  8063 ;;		_stop
  8064 ;; This function is called by:
  8065 ;;		_RedMove
  8066 ;;		_GreenMove
  8067 ;;		_BlueMove
  8068 ;;		_YellowMove
  8069 ;;		_PinkMove
  8070 ;;		_OrangeMove
  8071 ;;		_LightBlueMove
  8072 ;;		_ReverseYellow
  8073 ;;		_ReversePink
  8074 ;;		_go_Home
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text55
  8079   004612                     __ptext55:
  8080                           	callstack 0
  8081   004612                     _reverseDetect:
  8082                           	callstack 25
  8083   004612                     
  8084                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
  8085   004612  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  8086   004616  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  8087   00461A  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  8088   00461E  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  8089   004622  EC72  F020         	call	_fullSpeedBack	;wreg free
  8090   004626                     
  8091                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8092   004626  0E11               	movlw	17
  8093   004628  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8094   00462A  0E3C               	movlw	60
  8095   00462C  6E1E               	movwf	??_reverseDetect^0,c
  8096   00462E  0ECB               	movlw	203
  8097   004630                     u4957:
  8098   004630  2EE8               	decfsz	wreg,f,c
  8099   004632  D7FE               	bra	u4957
  8100   004634  2E1E               	decfsz	??_reverseDetect^0,f,c
  8101   004636  D7FC               	bra	u4957
  8102   004638  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8103   00463A  D7FA               	bra	u4957
  8104   00463C  F000               	nop	
  8105   00463E                     
  8106                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8107   00463E  0EF5               	movlw	low _motorL
  8108   004640  6E14               	movwf	stop@mL^0,c
  8109   004642  0E00               	movlw	high _motorL
  8110   004644  6E15               	movwf	(stop@mL+1)^0,c
  8111   004646  0EBC               	movlw	low _motorR
  8112   004648  6E16               	movwf	stop@mR^0,c
  8113   00464A  0E01               	movlw	high _motorR
  8114   00464C  6E17               	movwf	(stop@mR+1)^0,c
  8115   00464E  EC05  F021         	call	_stop	;wreg free
  8116                           
  8117                           ;dc_motor.c: 219:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8118   004652  0E05               	movlw	5
  8119   004654  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8120   004656  0E0F               	movlw	15
  8121   004658  6E1E               	movwf	??_reverseDetect^0,c
  8122   00465A  0EF1               	movlw	241
  8123   00465C                     u4967:
  8124   00465C  2EE8               	decfsz	wreg,f,c
  8125   00465E  D7FE               	bra	u4967
  8126   004660  2E1E               	decfsz	??_reverseDetect^0,f,c
  8127   004662  D7FC               	bra	u4967
  8128   004664  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8129   004666  D7FA               	bra	u4967
  8130   004668  F000               	nop	
  8131   00466A  0012               	return		;funcret
  8132   00466C                     __end_of_reverseDetect:
  8133                           	callstack 0
  8134                           
  8135 ;; *************** function _stop *****************
  8136 ;; Defined at:
  8137 ;;		line 92 in file "dc_motor.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8140 ;;		 -> motorL(9), 
  8141 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8142 ;;		 -> motorR(9), 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;Total ram usage:        6 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 3
  8161 ;; This function calls:
  8162 ;;		_setMotorPWM
  8163 ;; This function is called by:
  8164 ;;		_main
  8165 ;;		_turnRight45
  8166 ;;		_turnLeft45
  8167 ;;		_reverseDetect
  8168 ;;		_reverseOneBlock
  8169 ;;		_ForwardOneBlock
  8170 ;;		_Forwardhalfblock
  8171 ;;		_Backhalfblock
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text56
  8176   00420A                     __ptext56:
  8177                           	callstack 0
  8178   00420A                     _stop:
  8179                           	callstack 27
  8180   00420A                     
  8181                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  8182   00420A  EF2B  F021         	goto	l3390
  8183   00420E                     l3382:
  8184                           
  8185                           ;dc_motor.c: 96:         mL->power-=10;
  8186   00420E  C014  FFD9         	movff	stop@mL,fsr2l
  8187   004212  C015  FFDA         	movff	stop@mL+1,fsr2h
  8188   004216  0E0A               	movlw	10
  8189   004218  5EDF               	subwf	indf2,f,c
  8190                           
  8191                           ;dc_motor.c: 97:         mR->power-=10;
  8192   00421A  C016  FFD9         	movff	stop@mR,fsr2l
  8193   00421E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8194   004222  0E0A               	movlw	10
  8195   004224  5EDF               	subwf	indf2,f,c
  8196   004226                     
  8197                           ;dc_motor.c: 102:         setMotorPWM(mL);
  8198   004226  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8199   00422A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8200   00422E  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8201   004232                     
  8202                           ;dc_motor.c: 103:         setMotorPWM(mR);
  8203   004232  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8204   004236  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8205   00423A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8206   00423E                     
  8207                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8208   00423E  0E02               	movlw	2
  8209   004240  6E19               	movwf	(??_stop+1)^0,c
  8210   004242  0EA0               	movlw	160
  8211   004244  6E18               	movwf	??_stop^0,c
  8212   004246  0E92               	movlw	146
  8213   004248                     u4977:
  8214   004248  2EE8               	decfsz	wreg,f,c
  8215   00424A  D7FE               	bra	u4977
  8216   00424C  2E18               	decfsz	??_stop^0,f,c
  8217   00424E  D7FC               	bra	u4977
  8218   004250  2E19               	decfsz	(??_stop+1)^0,f,c
  8219   004252  D7FA               	bra	u4977
  8220   004254  D000               	nop2	
  8221   004256                     l3390:
  8222                           
  8223                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  8224   004256  C014  FFD9         	movff	stop@mL,fsr2l
  8225   00425A  C015  FFDA         	movff	stop@mL+1,fsr2h
  8226   00425E  50DF               	movf	indf2,w,c
  8227   004260  A4D8               	btfss	status,2,c
  8228   004262  EF35  F021         	goto	u2681
  8229   004266  EF37  F021         	goto	u2680
  8230   00426A                     u2681:
  8231   00426A  EF07  F021         	goto	l3382
  8232   00426E                     u2680:
  8233   00426E  C016  FFD9         	movff	stop@mR,fsr2l
  8234   004272  C017  FFDA         	movff	stop@mR+1,fsr2h
  8235   004276  50DF               	movf	indf2,w,c
  8236   004278  A4D8               	btfss	status,2,c
  8237   00427A  EF41  F021         	goto	u2691
  8238   00427E  EF43  F021         	goto	u2690
  8239   004282                     u2691:
  8240   004282  EF07  F021         	goto	l3382
  8241   004286                     u2690:
  8242   004286  0012               	return		;funcret
  8243   004288                     __end_of_stop:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _fullSpeedBack *****************
  8247 ;; Defined at:
  8248 ;;		line 184 in file "dc_motor.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8251 ;;		 -> motorL(9), 
  8252 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8253 ;;		 -> motorR(9), 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;Total ram usage:        6 bytes
  8270 ;; Hardware stack levels used: 1
  8271 ;; Hardware stack levels required when called: 3
  8272 ;; This function calls:
  8273 ;;		_setMotorPWM
  8274 ;; This function is called by:
  8275 ;;		_reverseDetect
  8276 ;;		_reverseOneBlock
  8277 ;;		_Backhalfblock
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text57
  8282   0040E4                     __ptext57:
  8283                           	callstack 0
  8284   0040E4                     _fullSpeedBack:
  8285                           	callstack 25
  8286   0040E4                     
  8287                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
  8288   0040E4  EE20 F001          	lfsr	2,1
  8289   0040E8  5014               	movf	fullSpeedBack@mL^0,w,c
  8290   0040EA  26D9               	addwf	fsr2l,f,c
  8291   0040EC  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  8292   0040EE  22DA               	addwfc	fsr2h,f,c
  8293   0040F0  0E00               	movlw	0
  8294   0040F2  6EDF               	movwf	indf2,c
  8295                           
  8296                           ;dc_motor.c: 188:     mR->direction =0;
  8297   0040F4  EE20 F001          	lfsr	2,1
  8298   0040F8  5016               	movf	fullSpeedBack@mR^0,w,c
  8299   0040FA  26D9               	addwf	fsr2l,f,c
  8300   0040FC  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  8301   0040FE  22DA               	addwfc	fsr2h,f,c
  8302   004100  0E00               	movlw	0
  8303   004102  6EDF               	movwf	indf2,c
  8304                           
  8305                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
  8306   004104  EFA8  F020         	goto	l3432
  8307   004108                     l3424:
  8308                           
  8309                           ;dc_motor.c: 191:         mL->power+=10;
  8310   004108  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8311   00410C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8312   004110  0E0A               	movlw	10
  8313   004112  26DF               	addwf	indf2,f,c
  8314                           
  8315                           ;dc_motor.c: 192:         mR->power+=10;
  8316   004114  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8317   004118  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8318   00411C  0E0A               	movlw	10
  8319   00411E  26DF               	addwf	indf2,f,c
  8320   004120                     
  8321                           ;dc_motor.c: 194:         setMotorPWM(mL);
  8322   004120  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  8323   004124  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  8324   004128  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8325   00412C                     
  8326                           ;dc_motor.c: 195:         setMotorPWM(mR);
  8327   00412C  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  8328   004130  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  8329   004134  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8330   004138                     
  8331                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8332   004138  0E02               	movlw	2
  8333   00413A  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  8334   00413C  0EA0               	movlw	160
  8335   00413E  6E18               	movwf	??_fullSpeedBack^0,c
  8336   004140  0E92               	movlw	146
  8337   004142                     u4987:
  8338   004142  2EE8               	decfsz	wreg,f,c
  8339   004144  D7FE               	bra	u4987
  8340   004146  2E18               	decfsz	??_fullSpeedBack^0,f,c
  8341   004148  D7FC               	bra	u4987
  8342   00414A  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  8343   00414C  D7FA               	bra	u4987
  8344   00414E  D000               	nop2	
  8345   004150                     l3432:
  8346   004150  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8347   004154  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8348   004158  0E1E               	movlw	30
  8349   00415A  60DF               	cpfslt	indf2,c
  8350   00415C  EFB2  F020         	goto	u2741
  8351   004160  EFB4  F020         	goto	u2740
  8352   004164                     u2741:
  8353   004164  EFC0  F020         	goto	l532
  8354   004168                     u2740:
  8355   004168  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8356   00416C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8357   004170  0E1D               	movlw	29
  8358   004172  64DF               	cpfsgt	indf2,c
  8359   004174  EFBE  F020         	goto	u2751
  8360   004178  EFC0  F020         	goto	u2750
  8361   00417C                     u2751:
  8362   00417C  EF84  F020         	goto	l3424
  8363   004180                     u2750:
  8364   004180                     l532:
  8365   004180  0012               	return		;funcret
  8366   004182                     __end_of_fullSpeedBack:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _setMotorPWM *****************
  8370 ;; Defined at:
  8371 ;;		line 67 in file "dc_motor.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8374 ;;		 -> motorR(9), motorL(9), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  negDuty         1   18[COMRAM] unsigned char 
  8377 ;;  posDuty         1   17[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;Total ram usage:        6 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 2
  8394 ;; This function calls:
  8395 ;;		___lwdiv
  8396 ;;		___wmul
  8397 ;; This function is called by:
  8398 ;;		_stop
  8399 ;;		_turnLeft
  8400 ;;		_turnRight
  8401 ;;		_fullSpeedAhead
  8402 ;;		_timed_forward
  8403 ;;		_fullSpeedBack
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text58
  8408   00365C                     __ptext58:
  8409                           	callstack 0
  8410   00365C                     _setMotorPWM:
  8411                           	callstack 27
  8412   00365C                     
  8413                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  8414   00365C  EE20 F002          	lfsr	2,2
  8415   003660  500E               	movf	setMotorPWM@m^0,w,c
  8416   003662  26D9               	addwf	fsr2l,f,c
  8417   003664  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8418   003666  22DA               	addwfc	fsr2h,f,c
  8419   003668  50DF               	movf	indf2,w,c
  8420   00366A  B4D8               	btfsc	status,2,c
  8421   00366C  EF3A  F01B         	goto	u2461
  8422   003670  EF3C  F01B         	goto	u2460
  8423   003674                     u2461:
  8424   003674  EF70  F01B         	goto	l3254
  8425   003678                     u2460:
  8426   003678                     
  8427                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8428   003678  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8429   00367C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8430   003680  50DF               	movf	indf2,w,c
  8431   003682  6E10               	movwf	??_setMotorPWM^0,c
  8432   003684  5010               	movf	??_setMotorPWM^0,w,c
  8433   003686  6E01               	movwf	___wmul@multiplier^0,c
  8434   003688  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8435   00368A  EE20 F003          	lfsr	2,3
  8436   00368E  500E               	movf	setMotorPWM@m^0,w,c
  8437   003690  26D9               	addwf	fsr2l,f,c
  8438   003692  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8439   003694  22DA               	addwfc	fsr2h,f,c
  8440   003696  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8441   00369A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8442   00369E  EC94  F026         	call	___wmul	;wreg free
  8443   0036A2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8444   0036A6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8445   0036AA  0E00               	movlw	0
  8446   0036AC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8447   0036AE  0E64               	movlw	100
  8448   0036B0  6E09               	movwf	___lwdiv@divisor^0,c
  8449   0036B2  EC81  F021         	call	___lwdiv	;wreg free
  8450   0036B6  EE20 F003          	lfsr	2,3
  8451   0036BA  500E               	movf	setMotorPWM@m^0,w,c
  8452   0036BC  26D9               	addwf	fsr2l,f,c
  8453   0036BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8454   0036C0  22DA               	addwfc	fsr2h,f,c
  8455   0036C2  50DF               	movf	indf2,w,c
  8456   0036C4  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8457   0036C6  5007               	movf	?___lwdiv^0,w,c
  8458   0036C8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8459   0036CA  6E12               	movwf	setMotorPWM@posDuty^0,c
  8460   0036CC                     
  8461                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  8462   0036CC  EE20 F003          	lfsr	2,3
  8463   0036D0  500E               	movf	setMotorPWM@m^0,w,c
  8464   0036D2  26D9               	addwf	fsr2l,f,c
  8465   0036D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8466   0036D6  22DA               	addwfc	fsr2h,f,c
  8467   0036D8  50DF               	movf	indf2,w,c
  8468   0036DA  6E13               	movwf	setMotorPWM@negDuty^0,c
  8469                           
  8470                           ;dc_motor.c: 74:     }
  8471   0036DC  EF93  F01B         	goto	l3258
  8472   0036E0                     l3254:
  8473                           
  8474                           ;dc_motor.c: 76:         posDuty=0;
  8475   0036E0  0E00               	movlw	0
  8476   0036E2  6E12               	movwf	setMotorPWM@posDuty^0,c
  8477   0036E4                     
  8478                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8479   0036E4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8480   0036E8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8481   0036EC  50DF               	movf	indf2,w,c
  8482   0036EE  6E10               	movwf	??_setMotorPWM^0,c
  8483   0036F0  5010               	movf	??_setMotorPWM^0,w,c
  8484   0036F2  6E01               	movwf	___wmul@multiplier^0,c
  8485   0036F4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8486   0036F6  EE20 F003          	lfsr	2,3
  8487   0036FA  500E               	movf	setMotorPWM@m^0,w,c
  8488   0036FC  26D9               	addwf	fsr2l,f,c
  8489   0036FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8490   003700  22DA               	addwfc	fsr2h,f,c
  8491   003702  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8492   003706  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8493   00370A  EC94  F026         	call	___wmul	;wreg free
  8494   00370E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8495   003712  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8496   003716  0E00               	movlw	0
  8497   003718  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8498   00371A  0E64               	movlw	100
  8499   00371C  6E09               	movwf	___lwdiv@divisor^0,c
  8500   00371E  EC81  F021         	call	___lwdiv	;wreg free
  8501   003722  5007               	movf	?___lwdiv^0,w,c
  8502   003724  6E13               	movwf	setMotorPWM@negDuty^0,c
  8503   003726                     l3258:
  8504                           
  8505                           ;dc_motor.c: 80:     if (m->direction) {
  8506   003726  EE20 F001          	lfsr	2,1
  8507   00372A  500E               	movf	setMotorPWM@m^0,w,c
  8508   00372C  26D9               	addwf	fsr2l,f,c
  8509   00372E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8510   003730  22DA               	addwfc	fsr2h,f,c
  8511   003732  50DF               	movf	indf2,w,c
  8512   003734  B4D8               	btfsc	status,2,c
  8513   003736  EF9F  F01B         	goto	u2471
  8514   00373A  EFA1  F01B         	goto	u2470
  8515   00373E                     u2471:
  8516   00373E  EFC3  F01B         	goto	l3262
  8517   003742                     u2470:
  8518   003742                     
  8519                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8520   003742  EE20 F005          	lfsr	2,5
  8521   003746  500E               	movf	setMotorPWM@m^0,w,c
  8522   003748  26D9               	addwf	fsr2l,f,c
  8523   00374A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8524   00374C  22DA               	addwfc	fsr2h,f,c
  8525   00374E  CFDE F010          	movff	postinc2,??_setMotorPWM
  8526   003752  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8527   003756  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8528   00375A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8529   00375E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8530                           
  8531                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8532   003762  EE20 F007          	lfsr	2,7
  8533   003766  500E               	movf	setMotorPWM@m^0,w,c
  8534   003768  26D9               	addwf	fsr2l,f,c
  8535   00376A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8536   00376C  22DA               	addwfc	fsr2h,f,c
  8537   00376E  CFDE F010          	movff	postinc2,??_setMotorPWM
  8538   003772  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8539   003776  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8540   00377A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8541   00377E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8542                           
  8543                           ;dc_motor.c: 85:     } else {
  8544   003782  EFE3  F01B         	goto	l486
  8545   003786                     l3262:
  8546                           
  8547                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8548   003786  EE20 F005          	lfsr	2,5
  8549   00378A  500E               	movf	setMotorPWM@m^0,w,c
  8550   00378C  26D9               	addwf	fsr2l,f,c
  8551   00378E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8552   003790  22DA               	addwfc	fsr2h,f,c
  8553   003792  CFDE F010          	movff	postinc2,??_setMotorPWM
  8554   003796  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8555   00379A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8556   00379E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8557   0037A2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8558                           
  8559                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8560   0037A6  EE20 F007          	lfsr	2,7
  8561   0037AA  500E               	movf	setMotorPWM@m^0,w,c
  8562   0037AC  26D9               	addwf	fsr2l,f,c
  8563   0037AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8564   0037B0  22DA               	addwfc	fsr2h,f,c
  8565   0037B2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8566   0037B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8567   0037BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8568   0037BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8569   0037C2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8570   0037C6                     l486:
  8571   0037C6  0012               	return		;funcret
  8572   0037C8                     __end_of_setMotorPWM:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function ___wmul *****************
  8576 ;; Defined at:
  8577 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  multiplier      2    0[COMRAM] unsigned int 
  8580 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  product         2    4[COMRAM] unsigned int 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  2    0[COMRAM] unsigned int 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, prodl, prodh
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:        6 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_setMotorPWM
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text59
  8607   004D28                     __ptext59:
  8608                           	callstack 0
  8609   004D28                     ___wmul:
  8610                           	callstack 27
  8611   004D28  5001               	movf	___wmul@multiplier^0,w,c
  8612   004D2A  0203               	mulwf	___wmul@multiplicand^0,c
  8613   004D2C  CFF3 F005          	movff	prodl,___wmul@product
  8614   004D30  CFF4 F006          	movff	prodh,___wmul@product+1
  8615   004D34  5001               	movf	___wmul@multiplier^0,w,c
  8616   004D36  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8617   004D38  50F3               	movf	243,w,c
  8618   004D3A  2606               	addwf	(___wmul@product+1)^0,f,c
  8619   004D3C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8620   004D3E  0203               	mulwf	___wmul@multiplicand^0,c
  8621   004D40  50F3               	movf	243,w,c
  8622   004D42  2606               	addwf	(___wmul@product+1)^0,f,c
  8623   004D44  C005  F001         	movff	___wmul@product,?___wmul
  8624   004D48  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8625   004D4C  0012               	return		;funcret
  8626   004D4E                     __end_of___wmul:
  8627                           	callstack 0
  8628                           
  8629 ;; *************** function ___lwdiv *****************
  8630 ;; Defined at:
  8631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  dividend        2    6[COMRAM] unsigned int 
  8634 ;;  divisor         2    8[COMRAM] unsigned int 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  quotient        2   10[COMRAM] unsigned int 
  8637 ;;  counter         1   12[COMRAM] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  2    6[COMRAM] unsigned int 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;Total ram usage:        7 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; Hardware stack levels required when called: 1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_setMotorPWM
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text60
  8662   004302                     __ptext60:
  8663                           	callstack 0
  8664   004302                     ___lwdiv:
  8665                           	callstack 27
  8666   004302  0E00               	movlw	0
  8667   004304  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8668   004306  0E00               	movlw	0
  8669   004308  6E0B               	movwf	___lwdiv@quotient^0,c
  8670   00430A  5009               	movf	___lwdiv@divisor^0,w,c
  8671   00430C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8672   00430E  B4D8               	btfsc	status,2,c
  8673   004310  EF8C  F021         	goto	u2421
  8674   004314  EF8E  F021         	goto	u2420
  8675   004318                     u2421:
  8676   004318  EFB6  F021         	goto	l1159
  8677   00431C                     u2420:
  8678   00431C  0E01               	movlw	1
  8679   00431E  6E0D               	movwf	___lwdiv@counter^0,c
  8680   004320  EF96  F021         	goto	l3226
  8681   004324                     l3224:
  8682   004324  90D8               	bcf	status,0,c
  8683   004326  3609               	rlcf	___lwdiv@divisor^0,f,c
  8684   004328  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8685   00432A  2A0D               	incf	___lwdiv@counter^0,f,c
  8686   00432C                     l3226:
  8687   00432C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8688   00432E  EF9B  F021         	goto	u2431
  8689   004332  EF9D  F021         	goto	u2430
  8690   004336                     u2431:
  8691   004336  EF92  F021         	goto	l3224
  8692   00433A                     u2430:
  8693   00433A                     l3228:
  8694   00433A  90D8               	bcf	status,0,c
  8695   00433C  360B               	rlcf	___lwdiv@quotient^0,f,c
  8696   00433E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8697   004340  5009               	movf	___lwdiv@divisor^0,w,c
  8698   004342  5C07               	subwf	___lwdiv@dividend^0,w,c
  8699   004344  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8700   004346  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8701   004348  A0D8               	btfss	status,0,c
  8702   00434A  EFA9  F021         	goto	u2441
  8703   00434E  EFAB  F021         	goto	u2440
  8704   004352                     u2441:
  8705   004352  EFB0  F021         	goto	l3236
  8706   004356                     u2440:
  8707   004356  5009               	movf	___lwdiv@divisor^0,w,c
  8708   004358  5E07               	subwf	___lwdiv@dividend^0,f,c
  8709   00435A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8710   00435C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8711   00435E  800B               	bsf	___lwdiv@quotient^0,0,c
  8712   004360                     l3236:
  8713   004360  90D8               	bcf	status,0,c
  8714   004362  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8715   004364  3209               	rrcf	___lwdiv@divisor^0,f,c
  8716   004366  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8717   004368  EF9D  F021         	goto	l3228
  8718   00436C                     l1159:
  8719   00436C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8720   004370  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8721   004374  0012               	return		;funcret
  8722   004376                     __end_of___lwdiv:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _Interrupts_init *****************
  8726 ;; Defined at:
  8727 ;;		line 8 in file "interrupts.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		None
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 1
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_main
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text61
  8756   004DC4                     __ptext61:
  8757                           	callstack 0
  8758   004DC4                     _Interrupts_init:
  8759                           	callstack 29
  8760   004DC4                     
  8761                           ;interrupts.c: 10:     INTCONbits.IPEN=0;
  8762   004DC4  9AF2               	bcf	242,5,c	;volatile
  8763                           
  8764                           ;interrupts.c: 11:     PIE2bits.C1IE=1;
  8765   004DC6  010E               	movlb	14	; () banked
  8766   004DC8  812B               	bsf	43,0,b	;volatile
  8767                           
  8768                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  8769   004DCA  8CF2               	bsf	242,6,c	;volatile
  8770                           
  8771                           ;interrupts.c: 13:     INTCONbits.GIE=1;
  8772   004DCC  8EF2               	bsf	242,7,c	;volatile
  8773                           
  8774                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
  8775   004DCE  8B29               	bsf	41,5,b	;volatile
  8776   004DD0                     
  8777                           ; BSR set to: 14
  8778   004DD0  0012               	return		;funcret
  8779   004DD2                     __end_of_Interrupts_init:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _Colour_decider *****************
  8783 ;; Defined at:
  8784 ;;		line 125 in file "color.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  vals            2   74[COMRAM] PTR struct RGB
  8787 ;;		 -> vals(8), 
  8788 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8789 ;;		 -> rel(12), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  RGB_col        12    6[BANK0 ] float [3]
  8792 ;;  Hue             4   28[BANK0 ] float 
  8793 ;;  Cmin            4   22[BANK0 ] float 
  8794 ;;  Cmax            4   18[BANK0 ] float 
  8795 ;;  i               2   26[BANK0 ] int 
  8796 ;;  Cmax_i          2    4[BANK0 ] int 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  2   74[COMRAM] int 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:       38 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 3
  8813 ;; This function calls:
  8814 ;;		___fladd
  8815 ;;		___fldiv
  8816 ;;		___fleq
  8817 ;;		___flge
  8818 ;;		___flmul
  8819 ;;		___flsub
  8820 ;;		___xxtofl
  8821 ;; This function is called by:
  8822 ;;		_main
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text62
  8827   000E26                     __ptext62:
  8828                           	callstack 0
  8829   000E26                     _Colour_decider:
  8830                           	callstack 27
  8831   000E26                     
  8832                           ;color.c: 126:     float Cmax = 0;
  8833   000E26  0E00               	movlw	0
  8834   000E28  0100               	movlb	0	; () banked
  8835   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8836   000E2C  0E00               	movlw	0
  8837   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8838   000E30  0E00               	movlw	0
  8839   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8840   000E34  0E00               	movlw	0
  8841   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8842                           
  8843                           ;color.c: 127:     float Cmin= 100000;
  8844   000E38  0E00               	movlw	0
  8845   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8846   000E3C  0E50               	movlw	80
  8847   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8848   000E40  0EC3               	movlw	195
  8849   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8850   000E44  0E47               	movlw	71
  8851   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8852                           
  8853                           ;color.c: 128:     int Cmax_i =4;
  8854   000E48  0E00               	movlw	0
  8855   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8856   000E4C  0E04               	movlw	4
  8857   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8858   000E50                     
  8859                           ; BSR set to: 0
  8860                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8861   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8862   000E54  0E0B               	movlw	11
  8863   000E56                     u3951:
  8864   000E56  6ADE               	clrf	postinc2,c
  8865   000E58  06E8               	decf	wreg,f,c
  8866   000E5A  E2FD               	bc	u3951
  8867   000E5C                     
  8868                           ; BSR set to: 0
  8869   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8870   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8871   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8872   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8873   000E6C  0E00               	movlw	0
  8874   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8875   000E70  0EFF               	movlw	-1
  8876   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8877   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8878   000E76  0E01               	movlw	1
  8879   000E78  EC90  F019         	call	___xxtofl
  8880   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8881   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8882   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8883   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8884   000E8C  EE20 F002          	lfsr	2,2
  8885   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8886   000E92  26D9               	addwf	fsr2l,f,c
  8887   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8888   000E96  22DA               	addwfc	fsr2h,f,c
  8889   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8890   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8891   000EA0  0E00               	movlw	0
  8892   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8893   000EA4  0EFF               	movlw	-1
  8894   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8895   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8896   000EAA  0E01               	movlw	1
  8897   000EAC  EC90  F019         	call	___xxtofl
  8898   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8899   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8900   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8901   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8902   000EC0  EE20 F004          	lfsr	2,4
  8903   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8904   000EC6  26D9               	addwf	fsr2l,f,c
  8905   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8906   000ECA  22DA               	addwfc	fsr2h,f,c
  8907   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8908   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8909   000ED4  0E00               	movlw	0
  8910   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8911   000ED8  0EFF               	movlw	-1
  8912   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8913   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8914   000EDE  0E01               	movlw	1
  8915   000EE0  EC90  F019         	call	___xxtofl
  8916   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8917   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8918   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8919   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8920   000EF4                     
  8921                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8922   000EF4  0E00               	movlw	0
  8923   000EF6  0100               	movlb	0	; () banked
  8924   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8925   000EFA  0E00               	movlw	0
  8926   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8927   000EFE                     l4302:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8931   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8932   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8933   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8934   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8935   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8936   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8937   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8938   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8939   000F16  90D8               	bcf	status,0,c
  8940   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8941   000F1A  6ED9               	movwf	fsr2l,c
  8942   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8943   000F1E  6EDA               	movwf	fsr2h,c
  8944   000F20  90D8               	bcf	status,0,c
  8945   000F22  36D9               	rlcf	fsr2l,f,c
  8946   000F24  36DA               	rlcf	fsr2h,f,c
  8947   000F26  504F               	movf	??_Colour_decider^0,w,c
  8948   000F28  26D9               	addwf	fsr2l,f,c
  8949   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8950   000F2C  22DA               	addwfc	fsr2h,f,c
  8951   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8952   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8953   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8954   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8955   000F3E  EC3E  F01D         	call	___flge	;wreg free
  8956   000F42  B0D8               	btfsc	status,0,c
  8957   000F44  EFA6  F007         	goto	u3961
  8958   000F48  EFA8  F007         	goto	u3960
  8959   000F4C                     u3961:
  8960   000F4C  EFC5  F007         	goto	l4308
  8961   000F50                     u3960:
  8962   000F50                     
  8963                           ;color.c: 137:             Cmax=RGB_col[i];
  8964   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8965   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8966   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8967   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8968   000F58  90D8               	bcf	status,0,c
  8969   000F5A  0100               	movlb	0	; () banked
  8970   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8971   000F5E  6ED9               	movwf	fsr2l,c
  8972   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8973   000F62  6EDA               	movwf	fsr2h,c
  8974   000F64  90D8               	bcf	status,0,c
  8975   000F66  36D9               	rlcf	fsr2l,f,c
  8976   000F68  36DA               	rlcf	fsr2h,f,c
  8977   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8978   000F6C  26D9               	addwf	fsr2l,f,c
  8979   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8980   000F70  22DA               	addwfc	fsr2h,f,c
  8981   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8982   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8983   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8984   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8985   000F82                     
  8986                           ; BSR set to: 0
  8987                           ;color.c: 138:             Cmax_i=i;
  8988   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8989   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8990   000F8A                     l4308:
  8991                           
  8992                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8993   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8994   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8995   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8996   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8997   000F92  90D8               	bcf	status,0,c
  8998   000F94  0100               	movlb	0	; () banked
  8999   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9000   000F98  6ED9               	movwf	fsr2l,c
  9001   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9002   000F9C  6EDA               	movwf	fsr2h,c
  9003   000F9E  90D8               	bcf	status,0,c
  9004   000FA0  36D9               	rlcf	fsr2l,f,c
  9005   000FA2  36DA               	rlcf	fsr2h,f,c
  9006   000FA4  504F               	movf	??_Colour_decider^0,w,c
  9007   000FA6  26D9               	addwf	fsr2l,f,c
  9008   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  9009   000FAA  22DA               	addwfc	fsr2h,f,c
  9010   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  9011   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9012   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9013   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9014   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  9015   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9016   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9017   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9018   000FCC  EC3E  F01D         	call	___flge	;wreg free
  9019   000FD0  B0D8               	btfsc	status,0,c
  9020   000FD2  EFED  F007         	goto	u3971
  9021   000FD6  EFEF  F007         	goto	u3970
  9022   000FDA                     u3971:
  9023   000FDA  EF08  F008         	goto	l4312
  9024   000FDE                     u3970:
  9025   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  9026   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  9027   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  9028   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9029   000FE6  90D8               	bcf	status,0,c
  9030   000FE8  0100               	movlb	0	; () banked
  9031   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9032   000FEC  6ED9               	movwf	fsr2l,c
  9033   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9034   000FF0  6EDA               	movwf	fsr2h,c
  9035   000FF2  90D8               	bcf	status,0,c
  9036   000FF4  36D9               	rlcf	fsr2l,f,c
  9037   000FF6  36DA               	rlcf	fsr2h,f,c
  9038   000FF8  504F               	movf	??_Colour_decider^0,w,c
  9039   000FFA  26D9               	addwf	fsr2l,f,c
  9040   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9041   000FFE  22DA               	addwfc	fsr2h,f,c
  9042   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9043   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9044   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9045   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9046   001010                     l4312:
  9047                           
  9048                           ;color.c: 141:     }
  9049   001010  0100               	movlb	0	; () banked
  9050   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9051   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9052   001016                     
  9053                           ; BSR set to: 0
  9054   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9055   001018  EF17  F008         	goto	u3981
  9056   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9057   00101E  E109               	bnz	u3980
  9058   001020  0E03               	movlw	3
  9059   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9060   001024  A0D8               	btfss	status,0,c
  9061   001026  EF17  F008         	goto	u3981
  9062   00102A  EF19  F008         	goto	u3980
  9063   00102E                     u3981:
  9064   00102E  EF7F  F007         	goto	l4302
  9065   001032                     u3980:
  9066   001032                     
  9067                           ; BSR set to: 0
  9068                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9069   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9070   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9071   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9072   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9073   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9074   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9075   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9076   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9077   001052  EC4B  F025         	call	___flsub	;wreg free
  9078   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  9079   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  9080   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  9081   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  9082   001066  0E00               	movlw	0
  9083   001068  6E1D               	movwf	___fleq@ff2^0,c
  9084   00106A  0E00               	movlw	0
  9085   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  9086   00106E  0E00               	movlw	0
  9087   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  9088   001072  0E00               	movlw	0
  9089   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  9090   001076  EC30  F01F         	call	___fleq	;wreg free
  9091   00107A  A0D8               	btfss	status,0,c
  9092   00107C  EF42  F008         	goto	u3991
  9093   001080  EF44  F008         	goto	u3990
  9094   001084                     u3991:
  9095   001084  EF4A  F008         	goto	l4322
  9096   001088                     u3990:
  9097   001088                     l4318:
  9098   001088  0E00               	movlw	0
  9099   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9100   00108C  0E00               	movlw	0
  9101   00108E  6E4B               	movwf	?_Colour_decider^0,c
  9102   001090  EF80  F00C         	goto	l76
  9103   001094                     l4322:
  9104                           
  9105                           ;color.c: 146:     if (Cmax_i==0){
  9106   001094  0100               	movlb	0	; () banked
  9107   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9108   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9109   00109A  A4D8               	btfss	status,2,c
  9110   00109C  EF52  F008         	goto	u4001
  9111   0010A0  EF54  F008         	goto	u4000
  9112   0010A4                     u4001:
  9113   0010A4  EFC8  F008         	goto	l4330
  9114   0010A8                     u4000:
  9115   0010A8                     
  9116                           ; BSR set to: 0
  9117                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9118   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9119   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9120   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9121   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9122   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9123   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9124   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9125   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9126   0010C8  EC4B  F025         	call	___flsub	;wreg free
  9127   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  9128   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9129   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9130   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9131   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  9132   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9133   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9134   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9135   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  9136   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9137   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9138   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9139   0010FC  EC4B  F025         	call	___flsub	;wreg free
  9140   001100  C011  F019         	movff	?___flsub,___fldiv@b
  9141   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9142   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9143   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9144   001110  EC97  F013         	call	___fldiv	;wreg free
  9145   001114  C019  F032         	movff	?___fldiv,___flmul@b
  9146   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9147   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9148   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9149   001124  0E00               	movlw	0
  9150   001126  6E36               	movwf	___flmul@a^0,c
  9151   001128  0E00               	movlw	0
  9152   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9153   00112C  0E70               	movlw	112
  9154   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9155   001130  0E42               	movlw	66
  9156   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9157   001134  EC82  F011         	call	___flmul	;wreg free
  9158   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9159   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9160   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9161   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9162   001148                     
  9163                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9164   001148  0100               	movlb	0	; () banked
  9165   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9166   00114C  EFAC  F008         	goto	u4010
  9167   001150  EFAA  F008         	goto	u4011
  9168   001154                     u4011:
  9169   001154  EFA7  F009         	goto	l4340
  9170   001158                     u4010:
  9171   001158                     
  9172                           ; BSR set to: 0
  9173   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9174   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9175   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9176   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9177   001168  0E00               	movlw	0
  9178   00116A  6E05               	movwf	___fladd@a^0,c
  9179   00116C  0E00               	movlw	0
  9180   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9181   001170  0EB4               	movlw	180
  9182   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9183   001174  0E43               	movlw	67
  9184   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9185   001178  EC22  F00F         	call	___fladd	;wreg free
  9186   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9187   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9188   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9189   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9190   00118C  EFA7  F009         	goto	l4340
  9191   001190                     l4330:
  9192                           
  9193                           ; BSR set to: 0
  9194   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9195   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9196   001194  A4D8               	btfss	status,2,c
  9197   001196  EFCF  F008         	goto	u4021
  9198   00119A  EFD1  F008         	goto	u4020
  9199   00119E                     u4021:
  9200   00119E  EF3D  F009         	goto	l4336
  9201   0011A2                     u4020:
  9202   0011A2                     
  9203                           ; BSR set to: 0
  9204                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9205   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9206   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9207   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9208   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9209   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9210   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9211   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9212   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9213   0011C2  EC4B  F025         	call	___flsub	;wreg free
  9214   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9215   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9216   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9217   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9218   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9219   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9220   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9221   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9222   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9223   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9224   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9225   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9226   0011F6  EC4B  F025         	call	___flsub	;wreg free
  9227   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9228   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9229   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9230   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9231   00120A  EC97  F013         	call	___fldiv	;wreg free
  9232   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2952
  9233   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2952+1
  9234   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2952+2
  9235   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2952+3
  9236   00121E                     
  9237                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9238   00121E  0E00               	movlw	0
  9239   001220  6E05               	movwf	___fladd@a^0,c
  9240   001222  0E00               	movlw	0
  9241   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9242   001226  0E00               	movlw	0
  9243   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9244   00122A  0E40               	movlw	64
  9245   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9246   00122E  C060  F001         	movff	_Colour_decider$2952,___fladd@b
  9247   001232  C061  F002         	movff	_Colour_decider$2952+1,___fladd@b+1
  9248   001236  C062  F003         	movff	_Colour_decider$2952+2,___fladd@b+2
  9249   00123A  C063  F004         	movff	_Colour_decider$2952+3,___fladd@b+3
  9250   00123E  EC22  F00F         	call	___fladd	;wreg free
  9251   001242  C001  F032         	movff	?___fladd,___flmul@b
  9252   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9253   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9254   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9255   001252  0E00               	movlw	0
  9256   001254  6E36               	movwf	___flmul@a^0,c
  9257   001256  0E00               	movlw	0
  9258   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9259   00125A  0E70               	movlw	112
  9260   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9261   00125E  0E42               	movlw	66
  9262   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9263   001262  EC82  F011         	call	___flmul	;wreg free
  9264   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9265   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9266   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9267   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9268                           
  9269                           ;color.c: 155:     }
  9270   001276  EFA7  F009         	goto	l4340
  9271   00127A                     l4336:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9275   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9276   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9277   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9278   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9279   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9280   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9281   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9282   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9283   00129A  EC4B  F025         	call	___flsub	;wreg free
  9284   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9285   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9286   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9287   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9288   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9289   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9290   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9291   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9292   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9293   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9294   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9295   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9296   0012CE  EC4B  F025         	call	___flsub	;wreg free
  9297   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9298   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9299   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9300   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9301   0012E2  EC97  F013         	call	___fldiv	;wreg free
  9302   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2952
  9303   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2952+1
  9304   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2952+2
  9305   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2952+3
  9306   0012F6                     
  9307                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9308   0012F6  0E00               	movlw	0
  9309   0012F8  6E05               	movwf	___fladd@a^0,c
  9310   0012FA  0E00               	movlw	0
  9311   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9312   0012FE  0E80               	movlw	128
  9313   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9314   001302  0E40               	movlw	64
  9315   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9316   001306  C060  F001         	movff	_Colour_decider$2952,___fladd@b
  9317   00130A  C061  F002         	movff	_Colour_decider$2952+1,___fladd@b+1
  9318   00130E  C062  F003         	movff	_Colour_decider$2952+2,___fladd@b+2
  9319   001312  C063  F004         	movff	_Colour_decider$2952+3,___fladd@b+3
  9320   001316  EC22  F00F         	call	___fladd	;wreg free
  9321   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9322   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9323   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9324   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9325   00132A  0E00               	movlw	0
  9326   00132C  6E36               	movwf	___flmul@a^0,c
  9327   00132E  0E00               	movlw	0
  9328   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9329   001332  0E70               	movlw	112
  9330   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9331   001336  0E42               	movlw	66
  9332   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9333   00133A  EC82  F011         	call	___flmul	;wreg free
  9334   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9335   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9336   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9337   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9338   00134E                     l4340:
  9339                           
  9340                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9341   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9342   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9343   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9344   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9345   00135E  0E00               	movlw	0
  9346   001360  6E05               	movwf	___flge@ff2^0,c
  9347   001362  0E00               	movlw	0
  9348   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9349   001366  0EA5               	movlw	165
  9350   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9351   00136A  0E43               	movlw	67
  9352   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9353   00136E  EC3E  F01D         	call	___flge	;wreg free
  9354   001372  A0D8               	btfss	status,0,c
  9355   001374  EFBE  F009         	goto	u4031
  9356   001378  EFC0  F009         	goto	u4030
  9357   00137C                     u4031:
  9358   00137C  EFDF  F009         	goto	l4350
  9359   001380                     u4030:
  9360   001380  0E00               	movlw	0
  9361   001382  6E01               	movwf	___flge@ff1^0,c
  9362   001384  0E00               	movlw	0
  9363   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9364   001388  0EB4               	movlw	180
  9365   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9366   00138C  0E43               	movlw	67
  9367   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9368   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9369   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9370   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9371   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9372   0013A0  EC3E  F01D         	call	___flge	;wreg free
  9373   0013A4  A0D8               	btfss	status,0,c
  9374   0013A6  EFD7  F009         	goto	u4041
  9375   0013AA  EFD9  F009         	goto	u4040
  9376   0013AE                     u4041:
  9377   0013AE  EFDF  F009         	goto	l4350
  9378   0013B2                     u4040:
  9379   0013B2                     
  9380                           ;color.c: 164:         return 1;
  9381   0013B2  0E00               	movlw	0
  9382   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9383   0013B6  0E01               	movlw	1
  9384   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9385   0013BA  EF80  F00C         	goto	l76
  9386   0013BE                     l4350:
  9387   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9388   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9389   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9390   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9391   0013CE  0E00               	movlw	0
  9392   0013D0  6E05               	movwf	___flge@ff2^0,c
  9393   0013D2  0E00               	movlw	0
  9394   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9395   0013D6  0EA0               	movlw	160
  9396   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9397   0013DA  0E40               	movlw	64
  9398   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9399   0013DE  EC3E  F01D         	call	___flge	;wreg free
  9400   0013E2  A0D8               	btfss	status,0,c
  9401   0013E4  EFF6  F009         	goto	u4051
  9402   0013E8  EFF8  F009         	goto	u4050
  9403   0013EC                     u4051:
  9404   0013EC  EF17  F00A         	goto	l4360
  9405   0013F0                     u4050:
  9406   0013F0  0E00               	movlw	0
  9407   0013F2  6E01               	movwf	___flge@ff1^0,c
  9408   0013F4  0E00               	movlw	0
  9409   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9410   0013F8  0E40               	movlw	64
  9411   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9412   0013FC  0E41               	movlw	65
  9413   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9414   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9415   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9416   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9417   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9418   001410  EC3E  F01D         	call	___flge	;wreg free
  9419   001414  A0D8               	btfss	status,0,c
  9420   001416  EF0F  F00A         	goto	u4061
  9421   00141A  EF11  F00A         	goto	u4060
  9422   00141E                     u4061:
  9423   00141E  EF17  F00A         	goto	l4360
  9424   001422                     u4060:
  9425   001422                     
  9426                           ;color.c: 168:         return 2;
  9427   001422  0E00               	movlw	0
  9428   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9429   001426  0E02               	movlw	2
  9430   001428  6E4B               	movwf	?_Colour_decider^0,c
  9431   00142A  EF80  F00C         	goto	l76
  9432   00142E                     l4360:
  9433   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9434   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9435   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9436   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9437   00143E  0E00               	movlw	0
  9438   001440  6E05               	movwf	___flge@ff2^0,c
  9439   001442  0E00               	movlw	0
  9440   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9441   001446  0EA0               	movlw	160
  9442   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9443   00144A  0E41               	movlw	65
  9444   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9445   00144E  EC3E  F01D         	call	___flge	;wreg free
  9446   001452  A0D8               	btfss	status,0,c
  9447   001454  EF2E  F00A         	goto	u4071
  9448   001458  EF30  F00A         	goto	u4070
  9449   00145C                     u4071:
  9450   00145C  EFB0  F00A         	goto	l4386
  9451   001460                     u4070:
  9452   001460  0E00               	movlw	0
  9453   001462  6E01               	movwf	___flge@ff1^0,c
  9454   001464  0E00               	movlw	0
  9455   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9456   001468  0EE8               	movlw	232
  9457   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9458   00146C  0E41               	movlw	65
  9459   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9460   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9461   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9462   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9463   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9464   001480  EC3E  F01D         	call	___flge	;wreg free
  9465   001484  A0D8               	btfss	status,0,c
  9466   001486  EF47  F00A         	goto	u4081
  9467   00148A  EF49  F00A         	goto	u4080
  9468   00148E                     u4081:
  9469   00148E  EFB0  F00A         	goto	l4386
  9470   001492                     u4080:
  9471   001492                     
  9472                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9473   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9474   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9475   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9476   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9477   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9478   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9479   0014AA  0ECD               	movlw	205
  9480   0014AC  6E05               	movwf	___flge@ff2^0,c
  9481   0014AE  0ECC               	movlw	204
  9482   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9483   0014B2  0E4C               	movlw	76
  9484   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9485   0014B6  0E3E               	movlw	62
  9486   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9487   0014BA  EC3E  F01D         	call	___flge	;wreg free
  9488   0014BE  A0D8               	btfss	status,0,c
  9489   0014C0  EF64  F00A         	goto	u4091
  9490   0014C4  EF66  F00A         	goto	u4090
  9491   0014C8                     u4091:
  9492   0014C8  EF85  F00A         	goto	l4374
  9493   0014CC                     u4090:
  9494   0014CC  0E00               	movlw	0
  9495   0014CE  6E01               	movwf	___flge@ff1^0,c
  9496   0014D0  0E00               	movlw	0
  9497   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9498   0014D4  0E80               	movlw	128
  9499   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9500   0014D8  0E3E               	movlw	62
  9501   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9502   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9503   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9504   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9505   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9506   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9507   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9508   0014F4  EC3E  F01D         	call	___flge	;wreg free
  9509   0014F8  A0D8               	btfss	status,0,c
  9510   0014FA  EF81  F00A         	goto	u4101
  9511   0014FE  EF83  F00A         	goto	u4100
  9512   001502                     u4101:
  9513   001502  EF85  F00A         	goto	l4374
  9514   001506                     u4100:
  9515   001506  EF44  F008         	goto	l4318
  9516   00150A                     l4374:
  9517   00150A  EE20 F008          	lfsr	2,8
  9518   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9519   001510  26D9               	addwf	fsr2l,f,c
  9520   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9521   001514  22DA               	addwfc	fsr2h,f,c
  9522   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9523   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9524   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9525   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9526   001526  0E29               	movlw	41
  9527   001528  6E05               	movwf	___flge@ff2^0,c
  9528   00152A  0E5C               	movlw	92
  9529   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9530   00152E  0E0F               	movlw	15
  9531   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9532   001532  0E3E               	movlw	62
  9533   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9534   001536  EC3E  F01D         	call	___flge	;wreg free
  9535   00153A  A0D8               	btfss	status,0,c
  9536   00153C  EFA2  F00A         	goto	u4111
  9537   001540  EFA4  F00A         	goto	u4110
  9538   001544                     u4111:
  9539   001544  EFAA  F00A         	goto	l4382
  9540   001548                     u4110:
  9541   001548                     l4376:
  9542                           
  9543                           ;color.c: 179:             return 4;
  9544   001548  0E00               	movlw	0
  9545   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9546   00154C  0E04               	movlw	4
  9547   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9548   001550  EF80  F00C         	goto	l76
  9549   001554                     l4382:
  9550                           
  9551                           ;color.c: 182:             return 3;
  9552   001554  0E00               	movlw	0
  9553   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9554   001558  0E03               	movlw	3
  9555   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9556   00155C  EF80  F00C         	goto	l76
  9557   001560                     l4386:
  9558   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9559   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9560   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9561   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9562   001570  0E00               	movlw	0
  9563   001572  6E05               	movwf	___flge@ff2^0,c
  9564   001574  0E00               	movlw	0
  9565   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9566   001578  0E34               	movlw	52
  9567   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9568   00157C  0E42               	movlw	66
  9569   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9570   001580  EC3E  F01D         	call	___flge	;wreg free
  9571   001584  A0D8               	btfss	status,0,c
  9572   001586  EFC7  F00A         	goto	u4121
  9573   00158A  EFC9  F00A         	goto	u4120
  9574   00158E                     u4121:
  9575   00158E  EF2E  F00B         	goto	l4410
  9576   001592                     u4120:
  9577   001592  0E00               	movlw	0
  9578   001594  6E01               	movwf	___flge@ff1^0,c
  9579   001596  0E00               	movlw	0
  9580   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9581   00159A  0EA0               	movlw	160
  9582   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9583   00159E  0E42               	movlw	66
  9584   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9585   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9586   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9587   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9588   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9589   0015B2  EC3E  F01D         	call	___flge	;wreg free
  9590   0015B6  A0D8               	btfss	status,0,c
  9591   0015B8  EFE0  F00A         	goto	u4131
  9592   0015BC  EFE2  F00A         	goto	u4130
  9593   0015C0                     u4131:
  9594   0015C0  EF2E  F00B         	goto	l4410
  9595   0015C4                     u4130:
  9596   0015C4                     
  9597                           ;color.c: 188:         if(0.15<=rel->B){
  9598   0015C4  EE20 F008          	lfsr	2,8
  9599   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9600   0015CA  26D9               	addwf	fsr2l,f,c
  9601   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9602   0015CE  22DA               	addwfc	fsr2h,f,c
  9603   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9604   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9605   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9606   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9607   0015E0  0E9A               	movlw	154
  9608   0015E2  6E05               	movwf	___flge@ff2^0,c
  9609   0015E4  0E99               	movlw	153
  9610   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9611   0015E8  0E19               	movlw	25
  9612   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9613   0015EC  0E3E               	movlw	62
  9614   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9615   0015F0  EC3E  F01D         	call	___flge	;wreg free
  9616   0015F4  A0D8               	btfss	status,0,c
  9617   0015F6  EFFF  F00A         	goto	u4141
  9618   0015FA  EF01  F00B         	goto	u4140
  9619   0015FE                     u4141:
  9620   0015FE  EF03  F00B         	goto	l4398
  9621   001602                     u4140:
  9622   001602  EFA4  F00A         	goto	l4376
  9623   001606                     l4398:
  9624   001606  EE20 F008          	lfsr	2,8
  9625   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9626   00160C  26D9               	addwf	fsr2l,f,c
  9627   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9628   001610  22DA               	addwfc	fsr2h,f,c
  9629   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9630   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9631   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9632   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9633   001622  0E8F               	movlw	143
  9634   001624  6E05               	movwf	___flge@ff2^0,c
  9635   001626  0EC2               	movlw	194
  9636   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9637   00162A  0EF5               	movlw	245
  9638   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9639   00162E  0E3D               	movlw	61
  9640   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9641   001632  EC3E  F01D         	call	___flge	;wreg free
  9642   001636  A0D8               	btfss	status,0,c
  9643   001638  EF20  F00B         	goto	u4151
  9644   00163C  EF22  F00B         	goto	u4150
  9645   001640                     u4151:
  9646   001640  EF28  F00B         	goto	l4406
  9647   001644                     u4150:
  9648   001644                     l4400:
  9649                           
  9650                           ;color.c: 192:             return 6;
  9651   001644  0E00               	movlw	0
  9652   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9653   001648  0E06               	movlw	6
  9654   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9655   00164C  EF80  F00C         	goto	l76
  9656   001650                     l4406:
  9657                           
  9658                           ;color.c: 195:             return 5;
  9659   001650  0E00               	movlw	0
  9660   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9661   001654  0E05               	movlw	5
  9662   001656  6E4B               	movwf	?_Colour_decider^0,c
  9663   001658  EF80  F00C         	goto	l76
  9664   00165C                     l4410:
  9665   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9666   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9667   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9668   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9669   00166C  0E00               	movlw	0
  9670   00166E  6E05               	movwf	___flge@ff2^0,c
  9671   001670  0E00               	movlw	0
  9672   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9673   001674  0EA2               	movlw	162
  9674   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9675   001678  0E42               	movlw	66
  9676   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9677   00167C  EC3E  F01D         	call	___flge	;wreg free
  9678   001680  A0D8               	btfss	status,0,c
  9679   001682  EF45  F00B         	goto	u4161
  9680   001686  EF47  F00B         	goto	u4160
  9681   00168A                     u4161:
  9682   00168A  EF81  F00B         	goto	l4426
  9683   00168E                     u4160:
  9684   00168E  0E00               	movlw	0
  9685   001690  6E01               	movwf	___flge@ff1^0,c
  9686   001692  0E00               	movlw	0
  9687   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9688   001696  0EE6               	movlw	230
  9689   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9690   00169A  0E42               	movlw	66
  9691   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9692   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9693   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9694   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9695   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9696   0016AE  EC3E  F01D         	call	___flge	;wreg free
  9697   0016B2  A0D8               	btfss	status,0,c
  9698   0016B4  EF5E  F00B         	goto	u4171
  9699   0016B8  EF60  F00B         	goto	u4170
  9700   0016BC                     u4171:
  9701   0016BC  EF81  F00B         	goto	l4426
  9702   0016C0                     u4170:
  9703   0016C0                     
  9704                           ;color.c: 201:         if(0.15<=rel->B){
  9705   0016C0  EE20 F008          	lfsr	2,8
  9706   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9707   0016C6  26D9               	addwf	fsr2l,f,c
  9708   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9709   0016CA  22DA               	addwfc	fsr2h,f,c
  9710   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9711   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9712   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9713   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9714   0016DC  0E9A               	movlw	154
  9715   0016DE  6E05               	movwf	___flge@ff2^0,c
  9716   0016E0  0E99               	movlw	153
  9717   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9718   0016E4  0E19               	movlw	25
  9719   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9720   0016E8  0E3E               	movlw	62
  9721   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9722   0016EC  EC3E  F01D         	call	___flge	;wreg free
  9723   0016F0  A0D8               	btfss	status,0,c
  9724   0016F2  EF7D  F00B         	goto	u4181
  9725   0016F6  EF7F  F00B         	goto	u4180
  9726   0016FA                     u4181:
  9727   0016FA  EF22  F00B         	goto	l4400
  9728   0016FE                     u4180:
  9729   0016FE  EFA4  F00A         	goto	l4376
  9730   001702                     l4426:
  9731   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9732   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9733   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9734   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9735   001712  0E00               	movlw	0
  9736   001714  6E05               	movwf	___flge@ff2^0,c
  9737   001716  0E00               	movlw	0
  9738   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9739   00171A  0EF0               	movlw	240
  9740   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9741   00171E  0E41               	movlw	65
  9742   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9743   001722  EC3E  F01D         	call	___flge	;wreg free
  9744   001726  A0D8               	btfss	status,0,c
  9745   001728  EF98  F00B         	goto	u4191
  9746   00172C  EF9A  F00B         	goto	u4190
  9747   001730                     u4191:
  9748   001730  EFB3  F00B         	goto	l4430
  9749   001734                     u4190:
  9750   001734  0E00               	movlw	0
  9751   001736  6E01               	movwf	___flge@ff1^0,c
  9752   001738  0E00               	movlw	0
  9753   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9754   00173C  0E68               	movlw	104
  9755   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9756   001740  0E42               	movlw	66
  9757   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9758   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9759   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9760   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9761   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9762   001754  EC3E  F01D         	call	___flge	;wreg free
  9763   001758  B0D8               	btfsc	status,0,c
  9764   00175A  EFB1  F00B         	goto	u4201
  9765   00175E  EFB3  F00B         	goto	u4200
  9766   001762                     u4201:
  9767   001762  EFA4  F00A         	goto	l4376
  9768   001766                     u4200:
  9769   001766                     l4430:
  9770   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9771   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9772   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9773   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9774   001776  0E00               	movlw	0
  9775   001778  6E05               	movwf	___flge@ff2^0,c
  9776   00177A  0E00               	movlw	0
  9777   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9778   00177E  0EF0               	movlw	240
  9779   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9780   001782  0E42               	movlw	66
  9781   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9782   001786  EC3E  F01D         	call	___flge	;wreg free
  9783   00178A  A0D8               	btfss	status,0,c
  9784   00178C  EFCA  F00B         	goto	u4211
  9785   001790  EFCC  F00B         	goto	u4210
  9786   001794                     u4211:
  9787   001794  EFE7  F00B         	goto	l4440
  9788   001798                     u4210:
  9789   001798  0E00               	movlw	0
  9790   00179A  6E01               	movwf	___flge@ff1^0,c
  9791   00179C  0E00               	movlw	0
  9792   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9793   0017A0  0E5C               	movlw	92
  9794   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9795   0017A4  0E43               	movlw	67
  9796   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9797   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9798   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9799   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9800   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9801   0017B8  EC3E  F01D         	call	___flge	;wreg free
  9802   0017BC  A0D8               	btfss	status,0,c
  9803   0017BE  EFE3  F00B         	goto	u4221
  9804   0017C2  EFE5  F00B         	goto	u4220
  9805   0017C6                     u4221:
  9806   0017C6  EFE7  F00B         	goto	l4440
  9807   0017CA                     u4220:
  9808   0017CA  EFA4  F00A         	goto	l4376
  9809   0017CE                     l4440:
  9810   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9811   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9812   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9813   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9814   0017DE  0E00               	movlw	0
  9815   0017E0  6E05               	movwf	___flge@ff2^0,c
  9816   0017E2  0E00               	movlw	0
  9817   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9818   0017E6  0E60               	movlw	96
  9819   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9820   0017EA  0E41               	movlw	65
  9821   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9822   0017EE  EC3E  F01D         	call	___flge	;wreg free
  9823   0017F2  A0D8               	btfss	status,0,c
  9824   0017F4  EFFE  F00B         	goto	u4231
  9825   0017F8  EF00  F00C         	goto	u4230
  9826   0017FC                     u4231:
  9827   0017FC  EF7C  F00C         	goto	l4466
  9828   001800                     u4230:
  9829   001800  0E00               	movlw	0
  9830   001802  6E01               	movwf	___flge@ff1^0,c
  9831   001804  0E00               	movlw	0
  9832   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9833   001808  0E98               	movlw	152
  9834   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9835   00180C  0E41               	movlw	65
  9836   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9837   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9838   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9839   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9840   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9841   001820  EC3E  F01D         	call	___flge	;wreg free
  9842   001824  A0D8               	btfss	status,0,c
  9843   001826  EF17  F00C         	goto	u4241
  9844   00182A  EF19  F00C         	goto	u4240
  9845   00182E                     u4241:
  9846   00182E  EF7C  F00C         	goto	l4466
  9847   001832                     u4240:
  9848   001832                     
  9849                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9850   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9851   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9852   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9853   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9854   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9855   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9856   00184A  0ECD               	movlw	205
  9857   00184C  6E05               	movwf	___flge@ff2^0,c
  9858   00184E  0ECC               	movlw	204
  9859   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9860   001852  0E4C               	movlw	76
  9861   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9862   001856  0E3E               	movlw	62
  9863   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9864   00185A  EC3E  F01D         	call	___flge	;wreg free
  9865   00185E  A0D8               	btfss	status,0,c
  9866   001860  EF34  F00C         	goto	u4251
  9867   001864  EF36  F00C         	goto	u4250
  9868   001868                     u4251:
  9869   001868  EF55  F00C         	goto	l4454
  9870   00186C                     u4250:
  9871   00186C  0E1F               	movlw	31
  9872   00186E  6E01               	movwf	___flge@ff1^0,c
  9873   001870  0E85               	movlw	133
  9874   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9875   001874  0E6B               	movlw	107
  9876   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9877   001878  0E3E               	movlw	62
  9878   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9879   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9880   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9881   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9882   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9883   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9884   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9885   001894  EC3E  F01D         	call	___flge	;wreg free
  9886   001898  A0D8               	btfss	status,0,c
  9887   00189A  EF51  F00C         	goto	u4261
  9888   00189E  EF53  F00C         	goto	u4260
  9889   0018A2                     u4261:
  9890   0018A2  EF55  F00C         	goto	l4454
  9891   0018A6                     u4260:
  9892   0018A6  EF44  F008         	goto	l4318
  9893   0018AA                     l4454:
  9894   0018AA  EE20 F008          	lfsr	2,8
  9895   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9896   0018B0  26D9               	addwf	fsr2l,f,c
  9897   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9898   0018B4  22DA               	addwfc	fsr2h,f,c
  9899   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9900   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9901   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9902   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9903   0018C6  0E9A               	movlw	154
  9904   0018C8  6E05               	movwf	___flge@ff2^0,c
  9905   0018CA  0E99               	movlw	153
  9906   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9907   0018CE  0E19               	movlw	25
  9908   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9909   0018D2  0E3E               	movlw	62
  9910   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9911   0018D6  EC3E  F01D         	call	___flge	;wreg free
  9912   0018DA  A0D8               	btfss	status,0,c
  9913   0018DC  EF72  F00C         	goto	u4271
  9914   0018E0  EF74  F00C         	goto	u4270
  9915   0018E4                     u4271:
  9916   0018E4  EF76  F00C         	goto	l4462
  9917   0018E8                     u4270:
  9918   0018E8  EFA4  F00A         	goto	l4376
  9919   0018EC                     l4462:
  9920                           
  9921                           ;color.c: 223:             return 7;
  9922   0018EC  0E00               	movlw	0
  9923   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9924   0018F0  0E07               	movlw	7
  9925   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9926   0018F4  EF80  F00C         	goto	l76
  9927   0018F8                     l4466:
  9928                           
  9929                           ;color.c: 227:         return 10;
  9930   0018F8  0E00               	movlw	0
  9931   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9932   0018FC  0E0A               	movlw	10
  9933   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9934   001900                     l76:
  9935   001900  0012               	return		;funcret
  9936   001902                     __end_of_Colour_decider:
  9937                           	callstack 0
  9938                           
  9939 ;; *************** function ___xxtofl *****************
  9940 ;; Defined at:
  9941 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  sign            1    wreg     unsigned char 
  9944 ;;  val             4    0[COMRAM] long 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  sign            1    8[COMRAM] unsigned char 
  9947 ;;  arg             4   10[COMRAM] unsigned long 
  9948 ;;  exp             1    9[COMRAM] unsigned char 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  4    0[COMRAM] unsigned char 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9962 ;;Total ram usage:       14 bytes
  9963 ;; Hardware stack levels used: 1
  9964 ;; Hardware stack levels required when called: 1
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_colour_rel
  9969 ;;		_Colour_decider
  9970 ;;		_turnRight45
  9971 ;;		_turnLeft45
  9972 ;;		_reverseOneBlock
  9973 ;;		_ForwardOneBlock
  9974 ;;		_Forwardhalfblock
  9975 ;;		_Backhalfblock
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text63
  9980   003320                     __ptext63:
  9981                           	callstack 0
  9982   003320                     ___xxtofl:
  9983                           	callstack 28
  9984                           
  9985                           ;incstack = 0
  9986                           ;___xxtofl@sign stored from wreg
  9987   003320  6E09               	movwf	___xxtofl@sign^0,c
  9988   003322  5009               	movf	___xxtofl@sign^0,w,c
  9989   003324  B4D8               	btfsc	status,2,c
  9990   003326  EF97  F019         	goto	u3841
  9991   00332A  EF99  F019         	goto	u3840
  9992   00332E                     u3841:
  9993   00332E  EFBB  F019         	goto	l1323
  9994   003332                     u3840:
  9995   003332  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9996   003334  EFA0  F019         	goto	u3850
  9997   003338  EF9E  F019         	goto	u3851
  9998   00333C                     u3851:
  9999   00333C  EFBB  F019         	goto	l1323
 10000   003340                     u3850:
 10001   003340  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10002   003344  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10003   003348  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10004   00334C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10005   003350  1E05               	comf	??___xxtofl^0,f,c
 10006   003352  1E06               	comf	(??___xxtofl+1)^0,f,c
 10007   003354  1E07               	comf	(??___xxtofl+2)^0,f,c
 10008   003356  1E08               	comf	(??___xxtofl+3)^0,f,c
 10009   003358  2A05               	incf	??___xxtofl^0,f,c
 10010   00335A  0E00               	movlw	0
 10011   00335C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10012   00335E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10013   003360  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10014   003362  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10015   003366  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10016   00336A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10017   00336E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10018   003372  EFC3  F019         	goto	l4188
 10019   003376                     l1323:
 10020   003376  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10021   00337A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10022   00337E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10023   003382  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10024   003386                     l4188:
 10025   003386  5001               	movf	___xxtofl@val^0,w,c
 10026   003388  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10027   00338A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10028   00338C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10029   00338E  A4D8               	btfss	status,2,c
 10030   003390  EFCC  F019         	goto	u3861
 10031   003394  EFCE  F019         	goto	u3860
 10032   003398                     u3861:
 10033   003398  EFD8  F019         	goto	l4194
 10034   00339C                     u3860:
 10035   00339C  0E00               	movlw	0
 10036   00339E  6E01               	movwf	?___xxtofl^0,c
 10037   0033A0  0E00               	movlw	0
 10038   0033A2  6E02               	movwf	(?___xxtofl+1)^0,c
 10039   0033A4  0E00               	movlw	0
 10040   0033A6  6E03               	movwf	(?___xxtofl+2)^0,c
 10041   0033A8  0E00               	movlw	0
 10042   0033AA  6E04               	movwf	(?___xxtofl+3)^0,c
 10043   0033AC  EF69  F01A         	goto	l1326
 10044   0033B0                     l4194:
 10045   0033B0  0E96               	movlw	150
 10046   0033B2  6E0A               	movwf	___xxtofl@exp^0,c
 10047   0033B4  EFE2  F019         	goto	l4198
 10048   0033B8                     l4196:
 10049   0033B8  2A0A               	incf	___xxtofl@exp^0,f,c
 10050   0033BA  90D8               	bcf	status,0,c
 10051   0033BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10052   0033BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10053   0033C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10054   0033C2  320B               	rrcf	___xxtofl@arg^0,f,c
 10055   0033C4                     l4198:
 10056   0033C4  0E00               	movlw	0
 10057   0033C6  140B               	andwf	___xxtofl@arg^0,w,c
 10058   0033C8  6E05               	movwf	??___xxtofl^0,c
 10059   0033CA  0E00               	movlw	0
 10060   0033CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10061   0033CE  6E06               	movwf	(??___xxtofl+1)^0,c
 10062   0033D0  0E00               	movlw	0
 10063   0033D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10064   0033D4  6E07               	movwf	(??___xxtofl+2)^0,c
 10065   0033D6  0EFE               	movlw	254
 10066   0033D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10067   0033DA  6E08               	movwf	(??___xxtofl+3)^0,c
 10068   0033DC  5005               	movf	??___xxtofl^0,w,c
 10069   0033DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10070   0033E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10071   0033E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10072   0033E4  A4D8               	btfss	status,2,c
 10073   0033E6  EFF7  F019         	goto	u3871
 10074   0033EA  EFF9  F019         	goto	u3870
 10075   0033EE                     u3871:
 10076   0033EE  EFDC  F019         	goto	l4196
 10077   0033F2                     u3870:
 10078   0033F2  EF07  F01A         	goto	l1330
 10079   0033F6                     l4200:
 10080   0033F6  2A0A               	incf	___xxtofl@exp^0,f,c
 10081   0033F8  0E01               	movlw	1
 10082   0033FA  260B               	addwf	___xxtofl@arg^0,f,c
 10083   0033FC  0E00               	movlw	0
 10084   0033FE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10085   003400  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10086   003402  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10087   003404  90D8               	bcf	status,0,c
 10088   003406  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10089   003408  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10090   00340A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10091   00340C  320B               	rrcf	___xxtofl@arg^0,f,c
 10092   00340E                     l1330:
 10093   00340E  0E00               	movlw	0
 10094   003410  140B               	andwf	___xxtofl@arg^0,w,c
 10095   003412  6E05               	movwf	??___xxtofl^0,c
 10096   003414  0E00               	movlw	0
 10097   003416  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10098   003418  6E06               	movwf	(??___xxtofl+1)^0,c
 10099   00341A  0E00               	movlw	0
 10100   00341C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10101   00341E  6E07               	movwf	(??___xxtofl+2)^0,c
 10102   003420  0EFF               	movlw	255
 10103   003422  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10104   003424  6E08               	movwf	(??___xxtofl+3)^0,c
 10105   003426  5005               	movf	??___xxtofl^0,w,c
 10106   003428  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10107   00342A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10108   00342C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10109   00342E  A4D8               	btfss	status,2,c
 10110   003430  EF1C  F01A         	goto	u3881
 10111   003434  EF1E  F01A         	goto	u3880
 10112   003438                     u3881:
 10113   003438  EFFB  F019         	goto	l4200
 10114   00343C                     u3880:
 10115   00343C  EF26  F01A         	goto	l4208
 10116   003440                     l4206:
 10117   003440  060A               	decf	___xxtofl@exp^0,f,c
 10118   003442  90D8               	bcf	status,0,c
 10119   003444  360B               	rlcf	___xxtofl@arg^0,f,c
 10120   003446  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10121   003448  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10122   00344A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10123   00344C                     l4208:
 10124   00344C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10125   00344E  EF2B  F01A         	goto	u3891
 10126   003452  EF2D  F01A         	goto	u3890
 10127   003456                     u3891:
 10128   003456  EF35  F01A         	goto	l1337
 10129   00345A                     u3890:
 10130   00345A  0E02               	movlw	2
 10131   00345C  600A               	cpfslt	___xxtofl@exp^0,c
 10132   00345E  EF33  F01A         	goto	u3901
 10133   003462  EF35  F01A         	goto	u3900
 10134   003466                     u3901:
 10135   003466  EF20  F01A         	goto	l4206
 10136   00346A                     u3900:
 10137   00346A                     l1337:
 10138   00346A  B00A               	btfsc	___xxtofl@exp^0,0,c
 10139   00346C  EF3A  F01A         	goto	u3911
 10140   003470  EF3C  F01A         	goto	u3910
 10141   003474                     u3911:
 10142   003474  EF3D  F01A         	goto	l4214
 10143   003478                     u3910:
 10144   003478  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10145   00347A                     l4214:
 10146   00347A  90D8               	bcf	status,0,c
 10147   00347C  320A               	rrcf	___xxtofl@exp^0,f,c
 10148   00347E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10149   003482  6A06               	clrf	(??___xxtofl+1)^0,c
 10150   003484  6A07               	clrf	(??___xxtofl+2)^0,c
 10151   003486  6A08               	clrf	(??___xxtofl+3)^0,c
 10152   003488  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10153   00348C  6A07               	clrf	(??___xxtofl+2)^0,c
 10154   00348E  6A06               	clrf	(??___xxtofl+1)^0,c
 10155   003490  6A05               	clrf	??___xxtofl^0,c
 10156   003492  5005               	movf	??___xxtofl^0,w,c
 10157   003494  120B               	iorwf	___xxtofl@arg^0,f,c
 10158   003496  5006               	movf	(??___xxtofl+1)^0,w,c
 10159   003498  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10160   00349A  5007               	movf	(??___xxtofl+2)^0,w,c
 10161   00349C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10162   00349E  5008               	movf	(??___xxtofl+3)^0,w,c
 10163   0034A0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10164   0034A2  5009               	movf	___xxtofl@sign^0,w,c
 10165   0034A4  B4D8               	btfsc	status,2,c
 10166   0034A6  EF57  F01A         	goto	u3921
 10167   0034AA  EF59  F01A         	goto	u3920
 10168   0034AE                     u3921:
 10169   0034AE  EF61  F01A         	goto	l4224
 10170   0034B2                     u3920:
 10171   0034B2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10172   0034B4  EF60  F01A         	goto	u3930
 10173   0034B8  EF5E  F01A         	goto	u3931
 10174   0034BC                     u3931:
 10175   0034BC  EF61  F01A         	goto	l4224
 10176   0034C0                     u3930:
 10177   0034C0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10178   0034C2                     l4224:
 10179   0034C2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10180   0034C6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10181   0034CA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10182   0034CE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10183   0034D2                     l1326:
 10184   0034D2  0012               	return		;funcret
 10185   0034D4                     __end_of___xxtofl:
 10186                           	callstack 0
 10187                           
 10188 ;; *************** function ___flsub *****************
 10189 ;; Defined at:
 10190 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  b               4   16[COMRAM] unsigned char 
 10193 ;;  a               4   20[COMRAM] unsigned char 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;		None
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  4   16[COMRAM] unsigned char 
 10198 ;; Registers used:
 10199 ;;		wreg, status,2, status,0, cstack
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10205 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;Total ram usage:        8 bytes
 10210 ;; Hardware stack levels used: 1
 10211 ;; Hardware stack levels required when called: 2
 10212 ;; This function calls:
 10213 ;;		___fladd
 10214 ;; This function is called by:
 10215 ;;		_Colour_decider
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text64
 10220   004A96                     __ptext64:
 10221                           	callstack 0
 10222   004A96                     ___flsub:
 10223                           	callstack 27
 10224   004A96  0E00               	movlw	0
 10225   004A98  1A15               	xorwf	___flsub@a^0,f,c
 10226   004A9A  0E00               	movlw	0
 10227   004A9C  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10228   004A9E  0E00               	movlw	0
 10229   004AA0  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10230   004AA2  0E80               	movlw	128
 10231   004AA4  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10232   004AA6  C011  F001         	movff	___flsub@b,___fladd@b
 10233   004AAA  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10234   004AAE  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10235   004AB2  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10236   004AB6  C015  F005         	movff	___flsub@a,___fladd@a
 10237   004ABA  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10238   004ABE  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10239   004AC2  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10240   004AC6  EC22  F00F         	call	___fladd	;wreg free
 10241   004ACA  C001  F011         	movff	?___fladd,?___flsub
 10242   004ACE  C002  F012         	movff	?___fladd+1,?___flsub+1
 10243   004AD2  C003  F013         	movff	?___fladd+2,?___flsub+2
 10244   004AD6  C004  F014         	movff	?___fladd+3,?___flsub+3
 10245   004ADA  0012               	return		;funcret
 10246   004ADC                     __end_of___flsub:
 10247                           	callstack 0
 10248                           
 10249 ;; *************** function ___fladd *****************
 10250 ;; Defined at:
 10251 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;  b               4    0[COMRAM] unsigned char 
 10254 ;;  a               4    4[COMRAM] unsigned char 
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;  grs             1   15[COMRAM] unsigned char 
 10257 ;;  bexp            1   14[COMRAM] unsigned char 
 10258 ;;  aexp            1   13[COMRAM] unsigned char 
 10259 ;;  signs           1   12[COMRAM] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  4    0[COMRAM] unsigned char 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;Total ram usage:       16 bytes
 10274 ;; Hardware stack levels used: 1
 10275 ;; Hardware stack levels required when called: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_colour_rel
 10280 ;;		_Colour_decider
 10281 ;;		___flsub
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text65
 10286   001E44                     __ptext65:
 10287                           	callstack 0
 10288   001E44                     ___fladd:
 10289                           	callstack 28
 10290   001E44  5004               	movf	(___fladd@b+3)^0,w,c
 10291   001E46  0B80               	andlw	128
 10292   001E48  6E0D               	movwf	___fladd@signs^0,c
 10293   001E4A  5004               	movf	(___fladd@b+3)^0,w,c
 10294   001E4C  2404               	addwf	(___fladd@b+3)^0,w,c
 10295   001E4E  6E0F               	movwf	___fladd@bexp^0,c
 10296   001E50  AE03               	btfss	(___fladd@b+2)^0,7,c
 10297   001E52  EF2D  F00F         	goto	u2891
 10298   001E56  EF2F  F00F         	goto	u2890
 10299   001E5A                     u2891:
 10300   001E5A  EF30  F00F         	goto	l3554
 10301   001E5E                     u2890:
 10302   001E5E  800F               	bsf	___fladd@bexp^0,0,c
 10303   001E60                     l3554:
 10304   001E60  500F               	movf	___fladd@bexp^0,w,c
 10305   001E62  B4D8               	btfsc	status,2,c
 10306   001E64  EF36  F00F         	goto	u2901
 10307   001E68  EF38  F00F         	goto	u2900
 10308   001E6C                     u2901:
 10309   001E6C  EF4D  F00F         	goto	l3564
 10310   001E70                     u2900:
 10311   001E70  280F               	incf	___fladd@bexp^0,w,c
 10312   001E72  A4D8               	btfss	status,2,c
 10313   001E74  EF3E  F00F         	goto	u2911
 10314   001E78  EF40  F00F         	goto	u2910
 10315   001E7C                     u2911:
 10316   001E7C  EF48  F00F         	goto	l3560
 10317   001E80                     u2910:
 10318   001E80  0E00               	movlw	0
 10319   001E82  6E01               	movwf	___fladd@b^0,c
 10320   001E84  0E00               	movlw	0
 10321   001E86  6E02               	movwf	(___fladd@b+1)^0,c
 10322   001E88  0E00               	movlw	0
 10323   001E8A  6E03               	movwf	(___fladd@b+2)^0,c
 10324   001E8C  0E00               	movlw	0
 10325   001E8E  6E04               	movwf	(___fladd@b+3)^0,c
 10326   001E90                     l3560:
 10327   001E90  8E03               	bsf	(___fladd@b+2)^0,7,c
 10328   001E92  0E00               	movlw	0
 10329   001E94  6E04               	movwf	(___fladd@b+3)^0,c
 10330   001E96  EF55  F00F         	goto	l3566
 10331   001E9A                     l3564:
 10332   001E9A  0E00               	movlw	0
 10333   001E9C  6E01               	movwf	___fladd@b^0,c
 10334   001E9E  0E00               	movlw	0
 10335   001EA0  6E02               	movwf	(___fladd@b+1)^0,c
 10336   001EA2  0E00               	movlw	0
 10337   001EA4  6E03               	movwf	(___fladd@b+2)^0,c
 10338   001EA6  0E00               	movlw	0
 10339   001EA8  6E04               	movwf	(___fladd@b+3)^0,c
 10340   001EAA                     l3566:
 10341   001EAA  5008               	movf	(___fladd@a+3)^0,w,c
 10342   001EAC  0B80               	andlw	128
 10343   001EAE  6E0E               	movwf	___fladd@aexp^0,c
 10344   001EB0  500D               	movf	___fladd@signs^0,w,c
 10345   001EB2  180E               	xorwf	___fladd@aexp^0,w,c
 10346   001EB4  B4D8               	btfsc	status,2,c
 10347   001EB6  EF5F  F00F         	goto	u2921
 10348   001EBA  EF61  F00F         	goto	u2920
 10349   001EBE                     u2921:
 10350   001EBE  EF62  F00F         	goto	l3572
 10351   001EC2                     u2920:
 10352   001EC2  8C0D               	bsf	___fladd@signs^0,6,c
 10353   001EC4                     l3572:
 10354   001EC4  5008               	movf	(___fladd@a+3)^0,w,c
 10355   001EC6  2408               	addwf	(___fladd@a+3)^0,w,c
 10356   001EC8  6E0E               	movwf	___fladd@aexp^0,c
 10357   001ECA  AE07               	btfss	(___fladd@a+2)^0,7,c
 10358   001ECC  EF6A  F00F         	goto	u2931
 10359   001ED0  EF6C  F00F         	goto	u2930
 10360   001ED4                     u2931:
 10361   001ED4  EF6D  F00F         	goto	l3578
 10362   001ED8                     u2930:
 10363   001ED8  800E               	bsf	___fladd@aexp^0,0,c
 10364   001EDA                     l3578:
 10365   001EDA  500E               	movf	___fladd@aexp^0,w,c
 10366   001EDC  B4D8               	btfsc	status,2,c
 10367   001EDE  EF73  F00F         	goto	u2941
 10368   001EE2  EF75  F00F         	goto	u2940
 10369   001EE6                     u2941:
 10370   001EE6  EF8A  F00F         	goto	l3588
 10371   001EEA                     u2940:
 10372   001EEA  280E               	incf	___fladd@aexp^0,w,c
 10373   001EEC  A4D8               	btfss	status,2,c
 10374   001EEE  EF7B  F00F         	goto	u2951
 10375   001EF2  EF7D  F00F         	goto	u2950
 10376   001EF6                     u2951:
 10377   001EF6  EF85  F00F         	goto	l3584
 10378   001EFA                     u2950:
 10379   001EFA  0E00               	movlw	0
 10380   001EFC  6E05               	movwf	___fladd@a^0,c
 10381   001EFE  0E00               	movlw	0
 10382   001F00  6E06               	movwf	(___fladd@a+1)^0,c
 10383   001F02  0E00               	movlw	0
 10384   001F04  6E07               	movwf	(___fladd@a+2)^0,c
 10385   001F06  0E00               	movlw	0
 10386   001F08  6E08               	movwf	(___fladd@a+3)^0,c
 10387   001F0A                     l3584:
 10388   001F0A  8E07               	bsf	(___fladd@a+2)^0,7,c
 10389   001F0C  0E00               	movlw	0
 10390   001F0E  6E08               	movwf	(___fladd@a+3)^0,c
 10391   001F10  EF92  F00F         	goto	l3590
 10392   001F14                     l3588:
 10393   001F14  0E00               	movlw	0
 10394   001F16  6E05               	movwf	___fladd@a^0,c
 10395   001F18  0E00               	movlw	0
 10396   001F1A  6E06               	movwf	(___fladd@a+1)^0,c
 10397   001F1C  0E00               	movlw	0
 10398   001F1E  6E07               	movwf	(___fladd@a+2)^0,c
 10399   001F20  0E00               	movlw	0
 10400   001F22  6E08               	movwf	(___fladd@a+3)^0,c
 10401   001F24                     l3590:
 10402   001F24  500F               	movf	___fladd@bexp^0,w,c
 10403   001F26  5C0E               	subwf	___fladd@aexp^0,w,c
 10404   001F28  B0D8               	btfsc	status,0,c
 10405   001F2A  EF99  F00F         	goto	u2961
 10406   001F2E  EF9B  F00F         	goto	u2960
 10407   001F32                     u2961:
 10408   001F32  EFC2  F00F         	goto	l3626
 10409   001F36                     u2960:
 10410   001F36  AC0D               	btfss	___fladd@signs^0,6,c
 10411   001F38  EFA0  F00F         	goto	u2971
 10412   001F3C  EFA2  F00F         	goto	u2970
 10413   001F40                     u2971:
 10414   001F40  EFA4  F00F         	goto	l3596
 10415   001F44                     u2970:
 10416   001F44  0E80               	movlw	128
 10417   001F46  1A0D               	xorwf	___fladd@signs^0,f,c
 10418   001F48                     l3596:
 10419   001F48  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10420   001F4C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10421   001F50  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10422   001F54  C001  F010         	movff	___fladd@b,___fladd@grs
 10423   001F58  C005  F001         	movff	___fladd@a,___fladd@b
 10424   001F5C  C010  F005         	movff	___fladd@grs,___fladd@a
 10425   001F60  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10426   001F64  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10427   001F68  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10428   001F6C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10429   001F70  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10430   001F74  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10431   001F78  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10432   001F7C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10433   001F80  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10434   001F84                     l3626:
 10435   001F84  0E00               	movlw	0
 10436   001F86  6E10               	movwf	___fladd@grs^0,c
 10437   001F88  500F               	movf	___fladd@bexp^0,w,c
 10438   001F8A  C00E  F009         	movff	___fladd@aexp,??___fladd
 10439   001F8E  6A0A               	clrf	(??___fladd+1)^0,c
 10440   001F90  5E09               	subwf	??___fladd^0,f,c
 10441   001F92  0E00               	movlw	0
 10442   001F94  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10443   001F96  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10444   001F98  EFD7  F00F         	goto	u2981
 10445   001F9C  500A               	movf	(??___fladd+1)^0,w,c
 10446   001F9E  E109               	bnz	u2980
 10447   001FA0  0E1A               	movlw	26
 10448   001FA2  5C09               	subwf	??___fladd^0,w,c
 10449   001FA4  A0D8               	btfss	status,0,c
 10450   001FA6  EFD7  F00F         	goto	u2981
 10451   001FAA  EFD9  F00F         	goto	u2980
 10452   001FAE                     u2981:
 10453   001FAE  EF10  F010         	goto	l1197
 10454   001FB2                     u2980:
 10455   001FB2  5001               	movf	___fladd@b^0,w,c
 10456   001FB4  1002               	iorwf	(___fladd@b+1)^0,w,c
 10457   001FB6  1003               	iorwf	(___fladd@b+2)^0,w,c
 10458   001FB8  1004               	iorwf	(___fladd@b+3)^0,w,c
 10459   001FBA  A4D8               	btfss	status,2,c
 10460   001FBC  EFE2  F00F         	goto	u2991
 10461   001FC0  EFE5  F00F         	goto	u2990
 10462   001FC4                     u2991:
 10463   001FC4  0E01               	movlw	1
 10464   001FC6  EFE6  F00F         	goto	u3000
 10465   001FCA                     u2990:
 10466   001FCA  0E00               	movlw	0
 10467   001FCC                     u3000:
 10468   001FCC  6E10               	movwf	___fladd@grs^0,c
 10469   001FCE  0E00               	movlw	0
 10470   001FD0  6E01               	movwf	___fladd@b^0,c
 10471   001FD2  0E00               	movlw	0
 10472   001FD4  6E02               	movwf	(___fladd@b+1)^0,c
 10473   001FD6  0E00               	movlw	0
 10474   001FD8  6E03               	movwf	(___fladd@b+2)^0,c
 10475   001FDA  0E00               	movlw	0
 10476   001FDC  6E04               	movwf	(___fladd@b+3)^0,c
 10477   001FDE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10478   001FE2  EF19  F010         	goto	l1196
 10479   001FE6                     l1198:
 10480   001FE6  A010               	btfss	___fladd@grs^0,0,c
 10481   001FE8  EFF8  F00F         	goto	u3011
 10482   001FEC  EFFA  F00F         	goto	u3010
 10483   001FF0                     u3011:
 10484   001FF0  EF00  F010         	goto	l3638
 10485   001FF4                     u3010:
 10486   001FF4  90D8               	bcf	status,0,c
 10487   001FF6  3010               	rrcf	___fladd@grs^0,w,c
 10488   001FF8  0901               	iorlw	1
 10489   001FFA  6E10               	movwf	___fladd@grs^0,c
 10490   001FFC  EF02  F010         	goto	l3640
 10491   002000                     l3638:
 10492   002000  90D8               	bcf	status,0,c
 10493   002002  3210               	rrcf	___fladd@grs^0,f,c
 10494   002004                     l3640:
 10495   002004  A001               	btfss	___fladd@b^0,0,c
 10496   002006  EF07  F010         	goto	u3021
 10497   00200A  EF09  F010         	goto	u3020
 10498   00200E                     u3021:
 10499   00200E  EF0A  F010         	goto	l3644
 10500   002012                     u3020:
 10501   002012  8E10               	bsf	___fladd@grs^0,7,c
 10502   002014                     l3644:
 10503   002014  3404               	rlcf	(___fladd@b+3)^0,w,c
 10504   002016  3204               	rrcf	(___fladd@b+3)^0,f,c
 10505   002018  3203               	rrcf	(___fladd@b+2)^0,f,c
 10506   00201A  3202               	rrcf	(___fladd@b+1)^0,f,c
 10507   00201C  3201               	rrcf	___fladd@b^0,f,c
 10508   00201E  2A0F               	incf	___fladd@bexp^0,f,c
 10509   002020                     l1197:
 10510   002020  500E               	movf	___fladd@aexp^0,w,c
 10511   002022  5C0F               	subwf	___fladd@bexp^0,w,c
 10512   002024  A0D8               	btfss	status,0,c
 10513   002026  EF17  F010         	goto	u3031
 10514   00202A  EF19  F010         	goto	u3030
 10515   00202E                     u3031:
 10516   00202E  EFF3  F00F         	goto	l1198
 10517   002032                     u3030:
 10518   002032                     l1196:
 10519   002032  BC0D               	btfsc	___fladd@signs^0,6,c
 10520   002034  EF1E  F010         	goto	u3041
 10521   002038  EF20  F010         	goto	u3040
 10522   00203C                     u3041:
 10523   00203C  EF60  F010         	goto	l3672
 10524   002040                     u3040:
 10525   002040  500F               	movf	___fladd@bexp^0,w,c
 10526   002042  A4D8               	btfss	status,2,c
 10527   002044  EF26  F010         	goto	u3051
 10528   002048  EF28  F010         	goto	u3050
 10529   00204C                     u3051:
 10530   00204C  EF32  F010         	goto	l3654
 10531   002050                     u3050:
 10532   002050  0E00               	movlw	0
 10533   002052  6E01               	movwf	?___fladd^0,c
 10534   002054  0E00               	movlw	0
 10535   002056  6E02               	movwf	(?___fladd+1)^0,c
 10536   002058  0E00               	movlw	0
 10537   00205A  6E03               	movwf	(?___fladd+2)^0,c
 10538   00205C  0E00               	movlw	0
 10539   00205E  6E04               	movwf	(?___fladd+3)^0,c
 10540   002060  EF81  F011         	goto	l1205
 10541   002064                     l3654:
 10542   002064  5005               	movf	___fladd@a^0,w,c
 10543   002066  2601               	addwf	___fladd@b^0,f,c
 10544   002068  5006               	movf	(___fladd@a+1)^0,w,c
 10545   00206A  2202               	addwfc	(___fladd@b+1)^0,f,c
 10546   00206C  5007               	movf	(___fladd@a+2)^0,w,c
 10547   00206E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10548   002070  5008               	movf	(___fladd@a+3)^0,w,c
 10549   002072  2204               	addwfc	(___fladd@b+3)^0,f,c
 10550   002074  A004               	btfss	(___fladd@b+3)^0,0,c
 10551   002076  EF3F  F010         	goto	u3061
 10552   00207A  EF41  F010         	goto	u3060
 10553   00207E                     u3061:
 10554   00207E  EFED  F010         	goto	l3708
 10555   002082                     u3060:
 10556   002082  A010               	btfss	___fladd@grs^0,0,c
 10557   002084  EF46  F010         	goto	u3071
 10558   002088  EF48  F010         	goto	u3070
 10559   00208C                     u3071:
 10560   00208C  EF4E  F010         	goto	l3662
 10561   002090                     u3070:
 10562   002090  90D8               	bcf	status,0,c
 10563   002092  3010               	rrcf	___fladd@grs^0,w,c
 10564   002094  0901               	iorlw	1
 10565   002096  6E10               	movwf	___fladd@grs^0,c
 10566   002098  EF50  F010         	goto	l3664
 10567   00209C                     l3662:
 10568   00209C  90D8               	bcf	status,0,c
 10569   00209E  3210               	rrcf	___fladd@grs^0,f,c
 10570   0020A0                     l3664:
 10571   0020A0  A001               	btfss	___fladd@b^0,0,c
 10572   0020A2  EF55  F010         	goto	u3081
 10573   0020A6  EF57  F010         	goto	u3080
 10574   0020AA                     u3081:
 10575   0020AA  EF58  F010         	goto	l3668
 10576   0020AE                     u3080:
 10577   0020AE  8E10               	bsf	___fladd@grs^0,7,c
 10578   0020B0                     l3668:
 10579   0020B0  3404               	rlcf	(___fladd@b+3)^0,w,c
 10580   0020B2  3204               	rrcf	(___fladd@b+3)^0,f,c
 10581   0020B4  3203               	rrcf	(___fladd@b+2)^0,f,c
 10582   0020B6  3202               	rrcf	(___fladd@b+1)^0,f,c
 10583   0020B8  3201               	rrcf	___fladd@b^0,f,c
 10584   0020BA  2A0F               	incf	___fladd@bexp^0,f,c
 10585   0020BC  EFED  F010         	goto	l3708
 10586   0020C0                     l3672:
 10587   0020C0  5005               	movf	___fladd@a^0,w,c
 10588   0020C2  5C01               	subwf	___fladd@b^0,w,c
 10589   0020C4  5006               	movf	(___fladd@a+1)^0,w,c
 10590   0020C6  5802               	subwfb	(___fladd@b+1)^0,w,c
 10591   0020C8  5007               	movf	(___fladd@a+2)^0,w,c
 10592   0020CA  5803               	subwfb	(___fladd@b+2)^0,w,c
 10593   0020CC  5004               	movf	(___fladd@b+3)^0,w,c
 10594   0020CE  0A80               	xorlw	128
 10595   0020D0  6E09               	movwf	??___fladd^0,c
 10596   0020D2  5008               	movf	(___fladd@a+3)^0,w,c
 10597   0020D4  0A80               	xorlw	128
 10598   0020D6  5809               	subwfb	??___fladd^0,w,c
 10599   0020D8  B0D8               	btfsc	status,0,c
 10600   0020DA  EF71  F010         	goto	u3091
 10601   0020DE  EF73  F010         	goto	u3090
 10602   0020E2                     u3091:
 10603   0020E2  EF9E  F010         	goto	l3682
 10604   0020E6                     u3090:
 10605   0020E6  5001               	movf	___fladd@b^0,w,c
 10606   0020E8  5C05               	subwf	___fladd@a^0,w,c
 10607   0020EA  6E09               	movwf	??___fladd^0,c
 10608   0020EC  5002               	movf	(___fladd@b+1)^0,w,c
 10609   0020EE  5806               	subwfb	(___fladd@a+1)^0,w,c
 10610   0020F0  6E0A               	movwf	(??___fladd+1)^0,c
 10611   0020F2  5003               	movf	(___fladd@b+2)^0,w,c
 10612   0020F4  5807               	subwfb	(___fladd@a+2)^0,w,c
 10613   0020F6  6E0B               	movwf	(??___fladd+2)^0,c
 10614   0020F8  5004               	movf	(___fladd@b+3)^0,w,c
 10615   0020FA  5808               	subwfb	(___fladd@a+3)^0,w,c
 10616   0020FC  6E0C               	movwf	(??___fladd+3)^0,c
 10617   0020FE  0EFF               	movlw	255
 10618   002100  2409               	addwf	??___fladd^0,w,c
 10619   002102  6E01               	movwf	___fladd@b^0,c
 10620   002104  0EFF               	movlw	255
 10621   002106  200A               	addwfc	(??___fladd+1)^0,w,c
 10622   002108  6E02               	movwf	(___fladd@b+1)^0,c
 10623   00210A  0EFF               	movlw	255
 10624   00210C  200B               	addwfc	(??___fladd+2)^0,w,c
 10625   00210E  6E03               	movwf	(___fladd@b+2)^0,c
 10626   002110  0EFF               	movlw	255
 10627   002112  200C               	addwfc	(??___fladd+3)^0,w,c
 10628   002114  6E04               	movwf	(___fladd@b+3)^0,c
 10629   002116  0E80               	movlw	128
 10630   002118  1A0D               	xorwf	___fladd@signs^0,f,c
 10631   00211A  6C10               	negf	___fladd@grs^0,c
 10632   00211C  5010               	movf	___fladd@grs^0,w,c
 10633   00211E  A4D8               	btfss	status,2,c
 10634   002120  EF94  F010         	goto	u3101
 10635   002124  EF96  F010         	goto	u3100
 10636   002128                     u3101:
 10637   002128  EFA6  F010         	goto	l1213
 10638   00212C                     u3100:
 10639   00212C  0E01               	movlw	1
 10640   00212E  2601               	addwf	___fladd@b^0,f,c
 10641   002130  0E00               	movlw	0
 10642   002132  2202               	addwfc	(___fladd@b+1)^0,f,c
 10643   002134  2203               	addwfc	(___fladd@b+2)^0,f,c
 10644   002136  2204               	addwfc	(___fladd@b+3)^0,f,c
 10645   002138  EFA6  F010         	goto	l1213
 10646   00213C                     l3682:
 10647   00213C  5005               	movf	___fladd@a^0,w,c
 10648   00213E  5E01               	subwf	___fladd@b^0,f,c
 10649   002140  5006               	movf	(___fladd@a+1)^0,w,c
 10650   002142  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10651   002144  5007               	movf	(___fladd@a+2)^0,w,c
 10652   002146  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10653   002148  5008               	movf	(___fladd@a+3)^0,w,c
 10654   00214A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10655   00214C                     l1213:
 10656   00214C  5001               	movf	___fladd@b^0,w,c
 10657   00214E  1002               	iorwf	(___fladd@b+1)^0,w,c
 10658   002150  1003               	iorwf	(___fladd@b+2)^0,w,c
 10659   002152  1004               	iorwf	(___fladd@b+3)^0,w,c
 10660   002154  A4D8               	btfss	status,2,c
 10661   002156  EFAF  F010         	goto	u3111
 10662   00215A  EFB1  F010         	goto	u3110
 10663   00215E                     u3111:
 10664   00215E  EFE6  F010         	goto	l3706
 10665   002162                     u3110:
 10666   002162  5010               	movf	___fladd@grs^0,w,c
 10667   002164  A4D8               	btfss	status,2,c
 10668   002166  EFB7  F010         	goto	u3121
 10669   00216A  EFB9  F010         	goto	u3120
 10670   00216E                     u3121:
 10671   00216E  EFE6  F010         	goto	l3706
 10672   002172                     u3120:
 10673   002172  0E00               	movlw	0
 10674   002174  6E01               	movwf	?___fladd^0,c
 10675   002176  0E00               	movlw	0
 10676   002178  6E02               	movwf	(?___fladd+1)^0,c
 10677   00217A  0E00               	movlw	0
 10678   00217C  6E03               	movwf	(?___fladd+2)^0,c
 10679   00217E  0E00               	movlw	0
 10680   002180  6E04               	movwf	(?___fladd+3)^0,c
 10681   002182  EF81  F011         	goto	l1205
 10682   002186                     l3690:
 10683   002186  90D8               	bcf	status,0,c
 10684   002188  3601               	rlcf	___fladd@b^0,f,c
 10685   00218A  3602               	rlcf	(___fladd@b+1)^0,f,c
 10686   00218C  3603               	rlcf	(___fladd@b+2)^0,f,c
 10687   00218E  3604               	rlcf	(___fladd@b+3)^0,f,c
 10688   002190  AE10               	btfss	___fladd@grs^0,7,c
 10689   002192  EFCD  F010         	goto	u3131
 10690   002196  EFCF  F010         	goto	u3130
 10691   00219A                     u3131:
 10692   00219A  EFD0  F010         	goto	l3696
 10693   00219E                     u3130:
 10694   00219E  8001               	bsf	___fladd@b^0,0,c
 10695   0021A0                     l3696:
 10696   0021A0  A010               	btfss	___fladd@grs^0,0,c
 10697   0021A2  EFD5  F010         	goto	u3141
 10698   0021A6  EFD7  F010         	goto	u3140
 10699   0021AA                     u3141:
 10700   0021AA  EFDB  F010         	goto	l3700
 10701   0021AE                     u3140:
 10702   0021AE  80D8               	bsf	status,0,c
 10703   0021B0  3610               	rlcf	___fladd@grs^0,f,c
 10704   0021B2  EFDD  F010         	goto	l3702
 10705   0021B6                     l3700:
 10706   0021B6  90D8               	bcf	status,0,c
 10707   0021B8  3610               	rlcf	___fladd@grs^0,f,c
 10708   0021BA                     l3702:
 10709   0021BA  500F               	movf	___fladd@bexp^0,w,c
 10710   0021BC  B4D8               	btfsc	status,2,c
 10711   0021BE  EFE3  F010         	goto	u3151
 10712   0021C2  EFE5  F010         	goto	u3150
 10713   0021C6                     u3151:
 10714   0021C6  EFE6  F010         	goto	l3706
 10715   0021CA                     u3150:
 10716   0021CA  060F               	decf	___fladd@bexp^0,f,c
 10717   0021CC                     l3706:
 10718   0021CC  AE03               	btfss	(___fladd@b+2)^0,7,c
 10719   0021CE  EFEB  F010         	goto	u3161
 10720   0021D2  EFED  F010         	goto	u3160
 10721   0021D6                     u3161:
 10722   0021D6  EFC3  F010         	goto	l3690
 10723   0021DA                     u3160:
 10724   0021DA                     l3708:
 10725   0021DA  0E00               	movlw	0
 10726   0021DC  6E0E               	movwf	___fladd@aexp^0,c
 10727   0021DE  AE10               	btfss	___fladd@grs^0,7,c
 10728   0021E0  EFF4  F010         	goto	u3171
 10729   0021E4  EFF6  F010         	goto	u3170
 10730   0021E8                     u3171:
 10731   0021E8  EF0E  F011         	goto	l1222
 10732   0021EC                     u3170:
 10733   0021EC  C010  F009         	movff	___fladd@grs,??___fladd
 10734   0021F0  0E7F               	movlw	127
 10735   0021F2  1609               	andwf	??___fladd^0,f,c
 10736   0021F4  B4D8               	btfsc	status,2,c
 10737   0021F6  EFFF  F010         	goto	u3181
 10738   0021FA  EF01  F011         	goto	u3180
 10739   0021FE                     u3181:
 10740   0021FE  EF05  F011         	goto	l1223
 10741   002202                     u3180:
 10742   002202                     l3714:
 10743   002202  0E01               	movlw	1
 10744   002204  6E0E               	movwf	___fladd@aexp^0,c
 10745   002206  EF0E  F011         	goto	l1222
 10746   00220A                     l1223:
 10747   00220A  A001               	btfss	___fladd@b^0,0,c
 10748   00220C  EF0A  F011         	goto	u3191
 10749   002210  EF0C  F011         	goto	u3190
 10750   002214                     u3191:
 10751   002214  EF0E  F011         	goto	l1222
 10752   002218                     u3190:
 10753   002218  EF01  F011         	goto	l3714
 10754   00221C                     l1222:
 10755   00221C  500E               	movf	___fladd@aexp^0,w,c
 10756   00221E  B4D8               	btfsc	status,2,c
 10757   002220  EF14  F011         	goto	u3201
 10758   002224  EF16  F011         	goto	u3200
 10759   002228                     u3201:
 10760   002228  EF41  F011         	goto	l3726
 10761   00222C                     u3200:
 10762   00222C  0E01               	movlw	1
 10763   00222E  2601               	addwf	___fladd@b^0,f,c
 10764   002230  0E00               	movlw	0
 10765   002232  2202               	addwfc	(___fladd@b+1)^0,f,c
 10766   002234  2203               	addwfc	(___fladd@b+2)^0,f,c
 10767   002236  2204               	addwfc	(___fladd@b+3)^0,f,c
 10768   002238  A004               	btfss	(___fladd@b+3)^0,0,c
 10769   00223A  EF21  F011         	goto	u3211
 10770   00223E  EF23  F011         	goto	u3210
 10771   002242                     u3211:
 10772   002242  EF41  F011         	goto	l3726
 10773   002246                     u3210:
 10774   002246  C001  F009         	movff	___fladd@b,??___fladd
 10775   00224A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10776   00224E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10777   002252  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10778   002256  340C               	rlcf	(??___fladd+3)^0,w,c
 10779   002258  320C               	rrcf	(??___fladd+3)^0,f,c
 10780   00225A  320B               	rrcf	(??___fladd+2)^0,f,c
 10781   00225C  320A               	rrcf	(??___fladd+1)^0,f,c
 10782   00225E  3209               	rrcf	??___fladd^0,f,c
 10783   002260  C009  F001         	movff	??___fladd,___fladd@b
 10784   002264  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10785   002268  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10786   00226C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10787   002270  280F               	incf	___fladd@bexp^0,w,c
 10788   002272  B4D8               	btfsc	status,2,c
 10789   002274  EF3E  F011         	goto	u3221
 10790   002278  EF40  F011         	goto	u3220
 10791   00227C                     u3221:
 10792   00227C  EF41  F011         	goto	l3726
 10793   002280                     u3220:
 10794   002280  2A0F               	incf	___fladd@bexp^0,f,c
 10795   002282                     l3726:
 10796   002282  280F               	incf	___fladd@bexp^0,w,c
 10797   002284  B4D8               	btfsc	status,2,c
 10798   002286  EF47  F011         	goto	u3231
 10799   00228A  EF49  F011         	goto	u3230
 10800   00228E                     u3231:
 10801   00228E  EF51  F011         	goto	l3730
 10802   002292                     u3230:
 10803   002292  500F               	movf	___fladd@bexp^0,w,c
 10804   002294  A4D8               	btfss	status,2,c
 10805   002296  EF4F  F011         	goto	u3241
 10806   00229A  EF51  F011         	goto	u3240
 10807   00229E                     u3241:
 10808   00229E  EF63  F011         	goto	l3734
 10809   0022A2                     u3240:
 10810   0022A2                     l3730:
 10811   0022A2  0E00               	movlw	0
 10812   0022A4  6E01               	movwf	___fladd@b^0,c
 10813   0022A6  0E00               	movlw	0
 10814   0022A8  6E02               	movwf	(___fladd@b+1)^0,c
 10815   0022AA  0E00               	movlw	0
 10816   0022AC  6E03               	movwf	(___fladd@b+2)^0,c
 10817   0022AE  0E00               	movlw	0
 10818   0022B0  6E04               	movwf	(___fladd@b+3)^0,c
 10819   0022B2  500F               	movf	___fladd@bexp^0,w,c
 10820   0022B4  A4D8               	btfss	status,2,c
 10821   0022B6  EF5F  F011         	goto	u3251
 10822   0022BA  EF61  F011         	goto	u3250
 10823   0022BE                     u3251:
 10824   0022BE  EF63  F011         	goto	l3734
 10825   0022C2                     u3250:
 10826   0022C2  0E00               	movlw	0
 10827   0022C4  6E0D               	movwf	___fladd@signs^0,c
 10828   0022C6                     l3734:
 10829   0022C6  A00F               	btfss	___fladd@bexp^0,0,c
 10830   0022C8  EF68  F011         	goto	u3261
 10831   0022CC  EF6A  F011         	goto	u3260
 10832   0022D0                     u3261:
 10833   0022D0  EF6D  F011         	goto	l3738
 10834   0022D4                     u3260:
 10835   0022D4  8E03               	bsf	(___fladd@b+2)^0,7,c
 10836   0022D6  EF6E  F011         	goto	l3740
 10837   0022DA                     l3738:
 10838   0022DA  9E03               	bcf	(___fladd@b+2)^0,7,c
 10839   0022DC                     l3740:
 10840   0022DC  90D8               	bcf	status,0,c
 10841   0022DE  300F               	rrcf	___fladd@bexp^0,w,c
 10842   0022E0  6E04               	movwf	(___fladd@b+3)^0,c
 10843   0022E2  AE0D               	btfss	___fladd@signs^0,7,c
 10844   0022E4  EF76  F011         	goto	u3271
 10845   0022E8  EF78  F011         	goto	u3270
 10846   0022EC                     u3271:
 10847   0022EC  EF79  F011         	goto	l3746
 10848   0022F0                     u3270:
 10849   0022F0  8E04               	bsf	(___fladd@b+3)^0,7,c
 10850   0022F2                     l3746:
 10851   0022F2  C001  F001         	movff	___fladd@b,?___fladd
 10852   0022F6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10853   0022FA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10854   0022FE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10855   002302                     l1205:
 10856   002302  0012               	return		;funcret
 10857   002304                     __end_of___fladd:
 10858                           	callstack 0
 10859                           
 10860 ;; *************** function ___flmul *****************
 10861 ;; Defined at:
 10862 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  b               4   49[COMRAM] unsigned char 
 10865 ;;  a               4   53[COMRAM] unsigned char 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  prod            4   68[COMRAM] struct .
 10868 ;;  grs             4   62[COMRAM] unsigned long 
 10869 ;;  temp            2   72[COMRAM] struct .
 10870 ;;  bexp            1   67[COMRAM] unsigned char 
 10871 ;;  aexp            1   66[COMRAM] unsigned char 
 10872 ;;  sign            1   61[COMRAM] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  4   49[COMRAM] unsigned char 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, prodl, prodh
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;Total ram usage:       25 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 1
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_Colour_decider
 10893 ;;		_turnRight45
 10894 ;;		_turnLeft45
 10895 ;;		_reverseOneBlock
 10896 ;;		_ForwardOneBlock
 10897 ;;		_Forwardhalfblock
 10898 ;;		_Backhalfblock
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           	psect	text66
 10903   002304                     __ptext66:
 10904                           	callstack 0
 10905   002304                     ___flmul:
 10906                           	callstack 28
 10907   002304  5035               	movf	(___flmul@b+3)^0,w,c
 10908   002306  0B80               	andlw	128
 10909   002308  6E3E               	movwf	___flmul@sign^0,c
 10910   00230A  5035               	movf	(___flmul@b+3)^0,w,c
 10911   00230C  2435               	addwf	(___flmul@b+3)^0,w,c
 10912   00230E  6E44               	movwf	___flmul@bexp^0,c
 10913   002310  AE34               	btfss	(___flmul@b+2)^0,7,c
 10914   002312  EF8D  F011         	goto	u3571
 10915   002316  EF8F  F011         	goto	u3570
 10916   00231A                     u3571:
 10917   00231A  EF90  F011         	goto	l4014
 10918   00231E                     u3570:
 10919   00231E  8044               	bsf	___flmul@bexp^0,0,c
 10920   002320                     l4014:
 10921   002320  5044               	movf	___flmul@bexp^0,w,c
 10922   002322  B4D8               	btfsc	status,2,c
 10923   002324  EF96  F011         	goto	u3581
 10924   002328  EF98  F011         	goto	u3580
 10925   00232C                     u3581:
 10926   00232C  EFAB  F011         	goto	l4022
 10927   002330                     u3580:
 10928   002330  2844               	incf	___flmul@bexp^0,w,c
 10929   002332  A4D8               	btfss	status,2,c
 10930   002334  EF9E  F011         	goto	u3591
 10931   002338  EFA0  F011         	goto	u3590
 10932   00233C                     u3591:
 10933   00233C  EFA8  F011         	goto	l4020
 10934   002340                     u3590:
 10935   002340  0E00               	movlw	0
 10936   002342  6E32               	movwf	___flmul@b^0,c
 10937   002344  0E00               	movlw	0
 10938   002346  6E33               	movwf	(___flmul@b+1)^0,c
 10939   002348  0E00               	movlw	0
 10940   00234A  6E34               	movwf	(___flmul@b+2)^0,c
 10941   00234C  0E00               	movlw	0
 10942   00234E  6E35               	movwf	(___flmul@b+3)^0,c
 10943   002350                     l4020:
 10944   002350  8E34               	bsf	(___flmul@b+2)^0,7,c
 10945   002352  EFB3  F011         	goto	l4024
 10946   002356                     l4022:
 10947   002356  0E00               	movlw	0
 10948   002358  6E32               	movwf	___flmul@b^0,c
 10949   00235A  0E00               	movlw	0
 10950   00235C  6E33               	movwf	(___flmul@b+1)^0,c
 10951   00235E  0E00               	movlw	0
 10952   002360  6E34               	movwf	(___flmul@b+2)^0,c
 10953   002362  0E00               	movlw	0
 10954   002364  6E35               	movwf	(___flmul@b+3)^0,c
 10955   002366                     l4024:
 10956   002366  5039               	movf	(___flmul@a+3)^0,w,c
 10957   002368  0B80               	andlw	128
 10958   00236A  1A3E               	xorwf	___flmul@sign^0,f,c
 10959   00236C  5039               	movf	(___flmul@a+3)^0,w,c
 10960   00236E  2439               	addwf	(___flmul@a+3)^0,w,c
 10961   002370  6E43               	movwf	___flmul@aexp^0,c
 10962   002372  AE38               	btfss	(___flmul@a+2)^0,7,c
 10963   002374  EFBE  F011         	goto	u3601
 10964   002378  EFC0  F011         	goto	u3600
 10965   00237C                     u3601:
 10966   00237C  EFC1  F011         	goto	l4032
 10967   002380                     u3600:
 10968   002380  8043               	bsf	___flmul@aexp^0,0,c
 10969   002382                     l4032:
 10970   002382  5043               	movf	___flmul@aexp^0,w,c
 10971   002384  B4D8               	btfsc	status,2,c
 10972   002386  EFC7  F011         	goto	u3611
 10973   00238A  EFC9  F011         	goto	u3610
 10974   00238E                     u3611:
 10975   00238E  EFDC  F011         	goto	l4040
 10976   002392                     u3610:
 10977   002392  2843               	incf	___flmul@aexp^0,w,c
 10978   002394  A4D8               	btfss	status,2,c
 10979   002396  EFCF  F011         	goto	u3621
 10980   00239A  EFD1  F011         	goto	u3620
 10981   00239E                     u3621:
 10982   00239E  EFD9  F011         	goto	l4038
 10983   0023A2                     u3620:
 10984   0023A2  0E00               	movlw	0
 10985   0023A4  6E36               	movwf	___flmul@a^0,c
 10986   0023A6  0E00               	movlw	0
 10987   0023A8  6E37               	movwf	(___flmul@a+1)^0,c
 10988   0023AA  0E00               	movlw	0
 10989   0023AC  6E38               	movwf	(___flmul@a+2)^0,c
 10990   0023AE  0E00               	movlw	0
 10991   0023B0  6E39               	movwf	(___flmul@a+3)^0,c
 10992   0023B2                     l4038:
 10993   0023B2  8E38               	bsf	(___flmul@a+2)^0,7,c
 10994   0023B4  EFE4  F011         	goto	l1282
 10995   0023B8                     l4040:
 10996   0023B8  0E00               	movlw	0
 10997   0023BA  6E36               	movwf	___flmul@a^0,c
 10998   0023BC  0E00               	movlw	0
 10999   0023BE  6E37               	movwf	(___flmul@a+1)^0,c
 11000   0023C0  0E00               	movlw	0
 11001   0023C2  6E38               	movwf	(___flmul@a+2)^0,c
 11002   0023C4  0E00               	movlw	0
 11003   0023C6  6E39               	movwf	(___flmul@a+3)^0,c
 11004   0023C8                     l1282:
 11005   0023C8  5043               	movf	___flmul@aexp^0,w,c
 11006   0023CA  B4D8               	btfsc	status,2,c
 11007   0023CC  EFEA  F011         	goto	u3631
 11008   0023D0  EFEC  F011         	goto	u3630
 11009   0023D4                     u3631:
 11010   0023D4  EFF4  F011         	goto	l4044
 11011   0023D8                     u3630:
 11012   0023D8  5044               	movf	___flmul@bexp^0,w,c
 11013   0023DA  A4D8               	btfss	status,2,c
 11014   0023DC  EFF2  F011         	goto	u3641
 11015   0023E0  EFF4  F011         	goto	u3640
 11016   0023E4                     u3641:
 11017   0023E4  EFFE  F011         	goto	l4048
 11018   0023E8                     u3640:
 11019   0023E8                     l4044:
 11020   0023E8  0E00               	movlw	0
 11021   0023EA  6E32               	movwf	?___flmul^0,c
 11022   0023EC  0E00               	movlw	0
 11023   0023EE  6E33               	movwf	(?___flmul+1)^0,c
 11024   0023F0  0E00               	movlw	0
 11025   0023F2  6E34               	movwf	(?___flmul+2)^0,c
 11026   0023F4  0E00               	movlw	0
 11027   0023F6  6E35               	movwf	(?___flmul+3)^0,c
 11028   0023F8  EF96  F013         	goto	l1286
 11029   0023FC                     l4048:
 11030   0023FC  5038               	movf	(___flmul@a+2)^0,w,c
 11031   0023FE  0232               	mulwf	___flmul@b^0,c
 11032   002400  CFF3 F049          	movff	prodl,___flmul@temp
 11033   002404  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11034   002408  5049               	movf	___flmul@temp^0,w,c
 11035   00240A  6E3F               	movwf	___flmul@grs^0,c
 11036   00240C  6A40               	clrf	(___flmul@grs+1)^0,c
 11037   00240E  6A41               	clrf	(___flmul@grs+2)^0,c
 11038   002410  6A42               	clrf	(___flmul@grs+3)^0,c
 11039   002412  504A               	movf	(___flmul@temp+1)^0,w,c
 11040   002414  6E45               	movwf	___flmul@prod^0,c
 11041   002416  6A46               	clrf	(___flmul@prod+1)^0,c
 11042   002418  6A47               	clrf	(___flmul@prod+2)^0,c
 11043   00241A  6A48               	clrf	(___flmul@prod+3)^0,c
 11044   00241C  5037               	movf	(___flmul@a+1)^0,w,c
 11045   00241E  0233               	mulwf	(___flmul@b+1)^0,c
 11046   002420  CFF3 F049          	movff	prodl,___flmul@temp
 11047   002424  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11048   002428  5049               	movf	___flmul@temp^0,w,c
 11049   00242A  263F               	addwf	___flmul@grs^0,f,c
 11050   00242C  0E00               	movlw	0
 11051   00242E  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11052   002430  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11053   002432  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11054   002434  504A               	movf	(___flmul@temp+1)^0,w,c
 11055   002436  2645               	addwf	___flmul@prod^0,f,c
 11056   002438  0E00               	movlw	0
 11057   00243A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11058   00243C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11059   00243E  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11060   002440  5036               	movf	___flmul@a^0,w,c
 11061   002442  0234               	mulwf	(___flmul@b+2)^0,c
 11062   002444  CFF3 F049          	movff	prodl,___flmul@temp
 11063   002448  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11064   00244C  5049               	movf	___flmul@temp^0,w,c
 11065   00244E  263F               	addwf	___flmul@grs^0,f,c
 11066   002450  0E00               	movlw	0
 11067   002452  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11068   002454  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11069   002456  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11070   002458  504A               	movf	(___flmul@temp+1)^0,w,c
 11071   00245A  2645               	addwf	___flmul@prod^0,f,c
 11072   00245C  0E00               	movlw	0
 11073   00245E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11074   002460  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11075   002462  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11076   002464  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11077   002468  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11078   00246C  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11079   002470  6A3F               	clrf	___flmul@grs^0,c
 11080   002472  5036               	movf	___flmul@a^0,w,c
 11081   002474  0233               	mulwf	(___flmul@b+1)^0,c
 11082   002476  CFF3 F049          	movff	prodl,___flmul@temp
 11083   00247A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11084   00247E  5049               	movf	___flmul@temp^0,w,c
 11085   002480  263F               	addwf	___flmul@grs^0,f,c
 11086   002482  504A               	movf	(___flmul@temp+1)^0,w,c
 11087   002484  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11088   002486  0E00               	movlw	0
 11089   002488  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11090   00248A  0E00               	movlw	0
 11091   00248C  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11092   00248E  5037               	movf	(___flmul@a+1)^0,w,c
 11093   002490  0232               	mulwf	___flmul@b^0,c
 11094   002492  CFF3 F049          	movff	prodl,___flmul@temp
 11095   002496  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11096   00249A  5049               	movf	___flmul@temp^0,w,c
 11097   00249C  263F               	addwf	___flmul@grs^0,f,c
 11098   00249E  504A               	movf	(___flmul@temp+1)^0,w,c
 11099   0024A0  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11100   0024A2  0E00               	movlw	0
 11101   0024A4  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11102   0024A6  0E00               	movlw	0
 11103   0024A8  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11104   0024AA  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11105   0024AE  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11106   0024B2  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11107   0024B6  6A3F               	clrf	___flmul@grs^0,c
 11108   0024B8  5036               	movf	___flmul@a^0,w,c
 11109   0024BA  0232               	mulwf	___flmul@b^0,c
 11110   0024BC  CFF3 F049          	movff	prodl,___flmul@temp
 11111   0024C0  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11112   0024C4  5049               	movf	___flmul@temp^0,w,c
 11113   0024C6  263F               	addwf	___flmul@grs^0,f,c
 11114   0024C8  504A               	movf	(___flmul@temp+1)^0,w,c
 11115   0024CA  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11116   0024CC  0E00               	movlw	0
 11117   0024CE  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11118   0024D0  0E00               	movlw	0
 11119   0024D2  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11120   0024D4  5038               	movf	(___flmul@a+2)^0,w,c
 11121   0024D6  0233               	mulwf	(___flmul@b+1)^0,c
 11122   0024D8  CFF3 F049          	movff	prodl,___flmul@temp
 11123   0024DC  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11124   0024E0  5049               	movf	___flmul@temp^0,w,c
 11125   0024E2  2645               	addwf	___flmul@prod^0,f,c
 11126   0024E4  504A               	movf	(___flmul@temp+1)^0,w,c
 11127   0024E6  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11128   0024E8  0E00               	movlw	0
 11129   0024EA  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11130   0024EC  0E00               	movlw	0
 11131   0024EE  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11132   0024F0  5037               	movf	(___flmul@a+1)^0,w,c
 11133   0024F2  0234               	mulwf	(___flmul@b+2)^0,c
 11134   0024F4  CFF3 F049          	movff	prodl,___flmul@temp
 11135   0024F8  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11136   0024FC  5049               	movf	___flmul@temp^0,w,c
 11137   0024FE  2645               	addwf	___flmul@prod^0,f,c
 11138   002500  504A               	movf	(___flmul@temp+1)^0,w,c
 11139   002502  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11140   002504  0E00               	movlw	0
 11141   002506  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11142   002508  0E00               	movlw	0
 11143   00250A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11144   00250C  5038               	movf	(___flmul@a+2)^0,w,c
 11145   00250E  0234               	mulwf	(___flmul@b+2)^0,c
 11146   002510  CFF3 F049          	movff	prodl,___flmul@temp
 11147   002514  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11148   002518  5049               	movf	___flmul@temp^0,w,c
 11149   00251A  6E3A               	movwf	??___flmul^0,c
 11150   00251C  504A               	movf	(___flmul@temp+1)^0,w,c
 11151   00251E  6E3B               	movwf	(??___flmul+1)^0,c
 11152   002520  6A3C               	clrf	(??___flmul+2)^0,c
 11153   002522  6A3D               	clrf	(??___flmul+3)^0,c
 11154   002524  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11155   002528  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11156   00252C  C03A  F03B         	movff	??___flmul,??___flmul+1
 11157   002530  6A3A               	clrf	??___flmul^0,c
 11158   002532  503A               	movf	??___flmul^0,w,c
 11159   002534  2645               	addwf	___flmul@prod^0,f,c
 11160   002536  503B               	movf	(??___flmul+1)^0,w,c
 11161   002538  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11162   00253A  503C               	movf	(??___flmul+2)^0,w,c
 11163   00253C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11164   00253E  503D               	movf	(??___flmul+3)^0,w,c
 11165   002540  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11166   002542  C03F  F03A         	movff	___flmul@grs,??___flmul
 11167   002546  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11168   00254A  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11169   00254E  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11170   002552  0E19               	movlw	25
 11171   002554  EFB1  F012         	goto	u3650
 11172   002558                     u3655:
 11173   002558  90D8               	bcf	status,0,c
 11174   00255A  323D               	rrcf	(??___flmul+3)^0,f,c
 11175   00255C  323C               	rrcf	(??___flmul+2)^0,f,c
 11176   00255E  323B               	rrcf	(??___flmul+1)^0,f,c
 11177   002560  323A               	rrcf	??___flmul^0,f,c
 11178   002562                     u3650:
 11179   002562  2EE8               	decfsz	wreg,f,c
 11180   002564  EFAC  F012         	goto	u3655
 11181   002568  503A               	movf	??___flmul^0,w,c
 11182   00256A  2645               	addwf	___flmul@prod^0,f,c
 11183   00256C  503B               	movf	(??___flmul+1)^0,w,c
 11184   00256E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11185   002570  503C               	movf	(??___flmul+2)^0,w,c
 11186   002572  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11187   002574  503D               	movf	(??___flmul+3)^0,w,c
 11188   002576  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11189   002578  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11190   00257C  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11191   002580  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11192   002584  6A3F               	clrf	___flmul@grs^0,c
 11193   002586  5043               	movf	___flmul@aexp^0,w,c
 11194   002588  C044  F03A         	movff	___flmul@bexp,??___flmul
 11195   00258C  6A3B               	clrf	(??___flmul+1)^0,c
 11196   00258E  263A               	addwf	??___flmul^0,f,c
 11197   002590  0E00               	movlw	0
 11198   002592  223B               	addwfc	(??___flmul+1)^0,f,c
 11199   002594  0E82               	movlw	130
 11200   002596  243A               	addwf	??___flmul^0,w,c
 11201   002598  6E49               	movwf	___flmul@temp^0,c
 11202   00259A  0EFF               	movlw	255
 11203   00259C  203B               	addwfc	(??___flmul+1)^0,w,c
 11204   00259E  6E4A               	movwf	(___flmul@temp+1)^0,c
 11205   0025A0  EFE7  F012         	goto	l4096
 11206   0025A4                     l4090:
 11207   0025A4  90D8               	bcf	status,0,c
 11208   0025A6  3645               	rlcf	___flmul@prod^0,f,c
 11209   0025A8  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11210   0025AA  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11211   0025AC  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11212   0025AE  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11213   0025B0  EFDC  F012         	goto	u3661
 11214   0025B4  EFDE  F012         	goto	u3660
 11215   0025B8                     u3661:
 11216   0025B8  EFDF  F012         	goto	l1289
 11217   0025BC                     u3660:
 11218   0025BC  8045               	bsf	___flmul@prod^0,0,c
 11219   0025BE                     l1289:
 11220   0025BE  90D8               	bcf	status,0,c
 11221   0025C0  363F               	rlcf	___flmul@grs^0,f,c
 11222   0025C2  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11223   0025C4  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11224   0025C6  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11225   0025C8  0649               	decf	___flmul@temp^0,f,c
 11226   0025CA  A0D8               	btfss	status,0,c
 11227   0025CC  064A               	decf	(___flmul@temp+1)^0,f,c
 11228   0025CE                     l4096:
 11229   0025CE  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11230   0025D0  EFEC  F012         	goto	u3671
 11231   0025D4  EFEE  F012         	goto	u3670
 11232   0025D8                     u3671:
 11233   0025D8  EFD2  F012         	goto	l4090
 11234   0025DC                     u3670:
 11235   0025DC  0E00               	movlw	0
 11236   0025DE  6E43               	movwf	___flmul@aexp^0,c
 11237   0025E0  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11238   0025E2  EFF5  F012         	goto	u3681
 11239   0025E6  EFF7  F012         	goto	u3680
 11240   0025EA                     u3681:
 11241   0025EA  EF1B  F013         	goto	l1291
 11242   0025EE                     u3680:
 11243   0025EE  0EFF               	movlw	255
 11244   0025F0  143F               	andwf	___flmul@grs^0,w,c
 11245   0025F2  6E3A               	movwf	??___flmul^0,c
 11246   0025F4  0EFF               	movlw	255
 11247   0025F6  1440               	andwf	(___flmul@grs+1)^0,w,c
 11248   0025F8  6E3B               	movwf	(??___flmul+1)^0,c
 11249   0025FA  0EFF               	movlw	255
 11250   0025FC  1441               	andwf	(___flmul@grs+2)^0,w,c
 11251   0025FE  6E3C               	movwf	(??___flmul+2)^0,c
 11252   002600  0E7F               	movlw	127
 11253   002602  1442               	andwf	(___flmul@grs+3)^0,w,c
 11254   002604  6E3D               	movwf	(??___flmul+3)^0,c
 11255   002606  503A               	movf	??___flmul^0,w,c
 11256   002608  103B               	iorwf	(??___flmul+1)^0,w,c
 11257   00260A  103C               	iorwf	(??___flmul+2)^0,w,c
 11258   00260C  103D               	iorwf	(??___flmul+3)^0,w,c
 11259   00260E  B4D8               	btfsc	status,2,c
 11260   002610  EF0C  F013         	goto	u3691
 11261   002614  EF0E  F013         	goto	u3690
 11262   002618                     u3691:
 11263   002618  EF12  F013         	goto	l1292
 11264   00261C                     u3690:
 11265   00261C                     l4104:
 11266   00261C  0E01               	movlw	1
 11267   00261E  6E43               	movwf	___flmul@aexp^0,c
 11268   002620  EF1B  F013         	goto	l1291
 11269   002624                     l1292:
 11270   002624  A045               	btfss	___flmul@prod^0,0,c
 11271   002626  EF17  F013         	goto	u3701
 11272   00262A  EF19  F013         	goto	u3700
 11273   00262E                     u3701:
 11274   00262E  EF1B  F013         	goto	l1291
 11275   002632                     u3700:
 11276   002632  EF0E  F013         	goto	l4104
 11277   002636                     l1291:
 11278   002636  5043               	movf	___flmul@aexp^0,w,c
 11279   002638  B4D8               	btfsc	status,2,c
 11280   00263A  EF21  F013         	goto	u3711
 11281   00263E  EF23  F013         	goto	u3710
 11282   002642                     u3711:
 11283   002642  EF47  F013         	goto	l4116
 11284   002646                     u3710:
 11285   002646  0E01               	movlw	1
 11286   002648  2645               	addwf	___flmul@prod^0,f,c
 11287   00264A  0E00               	movlw	0
 11288   00264C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11289   00264E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11290   002650  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11291   002652  A048               	btfss	(___flmul@prod+3)^0,0,c
 11292   002654  EF2E  F013         	goto	u3721
 11293   002658  EF30  F013         	goto	u3720
 11294   00265C                     u3721:
 11295   00265C  EF47  F013         	goto	l4116
 11296   002660                     u3720:
 11297   002660  C045  F03A         	movff	___flmul@prod,??___flmul
 11298   002664  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11299   002668  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11300   00266C  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11301   002670  343D               	rlcf	(??___flmul+3)^0,w,c
 11302   002672  323D               	rrcf	(??___flmul+3)^0,f,c
 11303   002674  323C               	rrcf	(??___flmul+2)^0,f,c
 11304   002676  323B               	rrcf	(??___flmul+1)^0,f,c
 11305   002678  323A               	rrcf	??___flmul^0,f,c
 11306   00267A  C03A  F045         	movff	??___flmul,___flmul@prod
 11307   00267E  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11308   002682  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11309   002686  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11310   00268A  4A49               	infsnz	___flmul@temp^0,f,c
 11311   00268C  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11312   00268E                     l4116:
 11313   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11314   002690  EF52  F013         	goto	u3731
 11315   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 11316   002696  E108               	bnz	u3730
 11317   002698  2849               	incf	___flmul@temp^0,w,c
 11318   00269A  A0D8               	btfss	status,0,c
 11319   00269C  EF52  F013         	goto	u3731
 11320   0026A0  EF54  F013         	goto	u3730
 11321   0026A4                     u3731:
 11322   0026A4  EF5E  F013         	goto	l4120
 11323   0026A8                     u3730:
 11324   0026A8  0E00               	movlw	0
 11325   0026AA  6E45               	movwf	___flmul@prod^0,c
 11326   0026AC  0E00               	movlw	0
 11327   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 11328   0026B0  0E80               	movlw	128
 11329   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 11330   0026B4  0E7F               	movlw	127
 11331   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 11332   0026B8  EF8C  F013         	goto	l4132
 11333   0026BC                     l4120:
 11334   0026BC  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11335   0026BE  EF6B  F013         	goto	u3740
 11336   0026C2  504A               	movf	(___flmul@temp+1)^0,w,c
 11337   0026C4  E106               	bnz	u3741
 11338   0026C6  0449               	decf	___flmul@temp^0,w,c
 11339   0026C8  B0D8               	btfsc	status,0,c
 11340   0026CA  EF69  F013         	goto	u3741
 11341   0026CE  EF6B  F013         	goto	u3740
 11342   0026D2                     u3741:
 11343   0026D2  EF77  F013         	goto	l1299
 11344   0026D6                     u3740:
 11345   0026D6  0E00               	movlw	0
 11346   0026D8  6E45               	movwf	___flmul@prod^0,c
 11347   0026DA  0E00               	movlw	0
 11348   0026DC  6E46               	movwf	(___flmul@prod+1)^0,c
 11349   0026DE  0E00               	movlw	0
 11350   0026E0  6E47               	movwf	(___flmul@prod+2)^0,c
 11351   0026E2  0E00               	movlw	0
 11352   0026E4  6E48               	movwf	(___flmul@prod+3)^0,c
 11353   0026E6  0E00               	movlw	0
 11354   0026E8  6E3E               	movwf	___flmul@sign^0,c
 11355   0026EA  EF8C  F013         	goto	l4132
 11356   0026EE                     l1299:
 11357   0026EE  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11358   0026F2  0EFF               	movlw	255
 11359   0026F4  1645               	andwf	___flmul@prod^0,f,c
 11360   0026F6  0EFF               	movlw	255
 11361   0026F8  1646               	andwf	(___flmul@prod+1)^0,f,c
 11362   0026FA  0E7F               	movlw	127
 11363   0026FC  1647               	andwf	(___flmul@prod+2)^0,f,c
 11364   0026FE  0E00               	movlw	0
 11365   002700  1648               	andwf	(___flmul@prod+3)^0,f,c
 11366   002702  A044               	btfss	___flmul@bexp^0,0,c
 11367   002704  EF86  F013         	goto	u3751
 11368   002708  EF88  F013         	goto	u3750
 11369   00270C                     u3751:
 11370   00270C  EF89  F013         	goto	l4130
 11371   002710                     u3750:
 11372   002710  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11373   002712                     l4130:
 11374   002712  90D8               	bcf	status,0,c
 11375   002714  3044               	rrcf	___flmul@bexp^0,w,c
 11376   002716  6E48               	movwf	(___flmul@prod+3)^0,c
 11377   002718                     l4132:
 11378   002718  503E               	movf	___flmul@sign^0,w,c
 11379   00271A  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11380   00271C  C045  F032         	movff	___flmul@prod,?___flmul
 11381   002720  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11382   002724  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11383   002728  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11384   00272C                     l1286:
 11385   00272C  0012               	return		;funcret
 11386   00272E                     __end_of___flmul:
 11387                           	callstack 0
 11388                           
 11389 ;; *************** function ___flge *****************
 11390 ;; Defined at:
 11391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  ff1             4    0[COMRAM] unsigned char 
 11394 ;;  ff2             4    4[COMRAM] unsigned char 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;		None               void
 11399 ;; Registers used:
 11400 ;;		wreg, status,2, status,0
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11406 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;Total ram usage:       12 bytes
 11411 ;; Hardware stack levels used: 1
 11412 ;; Hardware stack levels required when called: 1
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_Colour_decider
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text67
 11421   003A7C                     __ptext67:
 11422                           	callstack 0
 11423   003A7C                     ___flge:
 11424                           	callstack 28
 11425   003A7C  0E00               	movlw	0
 11426   003A7E  1401               	andwf	___flge@ff1^0,w,c
 11427   003A80  6E09               	movwf	??___flge^0,c
 11428   003A82  0E00               	movlw	0
 11429   003A84  1402               	andwf	(___flge@ff1+1)^0,w,c
 11430   003A86  6E0A               	movwf	(??___flge+1)^0,c
 11431   003A88  0E80               	movlw	128
 11432   003A8A  1403               	andwf	(___flge@ff1+2)^0,w,c
 11433   003A8C  6E0B               	movwf	(??___flge+2)^0,c
 11434   003A8E  0E7F               	movlw	127
 11435   003A90  1404               	andwf	(___flge@ff1+3)^0,w,c
 11436   003A92  6E0C               	movwf	(??___flge+3)^0,c
 11437   003A94  5009               	movf	??___flge^0,w,c
 11438   003A96  100A               	iorwf	(??___flge+1)^0,w,c
 11439   003A98  100B               	iorwf	(??___flge+2)^0,w,c
 11440   003A9A  100C               	iorwf	(??___flge+3)^0,w,c
 11441   003A9C  A4D8               	btfss	status,2,c
 11442   003A9E  EF53  F01D         	goto	u3791
 11443   003AA2  EF55  F01D         	goto	u3790
 11444   003AA6                     u3791:
 11445   003AA6  EF5D  F01D         	goto	l4164
 11446   003AAA                     u3790:
 11447   003AAA  0E00               	movlw	0
 11448   003AAC  6E01               	movwf	___flge@ff1^0,c
 11449   003AAE  0E00               	movlw	0
 11450   003AB0  6E02               	movwf	(___flge@ff1+1)^0,c
 11451   003AB2  0E00               	movlw	0
 11452   003AB4  6E03               	movwf	(___flge@ff1+2)^0,c
 11453   003AB6  0E00               	movlw	0
 11454   003AB8  6E04               	movwf	(___flge@ff1+3)^0,c
 11455   003ABA                     l4164:
 11456   003ABA  0E00               	movlw	0
 11457   003ABC  1405               	andwf	___flge@ff2^0,w,c
 11458   003ABE  6E09               	movwf	??___flge^0,c
 11459   003AC0  0E00               	movlw	0
 11460   003AC2  1406               	andwf	(___flge@ff2+1)^0,w,c
 11461   003AC4  6E0A               	movwf	(??___flge+1)^0,c
 11462   003AC6  0E80               	movlw	128
 11463   003AC8  1407               	andwf	(___flge@ff2+2)^0,w,c
 11464   003ACA  6E0B               	movwf	(??___flge+2)^0,c
 11465   003ACC  0E7F               	movlw	127
 11466   003ACE  1408               	andwf	(___flge@ff2+3)^0,w,c
 11467   003AD0  6E0C               	movwf	(??___flge+3)^0,c
 11468   003AD2  5009               	movf	??___flge^0,w,c
 11469   003AD4  100A               	iorwf	(??___flge+1)^0,w,c
 11470   003AD6  100B               	iorwf	(??___flge+2)^0,w,c
 11471   003AD8  100C               	iorwf	(??___flge+3)^0,w,c
 11472   003ADA  A4D8               	btfss	status,2,c
 11473   003ADC  EF72  F01D         	goto	u3801
 11474   003AE0  EF74  F01D         	goto	u3800
 11475   003AE4                     u3801:
 11476   003AE4  EF7C  F01D         	goto	l4168
 11477   003AE8                     u3800:
 11478   003AE8  0E00               	movlw	0
 11479   003AEA  6E05               	movwf	___flge@ff2^0,c
 11480   003AEC  0E00               	movlw	0
 11481   003AEE  6E06               	movwf	(___flge@ff2+1)^0,c
 11482   003AF0  0E00               	movlw	0
 11483   003AF2  6E07               	movwf	(___flge@ff2+2)^0,c
 11484   003AF4  0E00               	movlw	0
 11485   003AF6  6E08               	movwf	(___flge@ff2+3)^0,c
 11486   003AF8                     l4168:
 11487   003AF8  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11488   003AFA  EF81  F01D         	goto	u3811
 11489   003AFE  EF83  F01D         	goto	u3810
 11490   003B02                     u3811:
 11491   003B02  EF8C  F01D         	goto	l4172
 11492   003B06                     u3810:
 11493   003B06  6C01               	negf	___flge@ff1^0,c
 11494   003B08  1E02               	comf	(___flge@ff1+1)^0,f,c
 11495   003B0A  B0D8               	btfsc	status,0,c
 11496   003B0C  2A02               	incf	(___flge@ff1+1)^0,f,c
 11497   003B0E  1E03               	comf	(___flge@ff1+2)^0,f,c
 11498   003B10  B0D8               	btfsc	status,0,c
 11499   003B12  2A03               	incf	(___flge@ff1+2)^0,f,c
 11500   003B14  0E80               	movlw	128
 11501   003B16  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11502   003B18                     l4172:
 11503   003B18  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11504   003B1A  EF91  F01D         	goto	u3821
 11505   003B1E  EF93  F01D         	goto	u3820
 11506   003B22                     u3821:
 11507   003B22  EF9C  F01D         	goto	l933
 11508   003B26                     u3820:
 11509   003B26  6C05               	negf	___flge@ff2^0,c
 11510   003B28  1E06               	comf	(___flge@ff2+1)^0,f,c
 11511   003B2A  B0D8               	btfsc	status,0,c
 11512   003B2C  2A06               	incf	(___flge@ff2+1)^0,f,c
 11513   003B2E  1E07               	comf	(___flge@ff2+2)^0,f,c
 11514   003B30  B0D8               	btfsc	status,0,c
 11515   003B32  2A07               	incf	(___flge@ff2+2)^0,f,c
 11516   003B34  0E80               	movlw	128
 11517   003B36  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11518   003B38                     l933:
 11519   003B38  0E00               	movlw	0
 11520   003B3A  1A01               	xorwf	___flge@ff1^0,f,c
 11521   003B3C  0E00               	movlw	0
 11522   003B3E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11523   003B40  0E00               	movlw	0
 11524   003B42  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11525   003B44  0E80               	movlw	128
 11526   003B46  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11527   003B48  0E00               	movlw	0
 11528   003B4A  1A05               	xorwf	___flge@ff2^0,f,c
 11529   003B4C  0E00               	movlw	0
 11530   003B4E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11531   003B50  0E00               	movlw	0
 11532   003B52  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11533   003B54  0E80               	movlw	128
 11534   003B56  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11535   003B58  5005               	movf	___flge@ff2^0,w,c
 11536   003B5A  5C01               	subwf	___flge@ff1^0,w,c
 11537   003B5C  5006               	movf	(___flge@ff2+1)^0,w,c
 11538   003B5E  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11539   003B60  5007               	movf	(___flge@ff2+2)^0,w,c
 11540   003B62  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11541   003B64  5008               	movf	(___flge@ff2+3)^0,w,c
 11542   003B66  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11543   003B68  B0D8               	btfsc	status,0,c
 11544   003B6A  EFB9  F01D         	goto	u3831
 11545   003B6E  EFBB  F01D         	goto	u3830
 11546   003B72                     u3831:
 11547   003B72  EFBE  F01D         	goto	l4178
 11548   003B76                     u3830:
 11549   003B76  90D8               	bcf	status,0,c
 11550   003B78  EFBF  F01D         	goto	l938
 11551   003B7C                     l4178:
 11552   003B7C  80D8               	bsf	status,0,c
 11553   003B7E                     l938:
 11554   003B7E  0012               	return		;funcret
 11555   003B80                     __end_of___flge:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function ___fleq *****************
 11559 ;; Defined at:
 11560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  ff1             4   24[COMRAM] unsigned char 
 11563 ;;  ff2             4   28[COMRAM] unsigned char 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;		None               void
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11575 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;Total ram usage:       12 bytes
 11580 ;; Hardware stack levels used: 1
 11581 ;; Hardware stack levels required when called: 1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_Colour_decider
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text68
 11590   003E60                     __ptext68:
 11591                           	callstack 0
 11592   003E60                     ___fleq:
 11593                           	callstack 28
 11594   003E60  0E00               	movlw	0
 11595   003E62  1419               	andwf	___fleq@ff1^0,w,c
 11596   003E64  6E21               	movwf	??___fleq^0,c
 11597   003E66  0E00               	movlw	0
 11598   003E68  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11599   003E6A  6E22               	movwf	(??___fleq+1)^0,c
 11600   003E6C  0E80               	movlw	128
 11601   003E6E  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11602   003E70  6E23               	movwf	(??___fleq+2)^0,c
 11603   003E72  0E7F               	movlw	127
 11604   003E74  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11605   003E76  6E24               	movwf	(??___fleq+3)^0,c
 11606   003E78  5021               	movf	??___fleq^0,w,c
 11607   003E7A  1022               	iorwf	(??___fleq+1)^0,w,c
 11608   003E7C  1023               	iorwf	(??___fleq+2)^0,w,c
 11609   003E7E  1024               	iorwf	(??___fleq+3)^0,w,c
 11610   003E80  A4D8               	btfss	status,2,c
 11611   003E82  EF45  F01F         	goto	u3761
 11612   003E86  EF47  F01F         	goto	u3760
 11613   003E8A                     u3761:
 11614   003E8A  EF4F  F01F         	goto	l4148
 11615   003E8E                     u3760:
 11616   003E8E  0E00               	movlw	0
 11617   003E90  6E19               	movwf	___fleq@ff1^0,c
 11618   003E92  0E00               	movlw	0
 11619   003E94  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11620   003E96  0E00               	movlw	0
 11621   003E98  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11622   003E9A  0E00               	movlw	0
 11623   003E9C  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11624   003E9E                     l4148:
 11625   003E9E  0E00               	movlw	0
 11626   003EA0  141D               	andwf	___fleq@ff2^0,w,c
 11627   003EA2  6E21               	movwf	??___fleq^0,c
 11628   003EA4  0E00               	movlw	0
 11629   003EA6  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11630   003EA8  6E22               	movwf	(??___fleq+1)^0,c
 11631   003EAA  0E80               	movlw	128
 11632   003EAC  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11633   003EAE  6E23               	movwf	(??___fleq+2)^0,c
 11634   003EB0  0E7F               	movlw	127
 11635   003EB2  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11636   003EB4  6E24               	movwf	(??___fleq+3)^0,c
 11637   003EB6  5021               	movf	??___fleq^0,w,c
 11638   003EB8  1022               	iorwf	(??___fleq+1)^0,w,c
 11639   003EBA  1023               	iorwf	(??___fleq+2)^0,w,c
 11640   003EBC  1024               	iorwf	(??___fleq+3)^0,w,c
 11641   003EBE  A4D8               	btfss	status,2,c
 11642   003EC0  EF64  F01F         	goto	u3771
 11643   003EC4  EF66  F01F         	goto	u3770
 11644   003EC8                     u3771:
 11645   003EC8  EF6E  F01F         	goto	l4152
 11646   003ECC                     u3770:
 11647   003ECC  0E00               	movlw	0
 11648   003ECE  6E1D               	movwf	___fleq@ff2^0,c
 11649   003ED0  0E00               	movlw	0
 11650   003ED2  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11651   003ED4  0E00               	movlw	0
 11652   003ED6  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11653   003ED8  0E00               	movlw	0
 11654   003EDA  6E20               	movwf	(___fleq@ff2+3)^0,c
 11655   003EDC                     l4152:
 11656   003EDC  501D               	movf	___fleq@ff2^0,w,c
 11657   003EDE  1819               	xorwf	___fleq@ff1^0,w,c
 11658   003EE0  E10F               	bnz	u3780
 11659   003EE2  501E               	movf	(___fleq@ff2+1)^0,w,c
 11660   003EE4  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11661   003EE6  E10C               	bnz	u3780
 11662   003EE8  501F               	movf	(___fleq@ff2+2)^0,w,c
 11663   003EEA  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11664   003EEC  E109               	bnz	u3780
 11665   003EEE  5020               	movf	(___fleq@ff2+3)^0,w,c
 11666   003EF0  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11667   003EF2  B4D8               	btfsc	status,2,c
 11668   003EF4  EF7E  F01F         	goto	u3781
 11669   003EF8  EF80  F01F         	goto	u3780
 11670   003EFC                     u3781:
 11671   003EFC  EF83  F01F         	goto	l4156
 11672   003F00                     u3780:
 11673   003F00  90D8               	bcf	status,0,c
 11674   003F02  EF84  F01F         	goto	l927
 11675   003F06                     l4156:
 11676   003F06  80D8               	bsf	status,0,c
 11677   003F08                     l927:
 11678   003F08  0012               	return		;funcret
 11679   003F0A                     __end_of___fleq:
 11680                           	callstack 0
 11681                           
 11682 ;; *************** function ___fldiv *****************
 11683 ;; Defined at:
 11684 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  b               4   24[COMRAM] unsigned char 
 11687 ;;  a               4   28[COMRAM] unsigned char 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  grs             4   43[COMRAM] unsigned long 
 11690 ;;  rem             4   36[COMRAM] unsigned long 
 11691 ;;  new_exp         2   41[COMRAM] short 
 11692 ;;  aexp            1   48[COMRAM] unsigned char 
 11693 ;;  bexp            1   47[COMRAM] unsigned char 
 11694 ;;  sign            1   40[COMRAM] unsigned char 
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  4   24[COMRAM] unsigned char 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11707 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11708 ;;Total ram usage:       25 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 1
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_colour_rel
 11715 ;;		_Colour_decider
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text69
 11720   00272E                     __ptext69:
 11721                           	callstack 0
 11722   00272E                     ___fldiv:
 11723                           	callstack 28
 11724   00272E  501C               	movf	(___fldiv@b+3)^0,w,c
 11725   002730  0B80               	andlw	128
 11726   002732  6E29               	movwf	___fldiv@sign^0,c
 11727   002734  501C               	movf	(___fldiv@b+3)^0,w,c
 11728   002736  241C               	addwf	(___fldiv@b+3)^0,w,c
 11729   002738  6E30               	movwf	___fldiv@bexp^0,c
 11730   00273A  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11731   00273C  EFA2  F013         	goto	u3341
 11732   002740  EFA4  F013         	goto	u3340
 11733   002744                     u3341:
 11734   002744  EFA5  F013         	goto	l3876
 11735   002748                     u3340:
 11736   002748  8030               	bsf	___fldiv@bexp^0,0,c
 11737   00274A                     l3876:
 11738   00274A  5030               	movf	___fldiv@bexp^0,w,c
 11739   00274C  B4D8               	btfsc	status,2,c
 11740   00274E  EFAB  F013         	goto	u3351
 11741   002752  EFAD  F013         	goto	u3350
 11742   002756                     u3351:
 11743   002756  EFC2  F013         	goto	l3886
 11744   00275A                     u3350:
 11745   00275A  2830               	incf	___fldiv@bexp^0,w,c
 11746   00275C  A4D8               	btfss	status,2,c
 11747   00275E  EFB3  F013         	goto	u3361
 11748   002762  EFB5  F013         	goto	u3360
 11749   002766                     u3361:
 11750   002766  EFBD  F013         	goto	l3882
 11751   00276A                     u3360:
 11752   00276A  0E00               	movlw	0
 11753   00276C  6E19               	movwf	___fldiv@b^0,c
 11754   00276E  0E00               	movlw	0
 11755   002770  6E1A               	movwf	(___fldiv@b+1)^0,c
 11756   002772  0E00               	movlw	0
 11757   002774  6E1B               	movwf	(___fldiv@b+2)^0,c
 11758   002776  0E00               	movlw	0
 11759   002778  6E1C               	movwf	(___fldiv@b+3)^0,c
 11760   00277A                     l3882:
 11761   00277A  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11762   00277C  0E00               	movlw	0
 11763   00277E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11764   002780  EFCA  F013         	goto	l3888
 11765   002784                     l3886:
 11766   002784  0E00               	movlw	0
 11767   002786  6E19               	movwf	___fldiv@b^0,c
 11768   002788  0E00               	movlw	0
 11769   00278A  6E1A               	movwf	(___fldiv@b+1)^0,c
 11770   00278C  0E00               	movlw	0
 11771   00278E  6E1B               	movwf	(___fldiv@b+2)^0,c
 11772   002790  0E00               	movlw	0
 11773   002792  6E1C               	movwf	(___fldiv@b+3)^0,c
 11774   002794                     l3888:
 11775   002794  5020               	movf	(___fldiv@a+3)^0,w,c
 11776   002796  0B80               	andlw	128
 11777   002798  1A29               	xorwf	___fldiv@sign^0,f,c
 11778   00279A  5020               	movf	(___fldiv@a+3)^0,w,c
 11779   00279C  2420               	addwf	(___fldiv@a+3)^0,w,c
 11780   00279E  6E31               	movwf	___fldiv@aexp^0,c
 11781   0027A0  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11782   0027A2  EFD5  F013         	goto	u3371
 11783   0027A6  EFD7  F013         	goto	u3370
 11784   0027AA                     u3371:
 11785   0027AA  EFD8  F013         	goto	l3896
 11786   0027AE                     u3370:
 11787   0027AE  8031               	bsf	___fldiv@aexp^0,0,c
 11788   0027B0                     l3896:
 11789   0027B0  5031               	movf	___fldiv@aexp^0,w,c
 11790   0027B2  B4D8               	btfsc	status,2,c
 11791   0027B4  EFDE  F013         	goto	u3381
 11792   0027B8  EFE0  F013         	goto	u3380
 11793   0027BC                     u3381:
 11794   0027BC  EFF5  F013         	goto	l3906
 11795   0027C0                     u3380:
 11796   0027C0  2831               	incf	___fldiv@aexp^0,w,c
 11797   0027C2  A4D8               	btfss	status,2,c
 11798   0027C4  EFE6  F013         	goto	u3391
 11799   0027C8  EFE8  F013         	goto	u3390
 11800   0027CC                     u3391:
 11801   0027CC  EFF0  F013         	goto	l3902
 11802   0027D0                     u3390:
 11803   0027D0  0E00               	movlw	0
 11804   0027D2  6E1D               	movwf	___fldiv@a^0,c
 11805   0027D4  0E00               	movlw	0
 11806   0027D6  6E1E               	movwf	(___fldiv@a+1)^0,c
 11807   0027D8  0E00               	movlw	0
 11808   0027DA  6E1F               	movwf	(___fldiv@a+2)^0,c
 11809   0027DC  0E00               	movlw	0
 11810   0027DE  6E20               	movwf	(___fldiv@a+3)^0,c
 11811   0027E0                     l3902:
 11812   0027E0  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11813   0027E2  0E00               	movlw	0
 11814   0027E4  6E20               	movwf	(___fldiv@a+3)^0,c
 11815   0027E6  EFFD  F013         	goto	l3908
 11816   0027EA                     l3906:
 11817   0027EA  0E00               	movlw	0
 11818   0027EC  6E1D               	movwf	___fldiv@a^0,c
 11819   0027EE  0E00               	movlw	0
 11820   0027F0  6E1E               	movwf	(___fldiv@a+1)^0,c
 11821   0027F2  0E00               	movlw	0
 11822   0027F4  6E1F               	movwf	(___fldiv@a+2)^0,c
 11823   0027F6  0E00               	movlw	0
 11824   0027F8  6E20               	movwf	(___fldiv@a+3)^0,c
 11825   0027FA                     l3908:
 11826   0027FA  501D               	movf	___fldiv@a^0,w,c
 11827   0027FC  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11828   0027FE  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11829   002800  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11830   002802  A4D8               	btfss	status,2,c
 11831   002804  EF06  F014         	goto	u3401
 11832   002808  EF08  F014         	goto	u3400
 11833   00280C                     u3401:
 11834   00280C  EF20  F014         	goto	l3920
 11835   002810                     u3400:
 11836   002810  0E00               	movlw	0
 11837   002812  6E19               	movwf	___fldiv@b^0,c
 11838   002814  0E00               	movlw	0
 11839   002816  6E1A               	movwf	(___fldiv@b+1)^0,c
 11840   002818  0E00               	movlw	0
 11841   00281A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11842   00281C  0E00               	movlw	0
 11843   00281E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11844   002820  0E80               	movlw	128
 11845   002822  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11846   002824  0E7F               	movlw	127
 11847   002826  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11848   002828                     l3914:
 11849   002828  5029               	movf	___fldiv@sign^0,w,c
 11850   00282A  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11851   00282C  C019  F019         	movff	___fldiv@b,?___fldiv
 11852   002830  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11853   002834  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11854   002838  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11855   00283C  EF63  F015         	goto	l1250
 11856   002840                     l3920:
 11857   002840  5030               	movf	___fldiv@bexp^0,w,c
 11858   002842  A4D8               	btfss	status,2,c
 11859   002844  EF26  F014         	goto	u3411
 11860   002848  EF28  F014         	goto	u3410
 11861   00284C                     u3411:
 11862   00284C  EF32  F014         	goto	l3928
 11863   002850                     u3410:
 11864   002850  0E00               	movlw	0
 11865   002852  6E19               	movwf	?___fldiv^0,c
 11866   002854  0E00               	movlw	0
 11867   002856  6E1A               	movwf	(?___fldiv+1)^0,c
 11868   002858  0E00               	movlw	0
 11869   00285A  6E1B               	movwf	(?___fldiv+2)^0,c
 11870   00285C  0E00               	movlw	0
 11871   00285E  6E1C               	movwf	(?___fldiv+3)^0,c
 11872   002860  EF63  F015         	goto	l1250
 11873   002864                     l3928:
 11874   002864  5031               	movf	___fldiv@aexp^0,w,c
 11875   002866  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11876   00286A  6A22               	clrf	(??___fldiv+1)^0,c
 11877   00286C  5E21               	subwf	??___fldiv^0,f,c
 11878   00286E  0E00               	movlw	0
 11879   002870  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11880   002872  0E7F               	movlw	127
 11881   002874  2421               	addwf	??___fldiv^0,w,c
 11882   002876  6E2A               	movwf	___fldiv@new_exp^0,c
 11883   002878  0E00               	movlw	0
 11884   00287A  2022               	addwfc	(??___fldiv+1)^0,w,c
 11885   00287C  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11886   00287E  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11887   002882  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11888   002886  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11889   00288A  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11890   00288E  0E00               	movlw	0
 11891   002890  6E19               	movwf	___fldiv@b^0,c
 11892   002892  0E00               	movlw	0
 11893   002894  6E1A               	movwf	(___fldiv@b+1)^0,c
 11894   002896  0E00               	movlw	0
 11895   002898  6E1B               	movwf	(___fldiv@b+2)^0,c
 11896   00289A  0E00               	movlw	0
 11897   00289C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11898   00289E  0E00               	movlw	0
 11899   0028A0  6E2C               	movwf	___fldiv@grs^0,c
 11900   0028A2  0E00               	movlw	0
 11901   0028A4  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11902   0028A6  0E00               	movlw	0
 11903   0028A8  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11904   0028AA  0E00               	movlw	0
 11905   0028AC  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11906   0028AE  0E00               	movlw	0
 11907   0028B0  6E31               	movwf	___fldiv@aexp^0,c
 11908   0028B2  EF93  F014         	goto	l1252
 11909   0028B6                     l3938:
 11910   0028B6  5031               	movf	___fldiv@aexp^0,w,c
 11911   0028B8  B4D8               	btfsc	status,2,c
 11912   0028BA  EF61  F014         	goto	u3421
 11913   0028BE  EF63  F014         	goto	u3420
 11914   0028C2                     u3421:
 11915   0028C2  EF7A  F014         	goto	l3946
 11916   0028C6                     u3420:
 11917   0028C6  90D8               	bcf	status,0,c
 11918   0028C8  3625               	rlcf	___fldiv@rem^0,f,c
 11919   0028CA  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11920   0028CC  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11921   0028CE  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11922   0028D0  90D8               	bcf	status,0,c
 11923   0028D2  3619               	rlcf	___fldiv@b^0,f,c
 11924   0028D4  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11925   0028D6  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11926   0028D8  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11927   0028DA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11928   0028DC  EF72  F014         	goto	u3431
 11929   0028E0  EF74  F014         	goto	u3430
 11930   0028E4                     u3431:
 11931   0028E4  EF75  F014         	goto	l1255
 11932   0028E8                     u3430:
 11933   0028E8  8019               	bsf	___fldiv@b^0,0,c
 11934   0028EA                     l1255:
 11935   0028EA  90D8               	bcf	status,0,c
 11936   0028EC  362C               	rlcf	___fldiv@grs^0,f,c
 11937   0028EE  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11938   0028F0  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11939   0028F2  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11940   0028F4                     l3946:
 11941   0028F4  501D               	movf	___fldiv@a^0,w,c
 11942   0028F6  5C25               	subwf	___fldiv@rem^0,w,c
 11943   0028F8  501E               	movf	(___fldiv@a+1)^0,w,c
 11944   0028FA  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11945   0028FC  501F               	movf	(___fldiv@a+2)^0,w,c
 11946   0028FE  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11947   002900  5020               	movf	(___fldiv@a+3)^0,w,c
 11948   002902  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11949   002904  A0D8               	btfss	status,0,c
 11950   002906  EF87  F014         	goto	u3441
 11951   00290A  EF89  F014         	goto	u3440
 11952   00290E                     u3441:
 11953   00290E  EF92  F014         	goto	l3952
 11954   002912                     u3440:
 11955   002912  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11956   002914  501D               	movf	___fldiv@a^0,w,c
 11957   002916  5E25               	subwf	___fldiv@rem^0,f,c
 11958   002918  501E               	movf	(___fldiv@a+1)^0,w,c
 11959   00291A  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11960   00291C  501F               	movf	(___fldiv@a+2)^0,w,c
 11961   00291E  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11962   002920  5020               	movf	(___fldiv@a+3)^0,w,c
 11963   002922  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11964   002924                     l3952:
 11965   002924  2A31               	incf	___fldiv@aexp^0,f,c
 11966   002926                     l1252:
 11967   002926  0E19               	movlw	25
 11968   002928  6431               	cpfsgt	___fldiv@aexp^0,c
 11969   00292A  EF99  F014         	goto	u3451
 11970   00292E  EF9B  F014         	goto	u3450
 11971   002932                     u3451:
 11972   002932  EF5B  F014         	goto	l3938
 11973   002936                     u3450:
 11974   002936  5025               	movf	___fldiv@rem^0,w,c
 11975   002938  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11976   00293A  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11977   00293C  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11978   00293E  B4D8               	btfsc	status,2,c
 11979   002940  EFA4  F014         	goto	u3461
 11980   002944  EFA6  F014         	goto	u3460
 11981   002948                     u3461:
 11982   002948  EFBE  F014         	goto	l3964
 11983   00294C                     u3460:
 11984   00294C  802C               	bsf	___fldiv@grs^0,0,c
 11985   00294E  EFBE  F014         	goto	l3964
 11986   002952                     l3958:
 11987   002952  90D8               	bcf	status,0,c
 11988   002954  3619               	rlcf	___fldiv@b^0,f,c
 11989   002956  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11990   002958  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11991   00295A  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11992   00295C  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11993   00295E  EFB3  F014         	goto	u3471
 11994   002962  EFB5  F014         	goto	u3470
 11995   002966                     u3471:
 11996   002966  EFB6  F014         	goto	l1261
 11997   00296A                     u3470:
 11998   00296A  8019               	bsf	___fldiv@b^0,0,c
 11999   00296C                     l1261:
 12000   00296C  90D8               	bcf	status,0,c
 12001   00296E  362C               	rlcf	___fldiv@grs^0,f,c
 12002   002970  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12003   002972  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12004   002974  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12005   002976  062A               	decf	___fldiv@new_exp^0,f,c
 12006   002978  A0D8               	btfss	status,0,c
 12007   00297A  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 12008   00297C                     l3964:
 12009   00297C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 12010   00297E  EFC3  F014         	goto	u3481
 12011   002982  EFC5  F014         	goto	u3480
 12012   002986                     u3481:
 12013   002986  EFA9  F014         	goto	l3958
 12014   00298A                     u3480:
 12015   00298A  0E00               	movlw	0
 12016   00298C  6E31               	movwf	___fldiv@aexp^0,c
 12017   00298E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12018   002990  EFCC  F014         	goto	u3491
 12019   002994  EFCE  F014         	goto	u3490
 12020   002998                     u3491:
 12021   002998  EFF2  F014         	goto	l1263
 12022   00299C                     u3490:
 12023   00299C  0EFF               	movlw	255
 12024   00299E  142C               	andwf	___fldiv@grs^0,w,c
 12025   0029A0  6E21               	movwf	??___fldiv^0,c
 12026   0029A2  0EFF               	movlw	255
 12027   0029A4  142D               	andwf	(___fldiv@grs+1)^0,w,c
 12028   0029A6  6E22               	movwf	(??___fldiv+1)^0,c
 12029   0029A8  0EFF               	movlw	255
 12030   0029AA  142E               	andwf	(___fldiv@grs+2)^0,w,c
 12031   0029AC  6E23               	movwf	(??___fldiv+2)^0,c
 12032   0029AE  0E7F               	movlw	127
 12033   0029B0  142F               	andwf	(___fldiv@grs+3)^0,w,c
 12034   0029B2  6E24               	movwf	(??___fldiv+3)^0,c
 12035   0029B4  5021               	movf	??___fldiv^0,w,c
 12036   0029B6  1022               	iorwf	(??___fldiv+1)^0,w,c
 12037   0029B8  1023               	iorwf	(??___fldiv+2)^0,w,c
 12038   0029BA  1024               	iorwf	(??___fldiv+3)^0,w,c
 12039   0029BC  B4D8               	btfsc	status,2,c
 12040   0029BE  EFE3  F014         	goto	u3501
 12041   0029C2  EFE5  F014         	goto	u3500
 12042   0029C6                     u3501:
 12043   0029C6  EFE9  F014         	goto	l1264
 12044   0029CA                     u3500:
 12045   0029CA                     l3972:
 12046   0029CA  0E01               	movlw	1
 12047   0029CC  6E31               	movwf	___fldiv@aexp^0,c
 12048   0029CE  EFF2  F014         	goto	l1263
 12049   0029D2                     l1264:
 12050   0029D2  A019               	btfss	___fldiv@b^0,0,c
 12051   0029D4  EFEE  F014         	goto	u3511
 12052   0029D8  EFF0  F014         	goto	u3510
 12053   0029DC                     u3511:
 12054   0029DC  EFF2  F014         	goto	l1263
 12055   0029E0                     u3510:
 12056   0029E0  EFE5  F014         	goto	l3972
 12057   0029E4                     l1263:
 12058   0029E4  5031               	movf	___fldiv@aexp^0,w,c
 12059   0029E6  B4D8               	btfsc	status,2,c
 12060   0029E8  EFF8  F014         	goto	u3521
 12061   0029EC  EFFA  F014         	goto	u3520
 12062   0029F0                     u3521:
 12063   0029F0  EF1E  F015         	goto	l3984
 12064   0029F4                     u3520:
 12065   0029F4  0E01               	movlw	1
 12066   0029F6  2619               	addwf	___fldiv@b^0,f,c
 12067   0029F8  0E00               	movlw	0
 12068   0029FA  221A               	addwfc	(___fldiv@b+1)^0,f,c
 12069   0029FC  221B               	addwfc	(___fldiv@b+2)^0,f,c
 12070   0029FE  221C               	addwfc	(___fldiv@b+3)^0,f,c
 12071   002A00  A01C               	btfss	(___fldiv@b+3)^0,0,c
 12072   002A02  EF05  F015         	goto	u3531
 12073   002A06  EF07  F015         	goto	u3530
 12074   002A0A                     u3531:
 12075   002A0A  EF1E  F015         	goto	l3984
 12076   002A0E                     u3530:
 12077   002A0E  C019  F021         	movff	___fldiv@b,??___fldiv
 12078   002A12  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 12079   002A16  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 12080   002A1A  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 12081   002A1E  3424               	rlcf	(??___fldiv+3)^0,w,c
 12082   002A20  3224               	rrcf	(??___fldiv+3)^0,f,c
 12083   002A22  3223               	rrcf	(??___fldiv+2)^0,f,c
 12084   002A24  3222               	rrcf	(??___fldiv+1)^0,f,c
 12085   002A26  3221               	rrcf	??___fldiv^0,f,c
 12086   002A28  C021  F019         	movff	??___fldiv,___fldiv@b
 12087   002A2C  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 12088   002A30  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 12089   002A34  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 12090   002A38  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 12091   002A3A  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 12092   002A3C                     l3984:
 12093   002A3C  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12094   002A3E  EF29  F015         	goto	u3541
 12095   002A42  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12096   002A44  E108               	bnz	u3540
 12097   002A46  282A               	incf	___fldiv@new_exp^0,w,c
 12098   002A48  A0D8               	btfss	status,0,c
 12099   002A4A  EF29  F015         	goto	u3541
 12100   002A4E  EF2B  F015         	goto	u3540
 12101   002A52                     u3541:
 12102   002A52  EF36  F015         	goto	l3988
 12103   002A56                     u3540:
 12104   002A56  0E00               	movlw	0
 12105   002A58  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12106   002A5A  682A               	setf	___fldiv@new_exp^0,c
 12107   002A5C  0E00               	movlw	0
 12108   002A5E  6E19               	movwf	___fldiv@b^0,c
 12109   002A60  0E00               	movlw	0
 12110   002A62  6E1A               	movwf	(___fldiv@b+1)^0,c
 12111   002A64  0E00               	movlw	0
 12112   002A66  6E1B               	movwf	(___fldiv@b+2)^0,c
 12113   002A68  0E00               	movlw	0
 12114   002A6A  6E1C               	movwf	(___fldiv@b+3)^0,c
 12115   002A6C                     l3988:
 12116   002A6C  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12117   002A6E  EF43  F015         	goto	u3550
 12118   002A72  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12119   002A74  E106               	bnz	u3551
 12120   002A76  042A               	decf	___fldiv@new_exp^0,w,c
 12121   002A78  B0D8               	btfsc	status,0,c
 12122   002A7A  EF41  F015         	goto	u3551
 12123   002A7E  EF43  F015         	goto	u3550
 12124   002A82                     u3551:
 12125   002A82  EF51  F015         	goto	l3992
 12126   002A86                     u3550:
 12127   002A86  0E00               	movlw	0
 12128   002A88  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12129   002A8A  0E00               	movlw	0
 12130   002A8C  6E2A               	movwf	___fldiv@new_exp^0,c
 12131   002A8E  0E00               	movlw	0
 12132   002A90  6E19               	movwf	___fldiv@b^0,c
 12133   002A92  0E00               	movlw	0
 12134   002A94  6E1A               	movwf	(___fldiv@b+1)^0,c
 12135   002A96  0E00               	movlw	0
 12136   002A98  6E1B               	movwf	(___fldiv@b+2)^0,c
 12137   002A9A  0E00               	movlw	0
 12138   002A9C  6E1C               	movwf	(___fldiv@b+3)^0,c
 12139   002A9E  0E00               	movlw	0
 12140   002AA0  6E29               	movwf	___fldiv@sign^0,c
 12141   002AA2                     l3992:
 12142   002AA2  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 12143   002AA6  A030               	btfss	___fldiv@bexp^0,0,c
 12144   002AA8  EF58  F015         	goto	u3561
 12145   002AAC  EF5A  F015         	goto	u3560
 12146   002AB0                     u3561:
 12147   002AB0  EF5D  F015         	goto	l3998
 12148   002AB4                     u3560:
 12149   002AB4  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12150   002AB6  EF5E  F015         	goto	l4000
 12151   002ABA                     l3998:
 12152   002ABA  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12153   002ABC                     l4000:
 12154   002ABC  90D8               	bcf	status,0,c
 12155   002ABE  3030               	rrcf	___fldiv@bexp^0,w,c
 12156   002AC0  6E1C               	movwf	(___fldiv@b+3)^0,c
 12157   002AC2  EF14  F014         	goto	l3914
 12158   002AC6                     l1250:
 12159   002AC6  0012               	return		;funcret
 12160   002AC8                     __end_of___fldiv:
 12161                           	callstack 0
 12162                           
 12163 ;; *************** function _HighISR *****************
 12164 ;; Defined at:
 12165 ;;		line 24 in file "interrupts.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;		None
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, status,2
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12183 ;;Total ram usage:        0 bytes
 12184 ;; Hardware stack levels used: 1
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		Interrupt level 2
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	intcode
 12193   000008                     __pintcode:
 12194                           	callstack 0
 12195   000008                     _HighISR:
 12196                           	callstack 22
 12197                           
 12198                           ;incstack = 0
 12199   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12200   00000A                     
 12201                           ;interrupts.c: 26: if (PIR0bits.TMR0IF){
 12202   00000A  010E               	movlb	14	; () banked
 12203   00000C  AB33               	btfss	51,5,b	;volatile
 12204   00000E  EF0B  F000         	goto	i2u445_41
 12205   000012  EF0D  F000         	goto	i2u445_40
 12206   000016                     i2u445_41:
 12207   000016  EF15  F000         	goto	i2l270
 12208   00001A                     i2u445_40:
 12209   00001A                     
 12210                           ; BSR set to: 14
 12211                           ;interrupts.c: 27:         lost_flag=1;
 12212   00001A  0E00               	movlw	0
 12213   00001C  0100               	movlb	0	; () banked
 12214   00001E  6FF3               	movwf	(_lost_flag+1)& (0+255),b
 12215   000020  0E01               	movlw	1
 12216   000022  6FF2               	movwf	_lost_flag& (0+255),b
 12217   000024                     
 12218                           ; BSR set to: 0
 12219                           ;interrupts.c: 28:         PIR0bits.TMR0IF=0;
 12220   000024  010E               	movlb	14	; () banked
 12221   000026  9B33               	bcf	51,5,b	;volatile
 12222   000028                     
 12223                           ; BSR set to: 14
 12224                           ;interrupts.c: 29:         PIE0bits.TMR0IE = 0;
 12225   000028  9B29               	bcf	41,5,b	;volatile
 12226   00002A                     i2l270:
 12227                           
 12228                           ; BSR set to: 14
 12229   00002A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12230   00002C  0011               	retfie		f
 12231   00002E                     __end_of_HighISR:
 12232                           	callstack 0
 12233                           
 12234                           	psect	rparam
 12235   000000                     
 12236                           	psect	temp
 12237   00005F                     btemp:
 12238                           	callstack 0
 12239   00005F                     	ds	1
 12240   000000                     int$flags	set	btemp
 12241   000000                     wtemp8	set	btemp+1
 12242   000000                     ttemp5	set	btemp+1
 12243   000000                     ttemp6	set	btemp+4
 12244   000000                     ttemp7	set	btemp+8
 12245                           
 12246                           	psect	idloc
 12247                           
 12248                           ;Config register IDLOC0 @ 0x200000
 12249                           ;	unspecified, using default values
 12250   200000                     	org	2097152
 12251   200000  0FFF               	dw	4095
 12252                           
 12253                           ;Config register IDLOC1 @ 0x200002
 12254                           ;	unspecified, using default values
 12255   200002                     	org	2097154
 12256   200002  0FFF               	dw	4095
 12257                           
 12258                           ;Config register IDLOC2 @ 0x200004
 12259                           ;	unspecified, using default values
 12260   200004                     	org	2097156
 12261   200004  0FFF               	dw	4095
 12262                           
 12263                           ;Config register IDLOC3 @ 0x200006
 12264                           ;	unspecified, using default values
 12265   200006                     	org	2097158
 12266   200006  0FFF               	dw	4095
 12267                           
 12268                           ;Config register IDLOC4 @ 0x200008
 12269                           ;	unspecified, using default values
 12270   200008                     	org	2097160
 12271   200008  0FFF               	dw	4095
 12272                           
 12273                           ;Config register IDLOC5 @ 0x20000A
 12274                           ;	unspecified, using default values
 12275   20000A                     	org	2097162
 12276   20000A  0FFF               	dw	4095
 12277                           
 12278                           ;Config register IDLOC6 @ 0x20000C
 12279                           ;	unspecified, using default values
 12280   20000C                     	org	2097164
 12281   20000C  0FFF               	dw	4095
 12282                           
 12283                           ;Config register IDLOC7 @ 0x20000E
 12284                           ;	unspecified, using default values
 12285   20000E                     	org	2097166
 12286   20000E  0FFF               	dw	4095
 12287                           
 12288                           	psect	config
 12289                           
 12290                           ;Config register CONFIG1L @ 0x300000
 12291                           ;	External Oscillator mode Selection bits
 12292                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12293                           ;	Power-up default value for COSC bits
 12294                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12295   300000                     	org	3145728
 12296   300000  AA                 	db	170
 12297                           
 12298                           ;Config register CONFIG1H @ 0x300001
 12299                           ;	unspecified, using default values
 12300                           ;	Clock Out Enable bit
 12301                           ;	CLKOUTEN = 0x1, unprogrammed default
 12302                           ;	Clock Switch Enable bit
 12303                           ;	CSWEN = 0x1, unprogrammed default
 12304                           ;	Fail-Safe Clock Monitor Enable bit
 12305                           ;	FCMEN = 0x1, unprogrammed default
 12306   300001                     	org	3145729
 12307   300001  FF                 	db	255
 12308                           
 12309                           ;Config register CONFIG2L @ 0x300002
 12310                           ;	unspecified, using default values
 12311                           ;	Master Clear Enable bit
 12312                           ;	MCLRE = 0x1, unprogrammed default
 12313                           ;	Power-up Timer Enable bit
 12314                           ;	PWRTE = 0x1, unprogrammed default
 12315                           ;	Low-power BOR enable bit
 12316                           ;	LPBOREN = 0x1, unprogrammed default
 12317                           ;	Brown-out Reset Enable bits
 12318                           ;	BOREN = 0x3, unprogrammed default
 12319   300002                     	org	3145730
 12320   300002  FF                 	db	255
 12321                           
 12322                           ;Config register CONFIG2H @ 0x300003
 12323                           ;	unspecified, using default values
 12324                           ;	Brown Out Reset Voltage selection bits
 12325                           ;	BORV = 0x3, unprogrammed default
 12326                           ;	ZCD Disable bit
 12327                           ;	ZCD = 0x1, unprogrammed default
 12328                           ;	PPSLOCK bit One-Way Set Enable bit
 12329                           ;	PPS1WAY = 0x1, unprogrammed default
 12330                           ;	Stack Full/Underflow Reset Enable bit
 12331                           ;	STVREN = 0x1, unprogrammed default
 12332                           ;	Debugger Enable bit
 12333                           ;	DEBUG = 0x1, unprogrammed default
 12334                           ;	Extended Instruction Set Enable bit
 12335                           ;	XINST = 0x1, unprogrammed default
 12336   300003                     	org	3145731
 12337   300003  FF                 	db	255
 12338                           
 12339                           ;Config register CONFIG3L @ 0x300004
 12340                           ;	WDT Period Select bits
 12341                           ;	WDTCPS = 0x1F, unprogrammed default
 12342                           ;	WDT operating mode
 12343                           ;	WDTE = OFF, WDT Disabled
 12344   300004                     	org	3145732
 12345   300004  9F                 	db	159
 12346                           
 12347                           ;Config register CONFIG3H @ 0x300005
 12348                           ;	unspecified, using default values
 12349                           ;	WDT Window Select bits
 12350                           ;	WDTCWS = 0x7, unprogrammed default
 12351                           ;	WDT input clock selector
 12352                           ;	WDTCCS = 0x7, unprogrammed default
 12353   300005                     	org	3145733
 12354   300005  FF                 	db	255
 12355                           
 12356                           ;Config register CONFIG4L @ 0x300006
 12357                           ;	unspecified, using default values
 12358                           ;	Write Protection Block 0
 12359                           ;	WRT0 = 0x1, unprogrammed default
 12360                           ;	Write Protection Block 1
 12361                           ;	WRT1 = 0x1, unprogrammed default
 12362                           ;	Write Protection Block 2
 12363                           ;	WRT2 = 0x1, unprogrammed default
 12364                           ;	Write Protection Block 3
 12365                           ;	WRT3 = 0x1, unprogrammed default
 12366                           ;	Write Protection Block 3
 12367                           ;	WRT4 = 0x1, unprogrammed default
 12368                           ;	Write Protection Block 3
 12369                           ;	WRT5 = 0x1, unprogrammed default
 12370                           ;	Write Protection Block 3
 12371                           ;	WRT6 = 0x1, unprogrammed default
 12372                           ;	Write Protection Block 3
 12373                           ;	WRT7 = 0x1, unprogrammed default
 12374   300006                     	org	3145734
 12375   300006  FF                 	db	255
 12376                           
 12377                           ;Config register CONFIG4H @ 0x300007
 12378                           ;	unspecified, using default values
 12379                           ;	Configuration Register Write Protection bit
 12380                           ;	WRTC = 0x1, unprogrammed default
 12381                           ;	Boot Block Write Protection bit
 12382                           ;	WRTB = 0x1, unprogrammed default
 12383                           ;	Data EEPROM Write Protection bit
 12384                           ;	WRTD = 0x1, unprogrammed default
 12385                           ;	Scanner Enable bit
 12386                           ;	SCANE = 0x1, unprogrammed default
 12387                           ;	Low Voltage Programming Enable bit
 12388                           ;	LVP = 0x1, unprogrammed default
 12389   300007                     	org	3145735
 12390   300007  FF                 	db	255
 12391                           
 12392                           ;Config register CONFIG5L @ 0x300008
 12393                           ;	unspecified, using default values
 12394                           ;	UserNVM Program Memory Code Protection bit
 12395                           ;	CP = 0x1, unprogrammed default
 12396                           ;	DataNVM Memory Code Protection bit
 12397                           ;	CPD = 0x1, unprogrammed default
 12398   300008                     	org	3145736
 12399   300008  FF                 	db	255
 12400                           
 12401                           ;Config register CONFIG5H @ 0x300009
 12402                           ;	unspecified, using default values
 12403   300009                     	org	3145737
 12404   300009  FF                 	db	255
 12405                           
 12406                           ;Config register CONFIG6L @ 0x30000A
 12407                           ;	unspecified, using default values
 12408                           ;	Table Read Protection Block 0
 12409                           ;	EBTR0 = 0x1, unprogrammed default
 12410                           ;	Table Read Protection Block 1
 12411                           ;	EBTR1 = 0x1, unprogrammed default
 12412                           ;	Table Read Protection Block 2
 12413                           ;	EBTR2 = 0x1, unprogrammed default
 12414                           ;	Table Read Protection Block 3
 12415                           ;	EBTR3 = 0x1, unprogrammed default
 12416                           ;	Table Read Protection Block 4
 12417                           ;	EBTR4 = 0x1, unprogrammed default
 12418                           ;	Table Read Protection Block 5
 12419                           ;	EBTR5 = 0x1, unprogrammed default
 12420                           ;	Table Read Protection Block 6
 12421                           ;	EBTR6 = 0x1, unprogrammed default
 12422                           ;	Table Read Protection Block 7
 12423                           ;	EBTR7 = 0x1, unprogrammed default
 12424   30000A                     	org	3145738
 12425   30000A  FF                 	db	255
 12426                           
 12427                           ;Config register CONFIG6H @ 0x30000B
 12428                           ;	unspecified, using default values
 12429                           ;	Boot Block Table Read Protection bit
 12430                           ;	EBTRB = 0x1, unprogrammed default
 12431   30000B                     	org	3145739
 12432   30000B  FF                 	db	255
 12433                           tosu	equ	0xFFF
 12434                           tosh	equ	0xFFE
 12435                           tosl	equ	0xFFD
 12436                           stkptr	equ	0xFFC
 12437                           pclatu	equ	0xFFB
 12438                           pclath	equ	0xFFA
 12439                           pcl	equ	0xFF9
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           indf0	equ	0xFEF
 12447                           postinc0	equ	0xFEE
 12448                           postdec0	equ	0xFED
 12449                           preinc0	equ	0xFEC
 12450                           plusw0	equ	0xFEB
 12451                           fsr0h	equ	0xFEA
 12452                           fsr0l	equ	0xFE9
 12453                           wreg	equ	0xFE8
 12454                           indf1	equ	0xFE7
 12455                           postinc1	equ	0xFE6
 12456                           postdec1	equ	0xFE5
 12457                           preinc1	equ	0xFE4
 12458                           plusw1	equ	0xFE3
 12459                           fsr1h	equ	0xFE2
 12460                           fsr1l	equ	0xFE1
 12461                           bsr	equ	0xFE0
 12462                           indf2	equ	0xFDF
 12463                           postinc2	equ	0xFDE
 12464                           postdec2	equ	0xFDD
 12465                           preinc2	equ	0xFDC
 12466                           plusw2	equ	0xFDB
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    142     159
    BANK1           256      0     211
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2601$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2548$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2548$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_Backhalfblock
    _RetryMove->_Forwardhalfblock
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _fullSpeedAhead->_setMotorPWM
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  348262
                                             88 COMRAM     2     2      0
                                             32 BANK0    110   110      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  148921
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   24342
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   23734
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   17900
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   17900
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   17292
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   17292
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18204
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8096
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   24342
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8570
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            4     0      4   13188
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                   _Forwardhalfblock
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6594
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Backhalfblock                                        6     2      4    6442
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   23734
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7962
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9026
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   21363
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2864
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _Backhalfblock
       _fullSpeedBack
       _stop
     _Forwardhalfblock
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      66        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D3       7       82.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      44        0.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      57        0.0%
BITBIGSFRllllll     26      0       0      64        0.0%
BITBIGSFRllllll     20      0       0      49        0.0%
BITBIGSFRllllll     1E      0       0      51        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRhlllh      17      0       0      38        0.0%
BITBIGSFRhlhlh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      52        0.0%
BITBIGSFRhlhllh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      50        0.0%
BITBIGSFRllllll      B      0       0      62        0.0%
BITBIGSFRllllhl      8      0       0      47        0.0%
BITBIGSFRllllll      6      0       0      63        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRhllll       6      0       0      39        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      59        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllhh      2      0       0      45        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlhlll      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      61        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRlllllh      1      0       0      48        0.0%
BITBIGSFRlllhh       1      0       0      42        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     234      65        0.0%
DATA                 0      0     234       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 20:46:59 2023

               _color_read_Red 4958                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4908                   ___fldiv@sign 0029                _color_read_Blue 49F8  
                           l51 4956                             l60 4A46                             l45 4862  
                           l54 49A6                             l63 44A8                             l48 4D6C  
                           l57 49F6                             l66 2DF4                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 49A8  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 4DAA  
                          l140 4CAE                            l212 4DC2                            l143 4CDA  
                          l152 4DE6                            l161 4B60                            l209 4DAE  
                          l146 4D00                            l218 4C84                            l155 4DF0  
                          l500 40E2                            l149 4DFA                            l413 1DB4  
                          l158 4DDC                            l422 1E40                            l264 4DD0  
                          l532 4180                            l516 4044                            l508 3FA6  
                          l524 3E5E                            l541 466A                            l550 455C  
                          l535 46C2                            l391 199E                            l544 4610  
                          l553 45B6                            l538 471A                            l562 444A  
                          l571 47BE                            l547 4502                            l635 30A0  
                          l492 4286                            l556 4BDE                            l580 3CFE  
                          l565 48B4                            l629 3096                            l486 37C6  
                          l574 4810                            l662 4C3E                            l559 4C1C  
                          l583 3DB4                            l479 4208                            l568 4906  
                          l656 4D8C                            l577 4CD8                            l665 4C54  
                          l659 4D26                            l668 4D4C                            l933 3B38  
                          l782 365A                            l927 3F08                            l938 3B7E  
                          l795 392A                            _abs 4B62                            _pad 4288  
                          _rel 01B0                            wreg 000FE8                   ___flmul@aexp 0043  
                 ___flmul@bexp 0044                   ___flmul@sign 003E                   ___flmul@temp 0049  
                 ___flmul@prod 0045                Colour_decider@i 007A                           ?_abs 0013  
                         l1213 214C                           l1205 2302                           l1222 221C  
                         l1223 220A                           l1250 2AC6                           l1330 340E  
                         l1323 3376                           l1411 4BA0                           l1252 2926  
                         l1404 4A94                           l1261 296C                           l1238 4ADA  
                         l1326 34D2                           l1166 4374                           l1263 29E4  
                         l1255 28EA                           l1159 436C                           l1423 3C48  
                         l1431 4B1E                           l4000 2ABC                           l1264 29D2  
                         l1408 4B98                           l3200 3B92                           l1337 346A  
                         l1282 23C8                           l4010 2310                           l1434 4E02  
                         l3202 3BA4                           l1346 476C                           l1291 2636  
                         l1292 2624                           l4100 25E0                           l4020 2350  
                         l4012 231E                           l1196 2032                           l3220 430A  
                         l3212 4D28                           l3300 360A                           l3204 3BAE  
                         l1372 4300                           l1380 317C                           l1197 2020  
                         l4110 2652                           l4102 25EE                           l1286 272C  
                         l4030 2380                           l4022 2356                           l4014 2320  
                         l1198 1FE6                           l3230 4340                           l3222 431C  
                         l3214 4D44                           l3302 361A                           l3310 37CC  
                         l3206 3BCC                           l1391 331E                           l4120 26BC  
                         l4112 2660                           l4104 261C                           l4040 23B8  
                         l4032 2382                           l4024 2366                           l4016 2330  
                         l4008 2304                           l4200 33F6                           l3232 4356  
                         l3224 4324                           l3400 408E                           l3304 363A  
                         l3320 382C                           l3312 37DA                           l3208 3C02  
                         l3240 4ADC                           l1368 42AA                           l1289 25BE  
                         l1377 312E                           l4130 2712                           l4122 26D6  
                         l4114 268A                           l4050 2408                           l4042 23D8  
                         l4034 2392                           l4026 236C                           l4018 2340  
                         l4210 345A                           l4202 33F8                           l3234 435E  
                         l3226 432C                           l3218 4302                           l3250 3678  
                         l3402 409A                           l3410 3F2E                           l3330 38A2  
                         l3322 384A                           l3314 37FA                           l3242 4AE8  
                         l1299 26EE                           l1379 3136                           l4124 26F2  
                         l4132 2718                           l4108 2646                           l4116 268E  
                         l4060 2458                           l4052 2412                           l4044 23E8  
                         l4036 23A2                           l4028 2372                           l4140 4AA6  
                         l4220 34B2                           l4212 3478                           l4204 3404  
                         l3236 4360                           l3228 433A                           l3260 3742  
                         l3252 36CC                           l3404 40B2                           l3420 3F8E  
                         l3412 3F46                           l3500 4DDE                           l3340 390A  
                         l3332 38C2                           l3324 3852                           l3316 37FE  
                         l3308 37C8                           l3244 4AFA                           l4150 3ECC  
                         l4134 271C                           l4126 2702                           l4118 26A8  
                         l4070 249A                           l4062 2464                           l4054 2428  
                         l4038 23B2                           l4222 34C0                           l4214 347A  
                         l4206 3440                           l4310 0FDE                           l4302 0EFE  
                         l3238 4366                           l3262 3786                           l3254 36E0  
                         l3430 4138                           l3422 40E4                           l3406 40CA  
                         l3414 3F52                           l3510 4B36                           l3502 4DE2  
                         l3270 3506                           l3334 38D4                           l3326 3866  
                         l3318 380C                           l3246 4AFE                           l3350 42B6  
                         l1398 3A7A                           l4230 4A54                           l4152 3EDC  
                         l4144 3E60                           l4160 3A7C                           l4128 2710  
                         l4080 24FC                           l4072 24AA                           l4064 2472  
                         l4056 2434                           l4048 23FC                           l3600 1F50  
                         l4224 34C2                           l4216 347E                           l4208 344C  
                         l4400 1644                           l4312 1010                           l4304 0F50  
                         l3256 36E4                           l3248 365C                           l3424 4108  
                         l3432 4150                           l3416 3F5E                           l3408 3F0A  
                         l4240 4816                           l3520 4C2A                           l3512 4B5C  
                         l3504 4B22                           l3280 3548                           l3272 350A  
                         l3264 34D4                           l3328 3874                           l3336 38DA  
                         l3360 4B7C                           l3352 42CA                           l3344 4288  
                         l3440 30D6                           l4232 4A70                           l4154 3F00  
                         l4146 3E8E                           l4170 3B06                           l4162 3AAA  
                         l4090 25A4                           l4082 2518                           l4074 24C4  
                         l4066 247E                           l4058 244C                           l3610 1F64  
                         l3602 1F54                           l4138 4A96                           l4218 34A2  
                         l4410 165C                           l4330 1190                           l4322 1094  
                         l4314 1016                           l4306 0F82                           l3258 3726  
                         l3434 4168                           l3426 4120                           l3530 46C4  
                         l3370 3FE4                           l3418 3F76                           l3362 4CDA  
                         l4250 484E                           l4242 4820                           l3522 4C3A  
                         l3514 4B5E                           l3506 4B26                           l3290 35A2  
                         l3282 3566                           l3274 3518                           l3266 34D8  
                         l3338 38EA                           l3354 42CE                           l3346 4296  
                         l3450 314E                           l3442 30E6                           l4234 4A8C  
                         l4156 3F06                           l4148 3E9E                           l4172 3B18  
                         l4164 3ABA                           l4092 25AE                           l4084 2542  
                         l4076 24D4                           l4068 248E                           l3700 21B6  
                         l3620 1F78                           l3612 1F68                           l3604 1F58  
                         l4412 168E                           l4332 11A2                           l4340 134E  
                         l4324 10A8                           l4316 1032                           l4308 0F8A  
                         l3428 412C                           l3380 420A                           l3540 463E  
                         l3532 46D8                           l3372 3FF0                           l3524 466C  
                         l3364 4CEA                           l4260 4858                           l4252 4850  
                         l4244 4830                           l3508 4B2E                           l3292 35D0  
                         l3284 356E                           l3276 3538                           l3268 34E6  
                         l3356 42EC                           l3348 42A2                           l3460 3184  
                         l3452 3154                           l3444 3106                           l3436 30A2  
                         l4228 4A48                           l4174 3B26                           l4166 3AE8  
                         l4094 25BC                           l4086 2578                           l4078 24F0  
                         l3710 21DE                           l3702 21BA                           l3630 1FB2  
                         l3622 1F7C                           l3614 1F6C                           l3606 1F5C  
                         l3550 1E50                           l4190 339C                           l4182 3322  
                         l4430 1766                           l4414 16C0                           l4406 1650  
                         l4342 1380                           l4350 13BE                           l4334 121E  
                         l4326 1148                           l4318 1088                           l4502 4DC4  
                         l3382 420E                           l3390 4256                           l3534 46EE  
                         l3374 3FFC                           l3366 3FA8                           l4510 4D8A  
                         l3526 4680                           l4262 485A                           l4254 4852  
                         l4246 483A                           l4238 4812                           l3542 44AA  
                         l3518 4C1E                           l4270 444C                           l3294 35F0  
                         l3286 3582                           l3278 353C                           l3358 4B62  
                         l3198 3B80                           l3470 3222                           l3462 318E  
                         l3454 3164                           l3446 3122                           l3438 30C2  
                         l4176 3B76                           l4168 3AF8                           l4096 25CE  
                         l4088 2586                           l3720 2238                           l3712 21EC  
                         l3704 21CA                           l3640 2004                           l3632 1FCE  
                         l3624 1F80                           l3616 1F70                           l3608 1F60  
                         l3560 1E90                           l3552 1E5E                           l4184 3332  
                         l4432 1798                           l4440 17CE                           l4352 13F0  
                         l4360 142E                           l4344 13B2                           l4336 127A  
                         l4328 1158                           l3392 426E                           l3384 4226  
                         l3536 4612                           l3368 3FCC                           l3376 4014  
                         l4504 4D6E                           l3528 4696                           l4264 485C  
                         l4256 4854                           l4248 4844                           l4280 2C90  
                         l4272 2AC8                           l3544 44BE                           l4600 306A  
                         l4520 419A                           l4512 4182                           l3800 4958  
                         l3296 35F2                           l3288 3590                           l3480 32E8  
                         l3464 3194                           l3472 3286                           l3456 3170  
                         l3448 313E                           l4178 3B7C                           l4098 25DC  
                         l3730 22A2                           l3722 2246                           l3714 2202  
                         l3706 21CC                           l3650 2050                           l3642 2012  
                         l3634 1FDE                           l3618 1F74                           l3626 1F84  
                         l3570 1EC2                           l3562 1E92                           l3554 1E60  
                         l4194 33B0                           l4186 3340                           l4442 1800  
                         l4426 1702                           l4362 1460                           l4354 1422  
                         l4338 12F6                           l4290 0E5C                           l3386 4232  
                         l3538 4626                           l3394 4046                           l3378 402C  
                         l4506 4D76                           l3490 4DF6                           l4266 485E  
                         l4258 4856                           l4282 2D28                           l4274 2B94  
                         l3546 44D6                           l4602 3096                           l4530 41E4  
                         l4522 41B0                           l4514 4194                           l3802 499E  
                         l3298 3604                           l3482 32EE                           l3474 32A0  
                         l3466 3216                           l3458 3178                           l3900 27D0  
                         l3740 22DC                           l3732 22C2                           l3724 2280  
                         l3660 2090                           l3708 21DA                           l3644 2014  
                         l3636 1FF4                           l3628 1F88                           l3580 1EEA  
                         l3572 1EC4                           l3556 1E70                           l3564 1E9A  
                         l3548 1E44                           l4196 33B8                           l4188 3386  
                         l4444 1832                           l4428 1734                           l4364 1492  
                         l4292 0E8C                           l3388 423E                           l3396 406A  
                         l4508 4D80                           l3492 4DD4                           l4268 4860  
                         l4284 2D5C                           l4276 2BC8                           l4540 4206  
                         l4532 41EE                           l4524 41B4                           l4516 4196  
                         l3812 49F8                           l3820 4DBE                           l3484 32FE  
                         l3476 32BE                           l3468 321C                           l4700 1960  
                         l3910 2810                           l3902 27E0                           l3742 22E2  
                         l3734 22C6                           l3718 222C                           l3726 2282  
                         l3670 20BA                           l3662 209C                           l3654 2064  
                         l3646 201E                           l3638 2000                           l3590 1F24  
                         l3582 1EFA                           l3574 1ECA                           l3566 1EAA  
                         l3558 1E80                           l4198 33C4                           l4462 18EC  
                         l4446 186C                           l4454 18AA                           l4390 15C4  
                         l4382 1554                           l4366 14CC                           l4374 150A  
                         l4294 0EC0                           l4286 0E26                           l3398 4082  
                         l3822 4504                           l3494 4DD8                           l4278 2C5C  
                         l4542 4D02                           l3830 476E                           l4534 41F0  
                         l4526 41D8                           l4518 4198                           l4470 4D8E  
                         l3814 4A3E                           l3806 49A8                           l3478 32D8  
                         l3750 392C                           l4550 472E                           l4710 1980  
                         l4702 1964                           ?_pad 0011                           l3912 2820  
                         l3920 2840                           l3904 27E2                           l3744 22F0  
                         l3736 22D4                           l3728 2292                           l3680 212C  
                         l3664 20A0                           l3656 2074                           l3648 2040  
                         l3672 20C0                           l3592 1F36                           l3584 1F0A  
                         l3576 1ED8                           l3568 1EB0                           l4376 1548  
                         l4296 0EF4                           l4288 0E50                           l3824 4518  
                         l4560 4864                           l3488 4DF2                           l3496 4DE8  
                         l4544 4D04                           l3832 43E6                           l3840 3DDA  
                         l4536 41FA                           l4528 41E2                           l4480 4DA8  
                         l4472 4D98                           l3808 49EE                           l3760 3982  
                         l3752 3950                           l4552 4736                           l4800 1C3E  
                         l4720 19C4                           l4712 198A                           l4704 1968  
                         l3930 287E                           l3922 2850                           l3914 2828  
                         l3906 27EA                           l3746 22F2                           l3738 22DA  
                         l3690 2186                           l3674 20E6                           l3682 213C  
                         l3666 20AE                           l3658 2082                           l3594 1F44  
                         l3586 1F0C                           l3578 1EDA                           l4466 18F8  
                         l4386 1560                           l4562 48B6                           l3826 4530  
                         l3498 4DEC                           l4546 4D0A                           l3834 4BE0  
                         l3850 3E3A                           l3842 3DF2                           l4538 41FC  
                         l4474 4D9A                           l3818 4DAE                           l4482 4C56  
                         l3770 3A40                           l3762 399E                           l3754 395E  
                         l4554 473E                           l4810 1C84                           l4802 1C42  
                         l4730 1A04                           l4722 19C8                           l4714 1992  
                         l4706 1970                           l3940 28C6                           l3932 288E  
                         l3924 2850                           l3916 282C                           l3908 27FA  
                         l3692 2190                           l3684 2162                           l3676 211A  
                         l3668 20B0                           l3596 1F48                           l3588 1F14  
                         l4388 1592                           l3860 455E                           l4564 4CB0  
                         l3780 4C86                           l3836 47C0                           l3828 4BA2  
                         l3852 3E52                           l3844 3DFE                           l4580 2EBC  
                         l4572 2E10                           l4476 4DA4                           l4484 4C5A  
                         l3764 39BA                           l3756 396C                           l4556 475A  
                         l4548 471C                           l4820 1CCA                           l4812 1C88  
                         l4804 1C58                           l4740 1A54                           l4732 1A22  
                         l4724 19D0                           l4716 199A                           l4708 1978  
                         l4660 1906                           l3950 2914                           l3942 28DA  
                         l3934 289E                           l3870 272E                           l3694 219E  
                         l3686 2172                           l3678 211C                           l3598 1F4C  
                         l4398 1606                           l3854 45B8                           l3862 4572  
                         l3790 4C9C                           l3782 4C90                           l3846 3E0A  
                         l3838 3DB6                           l4590 2F94                           l4582 2EE8  
                         l4574 2E3E                           l4566 2DF6                           l4478 4DA6  
                         l4486 4C68                           l3766 3A10                           l3758 3972  
                         l3774 3A52                           l4830 1D10                           l4822 1CCE  
                         l4806 1C6C                           l4814 1C9E                           l4750 1AB6  
                         l4742 1A70                           l4734 1A28                           l4726 19E4  
                         l4718 19AC                           l4670 1922                           l4662 190A  
                         l3960 295C                           l3952 2924                           l3944 28E8  
                         l3936 28AE                           l3928 2864                           l3880 276A  
                         l3872 273A                           l3696 21A0                           l3856 45CC  
                         l3864 458A                           l3784 4C96                           l3792 4D50  
                         l3848 3E22                           l4592 2FBE                           l4584 2F12  
                         l4576 2E66                           l4568 2DFE                           l4488 4C6C  
                         l4840 1D68                           l4832 1D14                           l4816 1CB2  
                         l4824 1CE4                           l4808 1C80                           l4760 1B02  
                         l4752 1ABE                           l4744 1A8C                           l4736 1A2C  
                         l4728 19F0                           l4680 192E                           l4672 1924  
                         l4664 190E                           l3970 299C                           l3962 296A  
                         l3954 2936                           l3946 28F4                           l3938 28B6  
                         l3890 279A                           l3882 277A                           l3874 2748  
                         l3698 21AE                           l3858 45E4                           l3786 4C98  
                         l3866 3C4A                           l4594 2FEA                           l4586 2F3E  
                         l4578 2E92                           l3794 4908                           l4850 1DD0  
                         l4842 1D7C                           l4826 1CF8                           l4834 1D2A  
                         l4818 1CC6                           l4770 1B6C                           l4762 1B34  
                         l4746 1AA6                           l4754 1AD6                           l4738 1A40  
                         l4690 193E                           l4682 1930                           l4674 1926  
                         l4666 1912                           l4658 1902                           l3980 2A0E  
                         l3972 29CA                           l3956 294C                           l3964 297C  
                         l3948 2912                           l3892 27A0                           l3884 277C  
                         l3876 274A                           l3788 4C9A                           l3868 3D00  
                         l4596 3014                           l4588 2F68                           l3796 494E  
                         l4852 1DEA                           l4844 1DA6                           l4836 1D3E  
                         l4828 1D0C                           l4780 1BB2                           l4772 1B70  
                         l4764 1B40                           l4756 1AF4                           l4748 1AAE  
                         l4692 1942                           l4684 1932                           l4676 1928  
                         l4668 1916                           l3990 2A86                           l3982 2A38  
                         l3966 298A                           l3958 2952                           l3894 27AE  
                         l3878 275A                           l3886 2784                           l4598 3040  
                         l4854 1DFE                           l4838 1D56                           l4790 1BF8  
                         l4782 1BB6                           l4766 1B54                           l4774 1B86  
                         l4758 1AFC                           l4846 1DB8                           l4862 1E2C  
                         l4694 194A                           l4686 1934                           l4678 192A  
                         l3992 2AA2                           l3976 29F4                           l3984 2A3C  
                         l3968 298E                           l3896 27B0                           l3888 2794  
                         l4856 1E00                           l4848 1DCC                           l4792 1BFC  
                         l4776 1B9A                           l4784 1BCC                           l4768 1B68  
                         l4696 1952                           l4688 193A                           l3994 2AA6  
                         l3986 2A56                           l3978 2A00                           l3898 27C0  
                         l4858 1E14                           l4786 1BE0                           l4794 1C12  
                         l4778 1BAE                           l4698 195A                           l3996 2AB4  
                         l3988 2A6C                           l4796 1C26                           l4788 1BF4  
                         l3998 2ABA                           l4798 1C3A                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           u3000 1FCC  
                         u3010 1FF4                           u3011 1FF0                           u3100 212C  
                         u3020 2012                           u3101 2128                           u3021 200E  
                         u3110 2162                           u3030 2032                           u3111 215E  
                         u3031 202E                           u3200 222C                           u3120 2172  
                         u3040 2040                           u4000 10A8                           u2400 3BCC  
                 _BAUD4CONbits 000EE9                           u3201 2228                           u3121 216E  
                         u3041 203C                           u4001 10A4                           u2401 3BC8  
                         u3210 2246                           u3130 219E                           u3050 2050  
                         u4010 1158                           u2410 3C02                           u3211 2242  
                         u3131 219A                           u3051 204C                           u4011 1154  
                         u2411 3BFE                           u3220 2280                           u3140 21AE  
                         u3060 2082                           u4100 1506                           u4020 11A2  
                         u2420 431C                           u3300 39BA                           u3221 227C  
                         u3141 21AA                           u3061 207E                           u4101 1502  
                         u4021 119E                           u2421 4318                           u2501 3542  
                         u3301 39B6                           u3230 2292                           u3150 21CA  
                         u3070 2090                           u4110 1548                           u4030 1380  
                         u2430 433A                           u3310 4DBE                           u2510 3566  
                         u3231 228E                           u3151 21C6                           u3071 208C  
                         u4111 1544                           u4031 137C                           u2431 4336  
                         u3311 4DBA                           u2511 3562                           u3400 2810  
                         u3240 22A2                           u3160 21DA                           u3080 20AE  
                         u4200 1766                           u4120 1592                           u4040 13B2  
                         u2440 4356                           u3320 3E3A                           u2520 3590  
                         u2600 38EA                           u3401 280C                           u3241 229E  
                         u3161 21D6                           u3081 20AA                           u4201 1762  
                         u4121 158E                           u4041 13AE                           u2441 4352  
                         u3321 3E36                           u2521 358C                           u2601 38E6  
                         u3410 2850                           u3250 22C2                           u3170 21EC  
                         u3090 20E6                           u4210 1798                           u4130 15C4  
                         u4050 13F0                           u3330 3E52                           u2530 35D0  
                         u2450 4B1E                           u2610 4296                           _T2PR 000FBC  
                         u3411 284C                           u3251 22BE                           u3171 21E8  
                         u3091 20E2                           u4211 1794                           u4131 15C0  
                         u4051 13EC                           u3331 3E4E                           u2531 35CC  
                         u2451 4B1A                           u2611 4292                           u3500 29CA  
                         u3420 28C6                           u3340 2748                           u3260 22D4  
                         u3180 2202                           u4220 17CA                           u4140 1602  
                         u4060 1422                           u2460 3678                           u2700 40CA  
                         u2540 361A                           u2380 3B92                           u2620 42EC  
                         u3501 29C6                           u3421 28C2                           u3341 2744  
                         u3261 22D0                           u3181 21FE                           u4221 17C6  
                         u4141 15FE                           u4061 141E                           u2461 3674  
                         u2701 40C6                           u2541 3616                           u2381 3B8E  
                         u2621 42E8                           u3510 29E0                           u3430 28E8  
                         u3350 275A                           u3270 22F0                           u3190 2218  
                         u4230 1800                           u4150 1644                           u4070 1460  
                         u2470 3742                           u2710 40E2                           u2550 37DA  
                         u2630 4B7C                           u2390 3BA4                           u3511 29DC  
                         u3431 28E4                           u3351 2756                           u3271 22EC  
                         u3191 2214                           u4231 17FC                           u4151 1640  
                         u4071 145C                           u2471 373E                           u2711 40DE  
                         u2551 37D6                           u2631 4B78                           u2391 3BA0  
                         u3520 29F4                           u3440 2912                           u3360 276A  
                         u3600 2380                           u4240 1832                           u4160 168E  
                         u4080 1492                           u2720 3F8E                           u2640 4CEA  
                         u4320 2E0C                           u2480 34E6                           u2560 380C  
                         u2800 314E                           u3280 3950                           u3521 29F0  
                         u3441 290E                           u3361 2766                           u3601 237C  
                         u4241 182E                           u4161 168A                           u4081 148E  
                         u2721 3F8A                           u2641 4CE6                           u4321 2E08  
                         u2481 34E2                           u2561 3808                           u2801 314A  
                         u3281 394C                           u3530 2A0E                           u3450 2936  
                         u3370 27AE                           u3610 2392                           u4250 186C  
                         u4170 16C0                           u4090 14CC                           u2730 3FA6  
                         u2650 4D00                           u4330 2E66                           u2490 3518  
                         u2570 384A                           u2810 3164                           u3290 399E  
                         u3531 2A0A                           u3451 2932                           u3371 27AA  
                         u3611 238E                           u4251 1868                           u4171 16BC  
                         u4091 14C8                           u2731 3FA2                           u2651 4CFC  
                         u4331 2E62                           u2491 3514                           u2571 3846  
                         u2811 3160                           u3291 399A                           u3540 2A56  
                         u3460 294C                           u3380 27C0                           u3700 2632  
                         u3620 23A2                           u2900 1E70                           u4260 18A6  
                         u4180 16FE                           u2740 4168                           u2660 402C  
                         u4340 2EBC                           u2580 3874                           u2820 32A0  
                         u4500 1B54                           u3541 2A52                           u3461 2948  
                         u3381 27BC                           u3701 262E                           u3621 239E  
                         u2901 1E6C                           u4261 18A2                           u4181 16FA  
                         u2741 4164                           u2661 4028                           u4341 2EB8  
                         u2581 3870                           u2821 329C                           u4501 1B50  
                         u3550 2A86                           u3470 296A                           u3390 27D0  
                         u3710 2646                           u3630 23D8                           u2910 1E80  
                         u4270 18E8                           u4190 1734                           u2750 4180  
                         u2670 4044                           u4350 2F12                           u2590 38A2  
                         u2830 32BE                           u4510 1B9A                           u3551 2A82  
                         u3471 2966                           u3391 27CC                           u3711 2642  
                         u3631 23D4                           u2911 1E7C                           u4271 18E4  
                         u4191 1730                           u2751 417C                           u2671 4040  
                         u4351 2F0E                           u2591 389E                           u2831 32BA  
                         u4511 1B96                           u3560 2AB4                           u3480 298A  
                         u3800 3AE8                           u3720 2660                           u3640 23E8  
                         u2920 1EC2                           u2680 426E                           u4360 2F68  
                         u4280 4C84                           u2840 32D8                           u2760 30D2  
                         u4600 1E40                           u4520 1BE0                           u3561 2AB0  
                         u3481 2986                           u3801 3AE4                           u3721 265C  
                         u3641 23E4                           u2921 1EBE                           u2681 426A  
                         u4361 2F64                           u4281 4C80                           u2841 32D4  
                         u2761 30CC                           u4601 1E3C                           u4521 1BDC  
                         u3490 299C                           u3810 3B06                           u3730 26A8  
                         u3650 2562                           u3570 231E                           u2930 1ED8  
                         u2690 4286                           u4370 2FBE                           u2850 32E8  
                         u2770 30D4                           u4530 1C26                           u3491 2998  
                         u3811 3B02                           u3731 26A4                           u3571 231A  
                         u2931 1ED4                           u2691 4282                           u4371 2FBA  
                         u2851 32E4                           u4531 1C22                           u3820 3B26  
                         u3740 26D6                           u3660 25BC                           u3580 2330  
                         u2940 1EEA                           u3900 346A                           u4380 3014  
                         u2860 4B4A                           u2780 30E6                           u4540 1C6C  
                         u4460 19AC                           u3821 3B22                           u3741 26D2  
                         u3661 25B8                           u3581 232C                           u2941 1EE6  
                         u3901 3466                           u4381 3010                           u2861 4B42  
                         u2781 30E2                           u4541 1C68                           u4461 19A8  
                         u3830 3B76                           u3750 2710                           u3670 25DC  
                         u3590 2340                           u2950 1EFA                           u3910 3478  
                         u4390 306A                           u2790 3122                           u4550 1CB2  
                         u4470 1A22                           u3831 3B72                           u3751 270C  
                         u3671 25D8                           u3655 2558                           u3591 233C  
                         u2951 1EF6                           u3911 3474                           u4391 3066  
                         u2791 311E                           u4551 1CAE                           u4471 1A1E  
                         u3760 3E8E                           u3680 25EE                           u2960 1F36  
                         u3920 34B2                           u3840 3332                           u2880 4C54  
                         u4560 1CF8                           u4480 1AA6                           u3761 3E8A  
                         u3681 25EA                           u2961 1F32                           u3921 34AE  
                         u3841 332E                           u2881 4C50                           u4561 1CF4  
                         u4481 1AA2                           u3770 3ECC                           u3690 261C  
                         u2970 1F44                           u2890 1E5E                           u3930 34C0  
                         u3850 3340                           u4570 1D3E                           u4490 1AF4  
                         u3771 3EC8                           u3691 2618                           u2971 1F40  
                         u2891 1E5A                           u3931 34BC                           u3851 333C  
                         u4571 1D3A                           u4491 1AF0                           u3780 3F00  
                         u2980 1FB2                           u3860 339C                           u3940 4A8C  
                         u4580 1D68                           u3781 3EFC                           u2981 1FAE  
                         u3861 3398                           u3941 4A88                           u4581 1D64  
                         u3790 3AAA                           u2990 1FCA                           u3870 33F2  
                         u2878 4B4C                           u4590 1DCC                           u3791 3AA6  
                         u2991 1FC4                           u3871 33EE                           u3951 0E56  
                         u4807 44F4                           u4591 1DC8                           u3880 343C  
                         u3960 0F50                           u3881 3438                           u3961 0F4C  
                         u4817 4826                           u3890 345A                           u3970 0FDE  
                         u3891 3456                           u3971 0FDA                           u4907 46E2  
                         u4827 468A                           u4747 19B6                           u3980 1032  
                         u3981 102E                           u4917 470C                           u4837 46B4  
                         u4757 1A5E                           u3990 1088                           u3991 1084  
                         u4927 40A4                           u4847 3F68                           u4767 1AC8  
                         u4937 45D6                           u4857 4522                           u4777 3E14  
                         u4947 4602                           u4867 454E                           u4787 4C30  
                         u4957 4630                           u4877 4006                           u4797 44C8  
                         u4967 465C                           u4887 457C                           u4977 4248  
                         u4897 45A8                           u4987 4142                  _LightBlueMove 47C0  
                         abs@a 0013                           _dbuf 0190                           _main 1902  
                         _dtoa 30A2                           _prec 00EE                           _vals 01C5  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 420A                           prodh 000FF4                           prodl 000FF3  
                         start 002E                ___fldiv@new_exp 002A         __end_of_color_read_Red 49A8  
              __end_of_HighISR 002E         __end_of_color_read_lum 4958                  _Backhalfblock 455E  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 4BE0                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 466C                _RunOneBlockTime 01CD  
              __end_of___aodiv 365C                __end_of___fladd 2304                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 392C                __end_of___fldiv 2AC8  
              __end_of___flmul 272E                __end_of___flsub 4ADC                    colour_rel@B 004A  
                  colour_rel@G 0046                          ?_stop 0014                    colour_rel@L 0036  
                  colour_rel@R 0042                __end_of___lwdiv 4376                          i2l270 002A  
                 vfpfcnvrt@fmt 0041                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 30A2        __end_of_sendCharSerial4 4DC4     __end_of_I2C_2_Master_Start 4DFC  
   __end_of_I2C_2_Master_Write 4DDE                   YellowMove@mL 0020                          _flags 00F4  
                 YellowMove@mR 0022                          _fputc 3B80                          _fputs 4ADC  
               delayed_ms@time 0001                          pad@fp 0011                          _power 01D1  
                        _width 015C                          _putch 4E02                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 00E6  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 476E  
      __end_of_color_read_Blue 4A48          _I2C_2_Master_RepStart 4DDE               __end_of_BlueMove 444C  
               ?_Backhalfblock 001A                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 4376  
              _reverseOneBlock 45B8                   __end_of_main 1E44                   __end_of_dtoa 3320  
                 __end_of_stop 4288                _colour_rel$2950 003A                _colour_rel$2951 003E  
                       ??_main 0059                         ??_dtoa 0026          __end_of_ReverseYellow 3D00  
             __end_of_PinkMove 4908                         ??_stop 0018                  __activetblptr 000001  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l4650 000A  
                       _RG6PPS 000E88                         i2l4652 001A                         i2l4654 0024  
                       i2l4656 0028                      ??_HighISR 0001       __end_of_color_click_init 4864  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 476E  
             __end_of___xxtofl 34D4                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3A7C                         ___fleq 3E60                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 4D28  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 0021  
                    ??___flmul 003A                      ??___flsub 0019                      ??___lwdiv 000B  
                       clear_0 43AE                         clear_1 43BA                         clear_2 43C6  
                       _motorL 00F5                         _motorR 01BC                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 4A96                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0059  
             __end_of_turnLeft 40E4                     ___flge@ff1 0001                     _YellowMove 4864  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 43D4        __end_of_reverseOneBlock 4612       __end_of_color_read_Green 49F8  
       ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4DC4                 __pcstackCOMRAM 0001  
                _fullSpeedBack 40E4                   __pidataBANK0 4E04                   __pidataBANK1 4DFC  
                __end_of_fputc 3C4A                  __end_of_fputs 4B20                  __end_of_putch 4E04  
            __end_of_GreenMove 4C1E            __end_of_Timer0_init 4D8E            __end_of_ReversePink 3DB6  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14352 0150          __end_of_reverseDetect 466C                        ??_putch 0001  
                   __pbssBANK0 00EE                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 4504                     _getTMR0val 4D02              __end_of_RetryMove 4CDA  
                    ?_PinkMove 0020              _color_writetoaddr 4D4E                     _delayed_ms 4C1E  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 0001  
                      ?___fleq 0019             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                   ?_turnRight45 001A          __end_of_timed_forward 3E60  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2AC8  
      __end_of_Interrupts_init 4DD2         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 00E8                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4D6E                        _RedMove 4BA2  
           _I2C_2_Master_Start 4DF2                     ??_PinkMove 0024                     _initUSART4 4D8E  
           _I2C_2_Master_Write 4DD2                        __Hparam 0000                        _WayBack 015E  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4D6E  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 3D00  
                      ___aodiv 34D4                        ___fladd 1E44                        ___aomod 37C8  
                      ___fldiv 272E                        ___flmul 2304                        ___flsub 4A96  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 4302            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 4376                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 2DF6                        __ptext0 1902  
                      __ptext1 471C                        __ptext2 4A48                        __ptext3 392C  
                      __ptext4 30A2                        __ptext5 4288                        __ptext6 4ADC  
                      __ptext7 3B80                        __ptext8 4E02                        __ptext9 4B62  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 471C           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 43D4                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 00F0                    ?_delayed_ms 0001              __end_of_vfpfcnvrt 3A7C  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 01CF  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 4182  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3FA8                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00EA                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 46C4                 __end_of___flge 3B80  
               __end_of___fleq 3F0A                 _fullSpeedAhead 3FA8                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4D4E  
     __end_of_Forwardhalfblock 455E                      _GreenMove 4BE0            start_initialization 4376  
                  __end_of_abs 4BA2                    __end_of_pad 4302                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 4812                   ??_OrangeMove 0024            color_read_Green@tmp 000A  
        __end_of_Backhalfblock 45B8        __end_of_initDCmotorsPWM 420A                    vfprintf@fmt 0053  
       __end_of_fullSpeedAhead 4046                       ??___flge 0009                       ??___fleq 0021  
                    _RetryMove 4CB0                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                    __pdataBANK0 00FE                    __pdataBANK1 01CD  
              _ForwardOneBlock 44AA                Backhalfblock@mL 001A                Backhalfblock@mR 001C  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 3C4A  
                    ___fldiv@a 001D                      ___fldiv@b 0019                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 47C0  
                    ___flmul@a 0036                      ___flmul@b 0032                    __pbssCOMRAM 005B  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2629 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$2952 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 48B6           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 44AA              _I2C_2_Master_Idle 4CDA  
            _I2C_2_Master_Init 4C86              _I2C_2_Master_Read 4B20              _I2C_2_Master_Stop 4DE8  
                 _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060  
             getTMR0val@moving 0001                 colour_rel@vals 0032              _sendStringSerial4 4C56  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _PIE2bits 000E2B  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D        __end_of_ForwardOneBlock 4504  
                 ??_delayed_ms 0003                    turnRight@mL 0014                    turnRight@mR 0016  
                    _lost_flag 00F2                       _PIR0bits 000E33                       i2u445_40 001A  
                     i2u445_41 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 392C  
    __end_of_I2C_2_Master_Idle 4D02      __end_of_I2C_2_Master_Init 4CB0      __end_of_I2C_2_Master_Read 4B62  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4DF2                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4D28                   _TxBufReadCnt 005B  
                     _BlueMove 43E6                      _turnRight 3F0A             __end_of_delayed_ms 4C56  
                    copy_data0 438A      __end_of_sendStringSerial4 4C86                   ??_colour_rel 0036  
                _reverseDetect 4612  __end_of_I2C_2_Master_RepStart 4DE8             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 37C8                   ??_initUSART4 0001                       _PinkMove 48B6  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 4182  
                 __Lsmallconst 0E00                    ??_RetryMove 0024                    _readColours 444C  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2DF6                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                  _timed_forward 3DB6                     sprintf@fmt 0062  
            ?_Forwardhalfblock 001A                       ___xxtofl 3320                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4DAC                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 37C8                       __ptext11 34D4  
                     __ptext20 4B20                       __ptext12 4C56                       __ptext21 4D8E  
                     __ptext13 4DAC                       __ptext30 476E                       __ptext22 4182  
                     __ptext14 444C                       __ptext31 47C0                       __ptext23 2DF6  
                     __ptext15 4908                       __ptext40 4DF2                       __ptext32 4BE0  
                     __ptext24 3DB6                       __ptext16 4958                       __ptext41 4CDA  
                     __ptext33 43E6                       __ptext25 4C1E                       __ptext17 49A8  
                     __ptext50 455E                       __ptext42 4C86                       __ptext34 4D02  
                     __ptext26 3C4A                       __ptext18 49F8                       __ptext51 48B6  
                     __ptext43 4864                       __ptext35 2AC8                       __ptext27 3D00  
                     __ptext19 4DDE                       __ptext60 4302                       __ptext52 46C4  
                     __ptext44 466C                       __ptext36 4812                       __ptext28 44AA  
                     __ptext61 4DC4                       __ptext53 4046                       __ptext45 3F0A  
                     __ptext37 4D4E                       __ptext29 4BA2                       __ptext62 0E26  
                     __ptext54 45B8                       __ptext46 4D6E                       __ptext38 4DD2  
                     __ptext63 3320                       __ptext55 4612                       __ptext47 4CB0  
                     __ptext39 4DE8                       __ptext64 4A96                       __ptext56 420A  
                     __ptext48 4504                       __ptext65 1E44                       __ptext57 40E4  
                     __ptext49 3FA8                       __ptext66 2304                       __ptext58 365C  
                     __ptext67 3A7C                       __ptext59 4D28                       __ptext68 3E60  
                     __ptext69 272E                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 4A48                  ??_turnRight45 001E                       main@temp 00E4  
                     _turnLeft 4046               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
              main@prev_colour 00EC                    _setMotorPWM 365C                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 006C  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 4812                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 46C4                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 471C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4DAC                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
