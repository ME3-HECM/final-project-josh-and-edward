

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 23:42:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 06/04/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataBANK0
   107   003EDE                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _DataFlag
   111   003EDE  01                 	db	1
   112   000000                     _TX4REG	set	3812
   113   000000                     _RC4STAbits	set	3815
   114   000000                     _SP4BRGH	set	3814
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _RC4REG	set	3811
   123   000000                     _SP4BRGL	set	3813
   124   000000                     _TX4STAbits	set	3816
   125   000000                     _BAUD4CONbits	set	3817
   126   000000                     _SSP2CON2	set	3802
   127   000000                     _TRISDbits	set	3972
   128   000000                     _SSP2STAT	set	3800
   129   000000                     _TRISGbits	set	3975
   130   000000                     _INTCONbits	set	4082
   131   000000                     _SSP2BUF	set	3797
   132   000000                     _PIE2bits	set	3627
   133   000000                     _PIE4bits	set	3629
   134   000000                     _PIR4bits	set	3639
   135   000000                     _RC0PPS	set	3682
   136   000000                     _RD5PPS	set	3695
   137   000000                     _RD6PPS	set	3696
   138   000000                     _LATAbits	set	3961
   139   000000                     _LATGbits	set	3967
   140   000000                     _TRISAbits	set	3969
   141                           
   142                           	psect	smallconst
   143   000E00                     __psmallconst:
   144                           	callstack 0
   145   000E00  00                 	db	0
   146   000E01                     STR_1:
   147   000E01  72                 	db	114	;'r'
   148   000E02  65                 	db	101	;'e'
   149   000E03  64                 	db	100	;'d'
   150   000E04  3D                 	db	61	;'='
   151   000E05  25                 	db	37
   152   000E06  66                 	db	102	;'f'
   153   000E07  20                 	db	32
   154   000E08  67                 	db	103	;'g'
   155   000E09  72                 	db	114	;'r'
   156   000E0A  65                 	db	101	;'e'
   157   000E0B  65                 	db	101	;'e'
   158   000E0C  6E                 	db	110	;'n'
   159   000E0D  3D                 	db	61	;'='
   160   000E0E  25                 	db	37
   161   000E0F  66                 	db	102	;'f'
   162   000E10  20                 	db	32
   163   000E11  62                 	db	98	;'b'
   164   000E12  6C                 	db	108	;'l'
   165   000E13  75                 	db	117	;'u'
   166   000E14  65                 	db	101	;'e'
   167   000E15  3D                 	db	61	;'='
   168   000E16  25                 	db	37
   169   000E17  66                 	db	102	;'f'
   170   000E18  20                 	db	32
   171   000E19  6C                 	db	108	;'l'
   172   000E1A  75                 	db	117	;'u'
   173   000E1B  6D                 	db	109	;'m'
   174   000E1C  3D                 	db	61	;'='
   175   000E1D  25                 	db	37
   176   000E1E  64                 	db	100	;'d'
   177   000E1F  0D                 	db	13
   178   000E20  0A                 	db	10
   179   000E21  00                 	db	0
   180   000E22                     STR_2:
   181   000E22  69                 	db	105	;'i'
   182   000E23  6E                 	db	110	;'n'
   183   000E24  66                 	db	102	;'f'
   184   000E25  00                 	db	0
   185   000E26                     STR_5:
   186   000E26  6E                 	db	110	;'n'
   187   000E27  61                 	db	97	;'a'
   188   000E28  6E                 	db	110	;'n'
   189   000E29  00                 	db	0
   190   000E2A  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   003C78                     __pcinit:
   196                           	callstack 0
   197   003C78                     start_initialization:
   198                           	callstack 0
   199   003C78                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to BANK0 (1 bytes)
   203                           ; load TBLPTR registers with __pidataBANK0
   204   003C78  0EDE               	movlw	low __pidataBANK0
   205   003C7A  6EF6               	movwf	tblptrl,c
   206   003C7C  0E3E               	movlw	high __pidataBANK0
   207   003C7E  6EF7               	movwf	tblptrh,c
   208   003C80  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   209   003C82  6EF8               	movwf	tblptru,c
   210   003C84  0009               	tblrd		*+	;fetch initializer
   211   003C86  CFF5 F0FB          	movff	tablat,__pdataBANK0
   212                           
   213                           ; Clear objects allocated to BANK1 (176 bytes)
   214   003C8A  EE01  F000         	lfsr	0,__pbssBANK1
   215   003C8E  0EB0               	movlw	176
   216   003C90                     clear_0:
   217   003C90  6AEE               	clrf	postinc0,c
   218   003C92  06E8               	decf	wreg,f,c
   219   003C94  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (20 bytes)
   222   003C96  EE00  F0E7         	lfsr	0,__pbssBANK0
   223   003C9A  0E14               	movlw	20
   224   003C9C                     clear_1:
   225   003C9C  6AEE               	clrf	postinc0,c
   226   003C9E  06E8               	decf	wreg,f,c
   227   003CA0  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to COMRAM (5 bytes)
   230   003CA2  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   231   003CA4  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   232   003CA6  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   233   003CA8  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   234   003CAA  6A56               	clrf	__pbssCOMRAM& (0+255),c
   235   003CAC                     end_of_initialization:
   236                           	callstack 0
   237   003CAC                     __end_of__initialization:
   238                           	callstack 0
   239   003CAC  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240   003CAE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241   003CB0  0100               	movlb	0
   242   003CB2  EFB9  F01A         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245   000056                     __pbssCOMRAM:
   246                           	callstack 0
   247   000056                     _flags:
   248                           	callstack 0
   249   000056                     	ds	1
   250   000057                     _TxBufReadCnt:
   251                           	callstack 0
   252   000057                     	ds	1
   253   000058                     _TxBufWriteCnt:
   254                           	callstack 0
   255   000058                     	ds	1
   256   000059                     _RxBufReadCnt:
   257                           	callstack 0
   258   000059                     	ds	1
   259   00005A                     _RxBufWriteCnt:
   260                           	callstack 0
   261   00005A                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264   0000E7                     __pbssBANK0:
   265                           	callstack 0
   266   0000E7                     floorf@F526:
   267                           	callstack 0
   268   0000E7                     	ds	4
   269   0000EB                     ___fpclassifyf@F465:
   270                           	callstack 0
   271   0000EB                     	ds	4
   272   0000EF                     _width:
   273                           	callstack 0
   274   0000EF                     	ds	2
   275   0000F1                     _prec:
   276                           	callstack 0
   277   0000F1                     	ds	2
   278   0000F3                     _vals:
   279                           	callstack 0
   280   0000F3                     	ds	8
   281                           
   282                           	psect	dataBANK0
   283   0000FB                     __pdataBANK0:
   284                           	callstack 0
   285   0000FB                     _DataFlag:
   286                           	callstack 0
   287   0000FB                     	ds	1
   288                           
   289                           	psect	bssBANK1
   290   000100                     __pbssBANK1:
   291                           	callstack 0
   292   000100                     _EUSART4TXbuf:
   293                           	callstack 0
   294   000100                     	ds	60
   295   00013C                     _EUSART4RXbuf:
   296                           	callstack 0
   297   00013C                     	ds	20
   298   000150                     _dbuf:
   299                           	callstack 0
   300   000150                     	ds	80
   301   0001A0                     _rel:
   302                           	callstack 0
   303   0001A0                     	ds	16
   304                           
   305                           	psect	cstackBANK0
   306   000060                     __pcstackBANK0:
   307                           	callstack 0
   308   000060                     efgtoa@ne:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x0
   312   000060                     	ds	2
   313   000062                     efgtoa@p:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2
   317   000062                     	ds	2
   318   000064                     efgtoa@t:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x4
   322   000064                     	ds	2
   323   000066                     _efgtoa$1403:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x6
   327   000066                     	ds	2
   328   000068                     efgtoa@pp:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x8
   332   000068                     	ds	1
   333   000069                     efgtoa@mode:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x9
   337   000069                     	ds	1
   338   00006A                     efgtoa@nmode:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xA
   342   00006A                     	ds	1
   343   00006B                     efgtoa@d:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xB
   347   00006B                     	ds	2
   348   00006D                     efgtoa@m:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xD
   352   00006D                     	ds	2
   353   00006F                     efgtoa@e:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xF
   357   00006F                     	ds	2
   358   000071                     efgtoa@w:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x11
   362   000071                     	ds	2
   363   000073                     efgtoa@ou:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x13
   367   000073                     	ds	4
   368   000077                     efgtoa@i:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x17
   372   000077                     	ds	2
   373   000079                     efgtoa@h:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x19
   377   000079                     	ds	4
   378   00007D                     efgtoa@l:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x1D
   382   00007D                     	ds	4
   383   000081                     efgtoa@sign:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x21
   387   000081                     	ds	1
   388   000082                     efgtoa@g:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x22
   392   000082                     	ds	4
   393   000086                     efgtoa@n:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x26
   397   000086                     	ds	2
   398   000088                     efgtoa@u:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x28
   402   000088                     	ds	4
   403   00008C                     ?_vfprintf:
   404                           	callstack 0
   405   00008C                     vfprintf@fp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x2C
   409   00008C                     	ds	2
   410   00008E                     vfprintf@fmt:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x2E
   414   00008E                     	ds	2
   415   000090                     vfprintf@ap:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x30
   419   000090                     	ds	2
   420   000092                     vfprintf@cfmt:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x32
   424   000092                     	ds	2
   425   000094                     ?_sprintf:
   426                           	callstack 0
   427   000094                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x34
   431   000094                     	ds	2
   432   000096                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x36
   436   000096                     	ds	16
   437   0000A6                     sprintf@ap:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x46
   441   0000A6                     	ds	2
   442   0000A8                     sprintf@f:
   443                           	callstack 0
   444                           
   445                           ; 11 bytes @ 0x48
   446   0000A8                     	ds	11
   447   0000B3                     ??_main:
   448                           
   449                           ; 1 bytes @ 0x53
   450   0000B3                     	ds	2
   451   0000B5                     main@buf:
   452                           	callstack 0
   453                           
   454                           ; 50 bytes @ 0x55
   455   0000B5                     	ds	50
   456                           
   457                           	psect	cstackCOMRAM
   458   000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460   000001                     ??_getCharFromTxBuf:
   461   000001                     putCharToRxBuf@byte:
   462                           	callstack 0
   463   000001                     
   464                           ; 1 bytes @ 0x0
   465   000001                     	ds	2
   466   000003                     ??_HighISR:
   467                           
   468                           ; 1 bytes @ 0x2
   469   000003                     	ds	2
   470   000005                     ??_I2C_2_Master_Idle:
   471   000005                     ?___fpclassifyf:
   472                           	callstack 0
   473   000005                     ?___fladd:
   474                           	callstack 0
   475   000005                     ?___fldiv:
   476                           	callstack 0
   477   000005                     ?___flmul:
   478                           	callstack 0
   479   000005                     ?_labs:
   480                           	callstack 0
   481   000005                     ?___flneg:
   482                           	callstack 0
   483   000005                     ?___fltol:
   484                           	callstack 0
   485   000005                     ?___xxtofl:
   486                           	callstack 0
   487   000005                     ?___aodiv:
   488                           	callstack 0
   489   000005                     ?___aomod:
   490                           	callstack 0
   491   000005                     putCharToTxBuf@byte:
   492                           	callstack 0
   493   000005                     memcpy@d1:
   494                           	callstack 0
   495   000005                     fputc@c:
   496                           	callstack 0
   497   000005                     strcpy@dest:
   498                           	callstack 0
   499   000005                     ___fleq@ff1:
   500                           	callstack 0
   501   000005                     ___flneg@f1:
   502                           	callstack 0
   503   000005                     ___fltol@f1:
   504                           	callstack 0
   505   000005                     ___fladd@b:
   506                           	callstack 0
   507   000005                     ___fldiv@b:
   508                           	callstack 0
   509   000005                     ___flmul@b:
   510                           	callstack 0
   511   000005                     ___xxtofl@val:
   512                           	callstack 0
   513   000005                     ___fpclassifyf@x:
   514                           	callstack 0
   515   000005                     labs@a:
   516                           	callstack 0
   517   000005                     ___aodiv@dividend:
   518                           	callstack 0
   519   000005                     ___aomod@dividend:
   520                           	callstack 0
   521                           
   522                           ; 8 bytes @ 0x4
   523   000005                     	ds	1
   524   000006                     ??_I2C_2_Master_Read:
   525   000006                     I2C_2_Master_Write@data_byte:
   526                           	callstack 0
   527   000006                     TxBufferedString@string:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x5
   531   000006                     	ds	1
   532   000007                     color_writetoaddr@value:
   533                           	callstack 0
   534   000007                     I2C_2_Master_Read@ack:
   535                           	callstack 0
   536   000007                     memcpy@s1:
   537                           	callstack 0
   538   000007                     fputc@fp:
   539                           	callstack 0
   540   000007                     strcpy@src:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x6
   544   000007                     	ds	1
   545   000008                     color_writetoaddr@address:
   546                           	callstack 0
   547   000008                     I2C_2_Master_Read@tmp:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x7
   551   000008                     	ds	1
   552   000009                     ??_fputc:
   553   000009                     ??___fpclassifyf:
   554   000009                     ??_labs:
   555   000009                     ??_color_click_init:
   556   000009                     ??___fltol:
   557   000009                     ??___xxtofl:
   558   000009                     ?_color_read_lum:
   559                           	callstack 0
   560   000009                     ?_color_read_Red:
   561                           	callstack 0
   562   000009                     ?_color_read_Green:
   563                           	callstack 0
   564   000009                     ?_color_read_Blue:
   565                           	callstack 0
   566   000009                     memcpy@n:
   567                           	callstack 0
   568   000009                     strcpy@s:
   569                           	callstack 0
   570   000009                     ___fleq@ff2:
   571                           	callstack 0
   572   000009                     ___fladd@a:
   573                           	callstack 0
   574   000009                     ___fldiv@a:
   575                           	callstack 0
   576   000009                     ___flmul@a:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x8
   580   000009                     	ds	2
   581   00000B                     ??_color_read_lum:
   582   00000B                     ??_color_read_Red:
   583   00000B                     ??_color_read_Green:
   584   00000B                     ??_color_read_Blue:
   585   00000B                     memcpy@tmp:
   586                           	callstack 0
   587   00000B                     strcpy@d:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xA
   591   00000B                     	ds	1
   592   00000C                     memcpy@d:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0xB
   596   00000C                     	ds	1
   597   00000D                     ??___fladd:
   598   00000D                     ??___fldiv:
   599   00000D                     ??___flmul:
   600   00000D                     ??___fleq:
   601   00000D                     ___fltol@sign1:
   602                           	callstack 0
   603   00000D                     ___xxtofl@sign:
   604                           	callstack 0
   605   00000D                     ___fpclassifyf@e:
   606                           	callstack 0
   607   00000D                     ___aodiv@divisor:
   608                           	callstack 0
   609   00000D                     ___aomod@divisor:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0xC
   613   00000D                     	ds	1
   614   00000E                     ___fltol@exp1:
   615                           	callstack 0
   616   00000E                     ___xxtofl@exp:
   617                           	callstack 0
   618   00000E                     color_read_lum@tmp:
   619                           	callstack 0
   620   00000E                     color_read_Red@tmp:
   621                           	callstack 0
   622   00000E                     color_read_Green@tmp:
   623                           	callstack 0
   624   00000E                     color_read_Blue@tmp:
   625                           	callstack 0
   626   00000E                     memcpy@s:
   627                           	callstack 0
   628   00000E                     fputs@s:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xD
   632   00000E                     	ds	1
   633   00000F                     ___xxtofl@arg:
   634                           	callstack 0
   635   00000F                     ___fpclassifyf@u:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0xE
   639   00000F                     	ds	1
   640   000010                     readColours@vals:
   641                           	callstack 0
   642   000010                     fputs@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xF
   646   000010                     	ds	1
   647   000011                     ___fladd@signs:
   648                           	callstack 0
   649   000011                     ___flmul@sign:
   650                           	callstack 0
   651   000011                     ___fldiv@rem:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x10
   655   000011                     	ds	1
   656   000012                     ___fladd@aexp:
   657                           	callstack 0
   658   000012                     ___flmul@aexp:
   659                           	callstack 0
   660   000012                     fputs@c:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x11
   664   000012                     	ds	1
   665   000013                     ___fladd@bexp:
   666                           	callstack 0
   667   000013                     fputs@i:
   668                           	callstack 0
   669   000013                     ___flmul@grs:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x12
   673   000013                     	ds	1
   674   000014                     ___fladd@grs:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x13
   678   000014                     	ds	1
   679   000015                     ___aodiv@counter:
   680                           	callstack 0
   681   000015                     ___aomod@counter:
   682                           	callstack 0
   683   000015                     ___fldiv@sign:
   684                           	callstack 0
   685   000015                     pad@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x14
   689   000015                     	ds	1
   690   000016                     ___aodiv@sign:
   691                           	callstack 0
   692   000016                     ___aomod@sign:
   693                           	callstack 0
   694   000016                     ___fldiv@new_exp:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x15
   698   000016                     	ds	1
   699   000017                     ?_abs:
   700                           	callstack 0
   701   000017                     ___flmul@bexp:
   702                           	callstack 0
   703   000017                     pad@buf:
   704                           	callstack 0
   705   000017                     abs@a:
   706                           	callstack 0
   707   000017                     ___aodiv@quotient:
   708                           	callstack 0
   709                           
   710                           ; 8 bytes @ 0x16
   711   000017                     	ds	1
   712   000018                     ___fldiv@grs:
   713                           	callstack 0
   714   000018                     ___flmul@prod:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x17
   718   000018                     	ds	1
   719   000019                     ??_abs:
   720   000019                     pad@p:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x18
   724   000019                     	ds	2
   725   00001B                     ??_pad:
   726                           
   727                           ; 1 bytes @ 0x1A
   728   00001B                     	ds	1
   729   00001C                     ___fldiv@bexp:
   730                           	callstack 0
   731   00001C                     ___flmul@temp:
   732                           	callstack 0
   733   00001C                     pad@i:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x1B
   737   00001C                     	ds	1
   738   00001D                     ___fldiv@aexp:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x1C
   742   00001D                     	ds	1
   743   00001E                     ?___flsub:
   744                           	callstack 0
   745   00001E                     ?_floorf:
   746                           	callstack 0
   747   00001E                     colour_rel@vals:
   748                           	callstack 0
   749   00001E                     pad@w:
   750                           	callstack 0
   751   00001E                     ___flge@ff1:
   752                           	callstack 0
   753   00001E                     ___flsub@b:
   754                           	callstack 0
   755   00001E                     floorf@x:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x1D
   759   00001E                     	ds	2
   760   000020                     colour_rel@rel:
   761                           	callstack 0
   762   000020                     dtoa@fp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x1F
   766   000020                     	ds	2
   767   000022                     ??_floorf:
   768   000022                     colour_rel@R:
   769                           	callstack 0
   770   000022                     ___flge@ff2:
   771                           	callstack 0
   772   000022                     ___flsub@a:
   773                           	callstack 0
   774   000022                     dtoa@d:
   775                           	callstack 0
   776                           
   777                           ; 8 bytes @ 0x21
   778   000022                     	ds	4
   779   000026                     ??___flge:
   780   000026                     colour_rel@G:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x25
   784   000026                     	ds	2
   785   000028                     floorf@m:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x27
   789   000028                     	ds	2
   790   00002A                     ??_dtoa:
   791   00002A                     colour_rel@B:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x29
   795   00002A                     	ds	2
   796   00002C                     floorf@e:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x2B
   800   00002C                     	ds	2
   801   00002E                     colour_rel@L:
   802                           	callstack 0
   803   00002E                     floorf@u:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x2D
   807   00002E                     	ds	4
   808   000032                     _dtoa$1372:
   809                           	callstack 0
   810   000032                     efgtoa@fp:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x31
   814   000032                     	ds	2
   815   000034                     dtoa@p:
   816                           	callstack 0
   817   000034                     efgtoa@f:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x33
   821   000034                     	ds	2
   822   000036                     dtoa@w:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x35
   826   000036                     	ds	2
   827   000038                     efgtoa@c:
   828                           	callstack 0
   829   000038                     dtoa@n:
   830                           	callstack 0
   831                           
   832                           ; 8 bytes @ 0x37
   833   000038                     	ds	1
   834   000039                     ??_efgtoa:
   835                           
   836                           ; 1 bytes @ 0x38
   837   000039                     	ds	7
   838   000040                     dtoa@s:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x3F
   842   000040                     	ds	1
   843   000041                     dtoa@i:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x40
   847   000041                     	ds	2
   848   000043                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x42
   852   000043                     	ds	2
   853   000045                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x44
   857   000045                     	ds	2
   858   000047                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x46
   862   000047                     	ds	2
   863   000049                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x48
   866   000049                     	ds	2
   867   00004B                     vfpfcnvrt@convarg:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x4A
   871   00004B                     	ds	8
   872   000053                     vfpfcnvrt@c:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x52
   876   000053                     	ds	1
   877   000054                     vfpfcnvrt@cp:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x53
   881   000054                     	ds	2
   882   000056                     
   883                           ; 1 bytes @ 0x55
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 28 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  buf            50   85[BANK0 ] unsigned char [50]
   894 ;;  ADC             2    0        unsigned int 
   895 ;;  frac_part       2    0        unsigned int 
   896 ;;  int_part        2    0        unsigned int 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;Total ram usage:       52 bytes
   911 ;; Hardware stack levels required when called: 10
   912 ;; This function calls:
   913 ;;		_I2C_2_Master_Init
   914 ;;		_Interrupts_init
   915 ;;		_TxBufferedString
   916 ;;		_color_click_init
   917 ;;		_colour_rel
   918 ;;		_initUSART4
   919 ;;		_readColours
   920 ;;		_sendTxBuf
   921 ;;		_sprintf
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text0
   928   003572                     __ptext0:
   929                           	callstack 0
   930   003572                     _main:
   931                           	callstack 21
   932   003572                     
   933                           ;main.c: 29:     initUSART4();
   934   003572  EC37  F01F         	call	_initUSART4	;wreg free
   935   003576                     
   936                           ;main.c: 30:     Interrupts_init();
   937   003576  EC52  F01F         	call	_Interrupts_init	;wreg free
   938   00357A                     
   939                           ;main.c: 31:     color_click_init();
   940   00357A  EC77  F01E         	call	_color_click_init	;wreg free
   941   00357E                     
   942                           ;main.c: 32:     I2C_2_Master_Init();
   943   00357E  ECD4  F01E         	call	_I2C_2_Master_Init	;wreg free
   944   003582                     
   945                           ;main.c: 33:     char buf[50];;main.c: 34:     unsigned int int_part;;main.c: 35:     un
      +                          signed int frac_part;;main.c: 36:     unsigned int ADC;;main.c: 39:     TRISGbits.TRISG1
      +                          =0;
   946   003582  9287               	bcf	135,1,c	;volatile
   947   003584                     
   948                           ;main.c: 40:     LATGbits.LATG1=1;
   949   003584  827F               	bsf	127,1,c	;volatile
   950   003586                     
   951                           ;main.c: 41:     TRISAbits.TRISA4=0;
   952   003586  9881               	bcf	129,4,c	;volatile
   953   003588                     
   954                           ;main.c: 42:     LATAbits.LATA4=1;
   955   003588  8879               	bsf	121,4,c	;volatile
   956   00358A                     
   957                           ;main.c: 43:     _delay((unsigned long)((100)*(64000000/4000.0)));
   958   00358A  0E09               	movlw	9
   959   00358C  0100               	movlb	0	; () banked
   960   00358E  6FB4               	movwf	(??_main+1)& (0+255),b
   961   003590  0E1E               	movlw	30
   962   003592  6FB3               	movwf	??_main& (0+255),b
   963   003594  0EE4               	movlw	228
   964   003596                     u6167:
   965   003596  2EE8               	decfsz	wreg,f,c
   966   003598  D7FE               	bra	u6167
   967   00359A  2FB3               	decfsz	??_main& (0+255),f,b
   968   00359C  D7FC               	bra	u6167
   969   00359E  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   970   0035A0  D7FA               	bra	u6167
   971   0035A2  F000               	nop	
   972   0035A4                     l5336:
   973                           
   974                           ;main.c: 48:     {;main.c: 56:     readColours(&vals);
   975   0035A4  0EF3               	movlw	low _vals
   976   0035A6  6E10               	movwf	readColours@vals^0,c
   977   0035A8  0E00               	movlw	high _vals
   978   0035AA  6E11               	movwf	(readColours@vals+1)^0,c
   979   0035AC  EC4A  F01C         	call	_readColours	;wreg free
   980   0035B0                     
   981                           ;main.c: 57:     colour_rel(&vals, &rel);
   982   0035B0  0EF3               	movlw	low _vals
   983   0035B2  6E1E               	movwf	colour_rel@vals^0,c
   984   0035B4  0E00               	movlw	high _vals
   985   0035B6  6E1F               	movwf	(colour_rel@vals+1)^0,c
   986   0035B8  0EA0               	movlw	low _rel
   987   0035BA  6E20               	movwf	colour_rel@rel^0,c
   988   0035BC  0E01               	movlw	high _rel
   989   0035BE  6E21               	movwf	(colour_rel@rel+1)^0,c
   990   0035C0  ECFA  F016         	call	_colour_rel	;wreg free
   991   0035C4                     
   992                           ;main.c: 59:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
   993   0035C4  0EB5               	movlw	low main@buf
   994   0035C6  0100               	movlb	0	; () banked
   995   0035C8  6F94               	movwf	sprintf@s& (0+255),b
   996   0035CA  0E00               	movlw	high main@buf
   997   0035CC  6F95               	movwf	(sprintf@s+1)& (0+255),b
   998   0035CE  0E01               	movlw	low STR_1
   999   0035D0  6F96               	movwf	sprintf@fmt& (0+255),b
  1000   0035D2  0E0E               	movlw	high STR_1
  1001   0035D4  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1002   0035D6  C1A0  F098         	movff	_rel,?_sprintf+4
  1003   0035DA  C1A1  F099         	movff	_rel+1,?_sprintf+5
  1004   0035DE  C1A2  F09A         	movff	_rel+2,?_sprintf+6
  1005   0035E2  C1A3  F09B         	movff	_rel+3,?_sprintf+7
  1006   0035E6  C1A4  F09C         	movff	_rel+4,?_sprintf+8
  1007   0035EA  C1A5  F09D         	movff	_rel+5,?_sprintf+9
  1008   0035EE  C1A6  F09E         	movff	_rel+6,?_sprintf+10
  1009   0035F2  C1A7  F09F         	movff	_rel+7,?_sprintf+11
  1010   0035F6  C1A8  F0A0         	movff	_rel+8,?_sprintf+12
  1011   0035FA  C1A9  F0A1         	movff	_rel+9,?_sprintf+13
  1012   0035FE  C1AA  F0A2         	movff	_rel+10,?_sprintf+14
  1013   003602  C1AB  F0A3         	movff	_rel+11,?_sprintf+15
  1014   003606  C0F9  F0A4         	movff	_vals+6,?_sprintf+16
  1015   00360A  C0FA  F0A5         	movff	_vals+7,?_sprintf+17
  1016   00360E  ECA3  F01C         	call	_sprintf	;wreg free
  1017   003612                     
  1018                           ;main.c: 61:     TxBufferedString(buf);
  1019   003612  0EB5               	movlw	low main@buf
  1020   003614  6E06               	movwf	TxBufferedString@string^0,c
  1021   003616  0E00               	movlw	high main@buf
  1022   003618  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1023   00361A  EC91  F01E         	call	_TxBufferedString	;wreg free
  1024                           
  1025                           ;main.c: 66:         while (DataFlag){
  1026   00361E  EF13  F01B         	goto	l5346
  1027   003622                     l5344:
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;main.c: 67:             sendTxBuf();
  1031   003622  ECBF  F01E         	call	_sendTxBuf	;wreg free
  1032   003626                     l5346:
  1033                           
  1034                           ;main.c: 66:         while (DataFlag){
  1035   003626  0100               	movlb	0	; () banked
  1036   003628  51FB               	movf	_DataFlag& (0+255),w,b	;volatile
  1037   00362A  A4D8               	btfss	status,2,c
  1038   00362C  EF1A  F01B         	goto	u6151
  1039   003630  EF1C  F01B         	goto	u6150
  1040   003634                     u6151:
  1041   003634  EF11  F01B         	goto	l5344
  1042   003638                     u6150:
  1043   003638  EFD2  F01A         	goto	l5336
  1044   00363C  EF25  F000         	goto	start
  1045   003640                     __end_of_main:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _sprintf *****************
  1049 ;; Defined at:
  1050 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  s               2   52[BANK0 ] PTR unsigned char 
  1053 ;;		 -> main@buf(50), 
  1054 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  1055 ;;		 -> STR_1(33), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  f              11   72[BANK0 ] struct _IO_FILE
  1058 ;;  ap              2   70[BANK0 ] PTR void [1]
  1059 ;;		 -> ?_sprintf(2), 
  1060 ;;  ret             2    0        int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2   52[BANK0 ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1070 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1074 ;;Total ram usage:       31 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 9
  1077 ;; This function calls:
  1078 ;;		_vfprintf
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085   003946                     __ptext1:
  1086                           	callstack 0
  1087   003946                     _sprintf:
  1088                           	callstack 21
  1089   003946  0E98               	movlw	low (?_sprintf+4)
  1090   003948  0100               	movlb	0	; () banked
  1091   00394A  6FA6               	movwf	sprintf@ap& (0+255),b
  1092   00394C  0E00               	movlw	high (?_sprintf+4)
  1093   00394E  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1094   003950  C094  F0A8         	movff	sprintf@s,sprintf@f
  1095   003954  C095  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1096   003958                     
  1097                           ; BSR set to: 0
  1098   003958  0E00               	movlw	0
  1099   00395A  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1100   00395C  0E00               	movlw	0
  1101   00395E  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1102   003960                     
  1103                           ; BSR set to: 0
  1104   003960  0E00               	movlw	0
  1105   003962  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1106   003964  0E00               	movlw	0
  1107   003966  6FB1               	movwf	(sprintf@f+9)& (0+255),b
  1108   003968                     
  1109                           ; BSR set to: 0
  1110   003968  0EA8               	movlw	low sprintf@f
  1111   00396A  6F8C               	movwf	vfprintf@fp& (0+255),b
  1112   00396C  0E00               	movlw	high sprintf@f
  1113   00396E  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1114   003970  C096  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1115   003974  C097  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1116   003978  0EA6               	movlw	low sprintf@ap
  1117   00397A  6F90               	movwf	vfprintf@ap& (0+255),b
  1118   00397C  0E00               	movlw	high sprintf@ap
  1119   00397E  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1120   003980  EC79  F01C         	call	_vfprintf	;wreg free
  1121   003984  0100               	movlb	0	; () banked
  1122   003986  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1123   003988  2594               	addwf	sprintf@s& (0+255),w,b
  1124   00398A  6ED9               	movwf	fsr2l,c
  1125   00398C  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1126   00398E  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  1127   003990  6EDA               	movwf	fsr2h,c
  1128   003992  0E00               	movlw	0
  1129   003994  6EDF               	movwf	indf2,c
  1130   003996                     
  1131                           ; BSR set to: 0
  1132   003996  0012               	return		;funcret
  1133   003998                     __end_of_sprintf:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _vfprintf *****************
  1137 ;; Defined at:
  1138 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1141 ;;		 -> sprintf@f(11), 
  1142 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1143 ;;		 -> STR_1(33), 
  1144 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1145 ;;		 -> sprintf@ap(2), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  1148 ;;		 -> STR_1(33), 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   44[BANK0 ] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;Total ram usage:        8 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 8
  1165 ;; This function calls:
  1166 ;;		_vfpfcnvrt
  1167 ;; This function is called by:
  1168 ;;		_sprintf
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text2
  1173   0038F2                     __ptext2:
  1174                           	callstack 0
  1175   0038F2                     _vfprintf:
  1176                           	callstack 21
  1177   0038F2                     
  1178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1179   0038F2  C08E  F092         	movff	vfprintf@fmt,vfprintf@cfmt
  1180   0038F6  C08F  F093         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1183   0038FA  EF8D  F01C         	goto	l5292
  1184   0038FE                     l5290:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1187   0038FE  C08C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1188   003902  C08D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1189   003906  0E92               	movlw	low vfprintf@cfmt
  1190   003908  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1191   00390A  0E00               	movlw	high vfprintf@cfmt
  1192   00390C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1193   00390E  C090  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1194   003912  C091  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1195   003916  EC55  F012         	call	_vfpfcnvrt	;wreg free
  1196   00391A                     l5292:
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1199   00391A  C092  FFF6         	movff	vfprintf@cfmt,tblptrl
  1200   00391E  C093  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1201   003922                     	if	0	;tblptru may be non-zero
  1202   003922                     	endif
  1203   003922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1204   003922  0E00               	movlw	low (__mediumconst shr (0+16))
  1205   003924  6EF8               	movwf	tblptru,c
  1206   003926                     	endif
  1207   003926  0008               	tblrd		*
  1208   003928  50F5               	movf	tablat,w,c
  1209   00392A  0900               	iorlw	0
  1210   00392C  A4D8               	btfss	status,2,c
  1211   00392E  EF9B  F01C         	goto	u6121
  1212   003932  EF9D  F01C         	goto	u6120
  1213   003936                     u6121:
  1214   003936  EF7F  F01C         	goto	l5290
  1215   00393A                     u6120:
  1216   00393A                     
  1217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1218   00393A  0E00               	movlw	0
  1219   00393C  0100               	movlb	0	; () banked
  1220   00393E  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1221   003940  0E00               	movlw	0
  1222   003942  6F8C               	movwf	?_vfprintf& (0+255),b
  1223   003944                     
  1224                           ; BSR set to: 0
  1225   003944  0012               	return		;funcret
  1226   003946                     __end_of_vfprintf:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _vfpfcnvrt *****************
  1230 ;; Defined at:
  1231 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1234 ;;		 -> sprintf@f(11), 
  1235 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1236 ;;		 -> vfprintf@cfmt(2), 
  1237 ;;  ap              2   70[COMRAM] PTR PTR void 
  1238 ;;		 -> sprintf@ap(2), 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  convarg         8   74[COMRAM] struct .
  1241 ;;  cp              2   83[COMRAM] PTR unsigned char 
  1242 ;;		 -> STR_1(33), 
  1243 ;;  i               2    0        int 
  1244 ;;  done            2    0        int 
  1245 ;;  c               1   82[COMRAM] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1255 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;Total ram usage:       19 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 7
  1262 ;; This function calls:
  1263 ;;		_dtoa
  1264 ;;		_efgtoa
  1265 ;;		_fputc
  1266 ;; This function is called by:
  1267 ;;		_vfprintf
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text3
  1272   0024AA                     __ptext3:
  1273                           	callstack 0
  1274   0024AA                     _vfpfcnvrt:
  1275                           	callstack 21
  1276   0024AA                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1278   0024AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1279   0024AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1280   0024B2  CFDE FFF6          	movff	postinc2,tblptrl
  1281   0024B6  CFDD FFF7          	movff	postdec2,tblptrh
  1282   0024BA                     	if	0	;tblptru may be non-zero
  1283   0024BA                     	endif
  1284   0024BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1285   0024BA  0E00               	movlw	low (__mediumconst shr (0+16))
  1286   0024BC  6EF8               	movwf	tblptru,c
  1287   0024BE                     	endif
  1288   0024BE  0008               	tblrd		*
  1289   0024C0  50F5               	movf	tablat,w,c
  1290   0024C2  0A25               	xorlw	37
  1291   0024C4  A4D8               	btfss	status,2,c
  1292   0024C6  EF67  F012         	goto	u6081
  1293   0024CA  EF69  F012         	goto	u6080
  1294   0024CE                     u6081:
  1295   0024CE  EFC1  F013         	goto	l5258
  1296   0024D2                     u6080:
  1297   0024D2                     
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1299   0024D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1300   0024D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1301   0024DA  2ADE               	incf	postinc2,f,c
  1302   0024DC  0E00               	movlw	0
  1303   0024DE  22DD               	addwfc	postdec2,f,c
  1304   0024E0                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1306   0024E0  0E00               	movlw	0
  1307   0024E2  0100               	movlb	0	; () banked
  1308   0024E4  6FF0               	movwf	(_width+1)& (0+255),b
  1309   0024E6  0E00               	movlw	0
  1310   0024E8  6FEF               	movwf	_width& (0+255),b
  1311   0024EA  C0EF  F056         	movff	_width,_flags
  1312   0024EE                     
  1313                           ; BSR set to: 0
  1314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1315   0024EE  69F1               	setf	_prec& (0+255),b
  1316   0024F0  69F2               	setf	(_prec+1)& (0+255),b
  1317   0024F2                     
  1318                           ; BSR set to: 0
  1319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1320   0024F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1321   0024F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1322   0024FA  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1323   0024FE  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1324   002502                     
  1325                           ; BSR set to: 0
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1327   002502  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1328   002506  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1329   00250A                     	if	0	;tblptru may be non-zero
  1330   00250A                     	endif
  1331   00250A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1332   00250A  0E00               	movlw	low (__mediumconst shr (0+16))
  1333   00250C  6EF8               	movwf	tblptru,c
  1334   00250E                     	endif
  1335   00250E  0008               	tblrd		*
  1336   002510  50F5               	movf	tablat,w,c
  1337   002512  0A64               	xorlw	100
  1338   002514  B4D8               	btfsc	status,2,c
  1339   002516  EF8F  F012         	goto	u6091
  1340   00251A  EF91  F012         	goto	u6090
  1341   00251E                     u6091:
  1342   00251E  EFA1  F012         	goto	l5214
  1343   002522                     u6090:
  1344   002522                     
  1345                           ; BSR set to: 0
  1346   002522  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1347   002526  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1348   00252A                     	if	0	;tblptru may be non-zero
  1349   00252A                     	endif
  1350   00252A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1351   00252A  0E00               	movlw	low (__mediumconst shr (0+16))
  1352   00252C  6EF8               	movwf	tblptru,c
  1353   00252E                     	endif
  1354   00252E  0008               	tblrd		*
  1355   002530  50F5               	movf	tablat,w,c
  1356   002532  0A69               	xorlw	105
  1357   002534  A4D8               	btfss	status,2,c
  1358   002536  EF9F  F012         	goto	u6101
  1359   00253A  EFA1  F012         	goto	u6100
  1360   00253E                     u6101:
  1361   00253E  EFE4  F012         	goto	l5220
  1362   002542                     u6100:
  1363   002542                     l5214:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1367   002542  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1368   002546  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1369   00254A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1370   00254E  0E02               	movlw	2
  1371   002550  26DE               	addwf	postinc2,f,c
  1372   002552  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1373   002556  0E00               	movlw	0
  1374   002558  22DD               	addwfc	postdec2,f,c
  1375   00255A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1376   00255E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1377   002562  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1378   002566  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1379   00256A  0E00               	movlw	0
  1380   00256C  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1381   00256E  0EFF               	movlw	-1
  1382   002570  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1383   002572  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1384   002574  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1385   002576  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1386   002578  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1387   00257A  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1390   00257C  0E01               	movlw	1
  1391   00257E  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1392   002580  6E49               	movwf	??_vfpfcnvrt^0,c
  1393   002582  0E00               	movlw	0
  1394   002584  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1395   002586  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1396   002588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1397   00258C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1398   002590  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1399   002594  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1400   002598                     
  1401                           ; BSR set to: 0
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1403   002598  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1404   00259C  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1405   0025A0  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1406   0025A4  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1407   0025A8  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1408   0025AC  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1409   0025B0  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1410   0025B4  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1411   0025B8  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1412   0025BC  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1413   0025C0  ECD8  F013         	call	_dtoa	;wreg free
  1414   0025C4  EFD7  F013         	goto	l1081
  1415   0025C8                     l5220:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1419   0025C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420   0025CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421   0025D0  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1422   0025D4  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1423   0025D8                     
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1426   0025D8  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1427   0025DC  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1428   0025E0                     	if	0	;tblptru may be non-zero
  1429   0025E0                     	endif
  1430   0025E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1431   0025E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1432   0025E2  6EF8               	movwf	tblptru,c
  1433   0025E4                     	endif
  1434   0025E4  0008               	tblrd		*
  1435   0025E6  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1438   0025EA  EF03  F013         	goto	l5232
  1439   0025EE                     l5224:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1443   0025EE  4A54               	infsnz	vfpfcnvrt@cp^0,f,c
  1444   0025F0  2A55               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1447   0025F2  EF1C  F013         	goto	l5234
  1448   0025F6                     l5226:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1452   0025F6  0E6C               	movlw	108
  1453   0025F8  6E53               	movwf	vfpfcnvrt@c^0,c
  1454                           
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1456   0025FA  EF1C  F013         	goto	l5234
  1457   0025FE                     l5228:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1461   0025FE  0E00               	movlw	0
  1462   002600  6E53               	movwf	vfpfcnvrt@c^0,c
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1465   002602  EF1C  F013         	goto	l5234
  1466   002606                     l5232:
  1467                           
  1468                           ; BSR set to: 0
  1469   002606  5053               	movf	vfpfcnvrt@c^0,w,c
  1470   002608  6E49               	movwf	??_vfpfcnvrt^0,c
  1471   00260A  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1472                           
  1473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 1, Range of values is 0 to 0
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            4     3 (average)
  1479                           ;	Chosen strategy is simple_byte
  1480   00260C  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1481   00260E  0A00               	xorlw	0	; case 0
  1482   002610  B4D8               	btfsc	status,2,c
  1483   002612  EF0D  F013         	goto	l5468
  1484   002616  EFFF  F012         	goto	l5228
  1485   00261A                     l5468:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 3, Range of values is 76 to 108
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte           10     6 (average)
  1493                           ;	Chosen strategy is simple_byte
  1494   00261A  5049               	movf	??_vfpfcnvrt^0,w,c
  1495   00261C  0A4C               	xorlw	76	; case 76
  1496   00261E  B4D8               	btfsc	status,2,c
  1497   002620  EFF7  F012         	goto	l5224
  1498   002624  0A2A               	xorlw	42	; case 102
  1499   002626  B4D8               	btfsc	status,2,c
  1500   002628  EFFB  F012         	goto	l5226
  1501   00262C  0A0A               	xorlw	10	; case 108
  1502   00262E  B4D8               	btfsc	status,2,c
  1503   002630  EFF7  F012         	goto	l5224
  1504   002634  EFFF  F012         	goto	l5228
  1505   002638                     l5234:
  1506                           
  1507                           ; BSR set to: 0
  1508   002638  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1509   00263C  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1510   002640                     	if	0	;tblptru may be non-zero
  1511   002640                     	endif
  1512   002640                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1513   002640  0E00               	movlw	low (__mediumconst shr (0+16))
  1514   002642  6EF8               	movwf	tblptru,c
  1515   002644                     	endif
  1516   002644  0008               	tblrd		*
  1517   002646  50F5               	movf	tablat,w,c
  1518   002648  0A66               	xorlw	102
  1519   00264A  A4D8               	btfss	status,2,c
  1520   00264C  EF2A  F013         	goto	u6111
  1521   002650  EF2C  F013         	goto	u6110
  1522   002654                     u6111:
  1523   002654  EFB8  F013         	goto	l5254
  1524   002658                     u6110:
  1525   002658  EF62  F013         	goto	l5242
  1526   00265C                     l5236:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1530   00265C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1531   002660  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1532   002664  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1533   002668  0E04               	movlw	4
  1534   00266A  26DE               	addwf	postinc2,f,c
  1535   00266C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1536   002670  0E00               	movlw	0
  1537   002672  22DD               	addwfc	postdec2,f,c
  1538   002674  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1539   002678  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1540   00267C  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1541   002680  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1542   002684  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1543   002688  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1546   00268C  EF77  F013         	goto	l5244
  1547   002690                     l5238:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1551   002690  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1552   002694  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1553   002698  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1554   00269C  0E04               	movlw	4
  1555   00269E  26DE               	addwf	postinc2,f,c
  1556   0026A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1557   0026A4  0E00               	movlw	0
  1558   0026A6  22DD               	addwfc	postdec2,f,c
  1559   0026A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1560   0026AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1561   0026B0  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1562   0026B4  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1563   0026B8  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1564   0026BC  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1567   0026C0  EF77  F013         	goto	l5244
  1568   0026C4                     l5242:
  1569                           
  1570                           ; BSR set to: 0
  1571   0026C4  5053               	movf	vfpfcnvrt@c^0,w,c
  1572   0026C6  6E49               	movwf	??_vfpfcnvrt^0,c
  1573   0026C8  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1574                           
  1575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 1, Range of values is 0 to 0
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte            4     3 (average)
  1581                           ;	Chosen strategy is simple_byte
  1582   0026CA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1583   0026CC  0A00               	xorlw	0	; case 0
  1584   0026CE  B4D8               	btfsc	status,2,c
  1585   0026D0  EF6C  F013         	goto	l5470
  1586   0026D4  EF77  F013         	goto	l5244
  1587   0026D8                     l5470:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 2, Range of values is 76 to 108
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte            7     4 (average)
  1595                           ;	Chosen strategy is simple_byte
  1596   0026D8  5049               	movf	??_vfpfcnvrt^0,w,c
  1597   0026DA  0A4C               	xorlw	76	; case 76
  1598   0026DC  B4D8               	btfsc	status,2,c
  1599   0026DE  EF48  F013         	goto	l5238
  1600   0026E2  0A20               	xorlw	32	; case 108
  1601   0026E4  B4D8               	btfsc	status,2,c
  1602   0026E6  EF2E  F013         	goto	l5236
  1603   0026EA  EF77  F013         	goto	l5244
  1604   0026EE                     l5244:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1608   0026EE  0E01               	movlw	1
  1609   0026F0  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1610   0026F2  6E49               	movwf	??_vfpfcnvrt^0,c
  1611   0026F4  0E00               	movlw	0
  1612   0026F6  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1613   0026F8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1614   0026FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1615   0026FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1616   002702  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1617   002706  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1620   00270A  EFA0  F013         	goto	l5252
  1621   00270E                     l5246:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1625   00270E  C043  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1626   002712  C044  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1627   002716  C04B  F034         	movff	vfpfcnvrt@convarg,efgtoa@f
  1628   00271A  C04C  F035         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1629   00271E  C04D  F036         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1630   002722  C04E  F037         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1631   002726  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1632   00272A  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1633   00272E                     	if	0	;tblptru may be non-zero
  1634   00272E                     	endif
  1635   00272E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1636   00272E  0E00               	movlw	low (__mediumconst shr (0+16))
  1637   002730  6EF8               	movwf	tblptru,c
  1638   002732                     	endif
  1639   002732  0008               	tblrd		*
  1640   002734  CFF5 F038          	movff	tablat,efgtoa@c
  1641   002738  EC16  F007         	call	_efgtoa	;wreg free
  1642   00273C  EFD7  F013         	goto	l1081
  1643   002740                     l5252:
  1644                           
  1645                           ; BSR set to: 0
  1646   002740  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1647   002744  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1648   002748                     	if	0	;tblptru may be non-zero
  1649   002748                     	endif
  1650   002748                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1651   002748  0E00               	movlw	low (__mediumconst shr (0+16))
  1652   00274A  6EF8               	movwf	tblptru,c
  1653   00274C                     	endif
  1654   00274C  0008               	tblrd		*
  1655   00274E  50F5               	movf	tablat,w,c
  1656   002750  6E49               	movwf	??_vfpfcnvrt^0,c
  1657   002752  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1658                           
  1659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 1, Range of values is 0 to 0
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            4     3 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666   002754  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1667   002756  0A00               	xorlw	0	; case 0
  1668   002758  B4D8               	btfsc	status,2,c
  1669   00275A  EFB1  F013         	goto	l5472
  1670   00275E  EFB8  F013         	goto	l5254
  1671   002762                     l5472:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 1, Range of values is 102 to 102
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte            4     3 (average)
  1679                           ;	Chosen strategy is simple_byte
  1680   002762  5049               	movf	??_vfpfcnvrt^0,w,c
  1681   002764  0A66               	xorlw	102	; case 102
  1682   002766  B4D8               	btfsc	status,2,c
  1683   002768  EF87  F013         	goto	l5246
  1684   00276C  EFB8  F013         	goto	l5254
  1685   002770                     l5254:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1688   002770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689   002774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690   002778  2ADE               	incf	postinc2,f,c
  1691   00277A  0E00               	movlw	0
  1692   00277C  22DD               	addwfc	postdec2,f,c
  1693   00277E  EFD7  F013         	goto	l1081
  1694   002782                     l5258:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1697   002782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698   002786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699   00278A  CFDE FFF6          	movff	postinc2,tblptrl
  1700   00278E  CFDD FFF7          	movff	postdec2,tblptrh
  1701   002792                     	if	0	;tblptru may be non-zero
  1702   002792                     	endif
  1703   002792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1704   002792  0E00               	movlw	low (__mediumconst shr (0+16))
  1705   002794  6EF8               	movwf	tblptru,c
  1706   002796                     	endif
  1707   002796  0008               	tblrd		*
  1708   002798  50F5               	movf	tablat,w,c
  1709   00279A  6E05               	movwf	fputc@c^0,c
  1710   00279C  6A06               	clrf	(fputc@c+1)^0,c
  1711   00279E  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1712   0027A2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1713   0027A6  EC20  F01B         	call	_fputc	;wreg free
  1714   0027AA  EFB8  F013         	goto	l5254
  1715   0027AE                     l1081:
  1716   0027AE  0012               	return		;funcret
  1717   0027B0                     __end_of_vfpfcnvrt:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _efgtoa *****************
  1721 ;; Defined at:
  1722 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  1725 ;;		 -> sprintf@f(11), 
  1726 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  1727 ;;  c               1   55[COMRAM] unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  u               4   40[BANK0 ] struct flui
  1730 ;;  g               4   34[BANK0 ] struct flui
  1731 ;;  l               4   29[BANK0 ] struct flui
  1732 ;;  h               4   25[BANK0 ] struct flui
  1733 ;;  ou              4   19[BANK0 ] struct flui
  1734 ;;  n               2   38[BANK0 ] int 
  1735 ;;  i               2   23[BANK0 ] int 
  1736 ;;  w               2   17[BANK0 ] int 
  1737 ;;  e               2   15[BANK0 ] int 
  1738 ;;  m               2   13[BANK0 ] int 
  1739 ;;  d               2   11[BANK0 ] int 
  1740 ;;  t               2    4[BANK0 ] int 
  1741 ;;  p               2    2[BANK0 ] int 
  1742 ;;  ne              2    0[BANK0 ] int 
  1743 ;;  sign            1   33[BANK0 ] unsigned char 
  1744 ;;  nmode           1   10[BANK0 ] unsigned char 
  1745 ;;  mode            1    9[BANK0 ] unsigned char 
  1746 ;;  pp              1    8[BANK0 ] unsigned char 
  1747 ;;  esign           1    0        unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1757 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;Total ram usage:       53 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 6
  1764 ;; This function calls:
  1765 ;;		___fladd
  1766 ;;		___fldiv
  1767 ;;		___fleq
  1768 ;;		___flge
  1769 ;;		___flmul
  1770 ;;		___flneg
  1771 ;;		___flsub
  1772 ;;		___fltol
  1773 ;;		___fpclassifyf
  1774 ;;		_floorf
  1775 ;;		_labs
  1776 ;;		_memcpy
  1777 ;;		_pad
  1778 ;;		_strcpy
  1779 ;; This function is called by:
  1780 ;;		_vfpfcnvrt
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text4
  1785   000E2C                     __ptext4:
  1786                           	callstack 0
  1787   000E2C                     _efgtoa:
  1788                           	callstack 21
  1789   000E2C                     
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1791   000E2C  0E00               	movlw	0
  1792   000E2E  0100               	movlb	0	; () banked
  1793   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1794   000E32                     
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1797   000E32  C034  F082         	movff	efgtoa@f,efgtoa@g
  1798   000E36  C035  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1799   000E3A  C036  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1800   000E3E  C037  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1801   000E42                     
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1804   000E42  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1805   000E44  EF28  F007         	goto	u5760
  1806   000E48  EF26  F007         	goto	u5761
  1807   000E4C                     u5761:
  1808   000E4C  EF3C  F007         	goto	l4988
  1809   000E50                     u5760:
  1810   000E50                     
  1811                           ; BSR set to: 0
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1813   000E50  0E01               	movlw	1
  1814   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1815   000E54                     
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1818   000E54  C082  F005         	movff	efgtoa@g,___flneg@f1
  1819   000E58  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  1820   000E5C  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  1821   000E60  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  1822   000E64  EC5B  F01E         	call	___flneg	;wreg free
  1823   000E68  C005  F082         	movff	?___flneg,efgtoa@g
  1824   000E6C  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  1825   000E70  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  1826   000E74  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  1827   000E78                     l4988:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1830   000E78  0E00               	movlw	0
  1831   000E7A  0100               	movlb	0	; () banked
  1832   000E7C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1833   000E7E  0E00               	movlw	0
  1834   000E80  6F86               	movwf	efgtoa@n& (0+255),b
  1835   000E82                     
  1836                           ; BSR set to: 0
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1838   000E82  C0EF  F071         	movff	_width,efgtoa@w
  1839   000E86  C0F0  F072         	movff	_width+1,efgtoa@w+1
  1840   000E8A                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1843   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1844   000E8C  B4D8               	btfsc	status,2,c
  1845   000E8E  EF4B  F007         	goto	u5771
  1846   000E92  EF4D  F007         	goto	u5770
  1847   000E96                     u5771:
  1848   000E96  EF61  F007         	goto	l5002
  1849   000E9A                     u5770:
  1850   000E9A                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1853   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1854   000E9C  A4D8               	btfss	status,2,c
  1855   000E9E  EF53  F007         	goto	u5781
  1856   000EA2  EF55  F007         	goto	u5780
  1857   000EA6                     u5781:
  1858   000EA6  EF5B  F007         	goto	l4998
  1859   000EAA                     u5780:
  1860   000EAA                     
  1861                           ; BSR set to: 0
  1862   000EAA  0E00               	movlw	0
  1863   000EAC  6F67               	movwf	(_efgtoa$1403+1)& (0+255),b
  1864   000EAE  0E2B               	movlw	43
  1865   000EB0  6F66               	movwf	_efgtoa$1403& (0+255),b
  1866   000EB2  EF5F  F007         	goto	l5000
  1867   000EB6                     l4998:
  1868                           
  1869                           ; BSR set to: 0
  1870   000EB6  0E00               	movlw	0
  1871   000EB8  6F67               	movwf	(_efgtoa$1403+1)& (0+255),b
  1872   000EBA  0E2D               	movlw	45
  1873   000EBC  6F66               	movwf	_efgtoa$1403& (0+255),b
  1874   000EBE                     l5000:
  1875                           
  1876                           ; BSR set to: 0
  1877   000EBE  C066  F081         	movff	_efgtoa$1403,efgtoa@sign
  1878   000EC2                     l5002:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1882   000EC2  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1883   000EC6  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1884   000ECA  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1885   000ECE  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1886   000ED2  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1887   000ED6  0405               	decf	?___fpclassifyf^0,w,c
  1888   000ED8  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1889   000EDA  A4D8               	btfss	status,2,c
  1890   000EDC  EF72  F007         	goto	u5791
  1891   000EE0  EF74  F007         	goto	u5790
  1892   000EE4                     u5791:
  1893   000EE4  EFA7  F007         	goto	l5020
  1894   000EE8                     u5790:
  1895   000EE8                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1897   000EE8  0100               	movlb	0	; () banked
  1898   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1899   000EEC  B4D8               	btfsc	status,2,c
  1900   000EEE  EF7B  F007         	goto	u5801
  1901   000EF2  EF7D  F007         	goto	u5800
  1902   000EF6                     u5801:
  1903   000EF6  EF86  F007         	goto	l5012
  1904   000EFA                     u5800:
  1905   000EFA                     
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1908   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  1909   000EFE                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1912   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  1913   000F00  A0D8               	btfss	status,0,c
  1914   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1915   000F04                     
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1918   000F04  0E00               	movlw	0
  1919   000F06  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1920   000F08  0E01               	movlw	1
  1921   000F0A  6F86               	movwf	efgtoa@n& (0+255),b
  1922   000F0C                     l5012:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1926   000F0C  0E50               	movlw	low _dbuf
  1927   000F0E  2586               	addwf	efgtoa@n& (0+255),w,b
  1928   000F10  6E05               	movwf	strcpy@dest^0,c
  1929   000F12  0E01               	movlw	high _dbuf
  1930   000F14  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1931   000F16  6E06               	movwf	(strcpy@dest+1)^0,c
  1932   000F18  0E22               	movlw	low STR_2
  1933   000F1A  6E07               	movwf	strcpy@src^0,c
  1934   000F1C  0E0E               	movlw	high STR_2
  1935   000F1E  6E08               	movwf	(strcpy@src+1)^0,c
  1936   000F20  ECB7  F01D         	call	_strcpy	;wreg free
  1937   000F24                     l5014:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1940   000F24  0100               	movlb	0	; () banked
  1941   000F26  0EFD               	movlw	253
  1942   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  1943   000F2A  0EFF               	movlw	255
  1944   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1945   000F2E                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1948   000F2E  C032  F015         	movff	efgtoa@fp,pad@fp
  1949   000F32  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  1950   000F36  0E50               	movlw	low _dbuf
  1951   000F38  6E17               	movwf	pad@buf^0,c
  1952   000F3A  0E01               	movlw	high _dbuf
  1953   000F3C  6E18               	movwf	(pad@buf+1)^0,c
  1954   000F3E  C071  F019         	movff	efgtoa@w,pad@p
  1955   000F42  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  1956   000F46  ECDA  F01B         	call	_pad	;wreg free
  1957   000F4A  EF12  F00C         	goto	l1033
  1958   000F4E                     l5020:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1961   000F4E  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1962   000F52  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1963   000F56  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1964   000F5A  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1965   000F5E  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1966   000F62  5005               	movf	?___fpclassifyf^0,w,c
  1967   000F64  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1968   000F66  A4D8               	btfss	status,2,c
  1969   000F68  EFB8  F007         	goto	u5811
  1970   000F6C  EFBA  F007         	goto	u5810
  1971   000F70                     u5811:
  1972   000F70  EFDA  F007         	goto	l5038
  1973   000F74                     u5810:
  1974   000F74                     
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1976   000F74  0100               	movlb	0	; () banked
  1977   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  1978   000F78  B4D8               	btfsc	status,2,c
  1979   000F7A  EFC1  F007         	goto	u5821
  1980   000F7E  EFC3  F007         	goto	u5820
  1981   000F82                     u5821:
  1982   000F82  EFCC  F007         	goto	l5030
  1983   000F86                     u5820:
  1984   000F86                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1987   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  1988   000F8A                     
  1989                           ; BSR set to: 0
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1991   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  1992   000F8C  A0D8               	btfss	status,0,c
  1993   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1994   000F90                     
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  1997   000F90  0E00               	movlw	0
  1998   000F92  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1999   000F94  0E01               	movlw	1
  2000   000F96  6F86               	movwf	efgtoa@n& (0+255),b
  2001   000F98                     l5030:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2005   000F98  0E50               	movlw	low _dbuf
  2006   000F9A  2586               	addwf	efgtoa@n& (0+255),w,b
  2007   000F9C  6E05               	movwf	strcpy@dest^0,c
  2008   000F9E  0E01               	movlw	high _dbuf
  2009   000FA0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2010   000FA2  6E06               	movwf	(strcpy@dest+1)^0,c
  2011   000FA4  0E26               	movlw	low STR_5
  2012   000FA6  6E07               	movwf	strcpy@src^0,c
  2013   000FA8  0E0E               	movlw	high STR_5
  2014   000FAA  6E08               	movwf	(strcpy@src+1)^0,c
  2015   000FAC  ECB7  F01D         	call	_strcpy	;wreg free
  2016   000FB0  EF92  F007         	goto	l5014
  2017   000FB4                     l5038:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2020   000FB4  0E00               	movlw	0
  2021   000FB6  0100               	movlb	0	; () banked
  2022   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2023   000FBA  0E00               	movlw	0
  2024   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2025   000FBE  0E80               	movlw	128
  2026   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2027   000FC2  0E3F               	movlw	63
  2028   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2031   000FC6  0E00               	movlw	0
  2032   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2033   000FCA  0E00               	movlw	0
  2034   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2035   000FCE                     
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2038   000FCE  C082  F005         	movff	efgtoa@g,___fleq@ff1
  2039   000FD2  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2040   000FD6  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2041   000FDA  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2042   000FDE  0E00               	movlw	0
  2043   000FE0  6E09               	movwf	___fleq@ff2^0,c
  2044   000FE2  0E00               	movlw	0
  2045   000FE4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2046   000FE6  0E00               	movlw	0
  2047   000FE8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2048   000FEA  0E00               	movlw	0
  2049   000FEC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2050   000FEE  EC85  F01B         	call	___fleq	;wreg free
  2051   000FF2  B0D8               	btfsc	status,0,c
  2052   000FF4  EFFE  F007         	goto	u5831
  2053   000FF8  EF00  F008         	goto	u5830
  2054   000FFC                     u5831:
  2055   000FFC  EFDF  F008         	goto	l1036
  2056   001000                     u5830:
  2057   001000  EF0D  F008         	goto	l5046
  2058   001004                     l1038:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2061   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2062   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2063   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2064   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2065   001014                     
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2067   001014  0100               	movlb	0	; () banked
  2068   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2069   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2070   00101A                     l5046:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2073   00101A  C088  F005         	movff	efgtoa@u,___flmul@b
  2074   00101E  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2075   001022  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2076   001026  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2077   00102A  0E00               	movlw	0
  2078   00102C  6E09               	movwf	___flmul@a^0,c
  2079   00102E  0E00               	movlw	0
  2080   001030  6E0A               	movwf	(___flmul@a+1)^0,c
  2081   001032  0E20               	movlw	32
  2082   001034  6E0B               	movwf	(___flmul@a+2)^0,c
  2083   001036  0E41               	movlw	65
  2084   001038  6E0C               	movwf	(___flmul@a+3)^0,c
  2085   00103A  EC73  F00E         	call	___flmul	;wreg free
  2086   00103E  C005  F073         	movff	?___flmul,efgtoa@ou
  2087   001042  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2088   001046  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2089   00104A  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2090   00104E  0100               	movlb	0	; () banked
  2091   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2092   001052  5D82               	subwf	efgtoa@g& (0+255),w,b
  2093   001054  6E05               	movwf	labs@a^0,c
  2094   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2095   001058  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2096   00105A  6E06               	movwf	(labs@a+1)^0,c
  2097   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2098   00105E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2099   001060  6E07               	movwf	(labs@a+2)^0,c
  2100   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2101   001064  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2102   001066  6E08               	movwf	(labs@a+3)^0,c
  2103   001068  EC17  F01C         	call	_labs	;wreg free
  2104   00106C  BE08               	btfsc	(?_labs+3)^0,7,c
  2105   00106E  EF44  F008         	goto	u5841
  2106   001072  5008               	movf	(?_labs+3)^0,w,c
  2107   001074  1007               	iorwf	(?_labs+2)^0,w,c
  2108   001076  1006               	iorwf	(?_labs+1)^0,w,c
  2109   001078  E109               	bnz	u5840
  2110   00107A  0E02               	movlw	2
  2111   00107C  5C05               	subwf	?_labs^0,w,c
  2112   00107E  A0D8               	btfss	status,0,c
  2113   001080  EF44  F008         	goto	u5841
  2114   001084  EF46  F008         	goto	u5840
  2115   001088                     u5841:
  2116   001088  EF02  F008         	goto	l1038
  2117   00108C                     u5840:
  2118   00108C  C073  F01E         	movff	efgtoa@ou,___flge@ff1
  2119   001090  C074  F01F         	movff	efgtoa@ou+1,___flge@ff1+1
  2120   001094  C075  F020         	movff	efgtoa@ou+2,___flge@ff1+2
  2121   001098  C076  F021         	movff	efgtoa@ou+3,___flge@ff1+3
  2122   00109C  C082  F022         	movff	efgtoa@g,___flge@ff2
  2123   0010A0  C083  F023         	movff	efgtoa@g+1,___flge@ff2+1
  2124   0010A4  C084  F024         	movff	efgtoa@g+2,___flge@ff2+2
  2125   0010A8  C085  F025         	movff	efgtoa@g+3,___flge@ff2+3
  2126   0010AC  ECB8  F019         	call	___flge	;wreg free
  2127   0010B0  A0D8               	btfss	status,0,c
  2128   0010B2  EF5D  F008         	goto	u5851
  2129   0010B6  EF5F  F008         	goto	u5850
  2130   0010BA                     u5851:
  2131   0010BA  EF02  F008         	goto	l1038
  2132   0010BE                     u5850:
  2133   0010BE                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2135   0010BE  0100               	movlb	0	; () banked
  2136   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2137   0010C2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2138   0010C4  6E05               	movwf	labs@a^0,c
  2139   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2140   0010C8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2141   0010CA  6E06               	movwf	(labs@a+1)^0,c
  2142   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2143   0010CE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2144   0010D0  6E07               	movwf	(labs@a+2)^0,c
  2145   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2146   0010D4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2147   0010D6  6E08               	movwf	(labs@a+3)^0,c
  2148   0010D8  EC17  F01C         	call	_labs	;wreg free
  2149   0010DC  BE08               	btfsc	(?_labs+3)^0,7,c
  2150   0010DE  EF7E  F008         	goto	u5860
  2151   0010E2  5008               	movf	(?_labs+3)^0,w,c
  2152   0010E4  1007               	iorwf	(?_labs+2)^0,w,c
  2153   0010E6  1006               	iorwf	(?_labs+1)^0,w,c
  2154   0010E8  E107               	bnz	u5861
  2155   0010EA  0E02               	movlw	2
  2156   0010EC  5C05               	subwf	?_labs^0,w,c
  2157   0010EE  B0D8               	btfsc	status,0,c
  2158   0010F0  EF7C  F008         	goto	u5861
  2159   0010F4  EF7E  F008         	goto	u5860
  2160   0010F8                     u5861:
  2161   0010F8  EFC6  F008         	goto	l5064
  2162   0010FC                     u5860:
  2163   0010FC                     l5054:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2166   0010FC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2167   001100  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2168   001104  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2169   001108  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2172   00110C  EFDF  F008         	goto	l1036
  2173   001110                     l5056:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2176   001110  C088  F005         	movff	efgtoa@u,___fldiv@b
  2177   001114  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2178   001118  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2179   00111C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2180   001120  0E00               	movlw	0
  2181   001122  6E09               	movwf	___fldiv@a^0,c
  2182   001124  0E00               	movlw	0
  2183   001126  6E0A               	movwf	(___fldiv@a+1)^0,c
  2184   001128  0E20               	movlw	32
  2185   00112A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2186   00112C  0E41               	movlw	65
  2187   00112E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2188   001130  EC88  F010         	call	___fldiv	;wreg free
  2189   001134  C005  F088         	movff	?___fldiv,efgtoa@u
  2190   001138  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2191   00113C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2192   001140  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2193   001144                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2195   001144  0100               	movlb	0	; () banked
  2196   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2197   001148  A0D8               	btfss	status,0,c
  2198   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2199   00114C                     
  2200                           ; BSR set to: 0
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2202   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2203   00114E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2204   001150  6E05               	movwf	labs@a^0,c
  2205   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2206   001154  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2207   001156  6E06               	movwf	(labs@a+1)^0,c
  2208   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2209   00115A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2210   00115C  6E07               	movwf	(labs@a+2)^0,c
  2211   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2212   001160  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2213   001162  6E08               	movwf	(labs@a+3)^0,c
  2214   001164  EC17  F01C         	call	_labs	;wreg free
  2215   001168  BE08               	btfsc	(?_labs+3)^0,7,c
  2216   00116A  EFC4  F008         	goto	u5870
  2217   00116E  5008               	movf	(?_labs+3)^0,w,c
  2218   001170  1007               	iorwf	(?_labs+2)^0,w,c
  2219   001172  1006               	iorwf	(?_labs+1)^0,w,c
  2220   001174  E107               	bnz	u5871
  2221   001176  0E02               	movlw	2
  2222   001178  5C05               	subwf	?_labs^0,w,c
  2223   00117A  B0D8               	btfsc	status,0,c
  2224   00117C  EFC2  F008         	goto	u5871
  2225   001180  EFC4  F008         	goto	u5870
  2226   001184                     u5871:
  2227   001184  EFC6  F008         	goto	l5064
  2228   001188                     u5870:
  2229   001188  EF7E  F008         	goto	l5054
  2230   00118C                     l5064:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2233   00118C  C082  F01E         	movff	efgtoa@g,___flge@ff1
  2234   001190  C083  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2235   001194  C084  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2236   001198  C085  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2237   00119C  C088  F022         	movff	efgtoa@u,___flge@ff2
  2238   0011A0  C089  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2239   0011A4  C08A  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2240   0011A8  C08B  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2241   0011AC  ECB8  F019         	call	___flge	;wreg free
  2242   0011B0  A0D8               	btfss	status,0,c
  2243   0011B2  EFDD  F008         	goto	u5881
  2244   0011B6  EFDF  F008         	goto	u5880
  2245   0011BA                     u5881:
  2246   0011BA  EF88  F008         	goto	l5056
  2247   0011BE                     u5880:
  2248   0011BE                     l1036:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2251   0011BE  C038  F069         	movff	efgtoa@c,efgtoa@mode
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2254   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2255   0011C6                     
  2256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2257   0011C6  0100               	movlb	0	; () banked
  2258   0011C8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  2259   0011CA  EFE9  F008         	goto	u5891
  2260   0011CE  EFEB  F008         	goto	u5890
  2261   0011D2                     u5891:
  2262   0011D2  EFF1  F008         	goto	l5070
  2263   0011D6                     u5890:
  2264   0011D6                     
  2265                           ; BSR set to: 0
  2266   0011D6  C0F1  F062         	movff	_prec,efgtoa@p
  2267   0011DA  C0F2  F063         	movff	_prec+1,efgtoa@p+1
  2268   0011DE  EFF5  F008         	goto	l5072
  2269   0011E2                     l5070:
  2270                           
  2271                           ; BSR set to: 0
  2272   0011E2  0E00               	movlw	0
  2273   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2274   0011E6  0E06               	movlw	6
  2275   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2276   0011EA                     l5072:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2280   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2281   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2282   0011F2                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2285   0011F2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2286   0011F4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2287   0011F6                     
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2290   0011F6  0E66               	movlw	102
  2291   0011F8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2292   0011FA  A4D8               	btfss	status,2,c
  2293   0011FC  EF02  F009         	goto	u5901
  2294   001200  EF04  F009         	goto	u5900
  2295   001204                     u5901:
  2296   001204  EF24  F009         	goto	l5086
  2297   001208                     u5900:
  2298   001208                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2301   001208  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2302   00120A  EF0B  F009         	goto	u5910
  2303   00120E  EF09  F009         	goto	u5911
  2304   001212                     u5911:
  2305   001212  EF17  F009         	goto	l5082
  2306   001216                     u5910:
  2307   001216                     
  2308                           ; BSR set to: 0
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2310   001216  0E00               	movlw	0
  2311   001218  6F88               	movwf	efgtoa@u& (0+255),b
  2312   00121A  0E00               	movlw	0
  2313   00121C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2314   00121E  0E80               	movlw	128
  2315   001220  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2316   001222  0E3F               	movlw	63
  2317   001224  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2320   001226  0E00               	movlw	0
  2321   001228  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2322   00122A  0E00               	movlw	0
  2323   00122C  6F6F               	movwf	efgtoa@e& (0+255),b
  2324   00122E                     l5082:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2328   00122E  0E67               	movlw	103
  2329   001230  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2330   001232  B4D8               	btfsc	status,2,c
  2331   001234  EF1E  F009         	goto	u5921
  2332   001238  EF20  F009         	goto	u5920
  2333   00123C                     u5921:
  2334   00123C  EF24  F009         	goto	l5086
  2335   001240                     u5920:
  2336   001240                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2339   001240  516F               	movf	efgtoa@e& (0+255),w,b
  2340   001242  276D               	addwf	efgtoa@m& (0+255),f,b
  2341   001244  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2342   001246  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2343   001248                     l5086:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2347   001248  0E00               	movlw	0
  2348   00124A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2349   00124C  0E00               	movlw	0
  2350   00124E  6F77               	movwf	efgtoa@i& (0+255),b
  2351   001250                     
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2354   001250  C082  F079         	movff	efgtoa@g,efgtoa@h
  2355   001254  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2356   001258  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2357   00125C  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2358   001260                     
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2361   001260  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2362   001264  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2363   001268  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2364   00126C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2367   001270  EFB5  F009         	goto	l5100
  2368   001274                     l5092:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2372   001274  C079  F005         	movff	efgtoa@h,___fldiv@b
  2373   001278  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2374   00127C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2375   001280  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2376   001284  C088  F009         	movff	efgtoa@u,___fldiv@a
  2377   001288  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2378   00128C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2379   001290  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2380   001294  EC88  F010         	call	___fldiv	;wreg free
  2381   001298  C005  F01E         	movff	?___fldiv,floorf@x
  2382   00129C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2383   0012A0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2384   0012A4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2385   0012A8  EC17  F015         	call	_floorf	;wreg free
  2386   0012AC  C01E  F07D         	movff	?_floorf,efgtoa@l
  2387   0012B0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2388   0012B4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2389   0012B8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2392   0012BC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2393   0012C0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2394   0012C4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2395   0012C8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2396   0012CC  EC35  F019         	call	___fltol	;wreg free
  2397   0012D0  C005  F06B         	movff	?___fltol,efgtoa@d
  2398   0012D4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2399   0012D8                     
  2400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2401   0012D8  C079  F01E         	movff	efgtoa@h,___flsub@b
  2402   0012DC  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2403   0012E0  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2404   0012E4  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2405   0012E8  C07D  F009         	movff	efgtoa@l,___flmul@a
  2406   0012EC  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2407   0012F0  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2408   0012F4  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2409   0012F8  C088  F005         	movff	efgtoa@u,___flmul@b
  2410   0012FC  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2411   001300  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2412   001304  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2413   001308  EC73  F00E         	call	___flmul	;wreg free
  2414   00130C  C005  F022         	movff	?___flmul,___flsub@a
  2415   001310  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2416   001314  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2417   001318  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2418   00131C  EC94  F01D         	call	___flsub	;wreg free
  2419   001320  C01E  F079         	movff	?___flsub,efgtoa@h
  2420   001324  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2421   001328  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2422   00132C  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2423   001330                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2425   001330  C088  F005         	movff	efgtoa@u,___fldiv@b
  2426   001334  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2427   001338  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2428   00133C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2429   001340  0E00               	movlw	0
  2430   001342  6E09               	movwf	___fldiv@a^0,c
  2431   001344  0E00               	movlw	0
  2432   001346  6E0A               	movwf	(___fldiv@a+1)^0,c
  2433   001348  0E20               	movlw	32
  2434   00134A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2435   00134C  0E41               	movlw	65
  2436   00134E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2437   001350  EC88  F010         	call	___fldiv	;wreg free
  2438   001354  C005  F088         	movff	?___fldiv,efgtoa@u
  2439   001358  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2440   00135C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2441   001360  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2442   001364                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2444   001364  0100               	movlb	0	; () banked
  2445   001366  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2446   001368  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2447   00136A                     l5100:
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2451   00136A  516D               	movf	efgtoa@m& (0+255),w,b
  2452   00136C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2453   00136E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2454   001370  0A80               	xorlw	128
  2455   001372  6E39               	movwf	??_efgtoa^0,c
  2456   001374  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2457   001376  0A80               	xorlw	128
  2458   001378  5839               	subwfb	??_efgtoa^0,w,c
  2459   00137A  A0D8               	btfss	status,0,c
  2460   00137C  EFC2  F009         	goto	u5931
  2461   001380  EFC4  F009         	goto	u5930
  2462   001384                     u5931:
  2463   001384  EF3A  F009         	goto	l5092
  2464   001388                     u5930:
  2465   001388                     
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2468   001388  C088  F005         	movff	efgtoa@u,___flmul@b
  2469   00138C  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2470   001390  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2471   001394  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2472   001398  0E00               	movlw	0
  2473   00139A  6E09               	movwf	___flmul@a^0,c
  2474   00139C  0E00               	movlw	0
  2475   00139E  6E0A               	movwf	(___flmul@a+1)^0,c
  2476   0013A0  0EA0               	movlw	160
  2477   0013A2  6E0B               	movwf	(___flmul@a+2)^0,c
  2478   0013A4  0E40               	movlw	64
  2479   0013A6  6E0C               	movwf	(___flmul@a+3)^0,c
  2480   0013A8  EC73  F00E         	call	___flmul	;wreg free
  2481   0013AC  C005  F07D         	movff	?___flmul,efgtoa@l
  2482   0013B0  C006  F07E         	movff	?___flmul+1,efgtoa@l+1
  2483   0013B4  C007  F07F         	movff	?___flmul+2,efgtoa@l+2
  2484   0013B8  C008  F080         	movff	?___flmul+3,efgtoa@l+3
  2485   0013BC                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2487   0013BC  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2488   0013C0  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2489   0013C4  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2490   0013C8  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2491   0013CC  C07D  F022         	movff	efgtoa@l,___flge@ff2
  2492   0013D0  C07E  F023         	movff	efgtoa@l+1,___flge@ff2+1
  2493   0013D4  C07F  F024         	movff	efgtoa@l+2,___flge@ff2+2
  2494   0013D8  C080  F025         	movff	efgtoa@l+3,___flge@ff2+3
  2495   0013DC  ECB8  F019         	call	___flge	;wreg free
  2496   0013E0  B0D8               	btfsc	status,0,c
  2497   0013E2  EFF5  F009         	goto	u5941
  2498   0013E6  EFF7  F009         	goto	u5940
  2499   0013EA                     u5941:
  2500   0013EA  EF02  F00A         	goto	l5108
  2501   0013EE                     u5940:
  2502   0013EE                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2504   0013EE  0E00               	movlw	0
  2505   0013F0  0100               	movlb	0	; () banked
  2506   0013F2  6F7D               	movwf	efgtoa@l& (0+255),b
  2507   0013F4  0E00               	movlw	0
  2508   0013F6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2509   0013F8  0E00               	movlw	0
  2510   0013FA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2511   0013FC  0E00               	movlw	0
  2512   0013FE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2515   001400  EF2B  F00A         	goto	l5114
  2516   001404                     l5108:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2519   001404  C079  F005         	movff	efgtoa@h,___fleq@ff1
  2520   001408  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  2521   00140C  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  2522   001410  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  2523   001414  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  2524   001418  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  2525   00141C  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  2526   001420  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  2527   001424  EC85  F01B         	call	___fleq	;wreg free
  2528   001428  A0D8               	btfss	status,0,c
  2529   00142A  EF19  F00A         	goto	u5951
  2530   00142E  EF1B  F00A         	goto	u5950
  2531   001432                     u5951:
  2532   001432  EF2B  F00A         	goto	l5114
  2533   001436                     u5950:
  2534   001436  0100               	movlb	0	; () banked
  2535   001438  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2536   00143A  EF21  F00A         	goto	u5961
  2537   00143E  EF23  F00A         	goto	u5960
  2538   001442                     u5961:
  2539   001442  EF2B  F00A         	goto	l5114
  2540   001446                     u5960:
  2541   001446                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2544   001446  0E00               	movlw	0
  2545   001448  6F7D               	movwf	efgtoa@l& (0+255),b
  2546   00144A  0E00               	movlw	0
  2547   00144C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2548   00144E  0E00               	movlw	0
  2549   001450  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2550   001452  0E00               	movlw	0
  2551   001454  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2552   001456                     l5114:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2555   001456  C082  F005         	movff	efgtoa@g,___fladd@b
  2556   00145A  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  2557   00145E  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  2558   001462  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  2559   001466  C07D  F009         	movff	efgtoa@l,___fladd@a
  2560   00146A  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  2561   00146E  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  2562   001472  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  2563   001476  EC13  F00C         	call	___fladd	;wreg free
  2564   00147A  C005  F079         	movff	?___fladd,efgtoa@h
  2565   00147E  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  2566   001482  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  2567   001486  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  2568   00148A                     
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2570   00148A  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2571   00148E  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2572   001492  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2573   001496  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2574   00149A  0E00               	movlw	0
  2575   00149C  6E09               	movwf	___flmul@a^0,c
  2576   00149E  0E00               	movlw	0
  2577   0014A0  6E0A               	movwf	(___flmul@a+1)^0,c
  2578   0014A2  0E20               	movlw	32
  2579   0014A4  6E0B               	movwf	(___flmul@a+2)^0,c
  2580   0014A6  0E41               	movlw	65
  2581   0014A8  6E0C               	movwf	(___flmul@a+3)^0,c
  2582   0014AA  C073  F005         	movff	efgtoa@ou,___flmul@b
  2583   0014AE  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2584   0014B2  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2585   0014B6  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2586   0014BA  EC73  F00E         	call	___flmul	;wreg free
  2587   0014BE  C005  F022         	movff	?___flmul,___flge@ff2
  2588   0014C2  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2589   0014C6  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2590   0014CA  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2591   0014CE  ECB8  F019         	call	___flge	;wreg free
  2592   0014D2  A0D8               	btfss	status,0,c
  2593   0014D4  EF6E  F00A         	goto	u5971
  2594   0014D8  EF70  F00A         	goto	u5970
  2595   0014DC                     u5971:
  2596   0014DC  EF99  F00A         	goto	l5126
  2597   0014E0                     u5970:
  2598   0014E0                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2600   0014E0  0100               	movlb	0	; () banked
  2601   0014E2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2602   0014E4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2603   0014E6                     
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2606   0014E6  C073  F005         	movff	efgtoa@ou,___flmul@b
  2607   0014EA  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2608   0014EE  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2609   0014F2  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2610   0014F6  0E00               	movlw	0
  2611   0014F8  6E09               	movwf	___flmul@a^0,c
  2612   0014FA  0E00               	movlw	0
  2613   0014FC  6E0A               	movwf	(___flmul@a+1)^0,c
  2614   0014FE  0E20               	movlw	32
  2615   001500  6E0B               	movwf	(___flmul@a+2)^0,c
  2616   001502  0E41               	movlw	65
  2617   001504  6E0C               	movwf	(___flmul@a+3)^0,c
  2618   001506  EC73  F00E         	call	___flmul	;wreg free
  2619   00150A  C005  F073         	movff	?___flmul,efgtoa@ou
  2620   00150E  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2621   001512  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2622   001516  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2623   00151A                     
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2625   00151A  0E66               	movlw	102
  2626   00151C  0100               	movlb	0	; () banked
  2627   00151E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2628   001520  A4D8               	btfss	status,2,c
  2629   001522  EF95  F00A         	goto	u5981
  2630   001526  EF97  F00A         	goto	u5980
  2631   00152A                     u5981:
  2632   00152A  EF99  F00A         	goto	l5126
  2633   00152E                     u5980:
  2634   00152E                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2637   00152E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2638   001530  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2639   001532                     l5126:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2642   001532  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2643   001536  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2644   00153A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2645   00153E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2646   001542                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2648   001542  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2649   001546  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2650   00154A                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2652   00154A  0E00               	movlw	0
  2653   00154C  0100               	movlb	0	; () banked
  2654   00154E  6F68               	movwf	efgtoa@pp& (0+255),b
  2655   001550                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2658   001550  0E00               	movlw	0
  2659   001552  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2660   001554  0E00               	movlw	0
  2661   001556  6F64               	movwf	efgtoa@t& (0+255),b
  2662   001558                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2665   001558  0E00               	movlw	0
  2666   00155A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2667   00155C  0E00               	movlw	0
  2668   00155E  6F77               	movwf	efgtoa@i& (0+255),b
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2671   001560  EF97  F00B         	goto	l5176
  2672   001564                     l5136:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2676   001564  C079  F005         	movff	efgtoa@h,___fldiv@b
  2677   001568  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2678   00156C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2679   001570  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2680   001574  C088  F009         	movff	efgtoa@u,___fldiv@a
  2681   001578  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2682   00157C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2683   001580  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2684   001584  EC88  F010         	call	___fldiv	;wreg free
  2685   001588  C005  F01E         	movff	?___fldiv,floorf@x
  2686   00158C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2687   001590  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2688   001594  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2689   001598  EC17  F015         	call	_floorf	;wreg free
  2690   00159C  C01E  F07D         	movff	?_floorf,efgtoa@l
  2691   0015A0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2692   0015A4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2693   0015A8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2696   0015AC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2697   0015B0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2698   0015B4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2699   0015B8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2700   0015BC  EC35  F019         	call	___fltol	;wreg free
  2701   0015C0  BE06               	btfsc	(?___fltol+1)^0,7,c
  2702   0015C2  EFEE  F00A         	goto	u5990
  2703   0015C6  5006               	movf	(?___fltol+1)^0,w,c
  2704   0015C8  E107               	bnz	u5991
  2705   0015CA  0E0A               	movlw	10
  2706   0015CC  5C05               	subwf	?___fltol^0,w,c
  2707   0015CE  B0D8               	btfsc	status,0,c
  2708   0015D0  EFEC  F00A         	goto	u5991
  2709   0015D4  EFEE  F00A         	goto	u5990
  2710   0015D8                     u5991:
  2711   0015D8  EFFE  F00A         	goto	l5140
  2712   0015DC                     u5990:
  2713   0015DC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2714   0015E0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2715   0015E4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2716   0015E8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2717   0015EC  EC35  F019         	call	___fltol	;wreg free
  2718   0015F0  C005  F06B         	movff	?___fltol,efgtoa@d
  2719   0015F4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2720   0015F8  EF03  F00B         	goto	l1066
  2721   0015FC                     l5140:
  2722   0015FC  0E00               	movlw	0
  2723   0015FE  0100               	movlb	0	; () banked
  2724   001600  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2725   001602  0E09               	movlw	9
  2726   001604  6F6B               	movwf	efgtoa@d& (0+255),b
  2727   001606                     l1066:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2730   001606  0100               	movlb	0	; () banked
  2731   001608  5168               	movf	efgtoa@pp& (0+255),w,b
  2732   00160A  A4D8               	btfss	status,2,c
  2733   00160C  EF0A  F00B         	goto	u6001
  2734   001610  EF0C  F00B         	goto	u6000
  2735   001614                     u6001:
  2736   001614  EF34  F00B         	goto	l5160
  2737   001618                     u6000:
  2738   001618                     
  2739                           ; BSR set to: 0
  2740   001618  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2741   00161A  EF13  F00B         	goto	u6010
  2742   00161E  EF11  F00B         	goto	u6011
  2743   001622                     u6011:
  2744   001622  EF34  F00B         	goto	l5160
  2745   001626                     u6010:
  2746   001626                     
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2749   001626  0E50               	movlw	low _dbuf
  2750   001628  2586               	addwf	efgtoa@n& (0+255),w,b
  2751   00162A  6ED9               	movwf	fsr2l,c
  2752   00162C  0E01               	movlw	high _dbuf
  2753   00162E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2754   001630  6EDA               	movwf	fsr2h,c
  2755   001632  0E2E               	movlw	46
  2756   001634  6EDF               	movwf	indf2,c
  2757   001636                     
  2758                           ; BSR set to: 0
  2759   001636  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2760   001638  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2761   00163A                     
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2764   00163A  0771               	decf	efgtoa@w& (0+255),f,b
  2765   00163C  A0D8               	btfss	status,0,c
  2766   00163E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2767   001640                     
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2770   001640  0E01               	movlw	1
  2771   001642  6F68               	movwf	efgtoa@pp& (0+255),b
  2772   001644  EF34  F00B         	goto	l5160
  2773   001648                     l5152:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2777   001648  0E50               	movlw	low _dbuf
  2778   00164A  2586               	addwf	efgtoa@n& (0+255),w,b
  2779   00164C  6ED9               	movwf	fsr2l,c
  2780   00164E  0E01               	movlw	high _dbuf
  2781   001650  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2782   001652  6EDA               	movwf	fsr2h,c
  2783   001654  0E30               	movlw	48
  2784   001656  6EDF               	movwf	indf2,c
  2785   001658                     
  2786                           ; BSR set to: 0
  2787   001658  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2788   00165A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2789   00165C                     
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2792   00165C  0771               	decf	efgtoa@w& (0+255),f,b
  2793   00165E  A0D8               	btfss	status,0,c
  2794   001660  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2795   001662                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2798   001662  0764               	decf	efgtoa@t& (0+255),f,b
  2799   001664  A0D8               	btfss	status,0,c
  2800   001666  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2801   001668                     l5160:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2805   001668  5164               	movf	efgtoa@t& (0+255),w,b
  2806   00166A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2807   00166C  A4D8               	btfss	status,2,c
  2808   00166E  EF3B  F00B         	goto	u6021
  2809   001672  EF3D  F00B         	goto	u6020
  2810   001676                     u6021:
  2811   001676  EF24  F00B         	goto	l5152
  2812   00167A                     u6020:
  2813   00167A                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2816   00167A  0E50               	movlw	low _dbuf
  2817   00167C  2586               	addwf	efgtoa@n& (0+255),w,b
  2818   00167E  6ED9               	movwf	fsr2l,c
  2819   001680  0E01               	movlw	high _dbuf
  2820   001682  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2821   001684  6EDA               	movwf	fsr2h,c
  2822   001686  516B               	movf	efgtoa@d& (0+255),w,b
  2823   001688  0F30               	addlw	48
  2824   00168A  6EDF               	movwf	indf2,c
  2825   00168C                     
  2826                           ; BSR set to: 0
  2827   00168C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2828   00168E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2829   001690                     
  2830                           ; BSR set to: 0
  2831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2832   001690  0771               	decf	efgtoa@w& (0+255),f,b
  2833   001692  A0D8               	btfss	status,0,c
  2834   001694  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2835   001696                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2838   001696  C079  F01E         	movff	efgtoa@h,___flsub@b
  2839   00169A  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2840   00169E  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2841   0016A2  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2842   0016A6  C07D  F009         	movff	efgtoa@l,___flmul@a
  2843   0016AA  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2844   0016AE  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2845   0016B2  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2846   0016B6  C088  F005         	movff	efgtoa@u,___flmul@b
  2847   0016BA  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2848   0016BE  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2849   0016C2  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2850   0016C6  EC73  F00E         	call	___flmul	;wreg free
  2851   0016CA  C005  F022         	movff	?___flmul,___flsub@a
  2852   0016CE  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2853   0016D2  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2854   0016D6  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2855   0016DA  EC94  F01D         	call	___flsub	;wreg free
  2856   0016DE  C01E  F079         	movff	?___flsub,efgtoa@h
  2857   0016E2  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2858   0016E6  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2859   0016EA  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2860   0016EE                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2862   0016EE  C088  F005         	movff	efgtoa@u,___fldiv@b
  2863   0016F2  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2864   0016F6  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2865   0016FA  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2866   0016FE  0E00               	movlw	0
  2867   001700  6E09               	movwf	___fldiv@a^0,c
  2868   001702  0E00               	movlw	0
  2869   001704  6E0A               	movwf	(___fldiv@a+1)^0,c
  2870   001706  0E20               	movlw	32
  2871   001708  6E0B               	movwf	(___fldiv@a+2)^0,c
  2872   00170A  0E41               	movlw	65
  2873   00170C  6E0C               	movwf	(___fldiv@a+3)^0,c
  2874   00170E  EC88  F010         	call	___fldiv	;wreg free
  2875   001712  C005  F088         	movff	?___fldiv,efgtoa@u
  2876   001716  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2877   00171A  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2878   00171E  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2879   001722                     
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2881   001722  0100               	movlb	0	; () banked
  2882   001724  0760               	decf	efgtoa@ne& (0+255),f,b
  2883   001726  A0D8               	btfss	status,0,c
  2884   001728  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2885   00172A                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2888   00172A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2889   00172C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2890   00172E                     l5176:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2894   00172E  516D               	movf	efgtoa@m& (0+255),w,b
  2895   001730  5D77               	subwf	efgtoa@i& (0+255),w,b
  2896   001732  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2897   001734  0A80               	xorlw	128
  2898   001736  6E39               	movwf	??_efgtoa^0,c
  2899   001738  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2900   00173A  0A80               	xorlw	128
  2901   00173C  5839               	subwfb	??_efgtoa^0,w,c
  2902   00173E  B0D8               	btfsc	status,0,c
  2903   001740  EFA4  F00B         	goto	u6031
  2904   001744  EFA6  F00B         	goto	u6030
  2905   001748                     u6031:
  2906   001748  EFB4  F00B         	goto	l5180
  2907   00174C                     u6030:
  2908   00174C                     
  2909                           ; BSR set to: 0
  2910   00174C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2911   00174E  EFB2  F00B         	goto	u6041
  2912   001752  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2913   001754  E109               	bnz	u6040
  2914   001756  0E4B               	movlw	75
  2915   001758  5D86               	subwf	efgtoa@n& (0+255),w,b
  2916   00175A  A0D8               	btfss	status,0,c
  2917   00175C  EFB2  F00B         	goto	u6041
  2918   001760  EFB4  F00B         	goto	u6040
  2919   001764                     u6041:
  2920   001764  EFB2  F00A         	goto	l5136
  2921   001768                     u6040:
  2922   001768                     l5180:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2926   001768  0E00               	movlw	0
  2927   00176A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2928   00176C  0E4F               	movlw	79
  2929   00176E  6F77               	movwf	efgtoa@i& (0+255),b
  2930   001770                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2933   001770  0E50               	movlw	low _dbuf
  2934   001772  2577               	addwf	efgtoa@i& (0+255),w,b
  2935   001774  6ED9               	movwf	fsr2l,c
  2936   001776  0E01               	movlw	high _dbuf
  2937   001778  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2938   00177A  6EDA               	movwf	fsr2h,c
  2939   00177C  0E00               	movlw	0
  2940   00177E  6EDF               	movwf	indf2,c
  2941   001780                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2944   001780  0E50               	movlw	low _dbuf
  2945   001782  6E39               	movwf	??_efgtoa^0,c
  2946   001784  0E01               	movlw	high _dbuf
  2947   001786  6E3A               	movwf	(??_efgtoa+1)^0,c
  2948   001788  5186               	movf	efgtoa@n& (0+255),w,b
  2949   00178A  5E39               	subwf	??_efgtoa^0,f,c
  2950   00178C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2951   00178E  5A3A               	subwfb	(??_efgtoa+1)^0,f,c
  2952   001790  5177               	movf	efgtoa@i& (0+255),w,b
  2953   001792  2439               	addwf	??_efgtoa^0,w,c
  2954   001794  6E05               	movwf	memcpy@d1^0,c
  2955   001796  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2956   001798  203A               	addwfc	(??_efgtoa+1)^0,w,c
  2957   00179A  6E06               	movwf	(memcpy@d1+1)^0,c
  2958   00179C  0E50               	movlw	low _dbuf
  2959   00179E  6E07               	movwf	memcpy@s1^0,c
  2960   0017A0  0E01               	movlw	high _dbuf
  2961   0017A2  6E08               	movwf	(memcpy@s1+1)^0,c
  2962   0017A4  C086  F009         	movff	efgtoa@n,memcpy@n
  2963   0017A8  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  2964   0017AC  ECCC  F01C         	call	_memcpy	;wreg free
  2965   0017B0                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2967   0017B0  0100               	movlb	0	; () banked
  2968   0017B2  5186               	movf	efgtoa@n& (0+255),w,b
  2969   0017B4  5D77               	subwf	efgtoa@i& (0+255),w,b
  2970   0017B6  6F86               	movwf	efgtoa@n& (0+255),b
  2971   0017B8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2972   0017BA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2973   0017BC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2974   0017BE                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2977   0017BE  5181               	movf	efgtoa@sign& (0+255),w,b
  2978   0017C0  A4D8               	btfss	status,2,c
  2979   0017C2  EFE5  F00B         	goto	u6051
  2980   0017C6  EFE8  F00B         	goto	u6050
  2981   0017CA                     u6051:
  2982   0017CA  0E01               	movlw	1
  2983   0017CC  EFE9  F00B         	goto	u6060
  2984   0017D0                     u6050:
  2985   0017D0  0E00               	movlw	0
  2986   0017D2                     u6060:
  2987   0017D2  6F77               	movwf	efgtoa@i& (0+255),b
  2988   0017D4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2989   0017D6                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2992   0017D6  5181               	movf	efgtoa@sign& (0+255),w,b
  2993   0017D8  B4D8               	btfsc	status,2,c
  2994   0017DA  EFF1  F00B         	goto	u6071
  2995   0017DE  EFF3  F00B         	goto	u6070
  2996   0017E2                     u6071:
  2997   0017E2  EFFE  F00B         	goto	l5194
  2998   0017E6                     u6070:
  2999   0017E6                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3002   0017E6  0786               	decf	efgtoa@n& (0+255),f,b
  3003   0017E8  A0D8               	btfss	status,0,c
  3004   0017EA  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3005   0017EC  0E50               	movlw	low _dbuf
  3006   0017EE  2586               	addwf	efgtoa@n& (0+255),w,b
  3007   0017F0  6ED9               	movwf	fsr2l,c
  3008   0017F2  0E01               	movlw	high _dbuf
  3009   0017F4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3010   0017F6  6EDA               	movwf	fsr2h,c
  3011   0017F8  C081  FFDF         	movff	efgtoa@sign,indf2
  3012   0017FC                     l5194:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3016   0017FC  5177               	movf	efgtoa@i& (0+255),w,b
  3017   0017FE  5F71               	subwf	efgtoa@w& (0+255),f,b
  3018   001800  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3019   001802  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3020   001804                     
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3023   001804  C032  F015         	movff	efgtoa@fp,pad@fp
  3024   001808  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  3025   00180C  0E50               	movlw	low _dbuf
  3026   00180E  2586               	addwf	efgtoa@n& (0+255),w,b
  3027   001810  6E17               	movwf	pad@buf^0,c
  3028   001812  0E01               	movlw	high _dbuf
  3029   001814  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3030   001816  6E18               	movwf	(pad@buf+1)^0,c
  3031   001818  C071  F019         	movff	efgtoa@w,pad@p
  3032   00181C  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  3033   001820  ECDA  F01B         	call	_pad	;wreg free
  3034   001824                     l1033:
  3035   001824  0012               	return		;funcret
  3036   001826                     __end_of_efgtoa:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _strcpy *****************
  3040 ;; Defined at:
  3041 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3044 ;;		 -> dbuf(80), 
  3045 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3046 ;;		 -> STR_5(4), STR_2(4), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  d               2   10[COMRAM] PTR unsigned char 
  3049 ;;		 -> dbuf(80), 
  3050 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3051 ;;		 -> STR_5(4), STR_2(4), 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  2    4[COMRAM] PTR unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;Total ram usage:        8 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 2
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_efgtoa
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text5
  3076   003B6E                     __ptext5:
  3077                           	callstack 0
  3078   003B6E                     _strcpy:
  3079                           	callstack 24
  3080   003B6E  C007  F009         	movff	strcpy@src,strcpy@s
  3081   003B72  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3082   003B76  C005  F00B         	movff	strcpy@dest,strcpy@d
  3083   003B7A  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3084   003B7E                     l4880:
  3085   003B7E  C009  FFF6         	movff	strcpy@s,tblptrl
  3086   003B82  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3087   003B86  4A09               	infsnz	strcpy@s^0,f,c
  3088   003B88  2A0A               	incf	(strcpy@s+1)^0,f,c
  3089   003B8A                     	if	0	;tblptru may be non-zero
  3090   003B8A                     	endif
  3091   003B8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3092   003B8A  0E00               	movlw	low (__mediumconst shr (0+16))
  3093   003B8C  6EF8               	movwf	tblptru,c
  3094   003B8E                     	endif
  3095   003B8E  C00B  FFD9         	movff	strcpy@d,fsr2l
  3096   003B92  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3097   003B96  4A0B               	infsnz	strcpy@d^0,f,c
  3098   003B98  2A0C               	incf	(strcpy@d+1)^0,f,c
  3099   003B9A  0008               	tblrd		*
  3100   003B9C  CFF5 FFDF          	movff	tablat,indf2
  3101   003BA0  50DF               	movf	indf2,w,c
  3102   003BA2  A4D8               	btfss	status,2,c
  3103   003BA4  EFD6  F01D         	goto	u5531
  3104   003BA8  EFD8  F01D         	goto	u5530
  3105   003BAC                     u5531:
  3106   003BAC  EFBF  F01D         	goto	l4880
  3107   003BB0                     u5530:
  3108   003BB0  0012               	return		;funcret
  3109   003BB2                     __end_of_strcpy:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _memcpy *****************
  3113 ;; Defined at:
  3114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  d1              2    4[COMRAM] PTR void 
  3117 ;;		 -> dbuf(80), 
  3118 ;;  s1              2    6[COMRAM] PTR const void 
  3119 ;;		 -> dbuf(80), 
  3120 ;;  n               2    8[COMRAM] unsigned int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3123 ;;		 -> dbuf(80), 
  3124 ;;  d               2   11[COMRAM] PTR unsigned char 
  3125 ;;		 -> dbuf(80), 
  3126 ;;  tmp             1   10[COMRAM] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  2    4[COMRAM] PTR void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;Total ram usage:       11 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 2
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_efgtoa
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text6
  3151   003998                     __ptext6:
  3152                           	callstack 0
  3153   003998                     _memcpy:
  3154                           	callstack 24
  3155   003998  C007  F00E         	movff	memcpy@s1,memcpy@s
  3156   00399C  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  3157   0039A0  C005  F00C         	movff	memcpy@d1,memcpy@d
  3158   0039A4  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  3159   0039A8  EFE6  F01C         	goto	l4924
  3160   0039AC                     l4916:
  3161   0039AC  C00E  FFD9         	movff	memcpy@s,fsr2l
  3162   0039B0  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  3163   0039B4  50DF               	movf	indf2,w,c
  3164   0039B6  6E0B               	movwf	memcpy@tmp^0,c
  3165   0039B8  4A0E               	infsnz	memcpy@s^0,f,c
  3166   0039BA  2A0F               	incf	(memcpy@s+1)^0,f,c
  3167   0039BC  C00C  FFD9         	movff	memcpy@d,fsr2l
  3168   0039C0  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  3169   0039C4  C00B  FFDF         	movff	memcpy@tmp,indf2
  3170   0039C8  4A0C               	infsnz	memcpy@d^0,f,c
  3171   0039CA  2A0D               	incf	(memcpy@d+1)^0,f,c
  3172   0039CC                     l4924:
  3173   0039CC  0609               	decf	memcpy@n^0,f,c
  3174   0039CE  A0D8               	btfss	status,0,c
  3175   0039D0  060A               	decf	(memcpy@n+1)^0,f,c
  3176   0039D2  2809               	incf	memcpy@n^0,w,c
  3177   0039D4  E106               	bnz	u5651
  3178   0039D6  280A               	incf	(memcpy@n+1)^0,w,c
  3179   0039D8  A4D8               	btfss	status,2,c
  3180   0039DA  EFF1  F01C         	goto	u5651
  3181   0039DE  EFF3  F01C         	goto	u5650
  3182   0039E2                     u5651:
  3183   0039E2  EFD6  F01C         	goto	l4916
  3184   0039E6                     u5650:
  3185   0039E6  0012               	return		;funcret
  3186   0039E8                     __end_of_memcpy:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _labs *****************
  3190 ;; Defined at:
  3191 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  a               4    4[COMRAM] long 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  4    4[COMRAM] long 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;Total ram usage:        8 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 2
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_efgtoa
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text7
  3220   00382E                     __ptext7:
  3221                           	callstack 0
  3222   00382E                     _labs:
  3223                           	callstack 24
  3224   00382E  BE08               	btfsc	(labs@a+3)^0,7,c
  3225   003830  EF26  F01C         	goto	u5540
  3226   003834  5008               	movf	(labs@a+3)^0,w,c
  3227   003836  1007               	iorwf	(labs@a+2)^0,w,c
  3228   003838  1006               	iorwf	(labs@a+1)^0,w,c
  3229   00383A  E106               	bnz	u5541
  3230   00383C  0405               	decf	labs@a^0,w,c
  3231   00383E  B0D8               	btfsc	status,0,c
  3232   003840  EF24  F01C         	goto	u5541
  3233   003844  EF26  F01C         	goto	u5540
  3234   003848                     u5541:
  3235   003848  EF41  F01C         	goto	l1138
  3236   00384C                     u5540:
  3237   00384C  C005  F009         	movff	labs@a,??_labs
  3238   003850  C006  F00A         	movff	labs@a+1,??_labs+1
  3239   003854  C007  F00B         	movff	labs@a+2,??_labs+2
  3240   003858  C008  F00C         	movff	labs@a+3,??_labs+3
  3241   00385C  1E09               	comf	??_labs^0,f,c
  3242   00385E  1E0A               	comf	(??_labs+1)^0,f,c
  3243   003860  1E0B               	comf	(??_labs+2)^0,f,c
  3244   003862  1E0C               	comf	(??_labs+3)^0,f,c
  3245   003864  2A09               	incf	??_labs^0,f,c
  3246   003866  0E00               	movlw	0
  3247   003868  220A               	addwfc	(??_labs+1)^0,f,c
  3248   00386A  220B               	addwfc	(??_labs+2)^0,f,c
  3249   00386C  220C               	addwfc	(??_labs+3)^0,f,c
  3250   00386E  C009  F005         	movff	??_labs,?_labs
  3251   003872  C00A  F006         	movff	??_labs+1,?_labs+1
  3252   003876  C00B  F007         	movff	??_labs+2,?_labs+2
  3253   00387A  C00C  F008         	movff	??_labs+3,?_labs+3
  3254   00387E  EF49  F01C         	goto	l1141
  3255   003882                     l1138:
  3256   003882  C005  F005         	movff	labs@a,?_labs
  3257   003886  C006  F006         	movff	labs@a+1,?_labs+1
  3258   00388A  C007  F007         	movff	labs@a+2,?_labs+2
  3259   00388E  C008  F008         	movff	labs@a+3,?_labs+3
  3260   003892                     l1141:
  3261   003892  0012               	return		;funcret
  3262   003894                     __end_of_labs:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _floorf *****************
  3266 ;; Defined at:
  3267 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  x               4   29[COMRAM] float 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  u               4   45[COMRAM] struct .
  3272 ;;  m               4   39[COMRAM] unsigned long 
  3273 ;;  e               2   43[COMRAM] int 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  4   29[COMRAM] float 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;Total ram usage:       20 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 2
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_efgtoa
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text8
  3298   002A2E                     __ptext8:
  3299                           	callstack 0
  3300   002A2E                     _floorf:
  3301                           	callstack 24
  3302   002A2E  C0E7  F02E         	movff	floorf@F526,floorf@u
  3303   002A32  C0E8  F02F         	movff	floorf@F526+1,floorf@u+1
  3304   002A36  C0E9  F030         	movff	floorf@F526+2,floorf@u+2
  3305   002A3A  C0EA  F031         	movff	floorf@F526+3,floorf@u+3
  3306   002A3E  C01E  F02E         	movff	floorf@x,floorf@u
  3307   002A42  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  3308   002A46  C020  F030         	movff	floorf@x+2,floorf@u+2
  3309   002A4A  C021  F031         	movff	floorf@x+3,floorf@u+3
  3310   002A4E  0E81               	movlw	129
  3311   002A50  6E22               	movwf	??_floorf^0,c
  3312   002A52  0EFF               	movlw	255
  3313   002A54  6E23               	movwf	(??_floorf+1)^0,c
  3314   002A56  C02E  F024         	movff	floorf@u,??_floorf+2
  3315   002A5A  C02F  F025         	movff	floorf@u+1,??_floorf+3
  3316   002A5E  C030  F026         	movff	floorf@u+2,??_floorf+4
  3317   002A62  C031  F027         	movff	floorf@u+3,??_floorf+5
  3318   002A66  0E18               	movlw	24
  3319   002A68  EF3B  F015         	goto	u5550
  3320   002A6C                     u5555:
  3321   002A6C  90D8               	bcf	status,0,c
  3322   002A6E  3227               	rrcf	(??_floorf+5)^0,f,c
  3323   002A70  3226               	rrcf	(??_floorf+4)^0,f,c
  3324   002A72  3225               	rrcf	(??_floorf+3)^0,f,c
  3325   002A74  3224               	rrcf	(??_floorf+2)^0,f,c
  3326   002A76                     u5550:
  3327   002A76  2EE8               	decfsz	wreg,f,c
  3328   002A78  EF36  F015         	goto	u5555
  3329   002A7C  5024               	movf	(??_floorf+2)^0,w,c
  3330   002A7E  2422               	addwf	??_floorf^0,w,c
  3331   002A80  6E2C               	movwf	floorf@e^0,c
  3332   002A82  0E00               	movlw	0
  3333   002A84  2023               	addwfc	(??_floorf+1)^0,w,c
  3334   002A86  6E2D               	movwf	(floorf@e+1)^0,c
  3335   002A88  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3336   002A8A  EF50  F015         	goto	u5561
  3337   002A8E  502D               	movf	(floorf@e+1)^0,w,c
  3338   002A90  E109               	bnz	u5560
  3339   002A92  0E17               	movlw	23
  3340   002A94  5C2C               	subwf	floorf@e^0,w,c
  3341   002A96  A0D8               	btfss	status,0,c
  3342   002A98  EF50  F015         	goto	u5561
  3343   002A9C  EF52  F015         	goto	u5560
  3344   002AA0                     u5561:
  3345   002AA0  EF5C  F015         	goto	l4892
  3346   002AA4                     u5560:
  3347   002AA4                     l4890:
  3348   002AA4  C01E  F01E         	movff	floorf@x,?_floorf
  3349   002AA8  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  3350   002AAC  C020  F020         	movff	floorf@x+2,?_floorf+2
  3351   002AB0  C021  F021         	movff	floorf@x+3,?_floorf+3
  3352   002AB4  EF1F  F016         	goto	l1127
  3353   002AB8                     l4892:
  3354   002AB8  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3355   002ABA  EF61  F015         	goto	u5571
  3356   002ABE  EF63  F015         	goto	u5570
  3357   002AC2                     u5571:
  3358   002AC2  EFD3  F015         	goto	l4902
  3359   002AC6                     u5570:
  3360   002AC6  C02C  F022         	movff	floorf@e,??_floorf
  3361   002ACA  0EFF               	movlw	255
  3362   002ACC  6E23               	movwf	(??_floorf+1)^0,c
  3363   002ACE  0EFF               	movlw	255
  3364   002AD0  6E24               	movwf	(??_floorf+2)^0,c
  3365   002AD2  0E7F               	movlw	127
  3366   002AD4  6E25               	movwf	(??_floorf+3)^0,c
  3367   002AD6  0E00               	movlw	0
  3368   002AD8  6E26               	movwf	(??_floorf+4)^0,c
  3369   002ADA                     u5585:
  3370   002ADA  6622               	tstfsz	??_floorf^0,c
  3371   002ADC  EF72  F015         	goto	u5586
  3372   002AE0  EF7A  F015         	goto	u5587
  3373   002AE4                     u5586:
  3374   002AE4  3426               	rlcf	(??_floorf+4)^0,w,c
  3375   002AE6  3226               	rrcf	(??_floorf+4)^0,f,c
  3376   002AE8  3225               	rrcf	(??_floorf+3)^0,f,c
  3377   002AEA  3224               	rrcf	(??_floorf+2)^0,f,c
  3378   002AEC  3223               	rrcf	(??_floorf+1)^0,f,c
  3379   002AEE  2E22               	decfsz	??_floorf^0,f,c
  3380   002AF0  EF6D  F015         	goto	u5585
  3381   002AF4                     u5587:
  3382   002AF4  C023  F028         	movff	??_floorf+1,floorf@m
  3383   002AF8  C024  F029         	movff	??_floorf+2,floorf@m+1
  3384   002AFC  C025  F02A         	movff	??_floorf+3,floorf@m+2
  3385   002B00  C026  F02B         	movff	??_floorf+4,floorf@m+3
  3386   002B04  5028               	movf	floorf@m^0,w,c
  3387   002B06  142E               	andwf	floorf@u^0,w,c
  3388   002B08  6E22               	movwf	??_floorf^0,c
  3389   002B0A  5029               	movf	(floorf@m+1)^0,w,c
  3390   002B0C  142F               	andwf	(floorf@u+1)^0,w,c
  3391   002B0E  6E23               	movwf	(??_floorf+1)^0,c
  3392   002B10  502A               	movf	(floorf@m+2)^0,w,c
  3393   002B12  1430               	andwf	(floorf@u+2)^0,w,c
  3394   002B14  6E24               	movwf	(??_floorf+2)^0,c
  3395   002B16  502B               	movf	(floorf@m+3)^0,w,c
  3396   002B18  1431               	andwf	(floorf@u+3)^0,w,c
  3397   002B1A  6E25               	movwf	(??_floorf+3)^0,c
  3398   002B1C  5022               	movf	??_floorf^0,w,c
  3399   002B1E  1023               	iorwf	(??_floorf+1)^0,w,c
  3400   002B20  1024               	iorwf	(??_floorf+2)^0,w,c
  3401   002B22  1025               	iorwf	(??_floorf+3)^0,w,c
  3402   002B24  A4D8               	btfss	status,2,c
  3403   002B26  EF97  F015         	goto	u5591
  3404   002B2A  EF99  F015         	goto	u5590
  3405   002B2E                     u5591:
  3406   002B2E  EF9B  F015         	goto	l4898
  3407   002B32                     u5590:
  3408   002B32  EF52  F015         	goto	l4890
  3409   002B36                     l4898:
  3410   002B36  C02E  F022         	movff	floorf@u,??_floorf
  3411   002B3A  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3412   002B3E  C030  F024         	movff	floorf@u+2,??_floorf+2
  3413   002B42  C031  F025         	movff	floorf@u+3,??_floorf+3
  3414   002B46  0E20               	movlw	32
  3415   002B48  EFAB  F015         	goto	u5600
  3416   002B4C                     u5605:
  3417   002B4C  90D8               	bcf	status,0,c
  3418   002B4E  3225               	rrcf	(??_floorf+3)^0,f,c
  3419   002B50  3224               	rrcf	(??_floorf+2)^0,f,c
  3420   002B52  3223               	rrcf	(??_floorf+1)^0,f,c
  3421   002B54  3222               	rrcf	??_floorf^0,f,c
  3422   002B56                     u5600:
  3423   002B56  2EE8               	decfsz	wreg,f,c
  3424   002B58  EFA6  F015         	goto	u5605
  3425   002B5C  5022               	movf	??_floorf^0,w,c
  3426   002B5E  1023               	iorwf	(??_floorf+1)^0,w,c
  3427   002B60  1024               	iorwf	(??_floorf+2)^0,w,c
  3428   002B62  1025               	iorwf	(??_floorf+3)^0,w,c
  3429   002B64  B4D8               	btfsc	status,2,c
  3430   002B66  EFB7  F015         	goto	u5611
  3431   002B6A  EFB9  F015         	goto	u5610
  3432   002B6E                     u5611:
  3433   002B6E  EFC1  F015         	goto	l1130
  3434   002B72                     u5610:
  3435   002B72  5028               	movf	floorf@m^0,w,c
  3436   002B74  262E               	addwf	floorf@u^0,f,c
  3437   002B76  5029               	movf	(floorf@m+1)^0,w,c
  3438   002B78  222F               	addwfc	(floorf@u+1)^0,f,c
  3439   002B7A  502A               	movf	(floorf@m+2)^0,w,c
  3440   002B7C  2230               	addwfc	(floorf@u+2)^0,f,c
  3441   002B7E  502B               	movf	(floorf@m+3)^0,w,c
  3442   002B80  2231               	addwfc	(floorf@u+3)^0,f,c
  3443   002B82                     l1130:
  3444   002B82  1C28               	comf	floorf@m^0,w,c
  3445   002B84  6E22               	movwf	??_floorf^0,c
  3446   002B86  1C29               	comf	(floorf@m+1)^0,w,c
  3447   002B88  6E23               	movwf	(??_floorf+1)^0,c
  3448   002B8A  1C2A               	comf	(floorf@m+2)^0,w,c
  3449   002B8C  6E24               	movwf	(??_floorf+2)^0,c
  3450   002B8E  1C2B               	comf	(floorf@m+3)^0,w,c
  3451   002B90  6E25               	movwf	(??_floorf+3)^0,c
  3452   002B92  5022               	movf	??_floorf^0,w,c
  3453   002B94  162E               	andwf	floorf@u^0,f,c
  3454   002B96  5023               	movf	(??_floorf+1)^0,w,c
  3455   002B98  162F               	andwf	(floorf@u+1)^0,f,c
  3456   002B9A  5024               	movf	(??_floorf+2)^0,w,c
  3457   002B9C  1630               	andwf	(floorf@u+2)^0,f,c
  3458   002B9E  5025               	movf	(??_floorf+3)^0,w,c
  3459   002BA0  1631               	andwf	(floorf@u+3)^0,f,c
  3460   002BA2  EF17  F016         	goto	l4910
  3461   002BA6                     l4902:
  3462   002BA6  C02E  F022         	movff	floorf@u,??_floorf
  3463   002BAA  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3464   002BAE  C030  F024         	movff	floorf@u+2,??_floorf+2
  3465   002BB2  C031  F025         	movff	floorf@u+3,??_floorf+3
  3466   002BB6  0E20               	movlw	32
  3467   002BB8  EFE3  F015         	goto	u5620
  3468   002BBC                     u5625:
  3469   002BBC  90D8               	bcf	status,0,c
  3470   002BBE  3225               	rrcf	(??_floorf+3)^0,f,c
  3471   002BC0  3224               	rrcf	(??_floorf+2)^0,f,c
  3472   002BC2  3223               	rrcf	(??_floorf+1)^0,f,c
  3473   002BC4  3222               	rrcf	??_floorf^0,f,c
  3474   002BC6                     u5620:
  3475   002BC6  2EE8               	decfsz	wreg,f,c
  3476   002BC8  EFDE  F015         	goto	u5625
  3477   002BCC  5022               	movf	??_floorf^0,w,c
  3478   002BCE  1023               	iorwf	(??_floorf+1)^0,w,c
  3479   002BD0  1024               	iorwf	(??_floorf+2)^0,w,c
  3480   002BD2  1025               	iorwf	(??_floorf+3)^0,w,c
  3481   002BD4  A4D8               	btfss	status,2,c
  3482   002BD6  EFEF  F015         	goto	u5631
  3483   002BDA  EFF1  F015         	goto	u5630
  3484   002BDE                     u5631:
  3485   002BDE  EFFB  F015         	goto	l4906
  3486   002BE2                     u5630:
  3487   002BE2  0E00               	movlw	0
  3488   002BE4  6E2E               	movwf	floorf@u^0,c
  3489   002BE6  0E00               	movlw	0
  3490   002BE8  6E2F               	movwf	(floorf@u+1)^0,c
  3491   002BEA  0E00               	movlw	0
  3492   002BEC  6E30               	movwf	(floorf@u+2)^0,c
  3493   002BEE  0E00               	movlw	0
  3494   002BF0  6E31               	movwf	(floorf@u+3)^0,c
  3495   002BF2  EF17  F016         	goto	l4910
  3496   002BF6                     l4906:
  3497   002BF6  90D8               	bcf	status,0,c
  3498   002BF8  342E               	rlcf	floorf@u^0,w,c
  3499   002BFA  6E22               	movwf	??_floorf^0,c
  3500   002BFC  342F               	rlcf	(floorf@u+1)^0,w,c
  3501   002BFE  6E23               	movwf	(??_floorf+1)^0,c
  3502   002C00  3430               	rlcf	(floorf@u+2)^0,w,c
  3503   002C02  6E24               	movwf	(??_floorf+2)^0,c
  3504   002C04  3431               	rlcf	(floorf@u+3)^0,w,c
  3505   002C06  6E25               	movwf	(??_floorf+3)^0,c
  3506   002C08  5022               	movf	??_floorf^0,w,c
  3507   002C0A  1023               	iorwf	(??_floorf+1)^0,w,c
  3508   002C0C  1024               	iorwf	(??_floorf+2)^0,w,c
  3509   002C0E  1025               	iorwf	(??_floorf+3)^0,w,c
  3510   002C10  B4D8               	btfsc	status,2,c
  3511   002C12  EF0D  F016         	goto	u5641
  3512   002C16  EF0F  F016         	goto	u5640
  3513   002C1A                     u5641:
  3514   002C1A  EF17  F016         	goto	l4910
  3515   002C1E                     u5640:
  3516   002C1E  0E00               	movlw	0
  3517   002C20  6E2E               	movwf	floorf@u^0,c
  3518   002C22  0E00               	movlw	0
  3519   002C24  6E2F               	movwf	(floorf@u+1)^0,c
  3520   002C26  0E80               	movlw	128
  3521   002C28  6E30               	movwf	(floorf@u+2)^0,c
  3522   002C2A  0EBF               	movlw	191
  3523   002C2C  6E31               	movwf	(floorf@u+3)^0,c
  3524   002C2E                     l4910:
  3525   002C2E  C02E  F01E         	movff	floorf@u,?_floorf
  3526   002C32  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  3527   002C36  C030  F020         	movff	floorf@u+2,?_floorf+2
  3528   002C3A  C031  F021         	movff	floorf@u+3,?_floorf+3
  3529   002C3E                     l1127:
  3530   002C3E  0012               	return		;funcret
  3531   002C40                     __end_of_floorf:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function ___fpclassifyf *****************
  3535 ;; Defined at:
  3536 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  x               4    4[COMRAM] float 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  u               4   14[COMRAM] struct .
  3541 ;;  e               2   12[COMRAM] int 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  2    4[COMRAM] int 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;Total ram usage:       14 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 2
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_efgtoa
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text9
  3566   003474                     __ptext9:
  3567                           	callstack 0
  3568   003474                     ___fpclassifyf:
  3569                           	callstack 24
  3570   003474  C0EB  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3571   003478  C0EC  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3572   00347C  C0ED  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3573   003480  C0EE  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3574   003484  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  3575   003488  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3576   00348C  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3577   003490  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3578   003494  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3579   003498  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3580   00349C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3581   0034A0  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3582   0034A4  0E18               	movlw	24
  3583   0034A6  EF5A  F01A         	goto	u5460
  3584   0034AA                     u5465:
  3585   0034AA  90D8               	bcf	status,0,c
  3586   0034AC  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  3587   0034AE  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  3588   0034B0  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  3589   0034B2  3209               	rrcf	??___fpclassifyf^0,f,c
  3590   0034B4                     u5460:
  3591   0034B4  2EE8               	decfsz	wreg,f,c
  3592   0034B6  EF55  F01A         	goto	u5465
  3593   0034BA  5009               	movf	??___fpclassifyf^0,w,c
  3594   0034BC  6E0D               	movwf	___fpclassifyf@e^0,c
  3595   0034BE  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  3596   0034C0  500D               	movf	___fpclassifyf@e^0,w,c
  3597   0034C2  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3598   0034C4  A4D8               	btfss	status,2,c
  3599   0034C6  EF67  F01A         	goto	u5471
  3600   0034CA  EF69  F01A         	goto	u5470
  3601   0034CE                     u5471:
  3602   0034CE  EF89  F01A         	goto	l4868
  3603   0034D2                     u5470:
  3604   0034D2  90D8               	bcf	status,0,c
  3605   0034D4  340F               	rlcf	___fpclassifyf@u^0,w,c
  3606   0034D6  6E09               	movwf	??___fpclassifyf^0,c
  3607   0034D8  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3608   0034DA  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  3609   0034DC  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3610   0034DE  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  3611   0034E0  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3612   0034E2  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  3613   0034E4  5009               	movf	??___fpclassifyf^0,w,c
  3614   0034E6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3615   0034E8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3616   0034EA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3617   0034EC  A4D8               	btfss	status,2,c
  3618   0034EE  EF7B  F01A         	goto	u5481
  3619   0034F2  EF7D  F01A         	goto	u5480
  3620   0034F6                     u5481:
  3621   0034F6  EF83  F01A         	goto	l4864
  3622   0034FA                     u5480:
  3623   0034FA  0E00               	movlw	0
  3624   0034FC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3625   0034FE  0E02               	movlw	2
  3626   003500  6E05               	movwf	?___fpclassifyf^0,c
  3627   003502  EFB8  F01A         	goto	l1113
  3628   003506                     l4864:
  3629   003506  0E00               	movlw	0
  3630   003508  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3631   00350A  0E03               	movlw	3
  3632   00350C  6E05               	movwf	?___fpclassifyf^0,c
  3633   00350E  EFB8  F01A         	goto	l1113
  3634   003512                     l4868:
  3635   003512  280D               	incf	___fpclassifyf@e^0,w,c
  3636   003514  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3637   003516  A4D8               	btfss	status,2,c
  3638   003518  EF90  F01A         	goto	u5491
  3639   00351C  EF92  F01A         	goto	u5490
  3640   003520                     u5491:
  3641   003520  EFB4  F01A         	goto	l4874
  3642   003524                     u5490:
  3643   003524  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3644   003528  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3645   00352C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3646   003530  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3647   003534  0E09               	movlw	9
  3648   003536                     u5505:
  3649   003536  90D8               	bcf	status,0,c
  3650   003538  3609               	rlcf	??___fpclassifyf^0,f,c
  3651   00353A  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  3652   00353C  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  3653   00353E  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  3654   003540  2EE8               	decfsz	wreg,f,c
  3655   003542  EF9B  F01A         	goto	u5505
  3656   003546  5009               	movf	??___fpclassifyf^0,w,c
  3657   003548  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3658   00354A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3659   00354C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3660   00354E  B4D8               	btfsc	status,2,c
  3661   003550  EFAC  F01A         	goto	u5511
  3662   003554  EFAF  F01A         	goto	u5510
  3663   003558                     u5511:
  3664   003558  0E01               	movlw	1
  3665   00355A  EFB0  F01A         	goto	u5520
  3666   00355E                     u5510:
  3667   00355E  0E00               	movlw	0
  3668   003560                     u5520:
  3669   003560  6E05               	movwf	?___fpclassifyf^0,c
  3670   003562  6A06               	clrf	(?___fpclassifyf+1)^0,c
  3671   003564  EFB8  F01A         	goto	l1113
  3672   003568                     l4874:
  3673   003568  0E00               	movlw	0
  3674   00356A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3675   00356C  0E04               	movlw	4
  3676   00356E  6E05               	movwf	?___fpclassifyf^0,c
  3677   003570                     l1113:
  3678   003570  0012               	return		;funcret
  3679   003572                     __end_of___fpclassifyf:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function ___fltol *****************
  3683 ;; Defined at:
  3684 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  f1              4    4[COMRAM] int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  exp1            1   13[COMRAM] unsigned char 
  3689 ;;  sign1           1   12[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  4    4[COMRAM] long 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;Total ram usage:       10 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 2
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_efgtoa
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text10
  3714   00326A                     __ptext10:
  3715                           	callstack 0
  3716   00326A                     ___fltol:
  3717                           	callstack 24
  3718   00326A  3407               	rlcf	(___fltol@f1+2)^0,w,c
  3719   00326C  3408               	rlcf	(___fltol@f1+3)^0,w,c
  3720   00326E  6E0E               	movwf	___fltol@exp1^0,c
  3721   003270  500E               	movf	___fltol@exp1^0,w,c
  3722   003272  A4D8               	btfss	status,2,c
  3723   003274  EF3E  F019         	goto	u5361
  3724   003278  EF40  F019         	goto	u5360
  3725   00327C                     u5361:
  3726   00327C  EF4A  F019         	goto	l4800
  3727   003280                     u5360:
  3728   003280                     l4796:
  3729   003280  0E00               	movlw	0
  3730   003282  6E05               	movwf	?___fltol^0,c
  3731   003284  0E00               	movlw	0
  3732   003286  6E06               	movwf	(?___fltol+1)^0,c
  3733   003288  0E00               	movlw	0
  3734   00328A  6E07               	movwf	(?___fltol+2)^0,c
  3735   00328C  0E00               	movlw	0
  3736   00328E  6E08               	movwf	(?___fltol+3)^0,c
  3737   003290  EFB7  F019         	goto	l586
  3738   003294                     l4800:
  3739   003294  C005  F009         	movff	___fltol@f1,??___fltol
  3740   003298  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  3741   00329C  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  3742   0032A0  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  3743   0032A4  0E20               	movlw	32
  3744   0032A6  EF5A  F019         	goto	u5370
  3745   0032AA                     u5375:
  3746   0032AA  90D8               	bcf	status,0,c
  3747   0032AC  320C               	rrcf	(??___fltol+3)^0,f,c
  3748   0032AE  320B               	rrcf	(??___fltol+2)^0,f,c
  3749   0032B0  320A               	rrcf	(??___fltol+1)^0,f,c
  3750   0032B2  3209               	rrcf	??___fltol^0,f,c
  3751   0032B4                     u5370:
  3752   0032B4  2EE8               	decfsz	wreg,f,c
  3753   0032B6  EF55  F019         	goto	u5375
  3754   0032BA  5009               	movf	??___fltol^0,w,c
  3755   0032BC  6E0D               	movwf	___fltol@sign1^0,c
  3756   0032BE  8E07               	bsf	(___fltol@f1+2)^0,7,c
  3757   0032C0  0EFF               	movlw	255
  3758   0032C2  1605               	andwf	___fltol@f1^0,f,c
  3759   0032C4  0EFF               	movlw	255
  3760   0032C6  1606               	andwf	(___fltol@f1+1)^0,f,c
  3761   0032C8  0EFF               	movlw	255
  3762   0032CA  1607               	andwf	(___fltol@f1+2)^0,f,c
  3763   0032CC  0E00               	movlw	0
  3764   0032CE  1608               	andwf	(___fltol@f1+3)^0,f,c
  3765   0032D0  0E96               	movlw	150
  3766   0032D2  5E0E               	subwf	___fltol@exp1^0,f,c
  3767   0032D4  BE0E               	btfsc	___fltol@exp1^0,7,c
  3768   0032D6  EF71  F019         	goto	u5380
  3769   0032DA  EF6F  F019         	goto	u5381
  3770   0032DE                     u5381:
  3771   0032DE  EF87  F019         	goto	l4820
  3772   0032E2                     u5380:
  3773   0032E2  500E               	movf	___fltol@exp1^0,w,c
  3774   0032E4  0A80               	xorlw	128
  3775   0032E6  0F97               	addlw	151
  3776   0032E8  B0D8               	btfsc	status,0,c
  3777   0032EA  EF79  F019         	goto	u5391
  3778   0032EE  EF7B  F019         	goto	u5390
  3779   0032F2                     u5391:
  3780   0032F2  EF7D  F019         	goto	l4816
  3781   0032F6                     u5390:
  3782   0032F6  EF40  F019         	goto	l4796
  3783   0032FA                     l4816:
  3784   0032FA  90D8               	bcf	status,0,c
  3785   0032FC  3208               	rrcf	(___fltol@f1+3)^0,f,c
  3786   0032FE  3207               	rrcf	(___fltol@f1+2)^0,f,c
  3787   003300  3206               	rrcf	(___fltol@f1+1)^0,f,c
  3788   003302  3205               	rrcf	___fltol@f1^0,f,c
  3789   003304  3E0E               	incfsz	___fltol@exp1^0,f,c
  3790   003306  EF7D  F019         	goto	l4816
  3791   00330A  EF9F  F019         	goto	l4830
  3792   00330E                     l4820:
  3793   00330E  0E1F               	movlw	31
  3794   003310  640E               	cpfsgt	___fltol@exp1^0,c
  3795   003312  EF8D  F019         	goto	u5401
  3796   003316  EF8F  F019         	goto	u5400
  3797   00331A                     u5401:
  3798   00331A  EF97  F019         	goto	l4828
  3799   00331E                     u5400:
  3800   00331E  EF40  F019         	goto	l4796
  3801   003322                     l4826:
  3802   003322  90D8               	bcf	status,0,c
  3803   003324  3605               	rlcf	___fltol@f1^0,f,c
  3804   003326  3606               	rlcf	(___fltol@f1+1)^0,f,c
  3805   003328  3607               	rlcf	(___fltol@f1+2)^0,f,c
  3806   00332A  3608               	rlcf	(___fltol@f1+3)^0,f,c
  3807   00332C  060E               	decf	___fltol@exp1^0,f,c
  3808   00332E                     l4828:
  3809   00332E  500E               	movf	___fltol@exp1^0,w,c
  3810   003330  A4D8               	btfss	status,2,c
  3811   003332  EF9D  F019         	goto	u5411
  3812   003336  EF9F  F019         	goto	u5410
  3813   00333A                     u5411:
  3814   00333A  EF91  F019         	goto	l4826
  3815   00333E                     u5410:
  3816   00333E                     l4830:
  3817   00333E  500D               	movf	___fltol@sign1^0,w,c
  3818   003340  B4D8               	btfsc	status,2,c
  3819   003342  EFA5  F019         	goto	u5421
  3820   003346  EFA7  F019         	goto	u5420
  3821   00334A                     u5421:
  3822   00334A  EFAF  F019         	goto	l4834
  3823   00334E                     u5420:
  3824   00334E  1E08               	comf	(___fltol@f1+3)^0,f,c
  3825   003350  1E07               	comf	(___fltol@f1+2)^0,f,c
  3826   003352  1E06               	comf	(___fltol@f1+1)^0,f,c
  3827   003354  6C05               	negf	___fltol@f1^0,c
  3828   003356  0E00               	movlw	0
  3829   003358  2206               	addwfc	(___fltol@f1+1)^0,f,c
  3830   00335A  2207               	addwfc	(___fltol@f1+2)^0,f,c
  3831   00335C  2208               	addwfc	(___fltol@f1+3)^0,f,c
  3832   00335E                     l4834:
  3833   00335E  C005  F005         	movff	___fltol@f1,?___fltol
  3834   003362  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  3835   003366  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  3836   00336A  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  3837   00336E                     l586:
  3838   00336E  0012               	return		;funcret
  3839   003370                     __end_of___fltol:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function ___flsub *****************
  3843 ;; Defined at:
  3844 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  b               4   29[COMRAM] long 
  3847 ;;  a               4   33[COMRAM] long 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  4   29[COMRAM] long 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3859 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 3
  3866 ;; This function calls:
  3867 ;;		___fladd
  3868 ;; This function is called by:
  3869 ;;		_efgtoa
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text11
  3874   003B28                     __ptext11:
  3875                           	callstack 0
  3876   003B28                     ___flsub:
  3877                           	callstack 23
  3878   003B28  0E00               	movlw	0
  3879   003B2A  1A22               	xorwf	___flsub@a^0,f,c
  3880   003B2C  0E00               	movlw	0
  3881   003B2E  1A23               	xorwf	(___flsub@a+1)^0,f,c
  3882   003B30  0E00               	movlw	0
  3883   003B32  1A24               	xorwf	(___flsub@a+2)^0,f,c
  3884   003B34  0E80               	movlw	128
  3885   003B36  1A25               	xorwf	(___flsub@a+3)^0,f,c
  3886   003B38  C01E  F005         	movff	___flsub@b,___fladd@b
  3887   003B3C  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  3888   003B40  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  3889   003B44  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  3890   003B48  C022  F009         	movff	___flsub@a,___fladd@a
  3891   003B4C  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  3892   003B50  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  3893   003B54  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  3894   003B58  EC13  F00C         	call	___fladd	;wreg free
  3895   003B5C  C005  F01E         	movff	?___fladd,?___flsub
  3896   003B60  C006  F01F         	movff	?___fladd+1,?___flsub+1
  3897   003B64  C007  F020         	movff	?___fladd+2,?___flsub+2
  3898   003B68  C008  F021         	movff	?___fladd+3,?___flsub+3
  3899   003B6C  0012               	return		;funcret
  3900   003B6E                     __end_of___flsub:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function ___fladd *****************
  3904 ;; Defined at:
  3905 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  b               4    4[COMRAM] long 
  3908 ;;  a               4    8[COMRAM] long 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  grs             1   19[COMRAM] unsigned char 
  3911 ;;  bexp            1   18[COMRAM] unsigned char 
  3912 ;;  aexp            1   17[COMRAM] unsigned char 
  3913 ;;  signs           1   16[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  4    4[COMRAM] unsigned char 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;Total ram usage:       16 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 2
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		___flsub
  3934 ;;		_efgtoa
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text12
  3939   001826                     __ptext12:
  3940                           	callstack 0
  3941   001826                     ___fladd:
  3942                           	callstack 23
  3943   001826  5008               	movf	(___fladd@b+3)^0,w,c
  3944   001828  0B80               	andlw	128
  3945   00182A  6E11               	movwf	___fladd@signs^0,c
  3946   00182C  5008               	movf	(___fladd@b+3)^0,w,c
  3947   00182E  2408               	addwf	(___fladd@b+3)^0,w,c
  3948   001830  6E13               	movwf	___fladd@bexp^0,c
  3949   001832  AE07               	btfss	(___fladd@b+2)^0,7,c
  3950   001834  EF1E  F00C         	goto	u4321
  3951   001838  EF20  F00C         	goto	u4320
  3952   00183C                     u4321:
  3953   00183C  EF21  F00C         	goto	l4190
  3954   001840                     u4320:
  3955   001840  8013               	bsf	___fladd@bexp^0,0,c
  3956   001842                     l4190:
  3957   001842  5013               	movf	___fladd@bexp^0,w,c
  3958   001844  B4D8               	btfsc	status,2,c
  3959   001846  EF27  F00C         	goto	u4331
  3960   00184A  EF29  F00C         	goto	u4330
  3961   00184E                     u4331:
  3962   00184E  EF3E  F00C         	goto	l4200
  3963   001852                     u4330:
  3964   001852  2813               	incf	___fladd@bexp^0,w,c
  3965   001854  A4D8               	btfss	status,2,c
  3966   001856  EF2F  F00C         	goto	u4341
  3967   00185A  EF31  F00C         	goto	u4340
  3968   00185E                     u4341:
  3969   00185E  EF39  F00C         	goto	l4196
  3970   001862                     u4340:
  3971   001862  0E00               	movlw	0
  3972   001864  6E05               	movwf	___fladd@b^0,c
  3973   001866  0E00               	movlw	0
  3974   001868  6E06               	movwf	(___fladd@b+1)^0,c
  3975   00186A  0E00               	movlw	0
  3976   00186C  6E07               	movwf	(___fladd@b+2)^0,c
  3977   00186E  0E00               	movlw	0
  3978   001870  6E08               	movwf	(___fladd@b+3)^0,c
  3979   001872                     l4196:
  3980   001872  8E07               	bsf	(___fladd@b+2)^0,7,c
  3981   001874  0E00               	movlw	0
  3982   001876  6E08               	movwf	(___fladd@b+3)^0,c
  3983   001878  EF46  F00C         	goto	l4202
  3984   00187C                     l4200:
  3985   00187C  0E00               	movlw	0
  3986   00187E  6E05               	movwf	___fladd@b^0,c
  3987   001880  0E00               	movlw	0
  3988   001882  6E06               	movwf	(___fladd@b+1)^0,c
  3989   001884  0E00               	movlw	0
  3990   001886  6E07               	movwf	(___fladd@b+2)^0,c
  3991   001888  0E00               	movlw	0
  3992   00188A  6E08               	movwf	(___fladd@b+3)^0,c
  3993   00188C                     l4202:
  3994   00188C  500C               	movf	(___fladd@a+3)^0,w,c
  3995   00188E  0B80               	andlw	128
  3996   001890  6E12               	movwf	___fladd@aexp^0,c
  3997   001892  5011               	movf	___fladd@signs^0,w,c
  3998   001894  1812               	xorwf	___fladd@aexp^0,w,c
  3999   001896  B4D8               	btfsc	status,2,c
  4000   001898  EF50  F00C         	goto	u4351
  4001   00189C  EF52  F00C         	goto	u4350
  4002   0018A0                     u4351:
  4003   0018A0  EF53  F00C         	goto	l4208
  4004   0018A4                     u4350:
  4005   0018A4  8C11               	bsf	___fladd@signs^0,6,c
  4006   0018A6                     l4208:
  4007   0018A6  500C               	movf	(___fladd@a+3)^0,w,c
  4008   0018A8  240C               	addwf	(___fladd@a+3)^0,w,c
  4009   0018AA  6E12               	movwf	___fladd@aexp^0,c
  4010   0018AC  AE0B               	btfss	(___fladd@a+2)^0,7,c
  4011   0018AE  EF5B  F00C         	goto	u4361
  4012   0018B2  EF5D  F00C         	goto	u4360
  4013   0018B6                     u4361:
  4014   0018B6  EF5E  F00C         	goto	l4214
  4015   0018BA                     u4360:
  4016   0018BA  8012               	bsf	___fladd@aexp^0,0,c
  4017   0018BC                     l4214:
  4018   0018BC  5012               	movf	___fladd@aexp^0,w,c
  4019   0018BE  B4D8               	btfsc	status,2,c
  4020   0018C0  EF64  F00C         	goto	u4371
  4021   0018C4  EF66  F00C         	goto	u4370
  4022   0018C8                     u4371:
  4023   0018C8  EF7B  F00C         	goto	l4224
  4024   0018CC                     u4370:
  4025   0018CC  2812               	incf	___fladd@aexp^0,w,c
  4026   0018CE  A4D8               	btfss	status,2,c
  4027   0018D0  EF6C  F00C         	goto	u4381
  4028   0018D4  EF6E  F00C         	goto	u4380
  4029   0018D8                     u4381:
  4030   0018D8  EF76  F00C         	goto	l4220
  4031   0018DC                     u4380:
  4032   0018DC  0E00               	movlw	0
  4033   0018DE  6E09               	movwf	___fladd@a^0,c
  4034   0018E0  0E00               	movlw	0
  4035   0018E2  6E0A               	movwf	(___fladd@a+1)^0,c
  4036   0018E4  0E00               	movlw	0
  4037   0018E6  6E0B               	movwf	(___fladd@a+2)^0,c
  4038   0018E8  0E00               	movlw	0
  4039   0018EA  6E0C               	movwf	(___fladd@a+3)^0,c
  4040   0018EC                     l4220:
  4041   0018EC  8E0B               	bsf	(___fladd@a+2)^0,7,c
  4042   0018EE  0E00               	movlw	0
  4043   0018F0  6E0C               	movwf	(___fladd@a+3)^0,c
  4044   0018F2  EF83  F00C         	goto	l4226
  4045   0018F6                     l4224:
  4046   0018F6  0E00               	movlw	0
  4047   0018F8  6E09               	movwf	___fladd@a^0,c
  4048   0018FA  0E00               	movlw	0
  4049   0018FC  6E0A               	movwf	(___fladd@a+1)^0,c
  4050   0018FE  0E00               	movlw	0
  4051   001900  6E0B               	movwf	(___fladd@a+2)^0,c
  4052   001902  0E00               	movlw	0
  4053   001904  6E0C               	movwf	(___fladd@a+3)^0,c
  4054   001906                     l4226:
  4055   001906  5013               	movf	___fladd@bexp^0,w,c
  4056   001908  5C12               	subwf	___fladd@aexp^0,w,c
  4057   00190A  B0D8               	btfsc	status,0,c
  4058   00190C  EF8A  F00C         	goto	u4391
  4059   001910  EF8C  F00C         	goto	u4390
  4060   001914                     u4391:
  4061   001914  EFB3  F00C         	goto	l4262
  4062   001918                     u4390:
  4063   001918  AC11               	btfss	___fladd@signs^0,6,c
  4064   00191A  EF91  F00C         	goto	u4401
  4065   00191E  EF93  F00C         	goto	u4400
  4066   001922                     u4401:
  4067   001922  EF95  F00C         	goto	l4232
  4068   001926                     u4400:
  4069   001926  0E80               	movlw	128
  4070   001928  1A11               	xorwf	___fladd@signs^0,f,c
  4071   00192A                     l4232:
  4072   00192A  C013  F014         	movff	___fladd@bexp,___fladd@grs
  4073   00192E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4074   001932  C014  F012         	movff	___fladd@grs,___fladd@aexp
  4075   001936  C005  F014         	movff	___fladd@b,___fladd@grs
  4076   00193A  C009  F005         	movff	___fladd@a,___fladd@b
  4077   00193E  C014  F009         	movff	___fladd@grs,___fladd@a
  4078   001942  C006  F014         	movff	___fladd@b+1,___fladd@grs
  4079   001946  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  4080   00194A  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  4081   00194E  C007  F014         	movff	___fladd@b+2,___fladd@grs
  4082   001952  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  4083   001956  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  4084   00195A  C008  F014         	movff	___fladd@b+3,___fladd@grs
  4085   00195E  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  4086   001962  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  4087   001966                     l4262:
  4088   001966  0E00               	movlw	0
  4089   001968  6E14               	movwf	___fladd@grs^0,c
  4090   00196A  5013               	movf	___fladd@bexp^0,w,c
  4091   00196C  C012  F00D         	movff	___fladd@aexp,??___fladd
  4092   001970  6A0E               	clrf	(??___fladd+1)^0,c
  4093   001972  5E0D               	subwf	??___fladd^0,f,c
  4094   001974  0E00               	movlw	0
  4095   001976  5A0E               	subwfb	(??___fladd+1)^0,f,c
  4096   001978  BE0E               	btfsc	(??___fladd+1)^0,7,c
  4097   00197A  EFC8  F00C         	goto	u4411
  4098   00197E  500E               	movf	(??___fladd+1)^0,w,c
  4099   001980  E109               	bnz	u4410
  4100   001982  0E1A               	movlw	26
  4101   001984  5C0D               	subwf	??___fladd^0,w,c
  4102   001986  A0D8               	btfss	status,0,c
  4103   001988  EFC8  F00C         	goto	u4411
  4104   00198C  EFCA  F00C         	goto	u4410
  4105   001990                     u4411:
  4106   001990  EF01  F00D         	goto	l818
  4107   001994                     u4410:
  4108   001994  5005               	movf	___fladd@b^0,w,c
  4109   001996  1006               	iorwf	(___fladd@b+1)^0,w,c
  4110   001998  1007               	iorwf	(___fladd@b+2)^0,w,c
  4111   00199A  1008               	iorwf	(___fladd@b+3)^0,w,c
  4112   00199C  A4D8               	btfss	status,2,c
  4113   00199E  EFD3  F00C         	goto	u4421
  4114   0019A2  EFD6  F00C         	goto	u4420
  4115   0019A6                     u4421:
  4116   0019A6  0E01               	movlw	1
  4117   0019A8  EFD7  F00C         	goto	u4430
  4118   0019AC                     u4420:
  4119   0019AC  0E00               	movlw	0
  4120   0019AE                     u4430:
  4121   0019AE  6E14               	movwf	___fladd@grs^0,c
  4122   0019B0  0E00               	movlw	0
  4123   0019B2  6E05               	movwf	___fladd@b^0,c
  4124   0019B4  0E00               	movlw	0
  4125   0019B6  6E06               	movwf	(___fladd@b+1)^0,c
  4126   0019B8  0E00               	movlw	0
  4127   0019BA  6E07               	movwf	(___fladd@b+2)^0,c
  4128   0019BC  0E00               	movlw	0
  4129   0019BE  6E08               	movwf	(___fladd@b+3)^0,c
  4130   0019C0  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4131   0019C4  EF0A  F00D         	goto	l817
  4132   0019C8                     l819:
  4133   0019C8  A014               	btfss	___fladd@grs^0,0,c
  4134   0019CA  EFE9  F00C         	goto	u4441
  4135   0019CE  EFEB  F00C         	goto	u4440
  4136   0019D2                     u4441:
  4137   0019D2  EFF1  F00C         	goto	l4274
  4138   0019D6                     u4440:
  4139   0019D6  90D8               	bcf	status,0,c
  4140   0019D8  3014               	rrcf	___fladd@grs^0,w,c
  4141   0019DA  0901               	iorlw	1
  4142   0019DC  6E14               	movwf	___fladd@grs^0,c
  4143   0019DE  EFF3  F00C         	goto	l4276
  4144   0019E2                     l4274:
  4145   0019E2  90D8               	bcf	status,0,c
  4146   0019E4  3214               	rrcf	___fladd@grs^0,f,c
  4147   0019E6                     l4276:
  4148   0019E6  A005               	btfss	___fladd@b^0,0,c
  4149   0019E8  EFF8  F00C         	goto	u4451
  4150   0019EC  EFFA  F00C         	goto	u4450
  4151   0019F0                     u4451:
  4152   0019F0  EFFB  F00C         	goto	l4280
  4153   0019F4                     u4450:
  4154   0019F4  8E14               	bsf	___fladd@grs^0,7,c
  4155   0019F6                     l4280:
  4156   0019F6  3408               	rlcf	(___fladd@b+3)^0,w,c
  4157   0019F8  3208               	rrcf	(___fladd@b+3)^0,f,c
  4158   0019FA  3207               	rrcf	(___fladd@b+2)^0,f,c
  4159   0019FC  3206               	rrcf	(___fladd@b+1)^0,f,c
  4160   0019FE  3205               	rrcf	___fladd@b^0,f,c
  4161   001A00  2A13               	incf	___fladd@bexp^0,f,c
  4162   001A02                     l818:
  4163   001A02  5012               	movf	___fladd@aexp^0,w,c
  4164   001A04  5C13               	subwf	___fladd@bexp^0,w,c
  4165   001A06  A0D8               	btfss	status,0,c
  4166   001A08  EF08  F00D         	goto	u4461
  4167   001A0C  EF0A  F00D         	goto	u4460
  4168   001A10                     u4461:
  4169   001A10  EFE4  F00C         	goto	l819
  4170   001A14                     u4460:
  4171   001A14                     l817:
  4172   001A14  BC11               	btfsc	___fladd@signs^0,6,c
  4173   001A16  EF0F  F00D         	goto	u4471
  4174   001A1A  EF11  F00D         	goto	u4470
  4175   001A1E                     u4471:
  4176   001A1E  EF51  F00D         	goto	l4308
  4177   001A22                     u4470:
  4178   001A22  5013               	movf	___fladd@bexp^0,w,c
  4179   001A24  A4D8               	btfss	status,2,c
  4180   001A26  EF17  F00D         	goto	u4481
  4181   001A2A  EF19  F00D         	goto	u4480
  4182   001A2E                     u4481:
  4183   001A2E  EF23  F00D         	goto	l4290
  4184   001A32                     u4480:
  4185   001A32  0E00               	movlw	0
  4186   001A34  6E05               	movwf	?___fladd^0,c
  4187   001A36  0E00               	movlw	0
  4188   001A38  6E06               	movwf	(?___fladd+1)^0,c
  4189   001A3A  0E00               	movlw	0
  4190   001A3C  6E07               	movwf	(?___fladd+2)^0,c
  4191   001A3E  0E00               	movlw	0
  4192   001A40  6E08               	movwf	(?___fladd+3)^0,c
  4193   001A42  EF72  F00E         	goto	l826
  4194   001A46                     l4290:
  4195   001A46  5009               	movf	___fladd@a^0,w,c
  4196   001A48  2605               	addwf	___fladd@b^0,f,c
  4197   001A4A  500A               	movf	(___fladd@a+1)^0,w,c
  4198   001A4C  2206               	addwfc	(___fladd@b+1)^0,f,c
  4199   001A4E  500B               	movf	(___fladd@a+2)^0,w,c
  4200   001A50  2207               	addwfc	(___fladd@b+2)^0,f,c
  4201   001A52  500C               	movf	(___fladd@a+3)^0,w,c
  4202   001A54  2208               	addwfc	(___fladd@b+3)^0,f,c
  4203   001A56  A008               	btfss	(___fladd@b+3)^0,0,c
  4204   001A58  EF30  F00D         	goto	u4491
  4205   001A5C  EF32  F00D         	goto	u4490
  4206   001A60                     u4491:
  4207   001A60  EFDE  F00D         	goto	l4344
  4208   001A64                     u4490:
  4209   001A64  A014               	btfss	___fladd@grs^0,0,c
  4210   001A66  EF37  F00D         	goto	u4501
  4211   001A6A  EF39  F00D         	goto	u4500
  4212   001A6E                     u4501:
  4213   001A6E  EF3F  F00D         	goto	l4298
  4214   001A72                     u4500:
  4215   001A72  90D8               	bcf	status,0,c
  4216   001A74  3014               	rrcf	___fladd@grs^0,w,c
  4217   001A76  0901               	iorlw	1
  4218   001A78  6E14               	movwf	___fladd@grs^0,c
  4219   001A7A  EF41  F00D         	goto	l4300
  4220   001A7E                     l4298:
  4221   001A7E  90D8               	bcf	status,0,c
  4222   001A80  3214               	rrcf	___fladd@grs^0,f,c
  4223   001A82                     l4300:
  4224   001A82  A005               	btfss	___fladd@b^0,0,c
  4225   001A84  EF46  F00D         	goto	u4511
  4226   001A88  EF48  F00D         	goto	u4510
  4227   001A8C                     u4511:
  4228   001A8C  EF49  F00D         	goto	l4304
  4229   001A90                     u4510:
  4230   001A90  8E14               	bsf	___fladd@grs^0,7,c
  4231   001A92                     l4304:
  4232   001A92  3408               	rlcf	(___fladd@b+3)^0,w,c
  4233   001A94  3208               	rrcf	(___fladd@b+3)^0,f,c
  4234   001A96  3207               	rrcf	(___fladd@b+2)^0,f,c
  4235   001A98  3206               	rrcf	(___fladd@b+1)^0,f,c
  4236   001A9A  3205               	rrcf	___fladd@b^0,f,c
  4237   001A9C  2A13               	incf	___fladd@bexp^0,f,c
  4238   001A9E  EFDE  F00D         	goto	l4344
  4239   001AA2                     l4308:
  4240   001AA2  5009               	movf	___fladd@a^0,w,c
  4241   001AA4  5C05               	subwf	___fladd@b^0,w,c
  4242   001AA6  500A               	movf	(___fladd@a+1)^0,w,c
  4243   001AA8  5806               	subwfb	(___fladd@b+1)^0,w,c
  4244   001AAA  500B               	movf	(___fladd@a+2)^0,w,c
  4245   001AAC  5807               	subwfb	(___fladd@b+2)^0,w,c
  4246   001AAE  5008               	movf	(___fladd@b+3)^0,w,c
  4247   001AB0  0A80               	xorlw	128
  4248   001AB2  6E0D               	movwf	??___fladd^0,c
  4249   001AB4  500C               	movf	(___fladd@a+3)^0,w,c
  4250   001AB6  0A80               	xorlw	128
  4251   001AB8  580D               	subwfb	??___fladd^0,w,c
  4252   001ABA  B0D8               	btfsc	status,0,c
  4253   001ABC  EF62  F00D         	goto	u4521
  4254   001AC0  EF64  F00D         	goto	u4520
  4255   001AC4                     u4521:
  4256   001AC4  EF8F  F00D         	goto	l4318
  4257   001AC8                     u4520:
  4258   001AC8  5005               	movf	___fladd@b^0,w,c
  4259   001ACA  5C09               	subwf	___fladd@a^0,w,c
  4260   001ACC  6E0D               	movwf	??___fladd^0,c
  4261   001ACE  5006               	movf	(___fladd@b+1)^0,w,c
  4262   001AD0  580A               	subwfb	(___fladd@a+1)^0,w,c
  4263   001AD2  6E0E               	movwf	(??___fladd+1)^0,c
  4264   001AD4  5007               	movf	(___fladd@b+2)^0,w,c
  4265   001AD6  580B               	subwfb	(___fladd@a+2)^0,w,c
  4266   001AD8  6E0F               	movwf	(??___fladd+2)^0,c
  4267   001ADA  5008               	movf	(___fladd@b+3)^0,w,c
  4268   001ADC  580C               	subwfb	(___fladd@a+3)^0,w,c
  4269   001ADE  6E10               	movwf	(??___fladd+3)^0,c
  4270   001AE0  0EFF               	movlw	255
  4271   001AE2  240D               	addwf	??___fladd^0,w,c
  4272   001AE4  6E05               	movwf	___fladd@b^0,c
  4273   001AE6  0EFF               	movlw	255
  4274   001AE8  200E               	addwfc	(??___fladd+1)^0,w,c
  4275   001AEA  6E06               	movwf	(___fladd@b+1)^0,c
  4276   001AEC  0EFF               	movlw	255
  4277   001AEE  200F               	addwfc	(??___fladd+2)^0,w,c
  4278   001AF0  6E07               	movwf	(___fladd@b+2)^0,c
  4279   001AF2  0EFF               	movlw	255
  4280   001AF4  2010               	addwfc	(??___fladd+3)^0,w,c
  4281   001AF6  6E08               	movwf	(___fladd@b+3)^0,c
  4282   001AF8  0E80               	movlw	128
  4283   001AFA  1A11               	xorwf	___fladd@signs^0,f,c
  4284   001AFC  6C14               	negf	___fladd@grs^0,c
  4285   001AFE  5014               	movf	___fladd@grs^0,w,c
  4286   001B00  A4D8               	btfss	status,2,c
  4287   001B02  EF85  F00D         	goto	u4531
  4288   001B06  EF87  F00D         	goto	u4530
  4289   001B0A                     u4531:
  4290   001B0A  EF97  F00D         	goto	l834
  4291   001B0E                     u4530:
  4292   001B0E  0E01               	movlw	1
  4293   001B10  2605               	addwf	___fladd@b^0,f,c
  4294   001B12  0E00               	movlw	0
  4295   001B14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4296   001B16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4297   001B18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4298   001B1A  EF97  F00D         	goto	l834
  4299   001B1E                     l4318:
  4300   001B1E  5009               	movf	___fladd@a^0,w,c
  4301   001B20  5E05               	subwf	___fladd@b^0,f,c
  4302   001B22  500A               	movf	(___fladd@a+1)^0,w,c
  4303   001B24  5A06               	subwfb	(___fladd@b+1)^0,f,c
  4304   001B26  500B               	movf	(___fladd@a+2)^0,w,c
  4305   001B28  5A07               	subwfb	(___fladd@b+2)^0,f,c
  4306   001B2A  500C               	movf	(___fladd@a+3)^0,w,c
  4307   001B2C  5A08               	subwfb	(___fladd@b+3)^0,f,c
  4308   001B2E                     l834:
  4309   001B2E  5005               	movf	___fladd@b^0,w,c
  4310   001B30  1006               	iorwf	(___fladd@b+1)^0,w,c
  4311   001B32  1007               	iorwf	(___fladd@b+2)^0,w,c
  4312   001B34  1008               	iorwf	(___fladd@b+3)^0,w,c
  4313   001B36  A4D8               	btfss	status,2,c
  4314   001B38  EFA0  F00D         	goto	u4541
  4315   001B3C  EFA2  F00D         	goto	u4540
  4316   001B40                     u4541:
  4317   001B40  EFD7  F00D         	goto	l4342
  4318   001B44                     u4540:
  4319   001B44  5014               	movf	___fladd@grs^0,w,c
  4320   001B46  A4D8               	btfss	status,2,c
  4321   001B48  EFA8  F00D         	goto	u4551
  4322   001B4C  EFAA  F00D         	goto	u4550
  4323   001B50                     u4551:
  4324   001B50  EFD7  F00D         	goto	l4342
  4325   001B54                     u4550:
  4326   001B54  0E00               	movlw	0
  4327   001B56  6E05               	movwf	?___fladd^0,c
  4328   001B58  0E00               	movlw	0
  4329   001B5A  6E06               	movwf	(?___fladd+1)^0,c
  4330   001B5C  0E00               	movlw	0
  4331   001B5E  6E07               	movwf	(?___fladd+2)^0,c
  4332   001B60  0E00               	movlw	0
  4333   001B62  6E08               	movwf	(?___fladd+3)^0,c
  4334   001B64  EF72  F00E         	goto	l826
  4335   001B68                     l4326:
  4336   001B68  90D8               	bcf	status,0,c
  4337   001B6A  3605               	rlcf	___fladd@b^0,f,c
  4338   001B6C  3606               	rlcf	(___fladd@b+1)^0,f,c
  4339   001B6E  3607               	rlcf	(___fladd@b+2)^0,f,c
  4340   001B70  3608               	rlcf	(___fladd@b+3)^0,f,c
  4341   001B72  AE14               	btfss	___fladd@grs^0,7,c
  4342   001B74  EFBE  F00D         	goto	u4561
  4343   001B78  EFC0  F00D         	goto	u4560
  4344   001B7C                     u4561:
  4345   001B7C  EFC1  F00D         	goto	l4332
  4346   001B80                     u4560:
  4347   001B80  8005               	bsf	___fladd@b^0,0,c
  4348   001B82                     l4332:
  4349   001B82  A014               	btfss	___fladd@grs^0,0,c
  4350   001B84  EFC6  F00D         	goto	u4571
  4351   001B88  EFC8  F00D         	goto	u4570
  4352   001B8C                     u4571:
  4353   001B8C  EFCC  F00D         	goto	l4336
  4354   001B90                     u4570:
  4355   001B90  80D8               	bsf	status,0,c
  4356   001B92  3614               	rlcf	___fladd@grs^0,f,c
  4357   001B94  EFCE  F00D         	goto	l4338
  4358   001B98                     l4336:
  4359   001B98  90D8               	bcf	status,0,c
  4360   001B9A  3614               	rlcf	___fladd@grs^0,f,c
  4361   001B9C                     l4338:
  4362   001B9C  5013               	movf	___fladd@bexp^0,w,c
  4363   001B9E  B4D8               	btfsc	status,2,c
  4364   001BA0  EFD4  F00D         	goto	u4581
  4365   001BA4  EFD6  F00D         	goto	u4580
  4366   001BA8                     u4581:
  4367   001BA8  EFD7  F00D         	goto	l4342
  4368   001BAC                     u4580:
  4369   001BAC  0613               	decf	___fladd@bexp^0,f,c
  4370   001BAE                     l4342:
  4371   001BAE  AE07               	btfss	(___fladd@b+2)^0,7,c
  4372   001BB0  EFDC  F00D         	goto	u4591
  4373   001BB4  EFDE  F00D         	goto	u4590
  4374   001BB8                     u4591:
  4375   001BB8  EFB4  F00D         	goto	l4326
  4376   001BBC                     u4590:
  4377   001BBC                     l4344:
  4378   001BBC  0E00               	movlw	0
  4379   001BBE  6E12               	movwf	___fladd@aexp^0,c
  4380   001BC0  AE14               	btfss	___fladd@grs^0,7,c
  4381   001BC2  EFE5  F00D         	goto	u4601
  4382   001BC6  EFE7  F00D         	goto	u4600
  4383   001BCA                     u4601:
  4384   001BCA  EFFF  F00D         	goto	l843
  4385   001BCE                     u4600:
  4386   001BCE  C014  F00D         	movff	___fladd@grs,??___fladd
  4387   001BD2  0E7F               	movlw	127
  4388   001BD4  160D               	andwf	??___fladd^0,f,c
  4389   001BD6  B4D8               	btfsc	status,2,c
  4390   001BD8  EFF0  F00D         	goto	u4611
  4391   001BDC  EFF2  F00D         	goto	u4610
  4392   001BE0                     u4611:
  4393   001BE0  EFF6  F00D         	goto	l844
  4394   001BE4                     u4610:
  4395   001BE4                     l4350:
  4396   001BE4  0E01               	movlw	1
  4397   001BE6  6E12               	movwf	___fladd@aexp^0,c
  4398   001BE8  EFFF  F00D         	goto	l843
  4399   001BEC                     l844:
  4400   001BEC  A005               	btfss	___fladd@b^0,0,c
  4401   001BEE  EFFB  F00D         	goto	u4621
  4402   001BF2  EFFD  F00D         	goto	u4620
  4403   001BF6                     u4621:
  4404   001BF6  EFFF  F00D         	goto	l843
  4405   001BFA                     u4620:
  4406   001BFA  EFF2  F00D         	goto	l4350
  4407   001BFE                     l843:
  4408   001BFE  5012               	movf	___fladd@aexp^0,w,c
  4409   001C00  B4D8               	btfsc	status,2,c
  4410   001C02  EF05  F00E         	goto	u4631
  4411   001C06  EF07  F00E         	goto	u4630
  4412   001C0A                     u4631:
  4413   001C0A  EF32  F00E         	goto	l4362
  4414   001C0E                     u4630:
  4415   001C0E  0E01               	movlw	1
  4416   001C10  2605               	addwf	___fladd@b^0,f,c
  4417   001C12  0E00               	movlw	0
  4418   001C14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4419   001C16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4420   001C18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4421   001C1A  A008               	btfss	(___fladd@b+3)^0,0,c
  4422   001C1C  EF12  F00E         	goto	u4641
  4423   001C20  EF14  F00E         	goto	u4640
  4424   001C24                     u4641:
  4425   001C24  EF32  F00E         	goto	l4362
  4426   001C28                     u4640:
  4427   001C28  C005  F00D         	movff	___fladd@b,??___fladd
  4428   001C2C  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  4429   001C30  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  4430   001C34  C008  F010         	movff	___fladd@b+3,??___fladd+3
  4431   001C38  3410               	rlcf	(??___fladd+3)^0,w,c
  4432   001C3A  3210               	rrcf	(??___fladd+3)^0,f,c
  4433   001C3C  320F               	rrcf	(??___fladd+2)^0,f,c
  4434   001C3E  320E               	rrcf	(??___fladd+1)^0,f,c
  4435   001C40  320D               	rrcf	??___fladd^0,f,c
  4436   001C42  C00D  F005         	movff	??___fladd,___fladd@b
  4437   001C46  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  4438   001C4A  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  4439   001C4E  C010  F008         	movff	??___fladd+3,___fladd@b+3
  4440   001C52  2813               	incf	___fladd@bexp^0,w,c
  4441   001C54  B4D8               	btfsc	status,2,c
  4442   001C56  EF2F  F00E         	goto	u4651
  4443   001C5A  EF31  F00E         	goto	u4650
  4444   001C5E                     u4651:
  4445   001C5E  EF32  F00E         	goto	l4362
  4446   001C62                     u4650:
  4447   001C62  2A13               	incf	___fladd@bexp^0,f,c
  4448   001C64                     l4362:
  4449   001C64  2813               	incf	___fladd@bexp^0,w,c
  4450   001C66  B4D8               	btfsc	status,2,c
  4451   001C68  EF38  F00E         	goto	u4661
  4452   001C6C  EF3A  F00E         	goto	u4660
  4453   001C70                     u4661:
  4454   001C70  EF42  F00E         	goto	l4366
  4455   001C74                     u4660:
  4456   001C74  5013               	movf	___fladd@bexp^0,w,c
  4457   001C76  A4D8               	btfss	status,2,c
  4458   001C78  EF40  F00E         	goto	u4671
  4459   001C7C  EF42  F00E         	goto	u4670
  4460   001C80                     u4671:
  4461   001C80  EF54  F00E         	goto	l4370
  4462   001C84                     u4670:
  4463   001C84                     l4366:
  4464   001C84  0E00               	movlw	0
  4465   001C86  6E05               	movwf	___fladd@b^0,c
  4466   001C88  0E00               	movlw	0
  4467   001C8A  6E06               	movwf	(___fladd@b+1)^0,c
  4468   001C8C  0E00               	movlw	0
  4469   001C8E  6E07               	movwf	(___fladd@b+2)^0,c
  4470   001C90  0E00               	movlw	0
  4471   001C92  6E08               	movwf	(___fladd@b+3)^0,c
  4472   001C94  5013               	movf	___fladd@bexp^0,w,c
  4473   001C96  A4D8               	btfss	status,2,c
  4474   001C98  EF50  F00E         	goto	u4681
  4475   001C9C  EF52  F00E         	goto	u4680
  4476   001CA0                     u4681:
  4477   001CA0  EF54  F00E         	goto	l4370
  4478   001CA4                     u4680:
  4479   001CA4  0E00               	movlw	0
  4480   001CA6  6E11               	movwf	___fladd@signs^0,c
  4481   001CA8                     l4370:
  4482   001CA8  A013               	btfss	___fladd@bexp^0,0,c
  4483   001CAA  EF59  F00E         	goto	u4691
  4484   001CAE  EF5B  F00E         	goto	u4690
  4485   001CB2                     u4691:
  4486   001CB2  EF5E  F00E         	goto	l4374
  4487   001CB6                     u4690:
  4488   001CB6  8E07               	bsf	(___fladd@b+2)^0,7,c
  4489   001CB8  EF5F  F00E         	goto	l4376
  4490   001CBC                     l4374:
  4491   001CBC  9E07               	bcf	(___fladd@b+2)^0,7,c
  4492   001CBE                     l4376:
  4493   001CBE  90D8               	bcf	status,0,c
  4494   001CC0  3013               	rrcf	___fladd@bexp^0,w,c
  4495   001CC2  6E08               	movwf	(___fladd@b+3)^0,c
  4496   001CC4  AE11               	btfss	___fladd@signs^0,7,c
  4497   001CC6  EF67  F00E         	goto	u4701
  4498   001CCA  EF69  F00E         	goto	u4700
  4499   001CCE                     u4701:
  4500   001CCE  EF6A  F00E         	goto	l4382
  4501   001CD2                     u4700:
  4502   001CD2  8E08               	bsf	(___fladd@b+3)^0,7,c
  4503   001CD4                     l4382:
  4504   001CD4  C005  F005         	movff	___fladd@b,?___fladd
  4505   001CD8  C006  F006         	movff	___fladd@b+1,?___fladd+1
  4506   001CDC  C007  F007         	movff	___fladd@b+2,?___fladd+2
  4507   001CE0  C008  F008         	movff	___fladd@b+3,?___fladd+3
  4508   001CE4                     l826:
  4509   001CE4  0012               	return		;funcret
  4510   001CE6                     __end_of___fladd:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function ___flneg *****************
  4514 ;; Defined at:
  4515 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  f1              4    4[COMRAM] unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  4    4[COMRAM] unsigned char 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;Total ram usage:        4 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 2
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_efgtoa
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text13
  4544   003CB6                     __ptext13:
  4545                           	callstack 0
  4546   003CB6                     ___flneg:
  4547                           	callstack 24
  4548   003CB6  5005               	movf	___flneg@f1^0,w,c
  4549   003CB8  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4550   003CBA  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4551   003CBC  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4552   003CBE  B4D8               	btfsc	status,2,c
  4553   003CC0  EF64  F01E         	goto	u5351
  4554   003CC4  EF66  F01E         	goto	u5350
  4555   003CC8                     u5351:
  4556   003CC8  EF6E  F01E         	goto	l4790
  4557   003CCC                     u5350:
  4558   003CCC  0E00               	movlw	0
  4559   003CCE  1A05               	xorwf	___flneg@f1^0,f,c
  4560   003CD0  0E00               	movlw	0
  4561   003CD2  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4562   003CD4  0E00               	movlw	0
  4563   003CD6  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4564   003CD8  0E80               	movlw	128
  4565   003CDA  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4566   003CDC                     l4790:
  4567   003CDC  C005  F005         	movff	___flneg@f1,?___flneg
  4568   003CE0  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4569   003CE4  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4570   003CE8  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4571   003CEC  0012               	return		;funcret
  4572   003CEE                     __end_of___flneg:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function ___flmul *****************
  4576 ;; Defined at:
  4577 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  b               4    4[COMRAM] unsigned char 
  4580 ;;  a               4    8[COMRAM] unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  prod            4   23[COMRAM] struct .
  4583 ;;  grs             4   18[COMRAM] unsigned long 
  4584 ;;  temp            2   27[COMRAM] struct .
  4585 ;;  bexp            1   22[COMRAM] unsigned char 
  4586 ;;  aexp            1   17[COMRAM] unsigned char 
  4587 ;;  sign            1   16[COMRAM] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  4    4[COMRAM] unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, prodl, prodh
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;Total ram usage:       25 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 2
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_efgtoa
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text14
  4612   001CE6                     __ptext14:
  4613                           	callstack 0
  4614   001CE6                     ___flmul:
  4615                           	callstack 24
  4616   001CE6  5008               	movf	(___flmul@b+3)^0,w,c
  4617   001CE8  0B80               	andlw	128
  4618   001CEA  6E11               	movwf	___flmul@sign^0,c
  4619   001CEC  5008               	movf	(___flmul@b+3)^0,w,c
  4620   001CEE  2408               	addwf	(___flmul@b+3)^0,w,c
  4621   001CF0  6E17               	movwf	___flmul@bexp^0,c
  4622   001CF2  AE07               	btfss	(___flmul@b+2)^0,7,c
  4623   001CF4  EF7E  F00E         	goto	u5081
  4624   001CF8  EF80  F00E         	goto	u5080
  4625   001CFC                     u5081:
  4626   001CFC  EF81  F00E         	goto	l4618
  4627   001D00                     u5080:
  4628   001D00  8017               	bsf	___flmul@bexp^0,0,c
  4629   001D02                     l4618:
  4630   001D02  5017               	movf	___flmul@bexp^0,w,c
  4631   001D04  B4D8               	btfsc	status,2,c
  4632   001D06  EF87  F00E         	goto	u5091
  4633   001D0A  EF89  F00E         	goto	u5090
  4634   001D0E                     u5091:
  4635   001D0E  EF9C  F00E         	goto	l4626
  4636   001D12                     u5090:
  4637   001D12  2817               	incf	___flmul@bexp^0,w,c
  4638   001D14  A4D8               	btfss	status,2,c
  4639   001D16  EF8F  F00E         	goto	u5101
  4640   001D1A  EF91  F00E         	goto	u5100
  4641   001D1E                     u5101:
  4642   001D1E  EF99  F00E         	goto	l4624
  4643   001D22                     u5100:
  4644   001D22  0E00               	movlw	0
  4645   001D24  6E05               	movwf	___flmul@b^0,c
  4646   001D26  0E00               	movlw	0
  4647   001D28  6E06               	movwf	(___flmul@b+1)^0,c
  4648   001D2A  0E00               	movlw	0
  4649   001D2C  6E07               	movwf	(___flmul@b+2)^0,c
  4650   001D2E  0E00               	movlw	0
  4651   001D30  6E08               	movwf	(___flmul@b+3)^0,c
  4652   001D32                     l4624:
  4653   001D32  8E07               	bsf	(___flmul@b+2)^0,7,c
  4654   001D34  EFA4  F00E         	goto	l4628
  4655   001D38                     l4626:
  4656   001D38  0E00               	movlw	0
  4657   001D3A  6E05               	movwf	___flmul@b^0,c
  4658   001D3C  0E00               	movlw	0
  4659   001D3E  6E06               	movwf	(___flmul@b+1)^0,c
  4660   001D40  0E00               	movlw	0
  4661   001D42  6E07               	movwf	(___flmul@b+2)^0,c
  4662   001D44  0E00               	movlw	0
  4663   001D46  6E08               	movwf	(___flmul@b+3)^0,c
  4664   001D48                     l4628:
  4665   001D48  500C               	movf	(___flmul@a+3)^0,w,c
  4666   001D4A  0B80               	andlw	128
  4667   001D4C  1A11               	xorwf	___flmul@sign^0,f,c
  4668   001D4E  500C               	movf	(___flmul@a+3)^0,w,c
  4669   001D50  240C               	addwf	(___flmul@a+3)^0,w,c
  4670   001D52  6E12               	movwf	___flmul@aexp^0,c
  4671   001D54  AE0B               	btfss	(___flmul@a+2)^0,7,c
  4672   001D56  EFAF  F00E         	goto	u5111
  4673   001D5A  EFB1  F00E         	goto	u5110
  4674   001D5E                     u5111:
  4675   001D5E  EFB2  F00E         	goto	l4636
  4676   001D62                     u5110:
  4677   001D62  8012               	bsf	___flmul@aexp^0,0,c
  4678   001D64                     l4636:
  4679   001D64  5012               	movf	___flmul@aexp^0,w,c
  4680   001D66  B4D8               	btfsc	status,2,c
  4681   001D68  EFB8  F00E         	goto	u5121
  4682   001D6C  EFBA  F00E         	goto	u5120
  4683   001D70                     u5121:
  4684   001D70  EFCD  F00E         	goto	l4644
  4685   001D74                     u5120:
  4686   001D74  2812               	incf	___flmul@aexp^0,w,c
  4687   001D76  A4D8               	btfss	status,2,c
  4688   001D78  EFC0  F00E         	goto	u5131
  4689   001D7C  EFC2  F00E         	goto	u5130
  4690   001D80                     u5131:
  4691   001D80  EFCA  F00E         	goto	l4642
  4692   001D84                     u5130:
  4693   001D84  0E00               	movlw	0
  4694   001D86  6E09               	movwf	___flmul@a^0,c
  4695   001D88  0E00               	movlw	0
  4696   001D8A  6E0A               	movwf	(___flmul@a+1)^0,c
  4697   001D8C  0E00               	movlw	0
  4698   001D8E  6E0B               	movwf	(___flmul@a+2)^0,c
  4699   001D90  0E00               	movlw	0
  4700   001D92  6E0C               	movwf	(___flmul@a+3)^0,c
  4701   001D94                     l4642:
  4702   001D94  8E0B               	bsf	(___flmul@a+2)^0,7,c
  4703   001D96  EFD5  F00E         	goto	l903
  4704   001D9A                     l4644:
  4705   001D9A  0E00               	movlw	0
  4706   001D9C  6E09               	movwf	___flmul@a^0,c
  4707   001D9E  0E00               	movlw	0
  4708   001DA0  6E0A               	movwf	(___flmul@a+1)^0,c
  4709   001DA2  0E00               	movlw	0
  4710   001DA4  6E0B               	movwf	(___flmul@a+2)^0,c
  4711   001DA6  0E00               	movlw	0
  4712   001DA8  6E0C               	movwf	(___flmul@a+3)^0,c
  4713   001DAA                     l903:
  4714   001DAA  5012               	movf	___flmul@aexp^0,w,c
  4715   001DAC  B4D8               	btfsc	status,2,c
  4716   001DAE  EFDB  F00E         	goto	u5141
  4717   001DB2  EFDD  F00E         	goto	u5140
  4718   001DB6                     u5141:
  4719   001DB6  EFE5  F00E         	goto	l4648
  4720   001DBA                     u5140:
  4721   001DBA  5017               	movf	___flmul@bexp^0,w,c
  4722   001DBC  A4D8               	btfss	status,2,c
  4723   001DBE  EFE3  F00E         	goto	u5151
  4724   001DC2  EFE5  F00E         	goto	u5150
  4725   001DC6                     u5151:
  4726   001DC6  EFEF  F00E         	goto	l4652
  4727   001DCA                     u5150:
  4728   001DCA                     l4648:
  4729   001DCA  0E00               	movlw	0
  4730   001DCC  6E05               	movwf	?___flmul^0,c
  4731   001DCE  0E00               	movlw	0
  4732   001DD0  6E06               	movwf	(?___flmul+1)^0,c
  4733   001DD2  0E00               	movlw	0
  4734   001DD4  6E07               	movwf	(?___flmul+2)^0,c
  4735   001DD6  0E00               	movlw	0
  4736   001DD8  6E08               	movwf	(?___flmul+3)^0,c
  4737   001DDA  EF87  F010         	goto	l907
  4738   001DDE                     l4652:
  4739   001DDE  500B               	movf	(___flmul@a+2)^0,w,c
  4740   001DE0  0205               	mulwf	___flmul@b^0,c
  4741   001DE2  CFF3 F01C          	movff	prodl,___flmul@temp
  4742   001DE6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4743   001DEA  501C               	movf	___flmul@temp^0,w,c
  4744   001DEC  6E13               	movwf	___flmul@grs^0,c
  4745   001DEE  6A14               	clrf	(___flmul@grs+1)^0,c
  4746   001DF0  6A15               	clrf	(___flmul@grs+2)^0,c
  4747   001DF2  6A16               	clrf	(___flmul@grs+3)^0,c
  4748   001DF4  501D               	movf	(___flmul@temp+1)^0,w,c
  4749   001DF6  6E18               	movwf	___flmul@prod^0,c
  4750   001DF8  6A19               	clrf	(___flmul@prod+1)^0,c
  4751   001DFA  6A1A               	clrf	(___flmul@prod+2)^0,c
  4752   001DFC  6A1B               	clrf	(___flmul@prod+3)^0,c
  4753   001DFE  500A               	movf	(___flmul@a+1)^0,w,c
  4754   001E00  0206               	mulwf	(___flmul@b+1)^0,c
  4755   001E02  CFF3 F01C          	movff	prodl,___flmul@temp
  4756   001E06  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4757   001E0A  501C               	movf	___flmul@temp^0,w,c
  4758   001E0C  2613               	addwf	___flmul@grs^0,f,c
  4759   001E0E  0E00               	movlw	0
  4760   001E10  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4761   001E12  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4762   001E14  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4763   001E16  501D               	movf	(___flmul@temp+1)^0,w,c
  4764   001E18  2618               	addwf	___flmul@prod^0,f,c
  4765   001E1A  0E00               	movlw	0
  4766   001E1C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4767   001E1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4768   001E20  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4769   001E22  5009               	movf	___flmul@a^0,w,c
  4770   001E24  0207               	mulwf	(___flmul@b+2)^0,c
  4771   001E26  CFF3 F01C          	movff	prodl,___flmul@temp
  4772   001E2A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4773   001E2E  501C               	movf	___flmul@temp^0,w,c
  4774   001E30  2613               	addwf	___flmul@grs^0,f,c
  4775   001E32  0E00               	movlw	0
  4776   001E34  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4777   001E36  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4778   001E38  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4779   001E3A  501D               	movf	(___flmul@temp+1)^0,w,c
  4780   001E3C  2618               	addwf	___flmul@prod^0,f,c
  4781   001E3E  0E00               	movlw	0
  4782   001E40  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4783   001E42  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4784   001E44  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4785   001E46  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4786   001E4A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4787   001E4E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4788   001E52  6A13               	clrf	___flmul@grs^0,c
  4789   001E54  5009               	movf	___flmul@a^0,w,c
  4790   001E56  0206               	mulwf	(___flmul@b+1)^0,c
  4791   001E58  CFF3 F01C          	movff	prodl,___flmul@temp
  4792   001E5C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4793   001E60  501C               	movf	___flmul@temp^0,w,c
  4794   001E62  2613               	addwf	___flmul@grs^0,f,c
  4795   001E64  501D               	movf	(___flmul@temp+1)^0,w,c
  4796   001E66  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4797   001E68  0E00               	movlw	0
  4798   001E6A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4799   001E6C  0E00               	movlw	0
  4800   001E6E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4801   001E70  500A               	movf	(___flmul@a+1)^0,w,c
  4802   001E72  0205               	mulwf	___flmul@b^0,c
  4803   001E74  CFF3 F01C          	movff	prodl,___flmul@temp
  4804   001E78  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4805   001E7C  501C               	movf	___flmul@temp^0,w,c
  4806   001E7E  2613               	addwf	___flmul@grs^0,f,c
  4807   001E80  501D               	movf	(___flmul@temp+1)^0,w,c
  4808   001E82  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4809   001E84  0E00               	movlw	0
  4810   001E86  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4811   001E88  0E00               	movlw	0
  4812   001E8A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4813   001E8C  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4814   001E90  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4815   001E94  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4816   001E98  6A13               	clrf	___flmul@grs^0,c
  4817   001E9A  5009               	movf	___flmul@a^0,w,c
  4818   001E9C  0205               	mulwf	___flmul@b^0,c
  4819   001E9E  CFF3 F01C          	movff	prodl,___flmul@temp
  4820   001EA2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4821   001EA6  501C               	movf	___flmul@temp^0,w,c
  4822   001EA8  2613               	addwf	___flmul@grs^0,f,c
  4823   001EAA  501D               	movf	(___flmul@temp+1)^0,w,c
  4824   001EAC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4825   001EAE  0E00               	movlw	0
  4826   001EB0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4827   001EB2  0E00               	movlw	0
  4828   001EB4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4829   001EB6  500B               	movf	(___flmul@a+2)^0,w,c
  4830   001EB8  0206               	mulwf	(___flmul@b+1)^0,c
  4831   001EBA  CFF3 F01C          	movff	prodl,___flmul@temp
  4832   001EBE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4833   001EC2  501C               	movf	___flmul@temp^0,w,c
  4834   001EC4  2618               	addwf	___flmul@prod^0,f,c
  4835   001EC6  501D               	movf	(___flmul@temp+1)^0,w,c
  4836   001EC8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4837   001ECA  0E00               	movlw	0
  4838   001ECC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4839   001ECE  0E00               	movlw	0
  4840   001ED0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4841   001ED2  500A               	movf	(___flmul@a+1)^0,w,c
  4842   001ED4  0207               	mulwf	(___flmul@b+2)^0,c
  4843   001ED6  CFF3 F01C          	movff	prodl,___flmul@temp
  4844   001EDA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4845   001EDE  501C               	movf	___flmul@temp^0,w,c
  4846   001EE0  2618               	addwf	___flmul@prod^0,f,c
  4847   001EE2  501D               	movf	(___flmul@temp+1)^0,w,c
  4848   001EE4  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4849   001EE6  0E00               	movlw	0
  4850   001EE8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4851   001EEA  0E00               	movlw	0
  4852   001EEC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4853   001EEE  500B               	movf	(___flmul@a+2)^0,w,c
  4854   001EF0  0207               	mulwf	(___flmul@b+2)^0,c
  4855   001EF2  CFF3 F01C          	movff	prodl,___flmul@temp
  4856   001EF6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4857   001EFA  501C               	movf	___flmul@temp^0,w,c
  4858   001EFC  6E0D               	movwf	??___flmul^0,c
  4859   001EFE  501D               	movf	(___flmul@temp+1)^0,w,c
  4860   001F00  6E0E               	movwf	(??___flmul+1)^0,c
  4861   001F02  6A0F               	clrf	(??___flmul+2)^0,c
  4862   001F04  6A10               	clrf	(??___flmul+3)^0,c
  4863   001F06  C00F  F010         	movff	??___flmul+2,??___flmul+3
  4864   001F0A  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  4865   001F0E  C00D  F00E         	movff	??___flmul,??___flmul+1
  4866   001F12  6A0D               	clrf	??___flmul^0,c
  4867   001F14  500D               	movf	??___flmul^0,w,c
  4868   001F16  2618               	addwf	___flmul@prod^0,f,c
  4869   001F18  500E               	movf	(??___flmul+1)^0,w,c
  4870   001F1A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4871   001F1C  500F               	movf	(??___flmul+2)^0,w,c
  4872   001F1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4873   001F20  5010               	movf	(??___flmul+3)^0,w,c
  4874   001F22  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4875   001F24  C013  F00D         	movff	___flmul@grs,??___flmul
  4876   001F28  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  4877   001F2C  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  4878   001F30  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  4879   001F34  0E19               	movlw	25
  4880   001F36  EFA2  F00F         	goto	u5160
  4881   001F3A                     u5165:
  4882   001F3A  90D8               	bcf	status,0,c
  4883   001F3C  3210               	rrcf	(??___flmul+3)^0,f,c
  4884   001F3E  320F               	rrcf	(??___flmul+2)^0,f,c
  4885   001F40  320E               	rrcf	(??___flmul+1)^0,f,c
  4886   001F42  320D               	rrcf	??___flmul^0,f,c
  4887   001F44                     u5160:
  4888   001F44  2EE8               	decfsz	wreg,f,c
  4889   001F46  EF9D  F00F         	goto	u5165
  4890   001F4A  500D               	movf	??___flmul^0,w,c
  4891   001F4C  2618               	addwf	___flmul@prod^0,f,c
  4892   001F4E  500E               	movf	(??___flmul+1)^0,w,c
  4893   001F50  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4894   001F52  500F               	movf	(??___flmul+2)^0,w,c
  4895   001F54  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4896   001F56  5010               	movf	(??___flmul+3)^0,w,c
  4897   001F58  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4898   001F5A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4899   001F5E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4900   001F62  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4901   001F66  6A13               	clrf	___flmul@grs^0,c
  4902   001F68  5012               	movf	___flmul@aexp^0,w,c
  4903   001F6A  C017  F00D         	movff	___flmul@bexp,??___flmul
  4904   001F6E  6A0E               	clrf	(??___flmul+1)^0,c
  4905   001F70  260D               	addwf	??___flmul^0,f,c
  4906   001F72  0E00               	movlw	0
  4907   001F74  220E               	addwfc	(??___flmul+1)^0,f,c
  4908   001F76  0E82               	movlw	130
  4909   001F78  240D               	addwf	??___flmul^0,w,c
  4910   001F7A  6E1C               	movwf	___flmul@temp^0,c
  4911   001F7C  0EFF               	movlw	255
  4912   001F7E  200E               	addwfc	(??___flmul+1)^0,w,c
  4913   001F80  6E1D               	movwf	(___flmul@temp+1)^0,c
  4914   001F82  EFD8  F00F         	goto	l4700
  4915   001F86                     l4694:
  4916   001F86  90D8               	bcf	status,0,c
  4917   001F88  3618               	rlcf	___flmul@prod^0,f,c
  4918   001F8A  3619               	rlcf	(___flmul@prod+1)^0,f,c
  4919   001F8C  361A               	rlcf	(___flmul@prod+2)^0,f,c
  4920   001F8E  361B               	rlcf	(___flmul@prod+3)^0,f,c
  4921   001F90  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4922   001F92  EFCD  F00F         	goto	u5171
  4923   001F96  EFCF  F00F         	goto	u5170
  4924   001F9A                     u5171:
  4925   001F9A  EFD0  F00F         	goto	l910
  4926   001F9E                     u5170:
  4927   001F9E  8018               	bsf	___flmul@prod^0,0,c
  4928   001FA0                     l910:
  4929   001FA0  90D8               	bcf	status,0,c
  4930   001FA2  3613               	rlcf	___flmul@grs^0,f,c
  4931   001FA4  3614               	rlcf	(___flmul@grs+1)^0,f,c
  4932   001FA6  3615               	rlcf	(___flmul@grs+2)^0,f,c
  4933   001FA8  3616               	rlcf	(___flmul@grs+3)^0,f,c
  4934   001FAA  061C               	decf	___flmul@temp^0,f,c
  4935   001FAC  A0D8               	btfss	status,0,c
  4936   001FAE  061D               	decf	(___flmul@temp+1)^0,f,c
  4937   001FB0                     l4700:
  4938   001FB0  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  4939   001FB2  EFDD  F00F         	goto	u5181
  4940   001FB6  EFDF  F00F         	goto	u5180
  4941   001FBA                     u5181:
  4942   001FBA  EFC3  F00F         	goto	l4694
  4943   001FBE                     u5180:
  4944   001FBE  0E00               	movlw	0
  4945   001FC0  6E12               	movwf	___flmul@aexp^0,c
  4946   001FC2  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4947   001FC4  EFE6  F00F         	goto	u5191
  4948   001FC8  EFE8  F00F         	goto	u5190
  4949   001FCC                     u5191:
  4950   001FCC  EF0C  F010         	goto	l912
  4951   001FD0                     u5190:
  4952   001FD0  0EFF               	movlw	255
  4953   001FD2  1413               	andwf	___flmul@grs^0,w,c
  4954   001FD4  6E0D               	movwf	??___flmul^0,c
  4955   001FD6  0EFF               	movlw	255
  4956   001FD8  1414               	andwf	(___flmul@grs+1)^0,w,c
  4957   001FDA  6E0E               	movwf	(??___flmul+1)^0,c
  4958   001FDC  0EFF               	movlw	255
  4959   001FDE  1415               	andwf	(___flmul@grs+2)^0,w,c
  4960   001FE0  6E0F               	movwf	(??___flmul+2)^0,c
  4961   001FE2  0E7F               	movlw	127
  4962   001FE4  1416               	andwf	(___flmul@grs+3)^0,w,c
  4963   001FE6  6E10               	movwf	(??___flmul+3)^0,c
  4964   001FE8  500D               	movf	??___flmul^0,w,c
  4965   001FEA  100E               	iorwf	(??___flmul+1)^0,w,c
  4966   001FEC  100F               	iorwf	(??___flmul+2)^0,w,c
  4967   001FEE  1010               	iorwf	(??___flmul+3)^0,w,c
  4968   001FF0  B4D8               	btfsc	status,2,c
  4969   001FF2  EFFD  F00F         	goto	u5201
  4970   001FF6  EFFF  F00F         	goto	u5200
  4971   001FFA                     u5201:
  4972   001FFA  EF03  F010         	goto	l913
  4973   001FFE                     u5200:
  4974   001FFE                     l4708:
  4975   001FFE  0E01               	movlw	1
  4976   002000  6E12               	movwf	___flmul@aexp^0,c
  4977   002002  EF0C  F010         	goto	l912
  4978   002006                     l913:
  4979   002006  A018               	btfss	___flmul@prod^0,0,c
  4980   002008  EF08  F010         	goto	u5211
  4981   00200C  EF0A  F010         	goto	u5210
  4982   002010                     u5211:
  4983   002010  EF0C  F010         	goto	l912
  4984   002014                     u5210:
  4985   002014  EFFF  F00F         	goto	l4708
  4986   002018                     l912:
  4987   002018  5012               	movf	___flmul@aexp^0,w,c
  4988   00201A  B4D8               	btfsc	status,2,c
  4989   00201C  EF12  F010         	goto	u5221
  4990   002020  EF14  F010         	goto	u5220
  4991   002024                     u5221:
  4992   002024  EF38  F010         	goto	l4720
  4993   002028                     u5220:
  4994   002028  0E01               	movlw	1
  4995   00202A  2618               	addwf	___flmul@prod^0,f,c
  4996   00202C  0E00               	movlw	0
  4997   00202E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4998   002030  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4999   002032  221B               	addwfc	(___flmul@prod+3)^0,f,c
  5000   002034  A01B               	btfss	(___flmul@prod+3)^0,0,c
  5001   002036  EF1F  F010         	goto	u5231
  5002   00203A  EF21  F010         	goto	u5230
  5003   00203E                     u5231:
  5004   00203E  EF38  F010         	goto	l4720
  5005   002042                     u5230:
  5006   002042  C018  F00D         	movff	___flmul@prod,??___flmul
  5007   002046  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  5008   00204A  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  5009   00204E  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  5010   002052  3410               	rlcf	(??___flmul+3)^0,w,c
  5011   002054  3210               	rrcf	(??___flmul+3)^0,f,c
  5012   002056  320F               	rrcf	(??___flmul+2)^0,f,c
  5013   002058  320E               	rrcf	(??___flmul+1)^0,f,c
  5014   00205A  320D               	rrcf	??___flmul^0,f,c
  5015   00205C  C00D  F018         	movff	??___flmul,___flmul@prod
  5016   002060  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  5017   002064  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  5018   002068  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  5019   00206C  4A1C               	infsnz	___flmul@temp^0,f,c
  5020   00206E  2A1D               	incf	(___flmul@temp+1)^0,f,c
  5021   002070                     l4720:
  5022   002070  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5023   002072  EF43  F010         	goto	u5241
  5024   002076  501D               	movf	(___flmul@temp+1)^0,w,c
  5025   002078  E108               	bnz	u5240
  5026   00207A  281C               	incf	___flmul@temp^0,w,c
  5027   00207C  A0D8               	btfss	status,0,c
  5028   00207E  EF43  F010         	goto	u5241
  5029   002082  EF45  F010         	goto	u5240
  5030   002086                     u5241:
  5031   002086  EF4F  F010         	goto	l4724
  5032   00208A                     u5240:
  5033   00208A  0E00               	movlw	0
  5034   00208C  6E18               	movwf	___flmul@prod^0,c
  5035   00208E  0E00               	movlw	0
  5036   002090  6E19               	movwf	(___flmul@prod+1)^0,c
  5037   002092  0E80               	movlw	128
  5038   002094  6E1A               	movwf	(___flmul@prod+2)^0,c
  5039   002096  0E7F               	movlw	127
  5040   002098  6E1B               	movwf	(___flmul@prod+3)^0,c
  5041   00209A  EF7D  F010         	goto	l4736
  5042   00209E                     l4724:
  5043   00209E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5044   0020A0  EF5C  F010         	goto	u5250
  5045   0020A4  501D               	movf	(___flmul@temp+1)^0,w,c
  5046   0020A6  E106               	bnz	u5251
  5047   0020A8  041C               	decf	___flmul@temp^0,w,c
  5048   0020AA  B0D8               	btfsc	status,0,c
  5049   0020AC  EF5A  F010         	goto	u5251
  5050   0020B0  EF5C  F010         	goto	u5250
  5051   0020B4                     u5251:
  5052   0020B4  EF68  F010         	goto	l920
  5053   0020B8                     u5250:
  5054   0020B8  0E00               	movlw	0
  5055   0020BA  6E18               	movwf	___flmul@prod^0,c
  5056   0020BC  0E00               	movlw	0
  5057   0020BE  6E19               	movwf	(___flmul@prod+1)^0,c
  5058   0020C0  0E00               	movlw	0
  5059   0020C2  6E1A               	movwf	(___flmul@prod+2)^0,c
  5060   0020C4  0E00               	movlw	0
  5061   0020C6  6E1B               	movwf	(___flmul@prod+3)^0,c
  5062   0020C8  0E00               	movlw	0
  5063   0020CA  6E11               	movwf	___flmul@sign^0,c
  5064   0020CC  EF7D  F010         	goto	l4736
  5065   0020D0                     l920:
  5066   0020D0  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  5067   0020D4  0EFF               	movlw	255
  5068   0020D6  1618               	andwf	___flmul@prod^0,f,c
  5069   0020D8  0EFF               	movlw	255
  5070   0020DA  1619               	andwf	(___flmul@prod+1)^0,f,c
  5071   0020DC  0E7F               	movlw	127
  5072   0020DE  161A               	andwf	(___flmul@prod+2)^0,f,c
  5073   0020E0  0E00               	movlw	0
  5074   0020E2  161B               	andwf	(___flmul@prod+3)^0,f,c
  5075   0020E4  A017               	btfss	___flmul@bexp^0,0,c
  5076   0020E6  EF77  F010         	goto	u5261
  5077   0020EA  EF79  F010         	goto	u5260
  5078   0020EE                     u5261:
  5079   0020EE  EF7A  F010         	goto	l4734
  5080   0020F2                     u5260:
  5081   0020F2  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  5082   0020F4                     l4734:
  5083   0020F4  90D8               	bcf	status,0,c
  5084   0020F6  3017               	rrcf	___flmul@bexp^0,w,c
  5085   0020F8  6E1B               	movwf	(___flmul@prod+3)^0,c
  5086   0020FA                     l4736:
  5087   0020FA  5011               	movf	___flmul@sign^0,w,c
  5088   0020FC  121B               	iorwf	(___flmul@prod+3)^0,f,c
  5089   0020FE  C018  F005         	movff	___flmul@prod,?___flmul
  5090   002102  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  5091   002106  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  5092   00210A  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  5093   00210E                     l907:
  5094   00210E  0012               	return		;funcret
  5095   002110                     __end_of___flmul:
  5096                           	callstack 0
  5097                           
  5098 ;; *************** function ___flge *****************
  5099 ;; Defined at:
  5100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  ff1             4   29[COMRAM] unsigned char 
  5103 ;;  ff2             4   33[COMRAM] unsigned char 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5115 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5119 ;;Total ram usage:       12 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 2
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_efgtoa
  5126 ;;		_Colour_decider
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text15
  5131   003370                     __ptext15:
  5132                           	callstack 0
  5133   003370                     ___flge:
  5134                           	callstack 24
  5135   003370  0E00               	movlw	0
  5136   003372  141E               	andwf	___flge@ff1^0,w,c
  5137   003374  6E26               	movwf	??___flge^0,c
  5138   003376  0E00               	movlw	0
  5139   003378  141F               	andwf	(___flge@ff1+1)^0,w,c
  5140   00337A  6E27               	movwf	(??___flge+1)^0,c
  5141   00337C  0E80               	movlw	128
  5142   00337E  1420               	andwf	(___flge@ff1+2)^0,w,c
  5143   003380  6E28               	movwf	(??___flge+2)^0,c
  5144   003382  0E7F               	movlw	127
  5145   003384  1421               	andwf	(___flge@ff1+3)^0,w,c
  5146   003386  6E29               	movwf	(??___flge+3)^0,c
  5147   003388  5026               	movf	??___flge^0,w,c
  5148   00338A  1027               	iorwf	(??___flge+1)^0,w,c
  5149   00338C  1028               	iorwf	(??___flge+2)^0,w,c
  5150   00338E  1029               	iorwf	(??___flge+3)^0,w,c
  5151   003390  A4D8               	btfss	status,2,c
  5152   003392  EFCD  F019         	goto	u5301
  5153   003396  EFCF  F019         	goto	u5300
  5154   00339A                     u5301:
  5155   00339A  EFD7  F019         	goto	l4768
  5156   00339E                     u5300:
  5157   00339E  0E00               	movlw	0
  5158   0033A0  6E1E               	movwf	___flge@ff1^0,c
  5159   0033A2  0E00               	movlw	0
  5160   0033A4  6E1F               	movwf	(___flge@ff1+1)^0,c
  5161   0033A6  0E00               	movlw	0
  5162   0033A8  6E20               	movwf	(___flge@ff1+2)^0,c
  5163   0033AA  0E00               	movlw	0
  5164   0033AC  6E21               	movwf	(___flge@ff1+3)^0,c
  5165   0033AE                     l4768:
  5166   0033AE  0E00               	movlw	0
  5167   0033B0  1422               	andwf	___flge@ff2^0,w,c
  5168   0033B2  6E26               	movwf	??___flge^0,c
  5169   0033B4  0E00               	movlw	0
  5170   0033B6  1423               	andwf	(___flge@ff2+1)^0,w,c
  5171   0033B8  6E27               	movwf	(??___flge+1)^0,c
  5172   0033BA  0E80               	movlw	128
  5173   0033BC  1424               	andwf	(___flge@ff2+2)^0,w,c
  5174   0033BE  6E28               	movwf	(??___flge+2)^0,c
  5175   0033C0  0E7F               	movlw	127
  5176   0033C2  1425               	andwf	(___flge@ff2+3)^0,w,c
  5177   0033C4  6E29               	movwf	(??___flge+3)^0,c
  5178   0033C6  5026               	movf	??___flge^0,w,c
  5179   0033C8  1027               	iorwf	(??___flge+1)^0,w,c
  5180   0033CA  1028               	iorwf	(??___flge+2)^0,w,c
  5181   0033CC  1029               	iorwf	(??___flge+3)^0,w,c
  5182   0033CE  A4D8               	btfss	status,2,c
  5183   0033D0  EFEC  F019         	goto	u5311
  5184   0033D4  EFEE  F019         	goto	u5310
  5185   0033D8                     u5311:
  5186   0033D8  EFF6  F019         	goto	l4772
  5187   0033DC                     u5310:
  5188   0033DC  0E00               	movlw	0
  5189   0033DE  6E22               	movwf	___flge@ff2^0,c
  5190   0033E0  0E00               	movlw	0
  5191   0033E2  6E23               	movwf	(___flge@ff2+1)^0,c
  5192   0033E4  0E00               	movlw	0
  5193   0033E6  6E24               	movwf	(___flge@ff2+2)^0,c
  5194   0033E8  0E00               	movlw	0
  5195   0033EA  6E25               	movwf	(___flge@ff2+3)^0,c
  5196   0033EC                     l4772:
  5197   0033EC  AE21               	btfss	(___flge@ff1+3)^0,7,c
  5198   0033EE  EFFB  F019         	goto	u5321
  5199   0033F2  EFFD  F019         	goto	u5320
  5200   0033F6                     u5321:
  5201   0033F6  EF06  F01A         	goto	l4776
  5202   0033FA                     u5320:
  5203   0033FA  6C1E               	negf	___flge@ff1^0,c
  5204   0033FC  1E1F               	comf	(___flge@ff1+1)^0,f,c
  5205   0033FE  B0D8               	btfsc	status,0,c
  5206   003400  2A1F               	incf	(___flge@ff1+1)^0,f,c
  5207   003402  1E20               	comf	(___flge@ff1+2)^0,f,c
  5208   003404  B0D8               	btfsc	status,0,c
  5209   003406  2A20               	incf	(___flge@ff1+2)^0,f,c
  5210   003408  0E80               	movlw	128
  5211   00340A  5621               	subfwb	(___flge@ff1+3)^0,f,c
  5212   00340C                     l4776:
  5213   00340C  AE25               	btfss	(___flge@ff2+3)^0,7,c
  5214   00340E  EF0B  F01A         	goto	u5331
  5215   003412  EF0D  F01A         	goto	u5330
  5216   003416                     u5331:
  5217   003416  EF16  F01A         	goto	l554
  5218   00341A                     u5330:
  5219   00341A  6C22               	negf	___flge@ff2^0,c
  5220   00341C  1E23               	comf	(___flge@ff2+1)^0,f,c
  5221   00341E  B0D8               	btfsc	status,0,c
  5222   003420  2A23               	incf	(___flge@ff2+1)^0,f,c
  5223   003422  1E24               	comf	(___flge@ff2+2)^0,f,c
  5224   003424  B0D8               	btfsc	status,0,c
  5225   003426  2A24               	incf	(___flge@ff2+2)^0,f,c
  5226   003428  0E80               	movlw	128
  5227   00342A  5625               	subfwb	(___flge@ff2+3)^0,f,c
  5228   00342C                     l554:
  5229   00342C  0E00               	movlw	0
  5230   00342E  1A1E               	xorwf	___flge@ff1^0,f,c
  5231   003430  0E00               	movlw	0
  5232   003432  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  5233   003434  0E00               	movlw	0
  5234   003436  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  5235   003438  0E80               	movlw	128
  5236   00343A  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  5237   00343C  0E00               	movlw	0
  5238   00343E  1A22               	xorwf	___flge@ff2^0,f,c
  5239   003440  0E00               	movlw	0
  5240   003442  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  5241   003444  0E00               	movlw	0
  5242   003446  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  5243   003448  0E80               	movlw	128
  5244   00344A  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  5245   00344C  5022               	movf	___flge@ff2^0,w,c
  5246   00344E  5C1E               	subwf	___flge@ff1^0,w,c
  5247   003450  5023               	movf	(___flge@ff2+1)^0,w,c
  5248   003452  581F               	subwfb	(___flge@ff1+1)^0,w,c
  5249   003454  5024               	movf	(___flge@ff2+2)^0,w,c
  5250   003456  5820               	subwfb	(___flge@ff1+2)^0,w,c
  5251   003458  5025               	movf	(___flge@ff2+3)^0,w,c
  5252   00345A  5821               	subwfb	(___flge@ff1+3)^0,w,c
  5253   00345C  B0D8               	btfsc	status,0,c
  5254   00345E  EF33  F01A         	goto	u5341
  5255   003462  EF35  F01A         	goto	u5340
  5256   003466                     u5341:
  5257   003466  EF38  F01A         	goto	l4782
  5258   00346A                     u5340:
  5259   00346A  90D8               	bcf	status,0,c
  5260   00346C  EF39  F01A         	goto	l559
  5261   003470                     l4782:
  5262   003470  80D8               	bsf	status,0,c
  5263   003472                     l559:
  5264   003472  0012               	return		;funcret
  5265   003474                     __end_of___flge:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function ___fleq *****************
  5269 ;; Defined at:
  5270 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  ff1             4    4[COMRAM] unsigned char 
  5273 ;;  ff2             4    8[COMRAM] unsigned char 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;		None               void
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5285 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:       12 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 2
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_efgtoa
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text16
  5300   00370A                     __ptext16:
  5301                           	callstack 0
  5302   00370A                     ___fleq:
  5303                           	callstack 24
  5304   00370A  0E00               	movlw	0
  5305   00370C  1405               	andwf	___fleq@ff1^0,w,c
  5306   00370E  6E0D               	movwf	??___fleq^0,c
  5307   003710  0E00               	movlw	0
  5308   003712  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5309   003714  6E0E               	movwf	(??___fleq+1)^0,c
  5310   003716  0E80               	movlw	128
  5311   003718  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5312   00371A  6E0F               	movwf	(??___fleq+2)^0,c
  5313   00371C  0E7F               	movlw	127
  5314   00371E  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5315   003720  6E10               	movwf	(??___fleq+3)^0,c
  5316   003722  500D               	movf	??___fleq^0,w,c
  5317   003724  100E               	iorwf	(??___fleq+1)^0,w,c
  5318   003726  100F               	iorwf	(??___fleq+2)^0,w,c
  5319   003728  1010               	iorwf	(??___fleq+3)^0,w,c
  5320   00372A  A4D8               	btfss	status,2,c
  5321   00372C  EF9A  F01B         	goto	u5271
  5322   003730  EF9C  F01B         	goto	u5270
  5323   003734                     u5271:
  5324   003734  EFA4  F01B         	goto	l4752
  5325   003738                     u5270:
  5326   003738  0E00               	movlw	0
  5327   00373A  6E05               	movwf	___fleq@ff1^0,c
  5328   00373C  0E00               	movlw	0
  5329   00373E  6E06               	movwf	(___fleq@ff1+1)^0,c
  5330   003740  0E00               	movlw	0
  5331   003742  6E07               	movwf	(___fleq@ff1+2)^0,c
  5332   003744  0E00               	movlw	0
  5333   003746  6E08               	movwf	(___fleq@ff1+3)^0,c
  5334   003748                     l4752:
  5335   003748  0E00               	movlw	0
  5336   00374A  1409               	andwf	___fleq@ff2^0,w,c
  5337   00374C  6E0D               	movwf	??___fleq^0,c
  5338   00374E  0E00               	movlw	0
  5339   003750  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5340   003752  6E0E               	movwf	(??___fleq+1)^0,c
  5341   003754  0E80               	movlw	128
  5342   003756  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5343   003758  6E0F               	movwf	(??___fleq+2)^0,c
  5344   00375A  0E7F               	movlw	127
  5345   00375C  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5346   00375E  6E10               	movwf	(??___fleq+3)^0,c
  5347   003760  500D               	movf	??___fleq^0,w,c
  5348   003762  100E               	iorwf	(??___fleq+1)^0,w,c
  5349   003764  100F               	iorwf	(??___fleq+2)^0,w,c
  5350   003766  1010               	iorwf	(??___fleq+3)^0,w,c
  5351   003768  A4D8               	btfss	status,2,c
  5352   00376A  EFB9  F01B         	goto	u5281
  5353   00376E  EFBB  F01B         	goto	u5280
  5354   003772                     u5281:
  5355   003772  EFC3  F01B         	goto	l4756
  5356   003776                     u5280:
  5357   003776  0E00               	movlw	0
  5358   003778  6E09               	movwf	___fleq@ff2^0,c
  5359   00377A  0E00               	movlw	0
  5360   00377C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5361   00377E  0E00               	movlw	0
  5362   003780  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5363   003782  0E00               	movlw	0
  5364   003784  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5365   003786                     l4756:
  5366   003786  5009               	movf	___fleq@ff2^0,w,c
  5367   003788  1805               	xorwf	___fleq@ff1^0,w,c
  5368   00378A  E10F               	bnz	u5290
  5369   00378C  500A               	movf	(___fleq@ff2+1)^0,w,c
  5370   00378E  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5371   003790  E10C               	bnz	u5290
  5372   003792  500B               	movf	(___fleq@ff2+2)^0,w,c
  5373   003794  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5374   003796  E109               	bnz	u5290
  5375   003798  500C               	movf	(___fleq@ff2+3)^0,w,c
  5376   00379A  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5377   00379C  B4D8               	btfsc	status,2,c
  5378   00379E  EFD3  F01B         	goto	u5291
  5379   0037A2  EFD5  F01B         	goto	u5290
  5380   0037A6                     u5291:
  5381   0037A6  EFD8  F01B         	goto	l4760
  5382   0037AA                     u5290:
  5383   0037AA  90D8               	bcf	status,0,c
  5384   0037AC  EFD9  F01B         	goto	l548
  5385   0037B0                     l4760:
  5386   0037B0  80D8               	bsf	status,0,c
  5387   0037B2                     l548:
  5388   0037B2  0012               	return		;funcret
  5389   0037B4                     __end_of___fleq:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _dtoa *****************
  5393 ;; Defined at:
  5394 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5397 ;;		 -> sprintf@f(11), 
  5398 ;;  d               8   33[COMRAM] long long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  n               8   55[COMRAM] long long 
  5401 ;;  i               2   64[COMRAM] int 
  5402 ;;  w               2   53[COMRAM] int 
  5403 ;;  p               2   51[COMRAM] int 
  5404 ;;  s               1   63[COMRAM] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5414 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;Total ram usage:       35 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 6
  5421 ;; This function calls:
  5422 ;;		___aodiv
  5423 ;;		___aomod
  5424 ;;		_abs
  5425 ;;		_pad
  5426 ;; This function is called by:
  5427 ;;		_vfpfcnvrt
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text17
  5432   0027B0                     __ptext17:
  5433                           	callstack 0
  5434   0027B0                     _dtoa:
  5435                           	callstack 21
  5436   0027B0                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5438   0027B0  C022  F038         	movff	dtoa@d,dtoa@n
  5439   0027B4  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  5440   0027B8  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  5441   0027BC  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  5442   0027C0  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  5443   0027C4  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  5444   0027C8  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  5445   0027CC  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  5446   0027D0                     
  5447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5448   0027D0  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5449   0027D2  EFED  F013         	goto	u5661
  5450   0027D6  EFF0  F013         	goto	u5660
  5451   0027DA                     u5661:
  5452   0027DA  0E01               	movlw	1
  5453   0027DC  EFF1  F013         	goto	u5670
  5454   0027E0                     u5660:
  5455   0027E0  0E00               	movlw	0
  5456   0027E2                     u5670:
  5457   0027E2  6E40               	movwf	dtoa@s^0,c
  5458   0027E4                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5460   0027E4  5040               	movf	dtoa@s^0,w,c
  5461   0027E6  B4D8               	btfsc	status,2,c
  5462   0027E8  EFF8  F013         	goto	u5681
  5463   0027EC  EFFA  F013         	goto	u5680
  5464   0027F0                     u5681:
  5465   0027F0  EF0A  F014         	goto	l4934
  5466   0027F4                     u5680:
  5467   0027F4                     
  5468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5469   0027F4  1E3F               	comf	(dtoa@n+7)^0,f,c
  5470   0027F6  1E3E               	comf	(dtoa@n+6)^0,f,c
  5471   0027F8  1E3D               	comf	(dtoa@n+5)^0,f,c
  5472   0027FA  1E3C               	comf	(dtoa@n+4)^0,f,c
  5473   0027FC  1E3B               	comf	(dtoa@n+3)^0,f,c
  5474   0027FE  1E3A               	comf	(dtoa@n+2)^0,f,c
  5475   002800  1E39               	comf	(dtoa@n+1)^0,f,c
  5476   002802  6C38               	negf	dtoa@n^0,c
  5477   002804  0E00               	movlw	0
  5478   002806  2239               	addwfc	(dtoa@n+1)^0,f,c
  5479   002808  223A               	addwfc	(dtoa@n+2)^0,f,c
  5480   00280A  223B               	addwfc	(dtoa@n+3)^0,f,c
  5481   00280C  223C               	addwfc	(dtoa@n+4)^0,f,c
  5482   00280E  223D               	addwfc	(dtoa@n+5)^0,f,c
  5483   002810  223E               	addwfc	(dtoa@n+6)^0,f,c
  5484   002812  223F               	addwfc	(dtoa@n+7)^0,f,c
  5485   002814                     l4934:
  5486                           
  5487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5488   002814  0100               	movlb	0	; () banked
  5489   002816  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5490   002818  EF18  F014         	goto	u5690
  5491   00281C  51F2               	movf	(_prec+1)& (0+255),w,b
  5492   00281E  E106               	bnz	u5691
  5493   002820  05F1               	decf	_prec& (0+255),w,b
  5494   002822  B0D8               	btfsc	status,0,c
  5495   002824  EF16  F014         	goto	u5691
  5496   002828  EF18  F014         	goto	u5690
  5497   00282C                     u5691:
  5498   00282C  EF1E  F014         	goto	l1008
  5499   002830                     u5690:
  5500   002830                     
  5501                           ; BSR set to: 0
  5502   002830  0E00               	movlw	0
  5503   002832  6E35               	movwf	(dtoa@p+1)^0,c
  5504   002834  0E01               	movlw	1
  5505   002836  6E34               	movwf	dtoa@p^0,c
  5506   002838  EF22  F014         	goto	l1010
  5507   00283C                     l1008:
  5508                           
  5509                           ; BSR set to: 0
  5510   00283C  C0F1  F034         	movff	_prec,dtoa@p
  5511   002840  C0F2  F035         	movff	_prec+1,dtoa@p+1
  5512   002844                     l1010:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5516   002844  C0EF  F036         	movff	_width,dtoa@w
  5517   002848  C0F0  F037         	movff	_width+1,dtoa@w+1
  5518   00284C                     
  5519                           ; BSR set to: 0
  5520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5521   00284C  5040               	movf	dtoa@s^0,w,c
  5522   00284E  B4D8               	btfsc	status,2,c
  5523   002850  EF2C  F014         	goto	u5701
  5524   002854  EF2E  F014         	goto	u5700
  5525   002858                     u5701:
  5526   002858  EF45  F014         	goto	l1011
  5527   00285C                     u5700:
  5528   00285C                     
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5531   00285C  0636               	decf	dtoa@w^0,f,c
  5532   00285E  A0D8               	btfss	status,0,c
  5533   002860  0637               	decf	(dtoa@w+1)^0,f,c
  5534   002862                     
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5537   002862  5040               	movf	dtoa@s^0,w,c
  5538   002864  A4D8               	btfss	status,2,c
  5539   002866  EF37  F014         	goto	u5711
  5540   00286A  EF39  F014         	goto	u5710
  5541   00286E                     u5711:
  5542   00286E  EF3F  F014         	goto	l4946
  5543   002872                     u5710:
  5544   002872                     
  5545                           ; BSR set to: 0
  5546   002872  0E00               	movlw	0
  5547   002874  6E33               	movwf	(_dtoa$1372+1)^0,c
  5548   002876  0E2B               	movlw	43
  5549   002878  6E32               	movwf	_dtoa$1372^0,c
  5550   00287A  EF43  F014         	goto	l4948
  5551   00287E                     l4946:
  5552                           
  5553                           ; BSR set to: 0
  5554   00287E  0E00               	movlw	0
  5555   002880  6E33               	movwf	(_dtoa$1372+1)^0,c
  5556   002882  0E2D               	movlw	45
  5557   002884  6E32               	movwf	_dtoa$1372^0,c
  5558   002886                     l4948:
  5559                           
  5560                           ; BSR set to: 0
  5561   002886  C032  F040         	movff	_dtoa$1372,dtoa@s
  5562   00288A                     l1011:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5566   00288A  0E00               	movlw	0
  5567   00288C  6E42               	movwf	(dtoa@i+1)^0,c
  5568   00288E  0E4F               	movlw	79
  5569   002890  6E41               	movwf	dtoa@i^0,c
  5570   002892                     
  5571                           ; BSR set to: 0
  5572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5573   002892  0E00               	movlw	0
  5574   002894  0101               	movlb	1	; () banked
  5575   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5578   002898  EFCA  F014         	goto	l4962
  5579   00289C                     l4952:
  5580                           
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5582   00289C  0641               	decf	dtoa@i^0,f,c
  5583   00289E  A0D8               	btfss	status,0,c
  5584   0028A0  0642               	decf	(dtoa@i+1)^0,f,c
  5585   0028A2                     
  5586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5587   0028A2  0E50               	movlw	low _dbuf
  5588   0028A4  2441               	addwf	dtoa@i^0,w,c
  5589   0028A6  6ED9               	movwf	fsr2l,c
  5590   0028A8  0E01               	movlw	high _dbuf
  5591   0028AA  2042               	addwfc	(dtoa@i+1)^0,w,c
  5592   0028AC  6EDA               	movwf	fsr2h,c
  5593   0028AE  C038  F005         	movff	dtoa@n,___aomod@dividend
  5594   0028B2  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5595   0028B6  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5596   0028BA  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5597   0028BE  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5598   0028C2  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5599   0028C6  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5600   0028CA  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5601   0028CE  0E0A               	movlw	10
  5602   0028D0  6E0D               	movwf	___aomod@divisor^0,c
  5603   0028D2  0E00               	movlw	0
  5604   0028D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5605   0028D6  0E00               	movlw	0
  5606   0028D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5607   0028DA  0E00               	movlw	0
  5608   0028DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5609   0028DE  0E00               	movlw	0
  5610   0028E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5611   0028E2  0E00               	movlw	0
  5612   0028E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5613   0028E6  0E00               	movlw	0
  5614   0028E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5615   0028EA  0E00               	movlw	0
  5616   0028EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5617   0028EE  EC83  F018         	call	___aomod	;wreg free
  5618   0028F2  C005  F02A         	movff	?___aomod,??_dtoa
  5619   0028F6  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  5620   0028FA  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  5621   0028FE  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  5622   002902  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  5623   002906  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  5624   00290A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  5625   00290E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  5626   002912  C02A  F017         	movff	??_dtoa,abs@a
  5627   002916  C02B  F018         	movff	??_dtoa+1,abs@a+1
  5628   00291A  EC1C  F01E         	call	_abs	;wreg free
  5629   00291E  5017               	movf	?_abs^0,w,c
  5630   002920  0F30               	addlw	48
  5631   002922  6EDF               	movwf	indf2,c
  5632   002924                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5634   002924  0634               	decf	dtoa@p^0,f,c
  5635   002926  A0D8               	btfss	status,0,c
  5636   002928  0635               	decf	(dtoa@p+1)^0,f,c
  5637   00292A                     
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5639   00292A  0636               	decf	dtoa@w^0,f,c
  5640   00292C  A0D8               	btfss	status,0,c
  5641   00292E  0637               	decf	(dtoa@w+1)^0,f,c
  5642   002930                     
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5644   002930  C038  F005         	movff	dtoa@n,___aodiv@dividend
  5645   002934  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5646   002938  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5647   00293C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5648   002940  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5649   002944  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5650   002948  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5651   00294C  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5652   002950  0E0A               	movlw	10
  5653   002952  6E0D               	movwf	___aodiv@divisor^0,c
  5654   002954  0E00               	movlw	0
  5655   002956  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5656   002958  0E00               	movlw	0
  5657   00295A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5658   00295C  0E00               	movlw	0
  5659   00295E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5660   002960  0E00               	movlw	0
  5661   002962  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5662   002964  0E00               	movlw	0
  5663   002966  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5664   002968  0E00               	movlw	0
  5665   00296A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5666   00296C  0E00               	movlw	0
  5667   00296E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5668   002970  ECBF  F017         	call	___aodiv	;wreg free
  5669   002974  C005  F038         	movff	?___aodiv,dtoa@n
  5670   002978  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  5671   00297C  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  5672   002980  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  5673   002984  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  5674   002988  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  5675   00298C  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  5676   002990  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  5677   002994                     l4962:
  5678                           
  5679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5680   002994  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5681   002996  EFD5  F014         	goto	u5721
  5682   00299A  5042               	movf	(dtoa@i+1)^0,w,c
  5683   00299C  E108               	bnz	u5720
  5684   00299E  0441               	decf	dtoa@i^0,w,c
  5685   0029A0  A0D8               	btfss	status,0,c
  5686   0029A2  EFD5  F014         	goto	u5721
  5687   0029A6  EFD7  F014         	goto	u5720
  5688   0029AA                     u5721:
  5689   0029AA  EFF3  F014         	goto	l4968
  5690   0029AE                     u5720:
  5691   0029AE  5038               	movf	dtoa@n^0,w,c
  5692   0029B0  1039               	iorwf	(dtoa@n+1)^0,w,c
  5693   0029B2  103A               	iorwf	(dtoa@n+2)^0,w,c
  5694   0029B4  103B               	iorwf	(dtoa@n+3)^0,w,c
  5695   0029B6  103C               	iorwf	(dtoa@n+4)^0,w,c
  5696   0029B8  103D               	iorwf	(dtoa@n+5)^0,w,c
  5697   0029BA  103E               	iorwf	(dtoa@n+6)^0,w,c
  5698   0029BC  103F               	iorwf	(dtoa@n+7)^0,w,c
  5699   0029BE  A4D8               	btfss	status,2,c
  5700   0029C0  EFE4  F014         	goto	u5731
  5701   0029C4  EFE6  F014         	goto	u5730
  5702   0029C8                     u5731:
  5703   0029C8  EF4E  F014         	goto	l4952
  5704   0029CC                     u5730:
  5705   0029CC  BE35               	btfsc	(dtoa@p+1)^0,7,c
  5706   0029CE  EFF3  F014         	goto	u5740
  5707   0029D2  5035               	movf	(dtoa@p+1)^0,w,c
  5708   0029D4  E106               	bnz	u5741
  5709   0029D6  0434               	decf	dtoa@p^0,w,c
  5710   0029D8  B0D8               	btfsc	status,0,c
  5711   0029DA  EFF1  F014         	goto	u5741
  5712   0029DE  EFF3  F014         	goto	u5740
  5713   0029E2                     u5741:
  5714   0029E2  EF4E  F014         	goto	l4952
  5715   0029E6                     u5740:
  5716   0029E6                     l4968:
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5719   0029E6  5040               	movf	dtoa@s^0,w,c
  5720   0029E8  B4D8               	btfsc	status,2,c
  5721   0029EA  EFF9  F014         	goto	u5751
  5722   0029EE  EFFB  F014         	goto	u5750
  5723   0029F2                     u5751:
  5724   0029F2  EF06  F015         	goto	l4974
  5725   0029F6                     u5750:
  5726   0029F6                     
  5727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5728   0029F6  0641               	decf	dtoa@i^0,f,c
  5729   0029F8  A0D8               	btfss	status,0,c
  5730   0029FA  0642               	decf	(dtoa@i+1)^0,f,c
  5731   0029FC                     
  5732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5733   0029FC  0E50               	movlw	low _dbuf
  5734   0029FE  2441               	addwf	dtoa@i^0,w,c
  5735   002A00  6ED9               	movwf	fsr2l,c
  5736   002A02  0E01               	movlw	high _dbuf
  5737   002A04  2042               	addwfc	(dtoa@i+1)^0,w,c
  5738   002A06  6EDA               	movwf	fsr2h,c
  5739   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5740   002A0C                     l4974:
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5743   002A0C  C020  F015         	movff	dtoa@fp,pad@fp
  5744   002A10  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5745   002A14  0E50               	movlw	low _dbuf
  5746   002A16  2441               	addwf	dtoa@i^0,w,c
  5747   002A18  6E17               	movwf	pad@buf^0,c
  5748   002A1A  0E01               	movlw	high _dbuf
  5749   002A1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  5750   002A1E  6E18               	movwf	(pad@buf+1)^0,c
  5751   002A20  C036  F019         	movff	dtoa@w,pad@p
  5752   002A24  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5753   002A28  ECDA  F01B         	call	_pad	;wreg free
  5754   002A2C  0012               	return		;funcret
  5755   002A2E                     __end_of_dtoa:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _pad *****************
  5759 ;; Defined at:
  5760 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5763 ;;		 -> sprintf@f(11), 
  5764 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5765 ;;		 -> dbuf(80), 
  5766 ;;  p               2   24[COMRAM] int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  w               2   29[COMRAM] int 
  5769 ;;  i               2   27[COMRAM] int 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;Total ram usage:       11 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 5
  5786 ;; This function calls:
  5787 ;;		_fputc
  5788 ;;		_fputs
  5789 ;; This function is called by:
  5790 ;;		_dtoa
  5791 ;;		_efgtoa
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text18
  5796   0037B4                     __ptext18:
  5797                           	callstack 0
  5798   0037B4                     _pad:
  5799                           	callstack 21
  5800   0037B4                     
  5801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5802   0037B4  BE1A               	btfsc	(pad@p+1)^0,7,c
  5803   0037B6  EFDF  F01B         	goto	u5431
  5804   0037BA  EFE1  F01B         	goto	u5430
  5805   0037BE                     u5431:
  5806   0037BE  EFE7  F01B         	goto	l4842
  5807   0037C2                     u5430:
  5808   0037C2  C019  F01E         	movff	pad@p,pad@w
  5809   0037C6  C01A  F01F         	movff	pad@p+1,pad@w+1
  5810   0037CA  EFEB  F01B         	goto	l999
  5811   0037CE                     l4842:
  5812   0037CE  0E00               	movlw	0
  5813   0037D0  6E1F               	movwf	(pad@w+1)^0,c
  5814   0037D2  0E00               	movlw	0
  5815   0037D4  6E1E               	movwf	pad@w^0,c
  5816   0037D6                     l999:
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5819   0037D6  0E00               	movlw	0
  5820   0037D8  6E1D               	movwf	(pad@i+1)^0,c
  5821   0037DA  0E00               	movlw	0
  5822   0037DC  6E1C               	movwf	pad@i^0,c
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5825   0037DE  EFFD  F01B         	goto	l4848
  5826   0037E2                     l4844:
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5829   0037E2  0E00               	movlw	0
  5830   0037E4  6E06               	movwf	(fputc@c+1)^0,c
  5831   0037E6  0E20               	movlw	32
  5832   0037E8  6E05               	movwf	fputc@c^0,c
  5833   0037EA  C015  F007         	movff	pad@fp,fputc@fp
  5834   0037EE  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5835   0037F2  EC20  F01B         	call	_fputc	;wreg free
  5836   0037F6                     
  5837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5838   0037F6  4A1C               	infsnz	pad@i^0,f,c
  5839   0037F8  2A1D               	incf	(pad@i+1)^0,f,c
  5840   0037FA                     l4848:
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5843   0037FA  501E               	movf	pad@w^0,w,c
  5844   0037FC  5C1C               	subwf	pad@i^0,w,c
  5845   0037FE  501D               	movf	(pad@i+1)^0,w,c
  5846   003800  0A80               	xorlw	128
  5847   003802  6E1B               	movwf	??_pad^0,c
  5848   003804  501F               	movf	(pad@w+1)^0,w,c
  5849   003806  0A80               	xorlw	128
  5850   003808  581B               	subwfb	??_pad^0,w,c
  5851   00380A  A0D8               	btfss	status,0,c
  5852   00380C  EF0A  F01C         	goto	u5441
  5853   003810  EF0C  F01C         	goto	u5440
  5854   003814                     u5441:
  5855   003814  EFF1  F01B         	goto	l4844
  5856   003818                     u5440:
  5857   003818                     
  5858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5859   003818  C017  F00E         	movff	pad@buf,fputs@s
  5860   00381C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5861   003820  C015  F010         	movff	pad@fp,fputs@fp
  5862   003824  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5863   003828  ECD9  F01D         	call	_fputs	;wreg free
  5864   00382C  0012               	return		;funcret
  5865   00382E                     __end_of_pad:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _fputs *****************
  5869 ;; Defined at:
  5870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5873 ;;		 -> dbuf(80), 
  5874 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5875 ;;		 -> sprintf@f(11), 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  i               2   18[COMRAM] int 
  5878 ;;  c               1   17[COMRAM] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  2   13[COMRAM] int 
  5881 ;; Registers used:
  5882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:        7 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 4
  5895 ;; This function calls:
  5896 ;;		_fputc
  5897 ;; This function is called by:
  5898 ;;		_pad
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text19
  5903   003BB2                     __ptext19:
  5904                           	callstack 0
  5905   003BB2                     _fputs:
  5906                           	callstack 21
  5907   003BB2  0E00               	movlw	0
  5908   003BB4  6E14               	movwf	(fputs@i+1)^0,c
  5909   003BB6  0E00               	movlw	0
  5910   003BB8  6E13               	movwf	fputs@i^0,c
  5911   003BBA  EFEA  F01D         	goto	l4392
  5912   003BBE                     l4388:
  5913   003BBE  C012  F005         	movff	fputs@c,fputc@c
  5914   003BC2  6A06               	clrf	(fputc@c+1)^0,c
  5915   003BC4  C010  F007         	movff	fputs@fp,fputc@fp
  5916   003BC8  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5917   003BCC  EC20  F01B         	call	_fputc	;wreg free
  5918   003BD0  4A13               	infsnz	fputs@i^0,f,c
  5919   003BD2  2A14               	incf	(fputs@i+1)^0,f,c
  5920   003BD4                     l4392:
  5921   003BD4  5013               	movf	fputs@i^0,w,c
  5922   003BD6  240E               	addwf	fputs@s^0,w,c
  5923   003BD8  6ED9               	movwf	fsr2l,c
  5924   003BDA  5014               	movf	(fputs@i+1)^0,w,c
  5925   003BDC  200F               	addwfc	(fputs@s+1)^0,w,c
  5926   003BDE  6EDA               	movwf	fsr2h,c
  5927   003BE0  50DF               	movf	indf2,w,c
  5928   003BE2  6E12               	movwf	fputs@c^0,c
  5929   003BE4  5012               	movf	fputs@c^0,w,c
  5930   003BE6  A4D8               	btfss	status,2,c
  5931   003BE8  EFF8  F01D         	goto	u4711
  5932   003BEC  EFFA  F01D         	goto	u4710
  5933   003BF0                     u4711:
  5934   003BF0  EFDF  F01D         	goto	l4388
  5935   003BF4                     u4710:
  5936   003BF4  0012               	return		;funcret
  5937   003BF6                     __end_of_fputs:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _fputc *****************
  5941 ;; Defined at:
  5942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  c               2    4[COMRAM] int 
  5945 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5946 ;;		 -> sprintf@f(11), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2    4[COMRAM] int 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;Total ram usage:        9 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 3
  5965 ;; This function calls:
  5966 ;;		_putch
  5967 ;; This function is called by:
  5968 ;;		_pad
  5969 ;;		_vfpfcnvrt
  5970 ;;		_fputs
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text20
  5975   003640                     __ptext20:
  5976                           	callstack 0
  5977   003640                     _fputc:
  5978                           	callstack 24
  5979   003640  5007               	movf	fputc@fp^0,w,c
  5980   003642  1008               	iorwf	(fputc@fp+1)^0,w,c
  5981   003644  B4D8               	btfsc	status,2,c
  5982   003646  EF27  F01B         	goto	u4281
  5983   00364A  EF29  F01B         	goto	u4280
  5984   00364E                     u4281:
  5985   00364E  EF32  F01B         	goto	l4174
  5986   003652                     u4280:
  5987   003652  5007               	movf	fputc@fp^0,w,c
  5988   003654  1008               	iorwf	(fputc@fp+1)^0,w,c
  5989   003656  A4D8               	btfss	status,2,c
  5990   003658  EF30  F01B         	goto	u4291
  5991   00365C  EF32  F01B         	goto	u4290
  5992   003660                     u4291:
  5993   003660  EF37  F01B         	goto	l4176
  5994   003664                     u4290:
  5995   003664                     l4174:
  5996   003664  5005               	movf	fputc@c^0,w,c
  5997   003666  EC6E  F01F         	call	_putch
  5998   00366A  EF84  F01B         	goto	l1159
  5999   00366E                     l4176:
  6000   00366E  EE20 F009          	lfsr	2,9
  6001   003672  5007               	movf	fputc@fp^0,w,c
  6002   003674  26D9               	addwf	fsr2l,f,c
  6003   003676  5008               	movf	(fputc@fp+1)^0,w,c
  6004   003678  22DA               	addwfc	fsr2h,f,c
  6005   00367A  50DE               	movf	postinc2,w,c
  6006   00367C  10DE               	iorwf	postinc2,w,c
  6007   00367E  B4D8               	btfsc	status,2,c
  6008   003680  EF44  F01B         	goto	u4301
  6009   003684  EF46  F01B         	goto	u4300
  6010   003688                     u4301:
  6011   003688  EF61  F01B         	goto	l4180
  6012   00368C                     u4300:
  6013   00368C  EE20 F009          	lfsr	2,9
  6014   003690  5007               	movf	fputc@fp^0,w,c
  6015   003692  26D9               	addwf	fsr2l,f,c
  6016   003694  5008               	movf	(fputc@fp+1)^0,w,c
  6017   003696  22DA               	addwfc	fsr2h,f,c
  6018   003698  EE10 F003          	lfsr	1,3
  6019   00369C  5007               	movf	fputc@fp^0,w,c
  6020   00369E  26E1               	addwf	fsr1l,f,c
  6021   0036A0  5008               	movf	(fputc@fp+1)^0,w,c
  6022   0036A2  22E2               	addwfc	fsr1h,f,c
  6023   0036A4  50DE               	movf	postinc2,w,c
  6024   0036A6  5CE6               	subwf	postinc1,w,c
  6025   0036A8  50E6               	movf	postinc1,w,c
  6026   0036AA  0A80               	xorlw	128
  6027   0036AC  6E0D               	movwf	(??_fputc+4)^0,c
  6028   0036AE  50DE               	movf	postinc2,w,c
  6029   0036B0  0A80               	xorlw	128
  6030   0036B2  580D               	subwfb	(??_fputc+4)^0,w,c
  6031   0036B4  B0D8               	btfsc	status,0,c
  6032   0036B6  EF5F  F01B         	goto	u4311
  6033   0036BA  EF61  F01B         	goto	u4310
  6034   0036BE                     u4311:
  6035   0036BE  EF84  F01B         	goto	l1159
  6036   0036C2                     u4310:
  6037   0036C2                     l4180:
  6038   0036C2  EE20 F003          	lfsr	2,3
  6039   0036C6  5007               	movf	fputc@fp^0,w,c
  6040   0036C8  26D9               	addwf	fsr2l,f,c
  6041   0036CA  5008               	movf	(fputc@fp+1)^0,w,c
  6042   0036CC  22DA               	addwfc	fsr2h,f,c
  6043   0036CE  CFDE F009          	movff	postinc2,??_fputc
  6044   0036D2  CFDD F00A          	movff	postdec2,??_fputc+1
  6045   0036D6  C007  FFD9         	movff	fputc@fp,fsr2l
  6046   0036DA  C008  FFDA         	movff	fputc@fp+1,fsr2h
  6047   0036DE  CFDE F00B          	movff	postinc2,??_fputc+2
  6048   0036E2  CFDD F00C          	movff	postdec2,??_fputc+3
  6049   0036E6  5009               	movf	??_fputc^0,w,c
  6050   0036E8  240B               	addwf	(??_fputc+2)^0,w,c
  6051   0036EA  6ED9               	movwf	fsr2l,c
  6052   0036EC  500A               	movf	(??_fputc+1)^0,w,c
  6053   0036EE  200C               	addwfc	(??_fputc+3)^0,w,c
  6054   0036F0  6EDA               	movwf	fsr2h,c
  6055   0036F2  C005  FFDF         	movff	fputc@c,indf2
  6056   0036F6  EE20 F003          	lfsr	2,3
  6057   0036FA  5007               	movf	fputc@fp^0,w,c
  6058   0036FC  26D9               	addwf	fsr2l,f,c
  6059   0036FE  5008               	movf	(fputc@fp+1)^0,w,c
  6060   003700  22DA               	addwfc	fsr2h,f,c
  6061   003702  2ADE               	incf	postinc2,f,c
  6062   003704  0E00               	movlw	0
  6063   003706  22DD               	addwfc	postdec2,f,c
  6064   003708                     l1159:
  6065   003708  0012               	return		;funcret
  6066   00370A                     __end_of_fputc:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _putch *****************
  6070 ;; Defined at:
  6071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  c               1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  c               1    0[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 2
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_fputc
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text21
  6100   003EDC                     __ptext21:
  6101                           	callstack 0
  6102   003EDC                     _putch:
  6103                           	callstack 24
  6104   003EDC  0012               	return		;funcret
  6105   003EDE                     __end_of_putch:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _abs *****************
  6109 ;; Defined at:
  6110 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  a               2   22[COMRAM] int 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2   22[COMRAM] int 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        4 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 2
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_dtoa
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text22
  6139   003C38                     __ptext22:
  6140                           	callstack 0
  6141   003C38                     _abs:
  6142                           	callstack 24
  6143   003C38  BE18               	btfsc	(abs@a+1)^0,7,c
  6144   003C3A  EF29  F01E         	goto	u5450
  6145   003C3E  5018               	movf	(abs@a+1)^0,w,c
  6146   003C40  E106               	bnz	u5451
  6147   003C42  0417               	decf	abs@a^0,w,c
  6148   003C44  B0D8               	btfsc	status,0,c
  6149   003C46  EF27  F01E         	goto	u5451
  6150   003C4A  EF29  F01E         	goto	u5450
  6151   003C4E                     u5451:
  6152   003C4E  EF37  F01E         	goto	l1118
  6153   003C52                     u5450:
  6154   003C52  C017  F019         	movff	abs@a,??_abs
  6155   003C56  C018  F01A         	movff	abs@a+1,??_abs+1
  6156   003C5A  1E19               	comf	??_abs^0,f,c
  6157   003C5C  1E1A               	comf	(??_abs+1)^0,f,c
  6158   003C5E  4A19               	infsnz	??_abs^0,f,c
  6159   003C60  2A1A               	incf	(??_abs+1)^0,f,c
  6160   003C62  C019  F017         	movff	??_abs,?_abs
  6161   003C66  C01A  F018         	movff	??_abs+1,?_abs+1
  6162   003C6A  EF3B  F01E         	goto	l1121
  6163   003C6E                     l1118:
  6164   003C6E  C017  F017         	movff	abs@a,?_abs
  6165   003C72  C018  F018         	movff	abs@a+1,?_abs+1
  6166   003C76                     l1121:
  6167   003C76  0012               	return		;funcret
  6168   003C78                     __end_of_abs:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function ___aomod *****************
  6172 ;; Defined at:
  6173 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        8    4[COMRAM] long long 
  6176 ;;  divisor         8   12[COMRAM] long long 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  sign            1   21[COMRAM] unsigned char 
  6179 ;;  counter         1   20[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  8    4[COMRAM] long long 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6189 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6192 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6193 ;;Total ram usage:       18 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 2
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_dtoa
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text23
  6204   003106                     __ptext23:
  6205                           	callstack 0
  6206   003106                     ___aomod:
  6207                           	callstack 24
  6208   003106  0E00               	movlw	0
  6209   003108  6E16               	movwf	___aomod@sign^0,c
  6210   00310A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6211   00310C  EF8C  F018         	goto	u4790
  6212   003110  EF8A  F018         	goto	u4791
  6213   003114                     u4791:
  6214   003114  EF9E  F018         	goto	l4446
  6215   003118                     u4790:
  6216   003118  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6217   00311A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6218   00311C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6219   00311E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6220   003120  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6221   003122  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6222   003124  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6223   003126  6C05               	negf	___aomod@dividend^0,c
  6224   003128  0E00               	movlw	0
  6225   00312A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6226   00312C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6227   00312E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6228   003130  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6229   003132  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6230   003134  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6231   003136  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6232   003138  0E01               	movlw	1
  6233   00313A  6E16               	movwf	___aomod@sign^0,c
  6234   00313C                     l4446:
  6235   00313C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6236   00313E  EFA5  F018         	goto	u4800
  6237   003142  EFA3  F018         	goto	u4801
  6238   003146                     u4801:
  6239   003146  EFB5  F018         	goto	l4450
  6240   00314A                     u4800:
  6241   00314A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6242   00314C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6243   00314E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6244   003150  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6245   003152  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6246   003154  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6247   003156  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6248   003158  6C0D               	negf	___aomod@divisor^0,c
  6249   00315A  0E00               	movlw	0
  6250   00315C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6251   00315E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6252   003160  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6253   003162  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6254   003164  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6255   003166  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6256   003168  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6257   00316A                     l4450:
  6258   00316A  500D               	movf	___aomod@divisor^0,w,c
  6259   00316C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6260   00316E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6261   003170  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6262   003172  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6263   003174  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6264   003176  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6265   003178  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6266   00317A  B4D8               	btfsc	status,2,c
  6267   00317C  EFC2  F018         	goto	u4811
  6268   003180  EFC4  F018         	goto	u4810
  6269   003184                     u4811:
  6270   003184  EF0C  F019         	goto	l4466
  6271   003188                     u4810:
  6272   003188  0E01               	movlw	1
  6273   00318A  6E15               	movwf	___aomod@counter^0,c
  6274   00318C  EFD2  F018         	goto	l4456
  6275   003190                     l4454:
  6276   003190  90D8               	bcf	status,0,c
  6277   003192  360D               	rlcf	___aomod@divisor^0,f,c
  6278   003194  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6279   003196  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6280   003198  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6281   00319A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6282   00319C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6283   00319E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6284   0031A0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6285   0031A2  2A15               	incf	___aomod@counter^0,f,c
  6286   0031A4                     l4456:
  6287   0031A4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6288   0031A6  EFD7  F018         	goto	u4821
  6289   0031AA  EFD9  F018         	goto	u4820
  6290   0031AE                     u4821:
  6291   0031AE  EFC8  F018         	goto	l4454
  6292   0031B2                     u4820:
  6293   0031B2                     l4458:
  6294   0031B2  500D               	movf	___aomod@divisor^0,w,c
  6295   0031B4  5C05               	subwf	___aomod@dividend^0,w,c
  6296   0031B6  500E               	movf	(___aomod@divisor+1)^0,w,c
  6297   0031B8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6298   0031BA  500F               	movf	(___aomod@divisor+2)^0,w,c
  6299   0031BC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6300   0031BE  5010               	movf	(___aomod@divisor+3)^0,w,c
  6301   0031C0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6302   0031C2  5011               	movf	(___aomod@divisor+4)^0,w,c
  6303   0031C4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6304   0031C6  5012               	movf	(___aomod@divisor+5)^0,w,c
  6305   0031C8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6306   0031CA  5013               	movf	(___aomod@divisor+6)^0,w,c
  6307   0031CC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6308   0031CE  5014               	movf	(___aomod@divisor+7)^0,w,c
  6309   0031D0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6310   0031D2  A0D8               	btfss	status,0,c
  6311   0031D4  EFEE  F018         	goto	u4831
  6312   0031D8  EFF0  F018         	goto	u4830
  6313   0031DC                     u4831:
  6314   0031DC  EF00  F019         	goto	l4462
  6315   0031E0                     u4830:
  6316   0031E0  500D               	movf	___aomod@divisor^0,w,c
  6317   0031E2  5E05               	subwf	___aomod@dividend^0,f,c
  6318   0031E4  500E               	movf	(___aomod@divisor+1)^0,w,c
  6319   0031E6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6320   0031E8  500F               	movf	(___aomod@divisor+2)^0,w,c
  6321   0031EA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6322   0031EC  5010               	movf	(___aomod@divisor+3)^0,w,c
  6323   0031EE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6324   0031F0  5011               	movf	(___aomod@divisor+4)^0,w,c
  6325   0031F2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6326   0031F4  5012               	movf	(___aomod@divisor+5)^0,w,c
  6327   0031F6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6328   0031F8  5013               	movf	(___aomod@divisor+6)^0,w,c
  6329   0031FA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6330   0031FC  5014               	movf	(___aomod@divisor+7)^0,w,c
  6331   0031FE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6332   003200                     l4462:
  6333   003200  90D8               	bcf	status,0,c
  6334   003202  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6335   003204  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6336   003206  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6337   003208  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6338   00320A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6339   00320C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6340   00320E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6341   003210  320D               	rrcf	___aomod@divisor^0,f,c
  6342   003212  2E15               	decfsz	___aomod@counter^0,f,c
  6343   003214  EFD9  F018         	goto	l4458
  6344   003218                     l4466:
  6345   003218  5016               	movf	___aomod@sign^0,w,c
  6346   00321A  B4D8               	btfsc	status,2,c
  6347   00321C  EF12  F019         	goto	u4841
  6348   003220  EF14  F019         	goto	u4840
  6349   003224                     u4841:
  6350   003224  EF24  F019         	goto	l4470
  6351   003228                     u4840:
  6352   003228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6353   00322A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6354   00322C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6355   00322E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6356   003230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6357   003232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6358   003234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6359   003236  6C05               	negf	___aomod@dividend^0,c
  6360   003238  0E00               	movlw	0
  6361   00323A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6362   00323C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6363   00323E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6364   003240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6365   003242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6366   003244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6367   003246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6368   003248                     l4470:
  6369   003248  C005  F005         	movff	___aomod@dividend,?___aomod
  6370   00324C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6371   003250  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6372   003254  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6373   003258  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6374   00325C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6375   003260  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6376   003264  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6377   003268  0012               	return		;funcret
  6378   00326A                     __end_of___aomod:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function ___aodiv *****************
  6382 ;; Defined at:
  6383 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  dividend        8    4[COMRAM] long long 
  6386 ;;  divisor         8   12[COMRAM] long long 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  quotient        8   22[COMRAM] long long 
  6389 ;;  sign            1   21[COMRAM] unsigned char 
  6390 ;;  counter         1   20[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  8    4[COMRAM] long long 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6400 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;Total ram usage:       26 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 2
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_dtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text24
  6415   002F7E                     __ptext24:
  6416                           	callstack 0
  6417   002F7E                     ___aodiv:
  6418                           	callstack 24
  6419   002F7E  0E00               	movlw	0
  6420   002F80  6E16               	movwf	___aodiv@sign^0,c
  6421   002F82  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6422   002F84  EFC8  F017         	goto	u4720
  6423   002F88  EFC6  F017         	goto	u4721
  6424   002F8C                     u4721:
  6425   002F8C  EFDA  F017         	goto	l4402
  6426   002F90                     u4720:
  6427   002F90  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6428   002F92  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6429   002F94  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6430   002F96  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6431   002F98  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6432   002F9A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6433   002F9C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6434   002F9E  6C0D               	negf	___aodiv@divisor^0,c
  6435   002FA0  0E00               	movlw	0
  6436   002FA2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6437   002FA4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6438   002FA6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6439   002FA8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6440   002FAA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6441   002FAC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6442   002FAE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6443   002FB0  0E01               	movlw	1
  6444   002FB2  6E16               	movwf	___aodiv@sign^0,c
  6445   002FB4                     l4402:
  6446   002FB4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6447   002FB6  EFE1  F017         	goto	u4730
  6448   002FBA  EFDF  F017         	goto	u4731
  6449   002FBE                     u4731:
  6450   002FBE  EFF3  F017         	goto	l4408
  6451   002FC2                     u4730:
  6452   002FC2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6453   002FC4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6454   002FC6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6455   002FC8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6456   002FCA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6457   002FCC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6458   002FCE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6459   002FD0  6C05               	negf	___aodiv@dividend^0,c
  6460   002FD2  0E00               	movlw	0
  6461   002FD4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6462   002FD6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6463   002FD8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6464   002FDA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6465   002FDC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6466   002FDE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6467   002FE0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6468   002FE2  0E01               	movlw	1
  6469   002FE4  1A16               	xorwf	___aodiv@sign^0,f,c
  6470   002FE6                     l4408:
  6471   002FE6  EE20  F017         	lfsr	2,___aodiv@quotient
  6472   002FEA  0E07               	movlw	7
  6473   002FEC                     u4741:
  6474   002FEC  6ADE               	clrf	postinc2,c
  6475   002FEE  06E8               	decf	wreg,f,c
  6476   002FF0  E2FD               	bc	u4741
  6477   002FF2  500D               	movf	___aodiv@divisor^0,w,c
  6478   002FF4  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6479   002FF6  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6480   002FF8  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6481   002FFA  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6482   002FFC  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6483   002FFE  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6484   003000  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6485   003002  B4D8               	btfsc	status,2,c
  6486   003004  EF06  F018         	goto	u4751
  6487   003008  EF08  F018         	goto	u4750
  6488   00300C                     u4751:
  6489   00300C  EF5A  F018         	goto	l4430
  6490   003010                     u4750:
  6491   003010  0E01               	movlw	1
  6492   003012  6E15               	movwf	___aodiv@counter^0,c
  6493   003014  EF16  F018         	goto	l4416
  6494   003018                     l4414:
  6495   003018  90D8               	bcf	status,0,c
  6496   00301A  360D               	rlcf	___aodiv@divisor^0,f,c
  6497   00301C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6498   00301E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6499   003020  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6500   003022  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6501   003024  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6502   003026  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6503   003028  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6504   00302A  2A15               	incf	___aodiv@counter^0,f,c
  6505   00302C                     l4416:
  6506   00302C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6507   00302E  EF1B  F018         	goto	u4761
  6508   003032  EF1D  F018         	goto	u4760
  6509   003036                     u4761:
  6510   003036  EF0C  F018         	goto	l4414
  6511   00303A                     u4760:
  6512   00303A                     l4418:
  6513   00303A  90D8               	bcf	status,0,c
  6514   00303C  3617               	rlcf	___aodiv@quotient^0,f,c
  6515   00303E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6516   003040  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6517   003042  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6518   003044  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6519   003046  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6520   003048  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6521   00304A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6522   00304C  500D               	movf	___aodiv@divisor^0,w,c
  6523   00304E  5C05               	subwf	___aodiv@dividend^0,w,c
  6524   003050  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6525   003052  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6526   003054  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6527   003056  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6528   003058  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6529   00305A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6530   00305C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6531   00305E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6532   003060  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6533   003062  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6534   003064  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6535   003066  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6536   003068  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6537   00306A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6538   00306C  A0D8               	btfss	status,0,c
  6539   00306E  EF3B  F018         	goto	u4771
  6540   003072  EF3D  F018         	goto	u4770
  6541   003076                     u4771:
  6542   003076  EF4E  F018         	goto	l4426
  6543   00307A                     u4770:
  6544   00307A  500D               	movf	___aodiv@divisor^0,w,c
  6545   00307C  5E05               	subwf	___aodiv@dividend^0,f,c
  6546   00307E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6547   003080  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6548   003082  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6549   003084  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6550   003086  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6551   003088  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6552   00308A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6553   00308C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6554   00308E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6555   003090  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6556   003092  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6557   003094  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6558   003096  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6559   003098  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6560   00309A  8017               	bsf	___aodiv@quotient^0,0,c
  6561   00309C                     l4426:
  6562   00309C  90D8               	bcf	status,0,c
  6563   00309E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6564   0030A0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6565   0030A2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6566   0030A4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6567   0030A6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6568   0030A8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6569   0030AA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6570   0030AC  320D               	rrcf	___aodiv@divisor^0,f,c
  6571   0030AE  2E15               	decfsz	___aodiv@counter^0,f,c
  6572   0030B0  EF1D  F018         	goto	l4418
  6573   0030B4                     l4430:
  6574   0030B4  5016               	movf	___aodiv@sign^0,w,c
  6575   0030B6  B4D8               	btfsc	status,2,c
  6576   0030B8  EF60  F018         	goto	u4781
  6577   0030BC  EF62  F018         	goto	u4780
  6578   0030C0                     u4781:
  6579   0030C0  EF72  F018         	goto	l4434
  6580   0030C4                     u4780:
  6581   0030C4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6582   0030C6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6583   0030C8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6584   0030CA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6585   0030CC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6586   0030CE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6587   0030D0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6588   0030D2  6C17               	negf	___aodiv@quotient^0,c
  6589   0030D4  0E00               	movlw	0
  6590   0030D6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6591   0030D8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6592   0030DA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6593   0030DC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6594   0030DE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6595   0030E0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6596   0030E2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6597   0030E4                     l4434:
  6598   0030E4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6599   0030E8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6600   0030EC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6601   0030F0  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6602   0030F4  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6603   0030F8  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6604   0030FC  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6605   003100  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6606   003104  0012               	return		;funcret
  6607   003106                     __end_of___aodiv:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _sendTxBuf *****************
  6611 ;; Defined at:
  6612 ;;		line 93 in file "serial.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;Total ram usage:        0 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 3
  6633 ;; This function calls:
  6634 ;;		_isDataInTxBuf
  6635 ;; This function is called by:
  6636 ;;		_main
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text25
  6641   003D7E                     __ptext25:
  6642                           	callstack 0
  6643   003D7E                     _sendTxBuf:
  6644                           	callstack 27
  6645   003D7E                     
  6646                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6647   003D7E  EC46  F01F         	call	_isDataInTxBuf	;wreg free
  6648   003D82  0900               	iorlw	0
  6649   003D84  B4D8               	btfsc	status,2,c
  6650   003D86  EFC7  F01E         	goto	u4211
  6651   003D8A  EFC9  F01E         	goto	u4210
  6652   003D8E                     u4211:
  6653   003D8E  EFD0  F01E         	goto	l3980
  6654   003D92                     u4210:
  6655   003D92  010E               	movlb	14	; () banked
  6656   003D94  852D               	bsf	45,2,b	;volatile
  6657   003D96                     
  6658                           ; BSR set to: 14
  6659                           ;serial.c: 95:     DataFlag =1;}
  6660   003D96  0E01               	movlw	1
  6661   003D98  0100               	movlb	0	; () banked
  6662   003D9A  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6663   003D9C  EFD3  F01E         	goto	l184
  6664   003DA0                     l3980:
  6665                           
  6666                           ;serial.c: 97:         DataFlag=0;}
  6667   003DA0  0E00               	movlw	0
  6668   003DA2  0100               	movlb	0	; () banked
  6669   003DA4  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6670   003DA6                     l184:
  6671                           
  6672                           ; BSR set to: 0
  6673   003DA6  0012               	return		;funcret
  6674   003DA8                     __end_of_sendTxBuf:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _isDataInTxBuf *****************
  6678 ;; Defined at:
  6679 ;;		line 80 in file "serial.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;		None
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;		None
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      unsigned char 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;Total ram usage:        0 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; Hardware stack levels required when called: 2
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_sendTxBuf
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text26
  6708   003E8C                     __ptext26:
  6709                           	callstack 0
  6710   003E8C                     _isDataInTxBuf:
  6711                           	callstack 27
  6712   003E8C                     
  6713                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6714   003E8C  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  6715   003E8E  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6716   003E90  A4D8               	btfss	status,2,c
  6717   003E92  EF4D  F01F         	goto	u4051
  6718   003E96  EF50  F01F         	goto	u4050
  6719   003E9A                     u4051:
  6720   003E9A  0E01               	movlw	1
  6721   003E9C  EF51  F01F         	goto	u4060
  6722   003EA0                     u4050:
  6723   003EA0  0E00               	movlw	0
  6724   003EA2                     u4060:
  6725   003EA2  0012               	return		;funcret
  6726   003EA4                     __end_of_isDataInTxBuf:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _readColours *****************
  6730 ;; Defined at:
  6731 ;;		line 87 in file "color.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  vals            2   15[COMRAM] PTR struct RGB
  6734 ;;		 -> vals(8), 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;Total ram usage:        2 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 5
  6753 ;; This function calls:
  6754 ;;		_color_read_Blue
  6755 ;;		_color_read_Green
  6756 ;;		_color_read_Red
  6757 ;;		_color_read_lum
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text27
  6764   003894                     __ptext27:
  6765                           	callstack 0
  6766   003894                     _readColours:
  6767                           	callstack 25
  6768   003894                     
  6769                           ;color.c: 88:     vals ->R = color_read_Red();
  6770   003894  EC1C  F01D         	call	_color_read_Red	;wreg free
  6771   003898  C010  FFD9         	movff	readColours@vals,fsr2l
  6772   00389C  C011  FFDA         	movff	readColours@vals+1,fsr2h
  6773   0038A0  C009  FFDE         	movff	?_color_read_Red,postinc2
  6774   0038A4  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  6775                           
  6776                           ;color.c: 89:     vals ->B = color_read_Blue();
  6777   0038A8  EC6C  F01D         	call	_color_read_Blue	;wreg free
  6778   0038AC  EE20 F004          	lfsr	2,4
  6779   0038B0  5010               	movf	readColours@vals^0,w,c
  6780   0038B2  26D9               	addwf	fsr2l,f,c
  6781   0038B4  5011               	movf	(readColours@vals+1)^0,w,c
  6782   0038B6  22DA               	addwfc	fsr2h,f,c
  6783   0038B8  C009  FFDE         	movff	?_color_read_Blue,postinc2
  6784   0038BC  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  6785                           
  6786                           ;color.c: 90:     vals ->G = color_read_Green();
  6787   0038C0  EC44  F01D         	call	_color_read_Green	;wreg free
  6788   0038C4  EE20 F002          	lfsr	2,2
  6789   0038C8  5010               	movf	readColours@vals^0,w,c
  6790   0038CA  26D9               	addwf	fsr2l,f,c
  6791   0038CC  5011               	movf	(readColours@vals+1)^0,w,c
  6792   0038CE  22DA               	addwfc	fsr2h,f,c
  6793   0038D0  C009  FFDE         	movff	?_color_read_Green,postinc2
  6794   0038D4  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  6795                           
  6796                           ;color.c: 91:     vals ->L = color_read_lum();
  6797   0038D8  ECF4  F01C         	call	_color_read_lum	;wreg free
  6798   0038DC  EE20 F006          	lfsr	2,6
  6799   0038E0  5010               	movf	readColours@vals^0,w,c
  6800   0038E2  26D9               	addwf	fsr2l,f,c
  6801   0038E4  5011               	movf	(readColours@vals+1)^0,w,c
  6802   0038E6  22DA               	addwfc	fsr2h,f,c
  6803   0038E8  C009  FFDE         	movff	?_color_read_lum,postinc2
  6804   0038EC  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  6805   0038F0  0012               	return		;funcret
  6806   0038F2                     __end_of_readColours:
  6807                           	callstack 0
  6808                           
  6809 ;; *************** function _color_read_lum *****************
  6810 ;; Defined at:
  6811 ;;		line 31 in file "color.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  tmp             2   13[COMRAM] unsigned int 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2    8[COMRAM] unsigned int 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;Total ram usage:        7 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 4
  6832 ;; This function calls:
  6833 ;;		_I2C_2_Master_Read
  6834 ;;		_I2C_2_Master_RepStart
  6835 ;;		_I2C_2_Master_Start
  6836 ;;		_I2C_2_Master_Stop
  6837 ;;		_I2C_2_Master_Write
  6838 ;; This function is called by:
  6839 ;;		_readColours
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text28
  6844   0039E8                     __ptext28:
  6845                           	callstack 0
  6846   0039E8                     _color_read_lum:
  6847                           	callstack 25
  6848   0039E8                     
  6849                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  6850   0039E8  EC69  F01F         	call	_I2C_2_Master_Start	;wreg free
  6851                           
  6852                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  6853   0039EC  0E52               	movlw	82
  6854   0039EE  EC59  F01F         	call	_I2C_2_Master_Write
  6855                           
  6856                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  6857   0039F2  0EB4               	movlw	180
  6858   0039F4  EC59  F01F         	call	_I2C_2_Master_Write
  6859                           
  6860                           ;color.c: 37:  I2C_2_Master_RepStart();
  6861   0039F8  EC5F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6862                           
  6863                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  6864   0039FC  0E53               	movlw	83
  6865   0039FE  EC59  F01F         	call	_I2C_2_Master_Write
  6866                           
  6867                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  6868   003A02  0E01               	movlw	1
  6869   003A04  ECFB  F01D         	call	_I2C_2_Master_Read
  6870   003A08  6E0B               	movwf	??_color_read_lum^0,c
  6871   003A0A  500B               	movf	??_color_read_lum^0,w,c
  6872   003A0C  6E0E               	movwf	color_read_lum@tmp^0,c
  6873   003A0E  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  6874                           
  6875                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6876   003A10  0E00               	movlw	0
  6877   003A12  ECFB  F01D         	call	_I2C_2_Master_Read
  6878   003A16  6E0B               	movwf	??_color_read_lum^0,c
  6879   003A18  500B               	movf	??_color_read_lum^0,w,c
  6880   003A1A  6E0D               	movwf	(??_color_read_lum+2)^0,c
  6881   003A1C  6A0C               	clrf	(??_color_read_lum+1)^0,c
  6882   003A1E  500E               	movf	color_read_lum@tmp^0,w,c
  6883   003A20  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  6884   003A22  6E0E               	movwf	color_read_lum@tmp^0,c
  6885   003A24  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  6886   003A26  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  6887   003A28  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  6888                           
  6889                           ;color.c: 41:  I2C_2_Master_Stop();
  6890   003A2A  EC64  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6891   003A2E                     
  6892                           ;color.c: 42:  return tmp;
  6893   003A2E  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  6894   003A32  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6895   003A36  0012               	return		;funcret
  6896   003A38                     __end_of_color_read_lum:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _color_read_Red *****************
  6900 ;; Defined at:
  6901 ;;		line 45 in file "color.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  tmp             2   13[COMRAM] unsigned int 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    8[COMRAM] unsigned int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;Total ram usage:        7 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 4
  6922 ;; This function calls:
  6923 ;;		_I2C_2_Master_Read
  6924 ;;		_I2C_2_Master_RepStart
  6925 ;;		_I2C_2_Master_Start
  6926 ;;		_I2C_2_Master_Stop
  6927 ;;		_I2C_2_Master_Write
  6928 ;; This function is called by:
  6929 ;;		_readColours
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text29
  6934   003A38                     __ptext29:
  6935                           	callstack 0
  6936   003A38                     _color_read_Red:
  6937                           	callstack 25
  6938   003A38                     
  6939                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  6940   003A38  EC69  F01F         	call	_I2C_2_Master_Start	;wreg free
  6941                           
  6942                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  6943   003A3C  0E52               	movlw	82
  6944   003A3E  EC59  F01F         	call	_I2C_2_Master_Write
  6945                           
  6946                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  6947   003A42  0EB6               	movlw	182
  6948   003A44  EC59  F01F         	call	_I2C_2_Master_Write
  6949                           
  6950                           ;color.c: 51:  I2C_2_Master_RepStart();
  6951   003A48  EC5F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6952                           
  6953                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  6954   003A4C  0E53               	movlw	83
  6955   003A4E  EC59  F01F         	call	_I2C_2_Master_Write
  6956                           
  6957                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  6958   003A52  0E01               	movlw	1
  6959   003A54  ECFB  F01D         	call	_I2C_2_Master_Read
  6960   003A58  6E0B               	movwf	??_color_read_Red^0,c
  6961   003A5A  500B               	movf	??_color_read_Red^0,w,c
  6962   003A5C  6E0E               	movwf	color_read_Red@tmp^0,c
  6963   003A5E  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  6964                           
  6965                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6966   003A60  0E00               	movlw	0
  6967   003A62  ECFB  F01D         	call	_I2C_2_Master_Read
  6968   003A66  6E0B               	movwf	??_color_read_Red^0,c
  6969   003A68  500B               	movf	??_color_read_Red^0,w,c
  6970   003A6A  6E0D               	movwf	(??_color_read_Red+2)^0,c
  6971   003A6C  6A0C               	clrf	(??_color_read_Red+1)^0,c
  6972   003A6E  500E               	movf	color_read_Red@tmp^0,w,c
  6973   003A70  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  6974   003A72  6E0E               	movwf	color_read_Red@tmp^0,c
  6975   003A74  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  6976   003A76  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  6977   003A78  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  6978                           
  6979                           ;color.c: 55:  I2C_2_Master_Stop();
  6980   003A7A  EC64  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6981   003A7E                     
  6982                           ;color.c: 56:  return tmp;
  6983   003A7E  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  6984   003A82  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6985   003A86  0012               	return		;funcret
  6986   003A88                     __end_of_color_read_Red:
  6987                           	callstack 0
  6988                           
  6989 ;; *************** function _color_read_Green *****************
  6990 ;; Defined at:
  6991 ;;		line 58 in file "color.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  tmp             2   13[COMRAM] unsigned int 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  2    8[COMRAM] unsigned int 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;Total ram usage:        7 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 4
  7012 ;; This function calls:
  7013 ;;		_I2C_2_Master_Read
  7014 ;;		_I2C_2_Master_RepStart
  7015 ;;		_I2C_2_Master_Start
  7016 ;;		_I2C_2_Master_Stop
  7017 ;;		_I2C_2_Master_Write
  7018 ;; This function is called by:
  7019 ;;		_readColours
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text30
  7024   003A88                     __ptext30:
  7025                           	callstack 0
  7026   003A88                     _color_read_Green:
  7027                           	callstack 25
  7028   003A88                     
  7029                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7030   003A88  EC69  F01F         	call	_I2C_2_Master_Start	;wreg free
  7031                           
  7032                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7033   003A8C  0E52               	movlw	82
  7034   003A8E  EC59  F01F         	call	_I2C_2_Master_Write
  7035                           
  7036                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x16);
  7037   003A92  0EB6               	movlw	182
  7038   003A94  EC59  F01F         	call	_I2C_2_Master_Write
  7039                           
  7040                           ;color.c: 64:  I2C_2_Master_RepStart();
  7041   003A98  EC5F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7042                           
  7043                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7044   003A9C  0E53               	movlw	83
  7045   003A9E  EC59  F01F         	call	_I2C_2_Master_Write
  7046                           
  7047                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7048   003AA2  0E01               	movlw	1
  7049   003AA4  ECFB  F01D         	call	_I2C_2_Master_Read
  7050   003AA8  6E0B               	movwf	??_color_read_Green^0,c
  7051   003AAA  500B               	movf	??_color_read_Green^0,w,c
  7052   003AAC  6E0E               	movwf	color_read_Green@tmp^0,c
  7053   003AAE  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7054                           
  7055                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7056   003AB0  0E00               	movlw	0
  7057   003AB2  ECFB  F01D         	call	_I2C_2_Master_Read
  7058   003AB6  6E0B               	movwf	??_color_read_Green^0,c
  7059   003AB8  500B               	movf	??_color_read_Green^0,w,c
  7060   003ABA  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7061   003ABC  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7062   003ABE  500E               	movf	color_read_Green@tmp^0,w,c
  7063   003AC0  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7064   003AC2  6E0E               	movwf	color_read_Green@tmp^0,c
  7065   003AC4  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7066   003AC6  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7067   003AC8  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7068                           
  7069                           ;color.c: 68:  I2C_2_Master_Stop();
  7070   003ACA  EC64  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7071   003ACE                     
  7072                           ;color.c: 69:  return tmp;
  7073   003ACE  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7074   003AD2  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7075   003AD6  0012               	return		;funcret
  7076   003AD8                     __end_of_color_read_Green:
  7077                           	callstack 0
  7078                           
  7079 ;; *************** function _color_read_Blue *****************
  7080 ;; Defined at:
  7081 ;;		line 72 in file "color.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  tmp             2   13[COMRAM] unsigned int 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  2    8[COMRAM] unsigned int 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7099 ;;Total ram usage:        7 bytes
  7100 ;; Hardware stack levels used: 1
  7101 ;; Hardware stack levels required when called: 4
  7102 ;; This function calls:
  7103 ;;		_I2C_2_Master_Read
  7104 ;;		_I2C_2_Master_RepStart
  7105 ;;		_I2C_2_Master_Start
  7106 ;;		_I2C_2_Master_Stop
  7107 ;;		_I2C_2_Master_Write
  7108 ;; This function is called by:
  7109 ;;		_readColours
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text31
  7114   003AD8                     __ptext31:
  7115                           	callstack 0
  7116   003AD8                     _color_read_Blue:
  7117                           	callstack 25
  7118   003AD8                     
  7119                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  7120   003AD8  EC69  F01F         	call	_I2C_2_Master_Start	;wreg free
  7121                           
  7122                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  7123   003ADC  0E52               	movlw	82
  7124   003ADE  EC59  F01F         	call	_I2C_2_Master_Write
  7125                           
  7126                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  7127   003AE2  0EBA               	movlw	186
  7128   003AE4  EC59  F01F         	call	_I2C_2_Master_Write
  7129                           
  7130                           ;color.c: 78:  I2C_2_Master_RepStart();
  7131   003AE8  EC5F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7132                           
  7133                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  7134   003AEC  0E53               	movlw	83
  7135   003AEE  EC59  F01F         	call	_I2C_2_Master_Write
  7136                           
  7137                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  7138   003AF2  0E01               	movlw	1
  7139   003AF4  ECFB  F01D         	call	_I2C_2_Master_Read
  7140   003AF8  6E0B               	movwf	??_color_read_Blue^0,c
  7141   003AFA  500B               	movf	??_color_read_Blue^0,w,c
  7142   003AFC  6E0E               	movwf	color_read_Blue@tmp^0,c
  7143   003AFE  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7144                           
  7145                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7146   003B00  0E00               	movlw	0
  7147   003B02  ECFB  F01D         	call	_I2C_2_Master_Read
  7148   003B06  6E0B               	movwf	??_color_read_Blue^0,c
  7149   003B08  500B               	movf	??_color_read_Blue^0,w,c
  7150   003B0A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7151   003B0C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7152   003B0E  500E               	movf	color_read_Blue@tmp^0,w,c
  7153   003B10  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7154   003B12  6E0E               	movwf	color_read_Blue@tmp^0,c
  7155   003B14  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7156   003B16  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7157   003B18  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7158                           
  7159                           ;color.c: 82:  I2C_2_Master_Stop();
  7160   003B1A  EC64  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7161   003B1E                     
  7162                           ;color.c: 83:  return tmp;
  7163   003B1E  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7164   003B22  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7165   003B26  0012               	return		;funcret
  7166   003B28                     __end_of_color_read_Blue:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _I2C_2_Master_RepStart *****************
  7170 ;; Defined at:
  7171 ;;		line 33 in file "i2c.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 3
  7192 ;; This function calls:
  7193 ;;		_I2C_2_Master_Idle
  7194 ;; This function is called by:
  7195 ;;		_color_read_lum
  7196 ;;		_color_read_Red
  7197 ;;		_color_read_Green
  7198 ;;		_color_read_Blue
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text32
  7203   003EBE                     __ptext32:
  7204                           	callstack 0
  7205   003EBE                     _I2C_2_Master_RepStart:
  7206                           	callstack 25
  7207   003EBE                     
  7208                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7209   003EBE  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7210   003EC2                     
  7211                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7212   003EC2  010E               	movlb	14	; () banked
  7213   003EC4  83DA               	bsf	218,1,b	;volatile
  7214   003EC6                     
  7215                           ; BSR set to: 14
  7216   003EC6  0012               	return		;funcret
  7217   003EC8                     __end_of_I2C_2_Master_RepStart:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _I2C_2_Master_Read *****************
  7221 ;; Defined at:
  7222 ;;		line 51 in file "i2c.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  ack             1    wreg     unsigned char 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  ack             1    6[COMRAM] unsigned char 
  7227 ;;  tmp             1    7[COMRAM] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      unsigned char 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;Total ram usage:        3 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 3
  7244 ;; This function calls:
  7245 ;;		_I2C_2_Master_Idle
  7246 ;; This function is called by:
  7247 ;;		_color_read_lum
  7248 ;;		_color_read_Red
  7249 ;;		_color_read_Green
  7250 ;;		_color_read_Blue
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text33
  7255   003BF6                     __ptext33:
  7256                           	callstack 0
  7257   003BF6                     _I2C_2_Master_Read:
  7258                           	callstack 25
  7259                           
  7260                           ; BSR set to: 14
  7261                           ;incstack = 0
  7262                           ;I2C_2_Master_Read@ack stored from wreg
  7263   003BF6  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7264   003BF8                     
  7265                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7266   003BF8  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7267   003BFC                     
  7268                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7269   003BFC  010E               	movlb	14	; () banked
  7270   003BFE  87DA               	bsf	218,3,b	;volatile
  7271                           
  7272                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7273   003C00  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7274   003C04                     
  7275                           ;i2c.c: 57:   tmp = SSP2BUF;
  7276   003C04  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7277                           
  7278                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7279   003C08  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7280   003C0C                     
  7281                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7282   003C0C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7283   003C0E  B4D8               	btfsc	status,2,c
  7284   003C10  EF0C  F01E         	goto	u3981
  7285   003C14  EF10  F01E         	goto	u3980
  7286   003C18                     u3981:
  7287   003C18  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7288   003C1A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7289   003C1C  EF11  F01E         	goto	u3998
  7290   003C20                     u3980:
  7291   003C20  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7292   003C22                     u3998:
  7293   003C22  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7294   003C24  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7295   003C26  010E               	movlb	14	; () banked
  7296   003C28  51DA               	movf	218,w,b	;volatile
  7297   003C2A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7298   003C2C  0BDF               	andlw	-33
  7299   003C2E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7300   003C30  6FDA               	movwf	218,b	;volatile
  7301   003C32                     
  7302                           ; BSR set to: 14
  7303                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7304   003C32  89DA               	bsf	218,4,b	;volatile
  7305   003C34                     
  7306                           ; BSR set to: 14
  7307                           ;i2c.c: 61:   return tmp;
  7308   003C34  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7309   003C36                     
  7310                           ; BSR set to: 14
  7311   003C36  0012               	return		;funcret
  7312   003C38                     __end_of_I2C_2_Master_Read:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _initUSART4 *****************
  7316 ;; Defined at:
  7317 ;;		line 4 in file "serial.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; Hardware stack levels required when called: 2
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text34
  7346   003E6E                     __ptext34:
  7347                           	callstack 0
  7348   003E6E                     _initUSART4:
  7349                           	callstack 28
  7350   003E6E                     
  7351                           ;serial.c: 5:     RC0PPS = 0x12;
  7352   003E6E  0E12               	movlw	18
  7353   003E70  010E               	movlb	14	; () banked
  7354   003E72  6F62               	movwf	98,b	;volatile
  7355                           
  7356                           ;serial.c: 6:     RX4PPS = 0x11;
  7357   003E74  0E11               	movlw	17
  7358   003E76  6F15               	movwf	21,b	;volatile
  7359   003E78                     
  7360                           ; BSR set to: 14
  7361                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7362   003E78  97E9               	bcf	233,3,b	;volatile
  7363   003E7A                     
  7364                           ; BSR set to: 14
  7365                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7366   003E7A  95E8               	bcf	232,2,b	;volatile
  7367                           
  7368                           ;serial.c: 9:     SP4BRGL = 51;
  7369   003E7C  0E33               	movlw	51
  7370   003E7E  6FE5               	movwf	229,b	;volatile
  7371                           
  7372                           ;serial.c: 10:     SP4BRGH = 0;
  7373   003E80  0E00               	movlw	0
  7374   003E82  6FE6               	movwf	230,b	;volatile
  7375   003E84                     
  7376                           ; BSR set to: 14
  7377                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7378   003E84  89E7               	bsf	231,4,b	;volatile
  7379   003E86                     
  7380                           ; BSR set to: 14
  7381                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7382   003E86  8BE8               	bsf	232,5,b	;volatile
  7383   003E88                     
  7384                           ; BSR set to: 14
  7385                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7386   003E88  8FE7               	bsf	231,7,b	;volatile
  7387   003E8A                     
  7388                           ; BSR set to: 14
  7389   003E8A  0012               	return		;funcret
  7390   003E8C                     __end_of_initUSART4:
  7391                           	callstack 0
  7392                           
  7393 ;; *************** function _colour_rel *****************
  7394 ;; Defined at:
  7395 ;;		line 95 in file "color.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  vals            2   29[COMRAM] PTR struct RGB
  7398 ;;		 -> vals(8), 
  7399 ;;  rel             2   31[COMRAM] PTR struct RGB_rel
  7400 ;;		 -> rel(16), 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  L               4   45[COMRAM] float 
  7403 ;;  B               4   41[COMRAM] float 
  7404 ;;  G               4   37[COMRAM] float 
  7405 ;;  R               4   33[COMRAM] float 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;Total ram usage:       20 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 3
  7422 ;; This function calls:
  7423 ;;		___fldiv
  7424 ;;		___xxtofl
  7425 ;; This function is called by:
  7426 ;;		_main
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text35
  7431   002DF4                     __ptext35:
  7432                           	callstack 0
  7433   002DF4                     _colour_rel:
  7434                           	callstack 27
  7435   002DF4                     
  7436                           ;color.c: 96:     float R = vals->R;
  7437   002DF4  C01E  FFD9         	movff	colour_rel@vals,fsr2l
  7438   002DF8  C01F  FFDA         	movff	colour_rel@vals+1,fsr2h
  7439   002DFC  CFDE F005          	movff	postinc2,___xxtofl@val
  7440   002E00  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7441   002E04  0E00               	movlw	0
  7442   002E06  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7443   002E08  0EFF               	movlw	-1
  7444   002E0A  6E07               	movwf	(___xxtofl@val+2)^0,c
  7445   002E0C  6E08               	movwf	(___xxtofl@val+3)^0,c
  7446   002E0E  0E01               	movlw	1
  7447   002E10  EC20  F016         	call	___xxtofl
  7448   002E14  C005  F022         	movff	?___xxtofl,colour_rel@R
  7449   002E18  C006  F023         	movff	?___xxtofl+1,colour_rel@R+1
  7450   002E1C  C007  F024         	movff	?___xxtofl+2,colour_rel@R+2
  7451   002E20  C008  F025         	movff	?___xxtofl+3,colour_rel@R+3
  7452                           
  7453                           ;color.c: 97:     float G = vals->G;
  7454   002E24  EE20 F002          	lfsr	2,2
  7455   002E28  501E               	movf	colour_rel@vals^0,w,c
  7456   002E2A  26D9               	addwf	fsr2l,f,c
  7457   002E2C  501F               	movf	(colour_rel@vals+1)^0,w,c
  7458   002E2E  22DA               	addwfc	fsr2h,f,c
  7459   002E30  CFDE F005          	movff	postinc2,___xxtofl@val
  7460   002E34  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7461   002E38  0E00               	movlw	0
  7462   002E3A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7463   002E3C  0EFF               	movlw	-1
  7464   002E3E  6E07               	movwf	(___xxtofl@val+2)^0,c
  7465   002E40  6E08               	movwf	(___xxtofl@val+3)^0,c
  7466   002E42  0E01               	movlw	1
  7467   002E44  EC20  F016         	call	___xxtofl
  7468   002E48  C005  F026         	movff	?___xxtofl,colour_rel@G
  7469   002E4C  C006  F027         	movff	?___xxtofl+1,colour_rel@G+1
  7470   002E50  C007  F028         	movff	?___xxtofl+2,colour_rel@G+2
  7471   002E54  C008  F029         	movff	?___xxtofl+3,colour_rel@G+3
  7472                           
  7473                           ;color.c: 98:     float B = vals->B;
  7474   002E58  EE20 F004          	lfsr	2,4
  7475   002E5C  501E               	movf	colour_rel@vals^0,w,c
  7476   002E5E  26D9               	addwf	fsr2l,f,c
  7477   002E60  501F               	movf	(colour_rel@vals+1)^0,w,c
  7478   002E62  22DA               	addwfc	fsr2h,f,c
  7479   002E64  CFDE F005          	movff	postinc2,___xxtofl@val
  7480   002E68  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7481   002E6C  0E00               	movlw	0
  7482   002E6E  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7483   002E70  0EFF               	movlw	-1
  7484   002E72  6E07               	movwf	(___xxtofl@val+2)^0,c
  7485   002E74  6E08               	movwf	(___xxtofl@val+3)^0,c
  7486   002E76  0E01               	movlw	1
  7487   002E78  EC20  F016         	call	___xxtofl
  7488   002E7C  C005  F02A         	movff	?___xxtofl,colour_rel@B
  7489   002E80  C006  F02B         	movff	?___xxtofl+1,colour_rel@B+1
  7490   002E84  C007  F02C         	movff	?___xxtofl+2,colour_rel@B+2
  7491   002E88  C008  F02D         	movff	?___xxtofl+3,colour_rel@B+3
  7492                           
  7493                           ;color.c: 99:     float L = vals->L;
  7494   002E8C  EE20 F006          	lfsr	2,6
  7495   002E90  501E               	movf	colour_rel@vals^0,w,c
  7496   002E92  26D9               	addwf	fsr2l,f,c
  7497   002E94  501F               	movf	(colour_rel@vals+1)^0,w,c
  7498   002E96  22DA               	addwfc	fsr2h,f,c
  7499   002E98  CFDE F005          	movff	postinc2,___xxtofl@val
  7500   002E9C  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7501   002EA0  0E00               	movlw	0
  7502   002EA2  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7503   002EA4  0EFF               	movlw	-1
  7504   002EA6  6E07               	movwf	(___xxtofl@val+2)^0,c
  7505   002EA8  6E08               	movwf	(___xxtofl@val+3)^0,c
  7506   002EAA  0E01               	movlw	1
  7507   002EAC  EC20  F016         	call	___xxtofl
  7508   002EB0  C005  F02E         	movff	?___xxtofl,colour_rel@L
  7509   002EB4  C006  F02F         	movff	?___xxtofl+1,colour_rel@L+1
  7510   002EB8  C007  F030         	movff	?___xxtofl+2,colour_rel@L+2
  7511   002EBC  C008  F031         	movff	?___xxtofl+3,colour_rel@L+3
  7512                           
  7513                           ;color.c: 100:     rel -> R = R/L;
  7514   002EC0  C022  F005         	movff	colour_rel@R,___fldiv@b
  7515   002EC4  C023  F006         	movff	colour_rel@R+1,___fldiv@b+1
  7516   002EC8  C024  F007         	movff	colour_rel@R+2,___fldiv@b+2
  7517   002ECC  C025  F008         	movff	colour_rel@R+3,___fldiv@b+3
  7518   002ED0  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7519   002ED4  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7520   002ED8  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7521   002EDC  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7522   002EE0  EC88  F010         	call	___fldiv	;wreg free
  7523   002EE4  C020  FFD9         	movff	colour_rel@rel,fsr2l
  7524   002EE8  C021  FFDA         	movff	colour_rel@rel+1,fsr2h
  7525   002EEC  C005  FFDE         	movff	?___fldiv,postinc2
  7526   002EF0  C006  FFDE         	movff	?___fldiv+1,postinc2
  7527   002EF4  C007  FFDE         	movff	?___fldiv+2,postinc2
  7528   002EF8  C008  FFDE         	movff	?___fldiv+3,postinc2
  7529                           
  7530                           ;color.c: 101:     rel -> B = B/L;
  7531   002EFC  C02A  F005         	movff	colour_rel@B,___fldiv@b
  7532   002F00  C02B  F006         	movff	colour_rel@B+1,___fldiv@b+1
  7533   002F04  C02C  F007         	movff	colour_rel@B+2,___fldiv@b+2
  7534   002F08  C02D  F008         	movff	colour_rel@B+3,___fldiv@b+3
  7535   002F0C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7536   002F10  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7537   002F14  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7538   002F18  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7539   002F1C  EC88  F010         	call	___fldiv	;wreg free
  7540   002F20  EE20 F008          	lfsr	2,8
  7541   002F24  5020               	movf	colour_rel@rel^0,w,c
  7542   002F26  26D9               	addwf	fsr2l,f,c
  7543   002F28  5021               	movf	(colour_rel@rel+1)^0,w,c
  7544   002F2A  22DA               	addwfc	fsr2h,f,c
  7545   002F2C  C005  FFDE         	movff	?___fldiv,postinc2
  7546   002F30  C006  FFDE         	movff	?___fldiv+1,postinc2
  7547   002F34  C007  FFDE         	movff	?___fldiv+2,postinc2
  7548   002F38  C008  FFDE         	movff	?___fldiv+3,postinc2
  7549                           
  7550                           ;color.c: 102:     rel -> G = G/L;
  7551   002F3C  C026  F005         	movff	colour_rel@G,___fldiv@b
  7552   002F40  C027  F006         	movff	colour_rel@G+1,___fldiv@b+1
  7553   002F44  C028  F007         	movff	colour_rel@G+2,___fldiv@b+2
  7554   002F48  C029  F008         	movff	colour_rel@G+3,___fldiv@b+3
  7555   002F4C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7556   002F50  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7557   002F54  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7558   002F58  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7559   002F5C  EC88  F010         	call	___fldiv	;wreg free
  7560   002F60  EE20 F004          	lfsr	2,4
  7561   002F64  5020               	movf	colour_rel@rel^0,w,c
  7562   002F66  26D9               	addwf	fsr2l,f,c
  7563   002F68  5021               	movf	(colour_rel@rel+1)^0,w,c
  7564   002F6A  22DA               	addwfc	fsr2h,f,c
  7565   002F6C  C005  FFDE         	movff	?___fldiv,postinc2
  7566   002F70  C006  FFDE         	movff	?___fldiv+1,postinc2
  7567   002F74  C007  FFDE         	movff	?___fldiv+2,postinc2
  7568   002F78  C008  FFDE         	movff	?___fldiv+3,postinc2
  7569   002F7C  0012               	return		;funcret
  7570   002F7E                     __end_of_colour_rel:
  7571                           	callstack 0
  7572                           
  7573 ;; *************** function ___xxtofl *****************
  7574 ;; Defined at:
  7575 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  sign            1    wreg     unsigned char 
  7578 ;;  val             4    4[COMRAM] long 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  sign            1   12[COMRAM] unsigned char 
  7581 ;;  arg             4   14[COMRAM] unsigned long 
  7582 ;;  exp             1   13[COMRAM] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  4    4[COMRAM] unsigned char 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;Total ram usage:       14 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 2
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_colour_rel
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text36
  7607   002C40                     __ptext36:
  7608                           	callstack 0
  7609   002C40                     ___xxtofl:
  7610                           	callstack 27
  7611                           
  7612                           ;incstack = 0
  7613                           ;___xxtofl@sign stored from wreg
  7614   002C40  6E0D               	movwf	___xxtofl@sign^0,c
  7615   002C42  500D               	movf	___xxtofl@sign^0,w,c
  7616   002C44  B4D8               	btfsc	status,2,c
  7617   002C46  EF27  F016         	goto	u4071
  7618   002C4A  EF29  F016         	goto	u4070
  7619   002C4E                     u4071:
  7620   002C4E  EF4B  F016         	goto	l944
  7621   002C52                     u4070:
  7622   002C52  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7623   002C54  EF30  F016         	goto	u4080
  7624   002C58  EF2E  F016         	goto	u4081
  7625   002C5C                     u4081:
  7626   002C5C  EF4B  F016         	goto	l944
  7627   002C60                     u4080:
  7628   002C60  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7629   002C64  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7630   002C68  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7631   002C6C  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7632   002C70  1E09               	comf	??___xxtofl^0,f,c
  7633   002C72  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7634   002C74  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7635   002C76  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7636   002C78  2A09               	incf	??___xxtofl^0,f,c
  7637   002C7A  0E00               	movlw	0
  7638   002C7C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7639   002C7E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7640   002C80  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7641   002C82  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7642   002C86  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7643   002C8A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7644   002C8E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7645   002C92  EF53  F016         	goto	l3874
  7646   002C96                     l944:
  7647   002C96  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7648   002C9A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7649   002C9E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7650   002CA2  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7651   002CA6                     l3874:
  7652   002CA6  5005               	movf	___xxtofl@val^0,w,c
  7653   002CA8  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7654   002CAA  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7655   002CAC  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7656   002CAE  A4D8               	btfss	status,2,c
  7657   002CB0  EF5C  F016         	goto	u4091
  7658   002CB4  EF5E  F016         	goto	u4090
  7659   002CB8                     u4091:
  7660   002CB8  EF68  F016         	goto	l3880
  7661   002CBC                     u4090:
  7662   002CBC  0E00               	movlw	0
  7663   002CBE  6E05               	movwf	?___xxtofl^0,c
  7664   002CC0  0E00               	movlw	0
  7665   002CC2  6E06               	movwf	(?___xxtofl+1)^0,c
  7666   002CC4  0E00               	movlw	0
  7667   002CC6  6E07               	movwf	(?___xxtofl+2)^0,c
  7668   002CC8  0E00               	movlw	0
  7669   002CCA  6E08               	movwf	(?___xxtofl+3)^0,c
  7670   002CCC  EFF9  F016         	goto	l947
  7671   002CD0                     l3880:
  7672   002CD0  0E96               	movlw	150
  7673   002CD2  6E0E               	movwf	___xxtofl@exp^0,c
  7674   002CD4  EF72  F016         	goto	l3884
  7675   002CD8                     l3882:
  7676   002CD8  2A0E               	incf	___xxtofl@exp^0,f,c
  7677   002CDA  90D8               	bcf	status,0,c
  7678   002CDC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7679   002CDE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7680   002CE0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7681   002CE2  320F               	rrcf	___xxtofl@arg^0,f,c
  7682   002CE4                     l3884:
  7683   002CE4  0E00               	movlw	0
  7684   002CE6  140F               	andwf	___xxtofl@arg^0,w,c
  7685   002CE8  6E09               	movwf	??___xxtofl^0,c
  7686   002CEA  0E00               	movlw	0
  7687   002CEC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7688   002CEE  6E0A               	movwf	(??___xxtofl+1)^0,c
  7689   002CF0  0E00               	movlw	0
  7690   002CF2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7691   002CF4  6E0B               	movwf	(??___xxtofl+2)^0,c
  7692   002CF6  0EFE               	movlw	254
  7693   002CF8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7694   002CFA  6E0C               	movwf	(??___xxtofl+3)^0,c
  7695   002CFC  5009               	movf	??___xxtofl^0,w,c
  7696   002CFE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7697   002D00  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7698   002D02  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7699   002D04  A4D8               	btfss	status,2,c
  7700   002D06  EF87  F016         	goto	u4101
  7701   002D0A  EF89  F016         	goto	u4100
  7702   002D0E                     u4101:
  7703   002D0E  EF6C  F016         	goto	l3882
  7704   002D12                     u4100:
  7705   002D12  EF97  F016         	goto	l951
  7706   002D16                     l3886:
  7707   002D16  2A0E               	incf	___xxtofl@exp^0,f,c
  7708   002D18  0E01               	movlw	1
  7709   002D1A  260F               	addwf	___xxtofl@arg^0,f,c
  7710   002D1C  0E00               	movlw	0
  7711   002D1E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7712   002D20  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7713   002D22  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7714   002D24  90D8               	bcf	status,0,c
  7715   002D26  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7716   002D28  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7717   002D2A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7718   002D2C  320F               	rrcf	___xxtofl@arg^0,f,c
  7719   002D2E                     l951:
  7720   002D2E  0E00               	movlw	0
  7721   002D30  140F               	andwf	___xxtofl@arg^0,w,c
  7722   002D32  6E09               	movwf	??___xxtofl^0,c
  7723   002D34  0E00               	movlw	0
  7724   002D36  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7725   002D38  6E0A               	movwf	(??___xxtofl+1)^0,c
  7726   002D3A  0E00               	movlw	0
  7727   002D3C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7728   002D3E  6E0B               	movwf	(??___xxtofl+2)^0,c
  7729   002D40  0EFF               	movlw	255
  7730   002D42  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7731   002D44  6E0C               	movwf	(??___xxtofl+3)^0,c
  7732   002D46  5009               	movf	??___xxtofl^0,w,c
  7733   002D48  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7734   002D4A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7735   002D4C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7736   002D4E  A4D8               	btfss	status,2,c
  7737   002D50  EFAC  F016         	goto	u4111
  7738   002D54  EFAE  F016         	goto	u4110
  7739   002D58                     u4111:
  7740   002D58  EF8B  F016         	goto	l3886
  7741   002D5C                     u4110:
  7742   002D5C  EFB6  F016         	goto	l3894
  7743   002D60                     l3892:
  7744   002D60  060E               	decf	___xxtofl@exp^0,f,c
  7745   002D62  90D8               	bcf	status,0,c
  7746   002D64  360F               	rlcf	___xxtofl@arg^0,f,c
  7747   002D66  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7748   002D68  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7749   002D6A  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7750   002D6C                     l3894:
  7751   002D6C  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7752   002D6E  EFBB  F016         	goto	u4121
  7753   002D72  EFBD  F016         	goto	u4120
  7754   002D76                     u4121:
  7755   002D76  EFC5  F016         	goto	l958
  7756   002D7A                     u4120:
  7757   002D7A  0E02               	movlw	2
  7758   002D7C  600E               	cpfslt	___xxtofl@exp^0,c
  7759   002D7E  EFC3  F016         	goto	u4131
  7760   002D82  EFC5  F016         	goto	u4130
  7761   002D86                     u4131:
  7762   002D86  EFB0  F016         	goto	l3892
  7763   002D8A                     u4130:
  7764   002D8A                     l958:
  7765   002D8A  B00E               	btfsc	___xxtofl@exp^0,0,c
  7766   002D8C  EFCA  F016         	goto	u4141
  7767   002D90  EFCC  F016         	goto	u4140
  7768   002D94                     u4141:
  7769   002D94  EFCD  F016         	goto	l3900
  7770   002D98                     u4140:
  7771   002D98  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7772   002D9A                     l3900:
  7773   002D9A  90D8               	bcf	status,0,c
  7774   002D9C  320E               	rrcf	___xxtofl@exp^0,f,c
  7775   002D9E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7776   002DA2  6A0A               	clrf	(??___xxtofl+1)^0,c
  7777   002DA4  6A0B               	clrf	(??___xxtofl+2)^0,c
  7778   002DA6  6A0C               	clrf	(??___xxtofl+3)^0,c
  7779   002DA8  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7780   002DAC  6A0B               	clrf	(??___xxtofl+2)^0,c
  7781   002DAE  6A0A               	clrf	(??___xxtofl+1)^0,c
  7782   002DB0  6A09               	clrf	??___xxtofl^0,c
  7783   002DB2  5009               	movf	??___xxtofl^0,w,c
  7784   002DB4  120F               	iorwf	___xxtofl@arg^0,f,c
  7785   002DB6  500A               	movf	(??___xxtofl+1)^0,w,c
  7786   002DB8  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7787   002DBA  500B               	movf	(??___xxtofl+2)^0,w,c
  7788   002DBC  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7789   002DBE  500C               	movf	(??___xxtofl+3)^0,w,c
  7790   002DC0  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7791   002DC2  500D               	movf	___xxtofl@sign^0,w,c
  7792   002DC4  B4D8               	btfsc	status,2,c
  7793   002DC6  EFE7  F016         	goto	u4151
  7794   002DCA  EFE9  F016         	goto	u4150
  7795   002DCE                     u4151:
  7796   002DCE  EFF1  F016         	goto	l3910
  7797   002DD2                     u4150:
  7798   002DD2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7799   002DD4  EFF0  F016         	goto	u4160
  7800   002DD8  EFEE  F016         	goto	u4161
  7801   002DDC                     u4161:
  7802   002DDC  EFF1  F016         	goto	l3910
  7803   002DE0                     u4160:
  7804   002DE0  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7805   002DE2                     l3910:
  7806   002DE2  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7807   002DE6  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7808   002DEA  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7809   002DEE  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7810   002DF2                     l947:
  7811   002DF2  0012               	return		;funcret
  7812   002DF4                     __end_of___xxtofl:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function ___fldiv *****************
  7816 ;; Defined at:
  7817 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  b               4    4[COMRAM] unsigned char 
  7820 ;;  a               4    8[COMRAM] unsigned char 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  grs             4   23[COMRAM] unsigned long 
  7823 ;;  rem             4   16[COMRAM] unsigned long 
  7824 ;;  new_exp         2   21[COMRAM] short 
  7825 ;;  aexp            1   28[COMRAM] unsigned char 
  7826 ;;  bexp            1   27[COMRAM] unsigned char 
  7827 ;;  sign            1   20[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4    4[COMRAM] unsigned char 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;Total ram usage:       25 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; Hardware stack levels required when called: 2
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_colour_rel
  7848 ;;		_efgtoa
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text37
  7853   002110                     __ptext37:
  7854                           	callstack 0
  7855   002110                     ___fldiv:
  7856                           	callstack 24
  7857   002110  5008               	movf	(___fldiv@b+3)^0,w,c
  7858   002112  0B80               	andlw	128
  7859   002114  6E15               	movwf	___fldiv@sign^0,c
  7860   002116  5008               	movf	(___fldiv@b+3)^0,w,c
  7861   002118  2408               	addwf	(___fldiv@b+3)^0,w,c
  7862   00211A  6E1C               	movwf	___fldiv@bexp^0,c
  7863   00211C  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7864   00211E  EF93  F010         	goto	u4851
  7865   002122  EF95  F010         	goto	u4850
  7866   002126                     u4851:
  7867   002126  EF96  F010         	goto	l4480
  7868   00212A                     u4850:
  7869   00212A  801C               	bsf	___fldiv@bexp^0,0,c
  7870   00212C                     l4480:
  7871   00212C  501C               	movf	___fldiv@bexp^0,w,c
  7872   00212E  B4D8               	btfsc	status,2,c
  7873   002130  EF9C  F010         	goto	u4861
  7874   002134  EF9E  F010         	goto	u4860
  7875   002138                     u4861:
  7876   002138  EFB3  F010         	goto	l4490
  7877   00213C                     u4860:
  7878   00213C  281C               	incf	___fldiv@bexp^0,w,c
  7879   00213E  A4D8               	btfss	status,2,c
  7880   002140  EFA4  F010         	goto	u4871
  7881   002144  EFA6  F010         	goto	u4870
  7882   002148                     u4871:
  7883   002148  EFAE  F010         	goto	l4486
  7884   00214C                     u4870:
  7885   00214C  0E00               	movlw	0
  7886   00214E  6E05               	movwf	___fldiv@b^0,c
  7887   002150  0E00               	movlw	0
  7888   002152  6E06               	movwf	(___fldiv@b+1)^0,c
  7889   002154  0E00               	movlw	0
  7890   002156  6E07               	movwf	(___fldiv@b+2)^0,c
  7891   002158  0E00               	movlw	0
  7892   00215A  6E08               	movwf	(___fldiv@b+3)^0,c
  7893   00215C                     l4486:
  7894   00215C  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7895   00215E  0E00               	movlw	0
  7896   002160  6E08               	movwf	(___fldiv@b+3)^0,c
  7897   002162  EFBB  F010         	goto	l4492
  7898   002166                     l4490:
  7899   002166  0E00               	movlw	0
  7900   002168  6E05               	movwf	___fldiv@b^0,c
  7901   00216A  0E00               	movlw	0
  7902   00216C  6E06               	movwf	(___fldiv@b+1)^0,c
  7903   00216E  0E00               	movlw	0
  7904   002170  6E07               	movwf	(___fldiv@b+2)^0,c
  7905   002172  0E00               	movlw	0
  7906   002174  6E08               	movwf	(___fldiv@b+3)^0,c
  7907   002176                     l4492:
  7908   002176  500C               	movf	(___fldiv@a+3)^0,w,c
  7909   002178  0B80               	andlw	128
  7910   00217A  1A15               	xorwf	___fldiv@sign^0,f,c
  7911   00217C  500C               	movf	(___fldiv@a+3)^0,w,c
  7912   00217E  240C               	addwf	(___fldiv@a+3)^0,w,c
  7913   002180  6E1D               	movwf	___fldiv@aexp^0,c
  7914   002182  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  7915   002184  EFC6  F010         	goto	u4881
  7916   002188  EFC8  F010         	goto	u4880
  7917   00218C                     u4881:
  7918   00218C  EFC9  F010         	goto	l4500
  7919   002190                     u4880:
  7920   002190  801D               	bsf	___fldiv@aexp^0,0,c
  7921   002192                     l4500:
  7922   002192  501D               	movf	___fldiv@aexp^0,w,c
  7923   002194  B4D8               	btfsc	status,2,c
  7924   002196  EFCF  F010         	goto	u4891
  7925   00219A  EFD1  F010         	goto	u4890
  7926   00219E                     u4891:
  7927   00219E  EFE6  F010         	goto	l4510
  7928   0021A2                     u4890:
  7929   0021A2  281D               	incf	___fldiv@aexp^0,w,c
  7930   0021A4  A4D8               	btfss	status,2,c
  7931   0021A6  EFD7  F010         	goto	u4901
  7932   0021AA  EFD9  F010         	goto	u4900
  7933   0021AE                     u4901:
  7934   0021AE  EFE1  F010         	goto	l4506
  7935   0021B2                     u4900:
  7936   0021B2  0E00               	movlw	0
  7937   0021B4  6E09               	movwf	___fldiv@a^0,c
  7938   0021B6  0E00               	movlw	0
  7939   0021B8  6E0A               	movwf	(___fldiv@a+1)^0,c
  7940   0021BA  0E00               	movlw	0
  7941   0021BC  6E0B               	movwf	(___fldiv@a+2)^0,c
  7942   0021BE  0E00               	movlw	0
  7943   0021C0  6E0C               	movwf	(___fldiv@a+3)^0,c
  7944   0021C2                     l4506:
  7945   0021C2  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  7946   0021C4  0E00               	movlw	0
  7947   0021C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  7948   0021C8  EFEE  F010         	goto	l4512
  7949   0021CC                     l4510:
  7950   0021CC  0E00               	movlw	0
  7951   0021CE  6E09               	movwf	___fldiv@a^0,c
  7952   0021D0  0E00               	movlw	0
  7953   0021D2  6E0A               	movwf	(___fldiv@a+1)^0,c
  7954   0021D4  0E00               	movlw	0
  7955   0021D6  6E0B               	movwf	(___fldiv@a+2)^0,c
  7956   0021D8  0E00               	movlw	0
  7957   0021DA  6E0C               	movwf	(___fldiv@a+3)^0,c
  7958   0021DC                     l4512:
  7959   0021DC  5009               	movf	___fldiv@a^0,w,c
  7960   0021DE  100A               	iorwf	(___fldiv@a+1)^0,w,c
  7961   0021E0  100B               	iorwf	(___fldiv@a+2)^0,w,c
  7962   0021E2  100C               	iorwf	(___fldiv@a+3)^0,w,c
  7963   0021E4  A4D8               	btfss	status,2,c
  7964   0021E6  EFF7  F010         	goto	u4911
  7965   0021EA  EFF9  F010         	goto	u4910
  7966   0021EE                     u4911:
  7967   0021EE  EF11  F011         	goto	l4524
  7968   0021F2                     u4910:
  7969   0021F2  0E00               	movlw	0
  7970   0021F4  6E05               	movwf	___fldiv@b^0,c
  7971   0021F6  0E00               	movlw	0
  7972   0021F8  6E06               	movwf	(___fldiv@b+1)^0,c
  7973   0021FA  0E00               	movlw	0
  7974   0021FC  6E07               	movwf	(___fldiv@b+2)^0,c
  7975   0021FE  0E00               	movlw	0
  7976   002200  6E08               	movwf	(___fldiv@b+3)^0,c
  7977   002202  0E80               	movlw	128
  7978   002204  1207               	iorwf	(___fldiv@b+2)^0,f,c
  7979   002206  0E7F               	movlw	127
  7980   002208  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7981   00220A                     l4518:
  7982   00220A  5015               	movf	___fldiv@sign^0,w,c
  7983   00220C  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7984   00220E  C005  F005         	movff	___fldiv@b,?___fldiv
  7985   002212  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  7986   002216  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  7987   00221A  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  7988   00221E  EF54  F012         	goto	l871
  7989   002222                     l4524:
  7990   002222  501C               	movf	___fldiv@bexp^0,w,c
  7991   002224  A4D8               	btfss	status,2,c
  7992   002226  EF17  F011         	goto	u4921
  7993   00222A  EF19  F011         	goto	u4920
  7994   00222E                     u4921:
  7995   00222E  EF23  F011         	goto	l4532
  7996   002232                     u4920:
  7997   002232  0E00               	movlw	0
  7998   002234  6E05               	movwf	?___fldiv^0,c
  7999   002236  0E00               	movlw	0
  8000   002238  6E06               	movwf	(?___fldiv+1)^0,c
  8001   00223A  0E00               	movlw	0
  8002   00223C  6E07               	movwf	(?___fldiv+2)^0,c
  8003   00223E  0E00               	movlw	0
  8004   002240  6E08               	movwf	(?___fldiv+3)^0,c
  8005   002242  EF54  F012         	goto	l871
  8006   002246                     l4532:
  8007   002246  501D               	movf	___fldiv@aexp^0,w,c
  8008   002248  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  8009   00224C  6A0E               	clrf	(??___fldiv+1)^0,c
  8010   00224E  5E0D               	subwf	??___fldiv^0,f,c
  8011   002250  0E00               	movlw	0
  8012   002252  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  8013   002254  0E7F               	movlw	127
  8014   002256  240D               	addwf	??___fldiv^0,w,c
  8015   002258  6E16               	movwf	___fldiv@new_exp^0,c
  8016   00225A  0E00               	movlw	0
  8017   00225C  200E               	addwfc	(??___fldiv+1)^0,w,c
  8018   00225E  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8019   002260  C005  F011         	movff	___fldiv@b,___fldiv@rem
  8020   002264  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  8021   002268  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  8022   00226C  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  8023   002270  0E00               	movlw	0
  8024   002272  6E05               	movwf	___fldiv@b^0,c
  8025   002274  0E00               	movlw	0
  8026   002276  6E06               	movwf	(___fldiv@b+1)^0,c
  8027   002278  0E00               	movlw	0
  8028   00227A  6E07               	movwf	(___fldiv@b+2)^0,c
  8029   00227C  0E00               	movlw	0
  8030   00227E  6E08               	movwf	(___fldiv@b+3)^0,c
  8031   002280  0E00               	movlw	0
  8032   002282  6E18               	movwf	___fldiv@grs^0,c
  8033   002284  0E00               	movlw	0
  8034   002286  6E19               	movwf	(___fldiv@grs+1)^0,c
  8035   002288  0E00               	movlw	0
  8036   00228A  6E1A               	movwf	(___fldiv@grs+2)^0,c
  8037   00228C  0E00               	movlw	0
  8038   00228E  6E1B               	movwf	(___fldiv@grs+3)^0,c
  8039   002290  0E00               	movlw	0
  8040   002292  6E1D               	movwf	___fldiv@aexp^0,c
  8041   002294  EF84  F011         	goto	l873
  8042   002298                     l4542:
  8043   002298  501D               	movf	___fldiv@aexp^0,w,c
  8044   00229A  B4D8               	btfsc	status,2,c
  8045   00229C  EF52  F011         	goto	u4931
  8046   0022A0  EF54  F011         	goto	u4930
  8047   0022A4                     u4931:
  8048   0022A4  EF6B  F011         	goto	l4550
  8049   0022A8                     u4930:
  8050   0022A8  90D8               	bcf	status,0,c
  8051   0022AA  3611               	rlcf	___fldiv@rem^0,f,c
  8052   0022AC  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  8053   0022AE  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  8054   0022B0  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  8055   0022B2  90D8               	bcf	status,0,c
  8056   0022B4  3605               	rlcf	___fldiv@b^0,f,c
  8057   0022B6  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8058   0022B8  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8059   0022BA  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8060   0022BC  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8061   0022BE  EF63  F011         	goto	u4941
  8062   0022C2  EF65  F011         	goto	u4940
  8063   0022C6                     u4941:
  8064   0022C6  EF66  F011         	goto	l876
  8065   0022CA                     u4940:
  8066   0022CA  8005               	bsf	___fldiv@b^0,0,c
  8067   0022CC                     l876:
  8068   0022CC  90D8               	bcf	status,0,c
  8069   0022CE  3618               	rlcf	___fldiv@grs^0,f,c
  8070   0022D0  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8071   0022D2  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8072   0022D4  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8073   0022D6                     l4550:
  8074   0022D6  5009               	movf	___fldiv@a^0,w,c
  8075   0022D8  5C11               	subwf	___fldiv@rem^0,w,c
  8076   0022DA  500A               	movf	(___fldiv@a+1)^0,w,c
  8077   0022DC  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  8078   0022DE  500B               	movf	(___fldiv@a+2)^0,w,c
  8079   0022E0  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  8080   0022E2  500C               	movf	(___fldiv@a+3)^0,w,c
  8081   0022E4  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  8082   0022E6  A0D8               	btfss	status,0,c
  8083   0022E8  EF78  F011         	goto	u4951
  8084   0022EC  EF7A  F011         	goto	u4950
  8085   0022F0                     u4951:
  8086   0022F0  EF83  F011         	goto	l4556
  8087   0022F4                     u4950:
  8088   0022F4  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  8089   0022F6  5009               	movf	___fldiv@a^0,w,c
  8090   0022F8  5E11               	subwf	___fldiv@rem^0,f,c
  8091   0022FA  500A               	movf	(___fldiv@a+1)^0,w,c
  8092   0022FC  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  8093   0022FE  500B               	movf	(___fldiv@a+2)^0,w,c
  8094   002300  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  8095   002302  500C               	movf	(___fldiv@a+3)^0,w,c
  8096   002304  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  8097   002306                     l4556:
  8098   002306  2A1D               	incf	___fldiv@aexp^0,f,c
  8099   002308                     l873:
  8100   002308  0E19               	movlw	25
  8101   00230A  641D               	cpfsgt	___fldiv@aexp^0,c
  8102   00230C  EF8A  F011         	goto	u4961
  8103   002310  EF8C  F011         	goto	u4960
  8104   002314                     u4961:
  8105   002314  EF4C  F011         	goto	l4542
  8106   002318                     u4960:
  8107   002318  5011               	movf	___fldiv@rem^0,w,c
  8108   00231A  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  8109   00231C  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  8110   00231E  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  8111   002320  B4D8               	btfsc	status,2,c
  8112   002322  EF95  F011         	goto	u4971
  8113   002326  EF97  F011         	goto	u4970
  8114   00232A                     u4971:
  8115   00232A  EFAF  F011         	goto	l4568
  8116   00232E                     u4970:
  8117   00232E  8018               	bsf	___fldiv@grs^0,0,c
  8118   002330  EFAF  F011         	goto	l4568
  8119   002334                     l4562:
  8120   002334  90D8               	bcf	status,0,c
  8121   002336  3605               	rlcf	___fldiv@b^0,f,c
  8122   002338  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8123   00233A  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8124   00233C  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8125   00233E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8126   002340  EFA4  F011         	goto	u4981
  8127   002344  EFA6  F011         	goto	u4980
  8128   002348                     u4981:
  8129   002348  EFA7  F011         	goto	l882
  8130   00234C                     u4980:
  8131   00234C  8005               	bsf	___fldiv@b^0,0,c
  8132   00234E                     l882:
  8133   00234E  90D8               	bcf	status,0,c
  8134   002350  3618               	rlcf	___fldiv@grs^0,f,c
  8135   002352  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8136   002354  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8137   002356  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8138   002358  0616               	decf	___fldiv@new_exp^0,f,c
  8139   00235A  A0D8               	btfss	status,0,c
  8140   00235C  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  8141   00235E                     l4568:
  8142   00235E  AE07               	btfss	(___fldiv@b+2)^0,7,c
  8143   002360  EFB4  F011         	goto	u4991
  8144   002364  EFB6  F011         	goto	u4990
  8145   002368                     u4991:
  8146   002368  EF9A  F011         	goto	l4562
  8147   00236C                     u4990:
  8148   00236C  0E00               	movlw	0
  8149   00236E  6E1D               	movwf	___fldiv@aexp^0,c
  8150   002370  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8151   002372  EFBD  F011         	goto	u5001
  8152   002376  EFBF  F011         	goto	u5000
  8153   00237A                     u5001:
  8154   00237A  EFE3  F011         	goto	l884
  8155   00237E                     u5000:
  8156   00237E  0EFF               	movlw	255
  8157   002380  1418               	andwf	___fldiv@grs^0,w,c
  8158   002382  6E0D               	movwf	??___fldiv^0,c
  8159   002384  0EFF               	movlw	255
  8160   002386  1419               	andwf	(___fldiv@grs+1)^0,w,c
  8161   002388  6E0E               	movwf	(??___fldiv+1)^0,c
  8162   00238A  0EFF               	movlw	255
  8163   00238C  141A               	andwf	(___fldiv@grs+2)^0,w,c
  8164   00238E  6E0F               	movwf	(??___fldiv+2)^0,c
  8165   002390  0E7F               	movlw	127
  8166   002392  141B               	andwf	(___fldiv@grs+3)^0,w,c
  8167   002394  6E10               	movwf	(??___fldiv+3)^0,c
  8168   002396  500D               	movf	??___fldiv^0,w,c
  8169   002398  100E               	iorwf	(??___fldiv+1)^0,w,c
  8170   00239A  100F               	iorwf	(??___fldiv+2)^0,w,c
  8171   00239C  1010               	iorwf	(??___fldiv+3)^0,w,c
  8172   00239E  B4D8               	btfsc	status,2,c
  8173   0023A0  EFD4  F011         	goto	u5011
  8174   0023A4  EFD6  F011         	goto	u5010
  8175   0023A8                     u5011:
  8176   0023A8  EFDA  F011         	goto	l885
  8177   0023AC                     u5010:
  8178   0023AC                     l4576:
  8179   0023AC  0E01               	movlw	1
  8180   0023AE  6E1D               	movwf	___fldiv@aexp^0,c
  8181   0023B0  EFE3  F011         	goto	l884
  8182   0023B4                     l885:
  8183   0023B4  A005               	btfss	___fldiv@b^0,0,c
  8184   0023B6  EFDF  F011         	goto	u5021
  8185   0023BA  EFE1  F011         	goto	u5020
  8186   0023BE                     u5021:
  8187   0023BE  EFE3  F011         	goto	l884
  8188   0023C2                     u5020:
  8189   0023C2  EFD6  F011         	goto	l4576
  8190   0023C6                     l884:
  8191   0023C6  501D               	movf	___fldiv@aexp^0,w,c
  8192   0023C8  B4D8               	btfsc	status,2,c
  8193   0023CA  EFE9  F011         	goto	u5031
  8194   0023CE  EFEB  F011         	goto	u5030
  8195   0023D2                     u5031:
  8196   0023D2  EF0F  F012         	goto	l4588
  8197   0023D6                     u5030:
  8198   0023D6  0E01               	movlw	1
  8199   0023D8  2605               	addwf	___fldiv@b^0,f,c
  8200   0023DA  0E00               	movlw	0
  8201   0023DC  2206               	addwfc	(___fldiv@b+1)^0,f,c
  8202   0023DE  2207               	addwfc	(___fldiv@b+2)^0,f,c
  8203   0023E0  2208               	addwfc	(___fldiv@b+3)^0,f,c
  8204   0023E2  A008               	btfss	(___fldiv@b+3)^0,0,c
  8205   0023E4  EFF6  F011         	goto	u5041
  8206   0023E8  EFF8  F011         	goto	u5040
  8207   0023EC                     u5041:
  8208   0023EC  EF0F  F012         	goto	l4588
  8209   0023F0                     u5040:
  8210   0023F0  C005  F00D         	movff	___fldiv@b,??___fldiv
  8211   0023F4  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  8212   0023F8  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  8213   0023FC  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  8214   002400  3410               	rlcf	(??___fldiv+3)^0,w,c
  8215   002402  3210               	rrcf	(??___fldiv+3)^0,f,c
  8216   002404  320F               	rrcf	(??___fldiv+2)^0,f,c
  8217   002406  320E               	rrcf	(??___fldiv+1)^0,f,c
  8218   002408  320D               	rrcf	??___fldiv^0,f,c
  8219   00240A  C00D  F005         	movff	??___fldiv,___fldiv@b
  8220   00240E  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  8221   002412  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  8222   002416  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  8223   00241A  4A16               	infsnz	___fldiv@new_exp^0,f,c
  8224   00241C  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  8225   00241E                     l4588:
  8226   00241E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8227   002420  EF1A  F012         	goto	u5051
  8228   002424  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8229   002426  E108               	bnz	u5050
  8230   002428  2816               	incf	___fldiv@new_exp^0,w,c
  8231   00242A  A0D8               	btfss	status,0,c
  8232   00242C  EF1A  F012         	goto	u5051
  8233   002430  EF1C  F012         	goto	u5050
  8234   002434                     u5051:
  8235   002434  EF27  F012         	goto	l4592
  8236   002438                     u5050:
  8237   002438  0E00               	movlw	0
  8238   00243A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8239   00243C  6816               	setf	___fldiv@new_exp^0,c
  8240   00243E  0E00               	movlw	0
  8241   002440  6E05               	movwf	___fldiv@b^0,c
  8242   002442  0E00               	movlw	0
  8243   002444  6E06               	movwf	(___fldiv@b+1)^0,c
  8244   002446  0E00               	movlw	0
  8245   002448  6E07               	movwf	(___fldiv@b+2)^0,c
  8246   00244A  0E00               	movlw	0
  8247   00244C  6E08               	movwf	(___fldiv@b+3)^0,c
  8248   00244E                     l4592:
  8249   00244E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8250   002450  EF34  F012         	goto	u5060
  8251   002454  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8252   002456  E106               	bnz	u5061
  8253   002458  0416               	decf	___fldiv@new_exp^0,w,c
  8254   00245A  B0D8               	btfsc	status,0,c
  8255   00245C  EF32  F012         	goto	u5061
  8256   002460  EF34  F012         	goto	u5060
  8257   002464                     u5061:
  8258   002464  EF42  F012         	goto	l4596
  8259   002468                     u5060:
  8260   002468  0E00               	movlw	0
  8261   00246A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8262   00246C  0E00               	movlw	0
  8263   00246E  6E16               	movwf	___fldiv@new_exp^0,c
  8264   002470  0E00               	movlw	0
  8265   002472  6E05               	movwf	___fldiv@b^0,c
  8266   002474  0E00               	movlw	0
  8267   002476  6E06               	movwf	(___fldiv@b+1)^0,c
  8268   002478  0E00               	movlw	0
  8269   00247A  6E07               	movwf	(___fldiv@b+2)^0,c
  8270   00247C  0E00               	movlw	0
  8271   00247E  6E08               	movwf	(___fldiv@b+3)^0,c
  8272   002480  0E00               	movlw	0
  8273   002482  6E15               	movwf	___fldiv@sign^0,c
  8274   002484                     l4596:
  8275   002484  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  8276   002488  A01C               	btfss	___fldiv@bexp^0,0,c
  8277   00248A  EF49  F012         	goto	u5071
  8278   00248E  EF4B  F012         	goto	u5070
  8279   002492                     u5071:
  8280   002492  EF4E  F012         	goto	l4602
  8281   002496                     u5070:
  8282   002496  8E07               	bsf	(___fldiv@b+2)^0,7,c
  8283   002498  EF4F  F012         	goto	l4604
  8284   00249C                     l4602:
  8285   00249C  9E07               	bcf	(___fldiv@b+2)^0,7,c
  8286   00249E                     l4604:
  8287   00249E  90D8               	bcf	status,0,c
  8288   0024A0  301C               	rrcf	___fldiv@bexp^0,w,c
  8289   0024A2  6E08               	movwf	(___fldiv@b+3)^0,c
  8290   0024A4  EF05  F011         	goto	l4518
  8291   0024A8                     l871:
  8292   0024A8  0012               	return		;funcret
  8293   0024AA                     __end_of___fldiv:
  8294                           	callstack 0
  8295                           
  8296 ;; *************** function _color_click_init *****************
  8297 ;; Defined at:
  8298 ;;		line 5 in file "color.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, status,2, status,0, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;Total ram usage:        1 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 5
  8319 ;; This function calls:
  8320 ;;		_I2C_2_Master_Init
  8321 ;;		_color_writetoaddr
  8322 ;; This function is called by:
  8323 ;;		_main
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text38
  8328   003CEE                     __ptext38:
  8329                           	callstack 0
  8330   003CEE                     _color_click_init:
  8331                           	callstack 25
  8332   003CEE                     
  8333                           ;color.c: 8:     I2C_2_Master_Init();
  8334   003CEE  ECD4  F01E         	call	_I2C_2_Master_Init	;wreg free
  8335   003CF2                     
  8336                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8337   003CF2  0E01               	movlw	1
  8338   003CF4  6E07               	movwf	color_writetoaddr@value^0,c
  8339   003CF6  0E00               	movlw	0
  8340   003CF8  EC27  F01F         	call	_color_writetoaddr
  8341   003CFC                     
  8342                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8343   003CFC  0E3F               	movlw	63
  8344   003CFE  6E09               	movwf	??_color_click_init^0,c
  8345   003D00  0E55               	movlw	85
  8346   003D02                     u6177:
  8347   003D02  2EE8               	decfsz	wreg,f,c
  8348   003D04  D7FE               	bra	u6177
  8349   003D06  2E09               	decfsz	??_color_click_init^0,f,c
  8350   003D08  D7FC               	bra	u6177
  8351   003D0A  F000               	nop	
  8352   003D0C                     
  8353                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8354   003D0C  0E03               	movlw	3
  8355   003D0E  6E07               	movwf	color_writetoaddr@value^0,c
  8356   003D10  0E00               	movlw	0
  8357   003D12  EC27  F01F         	call	_color_writetoaddr
  8358   003D16                     
  8359                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8360   003D16  0ED5               	movlw	213
  8361   003D18  6E07               	movwf	color_writetoaddr@value^0,c
  8362   003D1A  0E01               	movlw	1
  8363   003D1C  EC27  F01F         	call	_color_writetoaddr
  8364   003D20  0012               	return		;funcret
  8365   003D22                     __end_of_color_click_init:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _color_writetoaddr *****************
  8369 ;; Defined at:
  8370 ;;		line 23 in file "color.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  address         1    wreg     unsigned char 
  8373 ;;  value           1    6[COMRAM] unsigned char 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  address         1    7[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;Total ram usage:        2 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 4
  8392 ;; This function calls:
  8393 ;;		_I2C_2_Master_Start
  8394 ;;		_I2C_2_Master_Stop
  8395 ;;		_I2C_2_Master_Write
  8396 ;; This function is called by:
  8397 ;;		_color_click_init
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text39
  8402   003E4E                     __ptext39:
  8403                           	callstack 0
  8404   003E4E                     _color_writetoaddr:
  8405                           	callstack 25
  8406                           
  8407                           ;incstack = 0
  8408                           ;color_writetoaddr@address stored from wreg
  8409   003E4E  6E08               	movwf	color_writetoaddr@address^0,c
  8410   003E50                     
  8411                           ;color.c: 24:     I2C_2_Master_Start();
  8412   003E50  EC69  F01F         	call	_I2C_2_Master_Start	;wreg free
  8413                           
  8414                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  8415   003E54  0E52               	movlw	82
  8416   003E56  EC59  F01F         	call	_I2C_2_Master_Write
  8417                           
  8418                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  8419   003E5A  5008               	movf	color_writetoaddr@address^0,w,c
  8420   003E5C  0980               	iorlw	128
  8421   003E5E  EC59  F01F         	call	_I2C_2_Master_Write
  8422                           
  8423                           ;color.c: 27:     I2C_2_Master_Write(value);
  8424   003E62  5007               	movf	color_writetoaddr@value^0,w,c
  8425   003E64  EC59  F01F         	call	_I2C_2_Master_Write
  8426                           
  8427                           ;color.c: 28:     I2C_2_Master_Stop();
  8428   003E68  EC64  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8429   003E6C  0012               	return		;funcret
  8430   003E6E                     __end_of_color_writetoaddr:
  8431                           	callstack 0
  8432                           
  8433 ;; *************** function _I2C_2_Master_Write *****************
  8434 ;; Defined at:
  8435 ;;		line 45 in file "i2c.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  data_byte       1    wreg     unsigned char 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  data_byte       1    5[COMRAM] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;Total ram usage:        1 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 3
  8456 ;; This function calls:
  8457 ;;		_I2C_2_Master_Idle
  8458 ;; This function is called by:
  8459 ;;		_color_writetoaddr
  8460 ;;		_color_read_lum
  8461 ;;		_color_read_Red
  8462 ;;		_color_read_Green
  8463 ;;		_color_read_Blue
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text40
  8468   003EB2                     __ptext40:
  8469                           	callstack 0
  8470   003EB2                     _I2C_2_Master_Write:
  8471                           	callstack 25
  8472                           
  8473                           ;incstack = 0
  8474                           ;I2C_2_Master_Write@data_byte stored from wreg
  8475   003EB2  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8476   003EB4                     
  8477                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8478   003EB4  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8479   003EB8                     
  8480                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8481   003EB8  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8482   003EBC  0012               	return		;funcret
  8483   003EBE                     __end_of_I2C_2_Master_Write:
  8484                           	callstack 0
  8485                           
  8486 ;; *************** function _I2C_2_Master_Stop *****************
  8487 ;; Defined at:
  8488 ;;		line 39 in file "i2c.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      void 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;Total ram usage:        0 bytes
  8507 ;; Hardware stack levels used: 1
  8508 ;; Hardware stack levels required when called: 3
  8509 ;; This function calls:
  8510 ;;		_I2C_2_Master_Idle
  8511 ;; This function is called by:
  8512 ;;		_color_writetoaddr
  8513 ;;		_color_read_lum
  8514 ;;		_color_read_Red
  8515 ;;		_color_read_Green
  8516 ;;		_color_read_Blue
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text41
  8521   003EC8                     __ptext41:
  8522                           	callstack 0
  8523   003EC8                     _I2C_2_Master_Stop:
  8524                           	callstack 25
  8525   003EC8                     
  8526                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8527   003EC8  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8528   003ECC                     
  8529                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8530   003ECC  010E               	movlb	14	; () banked
  8531   003ECE  85DA               	bsf	218,2,b	;volatile
  8532   003ED0                     
  8533                           ; BSR set to: 14
  8534   003ED0  0012               	return		;funcret
  8535   003ED2                     __end_of_I2C_2_Master_Stop:
  8536                           	callstack 0
  8537                           
  8538 ;; *************** function _I2C_2_Master_Start *****************
  8539 ;; Defined at:
  8540 ;;		line 27 in file "i2c.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;		None
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      void 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used: 1
  8560 ;; Hardware stack levels required when called: 3
  8561 ;; This function calls:
  8562 ;;		_I2C_2_Master_Idle
  8563 ;; This function is called by:
  8564 ;;		_color_writetoaddr
  8565 ;;		_color_read_lum
  8566 ;;		_color_read_Red
  8567 ;;		_color_read_Green
  8568 ;;		_color_read_Blue
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text42
  8573   003ED2                     __ptext42:
  8574                           	callstack 0
  8575   003ED2                     _I2C_2_Master_Start:
  8576                           	callstack 25
  8577   003ED2                     
  8578                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8579   003ED2  EC13  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8580   003ED6                     
  8581                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8582   003ED6  010E               	movlb	14	; () banked
  8583   003ED8  81DA               	bsf	218,0,b	;volatile
  8584   003EDA                     
  8585                           ; BSR set to: 14
  8586   003EDA  0012               	return		;funcret
  8587   003EDC                     __end_of_I2C_2_Master_Start:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _I2C_2_Master_Idle *****************
  8591 ;; Defined at:
  8592 ;;		line 22 in file "i2c.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;Total ram usage:        1 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 2
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_I2C_2_Master_Start
  8617 ;;		_I2C_2_Master_RepStart
  8618 ;;		_I2C_2_Master_Stop
  8619 ;;		_I2C_2_Master_Write
  8620 ;;		_I2C_2_Master_Read
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text43
  8625   003E26                     __ptext43:
  8626                           	callstack 0
  8627   003E26                     _I2C_2_Master_Idle:
  8628                           	callstack 25
  8629   003E26                     l76:
  8630   003E26  010E               	movlb	14	; () banked
  8631   003E28  B5D8               	btfsc	216,2,b	;volatile
  8632   003E2A  EF19  F01F         	goto	u3541
  8633   003E2E  EF1B  F01F         	goto	u3540
  8634   003E32                     u3541:
  8635   003E32  EF13  F01F         	goto	l76
  8636   003E36                     u3540:
  8637   003E36                     
  8638                           ; BSR set to: 14
  8639   003E36  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8640   003E3A  0E1F               	movlw	31
  8641   003E3C  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8642   003E3E  A4D8               	btfss	status,2,c
  8643   003E40  EF24  F01F         	goto	u3551
  8644   003E44  EF26  F01F         	goto	u3550
  8645   003E48                     u3551:
  8646   003E48  EF13  F01F         	goto	l76
  8647   003E4C                     u3550:
  8648   003E4C                     
  8649                           ; BSR set to: 14
  8650   003E4C  0012               	return		;funcret
  8651   003E4E                     __end_of_I2C_2_Master_Idle:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function _I2C_2_Master_Init *****************
  8655 ;; Defined at:
  8656 ;;		line 4 in file "i2c.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;Total ram usage:        0 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; Hardware stack levels required when called: 2
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_color_click_init
  8681 ;;		_main
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text44
  8686   003DA8                     __ptext44:
  8687                           	callstack 0
  8688   003DA8                     _I2C_2_Master_Init:
  8689                           	callstack 27
  8690   003DA8                     
  8691                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8692   003DA8  010E               	movlb	14	; () banked
  8693   003DAA  51D9               	movf	217,w,b	;volatile
  8694   003DAC  0BF0               	andlw	-16
  8695   003DAE  0908               	iorlw	8
  8696   003DB0  6FD9               	movwf	217,b	;volatile
  8697   003DB2                     
  8698                           ; BSR set to: 14
  8699                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8700   003DB2  8BD9               	bsf	217,5,b	;volatile
  8701                           
  8702                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8703   003DB4  0E9F               	movlw	159
  8704   003DB6  6FD6               	movwf	214,b	;volatile
  8705   003DB8                     
  8706                           ; BSR set to: 14
  8707                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8708   003DB8  8A84               	bsf	132,5,c	;volatile
  8709   003DBA                     
  8710                           ; BSR set to: 14
  8711                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8712   003DBA  8C84               	bsf	132,6,c	;volatile
  8713   003DBC                     
  8714                           ; BSR set to: 14
  8715                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8716   003DBC  9BA7               	bcf	167,5,b	;volatile
  8717   003DBE                     
  8718                           ; BSR set to: 14
  8719                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8720   003DBE  9DA7               	bcf	167,6,b	;volatile
  8721                           
  8722                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8723   003DC0  0E1D               	movlw	29
  8724   003DC2  6F1D               	movwf	29,b	;volatile
  8725                           
  8726                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8727   003DC4  0E1E               	movlw	30
  8728   003DC6  6F1C               	movwf	28,b	;volatile
  8729                           
  8730                           ;i2c.c: 18:   RD5PPS=0x1C;
  8731   003DC8  0E1C               	movlw	28
  8732   003DCA  6F6F               	movwf	111,b	;volatile
  8733                           
  8734                           ;i2c.c: 19:   RD6PPS=0x1B;
  8735   003DCC  0E1B               	movlw	27
  8736   003DCE  6F70               	movwf	112,b	;volatile
  8737   003DD0                     
  8738                           ; BSR set to: 14
  8739   003DD0  0012               	return		;funcret
  8740   003DD2                     __end_of_I2C_2_Master_Init:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _TxBufferedString *****************
  8744 ;; Defined at:
  8745 ;;		line 85 in file "serial.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  string          2    5[COMRAM] PTR unsigned char 
  8748 ;;		 -> main@buf(50), 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8764 ;;Total ram usage:        2 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; Hardware stack levels required when called: 3
  8767 ;; This function calls:
  8768 ;;		_putCharToTxBuf
  8769 ;; This function is called by:
  8770 ;;		_main
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text45
  8775   003D22                     __ptext45:
  8776                           	callstack 0
  8777   003D22                     _TxBufferedString:
  8778                           	callstack 27
  8779   003D22                     
  8780                           ;serial.c: 86:  while (*string!=0){
  8781   003D22  EF9C  F01E         	goto	l3972
  8782   003D26                     l3968:
  8783                           
  8784                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8785   003D26  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8786   003D2A  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8787   003D2E  50DF               	movf	indf2,w,c
  8788   003D30  ECE9  F01E         	call	_putCharToTxBuf
  8789   003D34  4A06               	infsnz	TxBufferedString@string^0,f,c
  8790   003D36  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8791   003D38                     l3972:
  8792                           
  8793                           ;serial.c: 86:  while (*string!=0){
  8794   003D38  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8795   003D3C  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8796   003D40  50DF               	movf	indf2,w,c
  8797   003D42  A4D8               	btfss	status,2,c
  8798   003D44  EFA6  F01E         	goto	u4201
  8799   003D48  EFA8  F01E         	goto	u4200
  8800   003D4C                     u4201:
  8801   003D4C  EF93  F01E         	goto	l3968
  8802   003D50                     u4200:
  8803   003D50  0012               	return		;funcret
  8804   003D52                     __end_of_TxBufferedString:
  8805                           	callstack 0
  8806                           
  8807 ;; *************** function _putCharToTxBuf *****************
  8808 ;; Defined at:
  8809 ;;		line 72 in file "serial.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  byte            1    wreg     unsigned char 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  byte            1    4[COMRAM] unsigned char 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      void 
  8816 ;; Registers used:
  8817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8827 ;;Total ram usage:        1 bytes
  8828 ;; Hardware stack levels used: 1
  8829 ;; Hardware stack levels required when called: 2
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_TxBufferedString
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text46
  8838   003DD2                     __ptext46:
  8839                           	callstack 0
  8840   003DD2                     _putCharToTxBuf:
  8841                           	callstack 27
  8842                           
  8843                           ;incstack = 0
  8844                           ;putCharToTxBuf@byte stored from wreg
  8845   003DD2  6E05               	movwf	putCharToTxBuf@byte^0,c
  8846   003DD4                     
  8847                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8848   003DD4  0E3B               	movlw	59
  8849   003DD6  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8850   003DD8  EFF0  F01E         	goto	u4041
  8851   003DDC  EFF2  F01E         	goto	u4040
  8852   003DE0                     u4041:
  8853   003DE0  EFF4  F01E         	goto	l3860
  8854   003DE4                     u4040:
  8855   003DE4  0E00               	movlw	0
  8856   003DE6  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  8857   003DE8                     l3860:
  8858                           
  8859                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8860   003DE8  0E00               	movlw	low _EUSART4TXbuf
  8861   003DEA  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8862   003DEC  6ED9               	movwf	fsr2l,c
  8863   003DEE  6ADA               	clrf	fsr2h,c
  8864   003DF0  0E01               	movlw	high _EUSART4TXbuf
  8865   003DF2  22DA               	addwfc	fsr2h,f,c
  8866   003DF4  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8867   003DF8  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8868   003DFA  0012               	return		;funcret
  8869   003DFC                     __end_of_putCharToTxBuf:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function _Interrupts_init *****************
  8873 ;; Defined at:
  8874 ;;		line 10 in file "interrupts.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		None
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 2
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_main
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text47
  8903   003EA4                     __ptext47:
  8904                           	callstack 0
  8905   003EA4                     _Interrupts_init:
  8906                           	callstack 28
  8907   003EA4                     
  8908                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  8909   003EA4  9AF2               	bcf	242,5,c	;volatile
  8910                           
  8911                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  8912   003EA6  010E               	movlb	14	; () banked
  8913   003EA8  812B               	bsf	43,0,b	;volatile
  8914                           
  8915                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8916   003EAA  8CF2               	bsf	242,6,c	;volatile
  8917                           
  8918                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  8919   003EAC  8EF2               	bsf	242,7,c	;volatile
  8920                           
  8921                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  8922   003EAE  872D               	bsf	45,3,b	;volatile
  8923   003EB0                     
  8924                           ; BSR set to: 14
  8925   003EB0  0012               	return		;funcret
  8926   003EB2                     __end_of_Interrupts_init:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _HighISR *****************
  8930 ;; Defined at:
  8931 ;;		line 25 in file "interrupts.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;Total ram usage:        2 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 1
  8952 ;; This function calls:
  8953 ;;		_getCharFromTxBuf
  8954 ;;		_putCharToRxBuf
  8955 ;; This function is called by:
  8956 ;;		Interrupt level 2
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	intcode
  8961   000008                     __pintcode:
  8962                           	callstack 0
  8963   000008                     _HighISR:
  8964                           	callstack 21
  8965                           
  8966                           ; BSR set to: 14
  8967                           ;incstack = 0
  8968   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8969   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  8970   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  8971   000012                     
  8972                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  8973   000012  010E               	movlb	14	; () banked
  8974   000014  A537               	btfss	55,2,b	;volatile
  8975   000016  EF0F  F000         	goto	i2u425_41
  8976   00001A  EF11  F000         	goto	i2u425_40
  8977   00001E                     i2u425_41:
  8978   00001E  EF15  F000         	goto	i2l223
  8979   000022                     i2u425_40:
  8980   000022                     
  8981                           ; BSR set to: 14
  8982                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  8983   000022  ECA9  F01E         	call	_getCharFromTxBuf	;wreg free
  8984   000026  010E               	movlb	14	; () banked
  8985   000028  6FE4               	movwf	228,b	;volatile
  8986   00002A                     i2l223:
  8987                           
  8988                           ; BSR set to: 14
  8989                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  8990   00002A  A737               	btfss	55,3,b	;volatile
  8991   00002C  EF1A  F000         	goto	i2u426_41
  8992   000030  EF1C  F000         	goto	i2u426_40
  8993   000034                     i2u426_41:
  8994   000034  EF1F  F000         	goto	i2l225
  8995   000038                     i2u426_40:
  8996   000038                     
  8997                           ; BSR set to: 14
  8998                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  8999   000038  51E3               	movf	227,w,b	;volatile
  9000   00003A  ECFE  F01E         	call	_putCharToRxBuf
  9001   00003E                     i2l225:
  9002   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9003   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  9004   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9005   000048  0011               	retfie		f
  9006   00004A                     __end_of_HighISR:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _putCharToRxBuf *****************
  9010 ;; Defined at:
  9011 ;;		line 52 in file "serial.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  byte            1    wreg     unsigned char 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  byte            1    0[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;Total ram usage:        1 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_HighISR
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text49
  9039   003DFC                     __ptext49:
  9040                           	callstack 0
  9041   003DFC                     _putCharToRxBuf:
  9042                           	callstack 21
  9043                           
  9044                           ;incstack = 0
  9045                           ;putCharToRxBuf@byte stored from wreg
  9046   003DFC  6E01               	movwf	putCharToRxBuf@byte^0,c
  9047   003DFE                     
  9048                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9049   003DFE  0E13               	movlw	19
  9050   003E00  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9051   003E02  EF05  F01F         	goto	i2u418_41
  9052   003E06  EF07  F01F         	goto	i2u418_40
  9053   003E0A                     i2u418_41:
  9054   003E0A  EF09  F01F         	goto	i2l3954
  9055   003E0E                     i2u418_40:
  9056   003E0E  0E00               	movlw	0
  9057   003E10  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  9058   003E12                     i2l3954:
  9059                           
  9060                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9061   003E12  0E3C               	movlw	low _EUSART4RXbuf
  9062   003E14  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9063   003E16  6ED9               	movwf	fsr2l,c
  9064   003E18  6ADA               	clrf	fsr2h,c
  9065   003E1A  0E01               	movlw	high _EUSART4RXbuf
  9066   003E1C  22DA               	addwfc	fsr2h,f,c
  9067   003E1E  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9068   003E22  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9069   003E24  0012               	return		;funcret
  9070   003E26                     __end_of_putCharToRxBuf:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _getCharFromTxBuf *****************
  9074 ;; Defined at:
  9075 ;;		line 66 in file "serial.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      unsigned char 
  9082 ;; Registers used:
  9083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;Total ram usage:        2 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_HighISR
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text50
  9103   003D52                     __ptext50:
  9104                           	callstack 0
  9105   003D52                     _getCharFromTxBuf:
  9106                           	callstack 21
  9107   003D52                     
  9108                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9109   003D52  0E3B               	movlw	59
  9110   003D54  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9111   003D56  EFAF  F01E         	goto	i2u419_41
  9112   003D5A  EFB1  F01E         	goto	i2u419_40
  9113   003D5E                     i2u419_41:
  9114   003D5E  EFB3  F01E         	goto	i2l3962
  9115   003D62                     i2u419_40:
  9116   003D62  0E00               	movlw	0
  9117   003D64  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  9118   003D66                     i2l3962:
  9119                           
  9120                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  9121   003D66  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  9122   003D68  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  9123   003D6A  6E01               	movwf	??_getCharFromTxBuf^0,c
  9124   003D6C  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9125   003D6E  0E00               	movlw	low _EUSART4TXbuf
  9126   003D70  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9127   003D72  6ED9               	movwf	fsr2l,c
  9128   003D74  0E01               	movlw	high _EUSART4TXbuf
  9129   003D76  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9130   003D78  6EDA               	movwf	fsr2h,c
  9131   003D7A  50DF               	movf	indf2,w,c
  9132   003D7C  0012               	return		;funcret
  9133   003D7E                     __end_of_getCharFromTxBuf:
  9134                           	callstack 0
  9135                           
  9136                           	psect	rparam
  9137   000000                     
  9138                           	psect	temp
  9139   00005B                     btemp:
  9140                           	callstack 0
  9141   00005B                     	ds	1
  9142   000000                     int$flags	set	btemp
  9143   000000                     wtemp8	set	btemp+1
  9144   000000                     ttemp5	set	btemp+1
  9145   000000                     ttemp6	set	btemp+4
  9146   000000                     ttemp7	set	btemp+8
  9147                           
  9148                           	psect	idloc
  9149                           
  9150                           ;Config register IDLOC0 @ 0x200000
  9151                           ;	unspecified, using default values
  9152   200000                     	org	2097152
  9153   200000  0FFF               	dw	4095
  9154                           
  9155                           ;Config register IDLOC1 @ 0x200002
  9156                           ;	unspecified, using default values
  9157   200002                     	org	2097154
  9158   200002  0FFF               	dw	4095
  9159                           
  9160                           ;Config register IDLOC2 @ 0x200004
  9161                           ;	unspecified, using default values
  9162   200004                     	org	2097156
  9163   200004  0FFF               	dw	4095
  9164                           
  9165                           ;Config register IDLOC3 @ 0x200006
  9166                           ;	unspecified, using default values
  9167   200006                     	org	2097158
  9168   200006  0FFF               	dw	4095
  9169                           
  9170                           ;Config register IDLOC4 @ 0x200008
  9171                           ;	unspecified, using default values
  9172   200008                     	org	2097160
  9173   200008  0FFF               	dw	4095
  9174                           
  9175                           ;Config register IDLOC5 @ 0x20000A
  9176                           ;	unspecified, using default values
  9177   20000A                     	org	2097162
  9178   20000A  0FFF               	dw	4095
  9179                           
  9180                           ;Config register IDLOC6 @ 0x20000C
  9181                           ;	unspecified, using default values
  9182   20000C                     	org	2097164
  9183   20000C  0FFF               	dw	4095
  9184                           
  9185                           ;Config register IDLOC7 @ 0x20000E
  9186                           ;	unspecified, using default values
  9187   20000E                     	org	2097166
  9188   20000E  0FFF               	dw	4095
  9189                           
  9190                           	psect	config
  9191                           
  9192                           ;Config register CONFIG1L @ 0x300000
  9193                           ;	External Oscillator mode Selection bits
  9194                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9195                           ;	Power-up default value for COSC bits
  9196                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9197   300000                     	org	3145728
  9198   300000  AA                 	db	170
  9199                           
  9200                           ;Config register CONFIG1H @ 0x300001
  9201                           ;	unspecified, using default values
  9202                           ;	Clock Out Enable bit
  9203                           ;	CLKOUTEN = 0x1, unprogrammed default
  9204                           ;	Clock Switch Enable bit
  9205                           ;	CSWEN = 0x1, unprogrammed default
  9206                           ;	Fail-Safe Clock Monitor Enable bit
  9207                           ;	FCMEN = 0x1, unprogrammed default
  9208   300001                     	org	3145729
  9209   300001  FF                 	db	255
  9210                           
  9211                           ;Config register CONFIG2L @ 0x300002
  9212                           ;	unspecified, using default values
  9213                           ;	Master Clear Enable bit
  9214                           ;	MCLRE = 0x1, unprogrammed default
  9215                           ;	Power-up Timer Enable bit
  9216                           ;	PWRTE = 0x1, unprogrammed default
  9217                           ;	Low-power BOR enable bit
  9218                           ;	LPBOREN = 0x1, unprogrammed default
  9219                           ;	Brown-out Reset Enable bits
  9220                           ;	BOREN = 0x3, unprogrammed default
  9221   300002                     	org	3145730
  9222   300002  FF                 	db	255
  9223                           
  9224                           ;Config register CONFIG2H @ 0x300003
  9225                           ;	unspecified, using default values
  9226                           ;	Brown Out Reset Voltage selection bits
  9227                           ;	BORV = 0x3, unprogrammed default
  9228                           ;	ZCD Disable bit
  9229                           ;	ZCD = 0x1, unprogrammed default
  9230                           ;	PPSLOCK bit One-Way Set Enable bit
  9231                           ;	PPS1WAY = 0x1, unprogrammed default
  9232                           ;	Stack Full/Underflow Reset Enable bit
  9233                           ;	STVREN = 0x1, unprogrammed default
  9234                           ;	Debugger Enable bit
  9235                           ;	DEBUG = 0x1, unprogrammed default
  9236                           ;	Extended Instruction Set Enable bit
  9237                           ;	XINST = 0x1, unprogrammed default
  9238   300003                     	org	3145731
  9239   300003  FF                 	db	255
  9240                           
  9241                           ;Config register CONFIG3L @ 0x300004
  9242                           ;	WDT Period Select bits
  9243                           ;	WDTCPS = 0x1F, unprogrammed default
  9244                           ;	WDT operating mode
  9245                           ;	WDTE = OFF, WDT Disabled
  9246   300004                     	org	3145732
  9247   300004  9F                 	db	159
  9248                           
  9249                           ;Config register CONFIG3H @ 0x300005
  9250                           ;	unspecified, using default values
  9251                           ;	WDT Window Select bits
  9252                           ;	WDTCWS = 0x7, unprogrammed default
  9253                           ;	WDT input clock selector
  9254                           ;	WDTCCS = 0x7, unprogrammed default
  9255   300005                     	org	3145733
  9256   300005  FF                 	db	255
  9257                           
  9258                           ;Config register CONFIG4L @ 0x300006
  9259                           ;	unspecified, using default values
  9260                           ;	Write Protection Block 0
  9261                           ;	WRT0 = 0x1, unprogrammed default
  9262                           ;	Write Protection Block 1
  9263                           ;	WRT1 = 0x1, unprogrammed default
  9264                           ;	Write Protection Block 2
  9265                           ;	WRT2 = 0x1, unprogrammed default
  9266                           ;	Write Protection Block 3
  9267                           ;	WRT3 = 0x1, unprogrammed default
  9268                           ;	Write Protection Block 3
  9269                           ;	WRT4 = 0x1, unprogrammed default
  9270                           ;	Write Protection Block 3
  9271                           ;	WRT5 = 0x1, unprogrammed default
  9272                           ;	Write Protection Block 3
  9273                           ;	WRT6 = 0x1, unprogrammed default
  9274                           ;	Write Protection Block 3
  9275                           ;	WRT7 = 0x1, unprogrammed default
  9276   300006                     	org	3145734
  9277   300006  FF                 	db	255
  9278                           
  9279                           ;Config register CONFIG4H @ 0x300007
  9280                           ;	unspecified, using default values
  9281                           ;	Configuration Register Write Protection bit
  9282                           ;	WRTC = 0x1, unprogrammed default
  9283                           ;	Boot Block Write Protection bit
  9284                           ;	WRTB = 0x1, unprogrammed default
  9285                           ;	Data EEPROM Write Protection bit
  9286                           ;	WRTD = 0x1, unprogrammed default
  9287                           ;	Scanner Enable bit
  9288                           ;	SCANE = 0x1, unprogrammed default
  9289                           ;	Low Voltage Programming Enable bit
  9290                           ;	LVP = 0x1, unprogrammed default
  9291   300007                     	org	3145735
  9292   300007  FF                 	db	255
  9293                           
  9294                           ;Config register CONFIG5L @ 0x300008
  9295                           ;	unspecified, using default values
  9296                           ;	UserNVM Program Memory Code Protection bit
  9297                           ;	CP = 0x1, unprogrammed default
  9298                           ;	DataNVM Memory Code Protection bit
  9299                           ;	CPD = 0x1, unprogrammed default
  9300   300008                     	org	3145736
  9301   300008  FF                 	db	255
  9302                           
  9303                           ;Config register CONFIG5H @ 0x300009
  9304                           ;	unspecified, using default values
  9305   300009                     	org	3145737
  9306   300009  FF                 	db	255
  9307                           
  9308                           ;Config register CONFIG6L @ 0x30000A
  9309                           ;	unspecified, using default values
  9310                           ;	Table Read Protection Block 0
  9311                           ;	EBTR0 = 0x1, unprogrammed default
  9312                           ;	Table Read Protection Block 1
  9313                           ;	EBTR1 = 0x1, unprogrammed default
  9314                           ;	Table Read Protection Block 2
  9315                           ;	EBTR2 = 0x1, unprogrammed default
  9316                           ;	Table Read Protection Block 3
  9317                           ;	EBTR3 = 0x1, unprogrammed default
  9318                           ;	Table Read Protection Block 4
  9319                           ;	EBTR4 = 0x1, unprogrammed default
  9320                           ;	Table Read Protection Block 5
  9321                           ;	EBTR5 = 0x1, unprogrammed default
  9322                           ;	Table Read Protection Block 6
  9323                           ;	EBTR6 = 0x1, unprogrammed default
  9324                           ;	Table Read Protection Block 7
  9325                           ;	EBTR7 = 0x1, unprogrammed default
  9326   30000A                     	org	3145738
  9327   30000A  FF                 	db	255
  9328                           
  9329                           ;Config register CONFIG6H @ 0x30000B
  9330                           ;	unspecified, using default values
  9331                           ;	Boot Block Table Read Protection bit
  9332                           ;	EBTRB = 0x1, unprogrammed default
  9333   30000B                     	org	3145739
  9334   30000B  FF                 	db	255
  9335                           tosu	equ	0xFFF
  9336                           tosh	equ	0xFFE
  9337                           tosl	equ	0xFFD
  9338                           stkptr	equ	0xFFC
  9339                           pclatu	equ	0xFFB
  9340                           pclath	equ	0xFFA
  9341                           pcl	equ	0xFF9
  9342                           tblptru	equ	0xFF8
  9343                           tblptrh	equ	0xFF7
  9344                           tblptrl	equ	0xFF6
  9345                           tablat	equ	0xFF5
  9346                           prodh	equ	0xFF4
  9347                           prodl	equ	0xFF3
  9348                           indf0	equ	0xFEF
  9349                           postinc0	equ	0xFEE
  9350                           postdec0	equ	0xFED
  9351                           preinc0	equ	0xFEC
  9352                           plusw0	equ	0xFEB
  9353                           fsr0h	equ	0xFEA
  9354                           fsr0l	equ	0xFE9
  9355                           wreg	equ	0xFE8
  9356                           indf1	equ	0xFE7
  9357                           postinc1	equ	0xFE6
  9358                           postdec1	equ	0xFE5
  9359                           preinc1	equ	0xFE4
  9360                           plusw1	equ	0xFE3
  9361                           fsr1h	equ	0xFE2
  9362                           fsr1l	equ	0xFE1
  9363                           bsr	equ	0xFE0
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           postdec2	equ	0xFDD
  9367                           preinc2	equ	0xFDC
  9368                           plusw2	equ	0xFDB
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        1
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160    135     156
    BANK1           256      0     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1344$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1260$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1260$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 16
		 -> rel(BANK1[16]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   40512
                                             83 BANK0     52    52      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   35003
                                             52 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34505
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34035
                                             66 COMRAM    19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26432
                                             49 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5612
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3343
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    4376
                                             29 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     518
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B0       7       68.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      9C       5       97.5%
BITBIGSFRhlhll      8F      0       0      38        0.0%
BITBIGSFRhhlh       6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBIGSFRlllhh      36      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      41        0.0%
BITBIGSFRlllhll     2A      0       0      44        0.0%
BITBIGSFRlllll      26      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhll      D      0       0      47        0.0%
BITBIGSFRlllhlh      C      0       0      43        0.0%
BITBIGSFRlllhll      9      0       0      45        0.0%
BITBIGSFRhllll       8      0       0      39        0.0%
BITBIGSFRllllh       6      0       0      48        0.0%
BITBIGSFRhlhlh       5      0       0      37        0.0%
BITBIGSFRhlhhh       2      0       0      35        0.0%
BITBIGSFRhhll        2      0       0      34        0.0%
BITBIGSFRhlhhl       1      0       0      36        0.0%
BITBIGSFRlllhll      1      0       0      46        0.0%
BITBIGSFRlh          1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6      50        0.0%
DATA                 0      0     1A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 23:42:24 2023

               _color_read_Red 3A38                   ___fldiv@aexp 001D                   ___fldiv@bexp 001C  
               _color_read_lum 39E8                   ___fldiv@sign 0015                _color_read_Blue 3AD8  
                           l21 3D20                             l30 3A86                             l24 3E6C  
                           l33 3AD6                             l42 2F7C                             l27 3A36  
                           l36 3B26                             l39 38F0                             l73 3DD0  
                           l82 3EDA                             l91 3EBC                             l76 3E26  
                           l85 3EC6                             l94 3C36                             l79 3E4C  
                           l88 3ED0               _color_read_Green 3A88                readColours@vals 0010  
            ??_Interrupts_init 0005                            l133 3E8A                            l217 3EB0  
                          l170 3DFA                            l403 3104                            l173 3EA2  
                          l184 3DA6                            l416 3268                            l179 3D50  
                          l554 342C                            l563 3CEC                            l548 37B2  
                          l910 1FA0                            l559 3472                            l903 1DAA  
                          l920 20D0                            l912 2018                            l913 2006  
                          l817 1A14                            l834 1B2E                            l826 1CE4  
                          l818 1A02                            l586 336E                            l907 210E  
                          l843 1BFE                            l819 19C8                            l844 1BEC  
                          l871 24A8                            l951 2D2E                            l944 2C96  
                          l873 2308                            l882 234E                            l947 2DF2  
                          l859 3B6C                            l884 23C6                            l876 22CC  
                          l885 23B4                            l958 2D8A                            l967 3996  
                          l999 37D6                            _abs 3C38                            _pad 37B4  
                          _rel 01A0                            wreg 000FE8                   ___flmul@aexp 0012  
                 ___flmul@bexp 0017                   ___flmul@sign 0011                   ___flmul@temp 001C  
                 ___flmul@prod 0018                   ___fltol@exp1 000E                           l1010 2844  
                         l1003 382C                           l1011 288A                           l1022 2A2C  
                         l1103 3944                           l1008 283C                           l1121 3C76  
                         l1113 3570                           l1033 1824                           l1130 2B82  
                         ?_abs 0017                           l1036 11BE                           l1141 3892  
                         l1118 3C6E                           l1038 1004                           l1127 2C3E  
                         l1081 27AE                           l1170 3EDC                           l1138 3882  
                         l1066 1606                           l1147 39E6                           l1159 3708  
                         l1167 3BF4                           l1176 3BB0                           l4200 187C  
                         l5000 0EBE                           l4210 18AC                           l4202 188C  
                         l5010 0F04                           l5002 0EC2                           l4300 1A82  
                         l4220 18EC                           l4212 18BA                           l4204 1892  
                         l5100 136A                           l5012 0F0C                           l5004 0EE8  
                         l5020 0F4E                           l3422 3E26                           l4310 1AC8  
                         l4302 1A90                           l4230 1926                           l4222 18EE  
                         l4214 18BC                           l4206 18A4                           l5110 1436  
                         l5102 1388                           l5030 0F98                           l5022 0F74  
                         l5014 0F24                           l5006 0EFA                           l3424 3E36  
                         l4400 2FB0                           l4320 1B44                           l4312 1AFC  
                         l4304 1A92                           l4240 193A                           l4232 192A  
                         l4216 18CC                           l4224 18F6                           l4208 18A6  
                         l5120 14E6                           l5112 1446                           l5104 13BC  
                         l5040 0FCE                           l5024 0F86                           l5016 0F2E  
                         l5008 0EFE                           l5200 24AA                           l4410 2FF2  
                         l4402 2FB4                           l4170 3640                           l4330 1B80  
                         l4322 1B54                           l4314 1AFE                           l4306 1A9C  
                         l4250 194E                           l4242 193E                           l4234 192E  
                         l4226 1906                           l4218 18DC                           l5130 154A  
                         l5122 151A                           l5114 1456                           l5106 13EE  
                         l5050 108C                           l5026 0F8A                           l5210 2502  
                         l5202 24D2                           l3700 3ED2                           l4500 2192  
                         l4420 304C                           l4412 3010                           l4404 2FC2  
                         l4180 36C2                           l4172 3652                           l4340 1BAC  
                         l4332 1B82                           l4316 1B0E                           l4308 1AA2  
                         l4260 1962                           l4252 1952                           l4244 1942  
                         l4236 1932                           l4228 1918                           l5140 15FC  
                         l5132 1550                           l5124 152E                           l5116 148A  
                         l5108 1404                           l5060 114C                           l5052 10BE  
                         l5044 1014                           l5028 0F90                           l5220 25C8  
                         l5212 2522                           l5204 24E0                           l5300 3946  
                         l3702 3ED6                           l3710 3ECC                           l4502 21A2  
                         l4510 21CC                           l4422 307A                           l4414 3018  
                         l4430 30B4                           l4406 2FE2                           l4174 3664  
                         l4350 1BE4                           l4334 1B90                           l4326 1B68  
                         l4342 1BAE                           l4318 1B1E                           l4270 19C0  
                         l4254 1956                           l4246 1946                           l4238 1936  
                         l4262 1966                           l4190 1842                           l5150 1640  
                         l5142 1618                           l5134 1558                           l5118 14E0  
                         l5126 1532                           l5070 11E2                           l5054 10FC  
                         l5046 101A                           l5038 0FB4                           l5222 25D8  
                         l5214 2542                           l5206 24EE                           l5302 3958  
                         l3704 3EB4                           l4600 2496                           l4520 220E  
                         l4512 21DC                           l4504 21B2                           l3720 3C04  
                         l3712 3EBE                           l4432 30C4                           l4424 309A  
                         l4416 302C                           l4408 2FE6                           l4440 310A  
                         l4176 366E                           l4360 1C62                           l4336 1B98  
                         l4328 1B72                           l4344 1BBC                           l4280 19F6  
                         l4272 19D6                           l4264 196A                           l4256 195A  
                         l4248 194A                           l4192 1852                           l4184 1826  
                         l5152 1648                           l5144 1626                           l5160 1668  
                         l5136 1564                           l5128 1542                           l5080 1216  
                         l5072 11EA                           l5056 1110                           l5064 118C  
                         l5048 104E                           l5224 25EE                           l5232 2606  
                         l5216 2598                           l5208 24F2                           l5304 3960  
                         l5320 3576                           l3706 3EB8                           l4602 249C  
                         l4514 21F2                           l4506 21C2                           l3722 3C0C  
                         l3714 3EC2                           l4434 30E4                           l4426 309C  
                         l4418 303A                           l4450 316A                           l4442 3118  
                         l4178 368C                           l4370 1CA8                           l4354 1C0E  
                         l4362 1C64                           l4346 1BC0                           l4338 1B9C  
                         l4290 1A46                           l4282 1A00                           l4274 19E2  
                         l4266 1994                           l4258 195E                           l4194 1862  
                         l4186 1832                           l5170 16EE                           l5162 167A  
                         l5154 1658                           l5146 1636                           l5138 15DC  
                         l5090 1260                           l5082 122E                           l5074 11F2  
                         l5066 11C6                           l5058 1144                           l5242 26C4  
                         l5226 25F6                           l5234 2638                           l5306 3968  
                         l5330 3586                           l5322 357A                           l3820 3DB2  
                         l3708 3EC8                           l4604 249E                           l4540 2290  
                         l4532 2246                           l4516 2202                           l4524 2222  
                         l4508 21C4                           l3900 2D9A                           l3724 3C32  
                         l3716 3BF8                           l4428 30AE                           l4460 31E0  
                         l4452 3188                           l4444 3138                           l4700 1FB0  
                         l4620 1D12                           l4612 1CE6                           l4380 1CD2  
                         l4372 1CB6                           l4364 1C74                           l4356 1C1A  
                         l4348 1BCE                           l4292 1A56                           l4284 1A22  
                         l4276 19E6                           l4268 19B0                           l4196 1872  
                         l4188 1840                           l5180 1768                           l5172 1722  
                         l5164 168C                           l5156 165C                           l5148 163A  
                         l5092 1274                           l5084 1240                           l5076 11F6  
                         l5068 11D6                           l5252 2740                           l5244 26EE  
                         l5236 265C                           l5228 25FE                           l5308 3984  
                         l5340 35C4                           l5332 3588                           l5324 357E  
                         l3822 3DB8                           l3830 3E50                           l4550 22D6  
                         l4542 2298                           l4534 2260                           l4526 2232  
                         l4518 220A                           l3910 2DE2                           l3902 2D9E  
                         l3726 3C34                           l3718 3BFC                           l4470 3248  
                         l4462 3200                           l4454 3190                           l4446 313C  
                         l4438 3106                           l4390 3BD0                           l4702 1FBE  
                         l4630 1D4E                           l4622 1D22                           l4614 1CF2  
                         l4382 1CD4                           l4374 1CBC                           l4366 1C84  
                         l4358 1C28                           l4294 1A64                           l4286 1A32  
                         l4278 19F4                           l4198 1874                           l5190 17D6  
                         l5182 1770                           l5174 172A                           l5166 1690  
                         l5158 1662                           l5094 12D8                           l5078 1208  
                         l5086 1248                           l5246 270E                           l5238 2690  
                         l5254 2770                           l5342 3612                           l5334 358A  
                         l5326 3582                           l5318 3572                           ?_pad 0015  
                         l3824 3DBA                           l4560 232E                           l4552 22F4  
                         l4544 22A8                           l4536 2270                           l4528 2232  
                         l4480 212C                           l3904 2DC2                           l3840 3A7E  
                         l3832 39E8                           l4464 3212                           l4456 31A4  
                         l4448 314A                           l4392 3BD4                           l4712 2028  
                         l4720 2070                           l4704 1FC2                           l4640 1D84  
                         l4632 1D54                           l4624 1D32                           l4616 1D00  
                         l4376 1CBE                           l4368 1CA4                           l4296 1A72  
                         l4800 3294                           l5192 17E6                           l5184 1780  
                         l5168 1696                           l5176 172E                           l5096 1330  
                         l5088 1250                           l5344 3622                           l5336 35A4  
                         l5328 3584                           l3826 3DBC                           l3818 3DA8  
                         l3930 3D0C                           l4570 236C                           l4562 2334  
                         l4554 22F6                           l4546 22BC                           l4538 2280  
                         l4482 213C                           l4490 2166                           l4474 2110  
                         l3906 2DD2                           l3850 3AD8                           l3834 3A2E  
                         l4394 2F7E                           l4458 31B2                           l4466 3218  
                         l4386 3BB2                           l4730 20E4                           l4722 208A  
                         l4714 2034                           l4706 1FD0                           l4642 1D94  
                         l4634 1D62                           l4626 1D38                           l4618 1D02  
                         l4378 1CC4                           l4298 1A7E                           l4810 32E2  
                         l4802 32BE                           l5194 17FC                           l5186 17B0  
                         l5178 174C                           l5098 1364                           l5258 2782  
                         l5290 38FE                           l5346 3626                           l5338 35B0  
                         l3860 3DE8                           l3828 3DBE                           l3932 3D16  
                         l3924 3CEE                           l4580 23D6                           l4572 2370  
                         l4564 233E                           l4556 2306                           l4548 22CA  
                         l4492 2176                           l4484 214C                           l4476 211C  
                         l3908 2DE0                           l3940 3E78                           l3852 3B1E  
                         l3844 3A88                           l4396 2F82                           l4468 3228  
                         l4388 3BBE                           l4732 20F2                           l4724 209E  
                         l4716 2042                           l4708 1FFE                           l4660 1E16  
                         l4652 1DDE                           l4644 1D9A                           l4636 1D64  
                         l4628 1D48                           l4820 330E                           l4804 32C0  
                         l4900 2B72                           l5196 1804                           l5188 17BE  
                         l5292 391A                           l3862 3DF8                           l3926 3CF2  
                         l4590 2438                           l4582 23E2                           l4574 237E  
                         l4566 234C                           l4558 2318                           l4494 217C  
                         l4486 215C                           l4478 212A                           l3870 2C52  
                         l3942 3E7A                           l3846 3ACE                           l3838 3A38  
                         l3934 3894                           l4398 2F90                           l4750 3738  
                         l4734 20F4                           l4726 20B8                           l4718 206C  
                         l4670 1E60                           l4662 1E2E                           l4654 1DEA  
                         l4646 1DBA                           l4638 1D74                           l4742 3B28  
                         l4830 333E                           l4806 32D0                           l4910 2C2E  
                         l4902 2BA6                           l5470 26D8                           l5294 393A  
                         l3856 3DD4                           l3928 3CFC                           l4592 244E  
                         l4584 23F0                           l4576 23AC                           l4568 235E  
                         l4496 2182                           l4488 215E                           l3880 2CD0  
                         l3872 2C60                           l3944 3E84                           l3864 3E8C  
                         l4840 37C2                           l4760 37B0                           l4752 3748  
                         l4728 20D4                           l4736 20FA                           l4680 1EB6  
                         l4672 1E70                           l4664 1E3A                           l4656 1DF4  
                         l4648 1DCA                           l4744 3B38                           l4832 334E  
                         l4816 32FA                           l4808 32D4                           l4904 2BE2  
                         l4920 39BC                           l5472 2762                           l5288 38F2  
                         l3858 3DE4                           l3970 3D34                           l4594 2468  
                         l4586 241A                           l4498 2190                           l3890 2D24  
                         l3882 2CD8                           l3874 2CA6                           l5298 2DF4  
                         l3946 3E86                           l3938 3E6E                           l4850 3818  
                         l4842 37CE                           l4930 27E4                           l4754 3776  
                         l4770 33DC                           l4738 20FE                           l4690 1F5A  
                         l4682 1ED2                           l4674 1E7C                           l4666 1E46  
                         l4658 1E0A                           l4834 335E                           l4826 3322  
                         l4818 3304                           l4906 2BF6                           l4922 39C8  
                         l4914 3998                           l3972 3D38                           l4596 2484  
                         l4588 241E                           l3892 2D60                           l3884 2CE4  
                         l3876 2CBC                           l3868 2C42                           l3948 3E88  
                         l3980 3DA0                           l4852 3C38                           l4844 37E2  
                         l4940 285C                           l4932 27F4                           l4756 3786  
                         l4748 370A                           l4780 346A                           l4772 33EC  
                         l4764 3370                           l4692 1F68                           l4684 1EDE  
                         l4676 1E8C                           l4668 1E54                           l4828 332E  
                         l4860 34D2                           l4908 2C1E                           l4916 39AC  
                         l4924 39CC                           l5468 261A                           l3982 3EA4  
                         l3966 3D22                           l4598 2488                           l3894 2D6C  
                         l3886 2D16                           l3974 3D7E                           l4854 3C52  
                         l4846 37F6                           l4838 37B4                           l4950 2892  
                         l4942 2862                           l4934 2814                           l4926 27B0  
                         l4758 37AA                           l4782 3470                           l4774 33FA  
                         l4766 339E                           l4694 1F86                           l4686 1EFA  
                         l4678 1EA6                           l4790 3CDC                           l4870 3524  
                         l4862 34FA                           l4918 39B8                           l3968 3D26  
                         l3896 2D7A                           l3888 2D18                           l3976 3D92  
                         l4848 37FA                           l4960 2930                           l4952 289C  
                         l4944 2872                           l4936 2830                           l4928 27D0  
                         l4776 340C                           l4768 33AE                           l4696 1F90  
                         l4688 1F24                           l4864 3506                           l4856 3474  
                         l4880 3B7E                           l3898 2D98                           l3978 3D96  
                         l4970 29F6                           l4954 28A2                           l4962 2994  
                         l4946 287E                           l4938 284C                           l4778 341A  
                         l4698 1F9E                           l4786 3CB6                           l4794 326A  
                         l4874 3568                           l4858 3494                           l4890 2AA4  
                         l4882 382E                           l4972 29FC                           l4964 29AE  
                         l4956 2924                           l4948 2886                           l4788 3CCC  
                         l4796 3280                           l4868 3512                           l4892 2AB8  
                         l4884 384C                           l4980 0E32                           l4974 2A0C  
                         l4966 29CC                           l4958 292A                           l4894 2AC6  
                         l4886 2A2E                           l4878 3B6E                           l4990 0E82  
                         l4982 0E42                           l4968 29E6                           l4888 2A4E  
                         l4992 0E8A                           l4984 0E50                           l4898 2B36  
                         l4994 0E9A                           l4986 0E54                           l4978 0E2C  
                         l4996 0EAA                           l4988 0E78                           l4998 0EB6  
                         STR_1 0E01                           STR_2 0E22                           STR_5 0E26  
                 _BAUD4CONbits 000EE9                           u4100 2D12                           u4101 2D0E  
                         u4110 2D5C                           u4111 2D58                           u4040 3DE4  
                         u4200 3D50                           u5000 237E                           u4120 2D7A  
                         u4041 3DE0                           u4201 3D4C                           u5001 237A  
                         u4121 2D76                           u5010 23AC                           u4130 2D8A  
                         u4050 3EA0                           u4210 3D92                           u5011 23A8  
                         u4131 2D86                           u4051 3E9A                           u4211 3D8E  
                         u5020 23C2                           u4140 2D98                           u4060 3EA2  
                         u4300 368C                           u5100 1D22                           u5021 23BE  
                         u4141 2D94                           u4301 3688                           u5101 1D1E  
                         u5030 23D6                           u4150 2DD2                           u4070 2C52  
                         u4310 36C2                           u5110 1D62                           u5031 23D2  
                         u4151 2DCE                           u4071 2C4E                           u4311 36BE  
                         u5111 1D5E                           u5040 23F0                           u4160 2DE0  
                         u4080 2C60                           u5200 1FFE                           u5120 1D74  
                         u4400 1926                           u4320 1840                           u6000 1618  
                         u5041 23EC                           u4161 2DDC                           u4081 2C5C  
                         u5201 1FFA                           u5121 1D70                           u4401 1922  
                         u4321 183C                           u6001 1614                           u5050 2438  
                         u4090 2CBC                           u5210 2014                           u5130 1D84  
                         u4410 1994                           u4330 1852                           u6010 1626  
                         u5051 2434                           u4091 2CB8                           u5211 2010  
                         u5131 1D80                           u4411 1990                           u4331 184E  
                         u6011 1622                           u3540 3E36                           u5060 2468  
                         u5300 339E                           u5220 2028                           u5140 1DBA  
                         u4500 1A72                           u4420 19AC                           u4340 1862  
                         u6020 167A                           u6100 2542                           u3541 3E32  
                         u5061 2464                           u5301 339A                           u5221 2024  
                         u5141 1DB6                           u4501 1A6E                           u4421 19A6  
                         u4341 185E                           u6021 1676                           u6101 253E  
                         u3550 3E4C                           u5070 2496                           u5310 33DC  
                         u5230 2042                           u5150 1DCA                           u4510 1A90  
                         u4430 19AE                           u4350 18A4                           u6030 174C  
                         u6110 2658                           u3551 3E48                           u5071 2492  
                         u5311 33D8                           u5231 203E                           u5151 1DC6  
                         u4511 1A8C                           u4351 18A0                           u6031 1748  
                         u6111 2654                           u4280 3652                           u5320 33FA  
                         u5240 208A                           u5160 1F44                           u5080 1D00  
                         u4600 1BCE                           u4520 1AC8                           u4440 19D6  
                         u4360 18BA                           u5400 331E                           u6040 1768  
                         u6120 393A                           u4281 364E                           u5321 33F6  
                         u5241 2086                           u5081 1CFC                           u4601 1BCA  
                         u4521 1AC4                           u4441 19D2                           u4361 18B6  
                         u5401 331A                           u6041 1764                           u6121 3936  
                         u4290 3664                           u5330 341A                           u5250 20B8  
                         u5170 1F9E                           u5090 1D12                           u4610 1BE4  
                         u4530 1B0E                           u4450 19F4                           u4370 18CC  
                         u5410 333E                           u6050 17D0                           u4291 3660  
                         u5331 3416                           u5251 20B4                           u5171 1F9A  
                         u5091 1D0E                           u4611 1BE0                           u4531 1B0A  
                         u4451 19F0                           u4371 18C8                           u5411 333A  
                         u6051 17CA                           u5340 346A                           u5260 20F2  
                         u5180 1FBE                           u4700 1CD2                           u4620 1BFA  
                         u4540 1B44                           u4460 1A14                           u4380 18DC  
                         u5420 334E                           u6060 17D2                           u5341 3466  
                         u5261 20EE                           u5181 1FBA                           u5165 1F3A  
                         u4701 1CCE                           u4621 1BF6                           u4541 1B40  
                         u4461 1A10                           u4381 18D8                           u5421 334A  
                         u4710 3BF4                           u5430 37C2                           u5270 3738  
                         u5190 1FD0                           u5350 3CCC                           u4630 1C0E  
                         u4550 1B54                           u4470 1A22                           u4390 1918  
                         u5510 355E                           u6070 17E6                           u6150 3638  
                         u4711 3BF0                           u5431 37BE                           u5271 3734  
                         u5191 1FCC                           u5351 3CC8                           u4631 1C0A  
                         u4551 1B50                           u4471 1A1E                           u4391 1914  
                         u5511 3558                           u6071 17E2                           u6151 3634  
                         u4720 2F90                           u4800 314A                           u5440 3818  
                         u5280 3776                           u4640 1C28                           u4560 1B80  
                         u4480 1A32                           u5360 3280                           u5520 3560  
                         u5600 2B56                           u6080 24D2                           u4721 2F8C  
                         u4801 3146                           u5441 3814                           u5281 3772  
                         u4641 1C24                           u4561 1B7C                           u4481 1A2E  
                         u5361 327C                           u5505 3536                           u6081 24CE  
                         u4730 2FC2                           u4810 3188                           u5450 3C52  
                         u5290 37AA                           u4650 1C62                           u4570 1B90  
                         u4490 1A64                           u5370 32B4                           u5610 2B72  
                         u5530 3BB0                           u6090 2522                           u4731 2FBE  
                         u4811 3184                           u5451 3C4E                           u5291 37A6  
                         u4651 1C5E                           u4571 1B8C                           u4491 1A60  
                         u5611 2B6E                           u5531 3BAC                           u6091 251E  
                         u4900 21B2                           u4820 31B2                           u5700 285C  
                         u4660 1C74                           u4580 1BAC                           u5380 32E2  
                         u5460 34B4                           u5620 2BC6                           u5540 384C  
                         u4901 21AE                           u4741 2FEC                           u4821 31AE  
                         u5701 2858                           u4661 1C70                           u4581 1BA8  
                         u5381 32DE                           u5605 2B4C                           u5541 3848  
                         u4910 21F2                           u4750 3010                           u4830 31E0  
                         u5710 2872                           u4670 1C84                           u4590 1BBC  
                         u5390 32F6                           u5470 34D2                           u5630 2BE2  
                         u5550 2A76                           u4911 21EE                           u4751 300C  
                         u4831 31DC                           u5711 286E                           u4671 1C80  
                         u4591 1BB8                           u5391 32F2                           u5375 32AA  
                         u5471 34CE                           u5631 2BDE                           u6167 3596  
                         u4920 2232                           u4760 303A                           u4840 3228  
                         u5720 29AE                           u4680 1CA4                           u5480 34FA  
                         u5640 2C1E                           u5560 2AA4                           u5800 0EFA  
                         u6177 3D02                           u4921 222E                           u4761 3036  
                         u4841 3224                           u5721 29AA                           u4681 1CA0  
                         u5481 34F6                           u5465 34AA                           u5641 2C1A  
                         u5625 2BBC                           u5561 2AA0                           u5801 0EF6  
                         u4930 22A8                           u4850 212A                           u4770 307A  
                         u5730 29CC                           u4690 1CB6                           u5490 3524  
                         u5570 2AC6                           u5650 39E6                           u5810 0F74  
                         u4931 22A4                           u4851 2126                           u4771 3076  
                         u5731 29C8                           u4691 1CB2                           u5491 3520  
                         u5571 2AC2                           u5555 2A6C                           u5651 39E2  
                         u5811 0F70                           u4940 22CA                           u4860 213C  
                         u3980 3C20                           u4780 30C4                           u5740 29E6  
                         u5660 27E0                           u5900 1208                           u5820 0F86  
                         u4941 22C6                           u4861 2138                           u3981 3C18  
                         u4781 30C0                           u5741 29E2                           u5661 27DA  
                         u5901 1204                           u5821 0F82                           u4950 22F4  
                         u4870 214C                           u4790 3118                           u5750 29F6  
                         u5670 27E2                           u5590 2B32                           u5910 1216  
                         u5830 1000                           u4951 22F0                           u4871 2148  
                         u4791 3114                           u5751 29F2                           u5591 2B2E  
                         u5911 1212                           u5831 0FFC                           u4960 2318  
                         u4880 2190                           u5680 27F4                           u5920 1240  
                         u5840 108C                           u5760 0E50                           u4961 2314  
                         u4881 218C                           u5681 27F0                           u5585 2ADA  
                         u5921 123C                           u5841 1088                           u5761 0E4C  
                         u4970 232E                           u4890 21A2                           u5690 2830  
                         u5586 2AE4                           u5930 1388                           u5850 10BE  
                         u5770 0E9A                           u4971 232A                           u4891 219E  
                         u5691 282C                           u5587 2AF4                           u5931 1384  
                         u5851 10BA                           u5771 0E96                           u4980 234C  
                         u5940 13EE                           u5860 10FC                           u5780 0EAA  
                         u4981 2348                           u5941 13EA                           u5861 10F8  
                         u5781 0EA6                           u4990 236C                           u3998 3C22  
                         u5950 1436                           u5870 1188                           u5790 0EE8  
                         u4991 2368                           u5951 1432                           u5871 1184  
                         u5791 0EE4                           u5960 1446                           u5880 11BE  
                         u5961 1442                           u5881 11BA                           u5970 14E0  
                         u5890 11D6                           u5971 14DC                           u5891 11D2  
                         u5980 152E                           u5981 152A                           u5990 15DC  
                         u5991 15D8                           abs@a 0017                           _dbuf 0150  
                         _labs 382E                           _main 3572                           _dtoa 27B0  
                         _prec 00F1                           _vals 00F3                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                  ___fpclassifyf 3474  
                         prodh 000FF4                           prodl 000FF3                           start 004A  
              ___fldiv@new_exp 0016         __end_of_color_read_Red 3A88                __end_of_HighISR 004A  
       __end_of_color_read_lum 3A38                   ___param_bank 000000                          ??_abs 0019  
                        ??_pad 001B                   ?_readColours 0010                  ___fltol@sign1 000D  
              __end_of___aodiv 3106                          ?_labs 0005                __end_of___fladd 1CE6  
                        ?_main 0001                          ?_dtoa 0020                __end_of___aomod 326A  
              __end_of___fldiv 24AA                __end_of___flneg 3CEE                __end_of___flmul 2110  
              __end_of___flsub 3B6E                __end_of___fltol 3370                    colour_rel@B 002A  
                  colour_rel@G 0026                    colour_rel@L 002E                    colour_rel@R 0022  
                        i2l223 002A                          i2l225 003E                          i2l166 3D7C  
                        i2l159 3E24                   vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 3EDC  
   __end_of_I2C_2_Master_Write 3EBE                          _flags 0056                          _fputc 3640  
                        _fputs 3BB2                          labs@a 0005                          pad@fp 0015  
                        _width 00EF                          _putch 3EDC                          dtoa@d 0022  
                        dtoa@i 0041                          dtoa@n 0038                          dtoa@p 0034  
                        dtoa@s 0040                          dtoa@w 0036                          tablat 000FF5  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 3998  
               ?___fpclassifyf 0005        __end_of_color_read_Blue 3B28          _I2C_2_Master_RepStart 3EBE  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                ?_color_read_lum 0009  
              __initialization 3C78                   __end_of_labs 3894                   __end_of_main 3640  
                 __end_of_dtoa 2A2E             putCharToTxBuf@byte 0005                         ??_labs 0009  
                       ??_main 00B3                         ??_dtoa 002A                  __activetblptr 000003  
                       ?_fputc 0005                         ?_fputs 000E                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l4012 0012                         i2l4014 0022  
                       i2l4018 0038                         i2l3950 3DFE                         i2l3960 3D62  
                       i2l3952 3E0E                         i2l3962 3D66                         i2l3954 3E12  
                       i2l3956 3E22                         i2l3958 3D52                      ??_HighISR 0003  
     __end_of_color_click_init 3D22                         _RX4PPS 000E15                         _TX4REG 000EE4  
             __end_of___xxtofl 2DF4                   vfprintf@cfmt 0092                         ___flge 3370  
             _getCharFromTxBuf 3D52                         ___fleq 370A                      ??___aodiv 0015  
                    ??___fladd 000D                      ??___aomod 0015                      ??___fldiv 000D  
                    ??___flneg 0009                      ??___flmul 000D                      ??___flsub 0026  
                    ??___fltol 0009                         _efgtoa 0E2C                         _floorf 2A2E  
                       _memcpy 3998                         clear_0 3C90                         clear_1 3C9C  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       _strcpy 3B6E                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
              ___fpclassifyf@e 000D                ___fpclassifyf@u 000F                ___fpclassifyf@x 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 3946                      ??_sprintf 0056                     ___flge@ff1 001E  
                   ___flge@ff2 0022                ??___fpclassifyf 0009                   ___xxtofl@arg 000F  
                 ___xxtofl@exp 000E                   ___xxtofl@val 0005                     ___fleq@ff1 0005  
                   ___fleq@ff2 0009          __end_of_isDataInTxBuf 3EA4                     __accesstop 0060  
      __end_of__initialization 3CAC                     ___flneg@f1 0005       __end_of_color_read_Green 3AD8  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0005  
             ?_color_read_Blue 0009                _Interrupts_init 3EA4                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3EDE                  __end_of_fputc 370A                  __end_of_fputs 3BF6  
                __end_of_putch 3EDE                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00E7                     __pbssBANK1 0100  
            _color_writetoaddr 3E4E                        ?___flge 001E                        ?___fleq 0005  
           ?_color_writetoaddr 0007                        ?_efgtoa 0032                        ?_floorf 001E  
                      ?_memcpy 0005            ??_color_writetoaddr 0008                        ?_strcpy 0005  
                colour_rel@rel 0020                      ?___xxtofl 0005                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 2DF4        __end_of_Interrupts_init 3EB2         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 3E6E             _I2C_2_Master_Start 3ED2                     _initUSART4 3E6E  
           _I2C_2_Master_Write 3EB2                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 2F7E                        ___fladd 1826  
                      ___aomod 3106                        ___fldiv 2110                        ___flneg 3CB6  
                      ___flmul 1CE6                        ___flsub 3B28                        ___fltol 326A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 008C  
                 __psmallconst 0E00                        __pcinit 3C78                        __ramtop 0E00  
                      __ptext0 3572                        __ptext1 3946                        __ptext2 38F2  
                      __ptext3 24AA                        __ptext4 0E2C                        __ptext5 3B6E  
                      __ptext6 3998                        __ptext7 382E                        __ptext8 2A2E  
                      __ptext9 3474                     ??___xxtofl 0009                        efgtoa@c 0038  
                      efgtoa@d 006B                        efgtoa@e 006F                        efgtoa@f 0034  
                      efgtoa@g 0082                        efgtoa@h 0079                        efgtoa@i 0077  
                      efgtoa@l 007D                        efgtoa@m 006D                        efgtoa@n 0086  
                      efgtoa@p 0062                        efgtoa@t 0064                        efgtoa@u 0088  
                      efgtoa@w 0071                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 3D7E  
            color_read_lum@tmp 000E                        main@buf 00B5                        _sprintf 3946  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 3CAC  
            __end_of_sendTxBuf 3DA8                        floorf@e 002C                        floorf@m 0028  
                      floorf@u 002E                        floorf@x 001E                        memcpy@d 000C  
                      memcpy@n 0009                        memcpy@s 000E                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 27B0                     efgtoa@mode 0069                     efgtoa@sign 0081  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0056  
                      strcpy@d 000B                        strcpy@s 0009                    ___fladd@grs 0014  
                ___xxtofl@sign 000D                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISGbits 000F87                    ___fldiv@grs 0018                    ___fldiv@rem 0011  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006                    ?_colour_rel 001E  
             ?_Interrupts_init 0001                    ___flmul@grs 0013                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0009                    ?_initUSART4 0001  
           ??_color_read_Green 000B                 __end_of___flge 3474                 __end_of___fleq 37B4  
                  vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0054                    vfpfcnvrt@fp 0043  
               __end_of_efgtoa 1826                 __end_of_floorf 2C40                 __end_of_memcpy 39E8  
                   floorf@F526 00E7                 __end_of_strcpy 3BB2            start_initialization 3C78  
                  __end_of_abs 3C78                    __end_of_pad 382E                  _TxBufWriteCnt 0058  
        __end_of___fpclassifyf 3572            color_read_Green@tmp 000E                    vfprintf@fmt 008E  
                     ??___flge 0026                       ??___fleq 000D                  ??_readColours 0012  
                     ??_efgtoa 0039                 _putCharToRxBuf 3DFC                 _putCharToTxBuf 3DD2  
                  __pdataBANK0 00FB                       ??_floorf 0022                       ??_memcpy 000B  
                     ??_strcpy 0009                      ___fladd@a 0009                      ___fladd@b 0005  
                    ___fldiv@a 0009                      ___fldiv@b 0005                      ___flmul@a 0009  
                    ___flmul@b 0005                    __pbssCOMRAM 0056                      ___flsub@a 0022  
                    ___flsub@b 001E                  __pcstackBANK0 0060               ___aodiv@dividend 0005  
                     ?_HighISR 0001                    _efgtoa$1403 0066                      _dtoa$1372 0032  
       __end_of_putCharToRxBuf 3E26         __end_of_putCharToTxBuf 3DFC                      __pintcode 0008  
                     ?___aodiv 0005                       ?___fladd 0005                       ?___aomod 0005  
                     ?___fldiv 0005               ___aodiv@quotient 0017                       ?___flneg 0005  
                     ?___flmul 0005                       ?___flsub 001E                       ?___fltol 0005  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00            __end_of_readColours 38F2              _I2C_2_Master_Idle 3E26  
            _I2C_2_Master_Init 3DA8              _I2C_2_Master_Read 3BF6              _I2C_2_Master_Stop 3EC8  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 0094  
            ?_getCharFromTxBuf 0001                 colour_rel@vals 001E             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 3E8C  
             _TxBufferedString 3D22                       _LATGbits 000F7F                      _sendTxBuf 3D7E  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u425_40 0022  
                     i2u425_41 001E                       i2u418_40 3E0E                       i2u426_40 0038  
                     i2u418_41 3E0A                       i2u426_41 0034                       i2u419_40 3D62  
                     i2u419_41 3D5E                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 24AA      __end_of_I2C_2_Master_Idle 3E4E      __end_of_I2C_2_Master_Init 3DD2  
    __end_of_I2C_2_Master_Read 3C38      __end_of_I2C_2_Master_Stop 3ED2                       _DataFlag 00FB  
  I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B                   _TxBufReadCnt 0057  
                   vfpfcnvrt@c 0053                   ??_colour_rel 0022                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 3EC8             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                      memcpy@tmp 000B  
                   vfprintf@ap 0090                       __Lrparam 0000                     vfprintf@fp 008C  
                  _readColours 3894                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015             __end_of_colour_rel 2F7E                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EB                     sprintf@fmt 0096                       ___xxtofl 2C40  
           __end_of_initUSART4 3E8C                       __ptext10 326A                       __ptext11 3B28  
                     __ptext20 3640                       __ptext12 1826                       __ptext21 3EDC  
                     __ptext13 3CB6                       __ptext30 3A88                       __ptext22 3C38  
                     __ptext14 1CE6                       __ptext31 3AD8                       __ptext23 3106  
                     __ptext15 3370                       __ptext40 3EB2                       __ptext32 3EBE  
                     __ptext24 2F7E                       __ptext16 370A                       __ptext41 3EC8  
                     __ptext33 3BF6                       __ptext25 3D7E                       __ptext17 27B0  
                     __ptext50 3D52                       __ptext42 3ED2                       __ptext34 3E6E  
                     __ptext26 3E8C                       __ptext18 37B4                       __ptext43 3E26  
                     __ptext35 2DF4                       __ptext27 3894                       __ptext19 3BB2  
                     __ptext44 3DA8                       __ptext36 2C40                       __ptext28 39E8  
                     __ptext45 3D22                       __ptext37 2110                       __ptext29 3A38  
                     __ptext46 3DD2                       __ptext38 3CEE                       __ptext47 3EA4  
                     __ptext39 3E4E                       __ptext49 3DFC                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0005                       efgtoa@fp 0032  
                     efgtoa@ne 0060                       efgtoa@pp 0068                       efgtoa@ou 0073  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 38F2               ___aomod@dividend 0005                     _INTCONbits 000FF2  
                     memcpy@d1 0005                       memcpy@s1 0007                ??_isDataInTxBuf 0005  
                     intlevel2 0000                      sprintf@ap 00A6                    ??_sendTxBuf 0005  
                    strcpy@src 0007                    efgtoa@nmode 006A                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 3CEE  
     __end_of_TxBufferedString 3D52                       sprintf@f 00A8                       sprintf@s 0094  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0011  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                   ___fladd@aexp 0012  
                 ___fladd@bexp 0013               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016  
