

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 12:37:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 06/04/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK0
   113   0042E6                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _DataFlag
   117   0042E6  01                 	db	1
   118                           
   119                           	psect	idataBANK1
   120   0042E0                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for _high_threshold
   124   0042E0  03E8               	dw	1000
   125   000000                     _TRISEbits	set	3973
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _SSP2CON2bits	set	3802
   130   000000                     _RX4PPS	set	3605
   131   000000                     _SSP2CLKPPS	set	3612
   132   000000                     _SSP2DATPPS	set	3613
   133   000000                     _ANSELDbits	set	3751
   134   000000                     _SSP2ADD	set	3798
   135   000000                     _SSP2CON1bits	set	3801
   136   000000                     _LATAbits	set	3961
   137   000000                     _LATFbits	set	3966
   138   000000                     _LATGbits	set	3967
   139   000000                     _TRISAbits	set	3969
   140   000000                     _TRISGbits	set	3975
   141   000000                     _CCPR2H	set	4006
   142   000000                     _CCPR1H	set	4010
   143   000000                     _TRISCbits	set	3971
   144   000000                     _TRISDbits	set	3972
   145   000000                     _TRISFbits	set	3974
   146   000000                     _LATDbits	set	3964
   147   000000                     _RC4REG	set	3811
   148   000000                     _SP4BRGL	set	3813
   149   000000                     _TX4STAbits	set	3816
   150   000000                     _BAUD4CONbits	set	3817
   151   000000                     _SSP2CON2	set	3802
   152   000000                     _SSP2STAT	set	3800
   153   000000                     _SSP2BUF	set	3797
   154   000000                     _PIE4bits	set	3629
   155   000000                     _PIR4bits	set	3639
   156   000000                     _RC0PPS	set	3682
   157   000000                     _RD5PPS	set	3695
   158   000000                     _RE2PPS	set	3700
   159   000000                     _RD6PPS	set	3696
   160   000000                     _RC7PPS	set	3689
   161   000000                     _CCPR4H	set	3873
   162   000000                     _CCPR3H	set	3877
   163   000000                     _CCP1CONbits	set	4011
   164   000000                     _CCPTMRS0bits	set	4013
   165   000000                     _T2PR	set	4028
   166   000000                     _T2CONbits	set	4029
   167   000000                     _CCP2CONbits	set	4007
   168   000000                     _CCP3CONbits	set	3878
   169   000000                     _CCP4CONbits	set	3874
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _T2CLKCONbits	set	4031
   173   000000                     _T2HLTbits	set	4030
   174                           
   175                           	psect	smallconst
   176   000E00                     __psmallconst:
   177                           	callstack 0
   178   000E00  00                 	db	0
   179   000E01                     STR_1:
   180   000E01  72                 	db	114	;'r'
   181   000E02  65                 	db	101	;'e'
   182   000E03  64                 	db	100	;'d'
   183   000E04  3D                 	db	61	;'='
   184   000E05  25                 	db	37
   185   000E06  64                 	db	100	;'d'
   186   000E07  20                 	db	32
   187   000E08  67                 	db	103	;'g'
   188   000E09  72                 	db	114	;'r'
   189   000E0A  65                 	db	101	;'e'
   190   000E0B  65                 	db	101	;'e'
   191   000E0C  6E                 	db	110	;'n'
   192   000E0D  3D                 	db	61	;'='
   193   000E0E  25                 	db	37
   194   000E0F  64                 	db	100	;'d'
   195   000E10  20                 	db	32
   196   000E11  62                 	db	98	;'b'
   197   000E12  6C                 	db	108	;'l'
   198   000E13  75                 	db	117	;'u'
   199   000E14  65                 	db	101	;'e'
   200   000E15  3D                 	db	61	;'='
   201   000E16  25                 	db	37
   202   000E17  64                 	db	100	;'d'
   203   000E18  20                 	db	32
   204   000E19  6C                 	db	108	;'l'
   205   000E1A  75                 	db	117	;'u'
   206   000E1B  6D                 	db	109	;'m'
   207   000E1C  3D                 	db	61	;'='
   208   000E1D  25                 	db	37
   209   000E1E  64                 	db	100	;'d'
   210   000E1F  20                 	db	32
   211   000E20  63                 	db	99	;'c'
   212   000E21  6F                 	db	111	;'o'
   213   000E22  6C                 	db	108	;'l'
   214   000E23  6F                 	db	111	;'o'
   215   000E24  75                 	db	117	;'u'
   216   000E25  72                 	db	114	;'r'
   217   000E26  3D                 	db	61	;'='
   218   000E27  25                 	db	37
   219   000E28  64                 	db	100	;'d'
   220   000E29  20                 	db	32
   221   000E2A  0D                 	db	13
   222   000E2B  0A                 	db	10
   223   000E2C  00                 	db	0
   224   000E2D                     STR_2:
   225   000E2D  72                 	db	114	;'r'
   226   000E2E  65                 	db	101	;'e'
   227   000E2F  64                 	db	100	;'d'
   228   000E30  3D                 	db	61	;'='
   229   000E31  25                 	db	37
   230   000E32  64                 	db	100	;'d'
   231   000E33  20                 	db	32
   232   000E34  67                 	db	103	;'g'
   233   000E35  72                 	db	114	;'r'
   234   000E36  65                 	db	101	;'e'
   235   000E37  65                 	db	101	;'e'
   236   000E38  6E                 	db	110	;'n'
   237   000E39  3D                 	db	61	;'='
   238   000E3A  25                 	db	37
   239   000E3B  64                 	db	100	;'d'
   240   000E3C  20                 	db	32
   241   000E3D  62                 	db	98	;'b'
   242   000E3E  6C                 	db	108	;'l'
   243   000E3F  75                 	db	117	;'u'
   244   000E40  65                 	db	101	;'e'
   245   000E41  3D                 	db	61	;'='
   246   000E42  25                 	db	37
   247   000E43  64                 	db	100	;'d'
   248   000E44  20                 	db	32
   249   000E45  6C                 	db	108	;'l'
   250   000E46  75                 	db	117	;'u'
   251   000E47  6D                 	db	109	;'m'
   252   000E48  3D                 	db	61	;'='
   253   000E49  25                 	db	37
   254   000E4A  64                 	db	100	;'d'
   255   000E4B  20                 	db	32
   256   000E4C  0D                 	db	13
   257   000E4D  0A                 	db	10
   258   000E4E  00                 	db	0
   259   000E4F  00                 	db	0	; dummy byte at the end
   260   000000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264   003C98                     __pcinit:
   265                           	callstack 0
   266   003C98                     start_initialization:
   267                           	callstack 0
   268   003C98                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK1 (2 bytes)
   272                           ; load TBLPTR registers with __pidataBANK1
   273   003C98  0EE0               	movlw	low __pidataBANK1
   274   003C9A  6EF6               	movwf	tblptrl,c
   275   003C9C  0E42               	movlw	high __pidataBANK1
   276   003C9E  6EF7               	movwf	tblptrh,c
   277   003CA0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   278   003CA2  6EF8               	movwf	tblptru,c
   279   003CA4  0009               	tblrd		*+	;fetch initializer
   280   003CA6  CFF5 F190          	movff	tablat,__pdataBANK1
   281   003CAA  0009               	tblrd		*+	;fetch initializer
   282   003CAC  CFF5 F191          	movff	tablat,__pdataBANK1+1
   283                           
   284                           ; Initialize objects allocated to BANK0 (1 bytes)
   285                           ; load TBLPTR registers with __pidataBANK0
   286   003CB0  0EE6               	movlw	low __pidataBANK0
   287   003CB2  6EF6               	movwf	tblptrl,c
   288   003CB4  0E42               	movlw	high __pidataBANK0
   289   003CB6  6EF7               	movwf	tblptrh,c
   290   003CB8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   291   003CBA  6EF8               	movwf	tblptru,c
   292   003CBC  0009               	tblrd		*+	;fetch initializer
   293   003CBE  CFF5 F0FF          	movff	tablat,__pdataBANK0
   294                           
   295                           ; Clear objects allocated to BANK1 (144 bytes)
   296   003CC2  EE01  F000         	lfsr	0,__pbssBANK1
   297   003CC6  0E90               	movlw	144
   298   003CC8                     clear_0:
   299   003CC8  6AEE               	clrf	postinc0,c
   300   003CCA  06E8               	decf	wreg,f,c
   301   003CCC  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK0 (25 bytes)
   304   003CCE  EE00  F0E6         	lfsr	0,__pbssBANK0
   305   003CD2  0E19               	movlw	25
   306   003CD4                     clear_1:
   307   003CD4  6AEE               	clrf	postinc0,c
   308   003CD6  06E8               	decf	wreg,f,c
   309   003CD8  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to COMRAM (4 bytes)
   312   003CDA  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   313   003CDC  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   314   003CDE  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   315   003CE0  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   316   003CE2                     end_of_initialization:
   317                           	callstack 0
   318   003CE2                     __end_of__initialization:
   319                           	callstack 0
   320   003CE2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321   003CE4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322   003CE6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   323   003CE8  6EF8               	movwf	tblptru,c
   324   003CEA  0E0E               	movlw	high __Lsmallconst
   325   003CEC  6EF7               	movwf	tblptrh,c
   326   003CEE  0100               	movlb	0
   327   003CF0  EFD3  F015         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330   00005B                     __pbssCOMRAM:
   331                           	callstack 0
   332   00005B                     _TxBufReadCnt:
   333                           	callstack 0
   334   00005B                     	ds	1
   335   00005C                     _TxBufWriteCnt:
   336                           	callstack 0
   337   00005C                     	ds	1
   338   00005D                     _RxBufReadCnt:
   339                           	callstack 0
   340   00005D                     	ds	1
   341   00005E                     _RxBufWriteCnt:
   342                           	callstack 0
   343   00005E                     	ds	1
   344                           
   345                           	psect	bssBANK0
   346   0000E6                     __pbssBANK0:
   347                           	callstack 0
   348   0000E6                     _width:
   349                           	callstack 0
   350   0000E6                     	ds	2
   351   0000E8                     _prec:
   352                           	callstack 0
   353   0000E8                     	ds	2
   354   0000EA                     _low_threshold:
   355                           	callstack 0
   356   0000EA                     	ds	2
   357   0000EC                     _flags:
   358                           	callstack 0
   359   0000EC                     	ds	1
   360   0000ED                     _motorR:
   361                           	callstack 0
   362   0000ED                     	ds	9
   363   0000F6                     _motorL:
   364                           	callstack 0
   365   0000F6                     	ds	9
   366                           
   367                           	psect	dataBANK0
   368   0000FF                     __pdataBANK0:
   369                           	callstack 0
   370   0000FF                     _DataFlag:
   371                           	callstack 0
   372   0000FF                     	ds	1
   373                           
   374                           	psect	bssBANK1
   375   000100                     __pbssBANK1:
   376                           	callstack 0
   377   000100                     _EUSART4TXbuf:
   378                           	callstack 0
   379   000100                     	ds	60
   380   00013C                     _EUSART4RXbuf:
   381                           	callstack 0
   382   00013C                     	ds	20
   383   000150                     	ds	12
   384   00015C                     _dbuf:
   385                           	callstack 0
   386   00015C                     	ds	32
   387   00017C                     _rel:
   388                           	callstack 0
   389   00017C                     	ds	12
   390   000188                     _vals:
   391                           	callstack 0
   392   000188                     	ds	8
   393                           
   394                           	psect	dataBANK1
   395   000190                     __pdataBANK1:
   396                           	callstack 0
   397   000190                     _high_threshold:
   398                           	callstack 0
   399   000190                     	ds	2
   400                           
   401                           	psect	cstackBANK0
   402   000060                     __pcstackBANK0:
   403                           	callstack 0
   404   000060                     ?_sprintf:
   405                           	callstack 0
   406   000060                     sprintf@s:
   407                           	callstack 0
   408   000060                     _Colour_decider$2500:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x0
   412   000060                     	ds	2
   413   000062                     sprintf@fmt:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417   000062                     	ds	2
   418   000064                     Colour_decider@Cmax_i:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422   000064                     	ds	2
   423   000066                     Colour_decider@RGB_col:
   424                           	callstack 0
   425                           
   426                           ; 12 bytes @ 0x6
   427   000066                     	ds	8
   428   00006E                     sprintf@ap:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xE
   432   00006E                     	ds	2
   433   000070                     sprintf@f:
   434                           	callstack 0
   435                           
   436                           ; 11 bytes @ 0x10
   437   000070                     	ds	2
   438   000072                     Colour_decider@Cmax:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x12
   442   000072                     	ds	4
   443   000076                     Colour_decider@Cmin:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0x16
   447   000076                     	ds	4
   448   00007A                     Colour_decider@i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x1A
   452   00007A                     	ds	2
   453   00007C                     Colour_decider@Hue:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x1C
   457   00007C                     	ds	4
   458   000080                     main@buf:
   459                           	callstack 0
   460                           
   461                           ; 100 bytes @ 0x20
   462   000080                     	ds	100
   463   0000E4                     main@colour:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x84
   467   0000E4                     	ds	2
   468                           
   469                           	psect	cstackCOMRAM
   470   000001                     __pcstackCOMRAM:
   471                           	callstack 0
   472   000001                     ??_I2C_2_Master_Idle:
   473   000001                     ?___wmul:
   474                           	callstack 0
   475   000001                     ?___fladd:
   476                           	callstack 0
   477   000001                     ?___xxtofl:
   478                           	callstack 0
   479   000001                     ?___aodiv:
   480                           	callstack 0
   481   000001                     ?___aomod:
   482                           	callstack 0
   483   000001                     sendCharSerial4@charToSend:
   484                           	callstack 0
   485   000001                     initDCmotorsPWM@PWMperiod:
   486                           	callstack 0
   487   000001                     ___wmul@multiplier:
   488                           	callstack 0
   489   000001                     fputc@c:
   490                           	callstack 0
   491   000001                     ___flge@ff1:
   492                           	callstack 0
   493   000001                     ___fladd@b:
   494                           	callstack 0
   495   000001                     ___xxtofl@val:
   496                           	callstack 0
   497   000001                     ___aodiv@dividend:
   498                           	callstack 0
   499   000001                     ___aomod@dividend:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x0
   503   000001                     	ds	1
   504   000002                     ??_I2C_2_Master_Read:
   505   000002                     I2C_2_Master_Write@data_byte:
   506                           	callstack 0
   507   000002                     sendStringSerial4@string:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1
   511   000002                     	ds	1
   512   000003                     color_writetoaddr@value:
   513                           	callstack 0
   514   000003                     I2C_2_Master_Read@ack:
   515                           	callstack 0
   516   000003                     ___wmul@multiplicand:
   517                           	callstack 0
   518   000003                     fputc@fp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522   000003                     	ds	1
   523   000004                     color_writetoaddr@address:
   524                           	callstack 0
   525   000004                     I2C_2_Master_Read@tmp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x3
   529   000004                     	ds	1
   530   000005                     ??_fputc:
   531   000005                     ??_color_click_init:
   532   000005                     ??___xxtofl:
   533   000005                     ?_color_read_lum:
   534                           	callstack 0
   535   000005                     ?_color_read_Red:
   536                           	callstack 0
   537   000005                     ?_color_read_Green:
   538                           	callstack 0
   539   000005                     ?_color_read_Blue:
   540                           	callstack 0
   541   000005                     ___wmul@product:
   542                           	callstack 0
   543   000005                     ___flge@ff2:
   544                           	callstack 0
   545   000005                     ___fladd@a:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x4
   549   000005                     	ds	2
   550   000007                     ??_color_read_lum:
   551   000007                     ??_color_read_Red:
   552   000007                     ??_color_read_Green:
   553   000007                     ??_color_read_Blue:
   554   000007                     ?___lwdiv:
   555                           	callstack 0
   556   000007                     ___lwdiv@dividend:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x6
   560   000007                     	ds	2
   561   000009                     ??___fladd:
   562   000009                     ??___flge:
   563   000009                     ___xxtofl@sign:
   564                           	callstack 0
   565   000009                     ___lwdiv@divisor:
   566                           	callstack 0
   567   000009                     ___aodiv@divisor:
   568                           	callstack 0
   569   000009                     ___aomod@divisor:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x8
   573   000009                     	ds	1
   574   00000A                     ___xxtofl@exp:
   575                           	callstack 0
   576   00000A                     color_read_lum@tmp:
   577                           	callstack 0
   578   00000A                     color_read_Red@tmp:
   579                           	callstack 0
   580   00000A                     color_read_Green@tmp:
   581                           	callstack 0
   582   00000A                     color_read_Blue@tmp:
   583                           	callstack 0
   584   00000A                     fputs@s:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x9
   588   00000A                     	ds	1
   589   00000B                     ___lwdiv@quotient:
   590                           	callstack 0
   591   00000B                     ___xxtofl@arg:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0xA
   595   00000B                     	ds	1
   596   00000C                     readColours@vals:
   597                           	callstack 0
   598   00000C                     fputs@fp:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xB
   602   00000C                     	ds	1
   603   00000D                     ___lwdiv@counter:
   604                           	callstack 0
   605   00000D                     ___fladd@signs:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xC
   609   00000D                     	ds	1
   610   00000E                     ___fladd@aexp:
   611                           	callstack 0
   612   00000E                     fputs@c:
   613                           	callstack 0
   614   00000E                     setMotorPWM@m:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xD
   618   00000E                     	ds	1
   619   00000F                     ___fladd@bexp:
   620                           	callstack 0
   621   00000F                     fputs@i:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0xE
   625   00000F                     	ds	1
   626   000010                     ??_setMotorPWM:
   627   000010                     ___fladd@grs:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xF
   631   000010                     	ds	1
   632   000011                     ?___flsub:
   633                           	callstack 0
   634   000011                     ___aodiv@counter:
   635                           	callstack 0
   636   000011                     ___aomod@counter:
   637                           	callstack 0
   638   000011                     pad@fp:
   639                           	callstack 0
   640   000011                     ___flsub@b:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x10
   644   000011                     	ds	1
   645   000012                     setMotorPWM@posDuty:
   646                           	callstack 0
   647   000012                     ___aodiv@sign:
   648                           	callstack 0
   649   000012                     ___aomod@sign:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x11
   653   000012                     	ds	1
   654   000013                     ?_abs:
   655                           	callstack 0
   656   000013                     setMotorPWM@negDuty:
   657                           	callstack 0
   658   000013                     pad@buf:
   659                           	callstack 0
   660   000013                     abs@a:
   661                           	callstack 0
   662   000013                     ___aodiv@quotient:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x12
   666   000013                     	ds	1
   667   000014                     stop@mL:
   668                           	callstack 0
   669   000014                     turnLeft@mL:
   670                           	callstack 0
   671   000014                     turnRight@mL:
   672                           	callstack 0
   673   000014                     fullSpeedAhead@mL:
   674                           	callstack 0
   675   000014                     fullSpeedBack@mL:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x13
   679   000014                     	ds	1
   680   000015                     ??_abs:
   681   000015                     pad@p:
   682                           	callstack 0
   683   000015                     ___flsub@a:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x14
   687   000015                     	ds	1
   688   000016                     stop@mR:
   689                           	callstack 0
   690   000016                     turnLeft@mR:
   691                           	callstack 0
   692   000016                     turnRight@mR:
   693                           	callstack 0
   694   000016                     fullSpeedAhead@mR:
   695                           	callstack 0
   696   000016                     fullSpeedBack@mR:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x15
   700   000016                     	ds	1
   701   000017                     ??_pad:
   702                           
   703                           ; 1 bytes @ 0x16
   704   000017                     	ds	1
   705   000018                     ??_fullSpeedAhead:
   706   000018                     ??_stop:
   707   000018                     ??_turnLeft:
   708   000018                     ??_turnRight:
   709   000018                     ??_fullSpeedBack:
   710   000018                     pad@i:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x17
   714   000018                     	ds	1
   715   000019                     ?___fldiv:
   716                           	callstack 0
   717   000019                     turnRight45@mL:
   718                           	callstack 0
   719   000019                     turnLeft45@mL:
   720                           	callstack 0
   721   000019                     reverseDetect@mL:
   722                           	callstack 0
   723   000019                     ___fleq@ff1:
   724                           	callstack 0
   725   000019                     ___fldiv@b:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x18
   729   000019                     	ds	1
   730   00001A                     pad@w:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x19
   734   00001A                     	ds	1
   735   00001B                     turnRight45@mR:
   736                           	callstack 0
   737   00001B                     turnLeft45@mR:
   738                           	callstack 0
   739   00001B                     reverseDetect@mR:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1A
   743   00001B                     	ds	1
   744   00001C                     dtoa@fp:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x1B
   748   00001C                     	ds	1
   749   00001D                     ??_reverseDetect:
   750   00001D                     ??_turnLeft45:
   751   00001D                     ??_turnRight45:
   752   00001D                     ___fleq@ff2:
   753                           	callstack 0
   754   00001D                     ___fldiv@a:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x1C
   758   00001D                     	ds	1
   759   00001E                     dtoa@d:
   760                           	callstack 0
   761                           
   762                           ; 8 bytes @ 0x1D
   763   00001E                     	ds	1
   764   00001F                     RedMove@mL:
   765                           	callstack 0
   766   00001F                     GreenMove@mL:
   767                           	callstack 0
   768   00001F                     BlueMove@mL:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1E
   772   00001F                     	ds	2
   773   000021                     ??___fldiv:
   774   000021                     ??___fleq:
   775   000021                     RedMove@mR:
   776                           	callstack 0
   777   000021                     GreenMove@mR:
   778                           	callstack 0
   779   000021                     BlueMove@mR:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x20
   783   000021                     	ds	2
   784   000023                     
   785                           ; 1 bytes @ 0x22
   786   000023                     	ds	2
   787   000025                     ___fldiv@rem:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x24
   791   000025                     	ds	1
   792   000026                     ??_dtoa:
   793                           
   794                           ; 1 bytes @ 0x25
   795   000026                     	ds	3
   796   000029                     ___fldiv@sign:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x28
   800   000029                     	ds	1
   801   00002A                     ___fldiv@new_exp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x29
   805   00002A                     	ds	2
   806   00002C                     ___fldiv@grs:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x2B
   810   00002C                     	ds	2
   811   00002E                     _dtoa$2195:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2D
   815   00002E                     	ds	2
   816   000030                     ___fldiv@bexp:
   817                           	callstack 0
   818   000030                     dtoa@p:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x2F
   822   000030                     	ds	1
   823   000031                     ___fldiv@aexp:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x30
   827   000031                     	ds	1
   828   000032                     ?___flmul:
   829                           	callstack 0
   830   000032                     colour_rel@vals:
   831                           	callstack 0
   832   000032                     dtoa@w:
   833                           	callstack 0
   834   000032                     ___flmul@b:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x31
   838   000032                     	ds	2
   839   000034                     colour_rel@rel:
   840                           	callstack 0
   841   000034                     dtoa@n:
   842                           	callstack 0
   843                           
   844                           ; 8 bytes @ 0x33
   845   000034                     	ds	2
   846   000036                     colour_rel@L:
   847                           	callstack 0
   848   000036                     ___flmul@a:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x35
   852   000036                     	ds	4
   853   00003A                     ??___flmul:
   854   00003A                     _colour_rel$2498:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x39
   858   00003A                     	ds	2
   859   00003C                     dtoa@i:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x3B
   863   00003C                     	ds	2
   864   00003E                     ___flmul@sign:
   865                           	callstack 0
   866   00003E                     dtoa@s:
   867                           	callstack 0
   868   00003E                     _colour_rel$2499:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x3D
   872   00003E                     	ds	1
   873   00003F                     vfpfcnvrt@fp:
   874                           	callstack 0
   875   00003F                     ___flmul@grs:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x3E
   879   00003F                     	ds	2
   880   000041                     vfpfcnvrt@fmt:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x40
   884   000041                     	ds	1
   885   000042                     colour_rel@R:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x41
   889   000042                     	ds	1
   890   000043                     ___flmul@aexp:
   891                           	callstack 0
   892   000043                     vfpfcnvrt@ap:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x42
   896   000043                     	ds	1
   897   000044                     ___flmul@bexp:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x43
   901   000044                     	ds	1
   902   000045                     ??_vfpfcnvrt:
   903   000045                     ___flmul@prod:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x44
   907   000045                     	ds	1
   908   000046                     colour_rel@G:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x45
   912   000046                     	ds	1
   913   000047                     vfpfcnvrt@convarg:
   914                           	callstack 0
   915                           
   916                           ; 8 bytes @ 0x46
   917   000047                     	ds	2
   918   000049                     ___flmul@temp:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x48
   922   000049                     	ds	1
   923   00004A                     colour_rel@B:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x49
   927   00004A                     	ds	1
   928   00004B                     ?_Colour_decider:
   929                           	callstack 0
   930   00004B                     Colour_decider@vals:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x4A
   934   00004B                     	ds	2
   935   00004D                     Colour_decider@rel:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x4C
   939   00004D                     	ds	2
   940   00004F                     ??_Colour_decider:
   941   00004F                     vfpfcnvrt@cp:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x4E
   945   00004F                     	ds	2
   946   000051                     ?_vfprintf:
   947                           	callstack 0
   948   000051                     vfprintf@fp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x50
   952   000051                     	ds	2
   953   000053                     vfprintf@fmt:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x52
   957   000053                     	ds	2
   958   000055                     vfprintf@ap:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x54
   962   000055                     	ds	2
   963   000057                     vfprintf@cfmt:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x56
   967   000057                     	ds	2
   968   000059                     ??_main:
   969                           
   970                           ; 1 bytes @ 0x58
   971   000059                     	ds	2
   972                           
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 29 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  colour          2  132[BANK0 ] int 
   983 ;;  buf           100   32[BANK0 ] unsigned char [100]
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;      Totals:         2     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;Total ram usage:      104 bytes
   998 ;; Hardware stack levels required when called: 9
   999 ;; This function calls:
  1000 ;;		_BlueMove
  1001 ;;		_Colour_decider
  1002 ;;		_GreenMove
  1003 ;;		_I2C_2_Master_Init
  1004 ;;		_Interrupts_init
  1005 ;;		_RedMove
  1006 ;;		_color_click_init
  1007 ;;		_colour_rel
  1008 ;;		_fullSpeedAhead
  1009 ;;		_initDCmotorsPWM
  1010 ;;		_initUSART4
  1011 ;;		_readColours
  1012 ;;		_sendStringSerial4
  1013 ;;		_sprintf
  1014 ;;		_stop
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text0
  1021   002BA6                     __ptext0:
  1022                           	callstack 0
  1023   002BA6                     _main:
  1024                           	callstack 22
  1025   002BA6                     
  1026                           ;main.c: 30:     initUSART4();
  1027   002BA6  EC40  F021         	call	_initUSART4	;wreg free
  1028   002BAA                     
  1029                           ;main.c: 31:     Interrupts_init();
  1030   002BAA  EC72  F021         	call	_Interrupts_init	;wreg free
  1031   002BAE                     
  1032                           ;main.c: 32:     color_click_init();
  1033   002BAE  EC28  F01F         	call	_color_click_init	;wreg free
  1034   002BB2                     
  1035                           ;main.c: 33:     I2C_2_Master_Init();
  1036   002BB2  ECF4  F020         	call	_I2C_2_Master_Init	;wreg free
  1037   002BB6                     
  1038                           ;main.c: 34:     initDCmotorsPWM(200);
  1039   002BB6  0E00               	movlw	0
  1040   002BB8  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1041   002BBA  0EC8               	movlw	200
  1042   002BBC  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1043   002BBE  ECF4  F01C         	call	_initDCmotorsPWM	;wreg free
  1044   002BC2                     
  1045                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1046   002BC2  9287               	bcf	135,1,c	;volatile
  1047   002BC4                     
  1048                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1049   002BC4  9881               	bcf	129,4,c	;volatile
  1050   002BC6                     
  1051                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1052   002BC6  9E86               	bcf	134,7,c	;volatile
  1053   002BC8                     
  1054                           ;main.c: 39:     LATGbits.LATG1=1;
  1055   002BC8  827F               	bsf	127,1,c	;volatile
  1056   002BCA                     
  1057                           ;main.c: 40:     LATAbits.LATA4=1;
  1058   002BCA  8879               	bsf	121,4,c	;volatile
  1059   002BCC                     
  1060                           ;main.c: 41:     LATFbits.LATF7=1;
  1061   002BCC  8E7E               	bsf	126,7,c	;volatile
  1062   002BCE                     
  1063                           ;main.c: 45:     motorL.power=0;
  1064   002BCE  0E00               	movlw	0
  1065   002BD0  0100               	movlb	0	; () banked
  1066   002BD2  6FF6               	movwf	_motorL& (0+255),b
  1067   002BD4                     
  1068                           ; BSR set to: 0
  1069                           ;main.c: 46:     motorL.direction=1;
  1070   002BD4  0E01               	movlw	1
  1071   002BD6  6FF7               	movwf	(_motorL+1)& (0+255),b
  1072   002BD8                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 47:     motorL.brakemode=1;
  1075   002BD8  0E01               	movlw	1
  1076   002BDA  6FF8               	movwf	(_motorL+2)& (0+255),b
  1077   002BDC                     
  1078                           ; BSR set to: 0
  1079                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1080   002BDC  0EAA               	movlw	170
  1081   002BDE  6FFB               	movwf	(_motorL+5)& (0+255),b
  1082   002BE0  0E0F               	movlw	15
  1083   002BE2  6FFC               	movwf	(_motorL+6)& (0+255),b
  1084   002BE4                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1087   002BE4  0EA6               	movlw	166
  1088   002BE6  6FFD               	movwf	(_motorL+7)& (0+255),b
  1089   002BE8  0E0F               	movlw	15
  1090   002BEA  6FFE               	movwf	(_motorL+8)& (0+255),b
  1091   002BEC                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 50:     motorL.PWMperiod=200;
  1094   002BEC  0E00               	movlw	0
  1095   002BEE  6FFA               	movwf	(_motorL+4)& (0+255),b
  1096   002BF0  0EC8               	movlw	200
  1097   002BF2  6FF9               	movwf	(_motorL+3)& (0+255),b
  1098   002BF4                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 51:     motorR.power=0;
  1101   002BF4  0E00               	movlw	0
  1102   002BF6  6FED               	movwf	_motorR& (0+255),b
  1103   002BF8                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 52:     motorR.direction=1;
  1106   002BF8  0E01               	movlw	1
  1107   002BFA  6FEE               	movwf	(_motorR+1)& (0+255),b
  1108   002BFC                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 53:     motorR.brakemode=1;
  1111   002BFC  0E01               	movlw	1
  1112   002BFE  6FEF               	movwf	(_motorR+2)& (0+255),b
  1113   002C00                     
  1114                           ; BSR set to: 0
  1115                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1116   002C00  0E25               	movlw	37
  1117   002C02  6FF2               	movwf	(_motorR+5)& (0+255),b
  1118   002C04  0E0F               	movlw	15
  1119   002C06  6FF3               	movwf	(_motorR+6)& (0+255),b
  1120   002C08                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1123   002C08  0E21               	movlw	33
  1124   002C0A  6FF4               	movwf	(_motorR+7)& (0+255),b
  1125   002C0C  0E0F               	movlw	15
  1126   002C0E  6FF5               	movwf	(_motorR+8)& (0+255),b
  1127   002C10                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 56:     motorR.PWMperiod=200;
  1130   002C10  0E00               	movlw	0
  1131   002C12  6FF1               	movwf	(_motorR+4)& (0+255),b
  1132   002C14  0EC8               	movlw	200
  1133   002C16  6FF0               	movwf	(_motorR+3)& (0+255),b
  1134   002C18                     l4050:
  1135                           
  1136                           ;main.c: 59:     {;main.c: 60:         fullSpeedAhead(&motorL, &motorR);
  1137   002C18  0EF6               	movlw	low _motorL
  1138   002C1A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1139   002C1C  0E00               	movlw	high _motorL
  1140   002C1E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1141   002C20  0EED               	movlw	low _motorR
  1142   002C22  6E16               	movwf	fullSpeedAhead@mR^0,c
  1143   002C24  0E00               	movlw	high _motorR
  1144   002C26  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1145   002C28  ECC8  F01B         	call	_fullSpeedAhead	;wreg free
  1146   002C2C                     
  1147                           ;main.c: 63:         readColours(&vals);
  1148   002C2C  0E88               	movlw	low _vals
  1149   002C2E  6E0C               	movwf	readColours@vals^0,c
  1150   002C30  0E01               	movlw	high _vals
  1151   002C32  6E0D               	movwf	(readColours@vals+1)^0,c
  1152   002C34  EC1D  F01E         	call	_readColours	;wreg free
  1153   002C38                     
  1154                           ;main.c: 66:         colour_rel(&vals, &rel);
  1155   002C38  0E88               	movlw	low _vals
  1156   002C3A  6E32               	movwf	colour_rel@vals^0,c
  1157   002C3C  0E01               	movlw	high _vals
  1158   002C3E  6E33               	movwf	(colour_rel@vals+1)^0,c
  1159   002C40  0E7C               	movlw	low _rel
  1160   002C42  6E34               	movwf	colour_rel@rel^0,c
  1161   002C44  0E01               	movlw	high _rel
  1162   002C46  6E35               	movwf	(colour_rel@rel+1)^0,c
  1163   002C48  ECFD  F012         	call	_colour_rel	;wreg free
  1164   002C4C                     
  1165                           ;main.c: 69:         if (vals.L>=2200){
  1166   002C4C  0101               	movlb	1	; () banked
  1167   002C4E  BF8F               	btfsc	(_vals+7)& (0+255),7,b
  1168   002C50  EF33  F016         	goto	u3961
  1169   002C54  0E98               	movlw	152
  1170   002C56  5D8E               	subwf	(_vals+6)& (0+255),w,b
  1171   002C58  0E08               	movlw	8
  1172   002C5A  598F               	subwfb	(_vals+7)& (0+255),w,b
  1173   002C5C  A0D8               	btfss	status,0,c
  1174   002C5E  EF33  F016         	goto	u3961
  1175   002C62  EF35  F016         	goto	u3960
  1176   002C66                     u3961:
  1177   002C66  EFBA  F016         	goto	l4078
  1178   002C6A                     u3960:
  1179   002C6A                     
  1180                           ; BSR set to: 1
  1181                           ;main.c: 71:             stop(&motorL, &motorR);
  1182   002C6A  0EF6               	movlw	low _motorL
  1183   002C6C  6E14               	movwf	stop@mL^0,c
  1184   002C6E  0E00               	movlw	high _motorL
  1185   002C70  6E15               	movwf	(stop@mL+1)^0,c
  1186   002C72  0EED               	movlw	low _motorR
  1187   002C74  6E16               	movwf	stop@mR^0,c
  1188   002C76  0E00               	movlw	high _motorR
  1189   002C78  6E17               	movwf	(stop@mR+1)^0,c
  1190   002C7A  EC75  F01D         	call	_stop	;wreg free
  1191   002C7E                     
  1192                           ;main.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1193   002C7E  0E11               	movlw	17
  1194   002C80  6E5A               	movwf	(??_main+1)^0,c
  1195   002C82  0E3C               	movlw	60
  1196   002C84  6E59               	movwf	??_main^0,c
  1197   002C86  0ECB               	movlw	203
  1198   002C88                     u4007:
  1199   002C88  2EE8               	decfsz	wreg,f,c
  1200   002C8A  D7FE               	bra	u4007
  1201   002C8C  2E59               	decfsz	??_main^0,f,c
  1202   002C8E  D7FC               	bra	u4007
  1203   002C90  2E5A               	decfsz	(??_main+1)^0,f,c
  1204   002C92  D7FA               	bra	u4007
  1205   002C94  F000               	nop	
  1206   002C96                     
  1207                           ;main.c: 74:             int colour = Colour_decider(&vals, &rel);
  1208   002C96  0E88               	movlw	low _vals
  1209   002C98  6E4B               	movwf	Colour_decider@vals^0,c
  1210   002C9A  0E01               	movlw	high _vals
  1211   002C9C  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1212   002C9E  0E7C               	movlw	low _rel
  1213   002CA0  6E4D               	movwf	Colour_decider@rel^0,c
  1214   002CA2  0E01               	movlw	high _rel
  1215   002CA4  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1216   002CA6  EC28  F007         	call	_Colour_decider	;wreg free
  1217   002CAA  C04B  F0E4         	movff	?_Colour_decider,main@colour
  1218   002CAE  C04C  F0E5         	movff	?_Colour_decider+1,main@colour+1
  1219   002CB2                     
  1220                           ;main.c: 77:             if (colour==1){
  1221   002CB2  0100               	movlb	0	; () banked
  1222   002CB4  05E4               	decf	main@colour& (0+255),w,b
  1223   002CB6  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1224   002CB8  A4D8               	btfss	status,2,c
  1225   002CBA  EF61  F016         	goto	u3971
  1226   002CBE  EF63  F016         	goto	u3970
  1227   002CC2                     u3971:
  1228   002CC2  EF6F  F016         	goto	l4068
  1229   002CC6                     u3970:
  1230   002CC6                     
  1231                           ; BSR set to: 0
  1232                           ;main.c: 78:                 RedMove(&motorL, &motorR);
  1233   002CC6  0EF6               	movlw	low _motorL
  1234   002CC8  6E1F               	movwf	RedMove@mL^0,c
  1235   002CCA  0E00               	movlw	high _motorL
  1236   002CCC  6E20               	movwf	(RedMove@mL+1)^0,c
  1237   002CCE  0EED               	movlw	low _motorR
  1238   002CD0  6E21               	movwf	RedMove@mR^0,c
  1239   002CD2  0E00               	movlw	high _motorR
  1240   002CD4  6E22               	movwf	(RedMove@mR+1)^0,c
  1241   002CD6  EC9E  F020         	call	_RedMove	;wreg free
  1242                           
  1243                           ;main.c: 79:             }
  1244   002CDA  EF99  F016         	goto	l4076
  1245   002CDE                     l4068:
  1246                           
  1247                           ; BSR set to: 0
  1248   002CDE  0E04               	movlw	4
  1249   002CE0  19E4               	xorwf	main@colour& (0+255),w,b
  1250   002CE2  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1251   002CE4  A4D8               	btfss	status,2,c
  1252   002CE6  EF77  F016         	goto	u3981
  1253   002CEA  EF79  F016         	goto	u3980
  1254   002CEE                     u3981:
  1255   002CEE  EF85  F016         	goto	l4072
  1256   002CF2                     u3980:
  1257   002CF2                     
  1258                           ; BSR set to: 0
  1259                           ;main.c: 81:                 BlueMove(&motorL, &motorR);
  1260   002CF2  0EF6               	movlw	low _motorL
  1261   002CF4  6E1F               	movwf	BlueMove@mL^0,c
  1262   002CF6  0E00               	movlw	high _motorL
  1263   002CF8  6E20               	movwf	(BlueMove@mL+1)^0,c
  1264   002CFA  0EED               	movlw	low _motorR
  1265   002CFC  6E21               	movwf	BlueMove@mR^0,c
  1266   002CFE  0E00               	movlw	high _motorR
  1267   002D00  6E22               	movwf	(BlueMove@mR+1)^0,c
  1268   002D02  ECEA  F01D         	call	_BlueMove	;wreg free
  1269                           
  1270                           ;main.c: 82:             }
  1271   002D06  EF99  F016         	goto	l4076
  1272   002D0A                     l4072:
  1273                           
  1274                           ; BSR set to: 0
  1275   002D0A  0E05               	movlw	5
  1276   002D0C  19E4               	xorwf	main@colour& (0+255),w,b
  1277   002D0E  11E5               	iorwf	(main@colour+1)& (0+255),w,b
  1278   002D10  A4D8               	btfss	status,2,c
  1279   002D12  EF8D  F016         	goto	u3991
  1280   002D16  EF8F  F016         	goto	u3990
  1281   002D1A                     u3991:
  1282   002D1A  EF99  F016         	goto	l4076
  1283   002D1E                     u3990:
  1284   002D1E                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 84:                 GreenMove(&motorL, &motorR);
  1287   002D1E  0EF6               	movlw	low _motorL
  1288   002D20  6E1F               	movwf	GreenMove@mL^0,c
  1289   002D22  0E00               	movlw	high _motorL
  1290   002D24  6E20               	movwf	(GreenMove@mL+1)^0,c
  1291   002D26  0EED               	movlw	low _motorR
  1292   002D28  6E21               	movwf	GreenMove@mR^0,c
  1293   002D2A  0E00               	movlw	high _motorR
  1294   002D2C  6E22               	movwf	(GreenMove@mR+1)^0,c
  1295   002D2E  ECBD  F020         	call	_GreenMove	;wreg free
  1296   002D32                     l4076:
  1297                           
  1298                           ;main.c: 89:             sprintf(buf,"red=%d green=%d blue=%d lum=%d colour=%d \r\n",val
      +                          s.R, vals.G,vals.B,vals.L,colour);
  1299   002D32  0E80               	movlw	low main@buf
  1300   002D34  0100               	movlb	0	; () banked
  1301   002D36  6F60               	movwf	sprintf@s& (0+255),b
  1302   002D38  0E00               	movlw	high main@buf
  1303   002D3A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1304   002D3C  0E01               	movlw	low STR_1
  1305   002D3E  6F62               	movwf	sprintf@fmt& (0+255),b
  1306   002D40  0E0E               	movlw	high STR_1
  1307   002D42  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1308   002D44  C188  F064         	movff	_vals,?_sprintf+4
  1309   002D48  C189  F065         	movff	_vals+1,?_sprintf+5
  1310   002D4C  C18A  F066         	movff	_vals+2,?_sprintf+6
  1311   002D50  C18B  F067         	movff	_vals+3,?_sprintf+7
  1312   002D54  C18C  F068         	movff	_vals+4,?_sprintf+8
  1313   002D58  C18D  F069         	movff	_vals+5,?_sprintf+9
  1314   002D5C  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1315   002D60  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1316   002D64  C0E4  F06C         	movff	main@colour,?_sprintf+12
  1317   002D68  C0E5  F06D         	movff	main@colour+1,?_sprintf+13
  1318   002D6C  ECFF  F01E         	call	_sprintf	;wreg free
  1319                           
  1320                           ;main.c: 90:         }else{
  1321   002D70  EFD5  F016         	goto	l4080
  1322   002D74                     l4078:
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;main.c: 91:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals.
      +                          G,vals.B,vals.L);
  1326   002D74  0E80               	movlw	low main@buf
  1327   002D76  0100               	movlb	0	; () banked
  1328   002D78  6F60               	movwf	sprintf@s& (0+255),b
  1329   002D7A  0E00               	movlw	high main@buf
  1330   002D7C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1331   002D7E  0E2D               	movlw	low STR_2
  1332   002D80  6F62               	movwf	sprintf@fmt& (0+255),b
  1333   002D82  0E0E               	movlw	high STR_2
  1334   002D84  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1335   002D86  C188  F064         	movff	_vals,?_sprintf+4
  1336   002D8A  C189  F065         	movff	_vals+1,?_sprintf+5
  1337   002D8E  C18A  F066         	movff	_vals+2,?_sprintf+6
  1338   002D92  C18B  F067         	movff	_vals+3,?_sprintf+7
  1339   002D96  C18C  F068         	movff	_vals+4,?_sprintf+8
  1340   002D9A  C18D  F069         	movff	_vals+5,?_sprintf+9
  1341   002D9E  C18E  F06A         	movff	_vals+6,?_sprintf+10
  1342   002DA2  C18F  F06B         	movff	_vals+7,?_sprintf+11
  1343   002DA6  ECFF  F01E         	call	_sprintf	;wreg free
  1344   002DAA                     l4080:
  1345                           
  1346                           ;main.c: 95:         sendStringSerial4(buf);
  1347   002DAA  0E80               	movlw	low main@buf
  1348   002DAC  6E02               	movwf	sendStringSerial4@string^0,c
  1349   002DAE  0E00               	movlw	high main@buf
  1350   002DB0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1351   002DB2  ECDC  F020         	call	_sendStringSerial4	;wreg free
  1352   002DB6  EF0C  F016         	goto	l4050
  1353   002DBA  EF07  F000         	goto	start
  1354   002DBE                     __end_of_main:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _sprintf *****************
  1358 ;; Defined at:
  1359 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1362 ;;		 -> main@buf(100), 
  1363 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1364 ;;		 -> STR_2(34), STR_1(44), 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1367 ;;  ap              2   14[BANK0 ] PTR void [1]
  1368 ;;		 -> ?_sprintf(2), 
  1369 ;;  ret             2    0        int 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2    0[BANK0 ] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1379 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:       27 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 8
  1386 ;; This function calls:
  1387 ;;		_vfprintf
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text1
  1394   003DFE                     __ptext1:
  1395                           	callstack 0
  1396   003DFE                     _sprintf:
  1397                           	callstack 22
  1398   003DFE  0E64               	movlw	low (?_sprintf+4)
  1399   003E00  0100               	movlb	0	; () banked
  1400   003E02  6F6E               	movwf	sprintf@ap& (0+255),b
  1401   003E04  0E00               	movlw	high (?_sprintf+4)
  1402   003E06  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1403   003E08  C060  F070         	movff	sprintf@s,sprintf@f
  1404   003E0C  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1405   003E10                     
  1406                           ; BSR set to: 0
  1407   003E10  0E00               	movlw	0
  1408   003E12  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1409   003E14  0E00               	movlw	0
  1410   003E16  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1411   003E18                     
  1412                           ; BSR set to: 0
  1413   003E18  0E00               	movlw	0
  1414   003E1A  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1415   003E1C  0E00               	movlw	0
  1416   003E1E  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1417   003E20                     
  1418                           ; BSR set to: 0
  1419   003E20  0E70               	movlw	low sprintf@f
  1420   003E22  6E51               	movwf	vfprintf@fp^0,c
  1421   003E24  0E00               	movlw	high sprintf@f
  1422   003E26  6E52               	movwf	(vfprintf@fp+1)^0,c
  1423   003E28  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1424   003E2C  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1425   003E30  0E6E               	movlw	low sprintf@ap
  1426   003E32  6E55               	movwf	vfprintf@ap^0,c
  1427   003E34  0E00               	movlw	high sprintf@ap
  1428   003E36  6E56               	movwf	(vfprintf@ap+1)^0,c
  1429   003E38  ECF1  F01F         	call	_vfprintf	;wreg free
  1430   003E3C  0100               	movlb	0	; () banked
  1431   003E3E  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1432   003E40  2560               	addwf	sprintf@s& (0+255),w,b
  1433   003E42  6ED9               	movwf	fsr2l,c
  1434   003E44  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1435   003E46  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1436   003E48  6EDA               	movwf	fsr2h,c
  1437   003E4A  0E00               	movlw	0
  1438   003E4C  6EDF               	movwf	indf2,c
  1439   003E4E                     
  1440                           ; BSR set to: 0
  1441   003E4E  0012               	return		;funcret
  1442   003E50                     __end_of_sprintf:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _vfprintf *****************
  1446 ;; Defined at:
  1447 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1450 ;;		 -> sprintf@f(11), 
  1451 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1452 ;;		 -> STR_2(34), STR_1(44), 
  1453 ;;  ap              2   84[COMRAM] PTR PTR void 
  1454 ;;		 -> sprintf@ap(2), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1457 ;;		 -> STR_2(34), STR_1(44), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2   80[COMRAM] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1467 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;Total ram usage:        8 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 7
  1474 ;; This function calls:
  1475 ;;		_vfpfcnvrt
  1476 ;; This function is called by:
  1477 ;;		_sprintf
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text2
  1482   003FE2                     __ptext2:
  1483                           	callstack 0
  1484   003FE2                     _vfprintf:
  1485                           	callstack 22
  1486   003FE2                     
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1488   003FE2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1489   003FE6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1492   003FEA  EF05  F020         	goto	l3630
  1493   003FEE                     l3628:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1496   003FEE  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1497   003FF2  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1498   003FF6  0E57               	movlw	low vfprintf@cfmt
  1499   003FF8  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1500   003FFA  0E00               	movlw	high vfprintf@cfmt
  1501   003FFC  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1502   003FFE  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1503   004002  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1504   004006  ECE5  F019         	call	_vfpfcnvrt	;wreg free
  1505   00400A                     l3630:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1508   00400A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1509   00400E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1510   004012                     	if	0	;tblptru may be non-zero
  1511   004012                     	endif
  1512   004012                     	if	0	;tblptru may be non-zero
  1513   004012                     	endif
  1514   004012  0008               	tblrd		*
  1515   004014  50F5               	movf	tablat,w,c
  1516   004016  0900               	iorlw	0
  1517   004018  A4D8               	btfss	status,2,c
  1518   00401A  EF11  F020         	goto	u3521
  1519   00401E  EF13  F020         	goto	u3520
  1520   004022                     u3521:
  1521   004022  EFF7  F01F         	goto	l3628
  1522   004026                     u3520:
  1523   004026                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1525   004026  0E00               	movlw	0
  1526   004028  6E52               	movwf	(?_vfprintf+1)^0,c
  1527   00402A  0E00               	movlw	0
  1528   00402C  6E51               	movwf	?_vfprintf^0,c
  1529   00402E  0012               	return		;funcret
  1530   004030                     __end_of_vfprintf:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _vfpfcnvrt *****************
  1534 ;; Defined at:
  1535 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1538 ;;		 -> sprintf@f(11), 
  1539 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1540 ;;		 -> vfprintf@cfmt(2), 
  1541 ;;  ap              2   66[COMRAM] PTR PTR void 
  1542 ;;		 -> sprintf@ap(2), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  convarg         8   70[COMRAM] struct .
  1545 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1546 ;;		 -> STR_2(34), STR_1(44), 
  1547 ;;  i               2    0        int 
  1548 ;;  done            2    0        int 
  1549 ;;  c               1    0        unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1559 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;Total ram usage:       18 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 6
  1566 ;; This function calls:
  1567 ;;		_dtoa
  1568 ;;		_fputc
  1569 ;; This function is called by:
  1570 ;;		_vfprintf
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text3
  1575   0033CA                     __ptext3:
  1576                           	callstack 0
  1577   0033CA                     _vfpfcnvrt:
  1578                           	callstack 22
  1579   0033CA                     
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1581   0033CA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582   0033CE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583   0033D2  CFDE FFF6          	movff	postinc2,tblptrl
  1584   0033D6  CFDD FFF7          	movff	postdec2,tblptrh
  1585   0033DA                     	if	0	;tblptru may be non-zero
  1586   0033DA                     	endif
  1587   0033DA                     	if	0	;tblptru may be non-zero
  1588   0033DA                     	endif
  1589   0033DA  0008               	tblrd		*
  1590   0033DC  50F5               	movf	tablat,w,c
  1591   0033DE  0A25               	xorlw	37
  1592   0033E0  A4D8               	btfss	status,2,c
  1593   0033E2  EFF5  F019         	goto	u2881
  1594   0033E6  EFF7  F019         	goto	u2880
  1595   0033EA                     u2881:
  1596   0033EA  EF77  F01A         	goto	l3202
  1597   0033EE                     u2880:
  1598   0033EE                     
  1599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1600   0033EE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1601   0033F2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1602   0033F6  2ADE               	incf	postinc2,f,c
  1603   0033F8  0E00               	movlw	0
  1604   0033FA  22DD               	addwfc	postdec2,f,c
  1605   0033FC                     
  1606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1607   0033FC  0E00               	movlw	0
  1608   0033FE  0100               	movlb	0	; () banked
  1609   003400  6FE7               	movwf	(_width+1)& (0+255),b
  1610   003402  0E00               	movlw	0
  1611   003404  6FE6               	movwf	_width& (0+255),b
  1612   003406  C0E6  F0EC         	movff	_width,_flags
  1613   00340A                     
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1616   00340A  69E8               	setf	_prec& (0+255),b
  1617   00340C  69E9               	setf	(_prec+1)& (0+255),b
  1618   00340E                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1621   00340E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622   003412  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623   003416  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1624   00341A  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1625   00341E                     
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1628   00341E  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1629   003422  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1630   003426                     	if	0	;tblptru may be non-zero
  1631   003426                     	endif
  1632   003426                     	if	0	;tblptru may be non-zero
  1633   003426                     	endif
  1634   003426  0008               	tblrd		*
  1635   003428  50F5               	movf	tablat,w,c
  1636   00342A  0A64               	xorlw	100
  1637   00342C  B4D8               	btfsc	status,2,c
  1638   00342E  EF1B  F01A         	goto	u2891
  1639   003432  EF1D  F01A         	goto	u2890
  1640   003436                     u2891:
  1641   003436  EF2B  F01A         	goto	l3192
  1642   00343A                     u2890:
  1643   00343A                     
  1644                           ; BSR set to: 0
  1645   00343A  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1646   00343E  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1647   003442                     	if	0	;tblptru may be non-zero
  1648   003442                     	endif
  1649   003442                     	if	0	;tblptru may be non-zero
  1650   003442                     	endif
  1651   003442  0008               	tblrd		*
  1652   003444  50F5               	movf	tablat,w,c
  1653   003446  0A69               	xorlw	105
  1654   003448  A4D8               	btfss	status,2,c
  1655   00344A  EF29  F01A         	goto	u2901
  1656   00344E  EF2B  F01A         	goto	u2900
  1657   003452                     u2901:
  1658   003452  EF6E  F01A         	goto	l3198
  1659   003456                     u2900:
  1660   003456                     l3192:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1664   003456  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1665   00345A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1666   00345E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1667   003462  0E02               	movlw	2
  1668   003464  26DE               	addwf	postinc2,f,c
  1669   003466  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1670   00346A  0E00               	movlw	0
  1671   00346C  22DD               	addwfc	postdec2,f,c
  1672   00346E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1673   003472  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1674   003476  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1675   00347A  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1676   00347E  0E00               	movlw	0
  1677   003480  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1678   003482  0EFF               	movlw	-1
  1679   003484  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1680   003486  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1681   003488  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1682   00348A  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1683   00348C  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1684   00348E  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1687   003490  0E01               	movlw	1
  1688   003492  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1689   003494  6E45               	movwf	??_vfpfcnvrt^0,c
  1690   003496  0E00               	movlw	0
  1691   003498  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1692   00349A  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1693   00349C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694   0034A0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695   0034A4  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1696   0034A8  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1697   0034AC                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1700   0034AC  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1701   0034B0  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1702   0034B4  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1703   0034B8  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1704   0034BC  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1705   0034C0  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1706   0034C4  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1707   0034C8  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1708   0034CC  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1709   0034D0  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1710   0034D4  EC94  F014         	call	_dtoa	;wreg free
  1711   0034D8  EF8B  F01A         	goto	l1212
  1712   0034DC                     l3198:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1715   0034DC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716   0034E0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717   0034E4  2ADE               	incf	postinc2,f,c
  1718   0034E6  0E00               	movlw	0
  1719   0034E8  22DD               	addwfc	postdec2,f,c
  1720   0034EA  EF8B  F01A         	goto	l1212
  1721   0034EE                     l3202:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1724   0034EE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1725   0034F2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1726   0034F6  CFDE FFF6          	movff	postinc2,tblptrl
  1727   0034FA  CFDD FFF7          	movff	postdec2,tblptrh
  1728   0034FE                     	if	0	;tblptru may be non-zero
  1729   0034FE                     	endif
  1730   0034FE                     	if	0	;tblptru may be non-zero
  1731   0034FE                     	endif
  1732   0034FE  0008               	tblrd		*
  1733   003500  50F5               	movf	tablat,w,c
  1734   003502  6E01               	movwf	fputc@c^0,c
  1735   003504  6A02               	clrf	(fputc@c+1)^0,c
  1736   003506  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1737   00350A  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1738   00350E  EC0E  F01B         	call	_fputc	;wreg free
  1739   003512  EF6E  F01A         	goto	l3198
  1740   003516                     l1212:
  1741   003516  0012               	return		;funcret
  1742   003518                     __end_of_vfpfcnvrt:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _dtoa *****************
  1746 ;; Defined at:
  1747 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1750 ;;		 -> sprintf@f(11), 
  1751 ;;  d               8   29[COMRAM] long long 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  n               8   51[COMRAM] long long 
  1754 ;;  i               2   59[COMRAM] int 
  1755 ;;  w               2   49[COMRAM] int 
  1756 ;;  p               2   47[COMRAM] int 
  1757 ;;  s               1   61[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1767 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;Total ram usage:       35 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 5
  1774 ;; This function calls:
  1775 ;;		___aodiv
  1776 ;;		___aomod
  1777 ;;		_abs
  1778 ;;		_pad
  1779 ;; This function is called by:
  1780 ;;		_vfpfcnvrt
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text4
  1785   002928                     __ptext4:
  1786                           	callstack 0
  1787   002928                     _dtoa:
  1788                           	callstack 22
  1789   002928                     
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1791   002928  C01E  F034         	movff	dtoa@d,dtoa@n
  1792   00292C  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1793   002930  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1794   002934  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1795   002938  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1796   00293C  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1797   002940  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1798   002944  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1799   002948                     
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1801   002948  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1802   00294A  EFA9  F014         	goto	u2291
  1803   00294E  EFAC  F014         	goto	u2290
  1804   002952                     u2291:
  1805   002952  0E01               	movlw	1
  1806   002954  EFAD  F014         	goto	u2300
  1807   002958                     u2290:
  1808   002958  0E00               	movlw	0
  1809   00295A                     u2300:
  1810   00295A  6E3E               	movwf	dtoa@s^0,c
  1811   00295C                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1813   00295C  503E               	movf	dtoa@s^0,w,c
  1814   00295E  B4D8               	btfsc	status,2,c
  1815   002960  EFB4  F014         	goto	u2311
  1816   002964  EFB6  F014         	goto	u2310
  1817   002968                     u2311:
  1818   002968  EFC6  F014         	goto	l2846
  1819   00296C                     u2310:
  1820   00296C                     
  1821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1822   00296C  1E3B               	comf	(dtoa@n+7)^0,f,c
  1823   00296E  1E3A               	comf	(dtoa@n+6)^0,f,c
  1824   002970  1E39               	comf	(dtoa@n+5)^0,f,c
  1825   002972  1E38               	comf	(dtoa@n+4)^0,f,c
  1826   002974  1E37               	comf	(dtoa@n+3)^0,f,c
  1827   002976  1E36               	comf	(dtoa@n+2)^0,f,c
  1828   002978  1E35               	comf	(dtoa@n+1)^0,f,c
  1829   00297A  6C34               	negf	dtoa@n^0,c
  1830   00297C  0E00               	movlw	0
  1831   00297E  2235               	addwfc	(dtoa@n+1)^0,f,c
  1832   002980  2236               	addwfc	(dtoa@n+2)^0,f,c
  1833   002982  2237               	addwfc	(dtoa@n+3)^0,f,c
  1834   002984  2238               	addwfc	(dtoa@n+4)^0,f,c
  1835   002986  2239               	addwfc	(dtoa@n+5)^0,f,c
  1836   002988  223A               	addwfc	(dtoa@n+6)^0,f,c
  1837   00298A  223B               	addwfc	(dtoa@n+7)^0,f,c
  1838   00298C                     l2846:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1841   00298C  0100               	movlb	0	; () banked
  1842   00298E  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  1843   002990  EFD4  F014         	goto	u2320
  1844   002994  51E9               	movf	(_prec+1)& (0+255),w,b
  1845   002996  E106               	bnz	u2321
  1846   002998  05E8               	decf	_prec& (0+255),w,b
  1847   00299A  B0D8               	btfsc	status,0,c
  1848   00299C  EFD2  F014         	goto	u2321
  1849   0029A0  EFD4  F014         	goto	u2320
  1850   0029A4                     u2321:
  1851   0029A4  EFDA  F014         	goto	l1191
  1852   0029A8                     u2320:
  1853   0029A8                     
  1854                           ; BSR set to: 0
  1855   0029A8  0E00               	movlw	0
  1856   0029AA  6E31               	movwf	(dtoa@p+1)^0,c
  1857   0029AC  0E01               	movlw	1
  1858   0029AE  6E30               	movwf	dtoa@p^0,c
  1859   0029B0  EFDE  F014         	goto	l1193
  1860   0029B4                     l1191:
  1861                           
  1862                           ; BSR set to: 0
  1863   0029B4  C0E8  F030         	movff	_prec,dtoa@p
  1864   0029B8  C0E9  F031         	movff	_prec+1,dtoa@p+1
  1865   0029BC                     l1193:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1869   0029BC  C0E6  F032         	movff	_width,dtoa@w
  1870   0029C0  C0E7  F033         	movff	_width+1,dtoa@w+1
  1871   0029C4                     
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1874   0029C4  503E               	movf	dtoa@s^0,w,c
  1875   0029C6  B4D8               	btfsc	status,2,c
  1876   0029C8  EFE8  F014         	goto	u2331
  1877   0029CC  EFEA  F014         	goto	u2330
  1878   0029D0                     u2331:
  1879   0029D0  EF01  F015         	goto	l1194
  1880   0029D4                     u2330:
  1881   0029D4                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1884   0029D4  0632               	decf	dtoa@w^0,f,c
  1885   0029D6  A0D8               	btfss	status,0,c
  1886   0029D8  0633               	decf	(dtoa@w+1)^0,f,c
  1887   0029DA                     
  1888                           ; BSR set to: 0
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1890   0029DA  503E               	movf	dtoa@s^0,w,c
  1891   0029DC  A4D8               	btfss	status,2,c
  1892   0029DE  EFF3  F014         	goto	u2341
  1893   0029E2  EFF5  F014         	goto	u2340
  1894   0029E6                     u2341:
  1895   0029E6  EFFB  F014         	goto	l2858
  1896   0029EA                     u2340:
  1897   0029EA                     
  1898                           ; BSR set to: 0
  1899   0029EA  0E00               	movlw	0
  1900   0029EC  6E2F               	movwf	(_dtoa$2195+1)^0,c
  1901   0029EE  0E2B               	movlw	43
  1902   0029F0  6E2E               	movwf	_dtoa$2195^0,c
  1903   0029F2  EFFF  F014         	goto	l2860
  1904   0029F6                     l2858:
  1905                           
  1906                           ; BSR set to: 0
  1907   0029F6  0E00               	movlw	0
  1908   0029F8  6E2F               	movwf	(_dtoa$2195+1)^0,c
  1909   0029FA  0E2D               	movlw	45
  1910   0029FC  6E2E               	movwf	_dtoa$2195^0,c
  1911   0029FE                     l2860:
  1912                           
  1913                           ; BSR set to: 0
  1914   0029FE  C02E  F03E         	movff	_dtoa$2195,dtoa@s
  1915   002A02                     l1194:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1919   002A02  0E00               	movlw	0
  1920   002A04  6E3D               	movwf	(dtoa@i+1)^0,c
  1921   002A06  0E1F               	movlw	31
  1922   002A08  6E3C               	movwf	dtoa@i^0,c
  1923   002A0A                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1926   002A0A  0E00               	movlw	0
  1927   002A0C  0101               	movlb	1	; () banked
  1928   002A0E  6F7B               	movwf	(_dbuf+31)& (0+255),b
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1931   002A10  EF86  F015         	goto	l2874
  1932   002A14                     l2864:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1935   002A14  063C               	decf	dtoa@i^0,f,c
  1936   002A16  A0D8               	btfss	status,0,c
  1937   002A18  063D               	decf	(dtoa@i+1)^0,f,c
  1938   002A1A                     
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1940   002A1A  0E5C               	movlw	low _dbuf
  1941   002A1C  243C               	addwf	dtoa@i^0,w,c
  1942   002A1E  6ED9               	movwf	fsr2l,c
  1943   002A20  0E01               	movlw	high _dbuf
  1944   002A22  203D               	addwfc	(dtoa@i+1)^0,w,c
  1945   002A24  6EDA               	movwf	fsr2h,c
  1946   002A26  C034  F001         	movff	dtoa@n,___aomod@dividend
  1947   002A2A  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1948   002A2E  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1949   002A32  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1950   002A36  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1951   002A3A  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1952   002A3E  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1953   002A42  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1954   002A46  0E0A               	movlw	10
  1955   002A48  6E09               	movwf	___aomod@divisor^0,c
  1956   002A4A  0E00               	movlw	0
  1957   002A4C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1958   002A4E  0E00               	movlw	0
  1959   002A50  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1960   002A52  0E00               	movlw	0
  1961   002A54  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1962   002A56  0E00               	movlw	0
  1963   002A58  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1964   002A5A  0E00               	movlw	0
  1965   002A5C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1966   002A5E  0E00               	movlw	0
  1967   002A60  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1968   002A62  0E00               	movlw	0
  1969   002A64  6E10               	movwf	(___aomod@divisor+7)^0,c
  1970   002A66  EC33  F019         	call	___aomod	;wreg free
  1971   002A6A  C001  F026         	movff	?___aomod,??_dtoa
  1972   002A6E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1973   002A72  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1974   002A76  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1975   002A7A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1976   002A7E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1977   002A82  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1978   002A86  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1979   002A8A  C026  F013         	movff	??_dtoa,abs@a
  1980   002A8E  C027  F014         	movff	??_dtoa+1,abs@a+1
  1981   002A92  EC7E  F020         	call	_abs	;wreg free
  1982   002A96  5013               	movf	?_abs^0,w,c
  1983   002A98  0F30               	addlw	48
  1984   002A9A  6EDF               	movwf	indf2,c
  1985   002A9C                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1987   002A9C  0630               	decf	dtoa@p^0,f,c
  1988   002A9E  A0D8               	btfss	status,0,c
  1989   002AA0  0631               	decf	(dtoa@p+1)^0,f,c
  1990   002AA2                     
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1992   002AA2  0632               	decf	dtoa@w^0,f,c
  1993   002AA4  A0D8               	btfss	status,0,c
  1994   002AA6  0633               	decf	(dtoa@w+1)^0,f,c
  1995   002AA8                     
  1996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1997   002AA8  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1998   002AAC  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1999   002AB0  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2000   002AB4  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2001   002AB8  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2002   002ABC  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2003   002AC0  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2004   002AC4  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2005   002AC8  0E0A               	movlw	10
  2006   002ACA  6E09               	movwf	___aodiv@divisor^0,c
  2007   002ACC  0E00               	movlw	0
  2008   002ACE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2009   002AD0  0E00               	movlw	0
  2010   002AD2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2011   002AD4  0E00               	movlw	0
  2012   002AD6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2013   002AD8  0E00               	movlw	0
  2014   002ADA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2015   002ADC  0E00               	movlw	0
  2016   002ADE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2017   002AE0  0E00               	movlw	0
  2018   002AE2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2019   002AE4  0E00               	movlw	0
  2020   002AE6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2021   002AE8  ECB9  F017         	call	___aodiv	;wreg free
  2022   002AEC  C001  F034         	movff	?___aodiv,dtoa@n
  2023   002AF0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2024   002AF4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2025   002AF8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2026   002AFC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2027   002B00  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2028   002B04  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2029   002B08  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2030   002B0C                     l2874:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2033   002B0C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2034   002B0E  EF91  F015         	goto	u2351
  2035   002B12  503D               	movf	(dtoa@i+1)^0,w,c
  2036   002B14  E108               	bnz	u2350
  2037   002B16  043C               	decf	dtoa@i^0,w,c
  2038   002B18  A0D8               	btfss	status,0,c
  2039   002B1A  EF91  F015         	goto	u2351
  2040   002B1E  EF93  F015         	goto	u2350
  2041   002B22                     u2351:
  2042   002B22  EFAF  F015         	goto	l2880
  2043   002B26                     u2350:
  2044   002B26  5034               	movf	dtoa@n^0,w,c
  2045   002B28  1035               	iorwf	(dtoa@n+1)^0,w,c
  2046   002B2A  1036               	iorwf	(dtoa@n+2)^0,w,c
  2047   002B2C  1037               	iorwf	(dtoa@n+3)^0,w,c
  2048   002B2E  1038               	iorwf	(dtoa@n+4)^0,w,c
  2049   002B30  1039               	iorwf	(dtoa@n+5)^0,w,c
  2050   002B32  103A               	iorwf	(dtoa@n+6)^0,w,c
  2051   002B34  103B               	iorwf	(dtoa@n+7)^0,w,c
  2052   002B36  A4D8               	btfss	status,2,c
  2053   002B38  EFA0  F015         	goto	u2361
  2054   002B3C  EFA2  F015         	goto	u2360
  2055   002B40                     u2361:
  2056   002B40  EF0A  F015         	goto	l2864
  2057   002B44                     u2360:
  2058   002B44  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2059   002B46  EFAF  F015         	goto	u2370
  2060   002B4A  5031               	movf	(dtoa@p+1)^0,w,c
  2061   002B4C  E106               	bnz	u2371
  2062   002B4E  0430               	decf	dtoa@p^0,w,c
  2063   002B50  B0D8               	btfsc	status,0,c
  2064   002B52  EFAD  F015         	goto	u2371
  2065   002B56  EFAF  F015         	goto	u2370
  2066   002B5A                     u2371:
  2067   002B5A  EF0A  F015         	goto	l2864
  2068   002B5E                     u2370:
  2069   002B5E                     l2880:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2072   002B5E  503E               	movf	dtoa@s^0,w,c
  2073   002B60  B4D8               	btfsc	status,2,c
  2074   002B62  EFB5  F015         	goto	u2381
  2075   002B66  EFB7  F015         	goto	u2380
  2076   002B6A                     u2381:
  2077   002B6A  EFC2  F015         	goto	l2886
  2078   002B6E                     u2380:
  2079   002B6E                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2081   002B6E  063C               	decf	dtoa@i^0,f,c
  2082   002B70  A0D8               	btfss	status,0,c
  2083   002B72  063D               	decf	(dtoa@i+1)^0,f,c
  2084   002B74                     
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2086   002B74  0E5C               	movlw	low _dbuf
  2087   002B76  243C               	addwf	dtoa@i^0,w,c
  2088   002B78  6ED9               	movwf	fsr2l,c
  2089   002B7A  0E01               	movlw	high _dbuf
  2090   002B7C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2091   002B7E  6EDA               	movwf	fsr2h,c
  2092   002B80  C03E  FFDF         	movff	dtoa@s,indf2
  2093   002B84                     l2886:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2096   002B84  C01C  F011         	movff	dtoa@fp,pad@fp
  2097   002B88  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2098   002B8C  0E5C               	movlw	low _dbuf
  2099   002B8E  243C               	addwf	dtoa@i^0,w,c
  2100   002B90  6E13               	movwf	pad@buf^0,c
  2101   002B92  0E01               	movlw	high _dbuf
  2102   002B94  203D               	addwfc	(dtoa@i+1)^0,w,c
  2103   002B96  6E14               	movwf	(pad@buf+1)^0,c
  2104   002B98  C032  F015         	movff	dtoa@w,pad@p
  2105   002B9C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2106   002BA0  EC38  F01D         	call	_pad	;wreg free
  2107   002BA4  0012               	return		;funcret
  2108   002BA6                     __end_of_dtoa:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _pad *****************
  2112 ;; Defined at:
  2113 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2116 ;;		 -> sprintf@f(11), 
  2117 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2118 ;;		 -> dbuf(32), 
  2119 ;;  p               2   20[COMRAM] int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  w               2   25[COMRAM] int 
  2122 ;;  i               2   23[COMRAM] int 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;Total ram usage:       11 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 4
  2139 ;; This function calls:
  2140 ;;		_fputc
  2141 ;;		_fputs
  2142 ;; This function is called by:
  2143 ;;		_dtoa
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text5
  2148   003A70                     __ptext5:
  2149                           	callstack 0
  2150   003A70                     _pad:
  2151                           	callstack 22
  2152   003A70                     
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2154   003A70  BE16               	btfsc	(pad@p+1)^0,7,c
  2155   003A72  EF3D  F01D         	goto	u2221
  2156   003A76  EF3F  F01D         	goto	u2220
  2157   003A7A                     u2221:
  2158   003A7A  EF45  F01D         	goto	l2804
  2159   003A7E                     u2220:
  2160   003A7E  C015  F01A         	movff	pad@p,pad@w
  2161   003A82  C016  F01B         	movff	pad@p+1,pad@w+1
  2162   003A86  EF49  F01D         	goto	l1182
  2163   003A8A                     l2804:
  2164   003A8A  0E00               	movlw	0
  2165   003A8C  6E1B               	movwf	(pad@w+1)^0,c
  2166   003A8E  0E00               	movlw	0
  2167   003A90  6E1A               	movwf	pad@w^0,c
  2168   003A92                     l1182:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2171   003A92  0E00               	movlw	0
  2172   003A94  6E19               	movwf	(pad@i+1)^0,c
  2173   003A96  0E00               	movlw	0
  2174   003A98  6E18               	movwf	pad@i^0,c
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2177   003A9A  EF5B  F01D         	goto	l2810
  2178   003A9E                     l2806:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2181   003A9E  0E00               	movlw	0
  2182   003AA0  6E02               	movwf	(fputc@c+1)^0,c
  2183   003AA2  0E20               	movlw	32
  2184   003AA4  6E01               	movwf	fputc@c^0,c
  2185   003AA6  C011  F003         	movff	pad@fp,fputc@fp
  2186   003AAA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2187   003AAE  EC0E  F01B         	call	_fputc	;wreg free
  2188   003AB2                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2190   003AB2  4A18               	infsnz	pad@i^0,f,c
  2191   003AB4  2A19               	incf	(pad@i+1)^0,f,c
  2192   003AB6                     l2810:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2195   003AB6  501A               	movf	pad@w^0,w,c
  2196   003AB8  5C18               	subwf	pad@i^0,w,c
  2197   003ABA  5019               	movf	(pad@i+1)^0,w,c
  2198   003ABC  0A80               	xorlw	128
  2199   003ABE  6E17               	movwf	??_pad^0,c
  2200   003AC0  501B               	movf	(pad@w+1)^0,w,c
  2201   003AC2  0A80               	xorlw	128
  2202   003AC4  5817               	subwfb	??_pad^0,w,c
  2203   003AC6  A0D8               	btfss	status,0,c
  2204   003AC8  EF68  F01D         	goto	u2231
  2205   003ACC  EF6A  F01D         	goto	u2230
  2206   003AD0                     u2231:
  2207   003AD0  EF4F  F01D         	goto	l2806
  2208   003AD4                     u2230:
  2209   003AD4                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2211   003AD4  C013  F00A         	movff	pad@buf,fputs@s
  2212   003AD8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2213   003ADC  C011  F00C         	movff	pad@fp,fputs@fp
  2214   003AE0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2215   003AE4  EC3B  F020         	call	_fputs	;wreg free
  2216   003AE8  0012               	return		;funcret
  2217   003AEA                     __end_of_pad:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _fputs *****************
  2221 ;; Defined at:
  2222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2225 ;;		 -> dbuf(32), 
  2226 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2227 ;;		 -> sprintf@f(11), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  i               2   14[COMRAM] int 
  2230 ;;  c               1   13[COMRAM] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    9[COMRAM] int 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;Total ram usage:        7 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 3
  2247 ;; This function calls:
  2248 ;;		_fputc
  2249 ;; This function is called by:
  2250 ;;		_pad
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text6
  2255   004076                     __ptext6:
  2256                           	callstack 0
  2257   004076                     _fputs:
  2258                           	callstack 22
  2259   004076  0E00               	movlw	0
  2260   004078  6E10               	movwf	(fputs@i+1)^0,c
  2261   00407A  0E00               	movlw	0
  2262   00407C  6E0F               	movwf	fputs@i^0,c
  2263   00407E  EF4C  F020         	goto	l2690
  2264   004082                     l2686:
  2265   004082  C00E  F001         	movff	fputs@c,fputc@c
  2266   004086  6A02               	clrf	(fputc@c+1)^0,c
  2267   004088  C00C  F003         	movff	fputs@fp,fputc@fp
  2268   00408C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2269   004090  EC0E  F01B         	call	_fputc	;wreg free
  2270   004094  4A0F               	infsnz	fputs@i^0,f,c
  2271   004096  2A10               	incf	(fputs@i+1)^0,f,c
  2272   004098                     l2690:
  2273   004098  500F               	movf	fputs@i^0,w,c
  2274   00409A  240A               	addwf	fputs@s^0,w,c
  2275   00409C  6ED9               	movwf	fsr2l,c
  2276   00409E  5010               	movf	(fputs@i+1)^0,w,c
  2277   0040A0  200B               	addwfc	(fputs@s+1)^0,w,c
  2278   0040A2  6EDA               	movwf	fsr2h,c
  2279   0040A4  50DF               	movf	indf2,w,c
  2280   0040A6  6E0E               	movwf	fputs@c^0,c
  2281   0040A8  500E               	movf	fputs@c^0,w,c
  2282   0040AA  A4D8               	btfss	status,2,c
  2283   0040AC  EF5A  F020         	goto	u2051
  2284   0040B0  EF5C  F020         	goto	u2050
  2285   0040B4                     u2051:
  2286   0040B4  EF41  F020         	goto	l2686
  2287   0040B8                     u2050:
  2288   0040B8  0012               	return		;funcret
  2289   0040BA                     __end_of_fputs:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _fputc *****************
  2293 ;; Defined at:
  2294 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  c               2    0[COMRAM] int 
  2297 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2298 ;;		 -> sprintf@f(11), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2    0[COMRAM] int 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;Total ram usage:        9 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 2
  2317 ;; This function calls:
  2318 ;;		_putch
  2319 ;; This function is called by:
  2320 ;;		_pad
  2321 ;;		_vfpfcnvrt
  2322 ;;		_fputs
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text7
  2327   00361C                     __ptext7:
  2328                           	callstack 0
  2329   00361C                     _fputc:
  2330                           	callstack 25
  2331   00361C  5003               	movf	fputc@fp^0,w,c
  2332   00361E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2333   003620  B4D8               	btfsc	status,2,c
  2334   003622  EF15  F01B         	goto	u2011
  2335   003626  EF17  F01B         	goto	u2010
  2336   00362A                     u2011:
  2337   00362A  EF20  F01B         	goto	l2674
  2338   00362E                     u2010:
  2339   00362E  5003               	movf	fputc@fp^0,w,c
  2340   003630  1004               	iorwf	(fputc@fp+1)^0,w,c
  2341   003632  A4D8               	btfss	status,2,c
  2342   003634  EF1E  F01B         	goto	u2021
  2343   003638  EF20  F01B         	goto	u2020
  2344   00363C                     u2021:
  2345   00363C  EF25  F01B         	goto	l2676
  2346   003640                     u2020:
  2347   003640                     l2674:
  2348   003640  5001               	movf	fputc@c^0,w,c
  2349   003642  EC71  F021         	call	_putch
  2350   003646  EF72  F01B         	goto	l1237
  2351   00364A                     l2676:
  2352   00364A  EE20 F009          	lfsr	2,9
  2353   00364E  5003               	movf	fputc@fp^0,w,c
  2354   003650  26D9               	addwf	fsr2l,f,c
  2355   003652  5004               	movf	(fputc@fp+1)^0,w,c
  2356   003654  22DA               	addwfc	fsr2h,f,c
  2357   003656  50DE               	movf	postinc2,w,c
  2358   003658  10DE               	iorwf	postinc2,w,c
  2359   00365A  B4D8               	btfsc	status,2,c
  2360   00365C  EF32  F01B         	goto	u2031
  2361   003660  EF34  F01B         	goto	u2030
  2362   003664                     u2031:
  2363   003664  EF4F  F01B         	goto	l2680
  2364   003668                     u2030:
  2365   003668  EE20 F009          	lfsr	2,9
  2366   00366C  5003               	movf	fputc@fp^0,w,c
  2367   00366E  26D9               	addwf	fsr2l,f,c
  2368   003670  5004               	movf	(fputc@fp+1)^0,w,c
  2369   003672  22DA               	addwfc	fsr2h,f,c
  2370   003674  EE10 F003          	lfsr	1,3
  2371   003678  5003               	movf	fputc@fp^0,w,c
  2372   00367A  26E1               	addwf	fsr1l,f,c
  2373   00367C  5004               	movf	(fputc@fp+1)^0,w,c
  2374   00367E  22E2               	addwfc	fsr1h,f,c
  2375   003680  50DE               	movf	postinc2,w,c
  2376   003682  5CE6               	subwf	postinc1,w,c
  2377   003684  50E6               	movf	postinc1,w,c
  2378   003686  0A80               	xorlw	128
  2379   003688  6E09               	movwf	(??_fputc+4)^0,c
  2380   00368A  50DE               	movf	postinc2,w,c
  2381   00368C  0A80               	xorlw	128
  2382   00368E  5809               	subwfb	(??_fputc+4)^0,w,c
  2383   003690  B0D8               	btfsc	status,0,c
  2384   003692  EF4D  F01B         	goto	u2041
  2385   003696  EF4F  F01B         	goto	u2040
  2386   00369A                     u2041:
  2387   00369A  EF72  F01B         	goto	l1237
  2388   00369E                     u2040:
  2389   00369E                     l2680:
  2390   00369E  EE20 F003          	lfsr	2,3
  2391   0036A2  5003               	movf	fputc@fp^0,w,c
  2392   0036A4  26D9               	addwf	fsr2l,f,c
  2393   0036A6  5004               	movf	(fputc@fp+1)^0,w,c
  2394   0036A8  22DA               	addwfc	fsr2h,f,c
  2395   0036AA  CFDE F005          	movff	postinc2,??_fputc
  2396   0036AE  CFDD F006          	movff	postdec2,??_fputc+1
  2397   0036B2  C003  FFD9         	movff	fputc@fp,fsr2l
  2398   0036B6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2399   0036BA  CFDE F007          	movff	postinc2,??_fputc+2
  2400   0036BE  CFDD F008          	movff	postdec2,??_fputc+3
  2401   0036C2  5005               	movf	??_fputc^0,w,c
  2402   0036C4  2407               	addwf	(??_fputc+2)^0,w,c
  2403   0036C6  6ED9               	movwf	fsr2l,c
  2404   0036C8  5006               	movf	(??_fputc+1)^0,w,c
  2405   0036CA  2008               	addwfc	(??_fputc+3)^0,w,c
  2406   0036CC  6EDA               	movwf	fsr2h,c
  2407   0036CE  C001  FFDF         	movff	fputc@c,indf2
  2408   0036D2  EE20 F003          	lfsr	2,3
  2409   0036D6  5003               	movf	fputc@fp^0,w,c
  2410   0036D8  26D9               	addwf	fsr2l,f,c
  2411   0036DA  5004               	movf	(fputc@fp+1)^0,w,c
  2412   0036DC  22DA               	addwfc	fsr2h,f,c
  2413   0036DE  2ADE               	incf	postinc2,f,c
  2414   0036E0  0E00               	movlw	0
  2415   0036E2  22DD               	addwfc	postdec2,f,c
  2416   0036E4                     l1237:
  2417   0036E4  0012               	return		;funcret
  2418   0036E6                     __end_of_fputc:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _putch *****************
  2422 ;; Defined at:
  2423 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  c               1    wreg     unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  c               1    0[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_fputc
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text8
  2452   0042E2                     __ptext8:
  2453                           	callstack 0
  2454   0042E2                     _putch:
  2455                           	callstack 25
  2456   0042E2  0012               	return		;funcret
  2457   0042E4                     __end_of_putch:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _abs *****************
  2461 ;; Defined at:
  2462 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  a               2   18[COMRAM] int 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2   18[COMRAM] int 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;Total ram usage:        4 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_dtoa
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text9
  2491   0040FC                     __ptext9:
  2492                           	callstack 0
  2493   0040FC                     _abs:
  2494                           	callstack 25
  2495   0040FC  BE14               	btfsc	(abs@a+1)^0,7,c
  2496   0040FE  EF8B  F020         	goto	u2240
  2497   004102  5014               	movf	(abs@a+1)^0,w,c
  2498   004104  E106               	bnz	u2241
  2499   004106  0413               	decf	abs@a^0,w,c
  2500   004108  B0D8               	btfsc	status,0,c
  2501   00410A  EF89  F020         	goto	u2241
  2502   00410E  EF8B  F020         	goto	u2240
  2503   004112                     u2241:
  2504   004112  EF99  F020         	goto	l1222
  2505   004116                     u2240:
  2506   004116  C013  F015         	movff	abs@a,??_abs
  2507   00411A  C014  F016         	movff	abs@a+1,??_abs+1
  2508   00411E  1E15               	comf	??_abs^0,f,c
  2509   004120  1E16               	comf	(??_abs+1)^0,f,c
  2510   004122  4A15               	infsnz	??_abs^0,f,c
  2511   004124  2A16               	incf	(??_abs+1)^0,f,c
  2512   004126  C015  F013         	movff	??_abs,?_abs
  2513   00412A  C016  F014         	movff	??_abs+1,?_abs+1
  2514   00412E  EF9D  F020         	goto	l1225
  2515   004132                     l1222:
  2516   004132  C013  F013         	movff	abs@a,?_abs
  2517   004136  C014  F014         	movff	abs@a+1,?_abs+1
  2518   00413A                     l1225:
  2519   00413A  0012               	return		;funcret
  2520   00413C                     __end_of_abs:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function ___aomod *****************
  2524 ;; Defined at:
  2525 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  dividend        8    0[COMRAM] long long 
  2528 ;;  divisor         8    8[COMRAM] long long 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  sign            1   17[COMRAM] unsigned char 
  2531 ;;  counter         1   16[COMRAM] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  8    0[COMRAM] long long 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2541 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2545 ;;Total ram usage:       18 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_dtoa
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text10
  2556   003266                     __ptext10:
  2557                           	callstack 0
  2558   003266                     ___aomod:
  2559                           	callstack 25
  2560   003266  0E00               	movlw	0
  2561   003268  6E12               	movwf	___aomod@sign^0,c
  2562   00326A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2563   00326C  EF3C  F019         	goto	u2130
  2564   003270  EF3A  F019         	goto	u2131
  2565   003274                     u2131:
  2566   003274  EF4E  F019         	goto	l2750
  2567   003278                     u2130:
  2568   003278  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2569   00327A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2570   00327C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2571   00327E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2572   003280  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2573   003282  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2574   003284  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2575   003286  6C01               	negf	___aomod@dividend^0,c
  2576   003288  0E00               	movlw	0
  2577   00328A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2578   00328C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2579   00328E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2580   003290  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2581   003292  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2582   003294  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2583   003296  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2584   003298  0E01               	movlw	1
  2585   00329A  6E12               	movwf	___aomod@sign^0,c
  2586   00329C                     l2750:
  2587   00329C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2588   00329E  EF55  F019         	goto	u2140
  2589   0032A2  EF53  F019         	goto	u2141
  2590   0032A6                     u2141:
  2591   0032A6  EF65  F019         	goto	l2754
  2592   0032AA                     u2140:
  2593   0032AA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2594   0032AC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2595   0032AE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2596   0032B0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2597   0032B2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2598   0032B4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2599   0032B6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2600   0032B8  6C09               	negf	___aomod@divisor^0,c
  2601   0032BA  0E00               	movlw	0
  2602   0032BC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2603   0032BE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2604   0032C0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2605   0032C2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2606   0032C4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2607   0032C6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2608   0032C8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2609   0032CA                     l2754:
  2610   0032CA  5009               	movf	___aomod@divisor^0,w,c
  2611   0032CC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2612   0032CE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2613   0032D0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2614   0032D2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2615   0032D4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2616   0032D6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2617   0032D8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2618   0032DA  B4D8               	btfsc	status,2,c
  2619   0032DC  EF72  F019         	goto	u2151
  2620   0032E0  EF74  F019         	goto	u2150
  2621   0032E4                     u2151:
  2622   0032E4  EFBC  F019         	goto	l2770
  2623   0032E8                     u2150:
  2624   0032E8  0E01               	movlw	1
  2625   0032EA  6E11               	movwf	___aomod@counter^0,c
  2626   0032EC  EF82  F019         	goto	l2760
  2627   0032F0                     l2758:
  2628   0032F0  90D8               	bcf	status,0,c
  2629   0032F2  3609               	rlcf	___aomod@divisor^0,f,c
  2630   0032F4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2631   0032F6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2632   0032F8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2633   0032FA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2634   0032FC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2635   0032FE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2636   003300  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2637   003302  2A11               	incf	___aomod@counter^0,f,c
  2638   003304                     l2760:
  2639   003304  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2640   003306  EF87  F019         	goto	u2161
  2641   00330A  EF89  F019         	goto	u2160
  2642   00330E                     u2161:
  2643   00330E  EF78  F019         	goto	l2758
  2644   003312                     u2160:
  2645   003312                     l2762:
  2646   003312  5009               	movf	___aomod@divisor^0,w,c
  2647   003314  5C01               	subwf	___aomod@dividend^0,w,c
  2648   003316  500A               	movf	(___aomod@divisor+1)^0,w,c
  2649   003318  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2650   00331A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2651   00331C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2652   00331E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2653   003320  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2654   003322  500D               	movf	(___aomod@divisor+4)^0,w,c
  2655   003324  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2656   003326  500E               	movf	(___aomod@divisor+5)^0,w,c
  2657   003328  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2658   00332A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2659   00332C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2660   00332E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2661   003330  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2662   003332  A0D8               	btfss	status,0,c
  2663   003334  EF9E  F019         	goto	u2171
  2664   003338  EFA0  F019         	goto	u2170
  2665   00333C                     u2171:
  2666   00333C  EFB0  F019         	goto	l2766
  2667   003340                     u2170:
  2668   003340  5009               	movf	___aomod@divisor^0,w,c
  2669   003342  5E01               	subwf	___aomod@dividend^0,f,c
  2670   003344  500A               	movf	(___aomod@divisor+1)^0,w,c
  2671   003346  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2672   003348  500B               	movf	(___aomod@divisor+2)^0,w,c
  2673   00334A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2674   00334C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2675   00334E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2676   003350  500D               	movf	(___aomod@divisor+4)^0,w,c
  2677   003352  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2678   003354  500E               	movf	(___aomod@divisor+5)^0,w,c
  2679   003356  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2680   003358  500F               	movf	(___aomod@divisor+6)^0,w,c
  2681   00335A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2682   00335C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2683   00335E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2684   003360                     l2766:
  2685   003360  90D8               	bcf	status,0,c
  2686   003362  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2687   003364  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2688   003366  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2689   003368  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2690   00336A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2691   00336C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2692   00336E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2693   003370  3209               	rrcf	___aomod@divisor^0,f,c
  2694   003372  2E11               	decfsz	___aomod@counter^0,f,c
  2695   003374  EF89  F019         	goto	l2762
  2696   003378                     l2770:
  2697   003378  5012               	movf	___aomod@sign^0,w,c
  2698   00337A  B4D8               	btfsc	status,2,c
  2699   00337C  EFC2  F019         	goto	u2181
  2700   003380  EFC4  F019         	goto	u2180
  2701   003384                     u2181:
  2702   003384  EFD4  F019         	goto	l2774
  2703   003388                     u2180:
  2704   003388  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2705   00338A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2706   00338C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2707   00338E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2708   003390  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2709   003392  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2710   003394  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2711   003396  6C01               	negf	___aomod@dividend^0,c
  2712   003398  0E00               	movlw	0
  2713   00339A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2714   00339C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2715   00339E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2716   0033A0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2717   0033A2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2718   0033A4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2719   0033A6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2720   0033A8                     l2774:
  2721   0033A8  C001  F001         	movff	___aomod@dividend,?___aomod
  2722   0033AC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2723   0033B0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2724   0033B4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2725   0033B8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2726   0033BC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2727   0033C0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2728   0033C4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2729   0033C8  0012               	return		;funcret
  2730   0033CA                     __end_of___aomod:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function ___aodiv *****************
  2734 ;; Defined at:
  2735 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  dividend        8    0[COMRAM] long long 
  2738 ;;  divisor         8    8[COMRAM] long long 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  quotient        8   18[COMRAM] long long 
  2741 ;;  sign            1   17[COMRAM] unsigned char 
  2742 ;;  counter         1   16[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  8    0[COMRAM] long long 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2752 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;Total ram usage:       26 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_dtoa
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text11
  2767   002F72                     __ptext11:
  2768                           	callstack 0
  2769   002F72                     ___aodiv:
  2770                           	callstack 25
  2771   002F72  0E00               	movlw	0
  2772   002F74  6E12               	movwf	___aodiv@sign^0,c
  2773   002F76  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2774   002F78  EFC2  F017         	goto	u2060
  2775   002F7C  EFC0  F017         	goto	u2061
  2776   002F80                     u2061:
  2777   002F80  EFD4  F017         	goto	l2706
  2778   002F84                     u2060:
  2779   002F84  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2780   002F86  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2781   002F88  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2782   002F8A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2783   002F8C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2784   002F8E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2785   002F90  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2786   002F92  6C09               	negf	___aodiv@divisor^0,c
  2787   002F94  0E00               	movlw	0
  2788   002F96  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2789   002F98  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2790   002F9A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2791   002F9C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2792   002F9E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2793   002FA0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2794   002FA2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2795   002FA4  0E01               	movlw	1
  2796   002FA6  6E12               	movwf	___aodiv@sign^0,c
  2797   002FA8                     l2706:
  2798   002FA8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2799   002FAA  EFDB  F017         	goto	u2070
  2800   002FAE  EFD9  F017         	goto	u2071
  2801   002FB2                     u2071:
  2802   002FB2  EFED  F017         	goto	l2712
  2803   002FB6                     u2070:
  2804   002FB6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2805   002FB8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2806   002FBA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2807   002FBC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2808   002FBE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2809   002FC0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2810   002FC2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2811   002FC4  6C01               	negf	___aodiv@dividend^0,c
  2812   002FC6  0E00               	movlw	0
  2813   002FC8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2814   002FCA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2815   002FCC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2816   002FCE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2817   002FD0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2818   002FD2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2819   002FD4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2820   002FD6  0E01               	movlw	1
  2821   002FD8  1A12               	xorwf	___aodiv@sign^0,f,c
  2822   002FDA                     l2712:
  2823   002FDA  EE20  F013         	lfsr	2,___aodiv@quotient
  2824   002FDE  0E07               	movlw	7
  2825   002FE0                     u2081:
  2826   002FE0  6ADE               	clrf	postinc2,c
  2827   002FE2  06E8               	decf	wreg,f,c
  2828   002FE4  E2FD               	bc	u2081
  2829   002FE6  5009               	movf	___aodiv@divisor^0,w,c
  2830   002FE8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2831   002FEA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2832   002FEC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2833   002FEE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2834   002FF0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2835   002FF2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2836   002FF4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2837   002FF6  B4D8               	btfsc	status,2,c
  2838   002FF8  EF00  F018         	goto	u2091
  2839   002FFC  EF02  F018         	goto	u2090
  2840   003000                     u2091:
  2841   003000  EF54  F018         	goto	l2734
  2842   003004                     u2090:
  2843   003004  0E01               	movlw	1
  2844   003006  6E11               	movwf	___aodiv@counter^0,c
  2845   003008  EF10  F018         	goto	l2720
  2846   00300C                     l2718:
  2847   00300C  90D8               	bcf	status,0,c
  2848   00300E  3609               	rlcf	___aodiv@divisor^0,f,c
  2849   003010  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2850   003012  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2851   003014  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2852   003016  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2853   003018  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2854   00301A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2855   00301C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2856   00301E  2A11               	incf	___aodiv@counter^0,f,c
  2857   003020                     l2720:
  2858   003020  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2859   003022  EF15  F018         	goto	u2101
  2860   003026  EF17  F018         	goto	u2100
  2861   00302A                     u2101:
  2862   00302A  EF06  F018         	goto	l2718
  2863   00302E                     u2100:
  2864   00302E                     l2722:
  2865   00302E  90D8               	bcf	status,0,c
  2866   003030  3613               	rlcf	___aodiv@quotient^0,f,c
  2867   003032  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2868   003034  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2869   003036  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2870   003038  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2871   00303A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2872   00303C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2873   00303E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2874   003040  5009               	movf	___aodiv@divisor^0,w,c
  2875   003042  5C01               	subwf	___aodiv@dividend^0,w,c
  2876   003044  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2877   003046  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2878   003048  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2879   00304A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2880   00304C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2881   00304E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2882   003050  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2883   003052  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2884   003054  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2885   003056  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2886   003058  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2887   00305A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2888   00305C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2889   00305E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2890   003060  A0D8               	btfss	status,0,c
  2891   003062  EF35  F018         	goto	u2111
  2892   003066  EF37  F018         	goto	u2110
  2893   00306A                     u2111:
  2894   00306A  EF48  F018         	goto	l2730
  2895   00306E                     u2110:
  2896   00306E  5009               	movf	___aodiv@divisor^0,w,c
  2897   003070  5E01               	subwf	___aodiv@dividend^0,f,c
  2898   003072  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2899   003074  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2900   003076  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2901   003078  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2902   00307A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2903   00307C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2904   00307E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2905   003080  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2906   003082  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2907   003084  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2908   003086  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2909   003088  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2910   00308A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2911   00308C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2912   00308E  8013               	bsf	___aodiv@quotient^0,0,c
  2913   003090                     l2730:
  2914   003090  90D8               	bcf	status,0,c
  2915   003092  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2916   003094  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2917   003096  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2918   003098  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2919   00309A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2920   00309C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2921   00309E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2922   0030A0  3209               	rrcf	___aodiv@divisor^0,f,c
  2923   0030A2  2E11               	decfsz	___aodiv@counter^0,f,c
  2924   0030A4  EF17  F018         	goto	l2722
  2925   0030A8                     l2734:
  2926   0030A8  5012               	movf	___aodiv@sign^0,w,c
  2927   0030AA  B4D8               	btfsc	status,2,c
  2928   0030AC  EF5A  F018         	goto	u2121
  2929   0030B0  EF5C  F018         	goto	u2120
  2930   0030B4                     u2121:
  2931   0030B4  EF6C  F018         	goto	l2738
  2932   0030B8                     u2120:
  2933   0030B8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2934   0030BA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2935   0030BC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2936   0030BE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2937   0030C0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2938   0030C2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2939   0030C4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2940   0030C6  6C13               	negf	___aodiv@quotient^0,c
  2941   0030C8  0E00               	movlw	0
  2942   0030CA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2943   0030CC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2944   0030CE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2945   0030D0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2946   0030D2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2947   0030D4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2948   0030D6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2949   0030D8                     l2738:
  2950   0030D8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2951   0030DC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2952   0030E0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2953   0030E4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2954   0030E8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2955   0030EC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2956   0030F0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2957   0030F4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2958   0030F8  0012               	return		;funcret
  2959   0030FA                     __end_of___aodiv:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _sendStringSerial4 *****************
  2963 ;; Defined at:
  2964 ;;		line 33 in file "serial.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  string          2    1[COMRAM] PTR unsigned char 
  2967 ;;		 -> main@buf(100), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 2
  2986 ;; This function calls:
  2987 ;;		_sendCharSerial4
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text12
  2994   0041B8                     __ptext12:
  2995                           	callstack 0
  2996   0041B8                     _sendStringSerial4:
  2997                           	callstack 28
  2998   0041B8                     
  2999                           ;serial.c: 34:     while (*string!=0){
  3000   0041B8  EFE7  F020         	goto	l3884
  3001   0041BC                     l3880:
  3002                           
  3003                           ;serial.c: 35:         sendCharSerial4(*string++);
  3004   0041BC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3005   0041C0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3006   0041C4  50DF               	movf	indf2,w,c
  3007   0041C6  EC4F  F021         	call	_sendCharSerial4
  3008   0041CA  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3009   0041CC  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3010   0041CE                     l3884:
  3011                           
  3012                           ;serial.c: 34:     while (*string!=0){
  3013   0041CE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3014   0041D2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3015   0041D6  50DF               	movf	indf2,w,c
  3016   0041D8  A4D8               	btfss	status,2,c
  3017   0041DA  EFF1  F020         	goto	u3851
  3018   0041DE  EFF3  F020         	goto	u3850
  3019   0041E2                     u3851:
  3020   0041E2  EFDE  F020         	goto	l3880
  3021   0041E6                     u3850:
  3022   0041E6  0012               	return		;funcret
  3023   0041E8                     __end_of_sendStringSerial4:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _sendCharSerial4 *****************
  3027 ;; Defined at:
  3028 ;;		line 26 in file "serial.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  charToSend      1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  charToSend      1    0[COMRAM] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;Total ram usage:        1 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_sendStringSerial4
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text13
  3057   00429E                     __ptext13:
  3058                           	callstack 0
  3059   00429E                     _sendCharSerial4:
  3060                           	callstack 28
  3061                           
  3062                           ;incstack = 0
  3063                           ;sendCharSerial4@charToSend stored from wreg
  3064   00429E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3065   0042A0                     l206:
  3066   0042A0  010E               	movlb	14	; () banked
  3067   0042A2  A537               	btfss	55,2,b	;volatile
  3068   0042A4  EF56  F021         	goto	u2911
  3069   0042A8  EF58  F021         	goto	u2910
  3070   0042AC                     u2911:
  3071   0042AC  EF50  F021         	goto	l206
  3072   0042B0                     u2910:
  3073   0042B0                     
  3074                           ; BSR set to: 14
  3075                           ;serial.c: 28:     TX4REG = charToSend;
  3076   0042B0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3077   0042B4                     
  3078                           ; BSR set to: 14
  3079   0042B4  0012               	return		;funcret
  3080   0042B6                     __end_of_sendCharSerial4:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _readColours *****************
  3084 ;; Defined at:
  3085 ;;		line 105 in file "color.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  vals            2   11[COMRAM] PTR struct RGB
  3088 ;;		 -> vals(8), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 4
  3107 ;; This function calls:
  3108 ;;		_color_read_Blue
  3109 ;;		_color_read_Green
  3110 ;;		_color_read_Red
  3111 ;;		_color_read_lum
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text14
  3118   003C3A                     __ptext14:
  3119                           	callstack 0
  3120   003C3A                     _readColours:
  3121                           	callstack 26
  3122   003C3A                     
  3123                           ;color.c: 107:     vals ->R = color_read_Red();
  3124   003C3A  EC79  F01F         	call	_color_read_Red	;wreg free
  3125   003C3E  C00C  FFD9         	movff	readColours@vals,fsr2l
  3126   003C42  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3127   003C46  C005  FFDE         	movff	?_color_read_Red,postinc2
  3128   003C4A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3129                           
  3130                           ;color.c: 108:     vals ->B = color_read_Blue();
  3131   003C4E  ECC9  F01F         	call	_color_read_Blue	;wreg free
  3132   003C52  EE20 F004          	lfsr	2,4
  3133   003C56  500C               	movf	readColours@vals^0,w,c
  3134   003C58  26D9               	addwf	fsr2l,f,c
  3135   003C5A  500D               	movf	(readColours@vals+1)^0,w,c
  3136   003C5C  22DA               	addwfc	fsr2h,f,c
  3137   003C5E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3138   003C62  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3139                           
  3140                           ;color.c: 109:     vals ->G = color_read_Green();
  3141   003C66  ECA1  F01F         	call	_color_read_Green	;wreg free
  3142   003C6A  EE20 F002          	lfsr	2,2
  3143   003C6E  500C               	movf	readColours@vals^0,w,c
  3144   003C70  26D9               	addwf	fsr2l,f,c
  3145   003C72  500D               	movf	(readColours@vals+1)^0,w,c
  3146   003C74  22DA               	addwfc	fsr2h,f,c
  3147   003C76  C005  FFDE         	movff	?_color_read_Green,postinc2
  3148   003C7A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3149                           
  3150                           ;color.c: 110:     vals ->L = color_read_lum();
  3151   003C7E  EC51  F01F         	call	_color_read_lum	;wreg free
  3152   003C82  EE20 F006          	lfsr	2,6
  3153   003C86  500C               	movf	readColours@vals^0,w,c
  3154   003C88  26D9               	addwf	fsr2l,f,c
  3155   003C8A  500D               	movf	(readColours@vals+1)^0,w,c
  3156   003C8C  22DA               	addwfc	fsr2h,f,c
  3157   003C8E  C005  FFDE         	movff	?_color_read_lum,postinc2
  3158   003C92  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3159   003C96  0012               	return		;funcret
  3160   003C98                     __end_of_readColours:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _color_read_lum *****************
  3164 ;; Defined at:
  3165 ;;		line 49 in file "color.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  tmp             2    9[COMRAM] unsigned int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  2    4[COMRAM] unsigned int 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;Total ram usage:        7 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 3
  3186 ;; This function calls:
  3187 ;;		_I2C_2_Master_Read
  3188 ;;		_I2C_2_Master_RepStart
  3189 ;;		_I2C_2_Master_Start
  3190 ;;		_I2C_2_Master_Stop
  3191 ;;		_I2C_2_Master_Write
  3192 ;; This function is called by:
  3193 ;;		_readColours
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text15
  3198   003EA2                     __ptext15:
  3199                           	callstack 0
  3200   003EA2                     _color_read_lum:
  3201                           	callstack 26
  3202   003EA2                     
  3203                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3204   003EA2  EC6B  F021         	call	_I2C_2_Master_Start	;wreg free
  3205                           
  3206                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3207   003EA6  0E52               	movlw	82
  3208   003EA8  EC5B  F021         	call	_I2C_2_Master_Write
  3209                           
  3210                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3211   003EAC  0EB4               	movlw	180
  3212   003EAE  EC5B  F021         	call	_I2C_2_Master_Write
  3213                           
  3214                           ;color.c: 55:  I2C_2_Master_RepStart();
  3215   003EB2  EC61  F021         	call	_I2C_2_Master_RepStart	;wreg free
  3216                           
  3217                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3218   003EB6  0E53               	movlw	83
  3219   003EB8  EC5B  F021         	call	_I2C_2_Master_Write
  3220                           
  3221                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3222   003EBC  0E01               	movlw	1
  3223   003EBE  EC5D  F020         	call	_I2C_2_Master_Read
  3224   003EC2  6E07               	movwf	??_color_read_lum^0,c
  3225   003EC4  5007               	movf	??_color_read_lum^0,w,c
  3226   003EC6  6E0A               	movwf	color_read_lum@tmp^0,c
  3227   003EC8  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3228                           
  3229                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3230   003ECA  0E00               	movlw	0
  3231   003ECC  EC5D  F020         	call	_I2C_2_Master_Read
  3232   003ED0  6E07               	movwf	??_color_read_lum^0,c
  3233   003ED2  5007               	movf	??_color_read_lum^0,w,c
  3234   003ED4  6E09               	movwf	(??_color_read_lum+2)^0,c
  3235   003ED6  6A08               	clrf	(??_color_read_lum+1)^0,c
  3236   003ED8  500A               	movf	color_read_lum@tmp^0,w,c
  3237   003EDA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3238   003EDC  6E0A               	movwf	color_read_lum@tmp^0,c
  3239   003EDE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3240   003EE0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3241   003EE2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3242                           
  3243                           ;color.c: 59:  I2C_2_Master_Stop();
  3244   003EE4  EC66  F021         	call	_I2C_2_Master_Stop	;wreg free
  3245   003EE8                     
  3246                           ;color.c: 60:  return tmp;
  3247   003EE8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3248   003EEC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3249   003EF0  0012               	return		;funcret
  3250   003EF2                     __end_of_color_read_lum:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _color_read_Red *****************
  3254 ;; Defined at:
  3255 ;;		line 63 in file "color.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  tmp             2    9[COMRAM] unsigned int 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    4[COMRAM] unsigned int 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;Total ram usage:        7 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 3
  3276 ;; This function calls:
  3277 ;;		_I2C_2_Master_Read
  3278 ;;		_I2C_2_Master_RepStart
  3279 ;;		_I2C_2_Master_Start
  3280 ;;		_I2C_2_Master_Stop
  3281 ;;		_I2C_2_Master_Write
  3282 ;; This function is called by:
  3283 ;;		_readColours
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text16
  3288   003EF2                     __ptext16:
  3289                           	callstack 0
  3290   003EF2                     _color_read_Red:
  3291                           	callstack 26
  3292   003EF2                     
  3293                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3294   003EF2  EC6B  F021         	call	_I2C_2_Master_Start	;wreg free
  3295                           
  3296                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3297   003EF6  0E52               	movlw	82
  3298   003EF8  EC5B  F021         	call	_I2C_2_Master_Write
  3299                           
  3300                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3301   003EFC  0EB6               	movlw	182
  3302   003EFE  EC5B  F021         	call	_I2C_2_Master_Write
  3303                           
  3304                           ;color.c: 69:  I2C_2_Master_RepStart();
  3305   003F02  EC61  F021         	call	_I2C_2_Master_RepStart	;wreg free
  3306                           
  3307                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3308   003F06  0E53               	movlw	83
  3309   003F08  EC5B  F021         	call	_I2C_2_Master_Write
  3310                           
  3311                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3312   003F0C  0E01               	movlw	1
  3313   003F0E  EC5D  F020         	call	_I2C_2_Master_Read
  3314   003F12  6E07               	movwf	??_color_read_Red^0,c
  3315   003F14  5007               	movf	??_color_read_Red^0,w,c
  3316   003F16  6E0A               	movwf	color_read_Red@tmp^0,c
  3317   003F18  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3318                           
  3319                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3320   003F1A  0E00               	movlw	0
  3321   003F1C  EC5D  F020         	call	_I2C_2_Master_Read
  3322   003F20  6E07               	movwf	??_color_read_Red^0,c
  3323   003F22  5007               	movf	??_color_read_Red^0,w,c
  3324   003F24  6E09               	movwf	(??_color_read_Red+2)^0,c
  3325   003F26  6A08               	clrf	(??_color_read_Red+1)^0,c
  3326   003F28  500A               	movf	color_read_Red@tmp^0,w,c
  3327   003F2A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3328   003F2C  6E0A               	movwf	color_read_Red@tmp^0,c
  3329   003F2E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3330   003F30  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3331   003F32  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3332                           
  3333                           ;color.c: 73:  I2C_2_Master_Stop();
  3334   003F34  EC66  F021         	call	_I2C_2_Master_Stop	;wreg free
  3335   003F38                     
  3336                           ;color.c: 74:  return tmp;
  3337   003F38  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3338   003F3C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3339   003F40  0012               	return		;funcret
  3340   003F42                     __end_of_color_read_Red:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _color_read_Green *****************
  3344 ;; Defined at:
  3345 ;;		line 76 in file "color.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  tmp             2    9[COMRAM] unsigned int 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2    4[COMRAM] unsigned int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:        7 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 3
  3366 ;; This function calls:
  3367 ;;		_I2C_2_Master_Read
  3368 ;;		_I2C_2_Master_RepStart
  3369 ;;		_I2C_2_Master_Start
  3370 ;;		_I2C_2_Master_Stop
  3371 ;;		_I2C_2_Master_Write
  3372 ;; This function is called by:
  3373 ;;		_readColours
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text17
  3378   003F42                     __ptext17:
  3379                           	callstack 0
  3380   003F42                     _color_read_Green:
  3381                           	callstack 26
  3382   003F42                     
  3383                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  3384   003F42  EC6B  F021         	call	_I2C_2_Master_Start	;wreg free
  3385                           
  3386                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  3387   003F46  0E52               	movlw	82
  3388   003F48  EC5B  F021         	call	_I2C_2_Master_Write
  3389                           
  3390                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  3391   003F4C  0EB8               	movlw	184
  3392   003F4E  EC5B  F021         	call	_I2C_2_Master_Write
  3393                           
  3394                           ;color.c: 82:  I2C_2_Master_RepStart();
  3395   003F52  EC61  F021         	call	_I2C_2_Master_RepStart	;wreg free
  3396                           
  3397                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  3398   003F56  0E53               	movlw	83
  3399   003F58  EC5B  F021         	call	_I2C_2_Master_Write
  3400                           
  3401                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  3402   003F5C  0E01               	movlw	1
  3403   003F5E  EC5D  F020         	call	_I2C_2_Master_Read
  3404   003F62  6E07               	movwf	??_color_read_Green^0,c
  3405   003F64  5007               	movf	??_color_read_Green^0,w,c
  3406   003F66  6E0A               	movwf	color_read_Green@tmp^0,c
  3407   003F68  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3408                           
  3409                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3410   003F6A  0E00               	movlw	0
  3411   003F6C  EC5D  F020         	call	_I2C_2_Master_Read
  3412   003F70  6E07               	movwf	??_color_read_Green^0,c
  3413   003F72  5007               	movf	??_color_read_Green^0,w,c
  3414   003F74  6E09               	movwf	(??_color_read_Green+2)^0,c
  3415   003F76  6A08               	clrf	(??_color_read_Green+1)^0,c
  3416   003F78  500A               	movf	color_read_Green@tmp^0,w,c
  3417   003F7A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3418   003F7C  6E0A               	movwf	color_read_Green@tmp^0,c
  3419   003F7E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3420   003F80  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3421   003F82  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3422                           
  3423                           ;color.c: 86:  I2C_2_Master_Stop();
  3424   003F84  EC66  F021         	call	_I2C_2_Master_Stop	;wreg free
  3425   003F88                     
  3426                           ;color.c: 87:  return tmp;
  3427   003F88  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3428   003F8C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3429   003F90  0012               	return		;funcret
  3430   003F92                     __end_of_color_read_Green:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _color_read_Blue *****************
  3434 ;; Defined at:
  3435 ;;		line 90 in file "color.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  tmp             2    9[COMRAM] unsigned int 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  2    4[COMRAM] unsigned int 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;Total ram usage:        7 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 3
  3456 ;; This function calls:
  3457 ;;		_I2C_2_Master_Read
  3458 ;;		_I2C_2_Master_RepStart
  3459 ;;		_I2C_2_Master_Start
  3460 ;;		_I2C_2_Master_Stop
  3461 ;;		_I2C_2_Master_Write
  3462 ;; This function is called by:
  3463 ;;		_readColours
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text18
  3468   003F92                     __ptext18:
  3469                           	callstack 0
  3470   003F92                     _color_read_Blue:
  3471                           	callstack 26
  3472   003F92                     
  3473                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3474   003F92  EC6B  F021         	call	_I2C_2_Master_Start	;wreg free
  3475                           
  3476                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3477   003F96  0E52               	movlw	82
  3478   003F98  EC5B  F021         	call	_I2C_2_Master_Write
  3479                           
  3480                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  3481   003F9C  0EBA               	movlw	186
  3482   003F9E  EC5B  F021         	call	_I2C_2_Master_Write
  3483                           
  3484                           ;color.c: 96:  I2C_2_Master_RepStart();
  3485   003FA2  EC61  F021         	call	_I2C_2_Master_RepStart	;wreg free
  3486                           
  3487                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3488   003FA6  0E53               	movlw	83
  3489   003FA8  EC5B  F021         	call	_I2C_2_Master_Write
  3490                           
  3491                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3492   003FAC  0E01               	movlw	1
  3493   003FAE  EC5D  F020         	call	_I2C_2_Master_Read
  3494   003FB2  6E07               	movwf	??_color_read_Blue^0,c
  3495   003FB4  5007               	movf	??_color_read_Blue^0,w,c
  3496   003FB6  6E0A               	movwf	color_read_Blue@tmp^0,c
  3497   003FB8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3498                           
  3499                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3500   003FBA  0E00               	movlw	0
  3501   003FBC  EC5D  F020         	call	_I2C_2_Master_Read
  3502   003FC0  6E07               	movwf	??_color_read_Blue^0,c
  3503   003FC2  5007               	movf	??_color_read_Blue^0,w,c
  3504   003FC4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3505   003FC6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3506   003FC8  500A               	movf	color_read_Blue@tmp^0,w,c
  3507   003FCA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3508   003FCC  6E0A               	movwf	color_read_Blue@tmp^0,c
  3509   003FCE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3510   003FD0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3511   003FD2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3512                           
  3513                           ;color.c: 100:  I2C_2_Master_Stop();
  3514   003FD4  EC66  F021         	call	_I2C_2_Master_Stop	;wreg free
  3515   003FD8                     
  3516                           ;color.c: 101:  return tmp;
  3517   003FD8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3518   003FDC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3519   003FE0  0012               	return		;funcret
  3520   003FE2                     __end_of_color_read_Blue:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _I2C_2_Master_RepStart *****************
  3524 ;; Defined at:
  3525 ;;		line 33 in file "i2c.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 2
  3546 ;; This function calls:
  3547 ;;		_I2C_2_Master_Idle
  3548 ;; This function is called by:
  3549 ;;		_color_read_lum
  3550 ;;		_color_read_Red
  3551 ;;		_color_read_Green
  3552 ;;		_color_read_Blue
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text19
  3557   0042C2                     __ptext19:
  3558                           	callstack 0
  3559   0042C2                     _I2C_2_Master_RepStart:
  3560                           	callstack 26
  3561   0042C2                     
  3562                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3563   0042C2  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  3564   0042C6                     
  3565                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3566   0042C6  010E               	movlb	14	; () banked
  3567   0042C8  83DA               	bsf	218,1,b	;volatile
  3568   0042CA                     
  3569                           ; BSR set to: 14
  3570   0042CA  0012               	return		;funcret
  3571   0042CC                     __end_of_I2C_2_Master_RepStart:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _I2C_2_Master_Read *****************
  3575 ;; Defined at:
  3576 ;;		line 51 in file "i2c.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  ack             1    wreg     unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  ack             1    2[COMRAM] unsigned char 
  3581 ;;  tmp             1    3[COMRAM] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      unsigned char 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3595 ;;Total ram usage:        3 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 2
  3598 ;; This function calls:
  3599 ;;		_I2C_2_Master_Idle
  3600 ;; This function is called by:
  3601 ;;		_color_read_lum
  3602 ;;		_color_read_Red
  3603 ;;		_color_read_Green
  3604 ;;		_color_read_Blue
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text20
  3609   0040BA                     __ptext20:
  3610                           	callstack 0
  3611   0040BA                     _I2C_2_Master_Read:
  3612                           	callstack 26
  3613                           
  3614                           ; BSR set to: 14
  3615                           ;incstack = 0
  3616                           ;I2C_2_Master_Read@ack stored from wreg
  3617   0040BA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3618   0040BC                     
  3619                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3620   0040BC  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  3621   0040C0                     
  3622                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3623   0040C0  010E               	movlb	14	; () banked
  3624   0040C2  87DA               	bsf	218,3,b	;volatile
  3625                           
  3626                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3627   0040C4  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  3628   0040C8                     
  3629                           ;i2c.c: 57:   tmp = SSP2BUF;
  3630   0040C8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3631                           
  3632                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3633   0040CC  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  3634   0040D0                     
  3635                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3636   0040D0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3637   0040D2  B4D8               	btfsc	status,2,c
  3638   0040D4  EF6E  F020         	goto	u2391
  3639   0040D8  EF72  F020         	goto	u2390
  3640   0040DC                     u2391:
  3641   0040DC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3642   0040DE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3643   0040E0  EF73  F020         	goto	u2408
  3644   0040E4                     u2390:
  3645   0040E4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3646   0040E6                     u2408:
  3647   0040E6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3648   0040E8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3649   0040EA  010E               	movlb	14	; () banked
  3650   0040EC  51DA               	movf	218,w,b	;volatile
  3651   0040EE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3652   0040F0  0BDF               	andlw	-33
  3653   0040F2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3654   0040F4  6FDA               	movwf	218,b	;volatile
  3655   0040F6                     
  3656                           ; BSR set to: 14
  3657                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3658   0040F6  89DA               	bsf	218,4,b	;volatile
  3659   0040F8                     
  3660                           ; BSR set to: 14
  3661                           ;i2c.c: 61:   return tmp;
  3662   0040F8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3663   0040FA                     
  3664                           ; BSR set to: 14
  3665   0040FA  0012               	return		;funcret
  3666   0040FC                     __end_of_I2C_2_Master_Read:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _initUSART4 *****************
  3670 ;; Defined at:
  3671 ;;		line 4 in file "serial.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text21
  3700   004280                     __ptext21:
  3701                           	callstack 0
  3702   004280                     _initUSART4:
  3703                           	callstack 29
  3704   004280                     
  3705                           ;serial.c: 5:     RC0PPS = 0x12;
  3706   004280  0E12               	movlw	18
  3707   004282  010E               	movlb	14	; () banked
  3708   004284  6F62               	movwf	98,b	;volatile
  3709                           
  3710                           ;serial.c: 6:     RX4PPS = 0x11;
  3711   004286  0E11               	movlw	17
  3712   004288  6F15               	movwf	21,b	;volatile
  3713   00428A                     
  3714                           ; BSR set to: 14
  3715                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3716   00428A  97E9               	bcf	233,3,b	;volatile
  3717   00428C                     
  3718                           ; BSR set to: 14
  3719                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3720   00428C  95E8               	bcf	232,2,b	;volatile
  3721                           
  3722                           ;serial.c: 9:     SP4BRGL = 51;
  3723   00428E  0E33               	movlw	51
  3724   004290  6FE5               	movwf	229,b	;volatile
  3725                           
  3726                           ;serial.c: 10:     SP4BRGH = 0;
  3727   004292  0E00               	movlw	0
  3728   004294  6FE6               	movwf	230,b	;volatile
  3729   004296                     
  3730                           ; BSR set to: 14
  3731                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3732   004296  89E7               	bsf	231,4,b	;volatile
  3733   004298                     
  3734                           ; BSR set to: 14
  3735                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3736   004298  8BE8               	bsf	232,5,b	;volatile
  3737   00429A                     
  3738                           ; BSR set to: 14
  3739                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3740   00429A  8FE7               	bsf	231,7,b	;volatile
  3741   00429C                     
  3742                           ; BSR set to: 14
  3743   00429C  0012               	return		;funcret
  3744   00429E                     __end_of_initUSART4:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _initDCmotorsPWM *****************
  3748 ;; Defined at:
  3749 ;;		line 5 in file "dc_motor.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text22
  3778   0039E8                     __ptext22:
  3779                           	callstack 0
  3780   0039E8                     _initDCmotorsPWM:
  3781                           	callstack 29
  3782   0039E8                     
  3783                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3784   0039E8  0E05               	movlw	5
  3785   0039EA  010E               	movlb	14	; () banked
  3786   0039EC  6F74               	movwf	116,b	;volatile
  3787                           
  3788                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3789   0039EE  0E06               	movlw	6
  3790   0039F0  6F76               	movwf	118,b	;volatile
  3791                           
  3792                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3793   0039F2  0E07               	movlw	7
  3794   0039F4  6F69               	movwf	105,b	;volatile
  3795                           
  3796                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3797   0039F6  0E08               	movlw	8
  3798   0039F8  6F88               	movwf	136,b	;volatile
  3799   0039FA                     
  3800                           ; BSR set to: 14
  3801                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  3802   0039FA  9485               	bcf	133,2,c	;volatile
  3803   0039FC                     
  3804                           ; BSR set to: 14
  3805                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  3806   0039FC  9885               	bcf	133,4,c	;volatile
  3807   0039FE                     
  3808                           ; BSR set to: 14
  3809                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  3810   0039FE  9E83               	bcf	131,7,c	;volatile
  3811   003A00                     
  3812                           ; BSR set to: 14
  3813                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  3814   003A00  9C87               	bcf	135,6,c	;volatile
  3815                           
  3816                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  3817   003A02  50BD               	movf	189,w,c	;volatile
  3818   003A04  0B8F               	andlw	-113
  3819   003A06  0930               	iorlw	48
  3820   003A08  6EBD               	movwf	189,c	;volatile
  3821                           
  3822                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  3823   003A0A  0EE0               	movlw	-32
  3824   003A0C  16BE               	andwf	190,f,c	;volatile
  3825                           
  3826                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  3827   003A0E  50BF               	movf	191,w,c	;volatile
  3828   003A10  0BF0               	andlw	-16
  3829   003A12  0901               	iorlw	1
  3830   003A14  6EBF               	movwf	191,c	;volatile
  3831   003A16                     
  3832                           ; BSR set to: 14
  3833                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  3834   003A16  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3835   003A1A                     
  3836                           ; BSR set to: 14
  3837                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  3838   003A1A  8EBD               	bsf	189,7,c	;volatile
  3839                           
  3840                           ;dc_motor.c: 33:     CCPR1H=0;
  3841   003A1C  0E00               	movlw	0
  3842   003A1E  6EAA               	movwf	170,c	;volatile
  3843                           
  3844                           ;dc_motor.c: 34:     CCPR2H=0;
  3845   003A20  0E00               	movlw	0
  3846   003A22  6EA6               	movwf	166,c	;volatile
  3847                           
  3848                           ;dc_motor.c: 35:     CCPR3H=0;
  3849   003A24  0E00               	movlw	0
  3850   003A26  010F               	movlb	15	; () banked
  3851   003A28  6F25               	movwf	37,b	;volatile
  3852                           
  3853                           ;dc_motor.c: 36:     CCPR4H=0;
  3854   003A2A  0E00               	movlw	0
  3855   003A2C  6F21               	movwf	33,b	;volatile
  3856                           
  3857                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  3858   003A2E  0EFC               	movlw	-4
  3859   003A30  16AD               	andwf	173,f,c	;volatile
  3860                           
  3861                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  3862   003A32  0EF3               	movlw	-13
  3863   003A34  16AD               	andwf	173,f,c	;volatile
  3864                           
  3865                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  3866   003A36  0ECF               	movlw	-49
  3867   003A38  16AD               	andwf	173,f,c	;volatile
  3868                           
  3869                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  3870   003A3A  0E3F               	movlw	-193
  3871   003A3C  16AD               	andwf	173,f,c	;volatile
  3872   003A3E                     
  3873                           ; BSR set to: 15
  3874                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  3875   003A3E  88AB               	bsf	171,4,c	;volatile
  3876                           
  3877                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  3878   003A40  50AB               	movf	171,w,c	;volatile
  3879   003A42  0BF0               	andlw	-16
  3880   003A44  090C               	iorlw	12
  3881   003A46  6EAB               	movwf	171,c	;volatile
  3882   003A48                     
  3883                           ; BSR set to: 15
  3884                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  3885   003A48  8EAB               	bsf	171,7,c	;volatile
  3886   003A4A                     
  3887                           ; BSR set to: 15
  3888                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  3889   003A4A  88A7               	bsf	167,4,c	;volatile
  3890                           
  3891                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  3892   003A4C  50A7               	movf	167,w,c	;volatile
  3893   003A4E  0BF0               	andlw	-16
  3894   003A50  090C               	iorlw	12
  3895   003A52  6EA7               	movwf	167,c	;volatile
  3896   003A54                     
  3897                           ; BSR set to: 15
  3898                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  3899   003A54  8EA7               	bsf	167,7,c	;volatile
  3900   003A56                     
  3901                           ; BSR set to: 15
  3902                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  3903   003A56  8926               	bsf	38,4,b	;volatile
  3904                           
  3905                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  3906   003A58  5126               	movf	38,w,b	;volatile
  3907   003A5A  0BF0               	andlw	-16
  3908   003A5C  090C               	iorlw	12
  3909   003A5E  6F26               	movwf	38,b	;volatile
  3910   003A60                     
  3911                           ; BSR set to: 15
  3912                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  3913   003A60  8F26               	bsf	38,7,b	;volatile
  3914   003A62                     
  3915                           ; BSR set to: 15
  3916                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  3917   003A62  8922               	bsf	34,4,b	;volatile
  3918                           
  3919                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  3920   003A64  5122               	movf	34,w,b	;volatile
  3921   003A66  0BF0               	andlw	-16
  3922   003A68  090C               	iorlw	12
  3923   003A6A  6F22               	movwf	34,b	;volatile
  3924   003A6C                     
  3925                           ; BSR set to: 15
  3926                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  3927   003A6C  8F22               	bsf	34,7,b	;volatile
  3928   003A6E                     
  3929                           ; BSR set to: 15
  3930   003A6E  0012               	return		;funcret
  3931   003A70                     __end_of_initDCmotorsPWM:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _fullSpeedAhead *****************
  3935 ;; Defined at:
  3936 ;;		line 146 in file "dc_motor.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  3939 ;;		 -> motorL(9), 
  3940 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  3941 ;;		 -> motorR(9), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;Total ram usage:        5 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 3
  3960 ;; This function calls:
  3961 ;;		_setMotorPWM
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text23
  3968   003790                     __ptext23:
  3969                           	callstack 0
  3970   003790                     _fullSpeedAhead:
  3971                           	callstack 27
  3972   003790                     
  3973                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  3974   003790  EE20 F001          	lfsr	2,1
  3975   003794  5014               	movf	fullSpeedAhead@mL^0,w,c
  3976   003796  26D9               	addwf	fsr2l,f,c
  3977   003798  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  3978   00379A  22DA               	addwfc	fsr2h,f,c
  3979   00379C  0E01               	movlw	1
  3980   00379E  6EDF               	movwf	indf2,c
  3981                           
  3982                           ;dc_motor.c: 150:     mR->direction =1;
  3983   0037A0  EE20 F001          	lfsr	2,1
  3984   0037A4  5016               	movf	fullSpeedAhead@mR^0,w,c
  3985   0037A6  26D9               	addwf	fsr2l,f,c
  3986   0037A8  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  3987   0037AA  22DA               	addwfc	fsr2h,f,c
  3988   0037AC  0E01               	movlw	1
  3989   0037AE  6EDF               	movwf	indf2,c
  3990                           
  3991                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  3992   0037B0  EFFA  F01B         	goto	l3938
  3993   0037B4                     l3930:
  3994                           
  3995                           ;dc_motor.c: 153:         mL->power+=10;
  3996   0037B4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3997   0037B8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3998   0037BC  0E0A               	movlw	10
  3999   0037BE  26DF               	addwf	indf2,f,c
  4000                           
  4001                           ;dc_motor.c: 154:         mR->power+=10;
  4002   0037C0  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4003   0037C4  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4004   0037C8  0E0A               	movlw	10
  4005   0037CA  26DF               	addwf	indf2,f,c
  4006   0037CC                     
  4007                           ;dc_motor.c: 156:         setMotorPWM(mL);
  4008   0037CC  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4009   0037D0  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4010   0037D4  EC7D  F018         	call	_setMotorPWM	;wreg free
  4011   0037D8                     
  4012                           ;dc_motor.c: 157:         setMotorPWM(mR);
  4013   0037D8  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4014   0037DC  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4015   0037E0  EC7D  F018         	call	_setMotorPWM	;wreg free
  4016   0037E4                     
  4017                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4018   0037E4  0E15               	movlw	21
  4019   0037E6  6E18               	movwf	??_fullSpeedAhead^0,c
  4020   0037E8  0EC6               	movlw	198
  4021   0037EA                     u4017:
  4022   0037EA  2EE8               	decfsz	wreg,f,c
  4023   0037EC  D7FE               	bra	u4017
  4024   0037EE  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  4025   0037F0  D7FC               	bra	u4017
  4026   0037F2  D000               	nop2	
  4027   0037F4                     l3938:
  4028                           
  4029                           ;dc_motor.c: 151:     while (mL->power < 100 && mR->power < 100){
  4030   0037F4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4031   0037F8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4032   0037FC  0E64               	movlw	100
  4033   0037FE  60DF               	cpfslt	indf2,c
  4034   003800  EF04  F01C         	goto	u3891
  4035   003804  EF06  F01C         	goto	u3890
  4036   003808                     u3891:
  4037   003808  EF12  F01C         	goto	l453
  4038   00380C                     u3890:
  4039   00380C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4040   003810  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4041   003814  0E63               	movlw	99
  4042   003816  64DF               	cpfsgt	indf2,c
  4043   003818  EF10  F01C         	goto	u3901
  4044   00381C  EF12  F01C         	goto	u3900
  4045   003820                     u3901:
  4046   003820  EFDA  F01B         	goto	l3930
  4047   003824                     u3900:
  4048   003824                     l453:
  4049   003824  0012               	return		;funcret
  4050   003826                     __end_of_fullSpeedAhead:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _colour_rel *****************
  4054 ;; Defined at:
  4055 ;;		line 114 in file "color.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  vals            2   49[COMRAM] PTR struct RGB
  4058 ;;		 -> vals(8), 
  4059 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  4060 ;;		 -> rel(12), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  B               4   73[COMRAM] float 
  4063 ;;  G               4   69[COMRAM] float 
  4064 ;;  R               4   65[COMRAM] float 
  4065 ;;  L               4   53[COMRAM] float 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;Total ram usage:       28 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 2
  4082 ;; This function calls:
  4083 ;;		___fladd
  4084 ;;		___fldiv
  4085 ;;		___xxtofl
  4086 ;; This function is called by:
  4087 ;;		_main
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text24
  4092   0025FA                     __ptext24:
  4093                           	callstack 0
  4094   0025FA                     _colour_rel:
  4095                           	callstack 28
  4096   0025FA                     
  4097                           ;color.c: 115:     float R = vals->R;
  4098   0025FA  C032  FFD9         	movff	colour_rel@vals,fsr2l
  4099   0025FE  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  4100   002602  CFDE F001          	movff	postinc2,___xxtofl@val
  4101   002606  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4102   00260A  0E00               	movlw	0
  4103   00260C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4104   00260E  0EFF               	movlw	-1
  4105   002610  6E03               	movwf	(___xxtofl@val+2)^0,c
  4106   002612  6E04               	movwf	(___xxtofl@val+3)^0,c
  4107   002614  0E01               	movlw	1
  4108   002616  ECDF  F016         	call	___xxtofl
  4109   00261A  C001  F042         	movff	?___xxtofl,colour_rel@R
  4110   00261E  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  4111   002622  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  4112   002626  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  4113                           
  4114                           ;color.c: 116:     float G = vals->G;
  4115   00262A  EE20 F002          	lfsr	2,2
  4116   00262E  5032               	movf	colour_rel@vals^0,w,c
  4117   002630  26D9               	addwf	fsr2l,f,c
  4118   002632  5033               	movf	(colour_rel@vals+1)^0,w,c
  4119   002634  22DA               	addwfc	fsr2h,f,c
  4120   002636  CFDE F001          	movff	postinc2,___xxtofl@val
  4121   00263A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4122   00263E  0E00               	movlw	0
  4123   002640  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4124   002642  0EFF               	movlw	-1
  4125   002644  6E03               	movwf	(___xxtofl@val+2)^0,c
  4126   002646  6E04               	movwf	(___xxtofl@val+3)^0,c
  4127   002648  0E01               	movlw	1
  4128   00264A  ECDF  F016         	call	___xxtofl
  4129   00264E  C001  F046         	movff	?___xxtofl,colour_rel@G
  4130   002652  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  4131   002656  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  4132   00265A  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  4133                           
  4134                           ;color.c: 117:     float B = vals->B;
  4135   00265E  EE20 F004          	lfsr	2,4
  4136   002662  5032               	movf	colour_rel@vals^0,w,c
  4137   002664  26D9               	addwf	fsr2l,f,c
  4138   002666  5033               	movf	(colour_rel@vals+1)^0,w,c
  4139   002668  22DA               	addwfc	fsr2h,f,c
  4140   00266A  CFDE F001          	movff	postinc2,___xxtofl@val
  4141   00266E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4142   002672  0E00               	movlw	0
  4143   002674  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4144   002676  0EFF               	movlw	-1
  4145   002678  6E03               	movwf	(___xxtofl@val+2)^0,c
  4146   00267A  6E04               	movwf	(___xxtofl@val+3)^0,c
  4147   00267C  0E01               	movlw	1
  4148   00267E  ECDF  F016         	call	___xxtofl
  4149   002682  C001  F04A         	movff	?___xxtofl,colour_rel@B
  4150   002686  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  4151   00268A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  4152   00268E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  4153                           
  4154                           ;color.c: 118:     float L = vals->L;
  4155   002692  EE20 F006          	lfsr	2,6
  4156   002696  5032               	movf	colour_rel@vals^0,w,c
  4157   002698  26D9               	addwf	fsr2l,f,c
  4158   00269A  5033               	movf	(colour_rel@vals+1)^0,w,c
  4159   00269C  22DA               	addwfc	fsr2h,f,c
  4160   00269E  CFDE F001          	movff	postinc2,___xxtofl@val
  4161   0026A2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  4162   0026A6  0E00               	movlw	0
  4163   0026A8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4164   0026AA  0EFF               	movlw	-1
  4165   0026AC  6E03               	movwf	(___xxtofl@val+2)^0,c
  4166   0026AE  6E04               	movwf	(___xxtofl@val+3)^0,c
  4167   0026B0  0E01               	movlw	1
  4168   0026B2  ECDF  F016         	call	___xxtofl
  4169   0026B6  C001  F036         	movff	?___xxtofl,colour_rel@L
  4170   0026BA  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  4171   0026BE  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  4172   0026C2  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  4173   0026C6                     
  4174                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4175   0026C6  C046  F005         	movff	colour_rel@G,___fladd@a
  4176   0026CA  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4177   0026CE  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4178   0026D2  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4179   0026D6  C042  F001         	movff	colour_rel@R,___fladd@b
  4180   0026DA  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4181   0026DE  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4182   0026E2  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4183   0026E6  ECBB  F00C         	call	___fladd	;wreg free
  4184   0026EA  C001  F03A         	movff	?___fladd,_colour_rel$2498
  4185   0026EE  C002  F03B         	movff	?___fladd+1,_colour_rel$2498+1
  4186   0026F2  C003  F03C         	movff	?___fladd+2,_colour_rel$2498+2
  4187   0026F6  C004  F03D         	movff	?___fladd+3,_colour_rel$2498+3
  4188   0026FA                     
  4189                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4190   0026FA  C04A  F005         	movff	colour_rel@B,___fladd@a
  4191   0026FE  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4192   002702  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4193   002706  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4194   00270A  C03A  F001         	movff	_colour_rel$2498,___fladd@b
  4195   00270E  C03B  F002         	movff	_colour_rel$2498+1,___fladd@b+1
  4196   002712  C03C  F003         	movff	_colour_rel$2498+2,___fladd@b+2
  4197   002716  C03D  F004         	movff	_colour_rel$2498+3,___fladd@b+3
  4198   00271A  ECBB  F00C         	call	___fladd	;wreg free
  4199   00271E  C001  F03E         	movff	?___fladd,_colour_rel$2499
  4200   002722  C002  F03F         	movff	?___fladd+1,_colour_rel$2499+1
  4201   002726  C003  F040         	movff	?___fladd+2,_colour_rel$2499+2
  4202   00272A  C004  F041         	movff	?___fladd+3,_colour_rel$2499+3
  4203                           
  4204                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  4205   00272E  C042  F019         	movff	colour_rel@R,___fldiv@b
  4206   002732  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  4207   002736  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  4208   00273A  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  4209   00273E  C036  F005         	movff	colour_rel@L,___fladd@a
  4210   002742  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4211   002746  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4212   00274A  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4213   00274E  C03E  F001         	movff	_colour_rel$2499,___fladd@b
  4214   002752  C03F  F002         	movff	_colour_rel$2499+1,___fladd@b+1
  4215   002756  C040  F003         	movff	_colour_rel$2499+2,___fladd@b+2
  4216   00275A  C041  F004         	movff	_colour_rel$2499+3,___fladd@b+3
  4217   00275E  ECBB  F00C         	call	___fladd	;wreg free
  4218   002762  C001  F01D         	movff	?___fladd,___fldiv@a
  4219   002766  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4220   00276A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4221   00276E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4222   002772  EC30  F011         	call	___fldiv	;wreg free
  4223   002776  C034  FFD9         	movff	colour_rel@rel,fsr2l
  4224   00277A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  4225   00277E  C019  FFDE         	movff	?___fldiv,postinc2
  4226   002782  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4227   002786  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4228   00278A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4229   00278E                     
  4230                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4231   00278E  C046  F005         	movff	colour_rel@G,___fladd@a
  4232   002792  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4233   002796  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4234   00279A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4235   00279E  C042  F001         	movff	colour_rel@R,___fladd@b
  4236   0027A2  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4237   0027A6  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4238   0027AA  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4239   0027AE  ECBB  F00C         	call	___fladd	;wreg free
  4240   0027B2  C001  F03A         	movff	?___fladd,_colour_rel$2498
  4241   0027B6  C002  F03B         	movff	?___fladd+1,_colour_rel$2498+1
  4242   0027BA  C003  F03C         	movff	?___fladd+2,_colour_rel$2498+2
  4243   0027BE  C004  F03D         	movff	?___fladd+3,_colour_rel$2498+3
  4244   0027C2                     
  4245                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4246   0027C2  C04A  F005         	movff	colour_rel@B,___fladd@a
  4247   0027C6  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4248   0027CA  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4249   0027CE  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4250   0027D2  C03A  F001         	movff	_colour_rel$2498,___fladd@b
  4251   0027D6  C03B  F002         	movff	_colour_rel$2498+1,___fladd@b+1
  4252   0027DA  C03C  F003         	movff	_colour_rel$2498+2,___fladd@b+2
  4253   0027DE  C03D  F004         	movff	_colour_rel$2498+3,___fladd@b+3
  4254   0027E2  ECBB  F00C         	call	___fladd	;wreg free
  4255   0027E6  C001  F03E         	movff	?___fladd,_colour_rel$2499
  4256   0027EA  C002  F03F         	movff	?___fladd+1,_colour_rel$2499+1
  4257   0027EE  C003  F040         	movff	?___fladd+2,_colour_rel$2499+2
  4258   0027F2  C004  F041         	movff	?___fladd+3,_colour_rel$2499+3
  4259                           
  4260                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  4261   0027F6  C04A  F019         	movff	colour_rel@B,___fldiv@b
  4262   0027FA  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  4263   0027FE  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  4264   002802  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  4265   002806  C036  F005         	movff	colour_rel@L,___fladd@a
  4266   00280A  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4267   00280E  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4268   002812  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4269   002816  C03E  F001         	movff	_colour_rel$2499,___fladd@b
  4270   00281A  C03F  F002         	movff	_colour_rel$2499+1,___fladd@b+1
  4271   00281E  C040  F003         	movff	_colour_rel$2499+2,___fladd@b+2
  4272   002822  C041  F004         	movff	_colour_rel$2499+3,___fladd@b+3
  4273   002826  ECBB  F00C         	call	___fladd	;wreg free
  4274   00282A  C001  F01D         	movff	?___fladd,___fldiv@a
  4275   00282E  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4276   002832  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4277   002836  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4278   00283A  EC30  F011         	call	___fldiv	;wreg free
  4279   00283E  EE20 F008          	lfsr	2,8
  4280   002842  5034               	movf	colour_rel@rel^0,w,c
  4281   002844  26D9               	addwf	fsr2l,f,c
  4282   002846  5035               	movf	(colour_rel@rel+1)^0,w,c
  4283   002848  22DA               	addwfc	fsr2h,f,c
  4284   00284A  C019  FFDE         	movff	?___fldiv,postinc2
  4285   00284E  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4286   002852  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4287   002856  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4288   00285A                     
  4289                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4290   00285A  C046  F005         	movff	colour_rel@G,___fladd@a
  4291   00285E  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  4292   002862  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  4293   002866  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  4294   00286A  C042  F001         	movff	colour_rel@R,___fladd@b
  4295   00286E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  4296   002872  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  4297   002876  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  4298   00287A  ECBB  F00C         	call	___fladd	;wreg free
  4299   00287E  C001  F03A         	movff	?___fladd,_colour_rel$2498
  4300   002882  C002  F03B         	movff	?___fladd+1,_colour_rel$2498+1
  4301   002886  C003  F03C         	movff	?___fladd+2,_colour_rel$2498+2
  4302   00288A  C004  F03D         	movff	?___fladd+3,_colour_rel$2498+3
  4303   00288E                     
  4304                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4305   00288E  C04A  F005         	movff	colour_rel@B,___fladd@a
  4306   002892  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  4307   002896  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  4308   00289A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  4309   00289E  C03A  F001         	movff	_colour_rel$2498,___fladd@b
  4310   0028A2  C03B  F002         	movff	_colour_rel$2498+1,___fladd@b+1
  4311   0028A6  C03C  F003         	movff	_colour_rel$2498+2,___fladd@b+2
  4312   0028AA  C03D  F004         	movff	_colour_rel$2498+3,___fladd@b+3
  4313   0028AE  ECBB  F00C         	call	___fladd	;wreg free
  4314   0028B2  C001  F03E         	movff	?___fladd,_colour_rel$2499
  4315   0028B6  C002  F03F         	movff	?___fladd+1,_colour_rel$2499+1
  4316   0028BA  C003  F040         	movff	?___fladd+2,_colour_rel$2499+2
  4317   0028BE  C004  F041         	movff	?___fladd+3,_colour_rel$2499+3
  4318                           
  4319                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  4320   0028C2  C046  F019         	movff	colour_rel@G,___fldiv@b
  4321   0028C6  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  4322   0028CA  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  4323   0028CE  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  4324   0028D2  C036  F005         	movff	colour_rel@L,___fladd@a
  4325   0028D6  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  4326   0028DA  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  4327   0028DE  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  4328   0028E2  C03E  F001         	movff	_colour_rel$2499,___fladd@b
  4329   0028E6  C03F  F002         	movff	_colour_rel$2499+1,___fladd@b+1
  4330   0028EA  C040  F003         	movff	_colour_rel$2499+2,___fladd@b+2
  4331   0028EE  C041  F004         	movff	_colour_rel$2499+3,___fladd@b+3
  4332   0028F2  ECBB  F00C         	call	___fladd	;wreg free
  4333   0028F6  C001  F01D         	movff	?___fladd,___fldiv@a
  4334   0028FA  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  4335   0028FE  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  4336   002902  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  4337   002906  EC30  F011         	call	___fldiv	;wreg free
  4338   00290A  EE20 F004          	lfsr	2,4
  4339   00290E  5034               	movf	colour_rel@rel^0,w,c
  4340   002910  26D9               	addwf	fsr2l,f,c
  4341   002912  5035               	movf	(colour_rel@rel+1)^0,w,c
  4342   002914  22DA               	addwfc	fsr2h,f,c
  4343   002916  C019  FFDE         	movff	?___fldiv,postinc2
  4344   00291A  C01A  FFDE         	movff	?___fldiv+1,postinc2
  4345   00291E  C01B  FFDE         	movff	?___fldiv+2,postinc2
  4346   002922  C01C  FFDE         	movff	?___fldiv+3,postinc2
  4347   002926  0012               	return		;funcret
  4348   002928                     __end_of_colour_rel:
  4349                           	callstack 0
  4350                           
  4351 ;; *************** function _color_click_init *****************
  4352 ;; Defined at:
  4353 ;;		line 7 in file "color.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;Total ram usage:        1 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 4
  4374 ;; This function calls:
  4375 ;;		_I2C_2_Master_Init
  4376 ;;		_color_writetoaddr
  4377 ;; This function is called by:
  4378 ;;		_main
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text25
  4383   003E50                     __ptext25:
  4384                           	callstack 0
  4385   003E50                     _color_click_init:
  4386                           	callstack 26
  4387   003E50                     
  4388                           ;color.c: 10:     I2C_2_Master_Init();
  4389   003E50  ECF4  F020         	call	_I2C_2_Master_Init	;wreg free
  4390   003E54                     
  4391                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4392   003E54  0E01               	movlw	1
  4393   003E56  6E03               	movwf	color_writetoaddr@value^0,c
  4394   003E58  0E00               	movlw	0
  4395   003E5A  EC30  F021         	call	_color_writetoaddr
  4396   003E5E                     
  4397                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4398   003E5E  0E3F               	movlw	63
  4399   003E60  6E05               	movwf	??_color_click_init^0,c
  4400   003E62  0E55               	movlw	85
  4401   003E64                     u4027:
  4402   003E64  2EE8               	decfsz	wreg,f,c
  4403   003E66  D7FE               	bra	u4027
  4404   003E68  2E05               	decfsz	??_color_click_init^0,f,c
  4405   003E6A  D7FC               	bra	u4027
  4406   003E6C  F000               	nop	
  4407   003E6E                     
  4408                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4409   003E6E  0E03               	movlw	3
  4410   003E70  6E03               	movwf	color_writetoaddr@value^0,c
  4411   003E72  0E00               	movlw	0
  4412   003E74  EC30  F021         	call	_color_writetoaddr
  4413   003E78                     
  4414                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  4415   003E78  0ED5               	movlw	213
  4416   003E7A  6E03               	movwf	color_writetoaddr@value^0,c
  4417   003E7C  0E01               	movlw	1
  4418   003E7E  EC30  F021         	call	_color_writetoaddr
  4419   003E82                     
  4420                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  4421   003E82  0E00               	movlw	0
  4422   003E84  6E03               	movwf	color_writetoaddr@value^0,c
  4423   003E86  0E0F               	movlw	15
  4424   003E88  EC30  F021         	call	_color_writetoaddr
  4425   003E8C                     
  4426                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  4427   003E8C  9287               	bcf	135,1,c	;volatile
  4428   003E8E                     
  4429                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  4430   003E8E  9881               	bcf	129,4,c	;volatile
  4431   003E90                     
  4432                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  4433   003E90  9E86               	bcf	134,7,c	;volatile
  4434   003E92                     
  4435                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  4436   003E92  9684               	bcf	132,3,c	;volatile
  4437   003E94                     
  4438                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  4439   003E94  9884               	bcf	132,4,c	;volatile
  4440   003E96                     
  4441                           ;color.c: 28:     LATGbits.LATG1=0;
  4442   003E96  927F               	bcf	127,1,c	;volatile
  4443   003E98                     
  4444                           ;color.c: 29:     LATFbits.LATF7=0;
  4445   003E98  9E7E               	bcf	126,7,c	;volatile
  4446   003E9A                     
  4447                           ;color.c: 30:     LATAbits.LATA4=0;
  4448   003E9A  9879               	bcf	121,4,c	;volatile
  4449   003E9C                     
  4450                           ;color.c: 32:     LATDbits.LATD3=0;
  4451   003E9C  967C               	bcf	124,3,c	;volatile
  4452   003E9E                     
  4453                           ;color.c: 33:     LATDbits.LATD4=0;
  4454   003E9E  987C               	bcf	124,4,c	;volatile
  4455   003EA0  0012               	return		;funcret
  4456   003EA2                     __end_of_color_click_init:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _color_writetoaddr *****************
  4460 ;; Defined at:
  4461 ;;		line 41 in file "color.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  address         1    wreg     unsigned char 
  4464 ;;  value           1    2[COMRAM] unsigned char 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  address         1    3[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;Total ram usage:        2 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 3
  4483 ;; This function calls:
  4484 ;;		_I2C_2_Master_Start
  4485 ;;		_I2C_2_Master_Stop
  4486 ;;		_I2C_2_Master_Write
  4487 ;; This function is called by:
  4488 ;;		_color_click_init
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text26
  4493   004260                     __ptext26:
  4494                           	callstack 0
  4495   004260                     _color_writetoaddr:
  4496                           	callstack 26
  4497                           
  4498                           ;incstack = 0
  4499                           ;color_writetoaddr@address stored from wreg
  4500   004260  6E04               	movwf	color_writetoaddr@address^0,c
  4501   004262                     
  4502                           ;color.c: 42:     I2C_2_Master_Start();
  4503   004262  EC6B  F021         	call	_I2C_2_Master_Start	;wreg free
  4504                           
  4505                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  4506   004266  0E52               	movlw	82
  4507   004268  EC5B  F021         	call	_I2C_2_Master_Write
  4508                           
  4509                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  4510   00426C  5004               	movf	color_writetoaddr@address^0,w,c
  4511   00426E  0980               	iorlw	128
  4512   004270  EC5B  F021         	call	_I2C_2_Master_Write
  4513                           
  4514                           ;color.c: 45:     I2C_2_Master_Write(value);
  4515   004274  5003               	movf	color_writetoaddr@value^0,w,c
  4516   004276  EC5B  F021         	call	_I2C_2_Master_Write
  4517                           
  4518                           ;color.c: 46:     I2C_2_Master_Stop();
  4519   00427A  EC66  F021         	call	_I2C_2_Master_Stop	;wreg free
  4520   00427E  0012               	return		;funcret
  4521   004280                     __end_of_color_writetoaddr:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _I2C_2_Master_Write *****************
  4525 ;; Defined at:
  4526 ;;		line 45 in file "i2c.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  data_byte       1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  data_byte       1    1[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;Total ram usage:        1 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 2
  4547 ;; This function calls:
  4548 ;;		_I2C_2_Master_Idle
  4549 ;; This function is called by:
  4550 ;;		_color_writetoaddr
  4551 ;;		_color_read_lum
  4552 ;;		_color_read_Red
  4553 ;;		_color_read_Green
  4554 ;;		_color_read_Blue
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text27
  4559   0042B6                     __ptext27:
  4560                           	callstack 0
  4561   0042B6                     _I2C_2_Master_Write:
  4562                           	callstack 26
  4563                           
  4564                           ;incstack = 0
  4565                           ;I2C_2_Master_Write@data_byte stored from wreg
  4566   0042B6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4567   0042B8                     
  4568                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4569   0042B8  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  4570   0042BC                     
  4571                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4572   0042BC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4573   0042C0  0012               	return		;funcret
  4574   0042C2                     __end_of_I2C_2_Master_Write:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _I2C_2_Master_Stop *****************
  4578 ;; Defined at:
  4579 ;;		line 39 in file "i2c.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 2
  4600 ;; This function calls:
  4601 ;;		_I2C_2_Master_Idle
  4602 ;; This function is called by:
  4603 ;;		_color_writetoaddr
  4604 ;;		_color_read_lum
  4605 ;;		_color_read_Red
  4606 ;;		_color_read_Green
  4607 ;;		_color_read_Blue
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text28
  4612   0042CC                     __ptext28:
  4613                           	callstack 0
  4614   0042CC                     _I2C_2_Master_Stop:
  4615                           	callstack 26
  4616   0042CC                     
  4617                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4618   0042CC  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  4619   0042D0                     
  4620                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4621   0042D0  010E               	movlb	14	; () banked
  4622   0042D2  85DA               	bsf	218,2,b	;volatile
  4623   0042D4                     
  4624                           ; BSR set to: 14
  4625   0042D4  0012               	return		;funcret
  4626   0042D6                     __end_of_I2C_2_Master_Stop:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _I2C_2_Master_Start *****************
  4630 ;; Defined at:
  4631 ;;		line 27 in file "i2c.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 2
  4652 ;; This function calls:
  4653 ;;		_I2C_2_Master_Idle
  4654 ;; This function is called by:
  4655 ;;		_color_writetoaddr
  4656 ;;		_color_read_lum
  4657 ;;		_color_read_Red
  4658 ;;		_color_read_Green
  4659 ;;		_color_read_Blue
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text29
  4664   0042D6                     __ptext29:
  4665                           	callstack 0
  4666   0042D6                     _I2C_2_Master_Start:
  4667                           	callstack 26
  4668   0042D6                     
  4669                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4670   0042D6  EC09  F021         	call	_I2C_2_Master_Idle	;wreg free
  4671   0042DA                     
  4672                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4673   0042DA  010E               	movlb	14	; () banked
  4674   0042DC  81DA               	bsf	218,0,b	;volatile
  4675   0042DE                     
  4676                           ; BSR set to: 14
  4677   0042DE  0012               	return		;funcret
  4678   0042E0                     __end_of_I2C_2_Master_Start:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _I2C_2_Master_Idle *****************
  4682 ;; Defined at:
  4683 ;;		line 22 in file "i2c.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;Total ram usage:        1 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_I2C_2_Master_Start
  4708 ;;		_I2C_2_Master_RepStart
  4709 ;;		_I2C_2_Master_Stop
  4710 ;;		_I2C_2_Master_Write
  4711 ;;		_I2C_2_Master_Read
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text30
  4716   004212                     __ptext30:
  4717                           	callstack 0
  4718   004212                     _I2C_2_Master_Idle:
  4719                           	callstack 26
  4720   004212                     l140:
  4721   004212  010E               	movlb	14	; () banked
  4722   004214  B5D8               	btfsc	216,2,b	;volatile
  4723   004216  EF0F  F021         	goto	u2251
  4724   00421A  EF11  F021         	goto	u2250
  4725   00421E                     u2251:
  4726   00421E  EF09  F021         	goto	l140
  4727   004222                     u2250:
  4728   004222                     
  4729                           ; BSR set to: 14
  4730   004222  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4731   004226  0E1F               	movlw	31
  4732   004228  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4733   00422A  A4D8               	btfss	status,2,c
  4734   00422C  EF1A  F021         	goto	u2261
  4735   004230  EF1C  F021         	goto	u2260
  4736   004234                     u2261:
  4737   004234  EF09  F021         	goto	l140
  4738   004238                     u2260:
  4739   004238                     
  4740                           ; BSR set to: 14
  4741   004238  0012               	return		;funcret
  4742   00423A                     __end_of_I2C_2_Master_Idle:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _I2C_2_Master_Init *****************
  4746 ;; Defined at:
  4747 ;;		line 4 in file "i2c.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_color_click_init
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text31
  4777   0041E8                     __ptext31:
  4778                           	callstack 0
  4779   0041E8                     _I2C_2_Master_Init:
  4780                           	callstack 28
  4781   0041E8                     
  4782                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4783   0041E8  010E               	movlb	14	; () banked
  4784   0041EA  51D9               	movf	217,w,b	;volatile
  4785   0041EC  0BF0               	andlw	-16
  4786   0041EE  0908               	iorlw	8
  4787   0041F0  6FD9               	movwf	217,b	;volatile
  4788   0041F2                     
  4789                           ; BSR set to: 14
  4790                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4791   0041F2  8BD9               	bsf	217,5,b	;volatile
  4792                           
  4793                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4794   0041F4  0E9F               	movlw	159
  4795   0041F6  6FD6               	movwf	214,b	;volatile
  4796   0041F8                     
  4797                           ; BSR set to: 14
  4798                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4799   0041F8  8A84               	bsf	132,5,c	;volatile
  4800   0041FA                     
  4801                           ; BSR set to: 14
  4802                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4803   0041FA  8C84               	bsf	132,6,c	;volatile
  4804   0041FC                     
  4805                           ; BSR set to: 14
  4806                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4807   0041FC  9BA7               	bcf	167,5,b	;volatile
  4808   0041FE                     
  4809                           ; BSR set to: 14
  4810                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4811   0041FE  9DA7               	bcf	167,6,b	;volatile
  4812                           
  4813                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4814   004200  0E1D               	movlw	29
  4815   004202  6F1D               	movwf	29,b	;volatile
  4816                           
  4817                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4818   004204  0E1E               	movlw	30
  4819   004206  6F1C               	movwf	28,b	;volatile
  4820                           
  4821                           ;i2c.c: 18:   RD5PPS=0x1C;
  4822   004208  0E1C               	movlw	28
  4823   00420A  6F6F               	movwf	111,b	;volatile
  4824                           
  4825                           ;i2c.c: 19:   RD6PPS=0x1B;
  4826   00420C  0E1B               	movlw	27
  4827   00420E  6F70               	movwf	112,b	;volatile
  4828   004210                     
  4829                           ; BSR set to: 14
  4830   004210  0012               	return		;funcret
  4831   004212                     __end_of_I2C_2_Master_Init:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _RedMove *****************
  4835 ;; Defined at:
  4836 ;;		line 213 in file "dc_motor.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4839 ;;		 -> motorL(9), 
  4840 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4841 ;;		 -> motorR(9), 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:        4 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 5
  4860 ;; This function calls:
  4861 ;;		_reverseDetect
  4862 ;;		_turnRight45
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text32
  4869   00413C                     __ptext32:
  4870                           	callstack 0
  4871   00413C                     _RedMove:
  4872                           	callstack 25
  4873   00413C                     
  4874                           ;dc_motor.c: 214:     reverseDetect(&motorL, &motorR);
  4875   00413C  0EF6               	movlw	low _motorL
  4876   00413E  6E19               	movwf	reverseDetect@mL^0,c
  4877   004140  0E00               	movlw	high _motorL
  4878   004142  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  4879   004144  0EED               	movlw	low _motorR
  4880   004146  6E1B               	movwf	reverseDetect@mR^0,c
  4881   004148  0E00               	movlw	high _motorR
  4882   00414A  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  4883   00414C  EC7A  F01E         	call	_reverseDetect	;wreg free
  4884                           
  4885                           ;dc_motor.c: 216:     turnRight45(&motorL, &motorR);
  4886   004150  0EF6               	movlw	low _motorL
  4887   004152  6E19               	movwf	turnRight45@mL^0,c
  4888   004154  0E00               	movlw	high _motorL
  4889   004156  6E1A               	movwf	(turnRight45@mL+1)^0,c
  4890   004158  0EED               	movlw	low _motorR
  4891   00415A  6E1B               	movwf	turnRight45@mR^0,c
  4892   00415C  0E00               	movlw	high _motorR
  4893   00415E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  4894   004160  ECD3  F01E         	call	_turnRight45	;wreg free
  4895                           
  4896                           ;dc_motor.c: 217:     turnRight45(&motorL, &motorR);
  4897   004164  0EF6               	movlw	low _motorL
  4898   004166  6E19               	movwf	turnRight45@mL^0,c
  4899   004168  0E00               	movlw	high _motorL
  4900   00416A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  4901   00416C  0EED               	movlw	low _motorR
  4902   00416E  6E1B               	movwf	turnRight45@mR^0,c
  4903   004170  0E00               	movlw	high _motorR
  4904   004172  6E1C               	movwf	(turnRight45@mR+1)^0,c
  4905   004174  ECD3  F01E         	call	_turnRight45	;wreg free
  4906   004178  0012               	return		;funcret
  4907   00417A                     __end_of_RedMove:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function _Interrupts_init *****************
  4911 ;; Defined at:
  4912 ;;		line 12 in file "interrupts.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		None
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text33
  4941   0042E4                     __ptext33:
  4942                           	callstack 0
  4943   0042E4                     _Interrupts_init:
  4944                           	callstack 29
  4945   0042E4  0012               	return		;funcret
  4946   0042E6                     __end_of_Interrupts_init:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _GreenMove *****************
  4950 ;; Defined at:
  4951 ;;		line 221 in file "dc_motor.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4954 ;;		 -> motorL(9), 
  4955 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4956 ;;		 -> motorR(9), 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;Total ram usage:        4 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 5
  4975 ;; This function calls:
  4976 ;;		_reverseDetect
  4977 ;;		_turnLeft45
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text34
  4984   00417A                     __ptext34:
  4985                           	callstack 0
  4986   00417A                     _GreenMove:
  4987                           	callstack 25
  4988   00417A                     
  4989                           ;dc_motor.c: 222:     reverseDetect(&motorL, &motorR);
  4990   00417A  0EF6               	movlw	low _motorL
  4991   00417C  6E19               	movwf	reverseDetect@mL^0,c
  4992   00417E  0E00               	movlw	high _motorL
  4993   004180  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  4994   004182  0EED               	movlw	low _motorR
  4995   004184  6E1B               	movwf	reverseDetect@mR^0,c
  4996   004186  0E00               	movlw	high _motorR
  4997   004188  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  4998   00418A  EC7A  F01E         	call	_reverseDetect	;wreg free
  4999                           
  5000                           ;dc_motor.c: 224:     turnLeft45(&motorL, &motorR);
  5001   00418E  0EF6               	movlw	low _motorL
  5002   004190  6E19               	movwf	turnLeft45@mL^0,c
  5003   004192  0E00               	movlw	high _motorL
  5004   004194  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5005   004196  0EED               	movlw	low _motorR
  5006   004198  6E1B               	movwf	turnLeft45@mR^0,c
  5007   00419A  0E00               	movlw	high _motorR
  5008   00419C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5009   00419E  ECA7  F01E         	call	_turnLeft45	;wreg free
  5010                           
  5011                           ;dc_motor.c: 225:     turnLeft45(&motorL, &motorR);
  5012   0041A2  0EF6               	movlw	low _motorL
  5013   0041A4  6E19               	movwf	turnLeft45@mL^0,c
  5014   0041A6  0E00               	movlw	high _motorL
  5015   0041A8  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5016   0041AA  0EED               	movlw	low _motorR
  5017   0041AC  6E1B               	movwf	turnLeft45@mR^0,c
  5018   0041AE  0E00               	movlw	high _motorR
  5019   0041B0  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5020   0041B2  ECA7  F01E         	call	_turnLeft45	;wreg free
  5021   0041B6  0012               	return		;funcret
  5022   0041B8                     __end_of_GreenMove:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function _Colour_decider *****************
  5026 ;; Defined at:
  5027 ;;		line 125 in file "color.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  vals            2   74[COMRAM] PTR struct RGB
  5030 ;;		 -> vals(8), 
  5031 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  5032 ;;		 -> rel(12), 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  RGB_col        12    6[BANK0 ] float [3]
  5035 ;;  Hue             4   28[BANK0 ] float 
  5036 ;;  Cmin            4   22[BANK0 ] float 
  5037 ;;  Cmax            4   18[BANK0 ] float 
  5038 ;;  i               2   26[BANK0 ] int 
  5039 ;;  Cmax_i          2    4[BANK0 ] int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2   74[COMRAM] int 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;Total ram usage:       38 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 5
  5056 ;; This function calls:
  5057 ;;		___fladd
  5058 ;;		___fldiv
  5059 ;;		___fleq
  5060 ;;		___flge
  5061 ;;		___flmul
  5062 ;;		___flsub
  5063 ;;		___xxtofl
  5064 ;;		_reverseDetect
  5065 ;;		_turnLeft45
  5066 ;;		_turnRight45
  5067 ;; This function is called by:
  5068 ;;		_main
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text35
  5073   000E50                     __ptext35:
  5074                           	callstack 0
  5075   000E50                     _Colour_decider:
  5076                           	callstack 25
  5077   000E50                     
  5078                           ;color.c: 126:     float Cmax = 0;
  5079   000E50  0E00               	movlw	0
  5080   000E52  0100               	movlb	0	; () banked
  5081   000E54  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  5082   000E56  0E00               	movlw	0
  5083   000E58  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  5084   000E5A  0E00               	movlw	0
  5085   000E5C  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  5086   000E5E  0E00               	movlw	0
  5087   000E60  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  5088                           
  5089                           ;color.c: 127:     float Cmin= 100000;
  5090   000E62  0E00               	movlw	0
  5091   000E64  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  5092   000E66  0E50               	movlw	80
  5093   000E68  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  5094   000E6A  0EC3               	movlw	195
  5095   000E6C  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  5096   000E6E  0E47               	movlw	71
  5097   000E70  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  5098                           
  5099                           ;color.c: 128:     int Cmax_i =4;
  5100   000E72  0E00               	movlw	0
  5101   000E74  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  5102   000E76  0E04               	movlw	4
  5103   000E78  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  5104   000E7A                     
  5105                           ; BSR set to: 0
  5106                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  5107   000E7A  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  5108   000E7E  0E0B               	movlw	11
  5109   000E80                     u3531:
  5110   000E80  6ADE               	clrf	postinc2,c
  5111   000E82  06E8               	decf	wreg,f,c
  5112   000E84  E2FD               	bc	u3531
  5113   000E86                     
  5114                           ; BSR set to: 0
  5115   000E86  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  5116   000E8A  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  5117   000E8E  CFDE F001          	movff	postinc2,___xxtofl@val
  5118   000E92  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5119   000E96  0E00               	movlw	0
  5120   000E98  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5121   000E9A  0EFF               	movlw	-1
  5122   000E9C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5123   000E9E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5124   000EA0  0E01               	movlw	1
  5125   000EA2  ECDF  F016         	call	___xxtofl
  5126   000EA6  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  5127   000EAA  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  5128   000EAE  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  5129   000EB2  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  5130   000EB6  EE20 F002          	lfsr	2,2
  5131   000EBA  504B               	movf	Colour_decider@vals^0,w,c
  5132   000EBC  26D9               	addwf	fsr2l,f,c
  5133   000EBE  504C               	movf	(Colour_decider@vals+1)^0,w,c
  5134   000EC0  22DA               	addwfc	fsr2h,f,c
  5135   000EC2  CFDE F001          	movff	postinc2,___xxtofl@val
  5136   000EC6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5137   000ECA  0E00               	movlw	0
  5138   000ECC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5139   000ECE  0EFF               	movlw	-1
  5140   000ED0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5141   000ED2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5142   000ED4  0E01               	movlw	1
  5143   000ED6  ECDF  F016         	call	___xxtofl
  5144   000EDA  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  5145   000EDE  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  5146   000EE2  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  5147   000EE6  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  5148   000EEA  EE20 F004          	lfsr	2,4
  5149   000EEE  504B               	movf	Colour_decider@vals^0,w,c
  5150   000EF0  26D9               	addwf	fsr2l,f,c
  5151   000EF2  504C               	movf	(Colour_decider@vals+1)^0,w,c
  5152   000EF4  22DA               	addwfc	fsr2h,f,c
  5153   000EF6  CFDE F001          	movff	postinc2,___xxtofl@val
  5154   000EFA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5155   000EFE  0E00               	movlw	0
  5156   000F00  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5157   000F02  0EFF               	movlw	-1
  5158   000F04  6E03               	movwf	(___xxtofl@val+2)^0,c
  5159   000F06  6E04               	movwf	(___xxtofl@val+3)^0,c
  5160   000F08  0E01               	movlw	1
  5161   000F0A  ECDF  F016         	call	___xxtofl
  5162   000F0E  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  5163   000F12  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  5164   000F16  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  5165   000F1A  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  5166   000F1E                     
  5167                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  5168   000F1E  0E00               	movlw	0
  5169   000F20  0100               	movlb	0	; () banked
  5170   000F22  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  5171   000F24  0E00               	movlw	0
  5172   000F26  6F7A               	movwf	Colour_decider@i& (0+255),b
  5173   000F28                     l3700:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  5177   000F28  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  5178   000F2C  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  5179   000F30  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  5180   000F34  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  5181   000F38  0E66               	movlw	low Colour_decider@RGB_col
  5182   000F3A  6E4F               	movwf	??_Colour_decider^0,c
  5183   000F3C  0E00               	movlw	high Colour_decider@RGB_col
  5184   000F3E  6E50               	movwf	(??_Colour_decider+1)^0,c
  5185   000F40  90D8               	bcf	status,0,c
  5186   000F42  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5187   000F44  6ED9               	movwf	fsr2l,c
  5188   000F46  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5189   000F48  6EDA               	movwf	fsr2h,c
  5190   000F4A  90D8               	bcf	status,0,c
  5191   000F4C  36D9               	rlcf	fsr2l,f,c
  5192   000F4E  36DA               	rlcf	fsr2h,f,c
  5193   000F50  504F               	movf	??_Colour_decider^0,w,c
  5194   000F52  26D9               	addwf	fsr2l,f,c
  5195   000F54  5050               	movf	(??_Colour_decider+1)^0,w,c
  5196   000F56  22DA               	addwfc	fsr2h,f,c
  5197   000F58  CFDE F005          	movff	postinc2,___flge@ff2
  5198   000F5C  CFDE F006          	movff	postinc2,___flge@ff2+1
  5199   000F60  CFDE F007          	movff	postinc2,___flge@ff2+2
  5200   000F64  CFDE F008          	movff	postinc2,___flge@ff2+3
  5201   000F68  EC8C  F01A         	call	___flge	;wreg free
  5202   000F6C  B0D8               	btfsc	status,0,c
  5203   000F6E  EFBB  F007         	goto	u3541
  5204   000F72  EFBD  F007         	goto	u3540
  5205   000F76                     u3541:
  5206   000F76  EFDA  F007         	goto	l3706
  5207   000F7A                     u3540:
  5208   000F7A                     
  5209                           ;color.c: 137:             Cmax=RGB_col[i];
  5210   000F7A  0E66               	movlw	low Colour_decider@RGB_col
  5211   000F7C  6E4F               	movwf	??_Colour_decider^0,c
  5212   000F7E  0E00               	movlw	high Colour_decider@RGB_col
  5213   000F80  6E50               	movwf	(??_Colour_decider+1)^0,c
  5214   000F82  90D8               	bcf	status,0,c
  5215   000F84  0100               	movlb	0	; () banked
  5216   000F86  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5217   000F88  6ED9               	movwf	fsr2l,c
  5218   000F8A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5219   000F8C  6EDA               	movwf	fsr2h,c
  5220   000F8E  90D8               	bcf	status,0,c
  5221   000F90  36D9               	rlcf	fsr2l,f,c
  5222   000F92  36DA               	rlcf	fsr2h,f,c
  5223   000F94  504F               	movf	??_Colour_decider^0,w,c
  5224   000F96  26D9               	addwf	fsr2l,f,c
  5225   000F98  5050               	movf	(??_Colour_decider+1)^0,w,c
  5226   000F9A  22DA               	addwfc	fsr2h,f,c
  5227   000F9C  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  5228   000FA0  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  5229   000FA4  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  5230   000FA8  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  5231   000FAC                     
  5232                           ; BSR set to: 0
  5233                           ;color.c: 138:             Cmax_i=i;
  5234   000FAC  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  5235   000FB0  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  5236   000FB4                     l3706:
  5237                           
  5238                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  5239   000FB4  0E66               	movlw	low Colour_decider@RGB_col
  5240   000FB6  6E4F               	movwf	??_Colour_decider^0,c
  5241   000FB8  0E00               	movlw	high Colour_decider@RGB_col
  5242   000FBA  6E50               	movwf	(??_Colour_decider+1)^0,c
  5243   000FBC  90D8               	bcf	status,0,c
  5244   000FBE  0100               	movlb	0	; () banked
  5245   000FC0  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5246   000FC2  6ED9               	movwf	fsr2l,c
  5247   000FC4  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5248   000FC6  6EDA               	movwf	fsr2h,c
  5249   000FC8  90D8               	bcf	status,0,c
  5250   000FCA  36D9               	rlcf	fsr2l,f,c
  5251   000FCC  36DA               	rlcf	fsr2h,f,c
  5252   000FCE  504F               	movf	??_Colour_decider^0,w,c
  5253   000FD0  26D9               	addwf	fsr2l,f,c
  5254   000FD2  5050               	movf	(??_Colour_decider+1)^0,w,c
  5255   000FD4  22DA               	addwfc	fsr2h,f,c
  5256   000FD6  CFDE F001          	movff	postinc2,___flge@ff1
  5257   000FDA  CFDE F002          	movff	postinc2,___flge@ff1+1
  5258   000FDE  CFDE F003          	movff	postinc2,___flge@ff1+2
  5259   000FE2  CFDE F004          	movff	postinc2,___flge@ff1+3
  5260   000FE6  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  5261   000FEA  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  5262   000FEE  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  5263   000FF2  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  5264   000FF6  EC8C  F01A         	call	___flge	;wreg free
  5265   000FFA  B0D8               	btfsc	status,0,c
  5266   000FFC  EF02  F008         	goto	u3551
  5267   001000  EF04  F008         	goto	u3550
  5268   001004                     u3551:
  5269   001004  EF1D  F008         	goto	l3710
  5270   001008                     u3550:
  5271   001008  0E66               	movlw	low Colour_decider@RGB_col
  5272   00100A  6E4F               	movwf	??_Colour_decider^0,c
  5273   00100C  0E00               	movlw	high Colour_decider@RGB_col
  5274   00100E  6E50               	movwf	(??_Colour_decider+1)^0,c
  5275   001010  90D8               	bcf	status,0,c
  5276   001012  0100               	movlb	0	; () banked
  5277   001014  357A               	rlcf	Colour_decider@i& (0+255),w,b
  5278   001016  6ED9               	movwf	fsr2l,c
  5279   001018  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  5280   00101A  6EDA               	movwf	fsr2h,c
  5281   00101C  90D8               	bcf	status,0,c
  5282   00101E  36D9               	rlcf	fsr2l,f,c
  5283   001020  36DA               	rlcf	fsr2h,f,c
  5284   001022  504F               	movf	??_Colour_decider^0,w,c
  5285   001024  26D9               	addwf	fsr2l,f,c
  5286   001026  5050               	movf	(??_Colour_decider+1)^0,w,c
  5287   001028  22DA               	addwfc	fsr2h,f,c
  5288   00102A  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  5289   00102E  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  5290   001032  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  5291   001036  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  5292   00103A                     l3710:
  5293                           
  5294                           ;color.c: 141:     }
  5295   00103A  0100               	movlb	0	; () banked
  5296   00103C  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  5297   00103E  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  5298   001040                     
  5299                           ; BSR set to: 0
  5300   001040  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  5301   001042  EF2C  F008         	goto	u3561
  5302   001046  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  5303   001048  E109               	bnz	u3560
  5304   00104A  0E03               	movlw	3
  5305   00104C  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  5306   00104E  A0D8               	btfss	status,0,c
  5307   001050  EF2C  F008         	goto	u3561
  5308   001054  EF2E  F008         	goto	u3560
  5309   001058                     u3561:
  5310   001058  EF94  F007         	goto	l3700
  5311   00105C                     u3560:
  5312   00105C                     
  5313                           ; BSR set to: 0
  5314                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  5315   00105C  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5316   001060  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5317   001064  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5318   001068  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5319   00106C  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5320   001070  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5321   001074  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5322   001078  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5323   00107C  EC18  F020         	call	___flsub	;wreg free
  5324   001080  C011  F019         	movff	?___flsub,___fleq@ff1
  5325   001084  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  5326   001088  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  5327   00108C  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  5328   001090  0E00               	movlw	0
  5329   001092  6E1D               	movwf	___fleq@ff2^0,c
  5330   001094  0E00               	movlw	0
  5331   001096  6E1E               	movwf	(___fleq@ff2+1)^0,c
  5332   001098  0E00               	movlw	0
  5333   00109A  6E1F               	movwf	(___fleq@ff2+2)^0,c
  5334   00109C  0E00               	movlw	0
  5335   00109E  6E20               	movwf	(___fleq@ff2+3)^0,c
  5336   0010A0  EC73  F01B         	call	___fleq	;wreg free
  5337   0010A4  A0D8               	btfss	status,0,c
  5338   0010A6  EF57  F008         	goto	u3571
  5339   0010AA  EF59  F008         	goto	u3570
  5340   0010AE                     u3571:
  5341   0010AE  EF5F  F008         	goto	l3720
  5342   0010B2                     u3570:
  5343   0010B2                     l3716:
  5344   0010B2  0E00               	movlw	0
  5345   0010B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5346   0010B6  0E00               	movlw	0
  5347   0010B8  6E4B               	movwf	?_Colour_decider^0,c
  5348   0010BA  EFBA  F00C         	goto	l76
  5349   0010BE                     l3720:
  5350                           
  5351                           ;color.c: 146:     if (Cmax_i==0){
  5352   0010BE  0100               	movlb	0	; () banked
  5353   0010C0  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  5354   0010C2  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  5355   0010C4  A4D8               	btfss	status,2,c
  5356   0010C6  EF67  F008         	goto	u3581
  5357   0010CA  EF69  F008         	goto	u3580
  5358   0010CE                     u3581:
  5359   0010CE  EFDD  F008         	goto	l3728
  5360   0010D2                     u3580:
  5361   0010D2                     
  5362                           ; BSR set to: 0
  5363                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  5364   0010D2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5365   0010D6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5366   0010DA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5367   0010DE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5368   0010E2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5369   0010E6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5370   0010EA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5371   0010EE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5372   0010F2  EC18  F020         	call	___flsub	;wreg free
  5373   0010F6  C011  F01D         	movff	?___flsub,___fldiv@a
  5374   0010FA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5375   0010FE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5376   001102  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5377   001106  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  5378   00110A  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  5379   00110E  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  5380   001112  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  5381   001116  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  5382   00111A  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  5383   00111E  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  5384   001122  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  5385   001126  EC18  F020         	call	___flsub	;wreg free
  5386   00112A  C011  F019         	movff	?___flsub,___fldiv@b
  5387   00112E  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5388   001132  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5389   001136  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5390   00113A  EC30  F011         	call	___fldiv	;wreg free
  5391   00113E  C019  F032         	movff	?___fldiv,___flmul@b
  5392   001142  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  5393   001146  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  5394   00114A  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  5395   00114E  0E00               	movlw	0
  5396   001150  6E36               	movwf	___flmul@a^0,c
  5397   001152  0E00               	movlw	0
  5398   001154  6E37               	movwf	(___flmul@a+1)^0,c
  5399   001156  0E70               	movlw	112
  5400   001158  6E38               	movwf	(___flmul@a+2)^0,c
  5401   00115A  0E42               	movlw	66
  5402   00115C  6E39               	movwf	(___flmul@a+3)^0,c
  5403   00115E  EC1B  F00F         	call	___flmul	;wreg free
  5404   001162  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5405   001166  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5406   00116A  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5407   00116E  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5408   001172                     
  5409                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  5410   001172  0100               	movlb	0	; () banked
  5411   001174  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  5412   001176  EFC1  F008         	goto	u3590
  5413   00117A  EFBF  F008         	goto	u3591
  5414   00117E                     u3591:
  5415   00117E  EFBC  F009         	goto	l3738
  5416   001182                     u3590:
  5417   001182                     
  5418                           ; BSR set to: 0
  5419   001182  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  5420   001186  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  5421   00118A  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  5422   00118E  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  5423   001192  0E00               	movlw	0
  5424   001194  6E05               	movwf	___fladd@a^0,c
  5425   001196  0E00               	movlw	0
  5426   001198  6E06               	movwf	(___fladd@a+1)^0,c
  5427   00119A  0EB4               	movlw	180
  5428   00119C  6E07               	movwf	(___fladd@a+2)^0,c
  5429   00119E  0E43               	movlw	67
  5430   0011A0  6E08               	movwf	(___fladd@a+3)^0,c
  5431   0011A2  ECBB  F00C         	call	___fladd	;wreg free
  5432   0011A6  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  5433   0011AA  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  5434   0011AE  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  5435   0011B2  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  5436   0011B6  EFBC  F009         	goto	l3738
  5437   0011BA                     l3728:
  5438                           
  5439                           ; BSR set to: 0
  5440   0011BA  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  5441   0011BC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  5442   0011BE  A4D8               	btfss	status,2,c
  5443   0011C0  EFE4  F008         	goto	u3601
  5444   0011C4  EFE6  F008         	goto	u3600
  5445   0011C8                     u3601:
  5446   0011C8  EF52  F009         	goto	l3734
  5447   0011CC                     u3600:
  5448   0011CC                     
  5449                           ; BSR set to: 0
  5450                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  5451   0011CC  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5452   0011D0  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5453   0011D4  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5454   0011D8  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5455   0011DC  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5456   0011E0  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5457   0011E4  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5458   0011E8  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5459   0011EC  EC18  F020         	call	___flsub	;wreg free
  5460   0011F0  C011  F01D         	movff	?___flsub,___fldiv@a
  5461   0011F4  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5462   0011F8  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5463   0011FC  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5464   001200  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  5465   001204  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  5466   001208  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  5467   00120C  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  5468   001210  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  5469   001214  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  5470   001218  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  5471   00121C  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  5472   001220  EC18  F020         	call	___flsub	;wreg free
  5473   001224  C011  F019         	movff	?___flsub,___fldiv@b
  5474   001228  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5475   00122C  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5476   001230  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5477   001234  EC30  F011         	call	___fldiv	;wreg free
  5478   001238  C019  F060         	movff	?___fldiv,_Colour_decider$2500
  5479   00123C  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2500+1
  5480   001240  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2500+2
  5481   001244  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2500+3
  5482   001248                     
  5483                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  5484   001248  0E00               	movlw	0
  5485   00124A  6E05               	movwf	___fladd@a^0,c
  5486   00124C  0E00               	movlw	0
  5487   00124E  6E06               	movwf	(___fladd@a+1)^0,c
  5488   001250  0E00               	movlw	0
  5489   001252  6E07               	movwf	(___fladd@a+2)^0,c
  5490   001254  0E40               	movlw	64
  5491   001256  6E08               	movwf	(___fladd@a+3)^0,c
  5492   001258  C060  F001         	movff	_Colour_decider$2500,___fladd@b
  5493   00125C  C061  F002         	movff	_Colour_decider$2500+1,___fladd@b+1
  5494   001260  C062  F003         	movff	_Colour_decider$2500+2,___fladd@b+2
  5495   001264  C063  F004         	movff	_Colour_decider$2500+3,___fladd@b+3
  5496   001268  ECBB  F00C         	call	___fladd	;wreg free
  5497   00126C  C001  F032         	movff	?___fladd,___flmul@b
  5498   001270  C002  F033         	movff	?___fladd+1,___flmul@b+1
  5499   001274  C003  F034         	movff	?___fladd+2,___flmul@b+2
  5500   001278  C004  F035         	movff	?___fladd+3,___flmul@b+3
  5501   00127C  0E00               	movlw	0
  5502   00127E  6E36               	movwf	___flmul@a^0,c
  5503   001280  0E00               	movlw	0
  5504   001282  6E37               	movwf	(___flmul@a+1)^0,c
  5505   001284  0E70               	movlw	112
  5506   001286  6E38               	movwf	(___flmul@a+2)^0,c
  5507   001288  0E42               	movlw	66
  5508   00128A  6E39               	movwf	(___flmul@a+3)^0,c
  5509   00128C  EC1B  F00F         	call	___flmul	;wreg free
  5510   001290  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5511   001294  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5512   001298  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5513   00129C  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5514                           
  5515                           ;color.c: 155:     }
  5516   0012A0  EFBC  F009         	goto	l3738
  5517   0012A4                     l3734:
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  5521   0012A4  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  5522   0012A8  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  5523   0012AC  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  5524   0012B0  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  5525   0012B4  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  5526   0012B8  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  5527   0012BC  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  5528   0012C0  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  5529   0012C4  EC18  F020         	call	___flsub	;wreg free
  5530   0012C8  C011  F01D         	movff	?___flsub,___fldiv@a
  5531   0012CC  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  5532   0012D0  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  5533   0012D4  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  5534   0012D8  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  5535   0012DC  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  5536   0012E0  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  5537   0012E4  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  5538   0012E8  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  5539   0012EC  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  5540   0012F0  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  5541   0012F4  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  5542   0012F8  EC18  F020         	call	___flsub	;wreg free
  5543   0012FC  C011  F019         	movff	?___flsub,___fldiv@b
  5544   001300  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  5545   001304  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  5546   001308  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  5547   00130C  EC30  F011         	call	___fldiv	;wreg free
  5548   001310  C019  F060         	movff	?___fldiv,_Colour_decider$2500
  5549   001314  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2500+1
  5550   001318  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2500+2
  5551   00131C  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2500+3
  5552   001320                     
  5553                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  5554   001320  0E00               	movlw	0
  5555   001322  6E05               	movwf	___fladd@a^0,c
  5556   001324  0E00               	movlw	0
  5557   001326  6E06               	movwf	(___fladd@a+1)^0,c
  5558   001328  0E80               	movlw	128
  5559   00132A  6E07               	movwf	(___fladd@a+2)^0,c
  5560   00132C  0E40               	movlw	64
  5561   00132E  6E08               	movwf	(___fladd@a+3)^0,c
  5562   001330  C060  F001         	movff	_Colour_decider$2500,___fladd@b
  5563   001334  C061  F002         	movff	_Colour_decider$2500+1,___fladd@b+1
  5564   001338  C062  F003         	movff	_Colour_decider$2500+2,___fladd@b+2
  5565   00133C  C063  F004         	movff	_Colour_decider$2500+3,___fladd@b+3
  5566   001340  ECBB  F00C         	call	___fladd	;wreg free
  5567   001344  C001  F032         	movff	?___fladd,___flmul@b
  5568   001348  C002  F033         	movff	?___fladd+1,___flmul@b+1
  5569   00134C  C003  F034         	movff	?___fladd+2,___flmul@b+2
  5570   001350  C004  F035         	movff	?___fladd+3,___flmul@b+3
  5571   001354  0E00               	movlw	0
  5572   001356  6E36               	movwf	___flmul@a^0,c
  5573   001358  0E00               	movlw	0
  5574   00135A  6E37               	movwf	(___flmul@a+1)^0,c
  5575   00135C  0E70               	movlw	112
  5576   00135E  6E38               	movwf	(___flmul@a+2)^0,c
  5577   001360  0E42               	movlw	66
  5578   001362  6E39               	movwf	(___flmul@a+3)^0,c
  5579   001364  EC1B  F00F         	call	___flmul	;wreg free
  5580   001368  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  5581   00136C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  5582   001370  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  5583   001374  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  5584   001378                     l3738:
  5585                           
  5586                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  5587   001378  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5588   00137C  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5589   001380  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5590   001384  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5591   001388  0E00               	movlw	0
  5592   00138A  6E05               	movwf	___flge@ff2^0,c
  5593   00138C  0E00               	movlw	0
  5594   00138E  6E06               	movwf	(___flge@ff2+1)^0,c
  5595   001390  0EA5               	movlw	165
  5596   001392  6E07               	movwf	(___flge@ff2+2)^0,c
  5597   001394  0E43               	movlw	67
  5598   001396  6E08               	movwf	(___flge@ff2+3)^0,c
  5599   001398  EC8C  F01A         	call	___flge	;wreg free
  5600   00139C  A0D8               	btfss	status,0,c
  5601   00139E  EFD3  F009         	goto	u3611
  5602   0013A2  EFD5  F009         	goto	u3610
  5603   0013A6                     u3611:
  5604   0013A6  EFF4  F009         	goto	l3748
  5605   0013AA                     u3610:
  5606   0013AA  0E00               	movlw	0
  5607   0013AC  6E01               	movwf	___flge@ff1^0,c
  5608   0013AE  0E00               	movlw	0
  5609   0013B0  6E02               	movwf	(___flge@ff1+1)^0,c
  5610   0013B2  0EB4               	movlw	180
  5611   0013B4  6E03               	movwf	(___flge@ff1+2)^0,c
  5612   0013B6  0E43               	movlw	67
  5613   0013B8  6E04               	movwf	(___flge@ff1+3)^0,c
  5614   0013BA  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5615   0013BE  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5616   0013C2  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5617   0013C6  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5618   0013CA  EC8C  F01A         	call	___flge	;wreg free
  5619   0013CE  A0D8               	btfss	status,0,c
  5620   0013D0  EFEC  F009         	goto	u3621
  5621   0013D4  EFEE  F009         	goto	u3620
  5622   0013D8                     u3621:
  5623   0013D8  EFF4  F009         	goto	l3748
  5624   0013DC                     u3620:
  5625   0013DC                     
  5626                           ;color.c: 164:         return 1;
  5627   0013DC  0E00               	movlw	0
  5628   0013DE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5629   0013E0  0E01               	movlw	1
  5630   0013E2  6E4B               	movwf	?_Colour_decider^0,c
  5631   0013E4  EFBA  F00C         	goto	l76
  5632   0013E8                     l3748:
  5633   0013E8  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5634   0013EC  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5635   0013F0  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5636   0013F4  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5637   0013F8  0E00               	movlw	0
  5638   0013FA  6E05               	movwf	___flge@ff2^0,c
  5639   0013FC  0E00               	movlw	0
  5640   0013FE  6E06               	movwf	(___flge@ff2+1)^0,c
  5641   001400  0EA0               	movlw	160
  5642   001402  6E07               	movwf	(___flge@ff2+2)^0,c
  5643   001404  0E40               	movlw	64
  5644   001406  6E08               	movwf	(___flge@ff2+3)^0,c
  5645   001408  EC8C  F01A         	call	___flge	;wreg free
  5646   00140C  A0D8               	btfss	status,0,c
  5647   00140E  EF0B  F00A         	goto	u3631
  5648   001412  EF0D  F00A         	goto	u3630
  5649   001416                     u3631:
  5650   001416  EF2C  F00A         	goto	l3758
  5651   00141A                     u3630:
  5652   00141A  0E00               	movlw	0
  5653   00141C  6E01               	movwf	___flge@ff1^0,c
  5654   00141E  0E00               	movlw	0
  5655   001420  6E02               	movwf	(___flge@ff1+1)^0,c
  5656   001422  0E40               	movlw	64
  5657   001424  6E03               	movwf	(___flge@ff1+2)^0,c
  5658   001426  0E41               	movlw	65
  5659   001428  6E04               	movwf	(___flge@ff1+3)^0,c
  5660   00142A  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5661   00142E  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5662   001432  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5663   001436  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5664   00143A  EC8C  F01A         	call	___flge	;wreg free
  5665   00143E  A0D8               	btfss	status,0,c
  5666   001440  EF24  F00A         	goto	u3641
  5667   001444  EF26  F00A         	goto	u3640
  5668   001448                     u3641:
  5669   001448  EF2C  F00A         	goto	l3758
  5670   00144C                     u3640:
  5671   00144C                     
  5672                           ;color.c: 168:         return 2;
  5673   00144C  0E00               	movlw	0
  5674   00144E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5675   001450  0E02               	movlw	2
  5676   001452  6E4B               	movwf	?_Colour_decider^0,c
  5677   001454  EFBA  F00C         	goto	l76
  5678   001458                     l3758:
  5679   001458  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5680   00145C  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5681   001460  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5682   001464  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5683   001468  0E00               	movlw	0
  5684   00146A  6E05               	movwf	___flge@ff2^0,c
  5685   00146C  0E00               	movlw	0
  5686   00146E  6E06               	movwf	(___flge@ff2+1)^0,c
  5687   001470  0EA0               	movlw	160
  5688   001472  6E07               	movwf	(___flge@ff2+2)^0,c
  5689   001474  0E41               	movlw	65
  5690   001476  6E08               	movwf	(___flge@ff2+3)^0,c
  5691   001478  EC8C  F01A         	call	___flge	;wreg free
  5692   00147C  A0D8               	btfss	status,0,c
  5693   00147E  EF43  F00A         	goto	u3651
  5694   001482  EF45  F00A         	goto	u3650
  5695   001486                     u3651:
  5696   001486  EFB9  F00A         	goto	l3782
  5697   00148A                     u3650:
  5698   00148A  0E00               	movlw	0
  5699   00148C  6E01               	movwf	___flge@ff1^0,c
  5700   00148E  0E00               	movlw	0
  5701   001490  6E02               	movwf	(___flge@ff1+1)^0,c
  5702   001492  0EE8               	movlw	232
  5703   001494  6E03               	movwf	(___flge@ff1+2)^0,c
  5704   001496  0E41               	movlw	65
  5705   001498  6E04               	movwf	(___flge@ff1+3)^0,c
  5706   00149A  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5707   00149E  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5708   0014A2  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5709   0014A6  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5710   0014AA  EC8C  F01A         	call	___flge	;wreg free
  5711   0014AE  A0D8               	btfss	status,0,c
  5712   0014B0  EF5C  F00A         	goto	u3661
  5713   0014B4  EF5E  F00A         	goto	u3660
  5714   0014B8                     u3661:
  5715   0014B8  EFB9  F00A         	goto	l3782
  5716   0014BC                     u3660:
  5717   0014BC                     
  5718                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  5719   0014BC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5720   0014C0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5721   0014C4  CFDE F001          	movff	postinc2,___flge@ff1
  5722   0014C8  CFDE F002          	movff	postinc2,___flge@ff1+1
  5723   0014CC  CFDE F003          	movff	postinc2,___flge@ff1+2
  5724   0014D0  CFDE F004          	movff	postinc2,___flge@ff1+3
  5725   0014D4  0ECD               	movlw	205
  5726   0014D6  6E05               	movwf	___flge@ff2^0,c
  5727   0014D8  0ECC               	movlw	204
  5728   0014DA  6E06               	movwf	(___flge@ff2+1)^0,c
  5729   0014DC  0E4C               	movlw	76
  5730   0014DE  6E07               	movwf	(___flge@ff2+2)^0,c
  5731   0014E0  0E3E               	movlw	62
  5732   0014E2  6E08               	movwf	(___flge@ff2+3)^0,c
  5733   0014E4  EC8C  F01A         	call	___flge	;wreg free
  5734   0014E8  A0D8               	btfss	status,0,c
  5735   0014EA  EF79  F00A         	goto	u3671
  5736   0014EE  EF7B  F00A         	goto	u3670
  5737   0014F2                     u3671:
  5738   0014F2  EF9A  F00A         	goto	l3770
  5739   0014F6                     u3670:
  5740   0014F6  0E1F               	movlw	31
  5741   0014F8  6E01               	movwf	___flge@ff1^0,c
  5742   0014FA  0E85               	movlw	133
  5743   0014FC  6E02               	movwf	(___flge@ff1+1)^0,c
  5744   0014FE  0E6B               	movlw	107
  5745   001500  6E03               	movwf	(___flge@ff1+2)^0,c
  5746   001502  0E3E               	movlw	62
  5747   001504  6E04               	movwf	(___flge@ff1+3)^0,c
  5748   001506  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  5749   00150A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  5750   00150E  CFDE F005          	movff	postinc2,___flge@ff2
  5751   001512  CFDE F006          	movff	postinc2,___flge@ff2+1
  5752   001516  CFDE F007          	movff	postinc2,___flge@ff2+2
  5753   00151A  CFDE F008          	movff	postinc2,___flge@ff2+3
  5754   00151E  EC8C  F01A         	call	___flge	;wreg free
  5755   001522  A0D8               	btfss	status,0,c
  5756   001524  EF96  F00A         	goto	u3681
  5757   001528  EF98  F00A         	goto	u3680
  5758   00152C                     u3681:
  5759   00152C  EF9A  F00A         	goto	l3770
  5760   001530                     u3680:
  5761   001530  EF59  F008         	goto	l3716
  5762   001534                     l3770:
  5763                           
  5764                           ;color.c: 177:         if (vals->R>=2000){
  5765   001534  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  5766   001538  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  5767   00153C  0E01               	movlw	1
  5768   00153E  BEDB               	btfsc	plusw2,7,c
  5769   001540  EFAB  F00A         	goto	u3691
  5770   001544  0ED0               	movlw	208
  5771   001546  5CDE               	subwf	postinc2,w,c
  5772   001548  0E07               	movlw	7
  5773   00154A  58DE               	subwfb	postinc2,w,c
  5774   00154C  A0D8               	btfss	status,0,c
  5775   00154E  EFAB  F00A         	goto	u3691
  5776   001552  EFAD  F00A         	goto	u3690
  5777   001556                     u3691:
  5778   001556  EFB3  F00A         	goto	l3778
  5779   00155A                     u3690:
  5780   00155A                     
  5781                           ;color.c: 178:             return 3;
  5782   00155A  0E00               	movlw	0
  5783   00155C  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5784   00155E  0E03               	movlw	3
  5785   001560  6E4B               	movwf	?_Colour_decider^0,c
  5786   001562  EFBA  F00C         	goto	l76
  5787   001566                     l3778:
  5788                           
  5789                           ;color.c: 181:             return 4;
  5790   001566  0E00               	movlw	0
  5791   001568  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5792   00156A  0E04               	movlw	4
  5793   00156C  6E4B               	movwf	?_Colour_decider^0,c
  5794   00156E  EFBA  F00C         	goto	l76
  5795   001572                     l3782:
  5796   001572  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5797   001576  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5798   00157A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5799   00157E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5800   001582  0E00               	movlw	0
  5801   001584  6E05               	movwf	___flge@ff2^0,c
  5802   001586  0E00               	movlw	0
  5803   001588  6E06               	movwf	(___flge@ff2+1)^0,c
  5804   00158A  0E70               	movlw	112
  5805   00158C  6E07               	movwf	(___flge@ff2+2)^0,c
  5806   00158E  0E42               	movlw	66
  5807   001590  6E08               	movwf	(___flge@ff2+3)^0,c
  5808   001592  EC8C  F01A         	call	___flge	;wreg free
  5809   001596  A0D8               	btfss	status,0,c
  5810   001598  EFD0  F00A         	goto	u3701
  5811   00159C  EFD2  F00A         	goto	u3700
  5812   0015A0                     u3701:
  5813   0015A0  EF30  F00B         	goto	l3800
  5814   0015A4                     u3700:
  5815   0015A4  0E00               	movlw	0
  5816   0015A6  6E01               	movwf	___flge@ff1^0,c
  5817   0015A8  0E00               	movlw	0
  5818   0015AA  6E02               	movwf	(___flge@ff1+1)^0,c
  5819   0015AC  0E9E               	movlw	158
  5820   0015AE  6E03               	movwf	(___flge@ff1+2)^0,c
  5821   0015B0  0E42               	movlw	66
  5822   0015B2  6E04               	movwf	(___flge@ff1+3)^0,c
  5823   0015B4  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5824   0015B8  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5825   0015BC  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5826   0015C0  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5827   0015C4  EC8C  F01A         	call	___flge	;wreg free
  5828   0015C8  A0D8               	btfss	status,0,c
  5829   0015CA  EFE9  F00A         	goto	u3711
  5830   0015CE  EFEB  F00A         	goto	u3710
  5831   0015D2                     u3711:
  5832   0015D2  EF30  F00B         	goto	l3800
  5833   0015D6                     u3710:
  5834   0015D6                     
  5835                           ;color.c: 187:         if(0.15<=rel->B){
  5836   0015D6  EE20 F008          	lfsr	2,8
  5837   0015DA  504D               	movf	Colour_decider@rel^0,w,c
  5838   0015DC  26D9               	addwf	fsr2l,f,c
  5839   0015DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
  5840   0015E0  22DA               	addwfc	fsr2h,f,c
  5841   0015E2  CFDE F001          	movff	postinc2,___flge@ff1
  5842   0015E6  CFDE F002          	movff	postinc2,___flge@ff1+1
  5843   0015EA  CFDE F003          	movff	postinc2,___flge@ff1+2
  5844   0015EE  CFDE F004          	movff	postinc2,___flge@ff1+3
  5845   0015F2  0E9A               	movlw	154
  5846   0015F4  6E05               	movwf	___flge@ff2^0,c
  5847   0015F6  0E99               	movlw	153
  5848   0015F8  6E06               	movwf	(___flge@ff2+1)^0,c
  5849   0015FA  0E19               	movlw	25
  5850   0015FC  6E07               	movwf	(___flge@ff2+2)^0,c
  5851   0015FE  0E3E               	movlw	62
  5852   001600  6E08               	movwf	(___flge@ff2+3)^0,c
  5853   001602  EC8C  F01A         	call	___flge	;wreg free
  5854   001606  A0D8               	btfss	status,0,c
  5855   001608  EF08  F00B         	goto	u3721
  5856   00160C  EF0A  F00B         	goto	u3720
  5857   001610                     u3721:
  5858   001610  EF0C  F00B         	goto	l3794
  5859   001614                     u3720:
  5860   001614  EFB3  F00A         	goto	l3778
  5861   001618                     l3794:
  5862                           
  5863                           ;color.c: 191:             reverseDetect(&motorL, &motorR);
  5864   001618  0EF6               	movlw	low _motorL
  5865   00161A  6E19               	movwf	reverseDetect@mL^0,c
  5866   00161C  0E00               	movlw	high _motorL
  5867   00161E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5868   001620  0EED               	movlw	low _motorR
  5869   001622  6E1B               	movwf	reverseDetect@mR^0,c
  5870   001624  0E00               	movlw	high _motorR
  5871   001626  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5872   001628  EC7A  F01E         	call	_reverseDetect	;wreg free
  5873                           
  5874                           ;color.c: 192:             turnLeft45(&motorL, &motorR);
  5875   00162C  0EF6               	movlw	low _motorL
  5876   00162E  6E19               	movwf	turnLeft45@mL^0,c
  5877   001630  0E00               	movlw	high _motorL
  5878   001632  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5879   001634  0EED               	movlw	low _motorR
  5880   001636  6E1B               	movwf	turnLeft45@mR^0,c
  5881   001638  0E00               	movlw	high _motorR
  5882   00163A  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5883   00163C  ECA7  F01E         	call	_turnLeft45	;wreg free
  5884                           
  5885                           ;color.c: 193:             turnLeft45(&motorL, &motorR);
  5886   001640  0EF6               	movlw	low _motorL
  5887   001642  6E19               	movwf	turnLeft45@mL^0,c
  5888   001644  0E00               	movlw	high _motorL
  5889   001646  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  5890   001648  0EED               	movlw	low _motorR
  5891   00164A  6E1B               	movwf	turnLeft45@mR^0,c
  5892   00164C  0E00               	movlw	high _motorR
  5893   00164E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  5894   001650  ECA7  F01E         	call	_turnLeft45	;wreg free
  5895   001654                     
  5896                           ;color.c: 194:             return 5;
  5897   001654  0E00               	movlw	0
  5898   001656  6E4C               	movwf	(?_Colour_decider+1)^0,c
  5899   001658  0E05               	movlw	5
  5900   00165A  6E4B               	movwf	?_Colour_decider^0,c
  5901   00165C  EFBA  F00C         	goto	l76
  5902   001660                     l3800:
  5903   001660  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  5904   001664  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  5905   001668  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  5906   00166C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  5907   001670  0E00               	movlw	0
  5908   001672  6E05               	movwf	___flge@ff2^0,c
  5909   001674  0E00               	movlw	0
  5910   001676  6E06               	movwf	(___flge@ff2+1)^0,c
  5911   001678  0EA0               	movlw	160
  5912   00167A  6E07               	movwf	(___flge@ff2+2)^0,c
  5913   00167C  0E42               	movlw	66
  5914   00167E  6E08               	movwf	(___flge@ff2+3)^0,c
  5915   001680  EC8C  F01A         	call	___flge	;wreg free
  5916   001684  A0D8               	btfss	status,0,c
  5917   001686  EF47  F00B         	goto	u3731
  5918   00168A  EF49  F00B         	goto	u3730
  5919   00168E                     u3731:
  5920   00168E  EFBB  F00B         	goto	l3818
  5921   001692                     u3730:
  5922   001692  0E00               	movlw	0
  5923   001694  6E01               	movwf	___flge@ff1^0,c
  5924   001696  0E00               	movlw	0
  5925   001698  6E02               	movwf	(___flge@ff1+1)^0,c
  5926   00169A  0EE6               	movlw	230
  5927   00169C  6E03               	movwf	(___flge@ff1+2)^0,c
  5928   00169E  0E42               	movlw	66
  5929   0016A0  6E04               	movwf	(___flge@ff1+3)^0,c
  5930   0016A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  5931   0016A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  5932   0016AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  5933   0016AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  5934   0016B2  EC8C  F01A         	call	___flge	;wreg free
  5935   0016B6  A0D8               	btfss	status,0,c
  5936   0016B8  EF60  F00B         	goto	u3741
  5937   0016BC  EF62  F00B         	goto	u3740
  5938   0016C0                     u3741:
  5939   0016C0  EFBB  F00B         	goto	l3818
  5940   0016C4                     u3740:
  5941   0016C4                     
  5942                           ;color.c: 201:         if(0.15<=rel->B){
  5943   0016C4  EE20 F008          	lfsr	2,8
  5944   0016C8  504D               	movf	Colour_decider@rel^0,w,c
  5945   0016CA  26D9               	addwf	fsr2l,f,c
  5946   0016CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  5947   0016CE  22DA               	addwfc	fsr2h,f,c
  5948   0016D0  CFDE F001          	movff	postinc2,___flge@ff1
  5949   0016D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  5950   0016D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  5951   0016DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  5952   0016E0  0E9A               	movlw	154
  5953   0016E2  6E05               	movwf	___flge@ff2^0,c
  5954   0016E4  0E99               	movlw	153
  5955   0016E6  6E06               	movwf	(___flge@ff2+1)^0,c
  5956   0016E8  0E19               	movlw	25
  5957   0016EA  6E07               	movwf	(___flge@ff2+2)^0,c
  5958   0016EC  0E3E               	movlw	62
  5959   0016EE  6E08               	movwf	(___flge@ff2+3)^0,c
  5960   0016F0  EC8C  F01A         	call	___flge	;wreg free
  5961   0016F4  A0D8               	btfss	status,0,c
  5962   0016F6  EF7F  F00B         	goto	u3751
  5963   0016FA  EF81  F00B         	goto	u3750
  5964   0016FE                     u3751:
  5965   0016FE  EFB5  F00B         	goto	l3814
  5966   001702                     u3750:
  5967   001702                     l3806:
  5968                           
  5969                           ;color.c: 202:             reverseDetect(&motorL, &motorR);
  5970   001702  0EF6               	movlw	low _motorL
  5971   001704  6E19               	movwf	reverseDetect@mL^0,c
  5972   001706  0E00               	movlw	high _motorL
  5973   001708  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  5974   00170A  0EED               	movlw	low _motorR
  5975   00170C  6E1B               	movwf	reverseDetect@mR^0,c
  5976   00170E  0E00               	movlw	high _motorR
  5977   001710  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  5978   001712  EC7A  F01E         	call	_reverseDetect	;wreg free
  5979                           
  5980                           ;color.c: 203:             turnRight45(&motorL, &motorR);
  5981   001716  0EF6               	movlw	low _motorL
  5982   001718  6E19               	movwf	turnRight45@mL^0,c
  5983   00171A  0E00               	movlw	high _motorL
  5984   00171C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5985   00171E  0EED               	movlw	low _motorR
  5986   001720  6E1B               	movwf	turnRight45@mR^0,c
  5987   001722  0E00               	movlw	high _motorR
  5988   001724  6E1C               	movwf	(turnRight45@mR+1)^0,c
  5989   001726  ECD3  F01E         	call	_turnRight45	;wreg free
  5990                           
  5991                           ;color.c: 204:             turnRight45(&motorL, &motorR);
  5992   00172A  0EF6               	movlw	low _motorL
  5993   00172C  6E19               	movwf	turnRight45@mL^0,c
  5994   00172E  0E00               	movlw	high _motorL
  5995   001730  6E1A               	movwf	(turnRight45@mL+1)^0,c
  5996   001732  0EED               	movlw	low _motorR
  5997   001734  6E1B               	movwf	turnRight45@mR^0,c
  5998   001736  0E00               	movlw	high _motorR
  5999   001738  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6000   00173A  ECD3  F01E         	call	_turnRight45	;wreg free
  6001                           
  6002                           ;color.c: 205:             turnRight45(&motorL, &motorR);
  6003   00173E  0EF6               	movlw	low _motorL
  6004   001740  6E19               	movwf	turnRight45@mL^0,c
  6005   001742  0E00               	movlw	high _motorL
  6006   001744  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6007   001746  0EED               	movlw	low _motorR
  6008   001748  6E1B               	movwf	turnRight45@mR^0,c
  6009   00174A  0E00               	movlw	high _motorR
  6010   00174C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6011   00174E  ECD3  F01E         	call	_turnRight45	;wreg free
  6012                           
  6013                           ;color.c: 206:             turnRight45(&motorL, &motorR);
  6014   001752  0EF6               	movlw	low _motorL
  6015   001754  6E19               	movwf	turnRight45@mL^0,c
  6016   001756  0E00               	movlw	high _motorL
  6017   001758  6E1A               	movwf	(turnRight45@mL+1)^0,c
  6018   00175A  0EED               	movlw	low _motorR
  6019   00175C  6E1B               	movwf	turnRight45@mR^0,c
  6020   00175E  0E00               	movlw	high _motorR
  6021   001760  6E1C               	movwf	(turnRight45@mR+1)^0,c
  6022   001762  ECD3  F01E         	call	_turnRight45	;wreg free
  6023   001766  EFB3  F00A         	goto	l3778
  6024   00176A                     l3814:
  6025                           
  6026                           ;color.c: 210:              return 6;
  6027   00176A  0E00               	movlw	0
  6028   00176C  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6029   00176E  0E06               	movlw	6
  6030   001770  6E4B               	movwf	?_Colour_decider^0,c
  6031   001772  EFBA  F00C         	goto	l76
  6032   001776                     l3818:
  6033   001776  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6034   00177A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6035   00177E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6036   001782  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6037   001786  0E00               	movlw	0
  6038   001788  6E05               	movwf	___flge@ff2^0,c
  6039   00178A  0E00               	movlw	0
  6040   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
  6041   00178E  0EF0               	movlw	240
  6042   001790  6E07               	movwf	(___flge@ff2+2)^0,c
  6043   001792  0E41               	movlw	65
  6044   001794  6E08               	movwf	(___flge@ff2+3)^0,c
  6045   001796  EC8C  F01A         	call	___flge	;wreg free
  6046   00179A  A0D8               	btfss	status,0,c
  6047   00179C  EFD2  F00B         	goto	u3761
  6048   0017A0  EFD4  F00B         	goto	u3760
  6049   0017A4                     u3761:
  6050   0017A4  EFED  F00B         	goto	l3822
  6051   0017A8                     u3760:
  6052   0017A8  0E00               	movlw	0
  6053   0017AA  6E01               	movwf	___flge@ff1^0,c
  6054   0017AC  0E00               	movlw	0
  6055   0017AE  6E02               	movwf	(___flge@ff1+1)^0,c
  6056   0017B0  0E68               	movlw	104
  6057   0017B2  6E03               	movwf	(___flge@ff1+2)^0,c
  6058   0017B4  0E42               	movlw	66
  6059   0017B6  6E04               	movwf	(___flge@ff1+3)^0,c
  6060   0017B8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6061   0017BC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6062   0017C0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6063   0017C4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6064   0017C8  EC8C  F01A         	call	___flge	;wreg free
  6065   0017CC  B0D8               	btfsc	status,0,c
  6066   0017CE  EFEB  F00B         	goto	u3771
  6067   0017D2  EFED  F00B         	goto	u3770
  6068   0017D6                     u3771:
  6069   0017D6  EF81  F00B         	goto	l3806
  6070   0017DA                     u3770:
  6071   0017DA                     l3822:
  6072   0017DA  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6073   0017DE  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6074   0017E2  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6075   0017E6  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6076   0017EA  0E00               	movlw	0
  6077   0017EC  6E05               	movwf	___flge@ff2^0,c
  6078   0017EE  0E00               	movlw	0
  6079   0017F0  6E06               	movwf	(___flge@ff2+1)^0,c
  6080   0017F2  0EF0               	movlw	240
  6081   0017F4  6E07               	movwf	(___flge@ff2+2)^0,c
  6082   0017F6  0E42               	movlw	66
  6083   0017F8  6E08               	movwf	(___flge@ff2+3)^0,c
  6084   0017FA  EC8C  F01A         	call	___flge	;wreg free
  6085   0017FE  A0D8               	btfss	status,0,c
  6086   001800  EF04  F00C         	goto	u3781
  6087   001804  EF06  F00C         	goto	u3780
  6088   001808                     u3781:
  6089   001808  EF21  F00C         	goto	l3834
  6090   00180C                     u3780:
  6091   00180C  0E00               	movlw	0
  6092   00180E  6E01               	movwf	___flge@ff1^0,c
  6093   001810  0E00               	movlw	0
  6094   001812  6E02               	movwf	(___flge@ff1+1)^0,c
  6095   001814  0E5C               	movlw	92
  6096   001816  6E03               	movwf	(___flge@ff1+2)^0,c
  6097   001818  0E43               	movlw	67
  6098   00181A  6E04               	movwf	(___flge@ff1+3)^0,c
  6099   00181C  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6100   001820  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6101   001824  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6102   001828  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6103   00182C  EC8C  F01A         	call	___flge	;wreg free
  6104   001830  A0D8               	btfss	status,0,c
  6105   001832  EF1D  F00C         	goto	u3791
  6106   001836  EF1F  F00C         	goto	u3790
  6107   00183A                     u3791:
  6108   00183A  EF21  F00C         	goto	l3834
  6109   00183E                     u3790:
  6110   00183E  EF81  F00B         	goto	l3806
  6111   001842                     l3834:
  6112   001842  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  6113   001846  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  6114   00184A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  6115   00184E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  6116   001852  0E00               	movlw	0
  6117   001854  6E05               	movwf	___flge@ff2^0,c
  6118   001856  0E00               	movlw	0
  6119   001858  6E06               	movwf	(___flge@ff2+1)^0,c
  6120   00185A  0E60               	movlw	96
  6121   00185C  6E07               	movwf	(___flge@ff2+2)^0,c
  6122   00185E  0E41               	movlw	65
  6123   001860  6E08               	movwf	(___flge@ff2+3)^0,c
  6124   001862  EC8C  F01A         	call	___flge	;wreg free
  6125   001866  A0D8               	btfss	status,0,c
  6126   001868  EF38  F00C         	goto	u3801
  6127   00186C  EF3A  F00C         	goto	u3800
  6128   001870                     u3801:
  6129   001870  EFB6  F00C         	goto	l3862
  6130   001874                     u3800:
  6131   001874  0E00               	movlw	0
  6132   001876  6E01               	movwf	___flge@ff1^0,c
  6133   001878  0E00               	movlw	0
  6134   00187A  6E02               	movwf	(___flge@ff1+1)^0,c
  6135   00187C  0E98               	movlw	152
  6136   00187E  6E03               	movwf	(___flge@ff1+2)^0,c
  6137   001880  0E41               	movlw	65
  6138   001882  6E04               	movwf	(___flge@ff1+3)^0,c
  6139   001884  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  6140   001888  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  6141   00188C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  6142   001890  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  6143   001894  EC8C  F01A         	call	___flge	;wreg free
  6144   001898  A0D8               	btfss	status,0,c
  6145   00189A  EF51  F00C         	goto	u3811
  6146   00189E  EF53  F00C         	goto	u3810
  6147   0018A2                     u3811:
  6148   0018A2  EFB6  F00C         	goto	l3862
  6149   0018A6                     u3810:
  6150   0018A6                     
  6151                           ;color.c: 226:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  6152   0018A6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6153   0018AA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6154   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
  6155   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
  6156   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
  6157   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
  6158   0018BE  0ECD               	movlw	205
  6159   0018C0  6E05               	movwf	___flge@ff2^0,c
  6160   0018C2  0ECC               	movlw	204
  6161   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
  6162   0018C6  0E4C               	movlw	76
  6163   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
  6164   0018CA  0E3E               	movlw	62
  6165   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
  6166   0018CE  EC8C  F01A         	call	___flge	;wreg free
  6167   0018D2  A0D8               	btfss	status,0,c
  6168   0018D4  EF6E  F00C         	goto	u3821
  6169   0018D8  EF70  F00C         	goto	u3820
  6170   0018DC                     u3821:
  6171   0018DC  EF8F  F00C         	goto	l3848
  6172   0018E0                     u3820:
  6173   0018E0  0E1F               	movlw	31
  6174   0018E2  6E01               	movwf	___flge@ff1^0,c
  6175   0018E4  0E85               	movlw	133
  6176   0018E6  6E02               	movwf	(___flge@ff1+1)^0,c
  6177   0018E8  0E6B               	movlw	107
  6178   0018EA  6E03               	movwf	(___flge@ff1+2)^0,c
  6179   0018EC  0E3E               	movlw	62
  6180   0018EE  6E04               	movwf	(___flge@ff1+3)^0,c
  6181   0018F0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  6182   0018F4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  6183   0018F8  CFDE F005          	movff	postinc2,___flge@ff2
  6184   0018FC  CFDE F006          	movff	postinc2,___flge@ff2+1
  6185   001900  CFDE F007          	movff	postinc2,___flge@ff2+2
  6186   001904  CFDE F008          	movff	postinc2,___flge@ff2+3
  6187   001908  EC8C  F01A         	call	___flge	;wreg free
  6188   00190C  A0D8               	btfss	status,0,c
  6189   00190E  EF8B  F00C         	goto	u3831
  6190   001912  EF8D  F00C         	goto	u3830
  6191   001916                     u3831:
  6192   001916  EF8F  F00C         	goto	l3848
  6193   00191A                     u3830:
  6194   00191A  EF59  F008         	goto	l3716
  6195   00191E                     l3848:
  6196   00191E  EE20 F008          	lfsr	2,8
  6197   001922  504D               	movf	Colour_decider@rel^0,w,c
  6198   001924  26D9               	addwf	fsr2l,f,c
  6199   001926  504E               	movf	(Colour_decider@rel+1)^0,w,c
  6200   001928  22DA               	addwfc	fsr2h,f,c
  6201   00192A  CFDE F001          	movff	postinc2,___flge@ff1
  6202   00192E  CFDE F002          	movff	postinc2,___flge@ff1+1
  6203   001932  CFDE F003          	movff	postinc2,___flge@ff1+2
  6204   001936  CFDE F004          	movff	postinc2,___flge@ff1+3
  6205   00193A  0E9A               	movlw	154
  6206   00193C  6E05               	movwf	___flge@ff2^0,c
  6207   00193E  0E99               	movlw	153
  6208   001940  6E06               	movwf	(___flge@ff2+1)^0,c
  6209   001942  0E19               	movlw	25
  6210   001944  6E07               	movwf	(___flge@ff2+2)^0,c
  6211   001946  0E3E               	movlw	62
  6212   001948  6E08               	movwf	(___flge@ff2+3)^0,c
  6213   00194A  EC8C  F01A         	call	___flge	;wreg free
  6214   00194E  A0D8               	btfss	status,0,c
  6215   001950  EFAC  F00C         	goto	u3841
  6216   001954  EFAE  F00C         	goto	u3840
  6217   001958                     u3841:
  6218   001958  EFB0  F00C         	goto	l3858
  6219   00195C                     u3840:
  6220   00195C  EF81  F00B         	goto	l3806
  6221   001960                     l3858:
  6222                           
  6223                           ;color.c: 238:             return 7;
  6224   001960  0E00               	movlw	0
  6225   001962  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6226   001964  0E07               	movlw	7
  6227   001966  6E4B               	movwf	?_Colour_decider^0,c
  6228   001968  EFBA  F00C         	goto	l76
  6229   00196C                     l3862:
  6230                           
  6231                           ;color.c: 242:         return 10;
  6232   00196C  0E00               	movlw	0
  6233   00196E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  6234   001970  0E0A               	movlw	10
  6235   001972  6E4B               	movwf	?_Colour_decider^0,c
  6236   001974                     l76:
  6237   001974  0012               	return		;funcret
  6238   001976                     __end_of_Colour_decider:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _turnLeft45 *****************
  6242 ;; Defined at:
  6243 ;;		line 188 in file "dc_motor.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6246 ;;		 -> motorL(9), 
  6247 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6248 ;;		 -> motorR(9), 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;Total ram usage:        6 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 4
  6267 ;; This function calls:
  6268 ;;		_stop
  6269 ;;		_turnLeft
  6270 ;; This function is called by:
  6271 ;;		_Colour_decider
  6272 ;;		_GreenMove
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text36
  6277   003D4E                     __ptext36:
  6278                           	callstack 0
  6279   003D4E                     _turnLeft45:
  6280                           	callstack 25
  6281   003D4E                     
  6282                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  6283   003D4E  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  6284   003D52  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  6285   003D56  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  6286   003D5A  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  6287   003D5E  EC13  F01C         	call	_turnLeft	;wreg free
  6288   003D62                     
  6289                           ;dc_motor.c: 190:     _delay((unsigned long)((220)*(64000000/4000.0)));
  6290   003D62  0E12               	movlw	18
  6291   003D64  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6292   003D66  0EDC               	movlw	220
  6293   003D68  6E1D               	movwf	??_turnLeft45^0,c
  6294   003D6A  0E60               	movlw	96
  6295   003D6C                     u4037:
  6296   003D6C  2EE8               	decfsz	wreg,f,c
  6297   003D6E  D7FE               	bra	u4037
  6298   003D70  2E1D               	decfsz	??_turnLeft45^0,f,c
  6299   003D72  D7FC               	bra	u4037
  6300   003D74  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6301   003D76  D7FA               	bra	u4037
  6302   003D78                     
  6303                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  6304   003D78  0EF6               	movlw	low _motorL
  6305   003D7A  6E14               	movwf	stop@mL^0,c
  6306   003D7C  0E00               	movlw	high _motorL
  6307   003D7E  6E15               	movwf	(stop@mL+1)^0,c
  6308   003D80  0EED               	movlw	low _motorR
  6309   003D82  6E16               	movwf	stop@mR^0,c
  6310   003D84  0E00               	movlw	high _motorR
  6311   003D86  6E17               	movwf	(stop@mR+1)^0,c
  6312   003D88  EC75  F01D         	call	_stop	;wreg free
  6313                           
  6314                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6315   003D8C  0E52               	movlw	82
  6316   003D8E  6E1E               	movwf	(??_turnLeft45+1)^0,c
  6317   003D90  0E2B               	movlw	43
  6318   003D92  6E1D               	movwf	??_turnLeft45^0,c
  6319   003D94  0E00               	movlw	0
  6320   003D96                     u4047:
  6321   003D96  2EE8               	decfsz	wreg,f,c
  6322   003D98  D7FE               	bra	u4047
  6323   003D9A  2E1D               	decfsz	??_turnLeft45^0,f,c
  6324   003D9C  D7FC               	bra	u4047
  6325   003D9E  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  6326   003DA0  D7FA               	bra	u4047
  6327   003DA2  D000               	nop2	
  6328   003DA4  0012               	return		;funcret
  6329   003DA6                     __end_of_turnLeft45:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _turnLeft *****************
  6333 ;; Defined at:
  6334 ;;		line 110 in file "dc_motor.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6337 ;;		 -> motorL(9), 
  6338 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6339 ;;		 -> motorR(9), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;Total ram usage:        5 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 3
  6358 ;; This function calls:
  6359 ;;		_setMotorPWM
  6360 ;; This function is called by:
  6361 ;;		_turnLeft45
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text37
  6366   003826                     __ptext37:
  6367                           	callstack 0
  6368   003826                     _turnLeft:
  6369                           	callstack 25
  6370   003826                     
  6371                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  6372   003826  EE20 F001          	lfsr	2,1
  6373   00382A  5014               	movf	turnLeft@mL^0,w,c
  6374   00382C  26D9               	addwf	fsr2l,f,c
  6375   00382E  5015               	movf	(turnLeft@mL+1)^0,w,c
  6376   003830  22DA               	addwfc	fsr2h,f,c
  6377   003832  0E00               	movlw	0
  6378   003834  6EDF               	movwf	indf2,c
  6379                           
  6380                           ;dc_motor.c: 113:     mR->direction =1;
  6381   003836  EE20 F001          	lfsr	2,1
  6382   00383A  5016               	movf	turnLeft@mR^0,w,c
  6383   00383C  26D9               	addwf	fsr2l,f,c
  6384   00383E  5017               	movf	(turnLeft@mR+1)^0,w,c
  6385   003840  22DA               	addwfc	fsr2h,f,c
  6386   003842  0E01               	movlw	1
  6387   003844  6EDF               	movwf	indf2,c
  6388                           
  6389                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  6390   003846  EF45  F01C         	goto	l2944
  6391   00384A                     l2936:
  6392                           
  6393                           ;dc_motor.c: 117:         mL->power+=10;
  6394   00384A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  6395   00384E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  6396   003852  0E0A               	movlw	10
  6397   003854  26DF               	addwf	indf2,f,c
  6398                           
  6399                           ;dc_motor.c: 118:         mR->power+=10;
  6400   003856  C016  FFD9         	movff	turnLeft@mR,fsr2l
  6401   00385A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  6402   00385E  0E0A               	movlw	10
  6403   003860  26DF               	addwf	indf2,f,c
  6404   003862                     
  6405                           ;dc_motor.c: 120:         setMotorPWM(mL);
  6406   003862  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  6407   003866  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6408   00386A  EC7D  F018         	call	_setMotorPWM	;wreg free
  6409   00386E                     
  6410                           ;dc_motor.c: 121:         setMotorPWM(mR);
  6411   00386E  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  6412   003872  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6413   003876  EC7D  F018         	call	_setMotorPWM	;wreg free
  6414   00387A                     
  6415                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  6416   00387A  0E15               	movlw	21
  6417   00387C  6E18               	movwf	??_turnLeft^0,c
  6418   00387E  0EC6               	movlw	198
  6419   003880                     u4057:
  6420   003880  2EE8               	decfsz	wreg,f,c
  6421   003882  D7FE               	bra	u4057
  6422   003884  2E18               	decfsz	??_turnLeft^0,f,c
  6423   003886  D7FC               	bra	u4057
  6424   003888  D000               	nop2	
  6425   00388A                     l2944:
  6426                           
  6427                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  6428   00388A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  6429   00388E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  6430   003892  0E46               	movlw	70
  6431   003894  60DF               	cpfslt	indf2,c
  6432   003896  EF4F  F01C         	goto	u2431
  6433   00389A  EF51  F01C         	goto	u2430
  6434   00389E                     u2431:
  6435   00389E  EF5D  F01C         	goto	l437
  6436   0038A2                     u2430:
  6437   0038A2  C016  FFD9         	movff	turnLeft@mR,fsr2l
  6438   0038A6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  6439   0038AA  0E45               	movlw	69
  6440   0038AC  64DF               	cpfsgt	indf2,c
  6441   0038AE  EF5B  F01C         	goto	u2441
  6442   0038B2  EF5D  F01C         	goto	u2440
  6443   0038B6                     u2441:
  6444   0038B6  EF25  F01C         	goto	l2936
  6445   0038BA                     u2440:
  6446   0038BA                     l437:
  6447   0038BA  0012               	return		;funcret
  6448   0038BC                     __end_of_turnLeft:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function ___xxtofl *****************
  6452 ;; Defined at:
  6453 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  sign            1    wreg     unsigned char 
  6456 ;;  val             4    0[COMRAM] long 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  sign            1    8[COMRAM] unsigned char 
  6459 ;;  arg             4   10[COMRAM] unsigned long 
  6460 ;;  exp             1    9[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  4    0[COMRAM] unsigned char 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;Total ram usage:       14 bytes
  6475 ;; Hardware stack levels used: 1
  6476 ;; Hardware stack levels required when called: 1
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_colour_rel
  6481 ;;		_Colour_decider
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text38
  6486   002DBE                     __ptext38:
  6487                           	callstack 0
  6488   002DBE                     ___xxtofl:
  6489                           	callstack 28
  6490                           
  6491                           ;incstack = 0
  6492                           ;___xxtofl@sign stored from wreg
  6493   002DBE  6E09               	movwf	___xxtofl@sign^0,c
  6494   002DC0  5009               	movf	___xxtofl@sign^0,w,c
  6495   002DC2  B4D8               	btfsc	status,2,c
  6496   002DC4  EFE6  F016         	goto	u3421
  6497   002DC8  EFE8  F016         	goto	u3420
  6498   002DCC                     u3421:
  6499   002DCC  EF0A  F017         	goto	l1137
  6500   002DD0                     u3420:
  6501   002DD0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6502   002DD2  EFEF  F016         	goto	u3430
  6503   002DD6  EFED  F016         	goto	u3431
  6504   002DDA                     u3431:
  6505   002DDA  EF0A  F017         	goto	l1137
  6506   002DDE                     u3430:
  6507   002DDE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6508   002DE2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6509   002DE6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6510   002DEA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6511   002DEE  1E05               	comf	??___xxtofl^0,f,c
  6512   002DF0  1E06               	comf	(??___xxtofl+1)^0,f,c
  6513   002DF2  1E07               	comf	(??___xxtofl+2)^0,f,c
  6514   002DF4  1E08               	comf	(??___xxtofl+3)^0,f,c
  6515   002DF6  2A05               	incf	??___xxtofl^0,f,c
  6516   002DF8  0E00               	movlw	0
  6517   002DFA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6518   002DFC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6519   002DFE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6520   002E00  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6521   002E04  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6522   002E08  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6523   002E0C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6524   002E10  EF12  F017         	goto	l3586
  6525   002E14                     l1137:
  6526   002E14  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6527   002E18  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6528   002E1C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6529   002E20  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6530   002E24                     l3586:
  6531   002E24  5001               	movf	___xxtofl@val^0,w,c
  6532   002E26  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6533   002E28  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6534   002E2A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6535   002E2C  A4D8               	btfss	status,2,c
  6536   002E2E  EF1B  F017         	goto	u3441
  6537   002E32  EF1D  F017         	goto	u3440
  6538   002E36                     u3441:
  6539   002E36  EF27  F017         	goto	l3592
  6540   002E3A                     u3440:
  6541   002E3A  0E00               	movlw	0
  6542   002E3C  6E01               	movwf	?___xxtofl^0,c
  6543   002E3E  0E00               	movlw	0
  6544   002E40  6E02               	movwf	(?___xxtofl+1)^0,c
  6545   002E42  0E00               	movlw	0
  6546   002E44  6E03               	movwf	(?___xxtofl+2)^0,c
  6547   002E46  0E00               	movlw	0
  6548   002E48  6E04               	movwf	(?___xxtofl+3)^0,c
  6549   002E4A  EFB8  F017         	goto	l1140
  6550   002E4E                     l3592:
  6551   002E4E  0E96               	movlw	150
  6552   002E50  6E0A               	movwf	___xxtofl@exp^0,c
  6553   002E52  EF31  F017         	goto	l3596
  6554   002E56                     l3594:
  6555   002E56  2A0A               	incf	___xxtofl@exp^0,f,c
  6556   002E58  90D8               	bcf	status,0,c
  6557   002E5A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6558   002E5C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6559   002E5E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6560   002E60  320B               	rrcf	___xxtofl@arg^0,f,c
  6561   002E62                     l3596:
  6562   002E62  0E00               	movlw	0
  6563   002E64  140B               	andwf	___xxtofl@arg^0,w,c
  6564   002E66  6E05               	movwf	??___xxtofl^0,c
  6565   002E68  0E00               	movlw	0
  6566   002E6A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6567   002E6C  6E06               	movwf	(??___xxtofl+1)^0,c
  6568   002E6E  0E00               	movlw	0
  6569   002E70  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6570   002E72  6E07               	movwf	(??___xxtofl+2)^0,c
  6571   002E74  0EFE               	movlw	254
  6572   002E76  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6573   002E78  6E08               	movwf	(??___xxtofl+3)^0,c
  6574   002E7A  5005               	movf	??___xxtofl^0,w,c
  6575   002E7C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6576   002E7E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6577   002E80  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6578   002E82  A4D8               	btfss	status,2,c
  6579   002E84  EF46  F017         	goto	u3451
  6580   002E88  EF48  F017         	goto	u3450
  6581   002E8C                     u3451:
  6582   002E8C  EF2B  F017         	goto	l3594
  6583   002E90                     u3450:
  6584   002E90  EF56  F017         	goto	l1144
  6585   002E94                     l3598:
  6586   002E94  2A0A               	incf	___xxtofl@exp^0,f,c
  6587   002E96  0E01               	movlw	1
  6588   002E98  260B               	addwf	___xxtofl@arg^0,f,c
  6589   002E9A  0E00               	movlw	0
  6590   002E9C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6591   002E9E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6592   002EA0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6593   002EA2  90D8               	bcf	status,0,c
  6594   002EA4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6595   002EA6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6596   002EA8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6597   002EAA  320B               	rrcf	___xxtofl@arg^0,f,c
  6598   002EAC                     l1144:
  6599   002EAC  0E00               	movlw	0
  6600   002EAE  140B               	andwf	___xxtofl@arg^0,w,c
  6601   002EB0  6E05               	movwf	??___xxtofl^0,c
  6602   002EB2  0E00               	movlw	0
  6603   002EB4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6604   002EB6  6E06               	movwf	(??___xxtofl+1)^0,c
  6605   002EB8  0E00               	movlw	0
  6606   002EBA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6607   002EBC  6E07               	movwf	(??___xxtofl+2)^0,c
  6608   002EBE  0EFF               	movlw	255
  6609   002EC0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6610   002EC2  6E08               	movwf	(??___xxtofl+3)^0,c
  6611   002EC4  5005               	movf	??___xxtofl^0,w,c
  6612   002EC6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6613   002EC8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6614   002ECA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6615   002ECC  A4D8               	btfss	status,2,c
  6616   002ECE  EF6B  F017         	goto	u3461
  6617   002ED2  EF6D  F017         	goto	u3460
  6618   002ED6                     u3461:
  6619   002ED6  EF4A  F017         	goto	l3598
  6620   002EDA                     u3460:
  6621   002EDA  EF75  F017         	goto	l3606
  6622   002EDE                     l3604:
  6623   002EDE  060A               	decf	___xxtofl@exp^0,f,c
  6624   002EE0  90D8               	bcf	status,0,c
  6625   002EE2  360B               	rlcf	___xxtofl@arg^0,f,c
  6626   002EE4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6627   002EE6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6628   002EE8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6629   002EEA                     l3606:
  6630   002EEA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6631   002EEC  EF7A  F017         	goto	u3471
  6632   002EF0  EF7C  F017         	goto	u3470
  6633   002EF4                     u3471:
  6634   002EF4  EF84  F017         	goto	l1151
  6635   002EF8                     u3470:
  6636   002EF8  0E02               	movlw	2
  6637   002EFA  600A               	cpfslt	___xxtofl@exp^0,c
  6638   002EFC  EF82  F017         	goto	u3481
  6639   002F00  EF84  F017         	goto	u3480
  6640   002F04                     u3481:
  6641   002F04  EF6F  F017         	goto	l3604
  6642   002F08                     u3480:
  6643   002F08                     l1151:
  6644   002F08  B00A               	btfsc	___xxtofl@exp^0,0,c
  6645   002F0A  EF89  F017         	goto	u3491
  6646   002F0E  EF8B  F017         	goto	u3490
  6647   002F12                     u3491:
  6648   002F12  EF8C  F017         	goto	l3612
  6649   002F16                     u3490:
  6650   002F16  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6651   002F18                     l3612:
  6652   002F18  90D8               	bcf	status,0,c
  6653   002F1A  320A               	rrcf	___xxtofl@exp^0,f,c
  6654   002F1C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6655   002F20  6A06               	clrf	(??___xxtofl+1)^0,c
  6656   002F22  6A07               	clrf	(??___xxtofl+2)^0,c
  6657   002F24  6A08               	clrf	(??___xxtofl+3)^0,c
  6658   002F26  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6659   002F2A  6A07               	clrf	(??___xxtofl+2)^0,c
  6660   002F2C  6A06               	clrf	(??___xxtofl+1)^0,c
  6661   002F2E  6A05               	clrf	??___xxtofl^0,c
  6662   002F30  5005               	movf	??___xxtofl^0,w,c
  6663   002F32  120B               	iorwf	___xxtofl@arg^0,f,c
  6664   002F34  5006               	movf	(??___xxtofl+1)^0,w,c
  6665   002F36  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6666   002F38  5007               	movf	(??___xxtofl+2)^0,w,c
  6667   002F3A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6668   002F3C  5008               	movf	(??___xxtofl+3)^0,w,c
  6669   002F3E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6670   002F40  5009               	movf	___xxtofl@sign^0,w,c
  6671   002F42  B4D8               	btfsc	status,2,c
  6672   002F44  EFA6  F017         	goto	u3501
  6673   002F48  EFA8  F017         	goto	u3500
  6674   002F4C                     u3501:
  6675   002F4C  EFB0  F017         	goto	l3622
  6676   002F50                     u3500:
  6677   002F50  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6678   002F52  EFAF  F017         	goto	u3510
  6679   002F56  EFAD  F017         	goto	u3511
  6680   002F5A                     u3511:
  6681   002F5A  EFB0  F017         	goto	l3622
  6682   002F5E                     u3510:
  6683   002F5E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6684   002F60                     l3622:
  6685   002F60  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6686   002F64  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6687   002F68  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6688   002F6C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6689   002F70                     l1140:
  6690   002F70  0012               	return		;funcret
  6691   002F72                     __end_of___xxtofl:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function ___flsub *****************
  6695 ;; Defined at:
  6696 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;  b               4   16[COMRAM] unsigned char 
  6699 ;;  a               4   20[COMRAM] unsigned char 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  4   16[COMRAM] unsigned char 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;Total ram usage:        8 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; Hardware stack levels required when called: 2
  6718 ;; This function calls:
  6719 ;;		___fladd
  6720 ;; This function is called by:
  6721 ;;		_Colour_decider
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text39
  6726   004030                     __ptext39:
  6727                           	callstack 0
  6728   004030                     ___flsub:
  6729                           	callstack 27
  6730   004030  0E00               	movlw	0
  6731   004032  1A15               	xorwf	___flsub@a^0,f,c
  6732   004034  0E00               	movlw	0
  6733   004036  1A16               	xorwf	(___flsub@a+1)^0,f,c
  6734   004038  0E00               	movlw	0
  6735   00403A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  6736   00403C  0E80               	movlw	128
  6737   00403E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  6738   004040  C011  F001         	movff	___flsub@b,___fladd@b
  6739   004044  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  6740   004048  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  6741   00404C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  6742   004050  C015  F005         	movff	___flsub@a,___fladd@a
  6743   004054  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  6744   004058  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  6745   00405C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  6746   004060  ECBB  F00C         	call	___fladd	;wreg free
  6747   004064  C001  F011         	movff	?___fladd,?___flsub
  6748   004068  C002  F012         	movff	?___fladd+1,?___flsub+1
  6749   00406C  C003  F013         	movff	?___fladd+2,?___flsub+2
  6750   004070  C004  F014         	movff	?___fladd+3,?___flsub+3
  6751   004074  0012               	return		;funcret
  6752   004076                     __end_of___flsub:
  6753                           	callstack 0
  6754                           
  6755 ;; *************** function ___fladd *****************
  6756 ;; Defined at:
  6757 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  b               4    0[COMRAM] unsigned char 
  6760 ;;  a               4    4[COMRAM] unsigned char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  grs             1   15[COMRAM] unsigned char 
  6763 ;;  bexp            1   14[COMRAM] unsigned char 
  6764 ;;  aexp            1   13[COMRAM] unsigned char 
  6765 ;;  signs           1   12[COMRAM] unsigned char 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  4    0[COMRAM] unsigned char 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6779 ;;Total ram usage:       16 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; Hardware stack levels required when called: 1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_colour_rel
  6786 ;;		_Colour_decider
  6787 ;;		___flsub
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text40
  6792   001976                     __ptext40:
  6793                           	callstack 0
  6794   001976                     ___fladd:
  6795                           	callstack 28
  6796   001976  5004               	movf	(___fladd@b+3)^0,w,c
  6797   001978  0B80               	andlw	128
  6798   00197A  6E0D               	movwf	___fladd@signs^0,c
  6799   00197C  5004               	movf	(___fladd@b+3)^0,w,c
  6800   00197E  2404               	addwf	(___fladd@b+3)^0,w,c
  6801   001980  6E0F               	movwf	___fladd@bexp^0,c
  6802   001982  AE03               	btfss	(___fladd@b+2)^0,7,c
  6803   001984  EFC6  F00C         	goto	u2491
  6804   001988  EFC8  F00C         	goto	u2490
  6805   00198C                     u2491:
  6806   00198C  EFC9  F00C         	goto	l2982
  6807   001990                     u2490:
  6808   001990  800F               	bsf	___fladd@bexp^0,0,c
  6809   001992                     l2982:
  6810   001992  500F               	movf	___fladd@bexp^0,w,c
  6811   001994  B4D8               	btfsc	status,2,c
  6812   001996  EFCF  F00C         	goto	u2501
  6813   00199A  EFD1  F00C         	goto	u2500
  6814   00199E                     u2501:
  6815   00199E  EFE6  F00C         	goto	l2992
  6816   0019A2                     u2500:
  6817   0019A2  280F               	incf	___fladd@bexp^0,w,c
  6818   0019A4  A4D8               	btfss	status,2,c
  6819   0019A6  EFD7  F00C         	goto	u2511
  6820   0019AA  EFD9  F00C         	goto	u2510
  6821   0019AE                     u2511:
  6822   0019AE  EFE1  F00C         	goto	l2988
  6823   0019B2                     u2510:
  6824   0019B2  0E00               	movlw	0
  6825   0019B4  6E01               	movwf	___fladd@b^0,c
  6826   0019B6  0E00               	movlw	0
  6827   0019B8  6E02               	movwf	(___fladd@b+1)^0,c
  6828   0019BA  0E00               	movlw	0
  6829   0019BC  6E03               	movwf	(___fladd@b+2)^0,c
  6830   0019BE  0E00               	movlw	0
  6831   0019C0  6E04               	movwf	(___fladd@b+3)^0,c
  6832   0019C2                     l2988:
  6833   0019C2  8E03               	bsf	(___fladd@b+2)^0,7,c
  6834   0019C4  0E00               	movlw	0
  6835   0019C6  6E04               	movwf	(___fladd@b+3)^0,c
  6836   0019C8  EFEE  F00C         	goto	l2994
  6837   0019CC                     l2992:
  6838   0019CC  0E00               	movlw	0
  6839   0019CE  6E01               	movwf	___fladd@b^0,c
  6840   0019D0  0E00               	movlw	0
  6841   0019D2  6E02               	movwf	(___fladd@b+1)^0,c
  6842   0019D4  0E00               	movlw	0
  6843   0019D6  6E03               	movwf	(___fladd@b+2)^0,c
  6844   0019D8  0E00               	movlw	0
  6845   0019DA  6E04               	movwf	(___fladd@b+3)^0,c
  6846   0019DC                     l2994:
  6847   0019DC  5008               	movf	(___fladd@a+3)^0,w,c
  6848   0019DE  0B80               	andlw	128
  6849   0019E0  6E0E               	movwf	___fladd@aexp^0,c
  6850   0019E2  500D               	movf	___fladd@signs^0,w,c
  6851   0019E4  180E               	xorwf	___fladd@aexp^0,w,c
  6852   0019E6  B4D8               	btfsc	status,2,c
  6853   0019E8  EFF8  F00C         	goto	u2521
  6854   0019EC  EFFA  F00C         	goto	u2520
  6855   0019F0                     u2521:
  6856   0019F0  EFFB  F00C         	goto	l3000
  6857   0019F4                     u2520:
  6858   0019F4  8C0D               	bsf	___fladd@signs^0,6,c
  6859   0019F6                     l3000:
  6860   0019F6  5008               	movf	(___fladd@a+3)^0,w,c
  6861   0019F8  2408               	addwf	(___fladd@a+3)^0,w,c
  6862   0019FA  6E0E               	movwf	___fladd@aexp^0,c
  6863   0019FC  AE07               	btfss	(___fladd@a+2)^0,7,c
  6864   0019FE  EF03  F00D         	goto	u2531
  6865   001A02  EF05  F00D         	goto	u2530
  6866   001A06                     u2531:
  6867   001A06  EF06  F00D         	goto	l3006
  6868   001A0A                     u2530:
  6869   001A0A  800E               	bsf	___fladd@aexp^0,0,c
  6870   001A0C                     l3006:
  6871   001A0C  500E               	movf	___fladd@aexp^0,w,c
  6872   001A0E  B4D8               	btfsc	status,2,c
  6873   001A10  EF0C  F00D         	goto	u2541
  6874   001A14  EF0E  F00D         	goto	u2540
  6875   001A18                     u2541:
  6876   001A18  EF23  F00D         	goto	l3016
  6877   001A1C                     u2540:
  6878   001A1C  280E               	incf	___fladd@aexp^0,w,c
  6879   001A1E  A4D8               	btfss	status,2,c
  6880   001A20  EF14  F00D         	goto	u2551
  6881   001A24  EF16  F00D         	goto	u2550
  6882   001A28                     u2551:
  6883   001A28  EF1E  F00D         	goto	l3012
  6884   001A2C                     u2550:
  6885   001A2C  0E00               	movlw	0
  6886   001A2E  6E05               	movwf	___fladd@a^0,c
  6887   001A30  0E00               	movlw	0
  6888   001A32  6E06               	movwf	(___fladd@a+1)^0,c
  6889   001A34  0E00               	movlw	0
  6890   001A36  6E07               	movwf	(___fladd@a+2)^0,c
  6891   001A38  0E00               	movlw	0
  6892   001A3A  6E08               	movwf	(___fladd@a+3)^0,c
  6893   001A3C                     l3012:
  6894   001A3C  8E07               	bsf	(___fladd@a+2)^0,7,c
  6895   001A3E  0E00               	movlw	0
  6896   001A40  6E08               	movwf	(___fladd@a+3)^0,c
  6897   001A42  EF2B  F00D         	goto	l3018
  6898   001A46                     l3016:
  6899   001A46  0E00               	movlw	0
  6900   001A48  6E05               	movwf	___fladd@a^0,c
  6901   001A4A  0E00               	movlw	0
  6902   001A4C  6E06               	movwf	(___fladd@a+1)^0,c
  6903   001A4E  0E00               	movlw	0
  6904   001A50  6E07               	movwf	(___fladd@a+2)^0,c
  6905   001A52  0E00               	movlw	0
  6906   001A54  6E08               	movwf	(___fladd@a+3)^0,c
  6907   001A56                     l3018:
  6908   001A56  500F               	movf	___fladd@bexp^0,w,c
  6909   001A58  5C0E               	subwf	___fladd@aexp^0,w,c
  6910   001A5A  B0D8               	btfsc	status,0,c
  6911   001A5C  EF32  F00D         	goto	u2561
  6912   001A60  EF34  F00D         	goto	u2560
  6913   001A64                     u2561:
  6914   001A64  EF5B  F00D         	goto	l3054
  6915   001A68                     u2560:
  6916   001A68  AC0D               	btfss	___fladd@signs^0,6,c
  6917   001A6A  EF39  F00D         	goto	u2571
  6918   001A6E  EF3B  F00D         	goto	u2570
  6919   001A72                     u2571:
  6920   001A72  EF3D  F00D         	goto	l3024
  6921   001A76                     u2570:
  6922   001A76  0E80               	movlw	128
  6923   001A78  1A0D               	xorwf	___fladd@signs^0,f,c
  6924   001A7A                     l3024:
  6925   001A7A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6926   001A7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6927   001A82  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6928   001A86  C001  F010         	movff	___fladd@b,___fladd@grs
  6929   001A8A  C005  F001         	movff	___fladd@a,___fladd@b
  6930   001A8E  C010  F005         	movff	___fladd@grs,___fladd@a
  6931   001A92  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6932   001A96  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6933   001A9A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6934   001A9E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6935   001AA2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6936   001AA6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6937   001AAA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6938   001AAE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6939   001AB2  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6940   001AB6                     l3054:
  6941   001AB6  0E00               	movlw	0
  6942   001AB8  6E10               	movwf	___fladd@grs^0,c
  6943   001ABA  500F               	movf	___fladd@bexp^0,w,c
  6944   001ABC  C00E  F009         	movff	___fladd@aexp,??___fladd
  6945   001AC0  6A0A               	clrf	(??___fladd+1)^0,c
  6946   001AC2  5E09               	subwf	??___fladd^0,f,c
  6947   001AC4  0E00               	movlw	0
  6948   001AC6  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6949   001AC8  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6950   001ACA  EF70  F00D         	goto	u2581
  6951   001ACE  500A               	movf	(??___fladd+1)^0,w,c
  6952   001AD0  E109               	bnz	u2580
  6953   001AD2  0E1A               	movlw	26
  6954   001AD4  5C09               	subwf	??___fladd^0,w,c
  6955   001AD6  A0D8               	btfss	status,0,c
  6956   001AD8  EF70  F00D         	goto	u2581
  6957   001ADC  EF72  F00D         	goto	u2580
  6958   001AE0                     u2581:
  6959   001AE0  EFA9  F00D         	goto	l1011
  6960   001AE4                     u2580:
  6961   001AE4  5001               	movf	___fladd@b^0,w,c
  6962   001AE6  1002               	iorwf	(___fladd@b+1)^0,w,c
  6963   001AE8  1003               	iorwf	(___fladd@b+2)^0,w,c
  6964   001AEA  1004               	iorwf	(___fladd@b+3)^0,w,c
  6965   001AEC  A4D8               	btfss	status,2,c
  6966   001AEE  EF7B  F00D         	goto	u2591
  6967   001AF2  EF7E  F00D         	goto	u2590
  6968   001AF6                     u2591:
  6969   001AF6  0E01               	movlw	1
  6970   001AF8  EF7F  F00D         	goto	u2600
  6971   001AFC                     u2590:
  6972   001AFC  0E00               	movlw	0
  6973   001AFE                     u2600:
  6974   001AFE  6E10               	movwf	___fladd@grs^0,c
  6975   001B00  0E00               	movlw	0
  6976   001B02  6E01               	movwf	___fladd@b^0,c
  6977   001B04  0E00               	movlw	0
  6978   001B06  6E02               	movwf	(___fladd@b+1)^0,c
  6979   001B08  0E00               	movlw	0
  6980   001B0A  6E03               	movwf	(___fladd@b+2)^0,c
  6981   001B0C  0E00               	movlw	0
  6982   001B0E  6E04               	movwf	(___fladd@b+3)^0,c
  6983   001B10  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6984   001B14  EFB2  F00D         	goto	l1010
  6985   001B18                     l1012:
  6986   001B18  A010               	btfss	___fladd@grs^0,0,c
  6987   001B1A  EF91  F00D         	goto	u2611
  6988   001B1E  EF93  F00D         	goto	u2610
  6989   001B22                     u2611:
  6990   001B22  EF99  F00D         	goto	l3066
  6991   001B26                     u2610:
  6992   001B26  90D8               	bcf	status,0,c
  6993   001B28  3010               	rrcf	___fladd@grs^0,w,c
  6994   001B2A  0901               	iorlw	1
  6995   001B2C  6E10               	movwf	___fladd@grs^0,c
  6996   001B2E  EF9B  F00D         	goto	l3068
  6997   001B32                     l3066:
  6998   001B32  90D8               	bcf	status,0,c
  6999   001B34  3210               	rrcf	___fladd@grs^0,f,c
  7000   001B36                     l3068:
  7001   001B36  A001               	btfss	___fladd@b^0,0,c
  7002   001B38  EFA0  F00D         	goto	u2621
  7003   001B3C  EFA2  F00D         	goto	u2620
  7004   001B40                     u2621:
  7005   001B40  EFA3  F00D         	goto	l3072
  7006   001B44                     u2620:
  7007   001B44  8E10               	bsf	___fladd@grs^0,7,c
  7008   001B46                     l3072:
  7009   001B46  3404               	rlcf	(___fladd@b+3)^0,w,c
  7010   001B48  3204               	rrcf	(___fladd@b+3)^0,f,c
  7011   001B4A  3203               	rrcf	(___fladd@b+2)^0,f,c
  7012   001B4C  3202               	rrcf	(___fladd@b+1)^0,f,c
  7013   001B4E  3201               	rrcf	___fladd@b^0,f,c
  7014   001B50  2A0F               	incf	___fladd@bexp^0,f,c
  7015   001B52                     l1011:
  7016   001B52  500E               	movf	___fladd@aexp^0,w,c
  7017   001B54  5C0F               	subwf	___fladd@bexp^0,w,c
  7018   001B56  A0D8               	btfss	status,0,c
  7019   001B58  EFB0  F00D         	goto	u2631
  7020   001B5C  EFB2  F00D         	goto	u2630
  7021   001B60                     u2631:
  7022   001B60  EF8C  F00D         	goto	l1012
  7023   001B64                     u2630:
  7024   001B64                     l1010:
  7025   001B64  BC0D               	btfsc	___fladd@signs^0,6,c
  7026   001B66  EFB7  F00D         	goto	u2641
  7027   001B6A  EFB9  F00D         	goto	u2640
  7028   001B6E                     u2641:
  7029   001B6E  EFF9  F00D         	goto	l3100
  7030   001B72                     u2640:
  7031   001B72  500F               	movf	___fladd@bexp^0,w,c
  7032   001B74  A4D8               	btfss	status,2,c
  7033   001B76  EFBF  F00D         	goto	u2651
  7034   001B7A  EFC1  F00D         	goto	u2650
  7035   001B7E                     u2651:
  7036   001B7E  EFCB  F00D         	goto	l3082
  7037   001B82                     u2650:
  7038   001B82  0E00               	movlw	0
  7039   001B84  6E01               	movwf	?___fladd^0,c
  7040   001B86  0E00               	movlw	0
  7041   001B88  6E02               	movwf	(?___fladd+1)^0,c
  7042   001B8A  0E00               	movlw	0
  7043   001B8C  6E03               	movwf	(?___fladd+2)^0,c
  7044   001B8E  0E00               	movlw	0
  7045   001B90  6E04               	movwf	(?___fladd+3)^0,c
  7046   001B92  EF1A  F00F         	goto	l1019
  7047   001B96                     l3082:
  7048   001B96  5005               	movf	___fladd@a^0,w,c
  7049   001B98  2601               	addwf	___fladd@b^0,f,c
  7050   001B9A  5006               	movf	(___fladd@a+1)^0,w,c
  7051   001B9C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7052   001B9E  5007               	movf	(___fladd@a+2)^0,w,c
  7053   001BA0  2203               	addwfc	(___fladd@b+2)^0,f,c
  7054   001BA2  5008               	movf	(___fladd@a+3)^0,w,c
  7055   001BA4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7056   001BA6  A004               	btfss	(___fladd@b+3)^0,0,c
  7057   001BA8  EFD8  F00D         	goto	u2661
  7058   001BAC  EFDA  F00D         	goto	u2660
  7059   001BB0                     u2661:
  7060   001BB0  EF86  F00E         	goto	l3136
  7061   001BB4                     u2660:
  7062   001BB4  A010               	btfss	___fladd@grs^0,0,c
  7063   001BB6  EFDF  F00D         	goto	u2671
  7064   001BBA  EFE1  F00D         	goto	u2670
  7065   001BBE                     u2671:
  7066   001BBE  EFE7  F00D         	goto	l3090
  7067   001BC2                     u2670:
  7068   001BC2  90D8               	bcf	status,0,c
  7069   001BC4  3010               	rrcf	___fladd@grs^0,w,c
  7070   001BC6  0901               	iorlw	1
  7071   001BC8  6E10               	movwf	___fladd@grs^0,c
  7072   001BCA  EFE9  F00D         	goto	l3092
  7073   001BCE                     l3090:
  7074   001BCE  90D8               	bcf	status,0,c
  7075   001BD0  3210               	rrcf	___fladd@grs^0,f,c
  7076   001BD2                     l3092:
  7077   001BD2  A001               	btfss	___fladd@b^0,0,c
  7078   001BD4  EFEE  F00D         	goto	u2681
  7079   001BD8  EFF0  F00D         	goto	u2680
  7080   001BDC                     u2681:
  7081   001BDC  EFF1  F00D         	goto	l3096
  7082   001BE0                     u2680:
  7083   001BE0  8E10               	bsf	___fladd@grs^0,7,c
  7084   001BE2                     l3096:
  7085   001BE2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7086   001BE4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7087   001BE6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7088   001BE8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7089   001BEA  3201               	rrcf	___fladd@b^0,f,c
  7090   001BEC  2A0F               	incf	___fladd@bexp^0,f,c
  7091   001BEE  EF86  F00E         	goto	l3136
  7092   001BF2                     l3100:
  7093   001BF2  5005               	movf	___fladd@a^0,w,c
  7094   001BF4  5C01               	subwf	___fladd@b^0,w,c
  7095   001BF6  5006               	movf	(___fladd@a+1)^0,w,c
  7096   001BF8  5802               	subwfb	(___fladd@b+1)^0,w,c
  7097   001BFA  5007               	movf	(___fladd@a+2)^0,w,c
  7098   001BFC  5803               	subwfb	(___fladd@b+2)^0,w,c
  7099   001BFE  5004               	movf	(___fladd@b+3)^0,w,c
  7100   001C00  0A80               	xorlw	128
  7101   001C02  6E09               	movwf	??___fladd^0,c
  7102   001C04  5008               	movf	(___fladd@a+3)^0,w,c
  7103   001C06  0A80               	xorlw	128
  7104   001C08  5809               	subwfb	??___fladd^0,w,c
  7105   001C0A  B0D8               	btfsc	status,0,c
  7106   001C0C  EF0A  F00E         	goto	u2691
  7107   001C10  EF0C  F00E         	goto	u2690
  7108   001C14                     u2691:
  7109   001C14  EF37  F00E         	goto	l3110
  7110   001C18                     u2690:
  7111   001C18  5001               	movf	___fladd@b^0,w,c
  7112   001C1A  5C05               	subwf	___fladd@a^0,w,c
  7113   001C1C  6E09               	movwf	??___fladd^0,c
  7114   001C1E  5002               	movf	(___fladd@b+1)^0,w,c
  7115   001C20  5806               	subwfb	(___fladd@a+1)^0,w,c
  7116   001C22  6E0A               	movwf	(??___fladd+1)^0,c
  7117   001C24  5003               	movf	(___fladd@b+2)^0,w,c
  7118   001C26  5807               	subwfb	(___fladd@a+2)^0,w,c
  7119   001C28  6E0B               	movwf	(??___fladd+2)^0,c
  7120   001C2A  5004               	movf	(___fladd@b+3)^0,w,c
  7121   001C2C  5808               	subwfb	(___fladd@a+3)^0,w,c
  7122   001C2E  6E0C               	movwf	(??___fladd+3)^0,c
  7123   001C30  0EFF               	movlw	255
  7124   001C32  2409               	addwf	??___fladd^0,w,c
  7125   001C34  6E01               	movwf	___fladd@b^0,c
  7126   001C36  0EFF               	movlw	255
  7127   001C38  200A               	addwfc	(??___fladd+1)^0,w,c
  7128   001C3A  6E02               	movwf	(___fladd@b+1)^0,c
  7129   001C3C  0EFF               	movlw	255
  7130   001C3E  200B               	addwfc	(??___fladd+2)^0,w,c
  7131   001C40  6E03               	movwf	(___fladd@b+2)^0,c
  7132   001C42  0EFF               	movlw	255
  7133   001C44  200C               	addwfc	(??___fladd+3)^0,w,c
  7134   001C46  6E04               	movwf	(___fladd@b+3)^0,c
  7135   001C48  0E80               	movlw	128
  7136   001C4A  1A0D               	xorwf	___fladd@signs^0,f,c
  7137   001C4C  6C10               	negf	___fladd@grs^0,c
  7138   001C4E  5010               	movf	___fladd@grs^0,w,c
  7139   001C50  A4D8               	btfss	status,2,c
  7140   001C52  EF2D  F00E         	goto	u2701
  7141   001C56  EF2F  F00E         	goto	u2700
  7142   001C5A                     u2701:
  7143   001C5A  EF3F  F00E         	goto	l1027
  7144   001C5E                     u2700:
  7145   001C5E  0E01               	movlw	1
  7146   001C60  2601               	addwf	___fladd@b^0,f,c
  7147   001C62  0E00               	movlw	0
  7148   001C64  2202               	addwfc	(___fladd@b+1)^0,f,c
  7149   001C66  2203               	addwfc	(___fladd@b+2)^0,f,c
  7150   001C68  2204               	addwfc	(___fladd@b+3)^0,f,c
  7151   001C6A  EF3F  F00E         	goto	l1027
  7152   001C6E                     l3110:
  7153   001C6E  5005               	movf	___fladd@a^0,w,c
  7154   001C70  5E01               	subwf	___fladd@b^0,f,c
  7155   001C72  5006               	movf	(___fladd@a+1)^0,w,c
  7156   001C74  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7157   001C76  5007               	movf	(___fladd@a+2)^0,w,c
  7158   001C78  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7159   001C7A  5008               	movf	(___fladd@a+3)^0,w,c
  7160   001C7C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7161   001C7E                     l1027:
  7162   001C7E  5001               	movf	___fladd@b^0,w,c
  7163   001C80  1002               	iorwf	(___fladd@b+1)^0,w,c
  7164   001C82  1003               	iorwf	(___fladd@b+2)^0,w,c
  7165   001C84  1004               	iorwf	(___fladd@b+3)^0,w,c
  7166   001C86  A4D8               	btfss	status,2,c
  7167   001C88  EF48  F00E         	goto	u2711
  7168   001C8C  EF4A  F00E         	goto	u2710
  7169   001C90                     u2711:
  7170   001C90  EF7F  F00E         	goto	l3134
  7171   001C94                     u2710:
  7172   001C94  5010               	movf	___fladd@grs^0,w,c
  7173   001C96  A4D8               	btfss	status,2,c
  7174   001C98  EF50  F00E         	goto	u2721
  7175   001C9C  EF52  F00E         	goto	u2720
  7176   001CA0                     u2721:
  7177   001CA0  EF7F  F00E         	goto	l3134
  7178   001CA4                     u2720:
  7179   001CA4  0E00               	movlw	0
  7180   001CA6  6E01               	movwf	?___fladd^0,c
  7181   001CA8  0E00               	movlw	0
  7182   001CAA  6E02               	movwf	(?___fladd+1)^0,c
  7183   001CAC  0E00               	movlw	0
  7184   001CAE  6E03               	movwf	(?___fladd+2)^0,c
  7185   001CB0  0E00               	movlw	0
  7186   001CB2  6E04               	movwf	(?___fladd+3)^0,c
  7187   001CB4  EF1A  F00F         	goto	l1019
  7188   001CB8                     l3118:
  7189   001CB8  90D8               	bcf	status,0,c
  7190   001CBA  3601               	rlcf	___fladd@b^0,f,c
  7191   001CBC  3602               	rlcf	(___fladd@b+1)^0,f,c
  7192   001CBE  3603               	rlcf	(___fladd@b+2)^0,f,c
  7193   001CC0  3604               	rlcf	(___fladd@b+3)^0,f,c
  7194   001CC2  AE10               	btfss	___fladd@grs^0,7,c
  7195   001CC4  EF66  F00E         	goto	u2731
  7196   001CC8  EF68  F00E         	goto	u2730
  7197   001CCC                     u2731:
  7198   001CCC  EF69  F00E         	goto	l3124
  7199   001CD0                     u2730:
  7200   001CD0  8001               	bsf	___fladd@b^0,0,c
  7201   001CD2                     l3124:
  7202   001CD2  A010               	btfss	___fladd@grs^0,0,c
  7203   001CD4  EF6E  F00E         	goto	u2741
  7204   001CD8  EF70  F00E         	goto	u2740
  7205   001CDC                     u2741:
  7206   001CDC  EF74  F00E         	goto	l3128
  7207   001CE0                     u2740:
  7208   001CE0  80D8               	bsf	status,0,c
  7209   001CE2  3610               	rlcf	___fladd@grs^0,f,c
  7210   001CE4  EF76  F00E         	goto	l3130
  7211   001CE8                     l3128:
  7212   001CE8  90D8               	bcf	status,0,c
  7213   001CEA  3610               	rlcf	___fladd@grs^0,f,c
  7214   001CEC                     l3130:
  7215   001CEC  500F               	movf	___fladd@bexp^0,w,c
  7216   001CEE  B4D8               	btfsc	status,2,c
  7217   001CF0  EF7C  F00E         	goto	u2751
  7218   001CF4  EF7E  F00E         	goto	u2750
  7219   001CF8                     u2751:
  7220   001CF8  EF7F  F00E         	goto	l3134
  7221   001CFC                     u2750:
  7222   001CFC  060F               	decf	___fladd@bexp^0,f,c
  7223   001CFE                     l3134:
  7224   001CFE  AE03               	btfss	(___fladd@b+2)^0,7,c
  7225   001D00  EF84  F00E         	goto	u2761
  7226   001D04  EF86  F00E         	goto	u2760
  7227   001D08                     u2761:
  7228   001D08  EF5C  F00E         	goto	l3118
  7229   001D0C                     u2760:
  7230   001D0C                     l3136:
  7231   001D0C  0E00               	movlw	0
  7232   001D0E  6E0E               	movwf	___fladd@aexp^0,c
  7233   001D10  AE10               	btfss	___fladd@grs^0,7,c
  7234   001D12  EF8D  F00E         	goto	u2771
  7235   001D16  EF8F  F00E         	goto	u2770
  7236   001D1A                     u2771:
  7237   001D1A  EFA7  F00E         	goto	l1036
  7238   001D1E                     u2770:
  7239   001D1E  C010  F009         	movff	___fladd@grs,??___fladd
  7240   001D22  0E7F               	movlw	127
  7241   001D24  1609               	andwf	??___fladd^0,f,c
  7242   001D26  B4D8               	btfsc	status,2,c
  7243   001D28  EF98  F00E         	goto	u2781
  7244   001D2C  EF9A  F00E         	goto	u2780
  7245   001D30                     u2781:
  7246   001D30  EF9E  F00E         	goto	l1037
  7247   001D34                     u2780:
  7248   001D34                     l3142:
  7249   001D34  0E01               	movlw	1
  7250   001D36  6E0E               	movwf	___fladd@aexp^0,c
  7251   001D38  EFA7  F00E         	goto	l1036
  7252   001D3C                     l1037:
  7253   001D3C  A001               	btfss	___fladd@b^0,0,c
  7254   001D3E  EFA3  F00E         	goto	u2791
  7255   001D42  EFA5  F00E         	goto	u2790
  7256   001D46                     u2791:
  7257   001D46  EFA7  F00E         	goto	l1036
  7258   001D4A                     u2790:
  7259   001D4A  EF9A  F00E         	goto	l3142
  7260   001D4E                     l1036:
  7261   001D4E  500E               	movf	___fladd@aexp^0,w,c
  7262   001D50  B4D8               	btfsc	status,2,c
  7263   001D52  EFAD  F00E         	goto	u2801
  7264   001D56  EFAF  F00E         	goto	u2800
  7265   001D5A                     u2801:
  7266   001D5A  EFDA  F00E         	goto	l3154
  7267   001D5E                     u2800:
  7268   001D5E  0E01               	movlw	1
  7269   001D60  2601               	addwf	___fladd@b^0,f,c
  7270   001D62  0E00               	movlw	0
  7271   001D64  2202               	addwfc	(___fladd@b+1)^0,f,c
  7272   001D66  2203               	addwfc	(___fladd@b+2)^0,f,c
  7273   001D68  2204               	addwfc	(___fladd@b+3)^0,f,c
  7274   001D6A  A004               	btfss	(___fladd@b+3)^0,0,c
  7275   001D6C  EFBA  F00E         	goto	u2811
  7276   001D70  EFBC  F00E         	goto	u2810
  7277   001D74                     u2811:
  7278   001D74  EFDA  F00E         	goto	l3154
  7279   001D78                     u2810:
  7280   001D78  C001  F009         	movff	___fladd@b,??___fladd
  7281   001D7C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7282   001D80  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7283   001D84  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7284   001D88  340C               	rlcf	(??___fladd+3)^0,w,c
  7285   001D8A  320C               	rrcf	(??___fladd+3)^0,f,c
  7286   001D8C  320B               	rrcf	(??___fladd+2)^0,f,c
  7287   001D8E  320A               	rrcf	(??___fladd+1)^0,f,c
  7288   001D90  3209               	rrcf	??___fladd^0,f,c
  7289   001D92  C009  F001         	movff	??___fladd,___fladd@b
  7290   001D96  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7291   001D9A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7292   001D9E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7293   001DA2  280F               	incf	___fladd@bexp^0,w,c
  7294   001DA4  B4D8               	btfsc	status,2,c
  7295   001DA6  EFD7  F00E         	goto	u2821
  7296   001DAA  EFD9  F00E         	goto	u2820
  7297   001DAE                     u2821:
  7298   001DAE  EFDA  F00E         	goto	l3154
  7299   001DB2                     u2820:
  7300   001DB2  2A0F               	incf	___fladd@bexp^0,f,c
  7301   001DB4                     l3154:
  7302   001DB4  280F               	incf	___fladd@bexp^0,w,c
  7303   001DB6  B4D8               	btfsc	status,2,c
  7304   001DB8  EFE0  F00E         	goto	u2831
  7305   001DBC  EFE2  F00E         	goto	u2830
  7306   001DC0                     u2831:
  7307   001DC0  EFEA  F00E         	goto	l3158
  7308   001DC4                     u2830:
  7309   001DC4  500F               	movf	___fladd@bexp^0,w,c
  7310   001DC6  A4D8               	btfss	status,2,c
  7311   001DC8  EFE8  F00E         	goto	u2841
  7312   001DCC  EFEA  F00E         	goto	u2840
  7313   001DD0                     u2841:
  7314   001DD0  EFFC  F00E         	goto	l3162
  7315   001DD4                     u2840:
  7316   001DD4                     l3158:
  7317   001DD4  0E00               	movlw	0
  7318   001DD6  6E01               	movwf	___fladd@b^0,c
  7319   001DD8  0E00               	movlw	0
  7320   001DDA  6E02               	movwf	(___fladd@b+1)^0,c
  7321   001DDC  0E00               	movlw	0
  7322   001DDE  6E03               	movwf	(___fladd@b+2)^0,c
  7323   001DE0  0E00               	movlw	0
  7324   001DE2  6E04               	movwf	(___fladd@b+3)^0,c
  7325   001DE4  500F               	movf	___fladd@bexp^0,w,c
  7326   001DE6  A4D8               	btfss	status,2,c
  7327   001DE8  EFF8  F00E         	goto	u2851
  7328   001DEC  EFFA  F00E         	goto	u2850
  7329   001DF0                     u2851:
  7330   001DF0  EFFC  F00E         	goto	l3162
  7331   001DF4                     u2850:
  7332   001DF4  0E00               	movlw	0
  7333   001DF6  6E0D               	movwf	___fladd@signs^0,c
  7334   001DF8                     l3162:
  7335   001DF8  A00F               	btfss	___fladd@bexp^0,0,c
  7336   001DFA  EF01  F00F         	goto	u2861
  7337   001DFE  EF03  F00F         	goto	u2860
  7338   001E02                     u2861:
  7339   001E02  EF06  F00F         	goto	l3166
  7340   001E06                     u2860:
  7341   001E06  8E03               	bsf	(___fladd@b+2)^0,7,c
  7342   001E08  EF07  F00F         	goto	l3168
  7343   001E0C                     l3166:
  7344   001E0C  9E03               	bcf	(___fladd@b+2)^0,7,c
  7345   001E0E                     l3168:
  7346   001E0E  90D8               	bcf	status,0,c
  7347   001E10  300F               	rrcf	___fladd@bexp^0,w,c
  7348   001E12  6E04               	movwf	(___fladd@b+3)^0,c
  7349   001E14  AE0D               	btfss	___fladd@signs^0,7,c
  7350   001E16  EF0F  F00F         	goto	u2871
  7351   001E1A  EF11  F00F         	goto	u2870
  7352   001E1E                     u2871:
  7353   001E1E  EF12  F00F         	goto	l3174
  7354   001E22                     u2870:
  7355   001E22  8E04               	bsf	(___fladd@b+3)^0,7,c
  7356   001E24                     l3174:
  7357   001E24  C001  F001         	movff	___fladd@b,?___fladd
  7358   001E28  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7359   001E2C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7360   001E30  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7361   001E34                     l1019:
  7362   001E34  0012               	return		;funcret
  7363   001E36                     __end_of___fladd:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function ___flmul *****************
  7367 ;; Defined at:
  7368 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  b               4   49[COMRAM] unsigned char 
  7371 ;;  a               4   53[COMRAM] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  prod            4   68[COMRAM] struct .
  7374 ;;  grs             4   62[COMRAM] unsigned long 
  7375 ;;  temp            2   72[COMRAM] struct .
  7376 ;;  bexp            1   67[COMRAM] unsigned char 
  7377 ;;  aexp            1   66[COMRAM] unsigned char 
  7378 ;;  sign            1   61[COMRAM] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  4   49[COMRAM] unsigned char 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, prodl, prodh
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;Total ram usage:       25 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_Colour_decider
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text41
  7403   001E36                     __ptext41:
  7404                           	callstack 0
  7405   001E36                     ___flmul:
  7406                           	callstack 28
  7407   001E36  5035               	movf	(___flmul@b+3)^0,w,c
  7408   001E38  0B80               	andlw	128
  7409   001E3A  6E3E               	movwf	___flmul@sign^0,c
  7410   001E3C  5035               	movf	(___flmul@b+3)^0,w,c
  7411   001E3E  2435               	addwf	(___flmul@b+3)^0,w,c
  7412   001E40  6E44               	movwf	___flmul@bexp^0,c
  7413   001E42  AE34               	btfss	(___flmul@b+2)^0,7,c
  7414   001E44  EF26  F00F         	goto	u3151
  7415   001E48  EF28  F00F         	goto	u3150
  7416   001E4C                     u3151:
  7417   001E4C  EF29  F00F         	goto	l3412
  7418   001E50                     u3150:
  7419   001E50  8044               	bsf	___flmul@bexp^0,0,c
  7420   001E52                     l3412:
  7421   001E52  5044               	movf	___flmul@bexp^0,w,c
  7422   001E54  B4D8               	btfsc	status,2,c
  7423   001E56  EF2F  F00F         	goto	u3161
  7424   001E5A  EF31  F00F         	goto	u3160
  7425   001E5E                     u3161:
  7426   001E5E  EF44  F00F         	goto	l3420
  7427   001E62                     u3160:
  7428   001E62  2844               	incf	___flmul@bexp^0,w,c
  7429   001E64  A4D8               	btfss	status,2,c
  7430   001E66  EF37  F00F         	goto	u3171
  7431   001E6A  EF39  F00F         	goto	u3170
  7432   001E6E                     u3171:
  7433   001E6E  EF41  F00F         	goto	l3418
  7434   001E72                     u3170:
  7435   001E72  0E00               	movlw	0
  7436   001E74  6E32               	movwf	___flmul@b^0,c
  7437   001E76  0E00               	movlw	0
  7438   001E78  6E33               	movwf	(___flmul@b+1)^0,c
  7439   001E7A  0E00               	movlw	0
  7440   001E7C  6E34               	movwf	(___flmul@b+2)^0,c
  7441   001E7E  0E00               	movlw	0
  7442   001E80  6E35               	movwf	(___flmul@b+3)^0,c
  7443   001E82                     l3418:
  7444   001E82  8E34               	bsf	(___flmul@b+2)^0,7,c
  7445   001E84  EF4C  F00F         	goto	l3422
  7446   001E88                     l3420:
  7447   001E88  0E00               	movlw	0
  7448   001E8A  6E32               	movwf	___flmul@b^0,c
  7449   001E8C  0E00               	movlw	0
  7450   001E8E  6E33               	movwf	(___flmul@b+1)^0,c
  7451   001E90  0E00               	movlw	0
  7452   001E92  6E34               	movwf	(___flmul@b+2)^0,c
  7453   001E94  0E00               	movlw	0
  7454   001E96  6E35               	movwf	(___flmul@b+3)^0,c
  7455   001E98                     l3422:
  7456   001E98  5039               	movf	(___flmul@a+3)^0,w,c
  7457   001E9A  0B80               	andlw	128
  7458   001E9C  1A3E               	xorwf	___flmul@sign^0,f,c
  7459   001E9E  5039               	movf	(___flmul@a+3)^0,w,c
  7460   001EA0  2439               	addwf	(___flmul@a+3)^0,w,c
  7461   001EA2  6E43               	movwf	___flmul@aexp^0,c
  7462   001EA4  AE38               	btfss	(___flmul@a+2)^0,7,c
  7463   001EA6  EF57  F00F         	goto	u3181
  7464   001EAA  EF59  F00F         	goto	u3180
  7465   001EAE                     u3181:
  7466   001EAE  EF5A  F00F         	goto	l3430
  7467   001EB2                     u3180:
  7468   001EB2  8043               	bsf	___flmul@aexp^0,0,c
  7469   001EB4                     l3430:
  7470   001EB4  5043               	movf	___flmul@aexp^0,w,c
  7471   001EB6  B4D8               	btfsc	status,2,c
  7472   001EB8  EF60  F00F         	goto	u3191
  7473   001EBC  EF62  F00F         	goto	u3190
  7474   001EC0                     u3191:
  7475   001EC0  EF75  F00F         	goto	l3438
  7476   001EC4                     u3190:
  7477   001EC4  2843               	incf	___flmul@aexp^0,w,c
  7478   001EC6  A4D8               	btfss	status,2,c
  7479   001EC8  EF68  F00F         	goto	u3201
  7480   001ECC  EF6A  F00F         	goto	u3200
  7481   001ED0                     u3201:
  7482   001ED0  EF72  F00F         	goto	l3436
  7483   001ED4                     u3200:
  7484   001ED4  0E00               	movlw	0
  7485   001ED6  6E36               	movwf	___flmul@a^0,c
  7486   001ED8  0E00               	movlw	0
  7487   001EDA  6E37               	movwf	(___flmul@a+1)^0,c
  7488   001EDC  0E00               	movlw	0
  7489   001EDE  6E38               	movwf	(___flmul@a+2)^0,c
  7490   001EE0  0E00               	movlw	0
  7491   001EE2  6E39               	movwf	(___flmul@a+3)^0,c
  7492   001EE4                     l3436:
  7493   001EE4  8E38               	bsf	(___flmul@a+2)^0,7,c
  7494   001EE6  EF7D  F00F         	goto	l1096
  7495   001EEA                     l3438:
  7496   001EEA  0E00               	movlw	0
  7497   001EEC  6E36               	movwf	___flmul@a^0,c
  7498   001EEE  0E00               	movlw	0
  7499   001EF0  6E37               	movwf	(___flmul@a+1)^0,c
  7500   001EF2  0E00               	movlw	0
  7501   001EF4  6E38               	movwf	(___flmul@a+2)^0,c
  7502   001EF6  0E00               	movlw	0
  7503   001EF8  6E39               	movwf	(___flmul@a+3)^0,c
  7504   001EFA                     l1096:
  7505   001EFA  5043               	movf	___flmul@aexp^0,w,c
  7506   001EFC  B4D8               	btfsc	status,2,c
  7507   001EFE  EF83  F00F         	goto	u3211
  7508   001F02  EF85  F00F         	goto	u3210
  7509   001F06                     u3211:
  7510   001F06  EF8D  F00F         	goto	l3442
  7511   001F0A                     u3210:
  7512   001F0A  5044               	movf	___flmul@bexp^0,w,c
  7513   001F0C  A4D8               	btfss	status,2,c
  7514   001F0E  EF8B  F00F         	goto	u3221
  7515   001F12  EF8D  F00F         	goto	u3220
  7516   001F16                     u3221:
  7517   001F16  EF97  F00F         	goto	l3446
  7518   001F1A                     u3220:
  7519   001F1A                     l3442:
  7520   001F1A  0E00               	movlw	0
  7521   001F1C  6E32               	movwf	?___flmul^0,c
  7522   001F1E  0E00               	movlw	0
  7523   001F20  6E33               	movwf	(?___flmul+1)^0,c
  7524   001F22  0E00               	movlw	0
  7525   001F24  6E34               	movwf	(?___flmul+2)^0,c
  7526   001F26  0E00               	movlw	0
  7527   001F28  6E35               	movwf	(?___flmul+3)^0,c
  7528   001F2A  EF2F  F011         	goto	l1100
  7529   001F2E                     l3446:
  7530   001F2E  5038               	movf	(___flmul@a+2)^0,w,c
  7531   001F30  0232               	mulwf	___flmul@b^0,c
  7532   001F32  CFF3 F049          	movff	prodl,___flmul@temp
  7533   001F36  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7534   001F3A  5049               	movf	___flmul@temp^0,w,c
  7535   001F3C  6E3F               	movwf	___flmul@grs^0,c
  7536   001F3E  6A40               	clrf	(___flmul@grs+1)^0,c
  7537   001F40  6A41               	clrf	(___flmul@grs+2)^0,c
  7538   001F42  6A42               	clrf	(___flmul@grs+3)^0,c
  7539   001F44  504A               	movf	(___flmul@temp+1)^0,w,c
  7540   001F46  6E45               	movwf	___flmul@prod^0,c
  7541   001F48  6A46               	clrf	(___flmul@prod+1)^0,c
  7542   001F4A  6A47               	clrf	(___flmul@prod+2)^0,c
  7543   001F4C  6A48               	clrf	(___flmul@prod+3)^0,c
  7544   001F4E  5037               	movf	(___flmul@a+1)^0,w,c
  7545   001F50  0233               	mulwf	(___flmul@b+1)^0,c
  7546   001F52  CFF3 F049          	movff	prodl,___flmul@temp
  7547   001F56  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7548   001F5A  5049               	movf	___flmul@temp^0,w,c
  7549   001F5C  263F               	addwf	___flmul@grs^0,f,c
  7550   001F5E  0E00               	movlw	0
  7551   001F60  2240               	addwfc	(___flmul@grs+1)^0,f,c
  7552   001F62  2241               	addwfc	(___flmul@grs+2)^0,f,c
  7553   001F64  2242               	addwfc	(___flmul@grs+3)^0,f,c
  7554   001F66  504A               	movf	(___flmul@temp+1)^0,w,c
  7555   001F68  2645               	addwf	___flmul@prod^0,f,c
  7556   001F6A  0E00               	movlw	0
  7557   001F6C  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7558   001F6E  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7559   001F70  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7560   001F72  5036               	movf	___flmul@a^0,w,c
  7561   001F74  0234               	mulwf	(___flmul@b+2)^0,c
  7562   001F76  CFF3 F049          	movff	prodl,___flmul@temp
  7563   001F7A  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7564   001F7E  5049               	movf	___flmul@temp^0,w,c
  7565   001F80  263F               	addwf	___flmul@grs^0,f,c
  7566   001F82  0E00               	movlw	0
  7567   001F84  2240               	addwfc	(___flmul@grs+1)^0,f,c
  7568   001F86  2241               	addwfc	(___flmul@grs+2)^0,f,c
  7569   001F88  2242               	addwfc	(___flmul@grs+3)^0,f,c
  7570   001F8A  504A               	movf	(___flmul@temp+1)^0,w,c
  7571   001F8C  2645               	addwf	___flmul@prod^0,f,c
  7572   001F8E  0E00               	movlw	0
  7573   001F90  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7574   001F92  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7575   001F94  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7576   001F96  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  7577   001F9A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  7578   001F9E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  7579   001FA2  6A3F               	clrf	___flmul@grs^0,c
  7580   001FA4  5036               	movf	___flmul@a^0,w,c
  7581   001FA6  0233               	mulwf	(___flmul@b+1)^0,c
  7582   001FA8  CFF3 F049          	movff	prodl,___flmul@temp
  7583   001FAC  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7584   001FB0  5049               	movf	___flmul@temp^0,w,c
  7585   001FB2  263F               	addwf	___flmul@grs^0,f,c
  7586   001FB4  504A               	movf	(___flmul@temp+1)^0,w,c
  7587   001FB6  2240               	addwfc	(___flmul@grs+1)^0,f,c
  7588   001FB8  0E00               	movlw	0
  7589   001FBA  2241               	addwfc	(___flmul@grs+2)^0,f,c
  7590   001FBC  0E00               	movlw	0
  7591   001FBE  2242               	addwfc	(___flmul@grs+3)^0,f,c
  7592   001FC0  5037               	movf	(___flmul@a+1)^0,w,c
  7593   001FC2  0232               	mulwf	___flmul@b^0,c
  7594   001FC4  CFF3 F049          	movff	prodl,___flmul@temp
  7595   001FC8  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7596   001FCC  5049               	movf	___flmul@temp^0,w,c
  7597   001FCE  263F               	addwf	___flmul@grs^0,f,c
  7598   001FD0  504A               	movf	(___flmul@temp+1)^0,w,c
  7599   001FD2  2240               	addwfc	(___flmul@grs+1)^0,f,c
  7600   001FD4  0E00               	movlw	0
  7601   001FD6  2241               	addwfc	(___flmul@grs+2)^0,f,c
  7602   001FD8  0E00               	movlw	0
  7603   001FDA  2242               	addwfc	(___flmul@grs+3)^0,f,c
  7604   001FDC  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  7605   001FE0  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  7606   001FE4  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  7607   001FE8  6A3F               	clrf	___flmul@grs^0,c
  7608   001FEA  5036               	movf	___flmul@a^0,w,c
  7609   001FEC  0232               	mulwf	___flmul@b^0,c
  7610   001FEE  CFF3 F049          	movff	prodl,___flmul@temp
  7611   001FF2  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7612   001FF6  5049               	movf	___flmul@temp^0,w,c
  7613   001FF8  263F               	addwf	___flmul@grs^0,f,c
  7614   001FFA  504A               	movf	(___flmul@temp+1)^0,w,c
  7615   001FFC  2240               	addwfc	(___flmul@grs+1)^0,f,c
  7616   001FFE  0E00               	movlw	0
  7617   002000  2241               	addwfc	(___flmul@grs+2)^0,f,c
  7618   002002  0E00               	movlw	0
  7619   002004  2242               	addwfc	(___flmul@grs+3)^0,f,c
  7620   002006  5038               	movf	(___flmul@a+2)^0,w,c
  7621   002008  0233               	mulwf	(___flmul@b+1)^0,c
  7622   00200A  CFF3 F049          	movff	prodl,___flmul@temp
  7623   00200E  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7624   002012  5049               	movf	___flmul@temp^0,w,c
  7625   002014  2645               	addwf	___flmul@prod^0,f,c
  7626   002016  504A               	movf	(___flmul@temp+1)^0,w,c
  7627   002018  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7628   00201A  0E00               	movlw	0
  7629   00201C  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7630   00201E  0E00               	movlw	0
  7631   002020  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7632   002022  5037               	movf	(___flmul@a+1)^0,w,c
  7633   002024  0234               	mulwf	(___flmul@b+2)^0,c
  7634   002026  CFF3 F049          	movff	prodl,___flmul@temp
  7635   00202A  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7636   00202E  5049               	movf	___flmul@temp^0,w,c
  7637   002030  2645               	addwf	___flmul@prod^0,f,c
  7638   002032  504A               	movf	(___flmul@temp+1)^0,w,c
  7639   002034  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7640   002036  0E00               	movlw	0
  7641   002038  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7642   00203A  0E00               	movlw	0
  7643   00203C  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7644   00203E  5038               	movf	(___flmul@a+2)^0,w,c
  7645   002040  0234               	mulwf	(___flmul@b+2)^0,c
  7646   002042  CFF3 F049          	movff	prodl,___flmul@temp
  7647   002046  CFF4 F04A          	movff	prodh,___flmul@temp+1
  7648   00204A  5049               	movf	___flmul@temp^0,w,c
  7649   00204C  6E3A               	movwf	??___flmul^0,c
  7650   00204E  504A               	movf	(___flmul@temp+1)^0,w,c
  7651   002050  6E3B               	movwf	(??___flmul+1)^0,c
  7652   002052  6A3C               	clrf	(??___flmul+2)^0,c
  7653   002054  6A3D               	clrf	(??___flmul+3)^0,c
  7654   002056  C03C  F03D         	movff	??___flmul+2,??___flmul+3
  7655   00205A  C03B  F03C         	movff	??___flmul+1,??___flmul+2
  7656   00205E  C03A  F03B         	movff	??___flmul,??___flmul+1
  7657   002062  6A3A               	clrf	??___flmul^0,c
  7658   002064  503A               	movf	??___flmul^0,w,c
  7659   002066  2645               	addwf	___flmul@prod^0,f,c
  7660   002068  503B               	movf	(??___flmul+1)^0,w,c
  7661   00206A  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7662   00206C  503C               	movf	(??___flmul+2)^0,w,c
  7663   00206E  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7664   002070  503D               	movf	(??___flmul+3)^0,w,c
  7665   002072  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7666   002074  C03F  F03A         	movff	___flmul@grs,??___flmul
  7667   002078  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
  7668   00207C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
  7669   002080  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
  7670   002084  0E19               	movlw	25
  7671   002086  EF4A  F010         	goto	u3230
  7672   00208A                     u3235:
  7673   00208A  90D8               	bcf	status,0,c
  7674   00208C  323D               	rrcf	(??___flmul+3)^0,f,c
  7675   00208E  323C               	rrcf	(??___flmul+2)^0,f,c
  7676   002090  323B               	rrcf	(??___flmul+1)^0,f,c
  7677   002092  323A               	rrcf	??___flmul^0,f,c
  7678   002094                     u3230:
  7679   002094  2EE8               	decfsz	wreg,f,c
  7680   002096  EF45  F010         	goto	u3235
  7681   00209A  503A               	movf	??___flmul^0,w,c
  7682   00209C  2645               	addwf	___flmul@prod^0,f,c
  7683   00209E  503B               	movf	(??___flmul+1)^0,w,c
  7684   0020A0  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7685   0020A2  503C               	movf	(??___flmul+2)^0,w,c
  7686   0020A4  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7687   0020A6  503D               	movf	(??___flmul+3)^0,w,c
  7688   0020A8  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7689   0020AA  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  7690   0020AE  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  7691   0020B2  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  7692   0020B6  6A3F               	clrf	___flmul@grs^0,c
  7693   0020B8  5043               	movf	___flmul@aexp^0,w,c
  7694   0020BA  C044  F03A         	movff	___flmul@bexp,??___flmul
  7695   0020BE  6A3B               	clrf	(??___flmul+1)^0,c
  7696   0020C0  263A               	addwf	??___flmul^0,f,c
  7697   0020C2  0E00               	movlw	0
  7698   0020C4  223B               	addwfc	(??___flmul+1)^0,f,c
  7699   0020C6  0E82               	movlw	130
  7700   0020C8  243A               	addwf	??___flmul^0,w,c
  7701   0020CA  6E49               	movwf	___flmul@temp^0,c
  7702   0020CC  0EFF               	movlw	255
  7703   0020CE  203B               	addwfc	(??___flmul+1)^0,w,c
  7704   0020D0  6E4A               	movwf	(___flmul@temp+1)^0,c
  7705   0020D2  EF80  F010         	goto	l3494
  7706   0020D6                     l3488:
  7707   0020D6  90D8               	bcf	status,0,c
  7708   0020D8  3645               	rlcf	___flmul@prod^0,f,c
  7709   0020DA  3646               	rlcf	(___flmul@prod+1)^0,f,c
  7710   0020DC  3647               	rlcf	(___flmul@prod+2)^0,f,c
  7711   0020DE  3648               	rlcf	(___flmul@prod+3)^0,f,c
  7712   0020E0  AE42               	btfss	(___flmul@grs+3)^0,7,c
  7713   0020E2  EF75  F010         	goto	u3241
  7714   0020E6  EF77  F010         	goto	u3240
  7715   0020EA                     u3241:
  7716   0020EA  EF78  F010         	goto	l1103
  7717   0020EE                     u3240:
  7718   0020EE  8045               	bsf	___flmul@prod^0,0,c
  7719   0020F0                     l1103:
  7720   0020F0  90D8               	bcf	status,0,c
  7721   0020F2  363F               	rlcf	___flmul@grs^0,f,c
  7722   0020F4  3640               	rlcf	(___flmul@grs+1)^0,f,c
  7723   0020F6  3641               	rlcf	(___flmul@grs+2)^0,f,c
  7724   0020F8  3642               	rlcf	(___flmul@grs+3)^0,f,c
  7725   0020FA  0649               	decf	___flmul@temp^0,f,c
  7726   0020FC  A0D8               	btfss	status,0,c
  7727   0020FE  064A               	decf	(___flmul@temp+1)^0,f,c
  7728   002100                     l3494:
  7729   002100  AE47               	btfss	(___flmul@prod+2)^0,7,c
  7730   002102  EF85  F010         	goto	u3251
  7731   002106  EF87  F010         	goto	u3250
  7732   00210A                     u3251:
  7733   00210A  EF6B  F010         	goto	l3488
  7734   00210E                     u3250:
  7735   00210E  0E00               	movlw	0
  7736   002110  6E43               	movwf	___flmul@aexp^0,c
  7737   002112  AE42               	btfss	(___flmul@grs+3)^0,7,c
  7738   002114  EF8E  F010         	goto	u3261
  7739   002118  EF90  F010         	goto	u3260
  7740   00211C                     u3261:
  7741   00211C  EFB4  F010         	goto	l1105
  7742   002120                     u3260:
  7743   002120  0EFF               	movlw	255
  7744   002122  143F               	andwf	___flmul@grs^0,w,c
  7745   002124  6E3A               	movwf	??___flmul^0,c
  7746   002126  0EFF               	movlw	255
  7747   002128  1440               	andwf	(___flmul@grs+1)^0,w,c
  7748   00212A  6E3B               	movwf	(??___flmul+1)^0,c
  7749   00212C  0EFF               	movlw	255
  7750   00212E  1441               	andwf	(___flmul@grs+2)^0,w,c
  7751   002130  6E3C               	movwf	(??___flmul+2)^0,c
  7752   002132  0E7F               	movlw	127
  7753   002134  1442               	andwf	(___flmul@grs+3)^0,w,c
  7754   002136  6E3D               	movwf	(??___flmul+3)^0,c
  7755   002138  503A               	movf	??___flmul^0,w,c
  7756   00213A  103B               	iorwf	(??___flmul+1)^0,w,c
  7757   00213C  103C               	iorwf	(??___flmul+2)^0,w,c
  7758   00213E  103D               	iorwf	(??___flmul+3)^0,w,c
  7759   002140  B4D8               	btfsc	status,2,c
  7760   002142  EFA5  F010         	goto	u3271
  7761   002146  EFA7  F010         	goto	u3270
  7762   00214A                     u3271:
  7763   00214A  EFAB  F010         	goto	l1106
  7764   00214E                     u3270:
  7765   00214E                     l3502:
  7766   00214E  0E01               	movlw	1
  7767   002150  6E43               	movwf	___flmul@aexp^0,c
  7768   002152  EFB4  F010         	goto	l1105
  7769   002156                     l1106:
  7770   002156  A045               	btfss	___flmul@prod^0,0,c
  7771   002158  EFB0  F010         	goto	u3281
  7772   00215C  EFB2  F010         	goto	u3280
  7773   002160                     u3281:
  7774   002160  EFB4  F010         	goto	l1105
  7775   002164                     u3280:
  7776   002164  EFA7  F010         	goto	l3502
  7777   002168                     l1105:
  7778   002168  5043               	movf	___flmul@aexp^0,w,c
  7779   00216A  B4D8               	btfsc	status,2,c
  7780   00216C  EFBA  F010         	goto	u3291
  7781   002170  EFBC  F010         	goto	u3290
  7782   002174                     u3291:
  7783   002174  EFE0  F010         	goto	l3514
  7784   002178                     u3290:
  7785   002178  0E01               	movlw	1
  7786   00217A  2645               	addwf	___flmul@prod^0,f,c
  7787   00217C  0E00               	movlw	0
  7788   00217E  2246               	addwfc	(___flmul@prod+1)^0,f,c
  7789   002180  2247               	addwfc	(___flmul@prod+2)^0,f,c
  7790   002182  2248               	addwfc	(___flmul@prod+3)^0,f,c
  7791   002184  A048               	btfss	(___flmul@prod+3)^0,0,c
  7792   002186  EFC7  F010         	goto	u3301
  7793   00218A  EFC9  F010         	goto	u3300
  7794   00218E                     u3301:
  7795   00218E  EFE0  F010         	goto	l3514
  7796   002192                     u3300:
  7797   002192  C045  F03A         	movff	___flmul@prod,??___flmul
  7798   002196  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
  7799   00219A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
  7800   00219E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
  7801   0021A2  343D               	rlcf	(??___flmul+3)^0,w,c
  7802   0021A4  323D               	rrcf	(??___flmul+3)^0,f,c
  7803   0021A6  323C               	rrcf	(??___flmul+2)^0,f,c
  7804   0021A8  323B               	rrcf	(??___flmul+1)^0,f,c
  7805   0021AA  323A               	rrcf	??___flmul^0,f,c
  7806   0021AC  C03A  F045         	movff	??___flmul,___flmul@prod
  7807   0021B0  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
  7808   0021B4  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
  7809   0021B8  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
  7810   0021BC  4A49               	infsnz	___flmul@temp^0,f,c
  7811   0021BE  2A4A               	incf	(___flmul@temp+1)^0,f,c
  7812   0021C0                     l3514:
  7813   0021C0  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  7814   0021C2  EFEB  F010         	goto	u3311
  7815   0021C6  504A               	movf	(___flmul@temp+1)^0,w,c
  7816   0021C8  E108               	bnz	u3310
  7817   0021CA  2849               	incf	___flmul@temp^0,w,c
  7818   0021CC  A0D8               	btfss	status,0,c
  7819   0021CE  EFEB  F010         	goto	u3311
  7820   0021D2  EFED  F010         	goto	u3310
  7821   0021D6                     u3311:
  7822   0021D6  EFF7  F010         	goto	l3518
  7823   0021DA                     u3310:
  7824   0021DA  0E00               	movlw	0
  7825   0021DC  6E45               	movwf	___flmul@prod^0,c
  7826   0021DE  0E00               	movlw	0
  7827   0021E0  6E46               	movwf	(___flmul@prod+1)^0,c
  7828   0021E2  0E80               	movlw	128
  7829   0021E4  6E47               	movwf	(___flmul@prod+2)^0,c
  7830   0021E6  0E7F               	movlw	127
  7831   0021E8  6E48               	movwf	(___flmul@prod+3)^0,c
  7832   0021EA  EF25  F011         	goto	l3530
  7833   0021EE                     l3518:
  7834   0021EE  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
  7835   0021F0  EF04  F011         	goto	u3320
  7836   0021F4  504A               	movf	(___flmul@temp+1)^0,w,c
  7837   0021F6  E106               	bnz	u3321
  7838   0021F8  0449               	decf	___flmul@temp^0,w,c
  7839   0021FA  B0D8               	btfsc	status,0,c
  7840   0021FC  EF02  F011         	goto	u3321
  7841   002200  EF04  F011         	goto	u3320
  7842   002204                     u3321:
  7843   002204  EF10  F011         	goto	l1113
  7844   002208                     u3320:
  7845   002208  0E00               	movlw	0
  7846   00220A  6E45               	movwf	___flmul@prod^0,c
  7847   00220C  0E00               	movlw	0
  7848   00220E  6E46               	movwf	(___flmul@prod+1)^0,c
  7849   002210  0E00               	movlw	0
  7850   002212  6E47               	movwf	(___flmul@prod+2)^0,c
  7851   002214  0E00               	movlw	0
  7852   002216  6E48               	movwf	(___flmul@prod+3)^0,c
  7853   002218  0E00               	movlw	0
  7854   00221A  6E3E               	movwf	___flmul@sign^0,c
  7855   00221C  EF25  F011         	goto	l3530
  7856   002220                     l1113:
  7857   002220  C049  F044         	movff	___flmul@temp,___flmul@bexp
  7858   002224  0EFF               	movlw	255
  7859   002226  1645               	andwf	___flmul@prod^0,f,c
  7860   002228  0EFF               	movlw	255
  7861   00222A  1646               	andwf	(___flmul@prod+1)^0,f,c
  7862   00222C  0E7F               	movlw	127
  7863   00222E  1647               	andwf	(___flmul@prod+2)^0,f,c
  7864   002230  0E00               	movlw	0
  7865   002232  1648               	andwf	(___flmul@prod+3)^0,f,c
  7866   002234  A044               	btfss	___flmul@bexp^0,0,c
  7867   002236  EF1F  F011         	goto	u3331
  7868   00223A  EF21  F011         	goto	u3330
  7869   00223E                     u3331:
  7870   00223E  EF22  F011         	goto	l3528
  7871   002242                     u3330:
  7872   002242  8E47               	bsf	(___flmul@prod+2)^0,7,c
  7873   002244                     l3528:
  7874   002244  90D8               	bcf	status,0,c
  7875   002246  3044               	rrcf	___flmul@bexp^0,w,c
  7876   002248  6E48               	movwf	(___flmul@prod+3)^0,c
  7877   00224A                     l3530:
  7878   00224A  503E               	movf	___flmul@sign^0,w,c
  7879   00224C  1248               	iorwf	(___flmul@prod+3)^0,f,c
  7880   00224E  C045  F032         	movff	___flmul@prod,?___flmul
  7881   002252  C046  F033         	movff	___flmul@prod+1,?___flmul+1
  7882   002256  C047  F034         	movff	___flmul@prod+2,?___flmul+2
  7883   00225A  C048  F035         	movff	___flmul@prod+3,?___flmul+3
  7884   00225E                     l1100:
  7885   00225E  0012               	return		;funcret
  7886   002260                     __end_of___flmul:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function ___flge *****************
  7890 ;; Defined at:
  7891 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  ff1             4    0[COMRAM] unsigned char 
  7894 ;;  ff2             4    4[COMRAM] unsigned char 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;		None               void
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;Total ram usage:       12 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 1
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_Colour_decider
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text42
  7921   003518                     __ptext42:
  7922                           	callstack 0
  7923   003518                     ___flge:
  7924                           	callstack 28
  7925   003518  0E00               	movlw	0
  7926   00351A  1401               	andwf	___flge@ff1^0,w,c
  7927   00351C  6E09               	movwf	??___flge^0,c
  7928   00351E  0E00               	movlw	0
  7929   003520  1402               	andwf	(___flge@ff1+1)^0,w,c
  7930   003522  6E0A               	movwf	(??___flge+1)^0,c
  7931   003524  0E80               	movlw	128
  7932   003526  1403               	andwf	(___flge@ff1+2)^0,w,c
  7933   003528  6E0B               	movwf	(??___flge+2)^0,c
  7934   00352A  0E7F               	movlw	127
  7935   00352C  1404               	andwf	(___flge@ff1+3)^0,w,c
  7936   00352E  6E0C               	movwf	(??___flge+3)^0,c
  7937   003530  5009               	movf	??___flge^0,w,c
  7938   003532  100A               	iorwf	(??___flge+1)^0,w,c
  7939   003534  100B               	iorwf	(??___flge+2)^0,w,c
  7940   003536  100C               	iorwf	(??___flge+3)^0,w,c
  7941   003538  A4D8               	btfss	status,2,c
  7942   00353A  EFA1  F01A         	goto	u3371
  7943   00353E  EFA3  F01A         	goto	u3370
  7944   003542                     u3371:
  7945   003542  EFAB  F01A         	goto	l3562
  7946   003546                     u3370:
  7947   003546  0E00               	movlw	0
  7948   003548  6E01               	movwf	___flge@ff1^0,c
  7949   00354A  0E00               	movlw	0
  7950   00354C  6E02               	movwf	(___flge@ff1+1)^0,c
  7951   00354E  0E00               	movlw	0
  7952   003550  6E03               	movwf	(___flge@ff1+2)^0,c
  7953   003552  0E00               	movlw	0
  7954   003554  6E04               	movwf	(___flge@ff1+3)^0,c
  7955   003556                     l3562:
  7956   003556  0E00               	movlw	0
  7957   003558  1405               	andwf	___flge@ff2^0,w,c
  7958   00355A  6E09               	movwf	??___flge^0,c
  7959   00355C  0E00               	movlw	0
  7960   00355E  1406               	andwf	(___flge@ff2+1)^0,w,c
  7961   003560  6E0A               	movwf	(??___flge+1)^0,c
  7962   003562  0E80               	movlw	128
  7963   003564  1407               	andwf	(___flge@ff2+2)^0,w,c
  7964   003566  6E0B               	movwf	(??___flge+2)^0,c
  7965   003568  0E7F               	movlw	127
  7966   00356A  1408               	andwf	(___flge@ff2+3)^0,w,c
  7967   00356C  6E0C               	movwf	(??___flge+3)^0,c
  7968   00356E  5009               	movf	??___flge^0,w,c
  7969   003570  100A               	iorwf	(??___flge+1)^0,w,c
  7970   003572  100B               	iorwf	(??___flge+2)^0,w,c
  7971   003574  100C               	iorwf	(??___flge+3)^0,w,c
  7972   003576  A4D8               	btfss	status,2,c
  7973   003578  EFC0  F01A         	goto	u3381
  7974   00357C  EFC2  F01A         	goto	u3380
  7975   003580                     u3381:
  7976   003580  EFCA  F01A         	goto	l3566
  7977   003584                     u3380:
  7978   003584  0E00               	movlw	0
  7979   003586  6E05               	movwf	___flge@ff2^0,c
  7980   003588  0E00               	movlw	0
  7981   00358A  6E06               	movwf	(___flge@ff2+1)^0,c
  7982   00358C  0E00               	movlw	0
  7983   00358E  6E07               	movwf	(___flge@ff2+2)^0,c
  7984   003590  0E00               	movlw	0
  7985   003592  6E08               	movwf	(___flge@ff2+3)^0,c
  7986   003594                     l3566:
  7987   003594  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7988   003596  EFCF  F01A         	goto	u3391
  7989   00359A  EFD1  F01A         	goto	u3390
  7990   00359E                     u3391:
  7991   00359E  EFDA  F01A         	goto	l3570
  7992   0035A2                     u3390:
  7993   0035A2  6C01               	negf	___flge@ff1^0,c
  7994   0035A4  1E02               	comf	(___flge@ff1+1)^0,f,c
  7995   0035A6  B0D8               	btfsc	status,0,c
  7996   0035A8  2A02               	incf	(___flge@ff1+1)^0,f,c
  7997   0035AA  1E03               	comf	(___flge@ff1+2)^0,f,c
  7998   0035AC  B0D8               	btfsc	status,0,c
  7999   0035AE  2A03               	incf	(___flge@ff1+2)^0,f,c
  8000   0035B0  0E80               	movlw	128
  8001   0035B2  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8002   0035B4                     l3570:
  8003   0035B4  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8004   0035B6  EFDF  F01A         	goto	u3401
  8005   0035BA  EFE1  F01A         	goto	u3400
  8006   0035BE                     u3401:
  8007   0035BE  EFEA  F01A         	goto	l747
  8008   0035C2                     u3400:
  8009   0035C2  6C05               	negf	___flge@ff2^0,c
  8010   0035C4  1E06               	comf	(___flge@ff2+1)^0,f,c
  8011   0035C6  B0D8               	btfsc	status,0,c
  8012   0035C8  2A06               	incf	(___flge@ff2+1)^0,f,c
  8013   0035CA  1E07               	comf	(___flge@ff2+2)^0,f,c
  8014   0035CC  B0D8               	btfsc	status,0,c
  8015   0035CE  2A07               	incf	(___flge@ff2+2)^0,f,c
  8016   0035D0  0E80               	movlw	128
  8017   0035D2  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8018   0035D4                     l747:
  8019   0035D4  0E00               	movlw	0
  8020   0035D6  1A01               	xorwf	___flge@ff1^0,f,c
  8021   0035D8  0E00               	movlw	0
  8022   0035DA  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8023   0035DC  0E00               	movlw	0
  8024   0035DE  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8025   0035E0  0E80               	movlw	128
  8026   0035E2  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8027   0035E4  0E00               	movlw	0
  8028   0035E6  1A05               	xorwf	___flge@ff2^0,f,c
  8029   0035E8  0E00               	movlw	0
  8030   0035EA  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8031   0035EC  0E00               	movlw	0
  8032   0035EE  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8033   0035F0  0E80               	movlw	128
  8034   0035F2  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8035   0035F4  5005               	movf	___flge@ff2^0,w,c
  8036   0035F6  5C01               	subwf	___flge@ff1^0,w,c
  8037   0035F8  5006               	movf	(___flge@ff2+1)^0,w,c
  8038   0035FA  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8039   0035FC  5007               	movf	(___flge@ff2+2)^0,w,c
  8040   0035FE  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8041   003600  5008               	movf	(___flge@ff2+3)^0,w,c
  8042   003602  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8043   003604  B0D8               	btfsc	status,0,c
  8044   003606  EF07  F01B         	goto	u3411
  8045   00360A  EF09  F01B         	goto	u3410
  8046   00360E                     u3411:
  8047   00360E  EF0C  F01B         	goto	l3576
  8048   003612                     u3410:
  8049   003612  90D8               	bcf	status,0,c
  8050   003614  EF0D  F01B         	goto	l752
  8051   003618                     l3576:
  8052   003618  80D8               	bsf	status,0,c
  8053   00361A                     l752:
  8054   00361A  0012               	return		;funcret
  8055   00361C                     __end_of___flge:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function ___fleq *****************
  8059 ;; Defined at:
  8060 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  ff1             4   24[COMRAM] unsigned char 
  8063 ;;  ff2             4   28[COMRAM] unsigned char 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;		None               void
  8068 ;; Registers used:
  8069 ;;		wreg, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8075 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;Total ram usage:       12 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 1
  8082 ;; This function calls:
  8083 ;;		Nothing
  8084 ;; This function is called by:
  8085 ;;		_Colour_decider
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text43
  8090   0036E6                     __ptext43:
  8091                           	callstack 0
  8092   0036E6                     ___fleq:
  8093                           	callstack 28
  8094   0036E6  0E00               	movlw	0
  8095   0036E8  1419               	andwf	___fleq@ff1^0,w,c
  8096   0036EA  6E21               	movwf	??___fleq^0,c
  8097   0036EC  0E00               	movlw	0
  8098   0036EE  141A               	andwf	(___fleq@ff1+1)^0,w,c
  8099   0036F0  6E22               	movwf	(??___fleq+1)^0,c
  8100   0036F2  0E80               	movlw	128
  8101   0036F4  141B               	andwf	(___fleq@ff1+2)^0,w,c
  8102   0036F6  6E23               	movwf	(??___fleq+2)^0,c
  8103   0036F8  0E7F               	movlw	127
  8104   0036FA  141C               	andwf	(___fleq@ff1+3)^0,w,c
  8105   0036FC  6E24               	movwf	(??___fleq+3)^0,c
  8106   0036FE  5021               	movf	??___fleq^0,w,c
  8107   003700  1022               	iorwf	(??___fleq+1)^0,w,c
  8108   003702  1023               	iorwf	(??___fleq+2)^0,w,c
  8109   003704  1024               	iorwf	(??___fleq+3)^0,w,c
  8110   003706  A4D8               	btfss	status,2,c
  8111   003708  EF88  F01B         	goto	u3341
  8112   00370C  EF8A  F01B         	goto	u3340
  8113   003710                     u3341:
  8114   003710  EF92  F01B         	goto	l3546
  8115   003714                     u3340:
  8116   003714  0E00               	movlw	0
  8117   003716  6E19               	movwf	___fleq@ff1^0,c
  8118   003718  0E00               	movlw	0
  8119   00371A  6E1A               	movwf	(___fleq@ff1+1)^0,c
  8120   00371C  0E00               	movlw	0
  8121   00371E  6E1B               	movwf	(___fleq@ff1+2)^0,c
  8122   003720  0E00               	movlw	0
  8123   003722  6E1C               	movwf	(___fleq@ff1+3)^0,c
  8124   003724                     l3546:
  8125   003724  0E00               	movlw	0
  8126   003726  141D               	andwf	___fleq@ff2^0,w,c
  8127   003728  6E21               	movwf	??___fleq^0,c
  8128   00372A  0E00               	movlw	0
  8129   00372C  141E               	andwf	(___fleq@ff2+1)^0,w,c
  8130   00372E  6E22               	movwf	(??___fleq+1)^0,c
  8131   003730  0E80               	movlw	128
  8132   003732  141F               	andwf	(___fleq@ff2+2)^0,w,c
  8133   003734  6E23               	movwf	(??___fleq+2)^0,c
  8134   003736  0E7F               	movlw	127
  8135   003738  1420               	andwf	(___fleq@ff2+3)^0,w,c
  8136   00373A  6E24               	movwf	(??___fleq+3)^0,c
  8137   00373C  5021               	movf	??___fleq^0,w,c
  8138   00373E  1022               	iorwf	(??___fleq+1)^0,w,c
  8139   003740  1023               	iorwf	(??___fleq+2)^0,w,c
  8140   003742  1024               	iorwf	(??___fleq+3)^0,w,c
  8141   003744  A4D8               	btfss	status,2,c
  8142   003746  EFA7  F01B         	goto	u3351
  8143   00374A  EFA9  F01B         	goto	u3350
  8144   00374E                     u3351:
  8145   00374E  EFB1  F01B         	goto	l3550
  8146   003752                     u3350:
  8147   003752  0E00               	movlw	0
  8148   003754  6E1D               	movwf	___fleq@ff2^0,c
  8149   003756  0E00               	movlw	0
  8150   003758  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8151   00375A  0E00               	movlw	0
  8152   00375C  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8153   00375E  0E00               	movlw	0
  8154   003760  6E20               	movwf	(___fleq@ff2+3)^0,c
  8155   003762                     l3550:
  8156   003762  501D               	movf	___fleq@ff2^0,w,c
  8157   003764  1819               	xorwf	___fleq@ff1^0,w,c
  8158   003766  E10F               	bnz	u3360
  8159   003768  501E               	movf	(___fleq@ff2+1)^0,w,c
  8160   00376A  181A               	xorwf	(___fleq@ff1+1)^0,w,c
  8161   00376C  E10C               	bnz	u3360
  8162   00376E  501F               	movf	(___fleq@ff2+2)^0,w,c
  8163   003770  181B               	xorwf	(___fleq@ff1+2)^0,w,c
  8164   003772  E109               	bnz	u3360
  8165   003774  5020               	movf	(___fleq@ff2+3)^0,w,c
  8166   003776  181C               	xorwf	(___fleq@ff1+3)^0,w,c
  8167   003778  B4D8               	btfsc	status,2,c
  8168   00377A  EFC1  F01B         	goto	u3361
  8169   00377E  EFC3  F01B         	goto	u3360
  8170   003782                     u3361:
  8171   003782  EFC6  F01B         	goto	l3554
  8172   003786                     u3360:
  8173   003786  90D8               	bcf	status,0,c
  8174   003788  EFC7  F01B         	goto	l741
  8175   00378C                     l3554:
  8176   00378C  80D8               	bsf	status,0,c
  8177   00378E                     l741:
  8178   00378E  0012               	return		;funcret
  8179   003790                     __end_of___fleq:
  8180                           	callstack 0
  8181                           
  8182 ;; *************** function ___fldiv *****************
  8183 ;; Defined at:
  8184 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  b               4   24[COMRAM] unsigned char 
  8187 ;;  a               4   28[COMRAM] unsigned char 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  grs             4   43[COMRAM] unsigned long 
  8190 ;;  rem             4   36[COMRAM] unsigned long 
  8191 ;;  new_exp         2   41[COMRAM] short 
  8192 ;;  aexp            1   48[COMRAM] unsigned char 
  8193 ;;  bexp            1   47[COMRAM] unsigned char 
  8194 ;;  sign            1   40[COMRAM] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  4   24[COMRAM] unsigned char 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8204 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8208 ;;Total ram usage:       25 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; Hardware stack levels required when called: 1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_colour_rel
  8215 ;;		_Colour_decider
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text44
  8220   002260                     __ptext44:
  8221                           	callstack 0
  8222   002260                     ___fldiv:
  8223                           	callstack 28
  8224   002260  501C               	movf	(___fldiv@b+3)^0,w,c
  8225   002262  0B80               	andlw	128
  8226   002264  6E29               	movwf	___fldiv@sign^0,c
  8227   002266  501C               	movf	(___fldiv@b+3)^0,w,c
  8228   002268  241C               	addwf	(___fldiv@b+3)^0,w,c
  8229   00226A  6E30               	movwf	___fldiv@bexp^0,c
  8230   00226C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  8231   00226E  EF3B  F011         	goto	u2921
  8232   002272  EF3D  F011         	goto	u2920
  8233   002276                     u2921:
  8234   002276  EF3E  F011         	goto	l3274
  8235   00227A                     u2920:
  8236   00227A  8030               	bsf	___fldiv@bexp^0,0,c
  8237   00227C                     l3274:
  8238   00227C  5030               	movf	___fldiv@bexp^0,w,c
  8239   00227E  B4D8               	btfsc	status,2,c
  8240   002280  EF44  F011         	goto	u2931
  8241   002284  EF46  F011         	goto	u2930
  8242   002288                     u2931:
  8243   002288  EF5B  F011         	goto	l3284
  8244   00228C                     u2930:
  8245   00228C  2830               	incf	___fldiv@bexp^0,w,c
  8246   00228E  A4D8               	btfss	status,2,c
  8247   002290  EF4C  F011         	goto	u2941
  8248   002294  EF4E  F011         	goto	u2940
  8249   002298                     u2941:
  8250   002298  EF56  F011         	goto	l3280
  8251   00229C                     u2940:
  8252   00229C  0E00               	movlw	0
  8253   00229E  6E19               	movwf	___fldiv@b^0,c
  8254   0022A0  0E00               	movlw	0
  8255   0022A2  6E1A               	movwf	(___fldiv@b+1)^0,c
  8256   0022A4  0E00               	movlw	0
  8257   0022A6  6E1B               	movwf	(___fldiv@b+2)^0,c
  8258   0022A8  0E00               	movlw	0
  8259   0022AA  6E1C               	movwf	(___fldiv@b+3)^0,c
  8260   0022AC                     l3280:
  8261   0022AC  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  8262   0022AE  0E00               	movlw	0
  8263   0022B0  6E1C               	movwf	(___fldiv@b+3)^0,c
  8264   0022B2  EF63  F011         	goto	l3286
  8265   0022B6                     l3284:
  8266   0022B6  0E00               	movlw	0
  8267   0022B8  6E19               	movwf	___fldiv@b^0,c
  8268   0022BA  0E00               	movlw	0
  8269   0022BC  6E1A               	movwf	(___fldiv@b+1)^0,c
  8270   0022BE  0E00               	movlw	0
  8271   0022C0  6E1B               	movwf	(___fldiv@b+2)^0,c
  8272   0022C2  0E00               	movlw	0
  8273   0022C4  6E1C               	movwf	(___fldiv@b+3)^0,c
  8274   0022C6                     l3286:
  8275   0022C6  5020               	movf	(___fldiv@a+3)^0,w,c
  8276   0022C8  0B80               	andlw	128
  8277   0022CA  1A29               	xorwf	___fldiv@sign^0,f,c
  8278   0022CC  5020               	movf	(___fldiv@a+3)^0,w,c
  8279   0022CE  2420               	addwf	(___fldiv@a+3)^0,w,c
  8280   0022D0  6E31               	movwf	___fldiv@aexp^0,c
  8281   0022D2  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  8282   0022D4  EF6E  F011         	goto	u2951
  8283   0022D8  EF70  F011         	goto	u2950
  8284   0022DC                     u2951:
  8285   0022DC  EF71  F011         	goto	l3294
  8286   0022E0                     u2950:
  8287   0022E0  8031               	bsf	___fldiv@aexp^0,0,c
  8288   0022E2                     l3294:
  8289   0022E2  5031               	movf	___fldiv@aexp^0,w,c
  8290   0022E4  B4D8               	btfsc	status,2,c
  8291   0022E6  EF77  F011         	goto	u2961
  8292   0022EA  EF79  F011         	goto	u2960
  8293   0022EE                     u2961:
  8294   0022EE  EF8E  F011         	goto	l3304
  8295   0022F2                     u2960:
  8296   0022F2  2831               	incf	___fldiv@aexp^0,w,c
  8297   0022F4  A4D8               	btfss	status,2,c
  8298   0022F6  EF7F  F011         	goto	u2971
  8299   0022FA  EF81  F011         	goto	u2970
  8300   0022FE                     u2971:
  8301   0022FE  EF89  F011         	goto	l3300
  8302   002302                     u2970:
  8303   002302  0E00               	movlw	0
  8304   002304  6E1D               	movwf	___fldiv@a^0,c
  8305   002306  0E00               	movlw	0
  8306   002308  6E1E               	movwf	(___fldiv@a+1)^0,c
  8307   00230A  0E00               	movlw	0
  8308   00230C  6E1F               	movwf	(___fldiv@a+2)^0,c
  8309   00230E  0E00               	movlw	0
  8310   002310  6E20               	movwf	(___fldiv@a+3)^0,c
  8311   002312                     l3300:
  8312   002312  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  8313   002314  0E00               	movlw	0
  8314   002316  6E20               	movwf	(___fldiv@a+3)^0,c
  8315   002318  EF96  F011         	goto	l3306
  8316   00231C                     l3304:
  8317   00231C  0E00               	movlw	0
  8318   00231E  6E1D               	movwf	___fldiv@a^0,c
  8319   002320  0E00               	movlw	0
  8320   002322  6E1E               	movwf	(___fldiv@a+1)^0,c
  8321   002324  0E00               	movlw	0
  8322   002326  6E1F               	movwf	(___fldiv@a+2)^0,c
  8323   002328  0E00               	movlw	0
  8324   00232A  6E20               	movwf	(___fldiv@a+3)^0,c
  8325   00232C                     l3306:
  8326   00232C  501D               	movf	___fldiv@a^0,w,c
  8327   00232E  101E               	iorwf	(___fldiv@a+1)^0,w,c
  8328   002330  101F               	iorwf	(___fldiv@a+2)^0,w,c
  8329   002332  1020               	iorwf	(___fldiv@a+3)^0,w,c
  8330   002334  A4D8               	btfss	status,2,c
  8331   002336  EF9F  F011         	goto	u2981
  8332   00233A  EFA1  F011         	goto	u2980
  8333   00233E                     u2981:
  8334   00233E  EFB9  F011         	goto	l3318
  8335   002342                     u2980:
  8336   002342  0E00               	movlw	0
  8337   002344  6E19               	movwf	___fldiv@b^0,c
  8338   002346  0E00               	movlw	0
  8339   002348  6E1A               	movwf	(___fldiv@b+1)^0,c
  8340   00234A  0E00               	movlw	0
  8341   00234C  6E1B               	movwf	(___fldiv@b+2)^0,c
  8342   00234E  0E00               	movlw	0
  8343   002350  6E1C               	movwf	(___fldiv@b+3)^0,c
  8344   002352  0E80               	movlw	128
  8345   002354  121B               	iorwf	(___fldiv@b+2)^0,f,c
  8346   002356  0E7F               	movlw	127
  8347   002358  121C               	iorwf	(___fldiv@b+3)^0,f,c
  8348   00235A                     l3312:
  8349   00235A  5029               	movf	___fldiv@sign^0,w,c
  8350   00235C  121C               	iorwf	(___fldiv@b+3)^0,f,c
  8351   00235E  C019  F019         	movff	___fldiv@b,?___fldiv
  8352   002362  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  8353   002366  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  8354   00236A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  8355   00236E  EFFC  F012         	goto	l1064
  8356   002372                     l3318:
  8357   002372  5030               	movf	___fldiv@bexp^0,w,c
  8358   002374  A4D8               	btfss	status,2,c
  8359   002376  EFBF  F011         	goto	u2991
  8360   00237A  EFC1  F011         	goto	u2990
  8361   00237E                     u2991:
  8362   00237E  EFCB  F011         	goto	l3326
  8363   002382                     u2990:
  8364   002382  0E00               	movlw	0
  8365   002384  6E19               	movwf	?___fldiv^0,c
  8366   002386  0E00               	movlw	0
  8367   002388  6E1A               	movwf	(?___fldiv+1)^0,c
  8368   00238A  0E00               	movlw	0
  8369   00238C  6E1B               	movwf	(?___fldiv+2)^0,c
  8370   00238E  0E00               	movlw	0
  8371   002390  6E1C               	movwf	(?___fldiv+3)^0,c
  8372   002392  EFFC  F012         	goto	l1064
  8373   002396                     l3326:
  8374   002396  5031               	movf	___fldiv@aexp^0,w,c
  8375   002398  C030  F021         	movff	___fldiv@bexp,??___fldiv
  8376   00239C  6A22               	clrf	(??___fldiv+1)^0,c
  8377   00239E  5E21               	subwf	??___fldiv^0,f,c
  8378   0023A0  0E00               	movlw	0
  8379   0023A2  5A22               	subwfb	(??___fldiv+1)^0,f,c
  8380   0023A4  0E7F               	movlw	127
  8381   0023A6  2421               	addwf	??___fldiv^0,w,c
  8382   0023A8  6E2A               	movwf	___fldiv@new_exp^0,c
  8383   0023AA  0E00               	movlw	0
  8384   0023AC  2022               	addwfc	(??___fldiv+1)^0,w,c
  8385   0023AE  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  8386   0023B0  C019  F025         	movff	___fldiv@b,___fldiv@rem
  8387   0023B4  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  8388   0023B8  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  8389   0023BC  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  8390   0023C0  0E00               	movlw	0
  8391   0023C2  6E19               	movwf	___fldiv@b^0,c
  8392   0023C4  0E00               	movlw	0
  8393   0023C6  6E1A               	movwf	(___fldiv@b+1)^0,c
  8394   0023C8  0E00               	movlw	0
  8395   0023CA  6E1B               	movwf	(___fldiv@b+2)^0,c
  8396   0023CC  0E00               	movlw	0
  8397   0023CE  6E1C               	movwf	(___fldiv@b+3)^0,c
  8398   0023D0  0E00               	movlw	0
  8399   0023D2  6E2C               	movwf	___fldiv@grs^0,c
  8400   0023D4  0E00               	movlw	0
  8401   0023D6  6E2D               	movwf	(___fldiv@grs+1)^0,c
  8402   0023D8  0E00               	movlw	0
  8403   0023DA  6E2E               	movwf	(___fldiv@grs+2)^0,c
  8404   0023DC  0E00               	movlw	0
  8405   0023DE  6E2F               	movwf	(___fldiv@grs+3)^0,c
  8406   0023E0  0E00               	movlw	0
  8407   0023E2  6E31               	movwf	___fldiv@aexp^0,c
  8408   0023E4  EF2C  F012         	goto	l1066
  8409   0023E8                     l3336:
  8410   0023E8  5031               	movf	___fldiv@aexp^0,w,c
  8411   0023EA  B4D8               	btfsc	status,2,c
  8412   0023EC  EFFA  F011         	goto	u3001
  8413   0023F0  EFFC  F011         	goto	u3000
  8414   0023F4                     u3001:
  8415   0023F4  EF13  F012         	goto	l3344
  8416   0023F8                     u3000:
  8417   0023F8  90D8               	bcf	status,0,c
  8418   0023FA  3625               	rlcf	___fldiv@rem^0,f,c
  8419   0023FC  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  8420   0023FE  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  8421   002400  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  8422   002402  90D8               	bcf	status,0,c
  8423   002404  3619               	rlcf	___fldiv@b^0,f,c
  8424   002406  361A               	rlcf	(___fldiv@b+1)^0,f,c
  8425   002408  361B               	rlcf	(___fldiv@b+2)^0,f,c
  8426   00240A  361C               	rlcf	(___fldiv@b+3)^0,f,c
  8427   00240C  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  8428   00240E  EF0B  F012         	goto	u3011
  8429   002412  EF0D  F012         	goto	u3010
  8430   002416                     u3011:
  8431   002416  EF0E  F012         	goto	l1069
  8432   00241A                     u3010:
  8433   00241A  8019               	bsf	___fldiv@b^0,0,c
  8434   00241C                     l1069:
  8435   00241C  90D8               	bcf	status,0,c
  8436   00241E  362C               	rlcf	___fldiv@grs^0,f,c
  8437   002420  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  8438   002422  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  8439   002424  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  8440   002426                     l3344:
  8441   002426  501D               	movf	___fldiv@a^0,w,c
  8442   002428  5C25               	subwf	___fldiv@rem^0,w,c
  8443   00242A  501E               	movf	(___fldiv@a+1)^0,w,c
  8444   00242C  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  8445   00242E  501F               	movf	(___fldiv@a+2)^0,w,c
  8446   002430  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  8447   002432  5020               	movf	(___fldiv@a+3)^0,w,c
  8448   002434  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  8449   002436  A0D8               	btfss	status,0,c
  8450   002438  EF20  F012         	goto	u3021
  8451   00243C  EF22  F012         	goto	u3020
  8452   002440                     u3021:
  8453   002440  EF2B  F012         	goto	l3350
  8454   002444                     u3020:
  8455   002444  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  8456   002446  501D               	movf	___fldiv@a^0,w,c
  8457   002448  5E25               	subwf	___fldiv@rem^0,f,c
  8458   00244A  501E               	movf	(___fldiv@a+1)^0,w,c
  8459   00244C  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  8460   00244E  501F               	movf	(___fldiv@a+2)^0,w,c
  8461   002450  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  8462   002452  5020               	movf	(___fldiv@a+3)^0,w,c
  8463   002454  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  8464   002456                     l3350:
  8465   002456  2A31               	incf	___fldiv@aexp^0,f,c
  8466   002458                     l1066:
  8467   002458  0E19               	movlw	25
  8468   00245A  6431               	cpfsgt	___fldiv@aexp^0,c
  8469   00245C  EF32  F012         	goto	u3031
  8470   002460  EF34  F012         	goto	u3030
  8471   002464                     u3031:
  8472   002464  EFF4  F011         	goto	l3336
  8473   002468                     u3030:
  8474   002468  5025               	movf	___fldiv@rem^0,w,c
  8475   00246A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  8476   00246C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  8477   00246E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  8478   002470  B4D8               	btfsc	status,2,c
  8479   002472  EF3D  F012         	goto	u3041
  8480   002476  EF3F  F012         	goto	u3040
  8481   00247A                     u3041:
  8482   00247A  EF57  F012         	goto	l3362
  8483   00247E                     u3040:
  8484   00247E  802C               	bsf	___fldiv@grs^0,0,c
  8485   002480  EF57  F012         	goto	l3362
  8486   002484                     l3356:
  8487   002484  90D8               	bcf	status,0,c
  8488   002486  3619               	rlcf	___fldiv@b^0,f,c
  8489   002488  361A               	rlcf	(___fldiv@b+1)^0,f,c
  8490   00248A  361B               	rlcf	(___fldiv@b+2)^0,f,c
  8491   00248C  361C               	rlcf	(___fldiv@b+3)^0,f,c
  8492   00248E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  8493   002490  EF4C  F012         	goto	u3051
  8494   002494  EF4E  F012         	goto	u3050
  8495   002498                     u3051:
  8496   002498  EF4F  F012         	goto	l1075
  8497   00249C                     u3050:
  8498   00249C  8019               	bsf	___fldiv@b^0,0,c
  8499   00249E                     l1075:
  8500   00249E  90D8               	bcf	status,0,c
  8501   0024A0  362C               	rlcf	___fldiv@grs^0,f,c
  8502   0024A2  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  8503   0024A4  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  8504   0024A6  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  8505   0024A8  062A               	decf	___fldiv@new_exp^0,f,c
  8506   0024AA  A0D8               	btfss	status,0,c
  8507   0024AC  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  8508   0024AE                     l3362:
  8509   0024AE  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  8510   0024B0  EF5C  F012         	goto	u3061
  8511   0024B4  EF5E  F012         	goto	u3060
  8512   0024B8                     u3061:
  8513   0024B8  EF42  F012         	goto	l3356
  8514   0024BC                     u3060:
  8515   0024BC  0E00               	movlw	0
  8516   0024BE  6E31               	movwf	___fldiv@aexp^0,c
  8517   0024C0  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  8518   0024C2  EF65  F012         	goto	u3071
  8519   0024C6  EF67  F012         	goto	u3070
  8520   0024CA                     u3071:
  8521   0024CA  EF8B  F012         	goto	l1077
  8522   0024CE                     u3070:
  8523   0024CE  0EFF               	movlw	255
  8524   0024D0  142C               	andwf	___fldiv@grs^0,w,c
  8525   0024D2  6E21               	movwf	??___fldiv^0,c
  8526   0024D4  0EFF               	movlw	255
  8527   0024D6  142D               	andwf	(___fldiv@grs+1)^0,w,c
  8528   0024D8  6E22               	movwf	(??___fldiv+1)^0,c
  8529   0024DA  0EFF               	movlw	255
  8530   0024DC  142E               	andwf	(___fldiv@grs+2)^0,w,c
  8531   0024DE  6E23               	movwf	(??___fldiv+2)^0,c
  8532   0024E0  0E7F               	movlw	127
  8533   0024E2  142F               	andwf	(___fldiv@grs+3)^0,w,c
  8534   0024E4  6E24               	movwf	(??___fldiv+3)^0,c
  8535   0024E6  5021               	movf	??___fldiv^0,w,c
  8536   0024E8  1022               	iorwf	(??___fldiv+1)^0,w,c
  8537   0024EA  1023               	iorwf	(??___fldiv+2)^0,w,c
  8538   0024EC  1024               	iorwf	(??___fldiv+3)^0,w,c
  8539   0024EE  B4D8               	btfsc	status,2,c
  8540   0024F0  EF7C  F012         	goto	u3081
  8541   0024F4  EF7E  F012         	goto	u3080
  8542   0024F8                     u3081:
  8543   0024F8  EF82  F012         	goto	l1078
  8544   0024FC                     u3080:
  8545   0024FC                     l3370:
  8546   0024FC  0E01               	movlw	1
  8547   0024FE  6E31               	movwf	___fldiv@aexp^0,c
  8548   002500  EF8B  F012         	goto	l1077
  8549   002504                     l1078:
  8550   002504  A019               	btfss	___fldiv@b^0,0,c
  8551   002506  EF87  F012         	goto	u3091
  8552   00250A  EF89  F012         	goto	u3090
  8553   00250E                     u3091:
  8554   00250E  EF8B  F012         	goto	l1077
  8555   002512                     u3090:
  8556   002512  EF7E  F012         	goto	l3370
  8557   002516                     l1077:
  8558   002516  5031               	movf	___fldiv@aexp^0,w,c
  8559   002518  B4D8               	btfsc	status,2,c
  8560   00251A  EF91  F012         	goto	u3101
  8561   00251E  EF93  F012         	goto	u3100
  8562   002522                     u3101:
  8563   002522  EFB7  F012         	goto	l3382
  8564   002526                     u3100:
  8565   002526  0E01               	movlw	1
  8566   002528  2619               	addwf	___fldiv@b^0,f,c
  8567   00252A  0E00               	movlw	0
  8568   00252C  221A               	addwfc	(___fldiv@b+1)^0,f,c
  8569   00252E  221B               	addwfc	(___fldiv@b+2)^0,f,c
  8570   002530  221C               	addwfc	(___fldiv@b+3)^0,f,c
  8571   002532  A01C               	btfss	(___fldiv@b+3)^0,0,c
  8572   002534  EF9E  F012         	goto	u3111
  8573   002538  EFA0  F012         	goto	u3110
  8574   00253C                     u3111:
  8575   00253C  EFB7  F012         	goto	l3382
  8576   002540                     u3110:
  8577   002540  C019  F021         	movff	___fldiv@b,??___fldiv
  8578   002544  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  8579   002548  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  8580   00254C  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  8581   002550  3424               	rlcf	(??___fldiv+3)^0,w,c
  8582   002552  3224               	rrcf	(??___fldiv+3)^0,f,c
  8583   002554  3223               	rrcf	(??___fldiv+2)^0,f,c
  8584   002556  3222               	rrcf	(??___fldiv+1)^0,f,c
  8585   002558  3221               	rrcf	??___fldiv^0,f,c
  8586   00255A  C021  F019         	movff	??___fldiv,___fldiv@b
  8587   00255E  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  8588   002562  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  8589   002566  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  8590   00256A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  8591   00256C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  8592   00256E                     l3382:
  8593   00256E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8594   002570  EFC2  F012         	goto	u3121
  8595   002574  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  8596   002576  E108               	bnz	u3120
  8597   002578  282A               	incf	___fldiv@new_exp^0,w,c
  8598   00257A  A0D8               	btfss	status,0,c
  8599   00257C  EFC2  F012         	goto	u3121
  8600   002580  EFC4  F012         	goto	u3120
  8601   002584                     u3121:
  8602   002584  EFCF  F012         	goto	l3386
  8603   002588                     u3120:
  8604   002588  0E00               	movlw	0
  8605   00258A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  8606   00258C  682A               	setf	___fldiv@new_exp^0,c
  8607   00258E  0E00               	movlw	0
  8608   002590  6E19               	movwf	___fldiv@b^0,c
  8609   002592  0E00               	movlw	0
  8610   002594  6E1A               	movwf	(___fldiv@b+1)^0,c
  8611   002596  0E00               	movlw	0
  8612   002598  6E1B               	movwf	(___fldiv@b+2)^0,c
  8613   00259A  0E00               	movlw	0
  8614   00259C  6E1C               	movwf	(___fldiv@b+3)^0,c
  8615   00259E                     l3386:
  8616   00259E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8617   0025A0  EFDC  F012         	goto	u3130
  8618   0025A4  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  8619   0025A6  E106               	bnz	u3131
  8620   0025A8  042A               	decf	___fldiv@new_exp^0,w,c
  8621   0025AA  B0D8               	btfsc	status,0,c
  8622   0025AC  EFDA  F012         	goto	u3131
  8623   0025B0  EFDC  F012         	goto	u3130
  8624   0025B4                     u3131:
  8625   0025B4  EFEA  F012         	goto	l3390
  8626   0025B8                     u3130:
  8627   0025B8  0E00               	movlw	0
  8628   0025BA  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  8629   0025BC  0E00               	movlw	0
  8630   0025BE  6E2A               	movwf	___fldiv@new_exp^0,c
  8631   0025C0  0E00               	movlw	0
  8632   0025C2  6E19               	movwf	___fldiv@b^0,c
  8633   0025C4  0E00               	movlw	0
  8634   0025C6  6E1A               	movwf	(___fldiv@b+1)^0,c
  8635   0025C8  0E00               	movlw	0
  8636   0025CA  6E1B               	movwf	(___fldiv@b+2)^0,c
  8637   0025CC  0E00               	movlw	0
  8638   0025CE  6E1C               	movwf	(___fldiv@b+3)^0,c
  8639   0025D0  0E00               	movlw	0
  8640   0025D2  6E29               	movwf	___fldiv@sign^0,c
  8641   0025D4                     l3390:
  8642   0025D4  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  8643   0025D8  A030               	btfss	___fldiv@bexp^0,0,c
  8644   0025DA  EFF1  F012         	goto	u3141
  8645   0025DE  EFF3  F012         	goto	u3140
  8646   0025E2                     u3141:
  8647   0025E2  EFF6  F012         	goto	l3396
  8648   0025E6                     u3140:
  8649   0025E6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  8650   0025E8  EFF7  F012         	goto	l3398
  8651   0025EC                     l3396:
  8652   0025EC  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  8653   0025EE                     l3398:
  8654   0025EE  90D8               	bcf	status,0,c
  8655   0025F0  3030               	rrcf	___fldiv@bexp^0,w,c
  8656   0025F2  6E1C               	movwf	(___fldiv@b+3)^0,c
  8657   0025F4  EFAD  F011         	goto	l3312
  8658   0025F8                     l1064:
  8659   0025F8  0012               	return		;funcret
  8660   0025FA                     __end_of___fldiv:
  8661                           	callstack 0
  8662                           
  8663 ;; *************** function _BlueMove *****************
  8664 ;; Defined at:
  8665 ;;		line 229 in file "dc_motor.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8668 ;;		 -> motorL(9), 
  8669 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8670 ;;		 -> motorR(9), 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;Total ram usage:        4 bytes
  8687 ;; Hardware stack levels used: 1
  8688 ;; Hardware stack levels required when called: 5
  8689 ;; This function calls:
  8690 ;;		_reverseDetect
  8691 ;;		_turnRight45
  8692 ;; This function is called by:
  8693 ;;		_main
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text45
  8698   003BD4                     __ptext45:
  8699                           	callstack 0
  8700   003BD4                     _BlueMove:
  8701                           	callstack 25
  8702   003BD4                     
  8703                           ;dc_motor.c: 230:     reverseDetect(&motorL, &motorR);
  8704   003BD4  0EF6               	movlw	low _motorL
  8705   003BD6  6E19               	movwf	reverseDetect@mL^0,c
  8706   003BD8  0E00               	movlw	high _motorL
  8707   003BDA  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8708   003BDC  0EED               	movlw	low _motorR
  8709   003BDE  6E1B               	movwf	reverseDetect@mR^0,c
  8710   003BE0  0E00               	movlw	high _motorR
  8711   003BE2  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8712   003BE4  EC7A  F01E         	call	_reverseDetect	;wreg free
  8713                           
  8714                           ;dc_motor.c: 232:     turnRight45(&motorL, &motorR);
  8715   003BE8  0EF6               	movlw	low _motorL
  8716   003BEA  6E19               	movwf	turnRight45@mL^0,c
  8717   003BEC  0E00               	movlw	high _motorL
  8718   003BEE  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8719   003BF0  0EED               	movlw	low _motorR
  8720   003BF2  6E1B               	movwf	turnRight45@mR^0,c
  8721   003BF4  0E00               	movlw	high _motorR
  8722   003BF6  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8723   003BF8  ECD3  F01E         	call	_turnRight45	;wreg free
  8724                           
  8725                           ;dc_motor.c: 233:     turnRight45(&motorL, &motorR);
  8726   003BFC  0EF6               	movlw	low _motorL
  8727   003BFE  6E19               	movwf	turnRight45@mL^0,c
  8728   003C00  0E00               	movlw	high _motorL
  8729   003C02  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8730   003C04  0EED               	movlw	low _motorR
  8731   003C06  6E1B               	movwf	turnRight45@mR^0,c
  8732   003C08  0E00               	movlw	high _motorR
  8733   003C0A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8734   003C0C  ECD3  F01E         	call	_turnRight45	;wreg free
  8735                           
  8736                           ;dc_motor.c: 234:     turnRight45(&motorL, &motorR);
  8737   003C10  0EF6               	movlw	low _motorL
  8738   003C12  6E19               	movwf	turnRight45@mL^0,c
  8739   003C14  0E00               	movlw	high _motorL
  8740   003C16  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8741   003C18  0EED               	movlw	low _motorR
  8742   003C1A  6E1B               	movwf	turnRight45@mR^0,c
  8743   003C1C  0E00               	movlw	high _motorR
  8744   003C1E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8745   003C20  ECD3  F01E         	call	_turnRight45	;wreg free
  8746                           
  8747                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  8748   003C24  0EF6               	movlw	low _motorL
  8749   003C26  6E19               	movwf	turnRight45@mL^0,c
  8750   003C28  0E00               	movlw	high _motorL
  8751   003C2A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8752   003C2C  0EED               	movlw	low _motorR
  8753   003C2E  6E1B               	movwf	turnRight45@mR^0,c
  8754   003C30  0E00               	movlw	high _motorR
  8755   003C32  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8756   003C34  ECD3  F01E         	call	_turnRight45	;wreg free
  8757   003C38  0012               	return		;funcret
  8758   003C3A                     __end_of_BlueMove:
  8759                           	callstack 0
  8760                           
  8761 ;; *************** function _turnRight45 *****************
  8762 ;; Defined at:
  8763 ;;		line 181 in file "dc_motor.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8766 ;;		 -> motorL(9), 
  8767 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8768 ;;		 -> motorR(9), 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8784 ;;Total ram usage:        6 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 4
  8787 ;; This function calls:
  8788 ;;		_stop
  8789 ;;		_turnRight
  8790 ;; This function is called by:
  8791 ;;		_Colour_decider
  8792 ;;		_RedMove
  8793 ;;		_BlueMove
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text46
  8798   003DA6                     __ptext46:
  8799                           	callstack 0
  8800   003DA6                     _turnRight45:
  8801                           	callstack 25
  8802   003DA6                     
  8803                           ;dc_motor.c: 182:     turnRight(mL,mR);
  8804   003DA6  C019  F014         	movff	turnRight45@mL,turnRight@mL
  8805   003DAA  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  8806   003DAE  C01B  F016         	movff	turnRight45@mR,turnRight@mR
  8807   003DB2  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  8808   003DB6  EC5E  F01C         	call	_turnRight	;wreg free
  8809   003DBA                     
  8810                           ;dc_motor.c: 183:     _delay((unsigned long)((220)*(64000000/4000.0)));
  8811   003DBA  0E12               	movlw	18
  8812   003DBC  6E1E               	movwf	(??_turnRight45+1)^0,c
  8813   003DBE  0EDC               	movlw	220
  8814   003DC0  6E1D               	movwf	??_turnRight45^0,c
  8815   003DC2  0E60               	movlw	96
  8816   003DC4                     u4067:
  8817   003DC4  2EE8               	decfsz	wreg,f,c
  8818   003DC6  D7FE               	bra	u4067
  8819   003DC8  2E1D               	decfsz	??_turnRight45^0,f,c
  8820   003DCA  D7FC               	bra	u4067
  8821   003DCC  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  8822   003DCE  D7FA               	bra	u4067
  8823   003DD0                     
  8824                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  8825   003DD0  0EF6               	movlw	low _motorL
  8826   003DD2  6E14               	movwf	stop@mL^0,c
  8827   003DD4  0E00               	movlw	high _motorL
  8828   003DD6  6E15               	movwf	(stop@mL+1)^0,c
  8829   003DD8  0EED               	movlw	low _motorR
  8830   003DDA  6E16               	movwf	stop@mR^0,c
  8831   003DDC  0E00               	movlw	high _motorR
  8832   003DDE  6E17               	movwf	(stop@mR+1)^0,c
  8833   003DE0  EC75  F01D         	call	_stop	;wreg free
  8834                           
  8835                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8836   003DE4  0E52               	movlw	82
  8837   003DE6  6E1E               	movwf	(??_turnRight45+1)^0,c
  8838   003DE8  0E2B               	movlw	43
  8839   003DEA  6E1D               	movwf	??_turnRight45^0,c
  8840   003DEC  0E00               	movlw	0
  8841   003DEE                     u4077:
  8842   003DEE  2EE8               	decfsz	wreg,f,c
  8843   003DF0  D7FE               	bra	u4077
  8844   003DF2  2E1D               	decfsz	??_turnRight45^0,f,c
  8845   003DF4  D7FC               	bra	u4077
  8846   003DF6  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  8847   003DF8  D7FA               	bra	u4077
  8848   003DFA  D000               	nop2	
  8849   003DFC  0012               	return		;funcret
  8850   003DFE                     __end_of_turnRight45:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function _turnRight *****************
  8854 ;; Defined at:
  8855 ;;		line 128 in file "dc_motor.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8858 ;;		 -> motorL(9), 
  8859 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8860 ;;		 -> motorR(9), 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;Total ram usage:        5 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 3
  8879 ;; This function calls:
  8880 ;;		_setMotorPWM
  8881 ;; This function is called by:
  8882 ;;		_turnRight45
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text47
  8887   0038BC                     __ptext47:
  8888                           	callstack 0
  8889   0038BC                     _turnRight:
  8890                           	callstack 25
  8891   0038BC                     
  8892                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  8893   0038BC  EE20 F001          	lfsr	2,1
  8894   0038C0  5014               	movf	turnRight@mL^0,w,c
  8895   0038C2  26D9               	addwf	fsr2l,f,c
  8896   0038C4  5015               	movf	(turnRight@mL+1)^0,w,c
  8897   0038C6  22DA               	addwfc	fsr2h,f,c
  8898   0038C8  0E01               	movlw	1
  8899   0038CA  6EDF               	movwf	indf2,c
  8900                           
  8901                           ;dc_motor.c: 131:     mR->direction =0;
  8902   0038CC  EE20 F001          	lfsr	2,1
  8903   0038D0  5016               	movf	turnRight@mR^0,w,c
  8904   0038D2  26D9               	addwf	fsr2l,f,c
  8905   0038D4  5017               	movf	(turnRight@mR+1)^0,w,c
  8906   0038D6  22DA               	addwfc	fsr2h,f,c
  8907   0038D8  0E00               	movlw	0
  8908   0038DA  6EDF               	movwf	indf2,c
  8909                           
  8910                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  8911   0038DC  EF90  F01C         	goto	l2958
  8912   0038E0                     l2950:
  8913                           
  8914                           ;dc_motor.c: 135:         mL->power+=10;
  8915   0038E0  C014  FFD9         	movff	turnRight@mL,fsr2l
  8916   0038E4  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8917   0038E8  0E0A               	movlw	10
  8918   0038EA  26DF               	addwf	indf2,f,c
  8919                           
  8920                           ;dc_motor.c: 136:         mR->power+=10;
  8921   0038EC  C016  FFD9         	movff	turnRight@mR,fsr2l
  8922   0038F0  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8923   0038F4  0E0A               	movlw	10
  8924   0038F6  26DF               	addwf	indf2,f,c
  8925   0038F8                     
  8926                           ;dc_motor.c: 138:         setMotorPWM(mL);
  8927   0038F8  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8928   0038FC  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8929   003900  EC7D  F018         	call	_setMotorPWM	;wreg free
  8930   003904                     
  8931                           ;dc_motor.c: 139:         setMotorPWM(mR);
  8932   003904  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8933   003908  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8934   00390C  EC7D  F018         	call	_setMotorPWM	;wreg free
  8935   003910                     
  8936                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8937   003910  0E15               	movlw	21
  8938   003912  6E18               	movwf	??_turnRight^0,c
  8939   003914  0EC6               	movlw	198
  8940   003916                     u4087:
  8941   003916  2EE8               	decfsz	wreg,f,c
  8942   003918  D7FE               	bra	u4087
  8943   00391A  2E18               	decfsz	??_turnRight^0,f,c
  8944   00391C  D7FC               	bra	u4087
  8945   00391E  D000               	nop2	
  8946   003920                     l2958:
  8947                           
  8948                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  8949   003920  C014  FFD9         	movff	turnRight@mL,fsr2l
  8950   003924  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8951   003928  0E46               	movlw	70
  8952   00392A  60DF               	cpfslt	indf2,c
  8953   00392C  EF9A  F01C         	goto	u2451
  8954   003930  EF9C  F01C         	goto	u2450
  8955   003934                     u2451:
  8956   003934  EFA8  F01C         	goto	l445
  8957   003938                     u2450:
  8958   003938  C016  FFD9         	movff	turnRight@mR,fsr2l
  8959   00393C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8960   003940  0E45               	movlw	69
  8961   003942  64DF               	cpfsgt	indf2,c
  8962   003944  EFA6  F01C         	goto	u2461
  8963   003948  EFA8  F01C         	goto	u2460
  8964   00394C                     u2461:
  8965   00394C  EF70  F01C         	goto	l2950
  8966   003950                     u2460:
  8967   003950                     l445:
  8968   003950  0012               	return		;funcret
  8969   003952                     __end_of_turnRight:
  8970                           	callstack 0
  8971                           
  8972 ;; *************** function _reverseDetect *****************
  8973 ;; Defined at:
  8974 ;;		line 195 in file "dc_motor.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8977 ;;		 -> motorL(9), 
  8978 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8979 ;;		 -> motorR(9), 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;Total ram usage:        6 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 4
  8998 ;; This function calls:
  8999 ;;		_fullSpeedBack
  9000 ;;		_stop
  9001 ;; This function is called by:
  9002 ;;		_Colour_decider
  9003 ;;		_RedMove
  9004 ;;		_GreenMove
  9005 ;;		_BlueMove
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text48
  9010   003CF4                     __ptext48:
  9011                           	callstack 0
  9012   003CF4                     _reverseDetect:
  9013                           	callstack 25
  9014   003CF4                     
  9015                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  9016   003CF4  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  9017   003CF8  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  9018   003CFC  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  9019   003D00  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  9020   003D04  ECA9  F01C         	call	_fullSpeedBack	;wreg free
  9021   003D08                     
  9022                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9023   003D08  0E11               	movlw	17
  9024   003D0A  6E1E               	movwf	(??_reverseDetect+1)^0,c
  9025   003D0C  0E3C               	movlw	60
  9026   003D0E  6E1D               	movwf	??_reverseDetect^0,c
  9027   003D10  0ECB               	movlw	203
  9028   003D12                     u4097:
  9029   003D12  2EE8               	decfsz	wreg,f,c
  9030   003D14  D7FE               	bra	u4097
  9031   003D16  2E1D               	decfsz	??_reverseDetect^0,f,c
  9032   003D18  D7FC               	bra	u4097
  9033   003D1A  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  9034   003D1C  D7FA               	bra	u4097
  9035   003D1E  F000               	nop	
  9036   003D20                     
  9037                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  9038   003D20  0EF6               	movlw	low _motorL
  9039   003D22  6E14               	movwf	stop@mL^0,c
  9040   003D24  0E00               	movlw	high _motorL
  9041   003D26  6E15               	movwf	(stop@mL+1)^0,c
  9042   003D28  0EED               	movlw	low _motorR
  9043   003D2A  6E16               	movwf	stop@mR^0,c
  9044   003D2C  0E00               	movlw	high _motorR
  9045   003D2E  6E17               	movwf	(stop@mR+1)^0,c
  9046   003D30  EC75  F01D         	call	_stop	;wreg free
  9047                           
  9048                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9049   003D34  0E52               	movlw	82
  9050   003D36  6E1E               	movwf	(??_reverseDetect+1)^0,c
  9051   003D38  0E2B               	movlw	43
  9052   003D3A  6E1D               	movwf	??_reverseDetect^0,c
  9053   003D3C  0E00               	movlw	0
  9054   003D3E                     u4107:
  9055   003D3E  2EE8               	decfsz	wreg,f,c
  9056   003D40  D7FE               	bra	u4107
  9057   003D42  2E1D               	decfsz	??_reverseDetect^0,f,c
  9058   003D44  D7FC               	bra	u4107
  9059   003D46  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
  9060   003D48  D7FA               	bra	u4107
  9061   003D4A  D000               	nop2	
  9062   003D4C  0012               	return		;funcret
  9063   003D4E                     __end_of_reverseDetect:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _stop *****************
  9067 ;; Defined at:
  9068 ;;		line 92 in file "dc_motor.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9071 ;;		 -> motorL(9), 
  9072 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9073 ;;		 -> motorR(9), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;Total ram usage:        5 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 3
  9092 ;; This function calls:
  9093 ;;		_setMotorPWM
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;;		_turnRight45
  9097 ;;		_turnLeft45
  9098 ;;		_reverseDetect
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text49
  9103   003AEA                     __ptext49:
  9104                           	callstack 0
  9105   003AEA                     _stop:
  9106                           	callstack 27
  9107   003AEA                     
  9108                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  9109   003AEA  EF97  F01D         	goto	l2930
  9110   003AEE                     l2922:
  9111                           
  9112                           ;dc_motor.c: 96:         mL->power-=10;
  9113   003AEE  C014  FFD9         	movff	stop@mL,fsr2l
  9114   003AF2  C015  FFDA         	movff	stop@mL+1,fsr2h
  9115   003AF6  0E0A               	movlw	10
  9116   003AF8  5EDF               	subwf	indf2,f,c
  9117                           
  9118                           ;dc_motor.c: 97:         mR->power-=10;
  9119   003AFA  C016  FFD9         	movff	stop@mR,fsr2l
  9120   003AFE  C017  FFDA         	movff	stop@mR+1,fsr2h
  9121   003B02  0E0A               	movlw	10
  9122   003B04  5EDF               	subwf	indf2,f,c
  9123   003B06                     
  9124                           ;dc_motor.c: 102:         setMotorPWM(mL);
  9125   003B06  C014  F00E         	movff	stop@mL,setMotorPWM@m
  9126   003B0A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9127   003B0E  EC7D  F018         	call	_setMotorPWM	;wreg free
  9128   003B12                     
  9129                           ;dc_motor.c: 103:         setMotorPWM(mR);
  9130   003B12  C016  F00E         	movff	stop@mR,setMotorPWM@m
  9131   003B16  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9132   003B1A  EC7D  F018         	call	_setMotorPWM	;wreg free
  9133   003B1E                     
  9134                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9135   003B1E  0E15               	movlw	21
  9136   003B20  6E18               	movwf	??_stop^0,c
  9137   003B22  0EC6               	movlw	198
  9138   003B24                     u4117:
  9139   003B24  2EE8               	decfsz	wreg,f,c
  9140   003B26  D7FE               	bra	u4117
  9141   003B28  2E18               	decfsz	??_stop^0,f,c
  9142   003B2A  D7FC               	bra	u4117
  9143   003B2C  D000               	nop2	
  9144   003B2E                     l2930:
  9145                           
  9146                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  9147   003B2E  C014  FFD9         	movff	stop@mL,fsr2l
  9148   003B32  C015  FFDA         	movff	stop@mL+1,fsr2h
  9149   003B36  50DF               	movf	indf2,w,c
  9150   003B38  A4D8               	btfss	status,2,c
  9151   003B3A  EFA1  F01D         	goto	u2411
  9152   003B3E  EFA3  F01D         	goto	u2410
  9153   003B42                     u2411:
  9154   003B42  EF77  F01D         	goto	l2922
  9155   003B46                     u2410:
  9156   003B46  C016  FFD9         	movff	stop@mR,fsr2l
  9157   003B4A  C017  FFDA         	movff	stop@mR+1,fsr2h
  9158   003B4E  50DF               	movf	indf2,w,c
  9159   003B50  A4D8               	btfss	status,2,c
  9160   003B52  EFAD  F01D         	goto	u2421
  9161   003B56  EFAF  F01D         	goto	u2420
  9162   003B5A                     u2421:
  9163   003B5A  EF77  F01D         	goto	l2922
  9164   003B5E                     u2420:
  9165   003B5E  0012               	return		;funcret
  9166   003B60                     __end_of_stop:
  9167                           	callstack 0
  9168                           
  9169 ;; *************** function _fullSpeedBack *****************
  9170 ;; Defined at:
  9171 ;;		line 164 in file "dc_motor.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9174 ;;		 -> motorL(9), 
  9175 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9176 ;;		 -> motorR(9), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:        5 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 3
  9195 ;; This function calls:
  9196 ;;		_setMotorPWM
  9197 ;; This function is called by:
  9198 ;;		_reverseDetect
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text50
  9203   003952                     __ptext50:
  9204                           	callstack 0
  9205   003952                     _fullSpeedBack:
  9206                           	callstack 25
  9207   003952                     
  9208                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  9209   003952  EE20 F001          	lfsr	2,1
  9210   003956  5014               	movf	fullSpeedBack@mL^0,w,c
  9211   003958  26D9               	addwf	fsr2l,f,c
  9212   00395A  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  9213   00395C  22DA               	addwfc	fsr2h,f,c
  9214   00395E  0E00               	movlw	0
  9215   003960  6EDF               	movwf	indf2,c
  9216                           
  9217                           ;dc_motor.c: 168:     mR->direction =0;
  9218   003962  EE20 F001          	lfsr	2,1
  9219   003966  5016               	movf	fullSpeedBack@mR^0,w,c
  9220   003968  26D9               	addwf	fsr2l,f,c
  9221   00396A  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  9222   00396C  22DA               	addwfc	fsr2h,f,c
  9223   00396E  0E00               	movlw	0
  9224   003970  6EDF               	movwf	indf2,c
  9225                           
  9226                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  9227   003972  EFDB  F01C         	goto	l2972
  9228   003976                     l2964:
  9229                           
  9230                           ;dc_motor.c: 171:         mL->power+=10;
  9231   003976  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  9232   00397A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  9233   00397E  0E0A               	movlw	10
  9234   003980  26DF               	addwf	indf2,f,c
  9235                           
  9236                           ;dc_motor.c: 172:         mR->power+=10;
  9237   003982  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  9238   003986  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  9239   00398A  0E0A               	movlw	10
  9240   00398C  26DF               	addwf	indf2,f,c
  9241   00398E                     
  9242                           ;dc_motor.c: 174:         setMotorPWM(mL);
  9243   00398E  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  9244   003992  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  9245   003996  EC7D  F018         	call	_setMotorPWM	;wreg free
  9246   00399A                     
  9247                           ;dc_motor.c: 175:         setMotorPWM(mR);
  9248   00399A  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  9249   00399E  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  9250   0039A2  EC7D  F018         	call	_setMotorPWM	;wreg free
  9251   0039A6                     
  9252                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9253   0039A6  0E15               	movlw	21
  9254   0039A8  6E18               	movwf	??_fullSpeedBack^0,c
  9255   0039AA  0EC6               	movlw	198
  9256   0039AC                     u4127:
  9257   0039AC  2EE8               	decfsz	wreg,f,c
  9258   0039AE  D7FE               	bra	u4127
  9259   0039B0  2E18               	decfsz	??_fullSpeedBack^0,f,c
  9260   0039B2  D7FC               	bra	u4127
  9261   0039B4  D000               	nop2	
  9262   0039B6                     l2972:
  9263                           
  9264                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
  9265   0039B6  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  9266   0039BA  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  9267   0039BE  0E32               	movlw	50
  9268   0039C0  60DF               	cpfslt	indf2,c
  9269   0039C2  EFE5  F01C         	goto	u2471
  9270   0039C6  EFE7  F01C         	goto	u2470
  9271   0039CA                     u2471:
  9272   0039CA  EFF3  F01C         	goto	l461
  9273   0039CE                     u2470:
  9274   0039CE  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  9275   0039D2  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  9276   0039D6  0E31               	movlw	49
  9277   0039D8  64DF               	cpfsgt	indf2,c
  9278   0039DA  EFF1  F01C         	goto	u2481
  9279   0039DE  EFF3  F01C         	goto	u2480
  9280   0039E2                     u2481:
  9281   0039E2  EFBB  F01C         	goto	l2964
  9282   0039E6                     u2480:
  9283   0039E6                     l461:
  9284   0039E6  0012               	return		;funcret
  9285   0039E8                     __end_of_fullSpeedBack:
  9286                           	callstack 0
  9287                           
  9288 ;; *************** function _setMotorPWM *****************
  9289 ;; Defined at:
  9290 ;;		line 67 in file "dc_motor.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9293 ;;		 -> motorR(9), motorL(9), 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  negDuty         1   18[COMRAM] unsigned char 
  9296 ;;  posDuty         1   17[COMRAM] unsigned char 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;Total ram usage:        6 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 2
  9313 ;; This function calls:
  9314 ;;		___lwdiv
  9315 ;;		___wmul
  9316 ;; This function is called by:
  9317 ;;		_stop
  9318 ;;		_turnLeft
  9319 ;;		_turnRight
  9320 ;;		_fullSpeedAhead
  9321 ;;		_fullSpeedBack
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text51
  9326   0030FA                     __ptext51:
  9327                           	callstack 0
  9328   0030FA                     _setMotorPWM:
  9329                           	callstack 27
  9330   0030FA                     
  9331                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  9332   0030FA  EE20 F002          	lfsr	2,2
  9333   0030FE  500E               	movf	setMotorPWM@m^0,w,c
  9334   003100  26D9               	addwf	fsr2l,f,c
  9335   003102  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9336   003104  22DA               	addwfc	fsr2h,f,c
  9337   003106  50DF               	movf	indf2,w,c
  9338   003108  B4D8               	btfsc	status,2,c
  9339   00310A  EF89  F018         	goto	u2271
  9340   00310E  EF8B  F018         	goto	u2270
  9341   003112                     u2271:
  9342   003112  EFBF  F018         	goto	l2828
  9343   003116                     u2270:
  9344   003116                     
  9345                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  9346   003116  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9347   00311A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9348   00311E  50DF               	movf	indf2,w,c
  9349   003120  6E10               	movwf	??_setMotorPWM^0,c
  9350   003122  5010               	movf	??_setMotorPWM^0,w,c
  9351   003124  6E01               	movwf	___wmul@multiplier^0,c
  9352   003126  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9353   003128  EE20 F003          	lfsr	2,3
  9354   00312C  500E               	movf	setMotorPWM@m^0,w,c
  9355   00312E  26D9               	addwf	fsr2l,f,c
  9356   003130  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9357   003132  22DA               	addwfc	fsr2h,f,c
  9358   003134  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9359   003138  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9360   00313C  EC1D  F021         	call	___wmul	;wreg free
  9361   003140  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9362   003144  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9363   003148  0E00               	movlw	0
  9364   00314A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9365   00314C  0E64               	movlw	100
  9366   00314E  6E09               	movwf	___lwdiv@divisor^0,c
  9367   003150  ECB0  F01D         	call	___lwdiv	;wreg free
  9368   003154  EE20 F003          	lfsr	2,3
  9369   003158  500E               	movf	setMotorPWM@m^0,w,c
  9370   00315A  26D9               	addwf	fsr2l,f,c
  9371   00315C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9372   00315E  22DA               	addwfc	fsr2h,f,c
  9373   003160  50DF               	movf	indf2,w,c
  9374   003162  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9375   003164  5007               	movf	?___lwdiv^0,w,c
  9376   003166  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9377   003168  6E12               	movwf	setMotorPWM@posDuty^0,c
  9378   00316A                     
  9379                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  9380   00316A  EE20 F003          	lfsr	2,3
  9381   00316E  500E               	movf	setMotorPWM@m^0,w,c
  9382   003170  26D9               	addwf	fsr2l,f,c
  9383   003172  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9384   003174  22DA               	addwfc	fsr2h,f,c
  9385   003176  50DF               	movf	indf2,w,c
  9386   003178  6E13               	movwf	setMotorPWM@negDuty^0,c
  9387                           
  9388                           ;dc_motor.c: 74:     }
  9389   00317A  EFE2  F018         	goto	l2832
  9390   00317E                     l2828:
  9391                           
  9392                           ;dc_motor.c: 76:         posDuty=0;
  9393   00317E  0E00               	movlw	0
  9394   003180  6E12               	movwf	setMotorPWM@posDuty^0,c
  9395   003182                     
  9396                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9397   003182  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9398   003186  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9399   00318A  50DF               	movf	indf2,w,c
  9400   00318C  6E10               	movwf	??_setMotorPWM^0,c
  9401   00318E  5010               	movf	??_setMotorPWM^0,w,c
  9402   003190  6E01               	movwf	___wmul@multiplier^0,c
  9403   003192  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9404   003194  EE20 F003          	lfsr	2,3
  9405   003198  500E               	movf	setMotorPWM@m^0,w,c
  9406   00319A  26D9               	addwf	fsr2l,f,c
  9407   00319C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9408   00319E  22DA               	addwfc	fsr2h,f,c
  9409   0031A0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9410   0031A4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9411   0031A8  EC1D  F021         	call	___wmul	;wreg free
  9412   0031AC  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9413   0031B0  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9414   0031B4  0E00               	movlw	0
  9415   0031B6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9416   0031B8  0E64               	movlw	100
  9417   0031BA  6E09               	movwf	___lwdiv@divisor^0,c
  9418   0031BC  ECB0  F01D         	call	___lwdiv	;wreg free
  9419   0031C0  5007               	movf	?___lwdiv^0,w,c
  9420   0031C2  6E13               	movwf	setMotorPWM@negDuty^0,c
  9421   0031C4                     l2832:
  9422                           
  9423                           ;dc_motor.c: 80:     if (m->direction) {
  9424   0031C4  EE20 F001          	lfsr	2,1
  9425   0031C8  500E               	movf	setMotorPWM@m^0,w,c
  9426   0031CA  26D9               	addwf	fsr2l,f,c
  9427   0031CC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9428   0031CE  22DA               	addwfc	fsr2h,f,c
  9429   0031D0  50DF               	movf	indf2,w,c
  9430   0031D2  B4D8               	btfsc	status,2,c
  9431   0031D4  EFEE  F018         	goto	u2281
  9432   0031D8  EFF0  F018         	goto	u2280
  9433   0031DC                     u2281:
  9434   0031DC  EF12  F019         	goto	l2836
  9435   0031E0                     u2280:
  9436   0031E0                     
  9437                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  9438   0031E0  EE20 F005          	lfsr	2,5
  9439   0031E4  500E               	movf	setMotorPWM@m^0,w,c
  9440   0031E6  26D9               	addwf	fsr2l,f,c
  9441   0031E8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9442   0031EA  22DA               	addwfc	fsr2h,f,c
  9443   0031EC  CFDE F010          	movff	postinc2,??_setMotorPWM
  9444   0031F0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9445   0031F4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9446   0031F8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9447   0031FC  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9448                           
  9449                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  9450   003200  EE20 F007          	lfsr	2,7
  9451   003204  500E               	movf	setMotorPWM@m^0,w,c
  9452   003206  26D9               	addwf	fsr2l,f,c
  9453   003208  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9454   00320A  22DA               	addwfc	fsr2h,f,c
  9455   00320C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9456   003210  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9457   003214  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9458   003218  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9459   00321C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9460                           
  9461                           ;dc_motor.c: 85:     } else {
  9462   003220  EF32  F019         	goto	l423
  9463   003224                     l2836:
  9464                           
  9465                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=posDuty;
  9466   003224  EE20 F005          	lfsr	2,5
  9467   003228  500E               	movf	setMotorPWM@m^0,w,c
  9468   00322A  26D9               	addwf	fsr2l,f,c
  9469   00322C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9470   00322E  22DA               	addwfc	fsr2h,f,c
  9471   003230  CFDE F010          	movff	postinc2,??_setMotorPWM
  9472   003234  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9473   003238  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9474   00323C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9475   003240  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9476                           
  9477                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=negDuty;
  9478   003244  EE20 F007          	lfsr	2,7
  9479   003248  500E               	movf	setMotorPWM@m^0,w,c
  9480   00324A  26D9               	addwf	fsr2l,f,c
  9481   00324C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9482   00324E  22DA               	addwfc	fsr2h,f,c
  9483   003250  CFDE F010          	movff	postinc2,??_setMotorPWM
  9484   003254  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9485   003258  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9486   00325C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9487   003260  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9488   003264                     l423:
  9489   003264  0012               	return		;funcret
  9490   003266                     __end_of_setMotorPWM:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function ___wmul *****************
  9494 ;; Defined at:
  9495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  multiplier      2    0[COMRAM] unsigned int 
  9498 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  product         2    4[COMRAM] unsigned int 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  2    0[COMRAM] unsigned int 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0, prodl, prodh
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9513 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9514 ;;Total ram usage:        6 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 1
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_setMotorPWM
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text52
  9525   00423A                     __ptext52:
  9526                           	callstack 0
  9527   00423A                     ___wmul:
  9528                           	callstack 27
  9529   00423A  5001               	movf	___wmul@multiplier^0,w,c
  9530   00423C  0203               	mulwf	___wmul@multiplicand^0,c
  9531   00423E  CFF3 F005          	movff	prodl,___wmul@product
  9532   004242  CFF4 F006          	movff	prodh,___wmul@product+1
  9533   004246  5001               	movf	___wmul@multiplier^0,w,c
  9534   004248  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9535   00424A  50F3               	movf	243,w,c
  9536   00424C  2606               	addwf	(___wmul@product+1)^0,f,c
  9537   00424E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9538   004250  0203               	mulwf	___wmul@multiplicand^0,c
  9539   004252  50F3               	movf	243,w,c
  9540   004254  2606               	addwf	(___wmul@product+1)^0,f,c
  9541   004256  C005  F001         	movff	___wmul@product,?___wmul
  9542   00425A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9543   00425E  0012               	return		;funcret
  9544   004260                     __end_of___wmul:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function ___lwdiv *****************
  9548 ;; Defined at:
  9549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  dividend        2    6[COMRAM] unsigned int 
  9552 ;;  divisor         2    8[COMRAM] unsigned int 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  quotient        2   10[COMRAM] unsigned int 
  9555 ;;  counter         1   12[COMRAM] unsigned char 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  2    6[COMRAM] unsigned int 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;Total ram usage:        7 bytes
  9570 ;; Hardware stack levels used: 1
  9571 ;; Hardware stack levels required when called: 1
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_setMotorPWM
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text53
  9580   003B60                     __ptext53:
  9581                           	callstack 0
  9582   003B60                     ___lwdiv:
  9583                           	callstack 27
  9584   003B60  0E00               	movlw	0
  9585   003B62  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9586   003B64  0E00               	movlw	0
  9587   003B66  6E0B               	movwf	___lwdiv@quotient^0,c
  9588   003B68  5009               	movf	___lwdiv@divisor^0,w,c
  9589   003B6A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9590   003B6C  B4D8               	btfsc	status,2,c
  9591   003B6E  EFBB  F01D         	goto	u2191
  9592   003B72  EFBD  F01D         	goto	u2190
  9593   003B76                     u2191:
  9594   003B76  EFE5  F01D         	goto	l973
  9595   003B7A                     u2190:
  9596   003B7A  0E01               	movlw	1
  9597   003B7C  6E0D               	movwf	___lwdiv@counter^0,c
  9598   003B7E  EFC5  F01D         	goto	l2786
  9599   003B82                     l2784:
  9600   003B82  90D8               	bcf	status,0,c
  9601   003B84  3609               	rlcf	___lwdiv@divisor^0,f,c
  9602   003B86  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9603   003B88  2A0D               	incf	___lwdiv@counter^0,f,c
  9604   003B8A                     l2786:
  9605   003B8A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9606   003B8C  EFCA  F01D         	goto	u2201
  9607   003B90  EFCC  F01D         	goto	u2200
  9608   003B94                     u2201:
  9609   003B94  EFC1  F01D         	goto	l2784
  9610   003B98                     u2200:
  9611   003B98                     l2788:
  9612   003B98  90D8               	bcf	status,0,c
  9613   003B9A  360B               	rlcf	___lwdiv@quotient^0,f,c
  9614   003B9C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9615   003B9E  5009               	movf	___lwdiv@divisor^0,w,c
  9616   003BA0  5C07               	subwf	___lwdiv@dividend^0,w,c
  9617   003BA2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9618   003BA4  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9619   003BA6  A0D8               	btfss	status,0,c
  9620   003BA8  EFD8  F01D         	goto	u2211
  9621   003BAC  EFDA  F01D         	goto	u2210
  9622   003BB0                     u2211:
  9623   003BB0  EFDF  F01D         	goto	l2796
  9624   003BB4                     u2210:
  9625   003BB4  5009               	movf	___lwdiv@divisor^0,w,c
  9626   003BB6  5E07               	subwf	___lwdiv@dividend^0,f,c
  9627   003BB8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9628   003BBA  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9629   003BBC  800B               	bsf	___lwdiv@quotient^0,0,c
  9630   003BBE                     l2796:
  9631   003BBE  90D8               	bcf	status,0,c
  9632   003BC0  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9633   003BC2  3209               	rrcf	___lwdiv@divisor^0,f,c
  9634   003BC4  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9635   003BC6  EFCC  F01D         	goto	l2788
  9636   003BCA                     l973:
  9637   003BCA  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9638   003BCE  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9639   003BD2  0012               	return		;funcret
  9640   003BD4                     __end_of___lwdiv:
  9641                           	callstack 0
  9642                           
  9643 ;; *************** function _HighISR *****************
  9644 ;; Defined at:
  9645 ;;		line 59 in file "interrupts.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;		None
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  1    wreg      void 
  9652 ;; Registers used:
  9653 ;;		None
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9663 ;;Total ram usage:        0 bytes
  9664 ;; Hardware stack levels used: 1
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		Interrupt level 2
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	intcode
  9673   000008                     __pintcode:
  9674                           	callstack 0
  9675   000008                     _HighISR:
  9676                           	callstack 22
  9677                           
  9678                           ;incstack = 0
  9679   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9680   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9681   00000C  0011               	retfie		f
  9682   00000E                     __end_of_HighISR:
  9683                           	callstack 0
  9684                           
  9685                           	psect	rparam
  9686   000000                     
  9687                           	psect	temp
  9688   00005F                     btemp:
  9689                           	callstack 0
  9690   00005F                     	ds	1
  9691   000000                     int$flags	set	btemp
  9692   000000                     wtemp8	set	btemp+1
  9693   000000                     ttemp5	set	btemp+1
  9694   000000                     ttemp6	set	btemp+4
  9695   000000                     ttemp7	set	btemp+8
  9696                           
  9697                           	psect	idloc
  9698                           
  9699                           ;Config register IDLOC0 @ 0x200000
  9700                           ;	unspecified, using default values
  9701   200000                     	org	2097152
  9702   200000  0FFF               	dw	4095
  9703                           
  9704                           ;Config register IDLOC1 @ 0x200002
  9705                           ;	unspecified, using default values
  9706   200002                     	org	2097154
  9707   200002  0FFF               	dw	4095
  9708                           
  9709                           ;Config register IDLOC2 @ 0x200004
  9710                           ;	unspecified, using default values
  9711   200004                     	org	2097156
  9712   200004  0FFF               	dw	4095
  9713                           
  9714                           ;Config register IDLOC3 @ 0x200006
  9715                           ;	unspecified, using default values
  9716   200006                     	org	2097158
  9717   200006  0FFF               	dw	4095
  9718                           
  9719                           ;Config register IDLOC4 @ 0x200008
  9720                           ;	unspecified, using default values
  9721   200008                     	org	2097160
  9722   200008  0FFF               	dw	4095
  9723                           
  9724                           ;Config register IDLOC5 @ 0x20000A
  9725                           ;	unspecified, using default values
  9726   20000A                     	org	2097162
  9727   20000A  0FFF               	dw	4095
  9728                           
  9729                           ;Config register IDLOC6 @ 0x20000C
  9730                           ;	unspecified, using default values
  9731   20000C                     	org	2097164
  9732   20000C  0FFF               	dw	4095
  9733                           
  9734                           ;Config register IDLOC7 @ 0x20000E
  9735                           ;	unspecified, using default values
  9736   20000E                     	org	2097166
  9737   20000E  0FFF               	dw	4095
  9738                           
  9739                           	psect	config
  9740                           
  9741                           ;Config register CONFIG1L @ 0x300000
  9742                           ;	External Oscillator mode Selection bits
  9743                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9744                           ;	Power-up default value for COSC bits
  9745                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9746   300000                     	org	3145728
  9747   300000  AA                 	db	170
  9748                           
  9749                           ;Config register CONFIG1H @ 0x300001
  9750                           ;	unspecified, using default values
  9751                           ;	Clock Out Enable bit
  9752                           ;	CLKOUTEN = 0x1, unprogrammed default
  9753                           ;	Clock Switch Enable bit
  9754                           ;	CSWEN = 0x1, unprogrammed default
  9755                           ;	Fail-Safe Clock Monitor Enable bit
  9756                           ;	FCMEN = 0x1, unprogrammed default
  9757   300001                     	org	3145729
  9758   300001  FF                 	db	255
  9759                           
  9760                           ;Config register CONFIG2L @ 0x300002
  9761                           ;	unspecified, using default values
  9762                           ;	Master Clear Enable bit
  9763                           ;	MCLRE = 0x1, unprogrammed default
  9764                           ;	Power-up Timer Enable bit
  9765                           ;	PWRTE = 0x1, unprogrammed default
  9766                           ;	Low-power BOR enable bit
  9767                           ;	LPBOREN = 0x1, unprogrammed default
  9768                           ;	Brown-out Reset Enable bits
  9769                           ;	BOREN = 0x3, unprogrammed default
  9770   300002                     	org	3145730
  9771   300002  FF                 	db	255
  9772                           
  9773                           ;Config register CONFIG2H @ 0x300003
  9774                           ;	unspecified, using default values
  9775                           ;	Brown Out Reset Voltage selection bits
  9776                           ;	BORV = 0x3, unprogrammed default
  9777                           ;	ZCD Disable bit
  9778                           ;	ZCD = 0x1, unprogrammed default
  9779                           ;	PPSLOCK bit One-Way Set Enable bit
  9780                           ;	PPS1WAY = 0x1, unprogrammed default
  9781                           ;	Stack Full/Underflow Reset Enable bit
  9782                           ;	STVREN = 0x1, unprogrammed default
  9783                           ;	Debugger Enable bit
  9784                           ;	DEBUG = 0x1, unprogrammed default
  9785                           ;	Extended Instruction Set Enable bit
  9786                           ;	XINST = 0x1, unprogrammed default
  9787   300003                     	org	3145731
  9788   300003  FF                 	db	255
  9789                           
  9790                           ;Config register CONFIG3L @ 0x300004
  9791                           ;	WDT Period Select bits
  9792                           ;	WDTCPS = 0x1F, unprogrammed default
  9793                           ;	WDT operating mode
  9794                           ;	WDTE = OFF, WDT Disabled
  9795   300004                     	org	3145732
  9796   300004  9F                 	db	159
  9797                           
  9798                           ;Config register CONFIG3H @ 0x300005
  9799                           ;	unspecified, using default values
  9800                           ;	WDT Window Select bits
  9801                           ;	WDTCWS = 0x7, unprogrammed default
  9802                           ;	WDT input clock selector
  9803                           ;	WDTCCS = 0x7, unprogrammed default
  9804   300005                     	org	3145733
  9805   300005  FF                 	db	255
  9806                           
  9807                           ;Config register CONFIG4L @ 0x300006
  9808                           ;	unspecified, using default values
  9809                           ;	Write Protection Block 0
  9810                           ;	WRT0 = 0x1, unprogrammed default
  9811                           ;	Write Protection Block 1
  9812                           ;	WRT1 = 0x1, unprogrammed default
  9813                           ;	Write Protection Block 2
  9814                           ;	WRT2 = 0x1, unprogrammed default
  9815                           ;	Write Protection Block 3
  9816                           ;	WRT3 = 0x1, unprogrammed default
  9817                           ;	Write Protection Block 3
  9818                           ;	WRT4 = 0x1, unprogrammed default
  9819                           ;	Write Protection Block 3
  9820                           ;	WRT5 = 0x1, unprogrammed default
  9821                           ;	Write Protection Block 3
  9822                           ;	WRT6 = 0x1, unprogrammed default
  9823                           ;	Write Protection Block 3
  9824                           ;	WRT7 = 0x1, unprogrammed default
  9825   300006                     	org	3145734
  9826   300006  FF                 	db	255
  9827                           
  9828                           ;Config register CONFIG4H @ 0x300007
  9829                           ;	unspecified, using default values
  9830                           ;	Configuration Register Write Protection bit
  9831                           ;	WRTC = 0x1, unprogrammed default
  9832                           ;	Boot Block Write Protection bit
  9833                           ;	WRTB = 0x1, unprogrammed default
  9834                           ;	Data EEPROM Write Protection bit
  9835                           ;	WRTD = 0x1, unprogrammed default
  9836                           ;	Scanner Enable bit
  9837                           ;	SCANE = 0x1, unprogrammed default
  9838                           ;	Low Voltage Programming Enable bit
  9839                           ;	LVP = 0x1, unprogrammed default
  9840   300007                     	org	3145735
  9841   300007  FF                 	db	255
  9842                           
  9843                           ;Config register CONFIG5L @ 0x300008
  9844                           ;	unspecified, using default values
  9845                           ;	UserNVM Program Memory Code Protection bit
  9846                           ;	CP = 0x1, unprogrammed default
  9847                           ;	DataNVM Memory Code Protection bit
  9848                           ;	CPD = 0x1, unprogrammed default
  9849   300008                     	org	3145736
  9850   300008  FF                 	db	255
  9851                           
  9852                           ;Config register CONFIG5H @ 0x300009
  9853                           ;	unspecified, using default values
  9854   300009                     	org	3145737
  9855   300009  FF                 	db	255
  9856                           
  9857                           ;Config register CONFIG6L @ 0x30000A
  9858                           ;	unspecified, using default values
  9859                           ;	Table Read Protection Block 0
  9860                           ;	EBTR0 = 0x1, unprogrammed default
  9861                           ;	Table Read Protection Block 1
  9862                           ;	EBTR1 = 0x1, unprogrammed default
  9863                           ;	Table Read Protection Block 2
  9864                           ;	EBTR2 = 0x1, unprogrammed default
  9865                           ;	Table Read Protection Block 3
  9866                           ;	EBTR3 = 0x1, unprogrammed default
  9867                           ;	Table Read Protection Block 4
  9868                           ;	EBTR4 = 0x1, unprogrammed default
  9869                           ;	Table Read Protection Block 5
  9870                           ;	EBTR5 = 0x1, unprogrammed default
  9871                           ;	Table Read Protection Block 6
  9872                           ;	EBTR6 = 0x1, unprogrammed default
  9873                           ;	Table Read Protection Block 7
  9874                           ;	EBTR7 = 0x1, unprogrammed default
  9875   30000A                     	org	3145738
  9876   30000A  FF                 	db	255
  9877                           
  9878                           ;Config register CONFIG6H @ 0x30000B
  9879                           ;	unspecified, using default values
  9880                           ;	Boot Block Table Read Protection bit
  9881                           ;	EBTRB = 0x1, unprogrammed default
  9882   30000B                     	org	3145739
  9883   30000B  FF                 	db	255
  9884                           tosu	equ	0xFFF
  9885                           tosh	equ	0xFFE
  9886                           tosl	equ	0xFFD
  9887                           stkptr	equ	0xFFC
  9888                           pclatu	equ	0xFFB
  9889                           pclath	equ	0xFFA
  9890                           pcl	equ	0xFF9
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           indf0	equ	0xFEF
  9898                           postinc0	equ	0xFEE
  9899                           postdec0	equ	0xFED
  9900                           preinc0	equ	0xFEC
  9901                           plusw0	equ	0xFEB
  9902                           fsr0h	equ	0xFEA
  9903                           fsr0l	equ	0xFE9
  9904                           wreg	equ	0xFE8
  9905                           indf1	equ	0xFE7
  9906                           postinc1	equ	0xFE6
  9907                           postdec1	equ	0xFE5
  9908                           preinc1	equ	0xFE4
  9909                           plusw1	equ	0xFE3
  9910                           fsr1h	equ	0xFE2
  9911                           fsr1l	equ	0xFE1
  9912                           bsr	equ	0xFE0
  9913                           indf2	equ	0xFDF
  9914                           postinc2	equ	0xFDE
  9915                           postdec2	equ	0xFDD
  9916                           preinc2	equ	0xFDC
  9917                           plusw2	equ	0xFDB
  9918                           fsr2h	equ	0xFDA
  9919                           fsr2l	equ	0xFD9
  9920                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        3
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    134     160
    BANK1           256      0     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2167$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[34]), STR_1(CODE[44]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2114$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2114$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _fullSpeedAhead->_setMotorPWM
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Colour_decider->___flmul
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0   96511
                                             88 COMRAM     2     2      0
                                             32 BANK0    102   102      0
                           _BlueMove
                     _Colour_decider
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                            _RedMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5722
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7688
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RedMove                                              4     0      4   13492
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GreenMove                                            4     0      4   11364
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   38639
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                      _reverseDetect
                         _turnLeft45
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    5378
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3604
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _BlueMove                                             4     0      4   13492
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnRight45                                          6     2      4    7506
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    5834
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    2569
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
     _turnRight45
   _GreenMove
     _reverseDetect
     _turnLeft45
   _I2C_2_Master_Init
   _Interrupts_init
   _RedMove
     _reverseDetect
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      92       7       57.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhll        1E      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRlllhh       1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     190      58        0.0%
DATA                 0      0     190       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 12:37:33 2023

               _color_read_Red 3EF2                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 3EA2                   ___fldiv@sign 0029                _color_read_Blue 3F92  
                           l51 3EF0                             l60 3FE0                             l45 3EA0  
                           l54 3F40                             l63 3C96                             l48 427E  
                           l57 3F90                             l66 2926                             l76 1974  
          ___wmul@multiplicand 0003               _color_read_Green 3F42                readColours@vals 000C  
            ??_Interrupts_init 0001                            l140 4212                            l206 42A0  
                          l143 4238                            l215 41E6                            l152 42D4  
                          l137 4210                            l209 42B4                            l146 42DE  
                          l155 42C0                            l149 42CA                            l158 40FA  
                          l423 3264                            l416 3A6E                            l461 39E6  
                          l429 3B5E                            l445 3950                            l437 38BA  
                          l269 42E4                            l453 3824                            l197 429C  
                          l470 3D4C                            l464 3DFC                            l473 4178  
                          l609 33C8                            l482 425E                            l467 3DA4  
                          l476 41B6                            l741 378E                            l479 3C38  
                          l752 361A                            l747 35D4                            l596 30F8  
                          l980 3BD2                            l973 3BCA                            _abs 40FC  
                          _pad 3A70                            _rel 017C                            wreg 000FE8  
                 ___flmul@aexp 0043                   ___flmul@bexp 0044                   ___flmul@sign 003E  
                 ___flmul@temp 0049                   ___flmul@prod 0045                Colour_decider@i 007A  
                         l1010 1B64                           l1011 1B52                           l1100 225E  
                         l1012 1B18                           l1103 20F0                           l1113 2220  
                         l1105 2168                           l1106 2156                           l1027 1C7E  
                         l1019 1E34                           ?_abs 0013                           l1036 1D4E  
                         l1052 4074                           l1140 2F70                           l1212 3516  
                         l1037 1D3C                           l1205 2BA4                           l1222 4132  
                         l1151 2F08                           l1064 25F8                           l3000 19F6  
                         l1144 2EAC                           l1160 3E4E                           l1137 2E14  
                         l1225 413A                           l1066 2458                           l3010 1A2C  
                         l3002 19FC                           l1218 402E                           l1075 249E  
                         l3100 1BF2                           l3020 1A68                           l3012 1A3C  
                         l3004 1A0A                           l1077 2516                           l1069 241C  
                         l1237 36E4                           l1245 40B8                           l1078 2504  
                         l3102 1C18                           l3110 1C6E                           l3030 1A86  
                         l3022 1A76                           l3014 1A3E                           l3006 1A0C  
                         l1182 3A92                           l1191 29B4                           l1096 1EFA  
                         l3120 1CC2                           l3112 1C94                           l3104 1C4C  
                         l3040 1A9A                           l3032 1A8A                           l3024 1A7A  
                         l3008 1A1C                           l3016 1A46                           l1248 42E2  
                         l1193 29BC                           l3130 1CEC                           l3122 1CD0  
                         l3114 1CA4                           l3106 1C4E                           l3050 1AAE  
                         l3042 1A9E                           l3034 1A8E                           l3026 1A7E  
                         l3018 1A56                           l3210 41F2                           l1186 3AE8  
                         l1194 2A02                           l3202 34EE                           l4010 2BB2  
                         l3300 2312                           l3140 1D1E                           l3132 1CFC  
                         l3124 1CD2                           l3108 1C5E                           l3060 1B00  
                         l3052 1AB2                           l3044 1AA2                           l3036 1A92  
                         l3028 1A82                           l3212 41F8                           l3220 4262  
                         l4020 2BC8                           l4012 2BB6                           l4004 2BA6  
                         l3310 2352                           l3302 2314                           l3150 1D78  
                         l3142 1D34                           l3126 1CE0                           l3118 1CB8  
                         l3134 1CFE                           l3070 1B44                           l3062 1B10  
                         l3046 1AA6                           l3038 1A96                           l3054 1AB6  
                         l3214 41FA                           l3230 3F38                           l3222 3EA2  
                         l4030 2BD8                           l4022 2BCA                           l4014 2BC2  
                         l4006 2BAA                           l3320 2382                           l3312 235A  
                         l3304 231C                           l3160 1DF4                           l3152 1DB2  
                         l3128 1CE8                           l3136 1D0C                           l3072 1B46  
                         l3064 1B26                           l3056 1ABA                           l3048 1AAA  
                         l3216 41FC                           l3208 41E8                           l3240 3F92  
                         l3224 3EE8                           l4040 2BF8                           l4032 2BDC  
                         l4024 2BCC                           l4016 2BC4                           l4008 2BAE  
                         l3250 3D20                           l3330 23C0                           l3322 2382  
                         l3314 235E                           l3306 232C                           l3410 1E50  
                         l3170 1E14                           l3162 1DF8                           l3146 1D5E  
                         l3154 1DB4                           l3138 1D10                           l3090 1BCE  
                         l3082 1B96                           l3074 1B50                           l3066 1B32  
                         l3058 1AE4                           l3218 41FE                           l3242 3FD8  
                         l3234 3F42                           l4050 2C18                           l4042 2BFC  
                         l4034 2BE4                           l4026 2BCE                           l4018 2BC6  
                         l3260 3DBA                           l3340 240C                           l3332 23D0  
                         l3308 2342                           l3500 2120                           l3420 1E88  
                         l3412 1E52                           l3172 1E22                           l3164 1E06  
                         l3156 1DC4                           l3148 1D6A                           l3092 1BD2  
                         l3084 1BA6                           l3076 1B72                           l3068 1B36  
                         l3252 3D4E                           l3236 3F88                           l3228 3EF2  
                         l2700 2F76                           l3180 33EE                           l4060 2C7E  
                         l4052 2C2C                           l4044 2C00                           l4036 2BEC  
                         l4028 2BD4                           l3246 3CF4                           l3262 3DD0  
                         l3350 2456                           l3342 241A                           l3334 23E0  
                         l3326 2396                           l3318 2372                           l3270 226C  
                         l3510 2192                           l3502 214E                           l3430 1EB4  
                         l3422 1E98                           l3414 1E62                           l3406 1E36  
                         l3174 1E24                           l3166 1E0C                           l3158 1DD4  
                         l3094 1BE0                           l3086 1BB4                           l3078 1B82  
                         l3254 3D62                           l2710 2FD6                           l2702 2F84  
                         l3190 343A                           l3182 33FC                           l4070 2CF2  
                         l4062 2C96                           l4054 2C38                           l4046 2C08  
                         l4038 2BF4                           l3248 3D08                           l3360 249C  
                         l3352 2468                           l3344 2426                           l3336 23E8  
                         l3328 23B0                           l3280 22AC                           l3272 227A  
                         l3520 2208                           l3512 21BC                           l3440 1F0A  
                         l3432 1EC4                           l3424 1E9E                           l3416 1E72  
                         l3408 1E42                           l3168 1E0E                           l3096 1BE2  
                         l3088 1BC2                           l3600 2E96                           l3256 3D78  
                         l3264 42A0                           l2720 3020                           l2712 2FDA  
                         l2704 2FA4                           l2800 3A70                           l3192 3456  
                         l3184 340A                           l4080 2DAA                           l4072 2D0A  
                         l4064 2CB2                           l4056 2C4C                           l4048 2C10  
                         l3258 3DA6                           l3370 24FC                           l3354 247E  
                         l3362 24AE                           l3346 2444                           l3338 23F8  
                         l3290 22D2                           l3282 22AE                           l3274 227C  
                         l3522 2224                           l3530 224A                           l3506 2178  
                         l3514 21C0                           l3450 1F44                           l3442 1F1A  
                         l3434 1ED4                           l3426 1EA4                           l3418 1E82  
                         l3098 1BEC                           l3610 2F16                           l3602 2EA2  
                         l3266 42B0                           l2730 3090                           l2722 302E  
                         l2714 2FE6                           l2706 2FA8                           l2810 3AB6  
                         l2802 3A7E                           l3194 34AC                           l3186 340E  
                         l3178 33CA                           l4074 2D1E                           l4066 2CC6  
                         l4058 2C6A                           l3380 256A                           l3364 24BC  
                         l3356 2484                           l3348 2446                           l3292 22E0  
                         l3276 228C                           l3284 22B6                           l3268 2260  
                         l3532 224E                           l3524 2234                           l3516 21DA  
                         l3508 2184                           l3460 1F96                           l3452 1F5A  
                         l3436 1EE4                           l3428 1EB2                           l3620 2F5E  
                         l3612 2F18                           l3604 2EDE                           l3700 0F28  
                         l2820 4222                           l2900 42D0                           l2732 30A2  
                         l2724 3040                           l2716 3004                           l2708 2FB6  
                         l2812 3AD4                           l2804 3A8A                           l3188 341E  
                         l4076 2D32                           l4068 2CDE                           l2830 3182  
                         l2822 30FA                           l3390 25D4                           l3374 2526  
                         l3382 256E                           l3366 24C0                           l3358 248E  
                         l3294 22E2                           l3286 22C6                           l3278 229C  
                         l3550 3762                           l3542 36E6                           l3526 2242  
                         l3518 21EE                           l3470 1FDC                           l3462 1FA4  
                         l3454 1F66                           l3446 1F2E                           l3438 1EEA  
                         l3622 2F60                           l3614 2F1C                           l3606 2EEA  
                         l3710 103A                           l3702 0F7A                           l2910 40C8  
                         l2902 42C2                           l2726 306E                           l2718 300C  
                         l2734 30A8                           l2750 329C                           l2742 3266  
                         l2814 40FC                           l2670 361C                           l2806 3A9E  
                         l3198 34DC                           l3630 400A                           l4078 2D74  
                         l2832 31C4                           l2824 3116                           l2920 3AEA  
                         l3392 25D8                           l3384 2588                           l3376 2532  
                         l3368 24CE                           l3296 22F2                           l3288 22CC  
                         l3552 3786                           l3544 3714                           l3560 3546  
                         l3528 2244                           l3480 204A                           l3472 1FF6  
                         l3464 1FB0                           l3456 1F7E                           l3448 1F3A  
                         l3536 4030                           l3616 2F40                           l3608 2EF8  
                         l3800 1660                           l3720 10BE                           l3712 1040  
                         l3704 0FAC                           l3640 3E5E                           l2912 40D0  
                         l2904 42C6                           l2736 30B8                           l2728 308E  
                         l2760 3304                           l2752 32AA                           l2744 326A  
                         l2816 4116                           l2680 369E                           l2672 362E  
                         l2808 3AB2                           l2840 2948                           l3632 4026  
                         l2834 31E0                           l2826 316A                           l2922 3AEE  
                         l2930 3B2E                           l3394 25E6                           l3386 259E  
                         l3378 2540                           l3298 2302                           l3554 378C  
                         l3546 3724                           l3570 35B4                           l3562 3556  
                         l3490 20E0                           l3482 2074                           l3474 2006  
                         l3466 1FC0                           l3458 1F8A                           l3538 4040  
                         l3618 2F50                           l3802 1692                           l3730 11CC  
                         l3722 10D2                           l3714 105C                           l3706 0FB4  
                         l2818 4212                           l3650 3E8E                           l3642 3E6E  
                         l2914 40F6                           l2906 40BC                           l2738 30D8  
                         l2762 3312                           l2770 3378                           l2754 32CA  
                         l2746 3278                           l2674 3640                           l2690 4098  
                         l2850 29C4                           l2842 295C                           l3626 3FE2  
                         l2780 3B68                           l2692 423A                           l2836 3224  
                         l2828 317E                           l2932 3B46                           l2924 3B06  
                         l3396 25EC                           l3388 25B8                           l3548 3752  
                         l3572 35C2                           l3564 3584                           l3492 20EE  
                         l3484 20AA                           l3476 2022                           l3468 1FCC  
                         l3580 2DC0                           l2940 386E                           l3820 17A8  
                         l3804 16C4                           l3740 13AA                           l3732 1248  
                         l3724 1172                           l3716 10B2                           l3708 1008  
                         l3660 3E98                           l3652 3E90                           l3644 3E78  
                         l3636 3E50                           l3900 39FA                           l2916 40F8  
                         l2908 40C0                           l2772 3388                           l2764 3340  
                         l2756 32E8                           l2748 3298                           l2676 364A  
                         l2684 4076                           l2860 29FE                           l2852 29D4  
                         l2844 296C                           l3628 3FEE                           l2790 3B9E  
                         l2782 3B7A                           l2694 4256                           l2926 3B12  
                         l2950 38E0                           l3398 25EE                           l3574 3612  
                         l3566 3594                           l3558 3518                           l3494 2100  
                         l3486 20B8                           l3478 202E                           l3582 2DD0  
                         l2942 387A                           l2934 3826                           l3822 17DA  
                         l3806 1702                           l3814 176A                           l3750 141A  
                         l3742 13DC                           l3734 12A4                           l3726 1182  
                         l3662 3E9A                           l3654 3E92                           l3646 3E82  
                         l3638 3E54                           l3670 25FA                           l3910 3A1A  
                         l3902 39FC                           l2774 33A8                           l2766 3360  
                         l2758 32F0                           l2678 3668                           l2686 4082  
                         l2870 2AA2                           l2862 2A0A                           l2854 29DA  
                         l2846 298C                           l2838 2928                           ?_pad 0011  
                         l2792 3BB4                           l2784 3B82                           l2928 3B1E  
                         l2960 3938                           l2952 38F8                           l3576 3618  
                         l3568 35A2                           l3496 210E                           l3488 20D6  
                         l3592 2E4E                           l3584 2DDE                           l2936 384A  
                         l2944 388A                           l3840 18E0                           l3824 180C  
                         l3760 148A                           l3752 144C                           l3736 1320  
                         l3728 11BA                           l3664 3E9C                           l3656 3E94  
                         l3648 3E8C                           l3680 285A                           l3672 26C6  
                         l3920 3A56                           l3912 3A3E                           l3904 39FE  
                         l2768 3372                           l2688 4094                           l2880 2B5E  
                         l2872 2AA8                           l2864 2A14                           l2856 29EA  
                         l2848 29A8                           l2794 3BBC                           l2786 3B8A  
                         l2778 3B60                           l2970 39A6                           l2962 3952  
                         l2954 3904                           l3498 2112                           l3594 2E56  
                         l3586 2E24                           l2946 38A2                           l2938 3862  
                         l3834 1842                           l3818 1776                           l3770 1534  
                         l3762 14BC                           l3738 1378                           l3690 0EB6  
                         l2890 42D6                           l3666 3E9E                           l3658 3E96  
                         l3682 288E                           l3674 26FA                           l3930 37B4  
                         l3922 3A60                           l3914 3A48                           l3906 3A00  
                         l2698 2F72                           l2882 2B6E                           l2866 2A1A  
                         l2874 2B0C                           l2858 29F6                           l2796 3BBE  
                         l2788 3B98                           l2964 3976                           l2972 39B6  
                         l2956 3910                           l2948 38BC                           l2980 1990  
                         l3596 2E62                           l3588 2E3A                           l3836 1874  
                         l3772 155A                           l3764 14F6                           l3748 13E8  
                         l3692 0EEA                           l3684 0E50                           l2892 42DA  
                         l3676 278E                           l3940 380C                           l3932 37CC  
                         l3924 3A62                           l3916 3A4A                           l3908 3A16  
                         l3668 3C3A                           l2884 2B74                           l2876 2B26  
                         l2868 2A9C                           l2798 3BC4                           l2974 39CE  
                         l2966 398E                           l2958 3920                           l2990 19C4  
                         l2982 1992                           l3598 2E94                           l3838 18A6  
                         l3862 196C                           l3782 1572                           l3758 1458  
                         l3694 0F1E                           l3686 0E7A                           l3942 413C  
                         l2894 42B8                           l3678 27C2                           l3934 37D8  
                         l3926 3A6C                           l3918 3A54                           l3870 428C  
                         l2886 2B84                           l2878 2B44                           l3950 3E10  
                         l2968 399A                           l3944 3BD4                           l2984 19A2  
                         l2992 19CC                           l2976 1976                           l3848 191E  
                         l3784 15A4                           l3688 0E86                           l2896 42BC  
                         l3936 37E4                           l3928 3790                           l3872 4296  
                         l3880 41BC                           l3952 3E18                           l2994 19DC  
                         l2986 19B2                           l2978 1982                           l3858 1960  
                         l3794 1618                           l3786 15D6                           l3778 1566  
                         l3946 417A                           l2898 42CC                           l3938 37F4  
                         l3874 4298                           l3866 4280                           l3882 41CA  
                         l3954 3E20                           l2996 19E2                           l2988 19C2  
                         l3796 1654                           l3876 429A                           l3868 428A  
                         l3884 41CE                           l3956 3E3C                           l3948 3DFE  
                         l2998 19F4                           l3878 41B8                           l3898 39E8  
                  GreenMove@mL 001F                    GreenMove@mR 0021                           STR_1 0E01  
                         STR_2 0E2D                           u2010 362E                           u2011 362A  
                         u2100 302E                           u2020 3640                           u2101 302A  
                         u2021 363C                           u2110 306E                           u2030 3668  
                         u2111 306A                           u2031 3664                           u2200 3B98  
                         u3000 23F8                           u2120 30B8                           u2040 369E  
                         u2201 3B94                           u3001 23F4                           u2121 30B4  
                         u2041 369A                           u2210 3BB4                           u3010 241A  
                         u2130 3278                           u2050 40B8                           u2211 3BB0  
                         u3011 2416                           u2131 3274                           u2051 40B4  
                         u3100 2526                           u3020 2444                           u2060 2F84  
                         u2140 32AA                           u2220 3A7E                           u2300 295A  
                         u3101 2522                           u3021 2440                           u2061 2F80  
                         u2141 32A6                           u2221 3A7A                           u3110 2540  
                         u3030 2468                           u2070 2FB6                           u2150 32E8  
                         u2230 3AD4                           u2310 296C                           u3111 253C  
                         u3031 2464                           u2071 2FB2                           u2151 32E4  
                         u2231 3AD0                           u2311 2968                           u3120 2588  
                         u3040 247E                           u3200 1ED4                           u2160 3312  
                         u2240 4116                           u2320 29A8                   _BAUD4CONbits 000EE9  
                         u3121 2584                           u3041 247A                           u3201 1ED0  
                         u2081 2FE0                           u2161 330E                           u2241 4112  
                         u2321 29A4                           u2410 3B46                           u3130 25B8  
                         u3050 249C                           u3210 1F0A                           u2250 4222  
                         u2090 3004                           u2170 3340                           u2330 29D4  
                         u2411 3B42                           u3131 25B4                           u3051 2498  
                         u3211 1F06                           u2251 421E                           u2091 3000  
                         u2171 333C                           u2331 29D0                           u2420 3B5E  
                         u3140 25E6                           u3060 24BC                           u3300 2192  
                         u3220 1F1A                           u2500 19A2                           u2260 4238  
                         u2180 3388                           u2340 29EA                           u2421 3B5A  
                         u3141 25E2                           u3061 24B8                           u3301 218E  
                         u3221 1F16                           u2501 199E                           u2261 4234  
                         u2181 3384                           u2341 29E6                           u2190 3B7A  
                         u2270 3116                           u3070 24CE                           u3310 21DA  
                         u3230 2094                           u3150 1E50                           u2510 19B2  
                         u2430 38A2                           u2350 2B26                           u2191 3B76  
                         u2271 3112                           u3071 24CA                           u3311 21D6  
                         u3151 1E4C                           u2511 19AE                           u2431 389E  
                         u2351 2B22                           u4007 2C88                           u2280 31E0  
                         u3080 24FC                           u3400 35C2                           u3320 2208  
                         u3240 20EE                           u3160 1E62                           u2600 1AFE  
                         u2520 19F4                           u2440 38BA                           u2408 40E6  
                         u2360 2B44                           u2281 31DC                           u3081 24F8  
                         u3401 35BE                           u3321 2204                           u3241 20EA  
                         u3161 1E5E                           u2521 19F0                           u2441 38B6  
                         u4017 37EA                           u2361 2B40                           u2450 3938  
                         u3090 2512                           u3410 3612                           u3330 2242  
                         u3250 210E                           u3170 1E72                           u2610 1B26  
                         u2530 1A0A                           u2370 2B5E                           u2290 2958  
                         _T2PR 000FBC                           u4107 3D3E                           u2451 3934  
                         u3091 250E                           u3411 360E                           u3331 223E  
                         u3251 210A                           u3235 208A                           u3171 1E6E  
                         u2611 1B22                           u2531 1A06                           u4027 3E64  
                         u2371 2B5A                           u2291 2952                           u2460 3950  
                         u3340 3714                           u3260 2120                           u3180 1EB2  
                         u2700 1C5E                           u2620 1B44                           u2540 1A1C  
                         u3500 2F50                           u3420 2DD0                           u2380 2B6E  
                         u4117 3B24                           u2461 394C                           u3341 3710  
                         u3261 211C                           u3181 1EAE                           u2701 1C5A  
                         u2621 1B40                           u2541 1A18                           u3501 2F4C  
                         u3421 2DCC                           u4037 3D6C                           u2381 2B6A  
                         u2470 39CE                           u3350 3752                           u3270 214E  
                         u3190 1EC4                           u2710 1C94                           u2630 1B64  
                         u2550 1A2C                           u3510 2F5E                           u3430 2DDE  
                         u2390 40E4                           u2471 39CA                           u4127 39AC  
                         u3351 374E                           u3271 214A                           u3191 1EC0  
                         u2711 1C90                           u2631 1B60                           u2551 1A28  
                         u3511 2F5A                           u3431 2DDA                           u4047 3D96  
                         u2391 40DC                           u2480 39E6                           u3360 3786  
                         u3280 2164                           u2800 1D5E                           u2720 1CA4  
                         u2640 1B72                           u2560 1A68                           u3440 2E3A  
                         u3600 11CC                           u3520 4026                           u2481 39E2  
                         u3361 3782                           u3281 2160                           u2801 1D5A  
                         u2721 1CA0                           u2641 1B6E                           u2561 1A64  
                         u3441 2E36                           u4057 3880                           u3601 11C8  
                         u3521 4022                           u3370 3546                           u3290 2178  
                         u2810 1D78                           u2730 1CD0                           u2650 1B82  
                         u2570 1A76                           u2490 1990                           u3450 2E90  
                         u3610 13AA                           u4067 3DC4                           u3371 3542  
                         u3291 2174                           u2811 1D74                           u2731 1CCC  
                         u2651 1B7E                           u2571 1A72                           u2491 198C  
                         u3451 2E8C                           u3611 13A6                           u3531 0E80  
                         u3380 3584                           u2820 1DB2                           u2740 1CE0  
                         u2660 1BB4                           u2580 1AE4                           u3460 2EDA  
                         u3700 15A4                           u3620 13DC                           u3540 0F7A  
                         u2900 3456                           u4077 3DEE                           u3381 3580  
                         u2821 1DAE                           u2741 1CDC                           u2661 1BB0  
                         u2581 1AE0                           u3461 2ED6                           u3701 15A0  
                         u3621 13D8                           u3541 0F76                           u2901 3452  
                         u3390 35A2                           u2830 1DC4                           u2750 1CFC  
                         u2670 1BC2                           u2590 1AFC                           u3470 2EF8  
                         u3710 15D6                           u3630 141A                           u3550 1008  
                         u2910 42B0                           u4087 3916                           u3391 359E  
                         u2831 1DC0                           u2751 1CF8                           u2671 1BBE  
                         u2591 1AF6                           u3471 2EF4                           u3711 15D2  
                         u3631 1416                           u3551 1004                           u2911 42AC  
                         u2920 227A                           u2840 1DD4                           u2760 1D0C  
                         u2680 1BE0                           u3480 2F08                           u3800 1874  
                         u3720 1614                           u3640 144C                           u3560 105C  
                         u4097 3D12                           u2921 2276                           u2841 1DD0  
                         u2761 1D08                           u2681 1BDC                           u3481 2F04  
                         u3801 1870                           u3721 1610                           u3641 1448  
                         u3561 1058                           u2930 228C                           u2850 1DF4  
                         u2770 1D1E                           u2690 1C18                           u3490 2F16  
                         u3810 18A6                           u3730 1692                           u3650 148A  
                         u3570 10B2                           u2931 2288                           u2851 1DF0  
                         u2771 1D1A                           u2691 1C14                           u3491 2F12  
                         u3811 18A2                           u3731 168E                           u3651 1486  
                         u3571 10AE                           u2940 229C                           u2860 1E06  
                         u2780 1D34                           u3820 18E0                           u3740 16C4  
                         u3660 14BC                           u3580 10D2                           u3900 3824  
                         u2941 2298                           u2861 1E02                           u2781 1D30  
                         u3821 18DC                           u3741 16C0                           u3661 14B8  
                         u3581 10CE                           u3901 3820                           u2950 22E0  
                         u2870 1E22                           u2790 1D4A                           u3830 191A  
                         u3750 1702                           u3670 14F6                           u3590 1182  
                         u2951 22DC                           u2871 1E1E                           u2791 1D46  
                         u3831 1916                           u3751 16FE                           u3671 14F2  
                         u3591 117E                           u2960 22F2                           u3840 195C  
                         u3760 17A8                           u3680 1530                           u2880 33EE  
                         u2961 22EE                           u3841 1958                           u3761 17A4  
                         u3681 152C                           u2881 33EA                           u2970 2302  
                         u3770 17DA                           u3690 155A                           u3850 41E6  
                         u2890 343A                           u2971 22FE                           u3771 17D6  
                         u3691 1556                           u3851 41E2                           u2891 3436  
                         u2980 2342                           u3780 180C                           u2981 233E  
                         u3781 1808                           u2990 2382                           u3790 183E  
                         u2991 237E                           u3791 183A                           u3960 2C6A  
                         u3961 2C66                           u3890 380C                           u3970 2CC6  
                         u3891 3808                           u3971 2CC2                           u3980 2CF2  
                         u3981 2CEE                           u3990 2D1E                           u3991 2D1A  
                         abs@a 0013                           _dbuf 015C                           _main 2BA6  
                         _dtoa 2928                           _prec 00E8                           _vals 0188  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 3AEA                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 002A         __end_of_color_read_Red 3F42  
              __end_of_HighISR 000E         __end_of_color_read_lum 3EF2                   ___param_bank 000000  
              __end_of_RedMove 417A                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 3DA6                __end_of___aodiv 30FA  
              __end_of___fladd 1E36                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 33CA                __end_of___fldiv 25FA                __end_of___flmul 2260  
              __end_of___flsub 4076                    colour_rel@B 004A                    colour_rel@G 0046  
                        ?_stop 0014                    colour_rel@L 0036                    colour_rel@R 0042  
              __end_of___lwdiv 3BD4                          i2l274 000A                   vfpfcnvrt@fmt 0041  
      __end_of_sendCharSerial4 42B6     __end_of_I2C_2_Master_Start 42E0     __end_of_I2C_2_Master_Write 42C2  
                        _flags 00EC                          _fputc 361C                          _fputs 4076  
                        pad@fp 0011                          _width 00E6                          _putch 42E2  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
                        tablat 000FF5                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 3E50  
      __end_of_color_read_Blue 3FE2          _I2C_2_Master_RepStart 42C2               __end_of_BlueMove 3C3A  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 3C98  
                 __end_of_main 2DBE                   __end_of_dtoa 2BA6                   __end_of_stop 3B60  
              _colour_rel$2498 003A                _colour_rel$2499 003E                         ??_main 0059  
                       ??_dtoa 0026                         ??_stop 0018                  __activetblptr 000001  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 3EA2                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 2F72                      ??_RedMove 0023  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                         ___flge 3518  
                       ___fleq 36E6                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 423A                      ??___fldiv 0021  
                    ??___flmul 003A                      ??___flsub 0019                      ??___lwdiv 000B  
                       clear_0 3CC8                         clear_1 3CD4                         _motorL 00F6  
                       _motorR 00ED                         isa$std 000001                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 4030  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 38BC                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 3CE2       __end_of_color_read_Green 3F92         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 42E4  
               __pcstackCOMRAM 0001                  _fullSpeedBack 3952                   __pidataBANK0 42E6  
                 __pidataBANK1 42E0                  __end_of_fputc 36E6                  __end_of_fputs 40BA  
                __end_of_putch 42E4              __end_of_GreenMove 41B8                      ?_BlueMove 001F  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14315 0150  
        __end_of_reverseDetect 3D4E                        ??_putch 0001                     __pbssBANK0 00E6  
                   __pbssBANK1 0100                reverseDetect@mL 0019                reverseDetect@mR 001B  
            _color_writetoaddr 4260                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 0019  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                     ??_BlueMove 0023  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                     _colour_rel 25FA  
      __end_of_Interrupts_init 42E6         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008               ??_color_read_lum 0007      __end_of_color_writetoaddr 4280  
                      _RedMove 413C             _I2C_2_Master_Start 42D6                     _initUSART4 4280  
           _I2C_2_Master_Write 42B6                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___aodiv 2F72  
                      ___fladd 1976                        ___aomod 3266                        ___fldiv 2260  
                      ___flmul 1E36                        ___flsub 4030            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 3B60            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 0019                   turnLeft45@mR 001B  
                      __pcinit 3C98                        __ramtop 0E00                      ?_turnLeft 0014  
                      __ptext0 2BA6                        __ptext1 3DFE                        __ptext2 3FE2  
                      __ptext3 33CA                        __ptext4 2928                        __ptext5 3A70  
                      __ptext6 4076                        __ptext7 361C                        __ptext8 42E2  
                      __ptext9 40FC                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                  _RxBufWriteCnt 005E              color_read_lum@tmp 000A  
                      main@buf 0080                        _sprintf 3DFE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 3CE2                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                ??_fullSpeedBack 0018  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 3518                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 39E8  
                   ??_turnLeft 0018             setMotorPWM@negDuty 0013              __end_of_turnRight 3952  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                  ___fldiv@grs 002C                    ___fldiv@rem 0025               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00E4                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 001F                      RedMove@mR 0021  
           ??_color_read_Green 0007                     _turnLeft45 3D4E                 __end_of___flge 361C  
               __end_of___fleq 3790                 _fullSpeedAhead 3790                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4260  
                    _GreenMove 417A            start_initialization 3C98                    __end_of_abs 413C  
                  __end_of_pad 3AEA                  _TxBufWriteCnt 005C            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 3A70                    vfprintf@fmt 0053         __end_of_fullSpeedAhead 3826  
                     ??___flge 0009                       ??___fleq 0021                       ??___wmul 0005  
                ??_readColours 000E                    __pdataBANK0 00FF                    __pdataBANK1 0190  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 001F                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 001F  
             ___lwdiv@dividend 0007                      _dtoa$2195 002E                    ?_turnLeft45 0019  
              ?_fullSpeedAhead 0014                      __pintcode 0008                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0019  
             ___aodiv@quotient 0013                       ?___flmul 0032                       ?___flsub 0011  
          _Colour_decider$2500 0060                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 3C98  
            _I2C_2_Master_Idle 4212              _I2C_2_Master_Init 41E8              _I2C_2_Master_Read 40BA  
            _I2C_2_Master_Stop 42CC                  _low_threshold 00EA                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060                 colour_rel@vals 0032  
            _sendStringSerial4 41B8            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E50            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 33CA      __end_of_I2C_2_Master_Idle 423A      __end_of_I2C_2_Master_Init 4212  
    __end_of_I2C_2_Master_Read 40FC              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 42D6  
                 setMotorPWM@m 000E                       _DataFlag 00FF    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0023              ??_color_read_Blue 0007                   _TxBufReadCnt 005B  
                     _BlueMove 3BD4                      _turnRight 38BC      __end_of_sendStringSerial4 41E8  
                 ??_colour_rel 0036                  _reverseDetect 3CF4  __end_of_I2C_2_Master_RepStart 42CC  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 3266                   ??_initUSART4 0001  
                     __Hrparam 0000         __end_of_Colour_decider 1976                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 39E8  
                 __Lsmallconst 0E00                    _readColours 3C3A                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2928  
                   _ANSELDbits 000EA7                     sprintf@fmt 0062                       ___xxtofl 2DBE  
              ___lwdiv@divisor 0009             __end_of_initUSART4 429E                ___lwdiv@counter 000D  
                   ?_turnRight 0014                       __ptext10 3266                       __ptext11 2F72  
                     __ptext20 40BA                       __ptext12 41B8                       __ptext21 4280  
                     __ptext13 429E                       __ptext30 4212                       __ptext22 39E8  
                     __ptext14 3C3A                       __ptext31 41E8                       __ptext23 3790  
                     __ptext15 3EA2                       __ptext40 1976                       __ptext32 413C  
                     __ptext24 25FA                       __ptext16 3EF2                       __ptext41 1E36  
                     __ptext33 42E4                       __ptext25 3E50                       __ptext17 3F42  
                     __ptext50 3952                       __ptext42 3518                       __ptext34 417A  
                     __ptext26 4260                       __ptext18 3F92                       __ptext51 30FA  
                     __ptext43 36E6                       __ptext35 0E50                       __ptext27 42B6  
                     __ptext19 42C2                       __ptext52 423A                       __ptext44 2260  
                     __ptext36 3D4E                       __ptext28 42CC                       __ptext53 3B60  
                     __ptext45 3BD4                       __ptext37 3826                       __ptext29 42D6  
                     __ptext46 3DA6                       __ptext38 2DBE                       __ptext47 38BC  
                     __ptext39 4030                       __ptext48 3CF4                       __ptext49 3AEA  
               ?_reverseDetect 0019                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 3FE2                  ??_turnRight45 001D                       _turnLeft 3826  
             ___aomod@dividend 0001                    _setMotorPWM 30FA                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 006E  
               _high_threshold 0190               ??_fullSpeedAhead 0018                   ??_turnLeft45 001D  
                   BlueMove@mL 001F                     BlueMove@mR 0021                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 3E50  
                     sprintf@f 0070                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 3DFE                ??_reverseDetect 001D  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 3DA6  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 429E  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
