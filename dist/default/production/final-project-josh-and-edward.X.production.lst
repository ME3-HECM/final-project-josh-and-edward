

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 19:19:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 06/04/2022 GMT
   102                           ; 
   103                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataBANK0
   137   0060BE                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   0060BE  041A               	dw	1050
   142                           
   143                           ;initializer for _Turn45Delay
   144   0060C0  003C               	dw	60
   145                           
   146                           ;initializer for _power
   147   0060C2  0032               	dw	50
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE0bits	set	3625
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _PIR0bits	set	3635
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  66                 	db	102	;'f'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  66                 	db	102	;'f'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  66                 	db	102	;'f'
   238   000E18  20                 	db	32
   239   000E19  6C                 	db	108	;'l'
   240   000E1A  75                 	db	117	;'u'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  3D                 	db	61	;'='
   243   000E1D  25                 	db	37
   244   000E1E  64                 	db	100	;'d'
   245   000E1F  20                 	db	32
   246   000E20  61                 	db	97	;'a'
   247   000E21  63                 	db	99	;'c'
   248   000E22  74                 	db	116	;'t'
   249   000E23  75                 	db	117	;'u'
   250   000E24  61                 	db	97	;'a'
   251   000E25  6C                 	db	108	;'l'
   252   000E26  5F                 	db	95	;'_'
   253   000E27  63                 	db	99	;'c'
   254   000E28  6F                 	db	111	;'o'
   255   000E29  6C                 	db	108	;'l'
   256   000E2A  6F                 	db	111	;'o'
   257   000E2B  75                 	db	117	;'u'
   258   000E2C  72                 	db	114	;'r'
   259   000E2D  3D                 	db	61	;'='
   260   000E2E  25                 	db	37
   261   000E2F  64                 	db	100	;'d'
   262   000E30  20                 	db	32
   263   000E31  0D                 	db	13
   264   000E32  0A                 	db	10
   265   000E33  00                 	db	0
   266   000E34                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E34  69                 	db	105	;'i'
   270   000E35  6E                 	db	110	;'n'
   271   000E36  66                 	db	102	;'f'
   272   000E37  00                 	db	0
   273   000E38                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E38  6E                 	db	110	;'n'
   277   000E39  61                 	db	97	;'a'
   278   000E3A  6E                 	db	110	;'n'
   279   000E3B  00                 	db	0
   280   000E3C  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   005C0E                     __pcinit:
   286                           	callstack 0
   287   005C0E                     start_initialization:
   288                           	callstack 0
   289   005C0E                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (6 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   005C0E  0EBE               	movlw	low __pidataBANK0
   295   005C10  6EF6               	movwf	tblptrl,c
   296   005C12  0E60               	movlw	high __pidataBANK0
   297   005C14  6EF7               	movwf	tblptrh,c
   298   005C16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   005C18  6EF8               	movwf	tblptru,c
   300   005C1A  EE00  F0F0         	lfsr	0,__pdataBANK0
   301   005C1E  EE10 F006          	lfsr	1,6
   302   005C22                     copy_data0:
   303   005C22  0009               	tblrd		*+
   304   005C24  CFF5 FFEE          	movff	tablat,postinc0
   305   005C28  50E5               	movf	postdec1,w,c
   306   005C2A  50E1               	movf	fsr1l,w,c
   307   005C2C  E1FA               	bnz	copy_data0
   308                           
   309                           ; Clear objects allocated to BANK2 (240 bytes)
   310   005C2E  EE02  F000         	lfsr	0,__pbssBANK2
   311   005C32  0EF0               	movlw	240
   312   005C34                     clear_0:
   313   005C34  6AEE               	clrf	postinc0,c
   314   005C36  06E8               	decf	wreg,f,c
   315   005C38  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK1 (114 bytes)
   318   005C3A  EE01  F000         	lfsr	0,__pbssBANK1
   319   005C3E  0E72               	movlw	114
   320   005C40                     clear_1:
   321   005C40  6AEE               	clrf	postinc0,c
   322   005C42  06E8               	decf	wreg,f,c
   323   005C44  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to BANK0 (29 bytes)
   326   005C46  EE00  F0D3         	lfsr	0,__pbssBANK0
   327   005C4A  0E1D               	movlw	29
   328   005C4C                     clear_2:
   329   005C4C  6AEE               	clrf	postinc0,c
   330   005C4E  06E8               	decf	wreg,f,c
   331   005C50  E1FD               	bnz	clear_2
   332   005C52                     end_of_initialization:
   333                           	callstack 0
   334   005C52                     __end_of__initialization:
   335                           	callstack 0
   336   005C52  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   005C54  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   005C56  0100               	movlb	0
   339   005C58  EF4C  F011         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342   0000D3                     __pbssBANK0:
   343                           	callstack 0
   344   0000D3                     	ds	12
   345   0000DF                     floorf@F526:
   346                           	callstack 0
   347   0000DF                     	ds	4
   348   0000E3                     ___fpclassifyf@F465:
   349                           	callstack 0
   350   0000E3                     	ds	4
   351   0000E7                     _width:
   352                           	callstack 0
   353   0000E7                     	ds	2
   354   0000E9                     _prec:
   355                           	callstack 0
   356   0000E9                     	ds	2
   357   0000EB                     _flags:
   358                           	callstack 0
   359   0000EB                     	ds	1
   360   0000EC                     _TxBufReadCnt:
   361                           	callstack 0
   362   0000EC                     	ds	1
   363   0000ED                     _TxBufWriteCnt:
   364                           	callstack 0
   365   0000ED                     	ds	1
   366   0000EE                     _RxBufReadCnt:
   367                           	callstack 0
   368   0000EE                     	ds	1
   369   0000EF                     _RxBufWriteCnt:
   370                           	callstack 0
   371   0000EF                     	ds	1
   372                           
   373                           	psect	dataBANK0
   374   0000F0                     __pdataBANK0:
   375                           	callstack 0
   376   0000F0                     _RunOneBlockTime:
   377                           	callstack 0
   378   0000F0                     	ds	2
   379   0000F2                     _Turn45Delay:
   380                           	callstack 0
   381   0000F2                     	ds	2
   382   0000F4                     _power:
   383                           	callstack 0
   384   0000F4                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387   000100                     __pbssBANK1:
   388                           	callstack 0
   389   000100                     _EUSART4RXbuf:
   390                           	callstack 0
   391   000100                     	ds	20
   392   000114                     _move_count:
   393                           	callstack 0
   394   000114                     	ds	2
   395   000116                     _run_flag:
   396                           	callstack 0
   397   000116                     	ds	2
   398   000118                     _lost_flag:
   399                           	callstack 0
   400   000118                     	ds	2
   401   00011A                     _WayBack:
   402                           	callstack 0
   403   00011A                     	ds	50
   404   00014C                     _rel:
   405                           	callstack 0
   406   00014C                     	ds	12
   407   000158                     _motorR:
   408                           	callstack 0
   409   000158                     	ds	9
   410   000161                     _motorL:
   411                           	callstack 0
   412   000161                     	ds	9
   413   00016A                     _vals:
   414                           	callstack 0
   415   00016A                     	ds	8
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _EUSART4TXbuf:
   421                           	callstack 0
   422   000200                     	ds	60
   423   00023C                     _Time_forward:
   424                           	callstack 0
   425   00023C                     	ds	100
   426   0002A0                     _dbuf:
   427                           	callstack 0
   428   0002A0                     	ds	80
   429                           
   430                           	psect	cstackBANK1
   431   000172                     __pcstackBANK1:
   432                           	callstack 0
   433   000172                     main@buf:
   434                           	callstack 0
   435                           
   436                           ; 100 bytes @ 0x0
   437   000172                     	ds	100
   438   0001D6                     main@consecuitive:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x64
   442   0001D6                     	ds	2
   443   0001D8                     main@colour:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x66
   447   0001D8                     	ds	2
   448   0001DA                     main@lost_count:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x68
   452   0001DA                     	ds	2
   453   0001DC                     main@prev_colour:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x6A
   457   0001DC                     	ds	2
   458                           
   459                           	psect	cstackBANK0
   460   000060                     __pcstackBANK0:
   461                           	callstack 0
   462   000060                     efgtoa@fp:
   463                           	callstack 0
   464   000060                     colour_rel@L:
   465                           	callstack 0
   466   000060                     _Colour_decider$3205:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x0
   470   000060                     	ds	2
   471   000062                     efgtoa@f:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x2
   475   000062                     	ds	2
   476   000064                     Colour_decider@Cmax_i:
   477                           	callstack 0
   478   000064                     _colour_rel$3203:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x4
   482   000064                     	ds	2
   483   000066                     efgtoa@c:
   484                           	callstack 0
   485   000066                     Colour_decider@RGB_col:
   486                           	callstack 0
   487                           
   488                           ; 12 bytes @ 0x6
   489   000066                     	ds	1
   490   000067                     ??_efgtoa:
   491                           
   492                           ; 1 bytes @ 0x7
   493   000067                     	ds	1
   494   000068                     _colour_rel$3204:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x8
   498   000068                     	ds	1
   499   000069                     efgtoa@ne:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503   000069                     	ds	2
   504   00006B                     efgtoa@p:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508   00006B                     	ds	1
   509   00006C                     colour_rel@R:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0xC
   513   00006C                     	ds	1
   514   00006D                     efgtoa@t:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518   00006D                     	ds	2
   519   00006F                     _efgtoa$2852:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xF
   523   00006F                     	ds	1
   524   000070                     colour_rel@G:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x10
   528   000070                     	ds	1
   529   000071                     efgtoa@pp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x11
   533   000071                     	ds	1
   534   000072                     efgtoa@mode:
   535                           	callstack 0
   536   000072                     Colour_decider@Cmax:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x12
   540   000072                     	ds	1
   541   000073                     efgtoa@nmode:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x13
   545   000073                     	ds	1
   546   000074                     efgtoa@d:
   547                           	callstack 0
   548   000074                     colour_rel@B:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x14
   552   000074                     	ds	2
   553   000076                     efgtoa@m:
   554                           	callstack 0
   555   000076                     Colour_decider@Cmin:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x16
   559   000076                     	ds	2
   560   000078                     efgtoa@e:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564   000078                     	ds	2
   565   00007A                     Colour_decider@i:
   566                           	callstack 0
   567   00007A                     efgtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571   00007A                     	ds	2
   572   00007C                     Colour_decider@Hue:
   573                           	callstack 0
   574   00007C                     efgtoa@ou:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x1C
   578   00007C                     	ds	4
   579   000080                     efgtoa@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x20
   583   000080                     	ds	2
   584   000082                     efgtoa@h:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x22
   588   000082                     	ds	4
   589   000086                     efgtoa@l:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x26
   593   000086                     	ds	4
   594   00008A                     efgtoa@sign:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x2A
   598   00008A                     	ds	1
   599   00008B                     efgtoa@n:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x2B
   603   00008B                     	ds	2
   604   00008D                     efgtoa@g:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x2D
   608   00008D                     	ds	4
   609   000091                     efgtoa@u:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x31
   613   000091                     	ds	4
   614   000095                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x35
   618   000095                     	ds	2
   619   000097                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x37
   623   000097                     	ds	2
   624   000099                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x39
   628   000099                     	ds	2
   629   00009B                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x3B
   632   00009B                     	ds	2
   633   00009D                     vfpfcnvrt@convarg:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x3D
   637   00009D                     	ds	8
   638   0000A5                     vfpfcnvrt@c:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x45
   642   0000A5                     	ds	1
   643   0000A6                     vfpfcnvrt@cp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x46
   647   0000A6                     	ds	2
   648   0000A8                     ?_vfprintf:
   649                           	callstack 0
   650   0000A8                     vfprintf@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x48
   654   0000A8                     	ds	2
   655   0000AA                     vfprintf@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4A
   659   0000AA                     	ds	2
   660   0000AC                     vfprintf@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x4C
   664   0000AC                     	ds	2
   665   0000AE                     vfprintf@cfmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x4E
   669   0000AE                     	ds	2
   670   0000B0                     ?_sprintf:
   671                           	callstack 0
   672   0000B0                     sprintf@s:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x50
   676   0000B0                     	ds	2
   677   0000B2                     sprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x52
   681   0000B2                     	ds	18
   682   0000C4                     sprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x64
   686   0000C4                     	ds	2
   687   0000C6                     sprintf@f:
   688                           	callstack 0
   689                           
   690                           ; 11 bytes @ 0x66
   691   0000C6                     	ds	11
   692   0000D1                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x71
   695   0000D1                     	ds	2
   696                           
   697                           	psect	cstackCOMRAM
   698   000001                     __pcstackCOMRAM:
   699                           	callstack 0
   700   000001                     ??_getTMR0val:
   701   000001                     ??_I2C_2_Master_Idle:
   702   000001                     ?___fpclassifyf:
   703                           	callstack 0
   704   000001                     ?___wmul:
   705                           	callstack 0
   706   000001                     ?___fladd:
   707                           	callstack 0
   708   000001                     ?_labs:
   709                           	callstack 0
   710   000001                     ?___flneg:
   711                           	callstack 0
   712   000001                     ?___fltol:
   713                           	callstack 0
   714   000001                     ?___xxtofl:
   715                           	callstack 0
   716   000001                     ?___aodiv:
   717                           	callstack 0
   718   000001                     ?___aomod:
   719                           	callstack 0
   720   000001                     sendCharSerial4@charToSend:
   721                           	callstack 0
   722   000001                     initDCmotorsPWM@PWMperiod:
   723                           	callstack 0
   724   000001                     TurnDelay@Turn45Delay:
   725                           	callstack 0
   726   000001                     delayed_ms@time:
   727                           	callstack 0
   728   000001                     ___wmul@multiplier:
   729                           	callstack 0
   730   000001                     memcpy@d1:
   731                           	callstack 0
   732   000001                     fputc@c:
   733                           	callstack 0
   734   000001                     strcpy@dest:
   735                           	callstack 0
   736   000001                     ___flneg@f1:
   737                           	callstack 0
   738   000001                     ___fltol@f1:
   739                           	callstack 0
   740   000001                     ___fladd@b:
   741                           	callstack 0
   742   000001                     ___xxtofl@val:
   743                           	callstack 0
   744   000001                     ___fpclassifyf@x:
   745                           	callstack 0
   746   000001                     labs@a:
   747                           	callstack 0
   748   000001                     ___aodiv@dividend:
   749                           	callstack 0
   750   000001                     ___aomod@dividend:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x0
   754   000001                     	ds	1
   755   000002                     ??_I2C_2_Master_Read:
   756   000002                     I2C_2_Master_Write@data_byte:
   757                           	callstack 0
   758   000002                     sendStringSerial4@string:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x1
   762   000002                     	ds	1
   763   000003                     ??_delayed_ms:
   764   000003                     ??_TurnDelay:
   765   000003                     color_writetoaddr@value:
   766                           	callstack 0
   767   000003                     I2C_2_Master_Read@ack:
   768                           	callstack 0
   769   000003                     getTMR0val@temp:
   770                           	callstack 0
   771   000003                     ___wmul@multiplicand:
   772                           	callstack 0
   773   000003                     memcpy@s1:
   774                           	callstack 0
   775   000003                     fputc@fp:
   776                           	callstack 0
   777   000003                     strcpy@src:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x2
   781   000003                     	ds	1
   782   000004                     color_writetoaddr@address:
   783                           	callstack 0
   784   000004                     I2C_2_Master_Read@tmp:
   785                           	callstack 0
   786   000004                     delayed_ms@i:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x3
   790   000004                     	ds	1
   791   000005                     ??_fputc:
   792   000005                     ??___fpclassifyf:
   793   000005                     ??_labs:
   794   000005                     ??_color_click_init:
   795   000005                     ??___fltol:
   796   000005                     ??___xxtofl:
   797   000005                     ?_color_read_lum:
   798                           	callstack 0
   799   000005                     ?_color_read_Red:
   800                           	callstack 0
   801   000005                     ?_color_read_Green:
   802                           	callstack 0
   803   000005                     ?_color_read_Blue:
   804                           	callstack 0
   805   000005                     getTMR0val@moving:
   806                           	callstack 0
   807   000005                     ___wmul@product:
   808                           	callstack 0
   809   000005                     memcpy@n:
   810                           	callstack 0
   811   000005                     strcpy@s:
   812                           	callstack 0
   813   000005                     ___fladd@a:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x4
   817   000005                     	ds	2
   818   000007                     ??_color_read_lum:
   819   000007                     ??_color_read_Red:
   820   000007                     ??_color_read_Green:
   821   000007                     ??_color_read_Blue:
   822   000007                     ?___lwdiv:
   823                           	callstack 0
   824   000007                     ___lwdiv@dividend:
   825                           	callstack 0
   826   000007                     memcpy@d:
   827                           	callstack 0
   828   000007                     strcpy@d:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x6
   832   000007                     	ds	2
   833   000009                     ??___fladd:
   834   000009                     ___fltol@sign1:
   835                           	callstack 0
   836   000009                     ___xxtofl@sign:
   837                           	callstack 0
   838   000009                     ___lwdiv@divisor:
   839                           	callstack 0
   840   000009                     ___fpclassifyf@e:
   841                           	callstack 0
   842   000009                     memcpy@s:
   843                           	callstack 0
   844   000009                     ___aodiv@divisor:
   845                           	callstack 0
   846   000009                     ___aomod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x8
   850   000009                     	ds	1
   851   00000A                     ___fltol@exp1:
   852                           	callstack 0
   853   00000A                     ___xxtofl@exp:
   854                           	callstack 0
   855   00000A                     color_read_lum@tmp:
   856                           	callstack 0
   857   00000A                     color_read_Red@tmp:
   858                           	callstack 0
   859   00000A                     color_read_Green@tmp:
   860                           	callstack 0
   861   00000A                     color_read_Blue@tmp:
   862                           	callstack 0
   863   00000A                     fputs@s:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x9
   867   00000A                     	ds	1
   868   00000B                     memcpy@tmp:
   869                           	callstack 0
   870   00000B                     ___lwdiv@quotient:
   871                           	callstack 0
   872   00000B                     ___xxtofl@arg:
   873                           	callstack 0
   874   00000B                     ___fpclassifyf@u:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     readColours@vals:
   880                           	callstack 0
   881   00000C                     fputs@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0xB
   885   00000C                     	ds	1
   886   00000D                     ___lwdiv@counter:
   887                           	callstack 0
   888   00000D                     ___fladd@signs:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0xC
   892   00000D                     	ds	1
   893   00000E                     ___fladd@aexp:
   894                           	callstack 0
   895   00000E                     fputs@c:
   896                           	callstack 0
   897   00000E                     setMotorPWM@m:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xD
   901   00000E                     	ds	1
   902   00000F                     ___fladd@bexp:
   903                           	callstack 0
   904   00000F                     fputs@i:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0xE
   908   00000F                     	ds	1
   909   000010                     ??_setMotorPWM:
   910   000010                     ___fladd@grs:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0xF
   914   000010                     	ds	1
   915   000011                     ?___flmul:
   916                           	callstack 0
   917   000011                     ___aodiv@counter:
   918                           	callstack 0
   919   000011                     ___aomod@counter:
   920                           	callstack 0
   921   000011                     pad@fp:
   922                           	callstack 0
   923   000011                     ___flmul@b:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x10
   927   000011                     	ds	1
   928   000012                     setMotorPWM@posDuty:
   929                           	callstack 0
   930   000012                     ___aodiv@sign:
   931                           	callstack 0
   932   000012                     ___aomod@sign:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x11
   936   000012                     	ds	1
   937   000013                     ?_abs:
   938                           	callstack 0
   939   000013                     setMotorPWM@negDuty:
   940                           	callstack 0
   941   000013                     pad@buf:
   942                           	callstack 0
   943   000013                     abs@a:
   944                           	callstack 0
   945   000013                     ___aodiv@quotient:
   946                           	callstack 0
   947                           
   948                           ; 8 bytes @ 0x12
   949   000013                     	ds	1
   950   000014                     stop@mL:
   951                           	callstack 0
   952   000014                     turnLeft@mL:
   953                           	callstack 0
   954   000014                     turnRight@mL:
   955                           	callstack 0
   956   000014                     fullSpeedAhead@mL:
   957                           	callstack 0
   958   000014                     timed_forward@mL:
   959                           	callstack 0
   960   000014                     fullSpeedBack@mL:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x13
   964   000014                     	ds	1
   965   000015                     ??_abs:
   966   000015                     pad@p:
   967                           	callstack 0
   968   000015                     ___flmul@a:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x14
   972   000015                     	ds	1
   973   000016                     stop@mR:
   974                           	callstack 0
   975   000016                     turnLeft@mR:
   976                           	callstack 0
   977   000016                     turnRight@mR:
   978                           	callstack 0
   979   000016                     fullSpeedAhead@mR:
   980                           	callstack 0
   981   000016                     timed_forward@mR:
   982                           	callstack 0
   983   000016                     fullSpeedBack@mR:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x15
   987   000016                     	ds	1
   988   000017                     ??_pad:
   989                           
   990                           ; 1 bytes @ 0x16
   991   000017                     	ds	1
   992   000018                     ??_fullSpeedAhead:
   993   000018                     ??_stop:
   994   000018                     ??_turnLeft:
   995   000018                     ??_turnRight:
   996   000018                     ??_fullSpeedBack:
   997   000018                     timed_forward@time:
   998                           	callstack 0
   999   000018                     pad@i:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x17
  1003   000018                     	ds	1
  1004   000019                     ??___flmul:
  1005                           
  1006                           ; 1 bytes @ 0x18
  1007   000019                     	ds	1
  1008   00001A                     ??_timed_forward:
  1009   00001A                     turnRight45@mL:
  1010                           	callstack 0
  1011   00001A                     turnLeft45@mL:
  1012                           	callstack 0
  1013   00001A                     reverseDetect@mL:
  1014                           	callstack 0
  1015   00001A                     reverseOneBlock@mL:
  1016                           	callstack 0
  1017   00001A                     ForwardOneBlock@mL:
  1018                           	callstack 0
  1019   00001A                     Forwardhalfblock@mL:
  1020                           	callstack 0
  1021   00001A                     pad@w:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x19
  1025   00001A                     	ds	2
  1026   00001C                     turnRight45@mR:
  1027                           	callstack 0
  1028   00001C                     turnLeft45@mR:
  1029                           	callstack 0
  1030   00001C                     reverseDetect@mR:
  1031                           	callstack 0
  1032   00001C                     reverseOneBlock@mR:
  1033                           	callstack 0
  1034   00001C                     ForwardOneBlock@mR:
  1035                           	callstack 0
  1036   00001C                     Forwardhalfblock@mR:
  1037                           	callstack 0
  1038   00001C                     dtoa@fp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x1B
  1042   00001C                     	ds	1
  1043   00001D                     ___flmul@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x1C
  1047   00001D                     	ds	1
  1048   00001E                     ??_Forwardhalfblock:
  1049   00001E                     ??_turnRight45:
  1050   00001E                     ??_turnLeft45:
  1051   00001E                     ??_reverseDetect:
  1052   00001E                     ??_reverseOneBlock:
  1053   00001E                     ??_ForwardOneBlock:
  1054   00001E                     ___flmul@grs:
  1055                           	callstack 0
  1056   00001E                     dtoa@d:
  1057                           	callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x1D
  1060   00001E                     	ds	2
  1061   000020                     RedMove@mL:
  1062                           	callstack 0
  1063   000020                     GreenMove@mL:
  1064                           	callstack 0
  1065   000020                     BlueMove@mL:
  1066                           	callstack 0
  1067   000020                     YellowMove@mL:
  1068                           	callstack 0
  1069   000020                     PinkMove@mL:
  1070                           	callstack 0
  1071   000020                     OrangeMove@mL:
  1072                           	callstack 0
  1073   000020                     LightBlueMove@mL:
  1074                           	callstack 0
  1075   000020                     RetryMove@mL:
  1076                           	callstack 0
  1077   000020                     ReverseYellow@mL:
  1078                           	callstack 0
  1079   000020                     ReversePink@mL:
  1080                           	callstack 0
  1081   000020                     turnCalibration@mL:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x1F
  1085   000020                     	ds	2
  1086   000022                     ___flmul@aexp:
  1087                           	callstack 0
  1088   000022                     RedMove@mR:
  1089                           	callstack 0
  1090   000022                     GreenMove@mR:
  1091                           	callstack 0
  1092   000022                     BlueMove@mR:
  1093                           	callstack 0
  1094   000022                     YellowMove@mR:
  1095                           	callstack 0
  1096   000022                     PinkMove@mR:
  1097                           	callstack 0
  1098   000022                     OrangeMove@mR:
  1099                           	callstack 0
  1100   000022                     LightBlueMove@mR:
  1101                           	callstack 0
  1102   000022                     RetryMove@mR:
  1103                           	callstack 0
  1104   000022                     ReverseYellow@mR:
  1105                           	callstack 0
  1106   000022                     ReversePink@mR:
  1107                           	callstack 0
  1108   000022                     turnCalibration@mR:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x21
  1112   000022                     	ds	1
  1113   000023                     ___flmul@bexp:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x22
  1117   000023                     	ds	1
  1118   000024                     ??_turnCalibration:
  1119   000024                     ??_RetryMove:
  1120   000024                     go_Home@WayBack:
  1121                           	callstack 0
  1122   000024                     ___flmul@prod:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x23
  1126   000024                     	ds	2
  1127   000026                     ??_dtoa:
  1128   000026                     go_Home@Time_forward:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x25
  1132   000026                     	ds	2
  1133   000028                     ??_go_Home:
  1134   000028                     ___flmul@temp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x27
  1138   000028                     	ds	2
  1139   00002A                     ?___flsub:
  1140                           	callstack 0
  1141   00002A                     ___flge@ff1:
  1142                           	callstack 0
  1143   00002A                     ___flsub@b:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x29
  1147   00002A                     	ds	1
  1148   00002B                     go_Home@i:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x2A
  1152   00002B                     	ds	3
  1153   00002E                     _dtoa$2821:
  1154                           	callstack 0
  1155   00002E                     ___flge@ff2:
  1156                           	callstack 0
  1157   00002E                     ___flsub@a:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x2D
  1161   00002E                     	ds	2
  1162   000030                     dtoa@p:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x2F
  1166   000030                     	ds	2
  1167   000032                     ??___flge:
  1168   000032                     ?___fldiv:
  1169                           	callstack 0
  1170   000032                     dtoa@w:
  1171                           	callstack 0
  1172   000032                     ___fleq@ff1:
  1173                           	callstack 0
  1174   000032                     ___fldiv@b:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x31
  1178   000032                     	ds	2
  1179   000034                     dtoa@n:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x33
  1183   000034                     	ds	2
  1184   000036                     ___fleq@ff2:
  1185                           	callstack 0
  1186   000036                     ___fldiv@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x35
  1190   000036                     	ds	4
  1191   00003A                     ??___fldiv:
  1192   00003A                     ??___fleq:
  1193                           
  1194                           ; 1 bytes @ 0x39
  1195   00003A                     	ds	2
  1196   00003C                     dtoa@i:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3B
  1200   00003C                     	ds	2
  1201   00003E                     dtoa@s:
  1202                           	callstack 0
  1203   00003E                     ___fldiv@rem:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x3D
  1207   00003E                     	ds	4
  1208   000042                     ___fldiv@sign:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x41
  1212   000042                     	ds	1
  1213   000043                     ___fldiv@new_exp:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x42
  1217   000043                     	ds	2
  1218   000045                     ___fldiv@grs:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x44
  1222   000045                     	ds	4
  1223   000049                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x48
  1227   000049                     	ds	1
  1228   00004A                     ___fldiv@aexp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x49
  1232   00004A                     	ds	1
  1233   00004B                     ?_Colour_decider:
  1234                           	callstack 0
  1235   00004B                     ?_floorf:
  1236                           	callstack 0
  1237   00004B                     colour_rel@vals:
  1238                           	callstack 0
  1239   00004B                     Colour_decider@vals:
  1240                           	callstack 0
  1241   00004B                     floorf@x:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x4A
  1245   00004B                     	ds	2
  1246   00004D                     colour_rel@rel:
  1247                           	callstack 0
  1248   00004D                     Colour_decider@rel:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x4C
  1252   00004D                     	ds	2
  1253   00004F                     ??_floorf:
  1254   00004F                     ??_Colour_decider:
  1255                           
  1256                           ; 1 bytes @ 0x4E
  1257   00004F                     	ds	6
  1258   000055                     floorf@m:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x54
  1262   000055                     	ds	4
  1263   000059                     floorf@e:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x58
  1267   000059                     	ds	2
  1268   00005B                     floorf@u:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x5A
  1272   00005B                     	ds	4
  1273   00005F                     
  1274                           ; 1 bytes @ 0x5E
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 30 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  colour          2  102[BANK1 ] int 
  1285 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1286 ;;  prev_colour     2  106[BANK1 ] int 
  1287 ;;  lost_count      2  104[BANK1 ] int 
  1288 ;;  consecuitive    2  100[BANK1 ] int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;Total ram usage:      110 bytes
  1303 ;; Hardware stack levels required when called: 9
  1304 ;; This function calls:
  1305 ;;		_BlueMove
  1306 ;;		_Colour_decider
  1307 ;;		_Forwardhalfblock
  1308 ;;		_GreenMove
  1309 ;;		_I2C_2_Master_Init
  1310 ;;		_Interrupts_init
  1311 ;;		_LightBlueMove
  1312 ;;		_OrangeMove
  1313 ;;		_PinkMove
  1314 ;;		_RedMove
  1315 ;;		_RetryMove
  1316 ;;		_Timer0_init
  1317 ;;		_YellowMove
  1318 ;;		_color_click_init
  1319 ;;		_colour_rel
  1320 ;;		_fullSpeedAhead
  1321 ;;		_getTMR0val
  1322 ;;		_go_Home
  1323 ;;		_initDCmotorsPWM
  1324 ;;		_initUSART4
  1325 ;;		_readColours
  1326 ;;		_sendStringSerial4
  1327 ;;		_sprintf
  1328 ;;		_stop
  1329 ;;		_turnCalibration
  1330 ;; This function is called by:
  1331 ;;		Startup code after reset
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text0
  1336   002298                     __ptext0:
  1337                           	callstack 0
  1338   002298                     _main:
  1339                           	callstack 22
  1340   002298                     
  1341                           ;main.c: 31:     initUSART4();
  1342   002298  EC29  F030         	call	_initUSART4	;wreg free
  1343   00229C                     
  1344                           ;main.c: 32:     Interrupts_init();
  1345   00229C  EC4A  F030         	call	_Interrupts_init	;wreg free
  1346   0022A0                     
  1347                           ;main.c: 33:     color_click_init();
  1348   0022A0  ECC4  F02C         	call	_color_click_init	;wreg free
  1349   0022A4                     
  1350                           ;main.c: 34:     I2C_2_Master_Init();
  1351   0022A4  ECCD  F02F         	call	_I2C_2_Master_Init	;wreg free
  1352   0022A8                     
  1353                           ;main.c: 35:     initDCmotorsPWM(200);
  1354   0022A8  0E00               	movlw	0
  1355   0022AA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1356   0022AC  0EC8               	movlw	200
  1357   0022AE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1358   0022B0  EC77  F029         	call	_initDCmotorsPWM	;wreg free
  1359   0022B4                     
  1360                           ;main.c: 36:     Timer0_init();
  1361   0022B4  EC19  F030         	call	_Timer0_init	;wreg free
  1362   0022B8                     
  1363                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1364   0022B8  9287               	bcf	135,1,c	;volatile
  1365   0022BA                     
  1366                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1367   0022BA  9881               	bcf	129,4,c	;volatile
  1368   0022BC                     
  1369                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1370   0022BC  9E86               	bcf	134,7,c	;volatile
  1371   0022BE                     
  1372                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1373   0022BE  8486               	bsf	134,2,c	;volatile
  1374   0022C0                     
  1375                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1376   0022C0  010E               	movlb	14	; () banked
  1377   0022C2  95B4               	bcf	180,2,b	;volatile
  1378   0022C4                     
  1379                           ; BSR set to: 14
  1380                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1381   0022C4  8686               	bsf	134,3,c	;volatile
  1382   0022C6                     
  1383                           ; BSR set to: 14
  1384                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1385   0022C6  97B4               	bcf	180,3,b	;volatile
  1386   0022C8                     
  1387                           ; BSR set to: 14
  1388                           ;main.c: 46:     LATGbits.LATG1=1;
  1389   0022C8  827F               	bsf	127,1,c	;volatile
  1390   0022CA                     
  1391                           ; BSR set to: 14
  1392                           ;main.c: 47:     LATAbits.LATA4=1;
  1393   0022CA  8879               	bsf	121,4,c	;volatile
  1394   0022CC                     
  1395                           ; BSR set to: 14
  1396                           ;main.c: 48:     LATFbits.LATF7=1;
  1397   0022CC  8E7E               	bsf	126,7,c	;volatile
  1398   0022CE                     
  1399                           ; BSR set to: 14
  1400                           ;main.c: 51:     LATDbits.LATD7=0;
  1401   0022CE  9E7C               	bcf	124,7,c	;volatile
  1402   0022D0                     
  1403                           ; BSR set to: 14
  1404                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1405   0022D0  9E84               	bcf	132,7,c	;volatile
  1406   0022D2                     
  1407                           ; BSR set to: 14
  1408                           ;main.c: 53:     LATHbits.LATH3=0;
  1409   0022D2  9680               	bcf	128,3,c	;volatile
  1410   0022D4                     
  1411                           ; BSR set to: 14
  1412                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1413   0022D4  9688               	bcf	136,3,c	;volatile
  1414   0022D6                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 57:     LATHbits.LATH0=0;
  1417   0022D6  9080               	bcf	128,0,c	;volatile
  1418   0022D8                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1421   0022D8  9088               	bcf	136,0,c	;volatile
  1422   0022DA                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 61:     LATFbits.LATF0=0;
  1425   0022DA  907E               	bcf	126,0,c	;volatile
  1426   0022DC                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1429   0022DC  9086               	bcf	134,0,c	;volatile
  1430   0022DE                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 65:     LATDbits.LATD4=0;
  1433   0022DE  987C               	bcf	124,4,c	;volatile
  1434   0022E0                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1437   0022E0  9884               	bcf	132,4,c	;volatile
  1438   0022E2                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 69:     LATDbits.LATD3=0;
  1441   0022E2  967C               	bcf	124,3,c	;volatile
  1442   0022E4                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1445   0022E4  9684               	bcf	132,3,c	;volatile
  1446   0022E6                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 74:     motorL.power=0;
  1449   0022E6  0E00               	movlw	0
  1450   0022E8  0101               	movlb	1	; () banked
  1451   0022EA  6F61               	movwf	_motorL& (0+255),b
  1452   0022EC                     
  1453                           ; BSR set to: 1
  1454                           ;main.c: 75:     motorL.direction=1;
  1455   0022EC  0E01               	movlw	1
  1456   0022EE  6F62               	movwf	(_motorL+1)& (0+255),b
  1457   0022F0                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 76:     motorL.brakemode=1;
  1460   0022F0  0E01               	movlw	1
  1461   0022F2  6F63               	movwf	(_motorL+2)& (0+255),b
  1462   0022F4                     
  1463                           ; BSR set to: 1
  1464                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1465   0022F4  0EAA               	movlw	170
  1466   0022F6  6F66               	movwf	(_motorL+5)& (0+255),b
  1467   0022F8  0E0F               	movlw	15
  1468   0022FA  6F67               	movwf	(_motorL+6)& (0+255),b
  1469   0022FC                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1472   0022FC  0EA6               	movlw	166
  1473   0022FE  6F68               	movwf	(_motorL+7)& (0+255),b
  1474   002300  0E0F               	movlw	15
  1475   002302  6F69               	movwf	(_motorL+8)& (0+255),b
  1476   002304                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 79:     motorL.PWMperiod=200;
  1479   002304  0E00               	movlw	0
  1480   002306  6F65               	movwf	(_motorL+4)& (0+255),b
  1481   002308  0EC8               	movlw	200
  1482   00230A  6F64               	movwf	(_motorL+3)& (0+255),b
  1483   00230C                     
  1484                           ; BSR set to: 1
  1485                           ;main.c: 80:     motorR.power=0;
  1486   00230C  0E00               	movlw	0
  1487   00230E  6F58               	movwf	_motorR& (0+255),b
  1488   002310                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 81:     motorR.direction=1;
  1491   002310  0E01               	movlw	1
  1492   002312  6F59               	movwf	(_motorR+1)& (0+255),b
  1493   002314                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 82:     motorR.brakemode=1;
  1496   002314  0E01               	movlw	1
  1497   002316  6F5A               	movwf	(_motorR+2)& (0+255),b
  1498   002318                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1501   002318  0E25               	movlw	37
  1502   00231A  6F5D               	movwf	(_motorR+5)& (0+255),b
  1503   00231C  0E0F               	movlw	15
  1504   00231E  6F5E               	movwf	(_motorR+6)& (0+255),b
  1505   002320                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1508   002320  0E21               	movlw	33
  1509   002322  6F5F               	movwf	(_motorR+7)& (0+255),b
  1510   002324  0E0F               	movlw	15
  1511   002326  6F60               	movwf	(_motorR+8)& (0+255),b
  1512   002328                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 85:     motorR.PWMperiod=200;
  1515   002328  0E00               	movlw	0
  1516   00232A  6F5C               	movwf	(_motorR+4)& (0+255),b
  1517   00232C  0EC8               	movlw	200
  1518   00232E  6F5B               	movwf	(_motorR+3)& (0+255),b
  1519   002330                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 88:     int prev_colour =0;
  1522   002330  0E00               	movlw	0
  1523   002332  6FDD               	movwf	(main@prev_colour+1)& (0+255),b
  1524   002334  0E00               	movlw	0
  1525   002336  6FDC               	movwf	main@prev_colour& (0+255),b
  1526   002338                     
  1527                           ; BSR set to: 1
  1528                           ;main.c: 89:     run_flag=1;
  1529   002338  0E00               	movlw	0
  1530   00233A  6F17               	movwf	(_run_flag+1)& (0+255),b
  1531   00233C  0E01               	movlw	1
  1532   00233E  6F16               	movwf	_run_flag& (0+255),b
  1533   002340                     
  1534                           ; BSR set to: 1
  1535                           ;main.c: 90:     move_count=-1;
  1536   002340  6914               	setf	_move_count& (0+255),b	;volatile
  1537   002342  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1538   002344                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 91:     int lost_count=0;
  1541   002344  0E00               	movlw	0
  1542   002346  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1543   002348  0E00               	movlw	0
  1544   00234A  6FDA               	movwf	main@lost_count& (0+255),b
  1545   00234C                     
  1546                           ; BSR set to: 1
  1547                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1548   00234C  0E61               	movlw	low _motorL
  1549   00234E  6E20               	movwf	turnCalibration@mL^0,c
  1550   002350  0E01               	movlw	high _motorL
  1551   002352  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1552   002354  0E58               	movlw	low _motorR
  1553   002356  6E22               	movwf	turnCalibration@mR^0,c
  1554   002358  0E01               	movlw	high _motorR
  1555   00235A  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1556   00235C  ECF0  F021         	call	_turnCalibration	;wreg free
  1557   002360                     
  1558                           ;main.c: 94:     LATFbits.LATF0=0;
  1559   002360  907E               	bcf	126,0,c	;volatile
  1560   002362                     
  1561                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1562   002362  0E52               	movlw	82
  1563   002364  0100               	movlb	0	; () banked
  1564   002366  6FD2               	movwf	(??_main+1)& (0+255),b
  1565   002368  0E2B               	movlw	43
  1566   00236A  6FD1               	movwf	??_main& (0+255),b
  1567   00236C  0E00               	movlw	0
  1568   00236E                     u5847:
  1569   00236E  2EE8               	decfsz	wreg,f,c
  1570   002370  D7FE               	bra	u5847
  1571   002372  2FD1               	decfsz	??_main& (0+255),f,b
  1572   002374  D7FC               	bra	u5847
  1573   002376  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1574   002378  D7FA               	bra	u5847
  1575   00237A  F000               	nop	
  1576   00237C                     l356:
  1577   00237C  B48E               	btfsc	142,2,c	;volatile
  1578   00237E  EFC3  F011         	goto	u5621
  1579   002382  EFC5  F011         	goto	u5620
  1580   002386                     u5621:
  1581   002386  EFBE  F011         	goto	l356
  1582   00238A                     u5620:
  1583   00238A                     
  1584                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1585   00238A  0E52               	movlw	82
  1586   00238C  0100               	movlb	0	; () banked
  1587   00238E  6FD2               	movwf	(??_main+1)& (0+255),b
  1588   002390  0E2B               	movlw	43
  1589   002392  6FD1               	movwf	??_main& (0+255),b
  1590   002394  0E00               	movlw	0
  1591   002396                     u5857:
  1592   002396  2EE8               	decfsz	wreg,f,c
  1593   002398  D7FE               	bra	u5857
  1594   00239A  2FD1               	decfsz	??_main& (0+255),f,b
  1595   00239C  D7FC               	bra	u5857
  1596   00239E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1597   0023A0  D7FA               	bra	u5857
  1598   0023A2  F000               	nop	
  1599   0023A4                     
  1600                           ;main.c: 99:     T0CON0bits.T0EN=1;
  1601   0023A4  8ED5               	bsf	213,7,c	;volatile
  1602                           
  1603                           ;main.c: 100:     while (run_flag)
  1604   0023A6  EFF6  F013         	goto	l5899
  1605   0023AA                     l5749:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;main.c: 101:     {;main.c: 102:         consecuitive=0;
  1609   0023AA  0E00               	movlw	0
  1610   0023AC  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1611   0023AE  0E00               	movlw	0
  1612   0023B0  6FD6               	movwf	main@consecuitive& (0+255),b
  1613   0023B2                     
  1614                           ; BSR set to: 1
  1615                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1616   0023B2  0E61               	movlw	low _motorL
  1617   0023B4  6E14               	movwf	fullSpeedAhead@mL^0,c
  1618   0023B6  0E01               	movlw	high _motorL
  1619   0023B8  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1620   0023BA  0E58               	movlw	low _motorR
  1621   0023BC  6E16               	movwf	fullSpeedAhead@mR^0,c
  1622   0023BE  0E01               	movlw	high _motorR
  1623   0023C0  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1624   0023C2  EC28  F029         	call	_fullSpeedAhead	;wreg free
  1625   0023C6                     
  1626                           ;main.c: 106:         readColours(&vals);
  1627   0023C6  0E6A               	movlw	low _vals
  1628   0023C8  6E0C               	movwf	readColours@vals^0,c
  1629   0023CA  0E01               	movlw	high _vals
  1630   0023CC  6E0D               	movwf	(readColours@vals+1)^0,c
  1631   0023CE  EC3D  F02B         	call	_readColours	;wreg free
  1632   0023D2                     
  1633                           ;main.c: 109:         colour_rel(&vals, &rel);
  1634   0023D2  0E6A               	movlw	low _vals
  1635   0023D4  6E4B               	movwf	colour_rel@vals^0,c
  1636   0023D6  0E01               	movlw	high _vals
  1637   0023D8  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1638   0023DA  0E4C               	movlw	low _rel
  1639   0023DC  6E4D               	movwf	colour_rel@rel^0,c
  1640   0023DE  0E01               	movlw	high _rel
  1641   0023E0  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1642   0023E2  EC44  F01A         	call	_colour_rel	;wreg free
  1643   0023E6                     
  1644                           ;main.c: 112:         if (vals.L>=350){
  1645   0023E6  0101               	movlb	1	; () banked
  1646   0023E8  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1647   0023EA  EF00  F012         	goto	u5631
  1648   0023EE  0E5E               	movlw	94
  1649   0023F0  5D70               	subwf	(_vals+6)& (0+255),w,b
  1650   0023F2  0E01               	movlw	1
  1651   0023F4  5971               	subwfb	(_vals+7)& (0+255),w,b
  1652   0023F6  A0D8               	btfss	status,0,c
  1653   0023F8  EF00  F012         	goto	u5631
  1654   0023FC  EF02  F012         	goto	u5630
  1655   002400                     u5631:
  1656   002400  EFDC  F013         	goto	l5891
  1657   002404                     u5630:
  1658   002404                     
  1659                           ; BSR set to: 1
  1660                           ;main.c: 113:             move_count++;
  1661   002404  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1662   002406  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1663   002408                     
  1664                           ; BSR set to: 1
  1665                           ;main.c: 114:             getTMR0val();
  1666   002408  EC0C  F02B         	call	_getTMR0val	;wreg free
  1667   00240C                     
  1668                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1669   00240C  0E61               	movlw	low _motorL
  1670   00240E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1671   002410  0E01               	movlw	high _motorL
  1672   002412  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1673   002414  0E58               	movlw	low _motorR
  1674   002416  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1675   002418  0E01               	movlw	high _motorR
  1676   00241A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1677   00241C  EC99  F02B         	call	_Forwardhalfblock	;wreg free
  1678   002420                     
  1679                           ;main.c: 118:             stop(&motorL, &motorR);
  1680   002420  0E61               	movlw	low _motorL
  1681   002422  6E14               	movwf	stop@mL^0,c
  1682   002424  0E01               	movlw	high _motorL
  1683   002426  6E15               	movwf	(stop@mL+1)^0,c
  1684   002428  0E58               	movlw	low _motorR
  1685   00242A  6E16               	movwf	stop@mR^0,c
  1686   00242C  0E01               	movlw	high _motorR
  1687   00242E  6E17               	movwf	(stop@mR+1)^0,c
  1688   002430  ECBB  F029         	call	_stop	;wreg free
  1689                           
  1690                           ;main.c: 123:             while (consecuitive<20){
  1691   002434  EF60  F012         	goto	l5783
  1692   002438                     l5767:
  1693                           
  1694                           ; BSR set to: 1
  1695                           ;main.c: 124:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1696   002438  0E09               	movlw	9
  1697   00243A  0100               	movlb	0	; () banked
  1698   00243C  6FD2               	movwf	(??_main+1)& (0+255),b
  1699   00243E  0E1E               	movlw	30
  1700   002440  6FD1               	movwf	??_main& (0+255),b
  1701   002442  0EE4               	movlw	228
  1702   002444                     u5867:
  1703   002444  2EE8               	decfsz	wreg,f,c
  1704   002446  D7FE               	bra	u5867
  1705   002448  2FD1               	decfsz	??_main& (0+255),f,b
  1706   00244A  D7FC               	bra	u5867
  1707   00244C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1708   00244E  D7FA               	bra	u5867
  1709   002450  F000               	nop	
  1710   002452                     
  1711                           ;main.c: 125:                 readColours(&vals);
  1712   002452  0E6A               	movlw	low _vals
  1713   002454  6E0C               	movwf	readColours@vals^0,c
  1714   002456  0E01               	movlw	high _vals
  1715   002458  6E0D               	movwf	(readColours@vals+1)^0,c
  1716   00245A  EC3D  F02B         	call	_readColours	;wreg free
  1717   00245E                     
  1718                           ;main.c: 126:                 colour_rel(&vals, &rel);
  1719   00245E  0E6A               	movlw	low _vals
  1720   002460  6E4B               	movwf	colour_rel@vals^0,c
  1721   002462  0E01               	movlw	high _vals
  1722   002464  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1723   002466  0E4C               	movlw	low _rel
  1724   002468  6E4D               	movwf	colour_rel@rel^0,c
  1725   00246A  0E01               	movlw	high _rel
  1726   00246C  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1727   00246E  EC44  F01A         	call	_colour_rel	;wreg free
  1728   002472                     
  1729                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1730   002472  0E6A               	movlw	low _vals
  1731   002474  6E4B               	movwf	Colour_decider@vals^0,c
  1732   002476  0E01               	movlw	high _vals
  1733   002478  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1734   00247A  0E4C               	movlw	low _rel
  1735   00247C  6E4D               	movwf	Colour_decider@rel^0,c
  1736   00247E  0E01               	movlw	high _rel
  1737   002480  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1738   002482  EC1F  F007         	call	_Colour_decider	;wreg free
  1739   002486  C04B  F1D8         	movff	?_Colour_decider,main@colour
  1740   00248A  C04C  F1D9         	movff	?_Colour_decider+1,main@colour+1
  1741   00248E                     
  1742                           ;main.c: 128:                 if (colour==prev_colour){
  1743   00248E  0101               	movlb	1	; () banked
  1744   002490  51DC               	movf	main@prev_colour& (0+255),w,b
  1745   002492  19D8               	xorwf	main@colour& (0+255),w,b
  1746   002494  E107               	bnz	u5641
  1747   002496  51DD               	movf	(main@prev_colour+1)& (0+255),w,b
  1748   002498  19D9               	xorwf	(main@colour+1)& (0+255),w,b
  1749   00249A  A4D8               	btfss	status,2,c
  1750   00249C  EF52  F012         	goto	u5641
  1751   0024A0  EF54  F012         	goto	u5640
  1752   0024A4                     u5641:
  1753   0024A4  EF58  F012         	goto	l5779
  1754   0024A8                     u5640:
  1755   0024A8                     
  1756                           ; BSR set to: 1
  1757                           ;main.c: 129:                     consecuitive++;
  1758   0024A8  4BD6               	infsnz	main@consecuitive& (0+255),f,b
  1759   0024AA  2BD7               	incf	(main@consecuitive+1)& (0+255),f,b
  1760                           
  1761                           ;main.c: 130:                 }
  1762   0024AC  EF5C  F012         	goto	l5781
  1763   0024B0                     l5779:
  1764                           
  1765                           ; BSR set to: 1
  1766                           ;main.c: 132:                     consecuitive=0;
  1767   0024B0  0E00               	movlw	0
  1768   0024B2  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1769   0024B4  0E00               	movlw	0
  1770   0024B6  6FD6               	movwf	main@consecuitive& (0+255),b
  1771   0024B8                     l5781:
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;main.c: 134:                 prev_colour=colour;
  1775   0024B8  C1D8  F1DC         	movff	main@colour,main@prev_colour
  1776   0024BC  C1D9  F1DD         	movff	main@colour+1,main@prev_colour+1
  1777   0024C0                     l5783:
  1778                           
  1779                           ;main.c: 123:             while (consecuitive<20){
  1780   0024C0  0101               	movlb	1	; () banked
  1781   0024C2  BFD7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1782   0024C4  EF6D  F012         	goto	u5651
  1783   0024C8  51D7               	movf	(main@consecuitive+1)& (0+255),w,b
  1784   0024CA  E109               	bnz	u5650
  1785   0024CC  0E14               	movlw	20
  1786   0024CE  5DD6               	subwf	main@consecuitive& (0+255),w,b
  1787   0024D0  A0D8               	btfss	status,0,c
  1788   0024D2  EF6D  F012         	goto	u5651
  1789   0024D6  EF6F  F012         	goto	u5650
  1790   0024DA                     u5651:
  1791   0024DA  EF1C  F012         	goto	l5767
  1792   0024DE                     u5650:
  1793   0024DE                     
  1794                           ; BSR set to: 1
  1795                           ;main.c: 139:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1796   0024DE  0E72               	movlw	low main@buf
  1797   0024E0  0100               	movlb	0	; () banked
  1798   0024E2  6FB0               	movwf	sprintf@s& (0+255),b
  1799   0024E4  0E01               	movlw	high main@buf
  1800   0024E6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1801   0024E8  0E01               	movlw	low STR_1
  1802   0024EA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1803   0024EC  0E0E               	movlw	high STR_1
  1804   0024EE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1805   0024F0  C14C  F0B4         	movff	_rel,?_sprintf+4
  1806   0024F4  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1807   0024F8  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1808   0024FC  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1809   002500  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1810   002504  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1811   002508  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1812   00250C  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1813   002510  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1814   002514  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1815   002518  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1816   00251C  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1817   002520  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1818   002524  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1819   002528  C1DC  F0C2         	movff	main@prev_colour,?_sprintf+18
  1820   00252C  C1DD  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1821   002530  EC49  F02C         	call	_sprintf	;wreg free
  1822   002534                     
  1823                           ;main.c: 140:             sendStringSerial4(buf);
  1824   002534  0E72               	movlw	low main@buf
  1825   002536  6E02               	movwf	sendStringSerial4@string^0,c
  1826   002538  0E01               	movlw	high main@buf
  1827   00253A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1828   00253C  ECB5  F02F         	call	_sendStringSerial4	;wreg free
  1829   002540                     
  1830                           ;main.c: 142:             if (prev_colour==1){
  1831   002540  0101               	movlb	1	; () banked
  1832   002542  05DC               	decf	main@prev_colour& (0+255),w,b
  1833   002544  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1834   002546  A4D8               	btfss	status,2,c
  1835   002548  EFA8  F012         	goto	u5661
  1836   00254C  EFAA  F012         	goto	u5660
  1837   002550                     u5661:
  1838   002550  EFC7  F012         	goto	l5801
  1839   002554                     u5660:
  1840   002554                     
  1841                           ; BSR set to: 1
  1842                           ;main.c: 143:                 RedMove(&motorL, &motorR);
  1843   002554  0E61               	movlw	low _motorL
  1844   002556  6E20               	movwf	RedMove@mL^0,c
  1845   002558  0E01               	movlw	high _motorL
  1846   00255A  6E21               	movwf	(RedMove@mL+1)^0,c
  1847   00255C  0E58               	movlw	low _motorR
  1848   00255E  6E22               	movwf	RedMove@mR^0,c
  1849   002560  0E01               	movlw	high _motorR
  1850   002562  6E23               	movwf	(RedMove@mR+1)^0,c
  1851   002564  EC24  F02F         	call	_RedMove	;wreg free
  1852   002568                     
  1853                           ;main.c: 144:                 TMR0H=0;
  1854   002568  0E00               	movlw	0
  1855   00256A  6ED4               	movwf	212,c	;volatile
  1856   00256C                     
  1857                           ;main.c: 145:                 TMR0L=0;
  1858   00256C  0E00               	movlw	0
  1859   00256E  6ED3               	movwf	211,c	;volatile
  1860   002570                     
  1861                           ;main.c: 146:                 WayBack[move_count]=1;
  1862   002570  0E1A               	movlw	low _WayBack
  1863   002572  0101               	movlb	1	; () banked
  1864   002574  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1865   002576  6ED9               	movwf	fsr2l,c
  1866   002578  0E01               	movlw	high _WayBack
  1867   00257A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1868   00257C  6EDA               	movwf	fsr2h,c
  1869   00257E  0E01               	movlw	1
  1870   002580  6EDF               	movwf	indf2,c
  1871   002582                     l5799:
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 147:                 lost_count=0;
  1875   002582  0E00               	movlw	0
  1876   002584  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1877   002586  0E00               	movlw	0
  1878   002588  6FDA               	movwf	main@lost_count& (0+255),b
  1879                           
  1880                           ;main.c: 148:             }
  1881   00258A  EFF6  F013         	goto	l5899
  1882   00258E                     l5801:
  1883                           
  1884                           ; BSR set to: 1
  1885   00258E  0E02               	movlw	2
  1886   002590  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1887   002592  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1888   002594  A4D8               	btfss	status,2,c
  1889   002596  EFCF  F012         	goto	u5671
  1890   00259A  EFD1  F012         	goto	u5670
  1891   00259E                     u5671:
  1892   00259E  EFEA  F012         	goto	l5813
  1893   0025A2                     u5670:
  1894   0025A2                     
  1895                           ; BSR set to: 1
  1896                           ;main.c: 150:                 OrangeMove(&motorL, &motorR);
  1897   0025A2  0E61               	movlw	low _motorL
  1898   0025A4  6E20               	movwf	OrangeMove@mL^0,c
  1899   0025A6  0E01               	movlw	high _motorL
  1900   0025A8  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1901   0025AA  0E58               	movlw	low _motorR
  1902   0025AC  6E22               	movwf	OrangeMove@mR^0,c
  1903   0025AE  0E01               	movlw	high _motorR
  1904   0025B0  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1905   0025B2  EC72  F02C         	call	_OrangeMove	;wreg free
  1906   0025B6                     
  1907                           ;main.c: 151:                 TMR0H=0;
  1908   0025B6  0E00               	movlw	0
  1909   0025B8  6ED4               	movwf	212,c	;volatile
  1910   0025BA                     
  1911                           ;main.c: 152:                 TMR0L=0;
  1912   0025BA  0E00               	movlw	0
  1913   0025BC  6ED3               	movwf	211,c	;volatile
  1914   0025BE                     
  1915                           ;main.c: 153:                 WayBack[move_count]=2;
  1916   0025BE  0E1A               	movlw	low _WayBack
  1917   0025C0  0101               	movlb	1	; () banked
  1918   0025C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1919   0025C4  6ED9               	movwf	fsr2l,c
  1920   0025C6  0E01               	movlw	high _WayBack
  1921   0025C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1922   0025CA  6EDA               	movwf	fsr2h,c
  1923   0025CC  0E02               	movlw	2
  1924   0025CE  6EDF               	movwf	indf2,c
  1925   0025D0  EFC1  F012         	goto	l5799
  1926   0025D4                     l5813:
  1927                           
  1928                           ; BSR set to: 1
  1929   0025D4  0E03               	movlw	3
  1930   0025D6  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1931   0025D8  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1932   0025DA  A4D8               	btfss	status,2,c
  1933   0025DC  EFF2  F012         	goto	u5681
  1934   0025E0  EFF4  F012         	goto	u5680
  1935   0025E4                     u5681:
  1936   0025E4  EF0D  F013         	goto	l5825
  1937   0025E8                     u5680:
  1938   0025E8                     
  1939                           ; BSR set to: 1
  1940                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1941   0025E8  0E61               	movlw	low _motorL
  1942   0025EA  6E20               	movwf	YellowMove@mL^0,c
  1943   0025EC  0E01               	movlw	high _motorL
  1944   0025EE  6E21               	movwf	(YellowMove@mL+1)^0,c
  1945   0025F0  0E58               	movlw	low _motorR
  1946   0025F2  6E22               	movwf	YellowMove@mR^0,c
  1947   0025F4  0E01               	movlw	high _motorR
  1948   0025F6  6E23               	movwf	(YellowMove@mR+1)^0,c
  1949   0025F8  ECED  F02C         	call	_YellowMove	;wreg free
  1950   0025FC                     
  1951                           ;main.c: 158:                 TMR0H=0;
  1952   0025FC  0E00               	movlw	0
  1953   0025FE  6ED4               	movwf	212,c	;volatile
  1954   002600                     
  1955                           ;main.c: 159:                 TMR0L=0;
  1956   002600  0E00               	movlw	0
  1957   002602  6ED3               	movwf	211,c	;volatile
  1958   002604                     
  1959                           ;main.c: 160:                 WayBack[move_count]=3;
  1960   002604  0E1A               	movlw	low _WayBack
  1961   002606  0101               	movlb	1	; () banked
  1962   002608  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1963   00260A  6ED9               	movwf	fsr2l,c
  1964   00260C  0E01               	movlw	high _WayBack
  1965   00260E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1966   002610  6EDA               	movwf	fsr2h,c
  1967   002612  0E03               	movlw	3
  1968   002614  6EDF               	movwf	indf2,c
  1969   002616  EFC1  F012         	goto	l5799
  1970   00261A                     l5825:
  1971                           
  1972                           ; BSR set to: 1
  1973   00261A  0E04               	movlw	4
  1974   00261C  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1975   00261E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1976   002620  A4D8               	btfss	status,2,c
  1977   002622  EF15  F013         	goto	u5691
  1978   002626  EF17  F013         	goto	u5690
  1979   00262A                     u5691:
  1980   00262A  EF30  F013         	goto	l5837
  1981   00262E                     u5690:
  1982   00262E                     
  1983                           ; BSR set to: 1
  1984                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  1985   00262E  0E61               	movlw	low _motorL
  1986   002630  6E20               	movwf	BlueMove@mL^0,c
  1987   002632  0E01               	movlw	high _motorL
  1988   002634  6E21               	movwf	(BlueMove@mL+1)^0,c
  1989   002636  0E58               	movlw	low _motorR
  1990   002638  6E22               	movwf	BlueMove@mR^0,c
  1991   00263A  0E01               	movlw	high _motorR
  1992   00263C  6E23               	movwf	(BlueMove@mR+1)^0,c
  1993   00263E  ECD9  F02A         	call	_BlueMove	;wreg free
  1994   002642                     
  1995                           ;main.c: 165:                 TMR0H=0;
  1996   002642  0E00               	movlw	0
  1997   002644  6ED4               	movwf	212,c	;volatile
  1998   002646                     
  1999                           ;main.c: 166:                 TMR0L=0;
  2000   002646  0E00               	movlw	0
  2001   002648  6ED3               	movwf	211,c	;volatile
  2002   00264A                     
  2003                           ;main.c: 167:                 WayBack[move_count]=4;
  2004   00264A  0E1A               	movlw	low _WayBack
  2005   00264C  0101               	movlb	1	; () banked
  2006   00264E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2007   002650  6ED9               	movwf	fsr2l,c
  2008   002652  0E01               	movlw	high _WayBack
  2009   002654  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2010   002656  6EDA               	movwf	fsr2h,c
  2011   002658  0E04               	movlw	4
  2012   00265A  6EDF               	movwf	indf2,c
  2013   00265C  EFC1  F012         	goto	l5799
  2014   002660                     l5837:
  2015                           
  2016                           ; BSR set to: 1
  2017   002660  0E05               	movlw	5
  2018   002662  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2019   002664  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2020   002666  A4D8               	btfss	status,2,c
  2021   002668  EF38  F013         	goto	u5701
  2022   00266C  EF3A  F013         	goto	u5700
  2023   002670                     u5701:
  2024   002670  EF53  F013         	goto	l5849
  2025   002674                     u5700:
  2026   002674                     
  2027                           ; BSR set to: 1
  2028                           ;main.c: 171:                 GreenMove(&motorL, &motorR);
  2029   002674  0E61               	movlw	low _motorL
  2030   002676  6E20               	movwf	GreenMove@mL^0,c
  2031   002678  0E01               	movlw	high _motorL
  2032   00267A  6E21               	movwf	(GreenMove@mL+1)^0,c
  2033   00267C  0E58               	movlw	low _motorR
  2034   00267E  6E22               	movwf	GreenMove@mR^0,c
  2035   002680  0E01               	movlw	high _motorR
  2036   002682  6E23               	movwf	(GreenMove@mR+1)^0,c
  2037   002684  EC43  F02F         	call	_GreenMove	;wreg free
  2038   002688                     
  2039                           ;main.c: 172:                 TMR0H=0;
  2040   002688  0E00               	movlw	0
  2041   00268A  6ED4               	movwf	212,c	;volatile
  2042   00268C                     
  2043                           ;main.c: 173:                 TMR0L=0;
  2044   00268C  0E00               	movlw	0
  2045   00268E  6ED3               	movwf	211,c	;volatile
  2046   002690                     
  2047                           ;main.c: 174:                 WayBack[move_count]=5;
  2048   002690  0E1A               	movlw	low _WayBack
  2049   002692  0101               	movlb	1	; () banked
  2050   002694  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2051   002696  6ED9               	movwf	fsr2l,c
  2052   002698  0E01               	movlw	high _WayBack
  2053   00269A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2054   00269C  6EDA               	movwf	fsr2h,c
  2055   00269E  0E05               	movlw	5
  2056   0026A0  6EDF               	movwf	indf2,c
  2057   0026A2  EFC1  F012         	goto	l5799
  2058   0026A6                     l5849:
  2059                           
  2060                           ; BSR set to: 1
  2061   0026A6  0E06               	movlw	6
  2062   0026A8  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2063   0026AA  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2064   0026AC  A4D8               	btfss	status,2,c
  2065   0026AE  EF5B  F013         	goto	u5711
  2066   0026B2  EF5D  F013         	goto	u5710
  2067   0026B6                     u5711:
  2068   0026B6  EF76  F013         	goto	l5861
  2069   0026BA                     u5710:
  2070   0026BA                     
  2071                           ; BSR set to: 1
  2072                           ;main.c: 178:                 LightBlueMove(&motorL, &motorR);
  2073   0026BA  0E61               	movlw	low _motorL
  2074   0026BC  6E20               	movwf	LightBlueMove@mL^0,c
  2075   0026BE  0E01               	movlw	high _motorL
  2076   0026C0  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2077   0026C2  0E58               	movlw	low _motorR
  2078   0026C4  6E22               	movwf	LightBlueMove@mR^0,c
  2079   0026C6  0E01               	movlw	high _motorR
  2080   0026C8  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2081   0026CA  EC9B  F02C         	call	_LightBlueMove	;wreg free
  2082   0026CE                     
  2083                           ;main.c: 179:                 TMR0H=0;
  2084   0026CE  0E00               	movlw	0
  2085   0026D0  6ED4               	movwf	212,c	;volatile
  2086   0026D2                     
  2087                           ;main.c: 180:                 TMR0L=0;
  2088   0026D2  0E00               	movlw	0
  2089   0026D4  6ED3               	movwf	211,c	;volatile
  2090   0026D6                     
  2091                           ;main.c: 181:                 WayBack[move_count]=6;
  2092   0026D6  0E1A               	movlw	low _WayBack
  2093   0026D8  0101               	movlb	1	; () banked
  2094   0026DA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2095   0026DC  6ED9               	movwf	fsr2l,c
  2096   0026DE  0E01               	movlw	high _WayBack
  2097   0026E0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2098   0026E2  6EDA               	movwf	fsr2h,c
  2099   0026E4  0E06               	movlw	6
  2100   0026E6  6EDF               	movwf	indf2,c
  2101   0026E8  EFC1  F012         	goto	l5799
  2102   0026EC                     l5861:
  2103                           
  2104                           ; BSR set to: 1
  2105   0026EC  0E07               	movlw	7
  2106   0026EE  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2107   0026F0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2108   0026F2  A4D8               	btfss	status,2,c
  2109   0026F4  EF7E  F013         	goto	u5721
  2110   0026F8  EF80  F013         	goto	u5720
  2111   0026FC                     u5721:
  2112   0026FC  EF99  F013         	goto	l5873
  2113   002700                     u5720:
  2114   002700                     
  2115                           ; BSR set to: 1
  2116                           ;main.c: 185:                 PinkMove(&motorL, &motorR);
  2117   002700  0E61               	movlw	low _motorL
  2118   002702  6E20               	movwf	PinkMove@mL^0,c
  2119   002704  0E01               	movlw	high _motorL
  2120   002706  6E21               	movwf	(PinkMove@mL+1)^0,c
  2121   002708  0E58               	movlw	low _motorR
  2122   00270A  6E22               	movwf	PinkMove@mR^0,c
  2123   00270C  0E01               	movlw	high _motorR
  2124   00270E  6E23               	movwf	(PinkMove@mR+1)^0,c
  2125   002710  EC16  F02D         	call	_PinkMove	;wreg free
  2126   002714                     
  2127                           ;main.c: 186:                 TMR0H=0;
  2128   002714  0E00               	movlw	0
  2129   002716  6ED4               	movwf	212,c	;volatile
  2130   002718                     
  2131                           ;main.c: 187:                 TMR0L=0;
  2132   002718  0E00               	movlw	0
  2133   00271A  6ED3               	movwf	211,c	;volatile
  2134   00271C                     
  2135                           ;main.c: 188:                 WayBack[move_count]=7;
  2136   00271C  0E1A               	movlw	low _WayBack
  2137   00271E  0101               	movlb	1	; () banked
  2138   002720  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2139   002722  6ED9               	movwf	fsr2l,c
  2140   002724  0E01               	movlw	high _WayBack
  2141   002726  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2142   002728  6EDA               	movwf	fsr2h,c
  2143   00272A  0E07               	movlw	7
  2144   00272C  6EDF               	movwf	indf2,c
  2145   00272E  EFC1  F012         	goto	l5799
  2146   002732                     l5873:
  2147                           
  2148                           ; BSR set to: 1
  2149   002732  0E0A               	movlw	10
  2150   002734  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2151   002736  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2152   002738  A4D8               	btfss	status,2,c
  2153   00273A  EFA1  F013         	goto	u5731
  2154   00273E  EFA3  F013         	goto	u5730
  2155   002742                     u5731:
  2156   002742  EFCF  F013         	goto	l5887
  2157   002746                     u5730:
  2158   002746                     
  2159                           ; BSR set to: 1
  2160                           ;main.c: 192:                 lost_count++;
  2161   002746  4BDA               	infsnz	main@lost_count& (0+255),f,b
  2162   002748  2BDB               	incf	(main@lost_count+1)& (0+255),f,b
  2163   00274A                     
  2164                           ; BSR set to: 1
  2165                           ;main.c: 193:                 if (lost_count>=3){
  2166   00274A  BFDB               	btfsc	(main@lost_count+1)& (0+255),7,b
  2167   00274C  EFB1  F013         	goto	u5741
  2168   002750  51DB               	movf	(main@lost_count+1)& (0+255),w,b
  2169   002752  E109               	bnz	u5740
  2170   002754  0E03               	movlw	3
  2171   002756  5DDA               	subwf	main@lost_count& (0+255),w,b
  2172   002758  A0D8               	btfss	status,0,c
  2173   00275A  EFB1  F013         	goto	u5741
  2174   00275E  EFB3  F013         	goto	u5740
  2175   002762                     u5741:
  2176   002762  EFBF  F013         	goto	l5881
  2177   002766                     u5740:
  2178   002766                     l5879:
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;main.c: 194:                     go_Home(WayBack, Time_forward);
  2182   002766  0E1A               	movlw	low _WayBack
  2183   002768  6E24               	movwf	go_Home@WayBack^0,c
  2184   00276A  0E01               	movlw	high _WayBack
  2185   00276C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2186   00276E  0E3C               	movlw	low _Time_forward
  2187   002770  6E26               	movwf	go_Home@Time_forward^0,c
  2188   002772  0E02               	movlw	high _Time_forward
  2189   002774  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2190   002776  EC5E  F01D         	call	_go_Home	;wreg free
  2191                           
  2192                           ;main.c: 195:                 }
  2193   00277A  EFF6  F013         	goto	l5899
  2194   00277E                     l5881:
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;main.c: 197:                     RetryMove(&motorL, &motorR);
  2198   00277E  0E61               	movlw	low _motorL
  2199   002780  6E20               	movwf	RetryMove@mL^0,c
  2200   002782  0E01               	movlw	high _motorL
  2201   002784  6E21               	movwf	(RetryMove@mL+1)^0,c
  2202   002786  0E58               	movlw	low _motorR
  2203   002788  6E22               	movwf	RetryMove@mR^0,c
  2204   00278A  0E01               	movlw	high _motorR
  2205   00278C  6E23               	movwf	(RetryMove@mR+1)^0,c
  2206   00278E  EC71  F02A         	call	_RetryMove	;wreg free
  2207   002792                     
  2208                           ;main.c: 198:                     TMR0H=0;
  2209   002792  0E00               	movlw	0
  2210   002794  6ED4               	movwf	212,c	;volatile
  2211   002796                     
  2212                           ;main.c: 199:                     TMR0L=0;
  2213   002796  0E00               	movlw	0
  2214   002798  6ED3               	movwf	211,c	;volatile
  2215   00279A  EFF6  F013         	goto	l5899
  2216   00279E                     l5887:
  2217                           
  2218                           ; BSR set to: 1
  2219   00279E  51DC               	movf	main@prev_colour& (0+255),w,b
  2220   0027A0  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2221   0027A2  A4D8               	btfss	status,2,c
  2222   0027A4  EFD6  F013         	goto	u5751
  2223   0027A8  EFD8  F013         	goto	u5750
  2224   0027AC                     u5751:
  2225   0027AC  EFDA  F013         	goto	l378
  2226   0027B0                     u5750:
  2227   0027B0  EFB3  F013         	goto	l5879
  2228   0027B4                     l378:
  2229                           
  2230                           ; BSR set to: 1
  2231   0027B4  EFF6  F013         	goto	l5899
  2232   0027B8                     l5891:
  2233                           
  2234                           ; BSR set to: 1
  2235   0027B8  5118               	movf	_lost_flag& (0+255),w,b
  2236   0027BA  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2237   0027BC  B4D8               	btfsc	status,2,c
  2238   0027BE  EFE3  F013         	goto	u5761
  2239   0027C2  EFE5  F013         	goto	u5760
  2240   0027C6                     u5761:
  2241   0027C6  EFF6  F013         	goto	l5899
  2242   0027CA                     u5760:
  2243   0027CA                     
  2244                           ; BSR set to: 1
  2245                           ;main.c: 206:             move_count++;
  2246   0027CA  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2247   0027CC  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2248   0027CE                     
  2249                           ; BSR set to: 1
  2250                           ;main.c: 207:             Time_forward[move_count]=65535;
  2251   0027CE  90D8               	bcf	status,0,c
  2252   0027D0  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2253   0027D2  6ED9               	movwf	fsr2l,c
  2254   0027D4  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2255   0027D6  6EDA               	movwf	fsr2h,c
  2256   0027D8  0E3C               	movlw	low _Time_forward
  2257   0027DA  26D9               	addwf	fsr2l,f,c
  2258   0027DC  0E02               	movlw	high _Time_forward
  2259   0027DE  22DA               	addwfc	fsr2h,f,c
  2260   0027E0  0EFF               	movlw	255
  2261   0027E2  6EDE               	movwf	postinc2,c
  2262   0027E4  0EFF               	movlw	255
  2263   0027E6  6EDD               	movwf	postdec2,c
  2264   0027E8  EFB3  F013         	goto	l5879
  2265   0027EC                     l5899:
  2266                           
  2267                           ;main.c: 100:     while (run_flag)
  2268   0027EC  0101               	movlb	1	; () banked
  2269   0027EE  5116               	movf	_run_flag& (0+255),w,b
  2270   0027F0  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2271   0027F2  A4D8               	btfss	status,2,c
  2272   0027F4  EFFE  F013         	goto	u5771
  2273   0027F8  EF00  F014         	goto	u5770
  2274   0027FC                     u5771:
  2275   0027FC  EFD5  F011         	goto	l5749
  2276   002800                     u5770:
  2277   002800                     
  2278                           ; BSR set to: 1
  2279   002800  EF1A  F000         	goto	start
  2280   002804                     __end_of_main:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _turnCalibration *****************
  2284 ;; Defined at:
  2285 ;;		line 356 in file "dc_motor.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2288 ;;		 -> motorL(9), 
  2289 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2290 ;;		 -> motorR(9), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;Total ram usage:        6 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 5
  2309 ;; This function calls:
  2310 ;;		_turnLeft45
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text1
  2317   0043E0                     __ptext1:
  2318                           	callstack 0
  2319   0043E0                     _turnCalibration:
  2320                           	callstack 25
  2321   0043E0                     
  2322                           ;dc_motor.c: 357:     LATFbits.LATF0=1;
  2323   0043E0  807E               	bsf	126,0,c	;volatile
  2324   0043E2                     
  2325                           ;dc_motor.c: 358:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2326   0043E2  0E52               	movlw	82
  2327   0043E4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2328   0043E6  0E2B               	movlw	43
  2329   0043E8  6E24               	movwf	??_turnCalibration^0,c
  2330   0043EA  0E00               	movlw	0
  2331   0043EC                     u5877:
  2332   0043EC  2EE8               	decfsz	wreg,f,c
  2333   0043EE  D7FE               	bra	u5877
  2334   0043F0  2E24               	decfsz	??_turnCalibration^0,f,c
  2335   0043F2  D7FC               	bra	u5877
  2336   0043F4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2337   0043F6  D7FA               	bra	u5877
  2338   0043F8  D000               	nop2	
  2339                           
  2340                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2341   0043FA  EFAA  F022         	goto	l5555
  2342   0043FE                     l568:
  2343                           
  2344                           ;dc_motor.c: 361:         LATDbits.LATD3=1;
  2345   0043FE  867C               	bsf	124,3,c	;volatile
  2346   004400                     
  2347                           ;dc_motor.c: 363:         turnLeft45(&motorL, &motorR);
  2348   004400  0E61               	movlw	low _motorL
  2349   004402  6E1A               	movwf	turnLeft45@mL^0,c
  2350   004404  0E01               	movlw	high _motorL
  2351   004406  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2352   004408  0E58               	movlw	low _motorR
  2353   00440A  6E1C               	movwf	turnLeft45@mR^0,c
  2354   00440C  0E01               	movlw	high _motorR
  2355   00440E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2356   004410  EC55  F02E         	call	_turnLeft45	;wreg free
  2357                           
  2358                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2359   004414  0E61               	movlw	low _motorL
  2360   004416  6E1A               	movwf	turnLeft45@mL^0,c
  2361   004418  0E01               	movlw	high _motorL
  2362   00441A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2363   00441C  0E58               	movlw	low _motorR
  2364   00441E  6E1C               	movwf	turnLeft45@mR^0,c
  2365   004420  0E01               	movlw	high _motorR
  2366   004422  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2367   004424  EC55  F02E         	call	_turnLeft45	;wreg free
  2368                           
  2369                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2370   004428  0E61               	movlw	low _motorL
  2371   00442A  6E1A               	movwf	turnLeft45@mL^0,c
  2372   00442C  0E01               	movlw	high _motorL
  2373   00442E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2374   004430  0E58               	movlw	low _motorR
  2375   004432  6E1C               	movwf	turnLeft45@mR^0,c
  2376   004434  0E01               	movlw	high _motorR
  2377   004436  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2378   004438  EC55  F02E         	call	_turnLeft45	;wreg free
  2379                           
  2380                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2381   00443C  0E61               	movlw	low _motorL
  2382   00443E  6E1A               	movwf	turnLeft45@mL^0,c
  2383   004440  0E01               	movlw	high _motorL
  2384   004442  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2385   004444  0E58               	movlw	low _motorR
  2386   004446  6E1C               	movwf	turnLeft45@mR^0,c
  2387   004448  0E01               	movlw	high _motorR
  2388   00444A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2389   00444C  EC55  F02E         	call	_turnLeft45	;wreg free
  2390                           
  2391                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2392   004450  EF8F  F022         	goto	l5549
  2393   004454                     l570:
  2394                           
  2395                           ;dc_motor.c: 371:               LATDbits.LATD4=1;
  2396   004454  887C               	bsf	124,4,c	;volatile
  2397   004456                     
  2398                           ;dc_motor.c: 372:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2399   004456  0EA3               	movlw	163
  2400   004458  6E25               	movwf	(??_turnCalibration+1)^0,c
  2401   00445A  0E57               	movlw	87
  2402   00445C  6E24               	movwf	??_turnCalibration^0,c
  2403   00445E  0E02               	movlw	2
  2404   004460                     u5887:
  2405   004460  2EE8               	decfsz	wreg,f,c
  2406   004462  D7FE               	bra	u5887
  2407   004464  2E24               	decfsz	??_turnCalibration^0,f,c
  2408   004466  D7FC               	bra	u5887
  2409   004468  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2410   00446A  D7FA               	bra	u5887
  2411   00446C  D000               	nop2	
  2412   00446E                     
  2413                           ;dc_motor.c: 373:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  2414   00446E  B68E               	btfsc	142,3,c	;volatile
  2415   004470  EF3C  F022         	goto	u5441
  2416   004474  EF3E  F022         	goto	u5440
  2417   004478                     u5441:
  2418   004478  EF57  F022         	goto	l571
  2419   00447C                     u5440:
  2420   00447C  B48E               	btfsc	142,2,c	;volatile
  2421   00447E  EF43  F022         	goto	u5451
  2422   004482  EF45  F022         	goto	u5450
  2423   004486                     u5451:
  2424   004486  EF57  F022         	goto	l571
  2425   00448A                     u5450:
  2426   00448A                     
  2427                           ;dc_motor.c: 374:                 LATHbits.LATH3=1;
  2428   00448A  8680               	bsf	128,3,c	;volatile
  2429                           
  2430                           ;dc_motor.c: 375:                 LATDbits.LATD7=1;
  2431   00448C  8E7C               	bsf	124,7,c	;volatile
  2432   00448E                     
  2433                           ;dc_motor.c: 376:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2434   00448E  0E52               	movlw	82
  2435   004490  6E25               	movwf	(??_turnCalibration+1)^0,c
  2436   004492  0E2B               	movlw	43
  2437   004494  6E24               	movwf	??_turnCalibration^0,c
  2438   004496  0E00               	movlw	0
  2439   004498                     u5897:
  2440   004498  2EE8               	decfsz	wreg,f,c
  2441   00449A  D7FE               	bra	u5897
  2442   00449C  2E24               	decfsz	??_turnCalibration^0,f,c
  2443   00449E  D7FC               	bra	u5897
  2444   0044A0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2445   0044A2  D7FA               	bra	u5897
  2446   0044A4  D000               	nop2	
  2447   0044A6                     
  2448                           ;dc_motor.c: 377:                 LATHbits.LATH3=0;
  2449   0044A6  9680               	bcf	128,3,c	;volatile
  2450   0044A8                     
  2451                           ;dc_motor.c: 378:                 LATDbits.LATD7=0;
  2452   0044A8  9E7C               	bcf	124,7,c	;volatile
  2453                           
  2454                           ;dc_motor.c: 379:             }
  2455   0044AA  EF8F  F022         	goto	l5549
  2456   0044AE                     l571:
  2457   0044AE  B68E               	btfsc	142,3,c	;volatile
  2458   0044B0  EF5C  F022         	goto	u5461
  2459   0044B4  EF5E  F022         	goto	u5460
  2460   0044B8                     u5461:
  2461   0044B8  EF73  F022         	goto	l573
  2462   0044BC                     u5460:
  2463   0044BC                     
  2464                           ;dc_motor.c: 382:                 Turn45Delay+=10;
  2465   0044BC  0E0A               	movlw	10
  2466   0044BE  0100               	movlb	0	; () banked
  2467   0044C0  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2468   0044C2  0E00               	movlw	0
  2469   0044C4  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2470   0044C6                     
  2471                           ; BSR set to: 0
  2472                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2473   0044C6  8680               	bsf	128,3,c	;volatile
  2474   0044C8                     
  2475                           ; BSR set to: 0
  2476                           ;dc_motor.c: 384:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2477   0044C8  0E52               	movlw	82
  2478   0044CA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2479   0044CC  0E2B               	movlw	43
  2480   0044CE  6E24               	movwf	??_turnCalibration^0,c
  2481   0044D0  0E00               	movlw	0
  2482   0044D2                     u5907:
  2483   0044D2  2EE8               	decfsz	wreg,f,c
  2484   0044D4  D7FE               	bra	u5907
  2485   0044D6  2E24               	decfsz	??_turnCalibration^0,f,c
  2486   0044D8  D7FC               	bra	u5907
  2487   0044DA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2488   0044DC  D7FA               	bra	u5907
  2489   0044DE  D000               	nop2	
  2490   0044E0                     
  2491                           ;dc_motor.c: 385:                 LATHbits.LATH3=0;
  2492   0044E0  9680               	bcf	128,3,c	;volatile
  2493                           
  2494                           ;dc_motor.c: 386:             }
  2495   0044E2  EF8F  F022         	goto	l5549
  2496   0044E6                     l573:
  2497   0044E6  B48E               	btfsc	142,2,c	;volatile
  2498   0044E8  EF78  F022         	goto	u5471
  2499   0044EC  EF7A  F022         	goto	u5470
  2500   0044F0                     u5471:
  2501   0044F0  EF8F  F022         	goto	l572
  2502   0044F4                     u5470:
  2503   0044F4                     
  2504                           ;dc_motor.c: 389:                 Turn45Delay-=10;
  2505   0044F4  0100               	movlb	0	; () banked
  2506   0044F6  0EF6               	movlw	246
  2507   0044F8  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2508   0044FA  0EFF               	movlw	255
  2509   0044FC  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2510   0044FE                     
  2511                           ; BSR set to: 0
  2512                           ;dc_motor.c: 390:                 LATDbits.LATD7=1;
  2513   0044FE  8E7C               	bsf	124,7,c	;volatile
  2514   004500                     
  2515                           ; BSR set to: 0
  2516                           ;dc_motor.c: 391:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2517   004500  0E52               	movlw	82
  2518   004502  6E25               	movwf	(??_turnCalibration+1)^0,c
  2519   004504  0E2B               	movlw	43
  2520   004506  6E24               	movwf	??_turnCalibration^0,c
  2521   004508  0E00               	movlw	0
  2522   00450A                     u5917:
  2523   00450A  2EE8               	decfsz	wreg,f,c
  2524   00450C  D7FE               	bra	u5917
  2525   00450E  2E24               	decfsz	??_turnCalibration^0,f,c
  2526   004510  D7FC               	bra	u5917
  2527   004512  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2528   004514  D7FA               	bra	u5917
  2529   004516  D000               	nop2	
  2530   004518                     
  2531                           ;dc_motor.c: 392:                 LATDbits.LATD7=0;
  2532   004518  9E7C               	bcf	124,7,c	;volatile
  2533   00451A  EF8F  F022         	goto	l5549
  2534   00451E                     l572:
  2535   00451E                     l5549:
  2536                           
  2537                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2538   00451E  A48E               	btfss	142,2,c	;volatile
  2539   004520  EF94  F022         	goto	u5481
  2540   004524  EF96  F022         	goto	u5480
  2541   004528                     u5481:
  2542   004528  EF9D  F022         	goto	l578
  2543   00452C                     u5480:
  2544   00452C  B68E               	btfsc	142,3,c	;volatile
  2545   00452E  EF9B  F022         	goto	u5491
  2546   004532  EF9D  F022         	goto	u5490
  2547   004536                     u5491:
  2548   004536  EF2A  F022         	goto	l570
  2549   00453A                     u5490:
  2550   00453A                     l578:
  2551                           
  2552                           ;dc_motor.c: 395:         LATDbits.LATD4=0;
  2553   00453A  987C               	bcf	124,4,c	;volatile
  2554   00453C                     
  2555                           ;dc_motor.c: 396:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2556   00453C  0EA3               	movlw	163
  2557   00453E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2558   004540  0E57               	movlw	87
  2559   004542  6E24               	movwf	??_turnCalibration^0,c
  2560   004544  0E02               	movlw	2
  2561   004546                     u5927:
  2562   004546  2EE8               	decfsz	wreg,f,c
  2563   004548  D7FE               	bra	u5927
  2564   00454A  2E24               	decfsz	??_turnCalibration^0,f,c
  2565   00454C  D7FC               	bra	u5927
  2566   00454E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2567   004550  D7FA               	bra	u5927
  2568   004552  D000               	nop2	
  2569   004554                     l5555:
  2570                           
  2571                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2572   004554  B48E               	btfsc	142,2,c	;volatile
  2573   004556  EFAF  F022         	goto	u5501
  2574   00455A  EFB1  F022         	goto	u5500
  2575   00455E                     u5501:
  2576   00455E  EFFF  F021         	goto	l568
  2577   004562                     u5500:
  2578   004562  B68E               	btfsc	142,3,c	;volatile
  2579   004564  EFB6  F022         	goto	u5511
  2580   004568  EFB8  F022         	goto	u5510
  2581   00456C                     u5511:
  2582   00456C  EFFF  F021         	goto	l568
  2583   004570                     u5510:
  2584   004570                     
  2585                           ;dc_motor.c: 398:     LATDbits.LATD3=0;
  2586   004570  967C               	bcf	124,3,c	;volatile
  2587   004572                     
  2588                           ;dc_motor.c: 399:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2589   004572  0EA3               	movlw	163
  2590   004574  6E25               	movwf	(??_turnCalibration+1)^0,c
  2591   004576  0E57               	movlw	87
  2592   004578  6E24               	movwf	??_turnCalibration^0,c
  2593   00457A  0E02               	movlw	2
  2594   00457C                     u5937:
  2595   00457C  2EE8               	decfsz	wreg,f,c
  2596   00457E  D7FE               	bra	u5937
  2597   004580  2E24               	decfsz	??_turnCalibration^0,f,c
  2598   004582  D7FC               	bra	u5937
  2599   004584  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2600   004586  D7FA               	bra	u5937
  2601   004588  D000               	nop2	
  2602   00458A  0012               	return		;funcret
  2603   00458C                     __end_of_turnCalibration:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _sprintf *****************
  2607 ;; Defined at:
  2608 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2611 ;;		 -> main@buf(100), 
  2612 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2613 ;;		 -> STR_1(51), 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2616 ;;  ap              2  100[BANK0 ] PTR void [1]
  2617 ;;		 -> ?_sprintf(2), 
  2618 ;;  ret             2    0        int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2   80[BANK0 ] int 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2628 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;Total ram usage:       33 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 8
  2635 ;; This function calls:
  2636 ;;		_vfprintf
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text2
  2643   005892                     __ptext2:
  2644                           	callstack 0
  2645   005892                     _sprintf:
  2646                           	callstack 22
  2647   005892  0EB4               	movlw	low (?_sprintf+4)
  2648   005894  0100               	movlb	0	; () banked
  2649   005896  6FC4               	movwf	sprintf@ap& (0+255),b
  2650   005898  0E00               	movlw	high (?_sprintf+4)
  2651   00589A  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2652   00589C  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2653   0058A0  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2654   0058A4                     
  2655                           ; BSR set to: 0
  2656   0058A4  0E00               	movlw	0
  2657   0058A6  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2658   0058A8  0E00               	movlw	0
  2659   0058AA  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2660   0058AC                     
  2661                           ; BSR set to: 0
  2662   0058AC  0E00               	movlw	0
  2663   0058AE  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2664   0058B0  0E00               	movlw	0
  2665   0058B2  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2666   0058B4                     
  2667                           ; BSR set to: 0
  2668   0058B4  0EC6               	movlw	low sprintf@f
  2669   0058B6  6FA8               	movwf	vfprintf@fp& (0+255),b
  2670   0058B8  0E00               	movlw	high sprintf@f
  2671   0058BA  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2672   0058BC  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2673   0058C0  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2674   0058C4  0EC4               	movlw	low sprintf@ap
  2675   0058C6  6FAC               	movwf	vfprintf@ap& (0+255),b
  2676   0058C8  0E00               	movlw	high sprintf@ap
  2677   0058CA  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2678   0058CC  EC1E  F02C         	call	_vfprintf	;wreg free
  2679   0058D0  0100               	movlb	0	; () banked
  2680   0058D2  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2681   0058D4  25B0               	addwf	sprintf@s& (0+255),w,b
  2682   0058D6  6ED9               	movwf	fsr2l,c
  2683   0058D8  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2684   0058DA  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2685   0058DC  6EDA               	movwf	fsr2h,c
  2686   0058DE  0E00               	movlw	0
  2687   0058E0  6EDF               	movwf	indf2,c
  2688   0058E2                     
  2689                           ; BSR set to: 0
  2690   0058E2  0012               	return		;funcret
  2691   0058E4                     __end_of_sprintf:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _vfprintf *****************
  2695 ;; Defined at:
  2696 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2699 ;;		 -> sprintf@f(11), 
  2700 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2701 ;;		 -> STR_1(51), 
  2702 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2703 ;;		 -> sprintf@ap(2), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2706 ;;		 -> STR_1(51), 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2   72[BANK0 ] int 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:        8 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 7
  2723 ;; This function calls:
  2724 ;;		_vfpfcnvrt
  2725 ;; This function is called by:
  2726 ;;		_sprintf
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text3
  2731   00583C                     __ptext3:
  2732                           	callstack 0
  2733   00583C                     _vfprintf:
  2734                           	callstack 22
  2735   00583C                     
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2737   00583C  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2738   005840  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2741   005844  EF33  F02C         	goto	l5233
  2742   005848                     l5231:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2745   005848  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2746   00584C  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2747   005850  0EAE               	movlw	low vfprintf@cfmt
  2748   005852  0100               	movlb	0	; () banked
  2749   005854  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2750   005856  0E00               	movlw	high vfprintf@cfmt
  2751   005858  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2752   00585A  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2753   00585E  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2754   005862  ECDB  F01B         	call	_vfpfcnvrt	;wreg free
  2755   005866                     l5233:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2758   005866  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2759   00586A  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2760   00586E                     	if	0	;tblptru may be non-zero
  2761   00586E                     	endif
  2762   00586E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2763   00586E  0E00               	movlw	low (__mediumconst shr (0+16))
  2764   005870  6EF8               	movwf	tblptru,c
  2765   005872                     	endif
  2766   005872  0008               	tblrd		*
  2767   005874  50F5               	movf	tablat,w,c
  2768   005876  0900               	iorlw	0
  2769   005878  A4D8               	btfss	status,2,c
  2770   00587A  EF41  F02C         	goto	u5111
  2771   00587E  EF43  F02C         	goto	u5110
  2772   005882                     u5111:
  2773   005882  EF24  F02C         	goto	l5231
  2774   005886                     u5110:
  2775   005886                     
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2777   005886  0E00               	movlw	0
  2778   005888  0100               	movlb	0	; () banked
  2779   00588A  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2780   00588C  0E00               	movlw	0
  2781   00588E  6FA8               	movwf	?_vfprintf& (0+255),b
  2782   005890                     
  2783                           ; BSR set to: 0
  2784   005890  0012               	return		;funcret
  2785   005892                     __end_of_vfprintf:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _vfpfcnvrt *****************
  2789 ;; Defined at:
  2790 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2793 ;;		 -> sprintf@f(11), 
  2794 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2795 ;;		 -> vfprintf@cfmt(2), 
  2796 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2797 ;;		 -> sprintf@ap(2), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  convarg         8   61[BANK0 ] struct .
  2800 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2801 ;;		 -> STR_1(51), 
  2802 ;;  i               2    0        int 
  2803 ;;  done            2    0        int 
  2804 ;;  c               1   69[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;Total ram usage:       19 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 6
  2821 ;; This function calls:
  2822 ;;		_dtoa
  2823 ;;		_efgtoa
  2824 ;;		_fputc
  2825 ;; This function is called by:
  2826 ;;		_vfprintf
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text4
  2831   0037B6                     __ptext4:
  2832                           	callstack 0
  2833   0037B6                     _vfpfcnvrt:
  2834                           	callstack 22
  2835   0037B6                     
  2836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2837   0037B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2838   0037BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2839   0037BE  CFDE FFF6          	movff	postinc2,tblptrl
  2840   0037C2  CFDD FFF7          	movff	postdec2,tblptrh
  2841   0037C6                     	if	0	;tblptru may be non-zero
  2842   0037C6                     	endif
  2843   0037C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2844   0037C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2845   0037C8  6EF8               	movwf	tblptru,c
  2846   0037CA                     	endif
  2847   0037CA  0008               	tblrd		*
  2848   0037CC  50F5               	movf	tablat,w,c
  2849   0037CE  0A25               	xorlw	37
  2850   0037D0  A4D8               	btfss	status,2,c
  2851   0037D2  EFED  F01B         	goto	u4941
  2852   0037D6  EFEF  F01B         	goto	u4940
  2853   0037DA                     u4941:
  2854   0037DA  EF47  F01D         	goto	l5081
  2855   0037DE                     u4940:
  2856   0037DE                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2858   0037DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859   0037E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860   0037E6  2ADE               	incf	postinc2,f,c
  2861   0037E8  0E00               	movlw	0
  2862   0037EA  22DD               	addwfc	postdec2,f,c
  2863   0037EC                     
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2865   0037EC  0E00               	movlw	0
  2866   0037EE  0100               	movlb	0	; () banked
  2867   0037F0  6FE8               	movwf	(_width+1)& (0+255),b
  2868   0037F2  0E00               	movlw	0
  2869   0037F4  6FE7               	movwf	_width& (0+255),b
  2870   0037F6  C0E7  F0EB         	movff	_width,_flags
  2871   0037FA                     
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2874   0037FA  69E9               	setf	_prec& (0+255),b
  2875   0037FC  69EA               	setf	(_prec+1)& (0+255),b
  2876   0037FE                     
  2877                           ; BSR set to: 0
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2879   0037FE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2880   003802  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2881   003806  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2882   00380A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2883   00380E                     
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2886   00380E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2887   003812  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2888   003816                     	if	0	;tblptru may be non-zero
  2889   003816                     	endif
  2890   003816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2891   003816  0E00               	movlw	low (__mediumconst shr (0+16))
  2892   003818  6EF8               	movwf	tblptru,c
  2893   00381A                     	endif
  2894   00381A  0008               	tblrd		*
  2895   00381C  50F5               	movf	tablat,w,c
  2896   00381E  0A64               	xorlw	100
  2897   003820  B4D8               	btfsc	status,2,c
  2898   003822  EF15  F01C         	goto	u4951
  2899   003826  EF17  F01C         	goto	u4950
  2900   00382A                     u4951:
  2901   00382A  EF27  F01C         	goto	l5037
  2902   00382E                     u4950:
  2903   00382E                     
  2904                           ; BSR set to: 0
  2905   00382E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2906   003832  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2907   003836                     	if	0	;tblptru may be non-zero
  2908   003836                     	endif
  2909   003836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2910   003836  0E00               	movlw	low (__mediumconst shr (0+16))
  2911   003838  6EF8               	movwf	tblptru,c
  2912   00383A                     	endif
  2913   00383A  0008               	tblrd		*
  2914   00383C  50F5               	movf	tablat,w,c
  2915   00383E  0A69               	xorlw	105
  2916   003840  A4D8               	btfss	status,2,c
  2917   003842  EF25  F01C         	goto	u4961
  2918   003846  EF27  F01C         	goto	u4960
  2919   00384A                     u4961:
  2920   00384A  EF6A  F01C         	goto	l5043
  2921   00384E                     u4960:
  2922   00384E                     l5037:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2926   00384E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2927   003852  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2928   003856  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2929   00385A  0E02               	movlw	2
  2930   00385C  26DE               	addwf	postinc2,f,c
  2931   00385E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2932   003862  0E00               	movlw	0
  2933   003864  22DD               	addwfc	postdec2,f,c
  2934   003866  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2935   00386A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2936   00386E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2937   003872  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2938   003876  0E00               	movlw	0
  2939   003878  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2940   00387A  0EFF               	movlw	-1
  2941   00387C  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2942   00387E  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2943   003880  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2944   003882  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2945   003884  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2946   003886  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2949   003888  0E01               	movlw	1
  2950   00388A  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2951   00388C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2952   00388E  0E00               	movlw	0
  2953   003890  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2954   003892  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2955   003894  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956   003898  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957   00389C  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2958   0038A0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2959   0038A4                     
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2962   0038A4  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2963   0038A8  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2964   0038AC  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2965   0038B0  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2966   0038B4  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2967   0038B8  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2968   0038BC  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2969   0038C0  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2970   0038C4  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2971   0038C8  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2972   0038CC  ECCE  F01E         	call	_dtoa	;wreg free
  2973   0038D0  EF5D  F01D         	goto	l1466
  2974   0038D4                     l5043:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2978   0038D4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979   0038D8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980   0038DC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2981   0038E0  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2982   0038E4                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2985   0038E4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2986   0038E8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2987   0038EC                     	if	0	;tblptru may be non-zero
  2988   0038EC                     	endif
  2989   0038EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2990   0038EC  0E00               	movlw	low (__mediumconst shr (0+16))
  2991   0038EE  6EF8               	movwf	tblptru,c
  2992   0038F0                     	endif
  2993   0038F0  0008               	tblrd		*
  2994   0038F2  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2997   0038F6  EF89  F01C         	goto	l5055
  2998   0038FA                     l5047:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3002   0038FA  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3003   0038FC  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3006   0038FE  EFA2  F01C         	goto	l5057
  3007   003902                     l5049:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3011   003902  0E6C               	movlw	108
  3012   003904  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3015   003906  EFA2  F01C         	goto	l5057
  3016   00390A                     l5051:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3020   00390A  0E00               	movlw	0
  3021   00390C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3024   00390E  EFA2  F01C         	goto	l5057
  3025   003912                     l5055:
  3026                           
  3027                           ; BSR set to: 0
  3028   003912  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3029   003914  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3030   003916  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3031                           
  3032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3033                           ; Switch size 1, requested type "simple"
  3034                           ; Number of cases is 1, Range of values is 0 to 0
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte            4     3 (average)
  3038                           ;	Chosen strategy is simple_byte
  3039   003918  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3040   00391A  0A00               	xorlw	0	; case 0
  3041   00391C  B4D8               	btfsc	status,2,c
  3042   00391E  EF93  F01C         	goto	l6041
  3043   003922  EF85  F01C         	goto	l5051
  3044   003926                     l6041:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ; Switch size 1, requested type "simple"
  3048                           ; Number of cases is 3, Range of values is 76 to 108
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte           10     6 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053   003926  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3054   003928  0A4C               	xorlw	76	; case 76
  3055   00392A  B4D8               	btfsc	status,2,c
  3056   00392C  EF7D  F01C         	goto	l5047
  3057   003930  0A2A               	xorlw	42	; case 102
  3058   003932  B4D8               	btfsc	status,2,c
  3059   003934  EF81  F01C         	goto	l5049
  3060   003938  0A0A               	xorlw	10	; case 108
  3061   00393A  B4D8               	btfsc	status,2,c
  3062   00393C  EF7D  F01C         	goto	l5047
  3063   003940  EF85  F01C         	goto	l5051
  3064   003944                     l5057:
  3065                           
  3066                           ; BSR set to: 0
  3067   003944  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3068   003948  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3069   00394C                     	if	0	;tblptru may be non-zero
  3070   00394C                     	endif
  3071   00394C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3072   00394C  0E00               	movlw	low (__mediumconst shr (0+16))
  3073   00394E  6EF8               	movwf	tblptru,c
  3074   003950                     	endif
  3075   003950  0008               	tblrd		*
  3076   003952  50F5               	movf	tablat,w,c
  3077   003954  0A66               	xorlw	102
  3078   003956  A4D8               	btfss	status,2,c
  3079   003958  EFB0  F01C         	goto	u4971
  3080   00395C  EFB2  F01C         	goto	u4970
  3081   003960                     u4971:
  3082   003960  EF3E  F01D         	goto	l5077
  3083   003964                     u4970:
  3084   003964  EFE8  F01C         	goto	l5065
  3085   003968                     l5059:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3089   003968  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3090   00396C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3091   003970  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3092   003974  0E04               	movlw	4
  3093   003976  26DE               	addwf	postinc2,f,c
  3094   003978  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3095   00397C  0E00               	movlw	0
  3096   00397E  22DD               	addwfc	postdec2,f,c
  3097   003980  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3098   003984  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3099   003988  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3100   00398C  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3101   003990  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3102   003994  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3105   003998  EFFD  F01C         	goto	l5067
  3106   00399C                     l5061:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3110   00399C  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3111   0039A0  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3112   0039A4  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3113   0039A8  0E04               	movlw	4
  3114   0039AA  26DE               	addwf	postinc2,f,c
  3115   0039AC  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3116   0039B0  0E00               	movlw	0
  3117   0039B2  22DD               	addwfc	postdec2,f,c
  3118   0039B4  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3119   0039B8  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3120   0039BC  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3121   0039C0  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3122   0039C4  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3123   0039C8  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3126   0039CC  EFFD  F01C         	goto	l5067
  3127   0039D0                     l5065:
  3128                           
  3129                           ; BSR set to: 0
  3130   0039D0  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3131   0039D2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3132   0039D4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3133                           
  3134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3135                           ; Switch size 1, requested type "simple"
  3136                           ; Number of cases is 1, Range of values is 0 to 0
  3137                           ; switch strategies available:
  3138                           ; Name         Instructions Cycles
  3139                           ; simple_byte            4     3 (average)
  3140                           ;	Chosen strategy is simple_byte
  3141   0039D6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3142   0039D8  0A00               	xorlw	0	; case 0
  3143   0039DA  B4D8               	btfsc	status,2,c
  3144   0039DC  EFF2  F01C         	goto	l6043
  3145   0039E0  EFFD  F01C         	goto	l5067
  3146   0039E4                     l6043:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ; Switch size 1, requested type "simple"
  3150                           ; Number of cases is 2, Range of values is 76 to 108
  3151                           ; switch strategies available:
  3152                           ; Name         Instructions Cycles
  3153                           ; simple_byte            7     4 (average)
  3154                           ;	Chosen strategy is simple_byte
  3155   0039E4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3156   0039E6  0A4C               	xorlw	76	; case 76
  3157   0039E8  B4D8               	btfsc	status,2,c
  3158   0039EA  EFCE  F01C         	goto	l5061
  3159   0039EE  0A20               	xorlw	32	; case 108
  3160   0039F0  B4D8               	btfsc	status,2,c
  3161   0039F2  EFB4  F01C         	goto	l5059
  3162   0039F6  EFFD  F01C         	goto	l5067
  3163   0039FA                     l5067:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3167   0039FA  0E01               	movlw	1
  3168   0039FC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3169   0039FE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3170   003A00  0E00               	movlw	0
  3171   003A02  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3172   003A04  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3173   003A06  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3174   003A0A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3175   003A0E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3176   003A12  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3179   003A16  EF26  F01D         	goto	l5075
  3180   003A1A                     l5069:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3184   003A1A  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3185   003A1E  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3186   003A22  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3187   003A26  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3188   003A2A  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3189   003A2E  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3190   003A32  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3191   003A36  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3192   003A3A                     	if	0	;tblptru may be non-zero
  3193   003A3A                     	endif
  3194   003A3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3195   003A3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3196   003A3C  6EF8               	movwf	tblptru,c
  3197   003A3E                     	endif
  3198   003A3E  0008               	tblrd		*
  3199   003A40  CFF5 F066          	movff	tablat,efgtoa@c
  3200   003A44  EC4F  F00C         	call	_efgtoa	;wreg free
  3201   003A48  EF5D  F01D         	goto	l1466
  3202   003A4C                     l5075:
  3203                           
  3204                           ; BSR set to: 0
  3205   003A4C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3206   003A50  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3207   003A54                     	if	0	;tblptru may be non-zero
  3208   003A54                     	endif
  3209   003A54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3210   003A54  0E00               	movlw	low (__mediumconst shr (0+16))
  3211   003A56  6EF8               	movwf	tblptru,c
  3212   003A58                     	endif
  3213   003A58  0008               	tblrd		*
  3214   003A5A  50F5               	movf	tablat,w,c
  3215   003A5C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3216   003A5E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3217                           
  3218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 1, Range of values is 0 to 0
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte            4     3 (average)
  3224                           ;	Chosen strategy is simple_byte
  3225   003A60  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3226   003A62  0A00               	xorlw	0	; case 0
  3227   003A64  B4D8               	btfsc	status,2,c
  3228   003A66  EF37  F01D         	goto	l6045
  3229   003A6A  EF3E  F01D         	goto	l5077
  3230   003A6E                     l6045:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 1, Range of values is 102 to 102
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte            4     3 (average)
  3238                           ;	Chosen strategy is simple_byte
  3239   003A6E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3240   003A70  0A66               	xorlw	102	; case 102
  3241   003A72  B4D8               	btfsc	status,2,c
  3242   003A74  EF0D  F01D         	goto	l5069
  3243   003A78  EF3E  F01D         	goto	l5077
  3244   003A7C                     l5077:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3247   003A7C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3248   003A80  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3249   003A84  2ADE               	incf	postinc2,f,c
  3250   003A86  0E00               	movlw	0
  3251   003A88  22DD               	addwfc	postdec2,f,c
  3252   003A8A  EF5D  F01D         	goto	l1466
  3253   003A8E                     l5081:
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3256   003A8E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3257   003A92  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3258   003A96  CFDE FFF6          	movff	postinc2,tblptrl
  3259   003A9A  CFDD FFF7          	movff	postdec2,tblptrh
  3260   003A9E                     	if	0	;tblptru may be non-zero
  3261   003A9E                     	endif
  3262   003A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3263   003A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  3264   003AA0  6EF8               	movwf	tblptru,c
  3265   003AA2                     	endif
  3266   003AA2  0008               	tblrd		*
  3267   003AA4  50F5               	movf	tablat,w,c
  3268   003AA6  6E01               	movwf	fputc@c^0,c
  3269   003AA8  6A02               	clrf	(fputc@c+1)^0,c
  3270   003AAA  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3271   003AAE  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3272   003AB2  EC76  F026         	call	_fputc	;wreg free
  3273   003AB6  EF3E  F01D         	goto	l5077
  3274   003ABA                     l1466:
  3275   003ABA  0012               	return		;funcret
  3276   003ABC                     __end_of_vfpfcnvrt:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _efgtoa *****************
  3280 ;; Defined at:
  3281 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3284 ;;		 -> sprintf@f(11), 
  3285 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3286 ;;  c               1    6[BANK0 ] unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  u               4   49[BANK0 ] struct flui
  3289 ;;  g               4   45[BANK0 ] struct flui
  3290 ;;  l               4   38[BANK0 ] struct flui
  3291 ;;  h               4   34[BANK0 ] struct flui
  3292 ;;  ou              4   28[BANK0 ] struct flui
  3293 ;;  n               2   43[BANK0 ] int 
  3294 ;;  i               2   32[BANK0 ] int 
  3295 ;;  w               2   26[BANK0 ] int 
  3296 ;;  e               2   24[BANK0 ] int 
  3297 ;;  m               2   22[BANK0 ] int 
  3298 ;;  d               2   20[BANK0 ] int 
  3299 ;;  t               2   13[BANK0 ] int 
  3300 ;;  p               2   11[BANK0 ] int 
  3301 ;;  ne              2    9[BANK0 ] int 
  3302 ;;  sign            1   42[BANK0 ] unsigned char 
  3303 ;;  nmode           1   19[BANK0 ] unsigned char 
  3304 ;;  mode            1   18[BANK0 ] unsigned char 
  3305 ;;  pp              1   17[BANK0 ] unsigned char 
  3306 ;;  esign           1    0        unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3316 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;Total ram usage:       53 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 5
  3323 ;; This function calls:
  3324 ;;		___fladd
  3325 ;;		___fldiv
  3326 ;;		___fleq
  3327 ;;		___flge
  3328 ;;		___flmul
  3329 ;;		___flneg
  3330 ;;		___flsub
  3331 ;;		___fltol
  3332 ;;		___fpclassifyf
  3333 ;;		_floorf
  3334 ;;		_labs
  3335 ;;		_memcpy
  3336 ;;		_pad
  3337 ;;		_strcpy
  3338 ;; This function is called by:
  3339 ;;		_vfpfcnvrt
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text5
  3344   00189E                     __ptext5:
  3345                           	callstack 0
  3346   00189E                     _efgtoa:
  3347                           	callstack 22
  3348   00189E                     
  3349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3350   00189E  0E00               	movlw	0
  3351   0018A0  0100               	movlb	0	; () banked
  3352   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  3353   0018A4                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3356   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3357   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3358   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3359   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3360   0018B4                     
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3363   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3364   0018B6  EF61  F00C         	goto	u4590
  3365   0018BA  EF5F  F00C         	goto	u4591
  3366   0018BE                     u4591:
  3367   0018BE  EF75  F00C         	goto	l4747
  3368   0018C2                     u4590:
  3369   0018C2                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3372   0018C2  0E01               	movlw	1
  3373   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  3374   0018C6                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3377   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3378   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3379   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3380   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3381   0018D6  EC62  F02F         	call	___flneg	;wreg free
  3382   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  3383   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3384   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3385   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3386   0018EA                     l4747:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3389   0018EA  0E00               	movlw	0
  3390   0018EC  0100               	movlb	0	; () banked
  3391   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3392   0018F0  0E00               	movlw	0
  3393   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  3394   0018F4                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3397   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  3398   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3399   0018FC                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3402   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  3403   0018FE  B4D8               	btfsc	status,2,c
  3404   001900  EF84  F00C         	goto	u4601
  3405   001904  EF86  F00C         	goto	u4600
  3406   001908                     u4601:
  3407   001908  EF9A  F00C         	goto	l4761
  3408   00190C                     u4600:
  3409   00190C                     
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3412   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  3413   00190E  A4D8               	btfss	status,2,c
  3414   001910  EF8C  F00C         	goto	u4611
  3415   001914  EF8E  F00C         	goto	u4610
  3416   001918                     u4611:
  3417   001918  EF94  F00C         	goto	l4757
  3418   00191C                     u4610:
  3419   00191C                     
  3420                           ; BSR set to: 0
  3421   00191C  0E00               	movlw	0
  3422   00191E  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3423   001920  0E2B               	movlw	43
  3424   001922  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3425   001924  EF98  F00C         	goto	l4759
  3426   001928                     l4757:
  3427                           
  3428                           ; BSR set to: 0
  3429   001928  0E00               	movlw	0
  3430   00192A  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3431   00192C  0E2D               	movlw	45
  3432   00192E  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3433   001930                     l4759:
  3434                           
  3435                           ; BSR set to: 0
  3436   001930  C06F  F08A         	movff	_efgtoa$2852,efgtoa@sign
  3437   001934                     l4761:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3441   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3442   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3443   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3444   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3445   001944  ECF7  F025         	call	___fpclassifyf	;wreg free
  3446   001948  0401               	decf	?___fpclassifyf^0,w,c
  3447   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3448   00194C  A4D8               	btfss	status,2,c
  3449   00194E  EFAB  F00C         	goto	u4621
  3450   001952  EFAD  F00C         	goto	u4620
  3451   001956                     u4621:
  3452   001956  EFE0  F00C         	goto	l4779
  3453   00195A                     u4620:
  3454   00195A                     
  3455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3456   00195A  0100               	movlb	0	; () banked
  3457   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  3458   00195E  B4D8               	btfsc	status,2,c
  3459   001960  EFB4  F00C         	goto	u4631
  3460   001964  EFB6  F00C         	goto	u4630
  3461   001968                     u4631:
  3462   001968  EFBF  F00C         	goto	l4771
  3463   00196C                     u4630:
  3464   00196C                     
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3467   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3468   001970                     
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3471   001970  077A               	decf	efgtoa@w& (0+255),f,b
  3472   001972  A0D8               	btfss	status,0,c
  3473   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3474   001976                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3477   001976  0E00               	movlw	0
  3478   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3479   00197A  0E01               	movlw	1
  3480   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  3481   00197E                     l4771:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3485   00197E  0EA0               	movlw	low _dbuf
  3486   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  3487   001982  6E01               	movwf	strcpy@dest^0,c
  3488   001984  0E02               	movlw	high _dbuf
  3489   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3490   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  3491   00198A  0E34               	movlw	low STR_2
  3492   00198C  6E03               	movwf	strcpy@src^0,c
  3493   00198E  0E0E               	movlw	high STR_2
  3494   001990  6E04               	movwf	(strcpy@src+1)^0,c
  3495   001992  EC9F  F02E         	call	_strcpy	;wreg free
  3496   001996                     l4773:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3499   001996  0100               	movlb	0	; () banked
  3500   001998  0EFD               	movlw	253
  3501   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  3502   00199C  0EFF               	movlw	255
  3503   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3504   0019A0                     
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3507   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  3508   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3509   0019A8  0EA0               	movlw	low _dbuf
  3510   0019AA  6E13               	movwf	pad@buf^0,c
  3511   0019AC  0E02               	movlw	high _dbuf
  3512   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  3513   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  3514   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3515   0019B8  ECFA  F029         	call	_pad	;wreg free
  3516   0019BC  EF4B  F011         	goto	l1418
  3517   0019C0                     l4779:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3520   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3521   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3522   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3523   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3524   0019D0  ECF7  F025         	call	___fpclassifyf	;wreg free
  3525   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  3526   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3527   0019D8  A4D8               	btfss	status,2,c
  3528   0019DA  EFF1  F00C         	goto	u4641
  3529   0019DE  EFF3  F00C         	goto	u4640
  3530   0019E2                     u4641:
  3531   0019E2  EF13  F00D         	goto	l4797
  3532   0019E6                     u4640:
  3533   0019E6                     
  3534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3535   0019E6  0100               	movlb	0	; () banked
  3536   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  3537   0019EA  B4D8               	btfsc	status,2,c
  3538   0019EC  EFFA  F00C         	goto	u4651
  3539   0019F0  EFFC  F00C         	goto	u4650
  3540   0019F4                     u4651:
  3541   0019F4  EF05  F00D         	goto	l4789
  3542   0019F8                     u4650:
  3543   0019F8                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3546   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3547   0019FC                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3550   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3551   0019FE  A0D8               	btfss	status,0,c
  3552   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3553   001A02                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3556   001A02  0E00               	movlw	0
  3557   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3558   001A06  0E01               	movlw	1
  3559   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3560   001A0A                     l4789:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3564   001A0A  0EA0               	movlw	low _dbuf
  3565   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3566   001A0E  6E01               	movwf	strcpy@dest^0,c
  3567   001A10  0E02               	movlw	high _dbuf
  3568   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3569   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3570   001A16  0E38               	movlw	low STR_5
  3571   001A18  6E03               	movwf	strcpy@src^0,c
  3572   001A1A  0E0E               	movlw	high STR_5
  3573   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3574   001A1E  EC9F  F02E         	call	_strcpy	;wreg free
  3575   001A22  EFCB  F00C         	goto	l4773
  3576   001A26                     l4797:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3579   001A26  0E00               	movlw	0
  3580   001A28  0100               	movlb	0	; () banked
  3581   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3582   001A2C  0E00               	movlw	0
  3583   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3584   001A30  0E80               	movlw	128
  3585   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3586   001A34  0E3F               	movlw	63
  3587   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3590   001A38  0E00               	movlw	0
  3591   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3592   001A3C  0E00               	movlw	0
  3593   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3594   001A40                     
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3597   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3598   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3599   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3600   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3601   001A50  0E00               	movlw	0
  3602   001A52  6E36               	movwf	___fleq@ff2^0,c
  3603   001A54  0E00               	movlw	0
  3604   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3605   001A58  0E00               	movlw	0
  3606   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3607   001A5C  0E00               	movlw	0
  3608   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3609   001A60  ECE6  F027         	call	___fleq	;wreg free
  3610   001A64  B0D8               	btfsc	status,0,c
  3611   001A66  EF37  F00D         	goto	u4661
  3612   001A6A  EF39  F00D         	goto	u4660
  3613   001A6E                     u4661:
  3614   001A6E  EF18  F00E         	goto	l1421
  3615   001A72                     u4660:
  3616   001A72  EF46  F00D         	goto	l4805
  3617   001A76                     l1423:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3620   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3621   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3622   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3623   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3624   001A86                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3626   001A86  0100               	movlb	0	; () banked
  3627   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3628   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3629   001A8C                     l4805:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3632   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3633   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3634   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3635   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3636   001A9C  0E00               	movlw	0
  3637   001A9E  6E15               	movwf	___flmul@a^0,c
  3638   001AA0  0E00               	movlw	0
  3639   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3640   001AA4  0E20               	movlw	32
  3641   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3642   001AA8  0E41               	movlw	65
  3643   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3644   001AAC  EC62  F016         	call	___flmul	;wreg free
  3645   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3646   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3647   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3648   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3649   001AC0  0100               	movlb	0	; () banked
  3650   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3651   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3652   001AC6  6E01               	movwf	labs@a^0,c
  3653   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3654   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3655   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3656   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3657   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3658   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3659   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3660   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3661   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3662   001ADA  ECA6  F02A         	call	_labs	;wreg free
  3663   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3664   001AE0  EF7D  F00D         	goto	u4671
  3665   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3666   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3667   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3668   001AEA  E109               	bnz	u4670
  3669   001AEC  0E02               	movlw	2
  3670   001AEE  5C01               	subwf	?_labs^0,w,c
  3671   001AF0  A0D8               	btfss	status,0,c
  3672   001AF2  EF7D  F00D         	goto	u4671
  3673   001AF6  EF7F  F00D         	goto	u4670
  3674   001AFA                     u4671:
  3675   001AFA  EF3B  F00D         	goto	l1423
  3676   001AFE                     u4670:
  3677   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3678   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3679   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3680   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3681   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3682   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3683   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3684   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3685   001B1E  EC75  F025         	call	___flge	;wreg free
  3686   001B22  A0D8               	btfss	status,0,c
  3687   001B24  EF96  F00D         	goto	u4681
  3688   001B28  EF98  F00D         	goto	u4680
  3689   001B2C                     u4681:
  3690   001B2C  EF3B  F00D         	goto	l1423
  3691   001B30                     u4680:
  3692   001B30                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3694   001B30  0100               	movlb	0	; () banked
  3695   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3696   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3697   001B36  6E01               	movwf	labs@a^0,c
  3698   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3699   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3700   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3701   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3702   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3703   001B42  6E03               	movwf	(labs@a+2)^0,c
  3704   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3705   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3706   001B48  6E04               	movwf	(labs@a+3)^0,c
  3707   001B4A  ECA6  F02A         	call	_labs	;wreg free
  3708   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3709   001B50  EFB7  F00D         	goto	u4690
  3710   001B54  5004               	movf	(?_labs+3)^0,w,c
  3711   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3712   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3713   001B5A  E107               	bnz	u4691
  3714   001B5C  0E02               	movlw	2
  3715   001B5E  5C01               	subwf	?_labs^0,w,c
  3716   001B60  B0D8               	btfsc	status,0,c
  3717   001B62  EFB5  F00D         	goto	u4691
  3718   001B66  EFB7  F00D         	goto	u4690
  3719   001B6A                     u4691:
  3720   001B6A  EFFF  F00D         	goto	l4823
  3721   001B6E                     u4690:
  3722   001B6E                     l4813:
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3725   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3726   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3727   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3728   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3731   001B7E  EF18  F00E         	goto	l1421
  3732   001B82                     l4815:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3735   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3736   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3737   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3738   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3739   001B92  0E00               	movlw	0
  3740   001B94  6E36               	movwf	___fldiv@a^0,c
  3741   001B96  0E00               	movlw	0
  3742   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3743   001B9A  0E20               	movlw	32
  3744   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3745   001B9E  0E41               	movlw	65
  3746   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3747   001BA2  EC77  F018         	call	___fldiv	;wreg free
  3748   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3749   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3750   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3751   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3752   001BB6                     
  3753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3754   001BB6  0100               	movlb	0	; () banked
  3755   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3756   001BBA  A0D8               	btfss	status,0,c
  3757   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3758   001BBE                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3761   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3762   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3763   001BC2  6E01               	movwf	labs@a^0,c
  3764   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3765   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3766   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3767   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3768   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3769   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3770   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3771   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3772   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3773   001BD6  ECA6  F02A         	call	_labs	;wreg free
  3774   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3775   001BDC  EFFD  F00D         	goto	u4700
  3776   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3777   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3778   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3779   001BE6  E107               	bnz	u4701
  3780   001BE8  0E02               	movlw	2
  3781   001BEA  5C01               	subwf	?_labs^0,w,c
  3782   001BEC  B0D8               	btfsc	status,0,c
  3783   001BEE  EFFB  F00D         	goto	u4701
  3784   001BF2  EFFD  F00D         	goto	u4700
  3785   001BF6                     u4701:
  3786   001BF6  EFFF  F00D         	goto	l4823
  3787   001BFA                     u4700:
  3788   001BFA  EFB7  F00D         	goto	l4813
  3789   001BFE                     l4823:
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3792   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3793   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3794   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3795   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3796   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3797   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3798   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3799   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3800   001C1E  EC75  F025         	call	___flge	;wreg free
  3801   001C22  A0D8               	btfss	status,0,c
  3802   001C24  EF16  F00E         	goto	u4711
  3803   001C28  EF18  F00E         	goto	u4710
  3804   001C2C                     u4711:
  3805   001C2C  EFC1  F00D         	goto	l4815
  3806   001C30                     u4710:
  3807   001C30                     l1421:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3810   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3813   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3814   001C38                     
  3815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3816   001C38  0100               	movlb	0	; () banked
  3817   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3818   001C3C  EF22  F00E         	goto	u4721
  3819   001C40  EF24  F00E         	goto	u4720
  3820   001C44                     u4721:
  3821   001C44  EF2A  F00E         	goto	l4829
  3822   001C48                     u4720:
  3823   001C48                     
  3824                           ; BSR set to: 0
  3825   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3826   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3827   001C50  EF2E  F00E         	goto	l4831
  3828   001C54                     l4829:
  3829                           
  3830                           ; BSR set to: 0
  3831   001C54  0E00               	movlw	0
  3832   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3833   001C58  0E06               	movlw	6
  3834   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3835   001C5C                     l4831:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3839   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3840   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3841   001C64                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3844   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3845   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3846   001C68                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3849   001C68  0E66               	movlw	102
  3850   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3851   001C6C  A4D8               	btfss	status,2,c
  3852   001C6E  EF3B  F00E         	goto	u4731
  3853   001C72  EF3D  F00E         	goto	u4730
  3854   001C76                     u4731:
  3855   001C76  EF5D  F00E         	goto	l4845
  3856   001C7A                     u4730:
  3857   001C7A                     
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3860   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3861   001C7C  EF44  F00E         	goto	u4740
  3862   001C80  EF42  F00E         	goto	u4741
  3863   001C84                     u4741:
  3864   001C84  EF50  F00E         	goto	l4841
  3865   001C88                     u4740:
  3866   001C88                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3869   001C88  0E00               	movlw	0
  3870   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3871   001C8C  0E00               	movlw	0
  3872   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3873   001C90  0E80               	movlw	128
  3874   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3875   001C94  0E3F               	movlw	63
  3876   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3879   001C98  0E00               	movlw	0
  3880   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3881   001C9C  0E00               	movlw	0
  3882   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3883   001CA0                     l4841:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3887   001CA0  0E67               	movlw	103
  3888   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3889   001CA4  B4D8               	btfsc	status,2,c
  3890   001CA6  EF57  F00E         	goto	u4751
  3891   001CAA  EF59  F00E         	goto	u4750
  3892   001CAE                     u4751:
  3893   001CAE  EF5D  F00E         	goto	l4845
  3894   001CB2                     u4750:
  3895   001CB2                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3898   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3899   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3900   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3901   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3902   001CBA                     l4845:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3906   001CBA  0E00               	movlw	0
  3907   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3908   001CBE  0E00               	movlw	0
  3909   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3910   001CC2                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3913   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3914   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3915   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3916   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3917   001CD2                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3920   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3921   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3922   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3923   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3926   001CE2  EFEE  F00E         	goto	l4859
  3927   001CE6                     l4851:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3931   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3932   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3933   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3934   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3935   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3936   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3937   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3938   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3939   001D06  EC77  F018         	call	___fldiv	;wreg free
  3940   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3941   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3942   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3943   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3944   001D1A  EC0D  F020         	call	_floorf	;wreg free
  3945   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3946   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3947   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3948   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3951   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3952   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3953   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3954   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3955   001D3E  ECF2  F024         	call	___fltol	;wreg free
  3956   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3957   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3958   001D4A                     
  3959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3960   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3961   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3962   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3963   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3964   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3965   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3966   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3967   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3968   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3969   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3970   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3971   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3972   001D7A  EC62  F016         	call	___flmul	;wreg free
  3973   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  3974   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3975   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3976   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3977   001D8E  EC7C  F02E         	call	___flsub	;wreg free
  3978   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  3979   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3980   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3981   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3982   001DA2                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3984   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  3985   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3986   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3987   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3988   001DB2  0E00               	movlw	0
  3989   001DB4  6E36               	movwf	___fldiv@a^0,c
  3990   001DB6  0E00               	movlw	0
  3991   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  3992   001DBA  0E20               	movlw	32
  3993   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  3994   001DBE  0E41               	movlw	65
  3995   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  3996   001DC2  EC77  F018         	call	___fldiv	;wreg free
  3997   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  3998   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3999   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4000   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4001   001DD6                     
  4002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4003   001DD6  0100               	movlb	0	; () banked
  4004   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4005   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4006   001DDC                     l4859:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4010   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  4011   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4012   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4013   001DE2  0A80               	xorlw	128
  4014   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  4015   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4016   001DE8  0A80               	xorlw	128
  4017   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  4018   001DEC  A0D8               	btfss	status,0,c
  4019   001DEE  EFFB  F00E         	goto	u4761
  4020   001DF2  EFFD  F00E         	goto	u4760
  4021   001DF6                     u4761:
  4022   001DF6  EF73  F00E         	goto	l4851
  4023   001DFA                     u4760:
  4024   001DFA                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4027   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4028   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4029   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4030   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4031   001E0A  0E00               	movlw	0
  4032   001E0C  6E15               	movwf	___flmul@a^0,c
  4033   001E0E  0E00               	movlw	0
  4034   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  4035   001E12  0EA0               	movlw	160
  4036   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  4037   001E16  0E40               	movlw	64
  4038   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  4039   001E1A  EC62  F016         	call	___flmul	;wreg free
  4040   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  4041   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4042   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4043   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4044   001E2E                     
  4045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4046   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4047   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4048   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4049   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4050   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4051   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4052   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4053   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4054   001E4E  EC75  F025         	call	___flge	;wreg free
  4055   001E52  B0D8               	btfsc	status,0,c
  4056   001E54  EF2E  F00F         	goto	u4771
  4057   001E58  EF30  F00F         	goto	u4770
  4058   001E5C                     u4771:
  4059   001E5C  EF3B  F00F         	goto	l4867
  4060   001E60                     u4770:
  4061   001E60                     
  4062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4063   001E60  0E00               	movlw	0
  4064   001E62  0100               	movlb	0	; () banked
  4065   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  4066   001E66  0E00               	movlw	0
  4067   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4068   001E6A  0E00               	movlw	0
  4069   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4070   001E6E  0E00               	movlw	0
  4071   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4074   001E72  EF64  F00F         	goto	l4873
  4075   001E76                     l4867:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4078   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4079   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4080   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4081   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4082   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4083   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4084   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4085   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4086   001E96  ECE6  F027         	call	___fleq	;wreg free
  4087   001E9A  A0D8               	btfss	status,0,c
  4088   001E9C  EF52  F00F         	goto	u4781
  4089   001EA0  EF54  F00F         	goto	u4780
  4090   001EA4                     u4781:
  4091   001EA4  EF64  F00F         	goto	l4873
  4092   001EA8                     u4780:
  4093   001EA8  0100               	movlb	0	; () banked
  4094   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  4095   001EAC  EF5A  F00F         	goto	u4791
  4096   001EB0  EF5C  F00F         	goto	u4790
  4097   001EB4                     u4791:
  4098   001EB4  EF64  F00F         	goto	l4873
  4099   001EB8                     u4790:
  4100   001EB8                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4103   001EB8  0E00               	movlw	0
  4104   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  4105   001EBC  0E00               	movlw	0
  4106   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4107   001EC0  0E00               	movlw	0
  4108   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4109   001EC4  0E00               	movlw	0
  4110   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4111   001EC8                     l4873:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4114   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  4115   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4116   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4117   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4118   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  4119   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4120   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4121   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4122   001EE8  EC02  F014         	call	___fladd	;wreg free
  4123   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  4124   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4125   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4126   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4127   001EFC                     
  4128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4129   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4130   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4131   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4132   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4133   001F0C  0E00               	movlw	0
  4134   001F0E  6E15               	movwf	___flmul@a^0,c
  4135   001F10  0E00               	movlw	0
  4136   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  4137   001F14  0E20               	movlw	32
  4138   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  4139   001F18  0E41               	movlw	65
  4140   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  4141   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4142   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4143   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4144   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4145   001F2C  EC62  F016         	call	___flmul	;wreg free
  4146   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  4147   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4148   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4149   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4150   001F40  EC75  F025         	call	___flge	;wreg free
  4151   001F44  A0D8               	btfss	status,0,c
  4152   001F46  EFA7  F00F         	goto	u4801
  4153   001F4A  EFA9  F00F         	goto	u4800
  4154   001F4E                     u4801:
  4155   001F4E  EFD2  F00F         	goto	l4885
  4156   001F52                     u4800:
  4157   001F52                     
  4158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4159   001F52  0100               	movlb	0	; () banked
  4160   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4161   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4162   001F58                     
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4165   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4166   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4167   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4168   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4169   001F68  0E00               	movlw	0
  4170   001F6A  6E15               	movwf	___flmul@a^0,c
  4171   001F6C  0E00               	movlw	0
  4172   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  4173   001F70  0E20               	movlw	32
  4174   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  4175   001F74  0E41               	movlw	65
  4176   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  4177   001F78  EC62  F016         	call	___flmul	;wreg free
  4178   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4179   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4180   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4181   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4182   001F8C                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4184   001F8C  0E66               	movlw	102
  4185   001F8E  0100               	movlb	0	; () banked
  4186   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4187   001F92  A4D8               	btfss	status,2,c
  4188   001F94  EFCE  F00F         	goto	u4811
  4189   001F98  EFD0  F00F         	goto	u4810
  4190   001F9C                     u4811:
  4191   001F9C  EFD2  F00F         	goto	l4885
  4192   001FA0                     u4810:
  4193   001FA0                     
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4196   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4197   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4198   001FA4                     l4885:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4201   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4202   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4203   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4204   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4205   001FB4                     
  4206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4207   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4208   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4209   001FBC                     
  4210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4211   001FBC  0E00               	movlw	0
  4212   001FBE  0100               	movlb	0	; () banked
  4213   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  4214   001FC2                     
  4215                           ; BSR set to: 0
  4216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4217   001FC2  0E00               	movlw	0
  4218   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4219   001FC6  0E00               	movlw	0
  4220   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  4221   001FCA                     
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4224   001FCA  0E00               	movlw	0
  4225   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4226   001FCE  0E00               	movlw	0
  4227   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4230   001FD2  EFD0  F010         	goto	l4935
  4231   001FD6                     l4895:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4235   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  4236   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4237   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4238   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4239   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  4240   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4241   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4242   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4243   001FF6  EC77  F018         	call	___fldiv	;wreg free
  4244   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  4245   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4246   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4247   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4248   00200A  EC0D  F020         	call	_floorf	;wreg free
  4249   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  4250   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4251   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4252   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4255   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4256   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4257   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4258   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4259   00202E  ECF2  F024         	call	___fltol	;wreg free
  4260   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  4261   002034  EF27  F010         	goto	u4820
  4262   002038  5002               	movf	(?___fltol+1)^0,w,c
  4263   00203A  E107               	bnz	u4821
  4264   00203C  0E0A               	movlw	10
  4265   00203E  5C01               	subwf	?___fltol^0,w,c
  4266   002040  B0D8               	btfsc	status,0,c
  4267   002042  EF25  F010         	goto	u4821
  4268   002046  EF27  F010         	goto	u4820
  4269   00204A                     u4821:
  4270   00204A  EF37  F010         	goto	l4899
  4271   00204E                     u4820:
  4272   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4273   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4274   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4275   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4276   00205E  ECF2  F024         	call	___fltol	;wreg free
  4277   002062  C001  F074         	movff	?___fltol,efgtoa@d
  4278   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4279   00206A  EF3C  F010         	goto	l1451
  4280   00206E                     l4899:
  4281   00206E  0E00               	movlw	0
  4282   002070  0100               	movlb	0	; () banked
  4283   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4284   002074  0E09               	movlw	9
  4285   002076  6F74               	movwf	efgtoa@d& (0+255),b
  4286   002078                     l1451:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4289   002078  0100               	movlb	0	; () banked
  4290   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  4291   00207C  A4D8               	btfss	status,2,c
  4292   00207E  EF43  F010         	goto	u4831
  4293   002082  EF45  F010         	goto	u4830
  4294   002086                     u4831:
  4295   002086  EF6D  F010         	goto	l4919
  4296   00208A                     u4830:
  4297   00208A                     
  4298                           ; BSR set to: 0
  4299   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4300   00208C  EF4C  F010         	goto	u4840
  4301   002090  EF4A  F010         	goto	u4841
  4302   002094                     u4841:
  4303   002094  EF6D  F010         	goto	l4919
  4304   002098                     u4840:
  4305   002098                     
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4308   002098  0EA0               	movlw	low _dbuf
  4309   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  4310   00209C  6ED9               	movwf	fsr2l,c
  4311   00209E  0E02               	movlw	high _dbuf
  4312   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4313   0020A2  6EDA               	movwf	fsr2h,c
  4314   0020A4  0E2E               	movlw	46
  4315   0020A6  6EDF               	movwf	indf2,c
  4316   0020A8                     
  4317                           ; BSR set to: 0
  4318   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4319   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4320   0020AC                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4323   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  4324   0020AE  A0D8               	btfss	status,0,c
  4325   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4326   0020B2                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4329   0020B2  0E01               	movlw	1
  4330   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  4331   0020B6  EF6D  F010         	goto	l4919
  4332   0020BA                     l4911:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4336   0020BA  0EA0               	movlw	low _dbuf
  4337   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  4338   0020BE  6ED9               	movwf	fsr2l,c
  4339   0020C0  0E02               	movlw	high _dbuf
  4340   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4341   0020C4  6EDA               	movwf	fsr2h,c
  4342   0020C6  0E30               	movlw	48
  4343   0020C8  6EDF               	movwf	indf2,c
  4344   0020CA                     
  4345                           ; BSR set to: 0
  4346   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4347   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4348   0020CE                     
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4351   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  4352   0020D0  A0D8               	btfss	status,0,c
  4353   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4354   0020D4                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4357   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  4358   0020D6  A0D8               	btfss	status,0,c
  4359   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4360   0020DA                     l4919:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4364   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  4365   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4366   0020DE  A4D8               	btfss	status,2,c
  4367   0020E0  EF74  F010         	goto	u4851
  4368   0020E4  EF76  F010         	goto	u4850
  4369   0020E8                     u4851:
  4370   0020E8  EF5D  F010         	goto	l4911
  4371   0020EC                     u4850:
  4372   0020EC                     
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4375   0020EC  0EA0               	movlw	low _dbuf
  4376   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  4377   0020F0  6ED9               	movwf	fsr2l,c
  4378   0020F2  0E02               	movlw	high _dbuf
  4379   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4380   0020F6  6EDA               	movwf	fsr2h,c
  4381   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  4382   0020FA  0F30               	addlw	48
  4383   0020FC  6EDF               	movwf	indf2,c
  4384   0020FE                     
  4385                           ; BSR set to: 0
  4386   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4387   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4388   002102                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4391   002102  077A               	decf	efgtoa@w& (0+255),f,b
  4392   002104  A0D8               	btfss	status,0,c
  4393   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4394   002108                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4397   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  4398   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4399   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4400   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4401   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  4402   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4403   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4404   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4405   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  4406   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4407   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4408   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4409   002138  EC62  F016         	call	___flmul	;wreg free
  4410   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  4411   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4412   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4413   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4414   00214C  EC7C  F02E         	call	___flsub	;wreg free
  4415   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  4416   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4417   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4418   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4419   002160                     
  4420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4421   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  4422   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4423   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4424   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4425   002170  0E00               	movlw	0
  4426   002172  6E36               	movwf	___fldiv@a^0,c
  4427   002174  0E00               	movlw	0
  4428   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  4429   002178  0E20               	movlw	32
  4430   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  4431   00217C  0E41               	movlw	65
  4432   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  4433   002180  EC77  F018         	call	___fldiv	;wreg free
  4434   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  4435   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4436   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4437   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4438   002194                     
  4439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4440   002194  0100               	movlb	0	; () banked
  4441   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  4442   002198  A0D8               	btfss	status,0,c
  4443   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4444   00219C                     
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4447   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4448   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4449   0021A0                     l4935:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4453   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  4454   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  4455   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4456   0021A6  0A80               	xorlw	128
  4457   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  4458   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4459   0021AC  0A80               	xorlw	128
  4460   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  4461   0021B0  B0D8               	btfsc	status,0,c
  4462   0021B2  EFDD  F010         	goto	u4861
  4463   0021B6  EFDF  F010         	goto	u4860
  4464   0021BA                     u4861:
  4465   0021BA  EFED  F010         	goto	l4939
  4466   0021BE                     u4860:
  4467   0021BE                     
  4468                           ; BSR set to: 0
  4469   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4470   0021C0  EFEB  F010         	goto	u4871
  4471   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4472   0021C6  E109               	bnz	u4870
  4473   0021C8  0E4B               	movlw	75
  4474   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4475   0021CC  A0D8               	btfss	status,0,c
  4476   0021CE  EFEB  F010         	goto	u4871
  4477   0021D2  EFED  F010         	goto	u4870
  4478   0021D6                     u4871:
  4479   0021D6  EFEB  F00F         	goto	l4895
  4480   0021DA                     u4870:
  4481   0021DA                     l4939:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4485   0021DA  0E00               	movlw	0
  4486   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4487   0021DE  0E4F               	movlw	79
  4488   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  4489   0021E2                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4492   0021E2  0EA0               	movlw	low _dbuf
  4493   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  4494   0021E6  6ED9               	movwf	fsr2l,c
  4495   0021E8  0E02               	movlw	high _dbuf
  4496   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4497   0021EC  6EDA               	movwf	fsr2h,c
  4498   0021EE  0E00               	movlw	0
  4499   0021F0  6EDF               	movwf	indf2,c
  4500   0021F2                     
  4501                           ; BSR set to: 0
  4502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4503   0021F2  0EA0               	movlw	low _dbuf
  4504   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  4505   0021F6  0E02               	movlw	high _dbuf
  4506   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4507   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4508   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  4509   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4510   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4511   002202  5180               	movf	efgtoa@i& (0+255),w,b
  4512   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  4513   002206  6E01               	movwf	memcpy@d1^0,c
  4514   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4515   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4516   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  4517   00220E  0EA0               	movlw	low _dbuf
  4518   002210  6E03               	movwf	memcpy@s1^0,c
  4519   002212  0E02               	movlw	high _dbuf
  4520   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  4521   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  4522   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4523   00221E  EC3F  F02D         	call	_memcpy	;wreg free
  4524   002222                     
  4525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4526   002222  0100               	movlb	0	; () banked
  4527   002224  518B               	movf	efgtoa@n& (0+255),w,b
  4528   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  4529   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  4530   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4531   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4532   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4533   002230                     
  4534                           ; BSR set to: 0
  4535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4536   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  4537   002232  A4D8               	btfss	status,2,c
  4538   002234  EF1E  F011         	goto	u4881
  4539   002238  EF21  F011         	goto	u4880
  4540   00223C                     u4881:
  4541   00223C  0E01               	movlw	1
  4542   00223E  EF22  F011         	goto	u4890
  4543   002242                     u4880:
  4544   002242  0E00               	movlw	0
  4545   002244                     u4890:
  4546   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4547   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4548   002248                     
  4549                           ; BSR set to: 0
  4550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4551   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4552   00224A  B4D8               	btfsc	status,2,c
  4553   00224C  EF2A  F011         	goto	u4901
  4554   002250  EF2C  F011         	goto	u4900
  4555   002254                     u4901:
  4556   002254  EF37  F011         	goto	l4953
  4557   002258                     u4900:
  4558   002258                     
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4561   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4562   00225A  A0D8               	btfss	status,0,c
  4563   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4564   00225E  0EA0               	movlw	low _dbuf
  4565   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4566   002262  6ED9               	movwf	fsr2l,c
  4567   002264  0E02               	movlw	high _dbuf
  4568   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4569   002268  6EDA               	movwf	fsr2h,c
  4570   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4571   00226E                     l4953:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4575   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4576   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4577   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4578   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4579   002276                     
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4582   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4583   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4584   00227E  0EA0               	movlw	low _dbuf
  4585   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4586   002282  6E13               	movwf	pad@buf^0,c
  4587   002284  0E02               	movlw	high _dbuf
  4588   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4589   002288  6E14               	movwf	(pad@buf+1)^0,c
  4590   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4591   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4592   002292  ECFA  F029         	call	_pad	;wreg free
  4593   002296                     l1418:
  4594   002296  0012               	return		;funcret
  4595   002298                     __end_of_efgtoa:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _strcpy *****************
  4599 ;; Defined at:
  4600 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4603 ;;		 -> dbuf(80), 
  4604 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4605 ;;		 -> STR_5(4), STR_2(4), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  d               2    6[COMRAM] PTR unsigned char 
  4608 ;;		 -> dbuf(80), 
  4609 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4610 ;;		 -> STR_5(4), STR_2(4), 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    0[COMRAM] PTR unsigned char 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;Total ram usage:        8 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_efgtoa
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text6
  4635   005D3E                     __ptext6:
  4636                           	callstack 0
  4637   005D3E                     _strcpy:
  4638                           	callstack 25
  4639   005D3E  C003  F005         	movff	strcpy@src,strcpy@s
  4640   005D42  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4641   005D46  C001  F007         	movff	strcpy@dest,strcpy@d
  4642   005D4A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4643   005D4E                     l4559:
  4644   005D4E  C005  FFF6         	movff	strcpy@s,tblptrl
  4645   005D52  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4646   005D56  4A05               	infsnz	strcpy@s^0,f,c
  4647   005D58  2A06               	incf	(strcpy@s+1)^0,f,c
  4648   005D5A                     	if	0	;tblptru may be non-zero
  4649   005D5A                     	endif
  4650   005D5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4651   005D5A  0E00               	movlw	low (__mediumconst shr (0+16))
  4652   005D5C  6EF8               	movwf	tblptru,c
  4653   005D5E                     	endif
  4654   005D5E  C007  FFD9         	movff	strcpy@d,fsr2l
  4655   005D62  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4656   005D66  4A07               	infsnz	strcpy@d^0,f,c
  4657   005D68  2A08               	incf	(strcpy@d+1)^0,f,c
  4658   005D6A  0008               	tblrd		*
  4659   005D6C  CFF5 FFDF          	movff	tablat,indf2
  4660   005D70  50DF               	movf	indf2,w,c
  4661   005D72  A4D8               	btfss	status,2,c
  4662   005D74  EFBE  F02E         	goto	u4231
  4663   005D78  EFC0  F02E         	goto	u4230
  4664   005D7C                     u4231:
  4665   005D7C  EFA7  F02E         	goto	l4559
  4666   005D80                     u4230:
  4667   005D80  0012               	return		;funcret
  4668   005D82                     __end_of_strcpy:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _memcpy *****************
  4672 ;; Defined at:
  4673 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  d1              2    0[COMRAM] PTR void 
  4676 ;;		 -> dbuf(80), 
  4677 ;;  s1              2    2[COMRAM] PTR const void 
  4678 ;;		 -> dbuf(80), 
  4679 ;;  n               2    4[COMRAM] unsigned int 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4682 ;;		 -> dbuf(80), 
  4683 ;;  d               2    6[COMRAM] PTR unsigned char 
  4684 ;;		 -> dbuf(80), 
  4685 ;;  tmp             1   10[COMRAM] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  2    0[COMRAM] PTR void 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4695 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;Total ram usage:       11 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_efgtoa
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text7
  4710   005A7E                     __ptext7:
  4711                           	callstack 0
  4712   005A7E                     _memcpy:
  4713                           	callstack 25
  4714   005A7E  C003  F009         	movff	memcpy@s1,memcpy@s
  4715   005A82  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4716   005A86  C001  F007         	movff	memcpy@d1,memcpy@d
  4717   005A8A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4718   005A8E  EF59  F02D         	goto	l4603
  4719   005A92                     l4595:
  4720   005A92  C009  FFD9         	movff	memcpy@s,fsr2l
  4721   005A96  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4722   005A9A  50DF               	movf	indf2,w,c
  4723   005A9C  6E0B               	movwf	memcpy@tmp^0,c
  4724   005A9E  4A09               	infsnz	memcpy@s^0,f,c
  4725   005AA0  2A0A               	incf	(memcpy@s+1)^0,f,c
  4726   005AA2  C007  FFD9         	movff	memcpy@d,fsr2l
  4727   005AA6  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4728   005AAA  C00B  FFDF         	movff	memcpy@tmp,indf2
  4729   005AAE  4A07               	infsnz	memcpy@d^0,f,c
  4730   005AB0  2A08               	incf	(memcpy@d+1)^0,f,c
  4731   005AB2                     l4603:
  4732   005AB2  0605               	decf	memcpy@n^0,f,c
  4733   005AB4  A0D8               	btfss	status,0,c
  4734   005AB6  0606               	decf	(memcpy@n+1)^0,f,c
  4735   005AB8  2805               	incf	memcpy@n^0,w,c
  4736   005ABA  E106               	bnz	u4351
  4737   005ABC  2806               	incf	(memcpy@n+1)^0,w,c
  4738   005ABE  A4D8               	btfss	status,2,c
  4739   005AC0  EF64  F02D         	goto	u4351
  4740   005AC4  EF66  F02D         	goto	u4350
  4741   005AC8                     u4351:
  4742   005AC8  EF49  F02D         	goto	l4595
  4743   005ACC                     u4350:
  4744   005ACC  0012               	return		;funcret
  4745   005ACE                     __end_of_memcpy:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _labs *****************
  4749 ;; Defined at:
  4750 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  a               4    0[COMRAM] long 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  4    0[COMRAM] long 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;Total ram usage:        8 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_efgtoa
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text8
  4779   00554C                     __ptext8:
  4780                           	callstack 0
  4781   00554C                     _labs:
  4782                           	callstack 25
  4783   00554C  BE04               	btfsc	(labs@a+3)^0,7,c
  4784   00554E  EFB5  F02A         	goto	u4240
  4785   005552  5004               	movf	(labs@a+3)^0,w,c
  4786   005554  1003               	iorwf	(labs@a+2)^0,w,c
  4787   005556  1002               	iorwf	(labs@a+1)^0,w,c
  4788   005558  E106               	bnz	u4241
  4789   00555A  0401               	decf	labs@a^0,w,c
  4790   00555C  B0D8               	btfsc	status,0,c
  4791   00555E  EFB3  F02A         	goto	u4241
  4792   005562  EFB5  F02A         	goto	u4240
  4793   005566                     u4241:
  4794   005566  EFD0  F02A         	goto	l1523
  4795   00556A                     u4240:
  4796   00556A  C001  F005         	movff	labs@a,??_labs
  4797   00556E  C002  F006         	movff	labs@a+1,??_labs+1
  4798   005572  C003  F007         	movff	labs@a+2,??_labs+2
  4799   005576  C004  F008         	movff	labs@a+3,??_labs+3
  4800   00557A  1E05               	comf	??_labs^0,f,c
  4801   00557C  1E06               	comf	(??_labs+1)^0,f,c
  4802   00557E  1E07               	comf	(??_labs+2)^0,f,c
  4803   005580  1E08               	comf	(??_labs+3)^0,f,c
  4804   005582  2A05               	incf	??_labs^0,f,c
  4805   005584  0E00               	movlw	0
  4806   005586  2206               	addwfc	(??_labs+1)^0,f,c
  4807   005588  2207               	addwfc	(??_labs+2)^0,f,c
  4808   00558A  2208               	addwfc	(??_labs+3)^0,f,c
  4809   00558C  C005  F001         	movff	??_labs,?_labs
  4810   005590  C006  F002         	movff	??_labs+1,?_labs+1
  4811   005594  C007  F003         	movff	??_labs+2,?_labs+2
  4812   005598  C008  F004         	movff	??_labs+3,?_labs+3
  4813   00559C  EFD8  F02A         	goto	l1526
  4814   0055A0                     l1523:
  4815   0055A0  C001  F001         	movff	labs@a,?_labs
  4816   0055A4  C002  F002         	movff	labs@a+1,?_labs+1
  4817   0055A8  C003  F003         	movff	labs@a+2,?_labs+2
  4818   0055AC  C004  F004         	movff	labs@a+3,?_labs+3
  4819   0055B0                     l1526:
  4820   0055B0  0012               	return		;funcret
  4821   0055B2                     __end_of_labs:
  4822                           	callstack 0
  4823                           
  4824 ;; *************** function _floorf *****************
  4825 ;; Defined at:
  4826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  x               4   74[COMRAM] float 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  u               4   90[COMRAM] struct .
  4831 ;;  m               4   84[COMRAM] unsigned long 
  4832 ;;  e               2   88[COMRAM] int 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  4   74[COMRAM] float 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;Total ram usage:       20 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_efgtoa
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text9
  4857   00401A                     __ptext9:
  4858                           	callstack 0
  4859   00401A                     _floorf:
  4860                           	callstack 25
  4861   00401A  C0DF  F05B         	movff	floorf@F526,floorf@u
  4862   00401E  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4863   004022  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4864   004026  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4865   00402A  C04B  F05B         	movff	floorf@x,floorf@u
  4866   00402E  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4867   004032  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4868   004036  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4869   00403A  0E81               	movlw	129
  4870   00403C  6E4F               	movwf	??_floorf^0,c
  4871   00403E  0EFF               	movlw	255
  4872   004040  6E50               	movwf	(??_floorf+1)^0,c
  4873   004042  C05B  F051         	movff	floorf@u,??_floorf+2
  4874   004046  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4875   00404A  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4876   00404E  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4877   004052  0E18               	movlw	24
  4878   004054  EF31  F020         	goto	u4250
  4879   004058                     u4255:
  4880   004058  90D8               	bcf	status,0,c
  4881   00405A  3254               	rrcf	(??_floorf+5)^0,f,c
  4882   00405C  3253               	rrcf	(??_floorf+4)^0,f,c
  4883   00405E  3252               	rrcf	(??_floorf+3)^0,f,c
  4884   004060  3251               	rrcf	(??_floorf+2)^0,f,c
  4885   004062                     u4250:
  4886   004062  2EE8               	decfsz	wreg,f,c
  4887   004064  EF2C  F020         	goto	u4255
  4888   004068  5051               	movf	(??_floorf+2)^0,w,c
  4889   00406A  244F               	addwf	??_floorf^0,w,c
  4890   00406C  6E59               	movwf	floorf@e^0,c
  4891   00406E  0E00               	movlw	0
  4892   004070  2050               	addwfc	(??_floorf+1)^0,w,c
  4893   004072  6E5A               	movwf	(floorf@e+1)^0,c
  4894   004074  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4895   004076  EF46  F020         	goto	u4261
  4896   00407A  505A               	movf	(floorf@e+1)^0,w,c
  4897   00407C  E109               	bnz	u4260
  4898   00407E  0E17               	movlw	23
  4899   004080  5C59               	subwf	floorf@e^0,w,c
  4900   004082  A0D8               	btfss	status,0,c
  4901   004084  EF46  F020         	goto	u4261
  4902   004088  EF48  F020         	goto	u4260
  4903   00408C                     u4261:
  4904   00408C  EF52  F020         	goto	l4571
  4905   004090                     u4260:
  4906   004090                     l4569:
  4907   004090  C04B  F04B         	movff	floorf@x,?_floorf
  4908   004094  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4909   004098  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4910   00409C  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4911   0040A0  EF15  F021         	goto	l1512
  4912   0040A4                     l4571:
  4913   0040A4  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4914   0040A6  EF57  F020         	goto	u4271
  4915   0040AA  EF59  F020         	goto	u4270
  4916   0040AE                     u4271:
  4917   0040AE  EFC9  F020         	goto	l4581
  4918   0040B2                     u4270:
  4919   0040B2  C059  F04F         	movff	floorf@e,??_floorf
  4920   0040B6  0EFF               	movlw	255
  4921   0040B8  6E50               	movwf	(??_floorf+1)^0,c
  4922   0040BA  0EFF               	movlw	255
  4923   0040BC  6E51               	movwf	(??_floorf+2)^0,c
  4924   0040BE  0E7F               	movlw	127
  4925   0040C0  6E52               	movwf	(??_floorf+3)^0,c
  4926   0040C2  0E00               	movlw	0
  4927   0040C4  6E53               	movwf	(??_floorf+4)^0,c
  4928   0040C6                     u4285:
  4929   0040C6  664F               	tstfsz	??_floorf^0,c
  4930   0040C8  EF68  F020         	goto	u4286
  4931   0040CC  EF70  F020         	goto	u4287
  4932   0040D0                     u4286:
  4933   0040D0  3453               	rlcf	(??_floorf+4)^0,w,c
  4934   0040D2  3253               	rrcf	(??_floorf+4)^0,f,c
  4935   0040D4  3252               	rrcf	(??_floorf+3)^0,f,c
  4936   0040D6  3251               	rrcf	(??_floorf+2)^0,f,c
  4937   0040D8  3250               	rrcf	(??_floorf+1)^0,f,c
  4938   0040DA  2E4F               	decfsz	??_floorf^0,f,c
  4939   0040DC  EF63  F020         	goto	u4285
  4940   0040E0                     u4287:
  4941   0040E0  C050  F055         	movff	??_floorf+1,floorf@m
  4942   0040E4  C051  F056         	movff	??_floorf+2,floorf@m+1
  4943   0040E8  C052  F057         	movff	??_floorf+3,floorf@m+2
  4944   0040EC  C053  F058         	movff	??_floorf+4,floorf@m+3
  4945   0040F0  5055               	movf	floorf@m^0,w,c
  4946   0040F2  145B               	andwf	floorf@u^0,w,c
  4947   0040F4  6E4F               	movwf	??_floorf^0,c
  4948   0040F6  5056               	movf	(floorf@m+1)^0,w,c
  4949   0040F8  145C               	andwf	(floorf@u+1)^0,w,c
  4950   0040FA  6E50               	movwf	(??_floorf+1)^0,c
  4951   0040FC  5057               	movf	(floorf@m+2)^0,w,c
  4952   0040FE  145D               	andwf	(floorf@u+2)^0,w,c
  4953   004100  6E51               	movwf	(??_floorf+2)^0,c
  4954   004102  5058               	movf	(floorf@m+3)^0,w,c
  4955   004104  145E               	andwf	(floorf@u+3)^0,w,c
  4956   004106  6E52               	movwf	(??_floorf+3)^0,c
  4957   004108  504F               	movf	??_floorf^0,w,c
  4958   00410A  1050               	iorwf	(??_floorf+1)^0,w,c
  4959   00410C  1051               	iorwf	(??_floorf+2)^0,w,c
  4960   00410E  1052               	iorwf	(??_floorf+3)^0,w,c
  4961   004110  A4D8               	btfss	status,2,c
  4962   004112  EF8D  F020         	goto	u4291
  4963   004116  EF8F  F020         	goto	u4290
  4964   00411A                     u4291:
  4965   00411A  EF91  F020         	goto	l4577
  4966   00411E                     u4290:
  4967   00411E  EF48  F020         	goto	l4569
  4968   004122                     l4577:
  4969   004122  C05B  F04F         	movff	floorf@u,??_floorf
  4970   004126  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4971   00412A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4972   00412E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4973   004132  0E20               	movlw	32
  4974   004134  EFA1  F020         	goto	u4300
  4975   004138                     u4305:
  4976   004138  90D8               	bcf	status,0,c
  4977   00413A  3252               	rrcf	(??_floorf+3)^0,f,c
  4978   00413C  3251               	rrcf	(??_floorf+2)^0,f,c
  4979   00413E  3250               	rrcf	(??_floorf+1)^0,f,c
  4980   004140  324F               	rrcf	??_floorf^0,f,c
  4981   004142                     u4300:
  4982   004142  2EE8               	decfsz	wreg,f,c
  4983   004144  EF9C  F020         	goto	u4305
  4984   004148  504F               	movf	??_floorf^0,w,c
  4985   00414A  1050               	iorwf	(??_floorf+1)^0,w,c
  4986   00414C  1051               	iorwf	(??_floorf+2)^0,w,c
  4987   00414E  1052               	iorwf	(??_floorf+3)^0,w,c
  4988   004150  B4D8               	btfsc	status,2,c
  4989   004152  EFAD  F020         	goto	u4311
  4990   004156  EFAF  F020         	goto	u4310
  4991   00415A                     u4311:
  4992   00415A  EFB7  F020         	goto	l1515
  4993   00415E                     u4310:
  4994   00415E  5055               	movf	floorf@m^0,w,c
  4995   004160  265B               	addwf	floorf@u^0,f,c
  4996   004162  5056               	movf	(floorf@m+1)^0,w,c
  4997   004164  225C               	addwfc	(floorf@u+1)^0,f,c
  4998   004166  5057               	movf	(floorf@m+2)^0,w,c
  4999   004168  225D               	addwfc	(floorf@u+2)^0,f,c
  5000   00416A  5058               	movf	(floorf@m+3)^0,w,c
  5001   00416C  225E               	addwfc	(floorf@u+3)^0,f,c
  5002   00416E                     l1515:
  5003   00416E  1C55               	comf	floorf@m^0,w,c
  5004   004170  6E4F               	movwf	??_floorf^0,c
  5005   004172  1C56               	comf	(floorf@m+1)^0,w,c
  5006   004174  6E50               	movwf	(??_floorf+1)^0,c
  5007   004176  1C57               	comf	(floorf@m+2)^0,w,c
  5008   004178  6E51               	movwf	(??_floorf+2)^0,c
  5009   00417A  1C58               	comf	(floorf@m+3)^0,w,c
  5010   00417C  6E52               	movwf	(??_floorf+3)^0,c
  5011   00417E  504F               	movf	??_floorf^0,w,c
  5012   004180  165B               	andwf	floorf@u^0,f,c
  5013   004182  5050               	movf	(??_floorf+1)^0,w,c
  5014   004184  165C               	andwf	(floorf@u+1)^0,f,c
  5015   004186  5051               	movf	(??_floorf+2)^0,w,c
  5016   004188  165D               	andwf	(floorf@u+2)^0,f,c
  5017   00418A  5052               	movf	(??_floorf+3)^0,w,c
  5018   00418C  165E               	andwf	(floorf@u+3)^0,f,c
  5019   00418E  EF0D  F021         	goto	l4589
  5020   004192                     l4581:
  5021   004192  C05B  F04F         	movff	floorf@u,??_floorf
  5022   004196  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5023   00419A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5024   00419E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5025   0041A2  0E20               	movlw	32
  5026   0041A4  EFD9  F020         	goto	u4320
  5027   0041A8                     u4325:
  5028   0041A8  90D8               	bcf	status,0,c
  5029   0041AA  3252               	rrcf	(??_floorf+3)^0,f,c
  5030   0041AC  3251               	rrcf	(??_floorf+2)^0,f,c
  5031   0041AE  3250               	rrcf	(??_floorf+1)^0,f,c
  5032   0041B0  324F               	rrcf	??_floorf^0,f,c
  5033   0041B2                     u4320:
  5034   0041B2  2EE8               	decfsz	wreg,f,c
  5035   0041B4  EFD4  F020         	goto	u4325
  5036   0041B8  504F               	movf	??_floorf^0,w,c
  5037   0041BA  1050               	iorwf	(??_floorf+1)^0,w,c
  5038   0041BC  1051               	iorwf	(??_floorf+2)^0,w,c
  5039   0041BE  1052               	iorwf	(??_floorf+3)^0,w,c
  5040   0041C0  A4D8               	btfss	status,2,c
  5041   0041C2  EFE5  F020         	goto	u4331
  5042   0041C6  EFE7  F020         	goto	u4330
  5043   0041CA                     u4331:
  5044   0041CA  EFF1  F020         	goto	l4585
  5045   0041CE                     u4330:
  5046   0041CE  0E00               	movlw	0
  5047   0041D0  6E5B               	movwf	floorf@u^0,c
  5048   0041D2  0E00               	movlw	0
  5049   0041D4  6E5C               	movwf	(floorf@u+1)^0,c
  5050   0041D6  0E00               	movlw	0
  5051   0041D8  6E5D               	movwf	(floorf@u+2)^0,c
  5052   0041DA  0E00               	movlw	0
  5053   0041DC  6E5E               	movwf	(floorf@u+3)^0,c
  5054   0041DE  EF0D  F021         	goto	l4589
  5055   0041E2                     l4585:
  5056   0041E2  90D8               	bcf	status,0,c
  5057   0041E4  345B               	rlcf	floorf@u^0,w,c
  5058   0041E6  6E4F               	movwf	??_floorf^0,c
  5059   0041E8  345C               	rlcf	(floorf@u+1)^0,w,c
  5060   0041EA  6E50               	movwf	(??_floorf+1)^0,c
  5061   0041EC  345D               	rlcf	(floorf@u+2)^0,w,c
  5062   0041EE  6E51               	movwf	(??_floorf+2)^0,c
  5063   0041F0  345E               	rlcf	(floorf@u+3)^0,w,c
  5064   0041F2  6E52               	movwf	(??_floorf+3)^0,c
  5065   0041F4  504F               	movf	??_floorf^0,w,c
  5066   0041F6  1050               	iorwf	(??_floorf+1)^0,w,c
  5067   0041F8  1051               	iorwf	(??_floorf+2)^0,w,c
  5068   0041FA  1052               	iorwf	(??_floorf+3)^0,w,c
  5069   0041FC  B4D8               	btfsc	status,2,c
  5070   0041FE  EF03  F021         	goto	u4341
  5071   004202  EF05  F021         	goto	u4340
  5072   004206                     u4341:
  5073   004206  EF0D  F021         	goto	l4589
  5074   00420A                     u4340:
  5075   00420A  0E00               	movlw	0
  5076   00420C  6E5B               	movwf	floorf@u^0,c
  5077   00420E  0E00               	movlw	0
  5078   004210  6E5C               	movwf	(floorf@u+1)^0,c
  5079   004212  0E80               	movlw	128
  5080   004214  6E5D               	movwf	(floorf@u+2)^0,c
  5081   004216  0EBF               	movlw	191
  5082   004218  6E5E               	movwf	(floorf@u+3)^0,c
  5083   00421A                     l4589:
  5084   00421A  C05B  F04B         	movff	floorf@u,?_floorf
  5085   00421E  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5086   004222  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5087   004226  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5088   00422A                     l1512:
  5089   00422A  0012               	return		;funcret
  5090   00422C                     __end_of_floorf:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function ___fpclassifyf *****************
  5094 ;; Defined at:
  5095 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  x               4    0[COMRAM] float 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  u               4   10[COMRAM] struct .
  5100 ;;  e               2    8[COMRAM] int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  2    0[COMRAM] int 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;Total ram usage:       14 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_efgtoa
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text10
  5125   004BEE                     __ptext10:
  5126                           	callstack 0
  5127   004BEE                     ___fpclassifyf:
  5128                           	callstack 25
  5129   004BEE  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5130   004BF2  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5131   004BF6  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5132   004BFA  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5133   004BFE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5134   004C02  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5135   004C06  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5136   004C0A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5137   004C0E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5138   004C12  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5139   004C16  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5140   004C1A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5141   004C1E  0E18               	movlw	24
  5142   004C20  EF17  F026         	goto	u4160
  5143   004C24                     u4165:
  5144   004C24  90D8               	bcf	status,0,c
  5145   004C26  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5146   004C28  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5147   004C2A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5148   004C2C  3205               	rrcf	??___fpclassifyf^0,f,c
  5149   004C2E                     u4160:
  5150   004C2E  2EE8               	decfsz	wreg,f,c
  5151   004C30  EF12  F026         	goto	u4165
  5152   004C34  5005               	movf	??___fpclassifyf^0,w,c
  5153   004C36  6E09               	movwf	___fpclassifyf@e^0,c
  5154   004C38  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5155   004C3A  5009               	movf	___fpclassifyf@e^0,w,c
  5156   004C3C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5157   004C3E  A4D8               	btfss	status,2,c
  5158   004C40  EF24  F026         	goto	u4171
  5159   004C44  EF26  F026         	goto	u4170
  5160   004C48                     u4171:
  5161   004C48  EF46  F026         	goto	l4547
  5162   004C4C                     u4170:
  5163   004C4C  90D8               	bcf	status,0,c
  5164   004C4E  340B               	rlcf	___fpclassifyf@u^0,w,c
  5165   004C50  6E05               	movwf	??___fpclassifyf^0,c
  5166   004C52  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5167   004C54  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5168   004C56  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5169   004C58  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5170   004C5A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5171   004C5C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5172   004C5E  5005               	movf	??___fpclassifyf^0,w,c
  5173   004C60  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5174   004C62  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5175   004C64  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5176   004C66  A4D8               	btfss	status,2,c
  5177   004C68  EF38  F026         	goto	u4181
  5178   004C6C  EF3A  F026         	goto	u4180
  5179   004C70                     u4181:
  5180   004C70  EF40  F026         	goto	l4543
  5181   004C74                     u4180:
  5182   004C74  0E00               	movlw	0
  5183   004C76  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5184   004C78  0E02               	movlw	2
  5185   004C7A  6E01               	movwf	?___fpclassifyf^0,c
  5186   004C7C  EF75  F026         	goto	l1498
  5187   004C80                     l4543:
  5188   004C80  0E00               	movlw	0
  5189   004C82  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5190   004C84  0E03               	movlw	3
  5191   004C86  6E01               	movwf	?___fpclassifyf^0,c
  5192   004C88  EF75  F026         	goto	l1498
  5193   004C8C                     l4547:
  5194   004C8C  2809               	incf	___fpclassifyf@e^0,w,c
  5195   004C8E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5196   004C90  A4D8               	btfss	status,2,c
  5197   004C92  EF4D  F026         	goto	u4191
  5198   004C96  EF4F  F026         	goto	u4190
  5199   004C9A                     u4191:
  5200   004C9A  EF71  F026         	goto	l4553
  5201   004C9E                     u4190:
  5202   004C9E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5203   004CA2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5204   004CA6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5205   004CAA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5206   004CAE  0E09               	movlw	9
  5207   004CB0                     u4205:
  5208   004CB0  90D8               	bcf	status,0,c
  5209   004CB2  3605               	rlcf	??___fpclassifyf^0,f,c
  5210   004CB4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5211   004CB6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5212   004CB8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5213   004CBA  2EE8               	decfsz	wreg,f,c
  5214   004CBC  EF58  F026         	goto	u4205
  5215   004CC0  5005               	movf	??___fpclassifyf^0,w,c
  5216   004CC2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5217   004CC4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5218   004CC6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5219   004CC8  B4D8               	btfsc	status,2,c
  5220   004CCA  EF69  F026         	goto	u4211
  5221   004CCE  EF6C  F026         	goto	u4210
  5222   004CD2                     u4211:
  5223   004CD2  0E01               	movlw	1
  5224   004CD4  EF6D  F026         	goto	u4220
  5225   004CD8                     u4210:
  5226   004CD8  0E00               	movlw	0
  5227   004CDA                     u4220:
  5228   004CDA  6E01               	movwf	?___fpclassifyf^0,c
  5229   004CDC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5230   004CDE  EF75  F026         	goto	l1498
  5231   004CE2                     l4553:
  5232   004CE2  0E00               	movlw	0
  5233   004CE4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5234   004CE6  0E04               	movlw	4
  5235   004CE8  6E01               	movwf	?___fpclassifyf^0,c
  5236   004CEA                     l1498:
  5237   004CEA  0012               	return		;funcret
  5238   004CEC                     __end_of___fpclassifyf:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function ___fltol *****************
  5242 ;; Defined at:
  5243 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  f1              4    0[COMRAM] int 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  exp1            1    9[COMRAM] unsigned char 
  5248 ;;  sign1           1    8[COMRAM] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  4    0[COMRAM] long 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;Total ram usage:       10 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_reverseOneBlock
  5269 ;;		_ForwardOneBlock
  5270 ;;		_Forwardhalfblock
  5271 ;;		_efgtoa
  5272 ;;		_Backhalfblock
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text11
  5277   0049E4                     __ptext11:
  5278                           	callstack 0
  5279   0049E4                     ___fltol:
  5280                           	callstack 25
  5281   0049E4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5282   0049E6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5283   0049E8  6E0A               	movwf	___fltol@exp1^0,c
  5284   0049EA  500A               	movf	___fltol@exp1^0,w,c
  5285   0049EC  A4D8               	btfss	status,2,c
  5286   0049EE  EFFB  F024         	goto	u4061
  5287   0049F2  EFFD  F024         	goto	u4060
  5288   0049F6                     u4061:
  5289   0049F6  EF07  F025         	goto	l4479
  5290   0049FA                     u4060:
  5291   0049FA                     l4475:
  5292   0049FA  0E00               	movlw	0
  5293   0049FC  6E01               	movwf	?___fltol^0,c
  5294   0049FE  0E00               	movlw	0
  5295   004A00  6E02               	movwf	(?___fltol+1)^0,c
  5296   004A02  0E00               	movlw	0
  5297   004A04  6E03               	movwf	(?___fltol+2)^0,c
  5298   004A06  0E00               	movlw	0
  5299   004A08  6E04               	movwf	(?___fltol+3)^0,c
  5300   004A0A  EF74  F025         	goto	l971
  5301   004A0E                     l4479:
  5302   004A0E  C001  F005         	movff	___fltol@f1,??___fltol
  5303   004A12  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5304   004A16  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5305   004A1A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5306   004A1E  0E20               	movlw	32
  5307   004A20  EF17  F025         	goto	u4070
  5308   004A24                     u4075:
  5309   004A24  90D8               	bcf	status,0,c
  5310   004A26  3208               	rrcf	(??___fltol+3)^0,f,c
  5311   004A28  3207               	rrcf	(??___fltol+2)^0,f,c
  5312   004A2A  3206               	rrcf	(??___fltol+1)^0,f,c
  5313   004A2C  3205               	rrcf	??___fltol^0,f,c
  5314   004A2E                     u4070:
  5315   004A2E  2EE8               	decfsz	wreg,f,c
  5316   004A30  EF12  F025         	goto	u4075
  5317   004A34  5005               	movf	??___fltol^0,w,c
  5318   004A36  6E09               	movwf	___fltol@sign1^0,c
  5319   004A38  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5320   004A3A  0EFF               	movlw	255
  5321   004A3C  1601               	andwf	___fltol@f1^0,f,c
  5322   004A3E  0EFF               	movlw	255
  5323   004A40  1602               	andwf	(___fltol@f1+1)^0,f,c
  5324   004A42  0EFF               	movlw	255
  5325   004A44  1603               	andwf	(___fltol@f1+2)^0,f,c
  5326   004A46  0E00               	movlw	0
  5327   004A48  1604               	andwf	(___fltol@f1+3)^0,f,c
  5328   004A4A  0E96               	movlw	150
  5329   004A4C  5E0A               	subwf	___fltol@exp1^0,f,c
  5330   004A4E  BE0A               	btfsc	___fltol@exp1^0,7,c
  5331   004A50  EF2E  F025         	goto	u4080
  5332   004A54  EF2C  F025         	goto	u4081
  5333   004A58                     u4081:
  5334   004A58  EF44  F025         	goto	l4499
  5335   004A5C                     u4080:
  5336   004A5C  500A               	movf	___fltol@exp1^0,w,c
  5337   004A5E  0A80               	xorlw	128
  5338   004A60  0F97               	addlw	151
  5339   004A62  B0D8               	btfsc	status,0,c
  5340   004A64  EF36  F025         	goto	u4091
  5341   004A68  EF38  F025         	goto	u4090
  5342   004A6C                     u4091:
  5343   004A6C  EF3A  F025         	goto	l4495
  5344   004A70                     u4090:
  5345   004A70  EFFD  F024         	goto	l4475
  5346   004A74                     l4495:
  5347   004A74  90D8               	bcf	status,0,c
  5348   004A76  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5349   004A78  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5350   004A7A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5351   004A7C  3201               	rrcf	___fltol@f1^0,f,c
  5352   004A7E  3E0A               	incfsz	___fltol@exp1^0,f,c
  5353   004A80  EF3A  F025         	goto	l4495
  5354   004A84  EF5C  F025         	goto	l4509
  5355   004A88                     l4499:
  5356   004A88  0E1F               	movlw	31
  5357   004A8A  640A               	cpfsgt	___fltol@exp1^0,c
  5358   004A8C  EF4A  F025         	goto	u4101
  5359   004A90  EF4C  F025         	goto	u4100
  5360   004A94                     u4101:
  5361   004A94  EF54  F025         	goto	l4507
  5362   004A98                     u4100:
  5363   004A98  EFFD  F024         	goto	l4475
  5364   004A9C                     l4505:
  5365   004A9C  90D8               	bcf	status,0,c
  5366   004A9E  3601               	rlcf	___fltol@f1^0,f,c
  5367   004AA0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5368   004AA2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5369   004AA4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5370   004AA6  060A               	decf	___fltol@exp1^0,f,c
  5371   004AA8                     l4507:
  5372   004AA8  500A               	movf	___fltol@exp1^0,w,c
  5373   004AAA  A4D8               	btfss	status,2,c
  5374   004AAC  EF5A  F025         	goto	u4111
  5375   004AB0  EF5C  F025         	goto	u4110
  5376   004AB4                     u4111:
  5377   004AB4  EF4E  F025         	goto	l4505
  5378   004AB8                     u4110:
  5379   004AB8                     l4509:
  5380   004AB8  5009               	movf	___fltol@sign1^0,w,c
  5381   004ABA  B4D8               	btfsc	status,2,c
  5382   004ABC  EF62  F025         	goto	u4121
  5383   004AC0  EF64  F025         	goto	u4120
  5384   004AC4                     u4121:
  5385   004AC4  EF6C  F025         	goto	l4513
  5386   004AC8                     u4120:
  5387   004AC8  1E04               	comf	(___fltol@f1+3)^0,f,c
  5388   004ACA  1E03               	comf	(___fltol@f1+2)^0,f,c
  5389   004ACC  1E02               	comf	(___fltol@f1+1)^0,f,c
  5390   004ACE  6C01               	negf	___fltol@f1^0,c
  5391   004AD0  0E00               	movlw	0
  5392   004AD2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5393   004AD4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5394   004AD6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5395   004AD8                     l4513:
  5396   004AD8  C001  F001         	movff	___fltol@f1,?___fltol
  5397   004ADC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5398   004AE0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5399   004AE4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5400   004AE8                     l971:
  5401   004AE8  0012               	return		;funcret
  5402   004AEA                     __end_of___fltol:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function ___flneg *****************
  5406 ;; Defined at:
  5407 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  f1              4    0[COMRAM] long 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  4    0[COMRAM] long 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;Total ram usage:        4 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_efgtoa
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text12
  5436   005EC4                     __ptext12:
  5437                           	callstack 0
  5438   005EC4                     ___flneg:
  5439                           	callstack 25
  5440   005EC4  5001               	movf	___flneg@f1^0,w,c
  5441   005EC6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5442   005EC8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5443   005ECA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5444   005ECC  B4D8               	btfsc	status,2,c
  5445   005ECE  EF6B  F02F         	goto	u4051
  5446   005ED2  EF6D  F02F         	goto	u4050
  5447   005ED6                     u4051:
  5448   005ED6  EF75  F02F         	goto	l4469
  5449   005EDA                     u4050:
  5450   005EDA  0E00               	movlw	0
  5451   005EDC  1A01               	xorwf	___flneg@f1^0,f,c
  5452   005EDE  0E00               	movlw	0
  5453   005EE0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5454   005EE2  0E00               	movlw	0
  5455   005EE4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5456   005EE6  0E80               	movlw	128
  5457   005EE8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5458   005EEA                     l4469:
  5459   005EEA  C001  F001         	movff	___flneg@f1,?___flneg
  5460   005EEE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5461   005EF2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5462   005EF6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5463   005EFA  0012               	return		;funcret
  5464   005EFC                     __end_of___flneg:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _dtoa *****************
  5468 ;; Defined at:
  5469 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5472 ;;		 -> sprintf@f(11), 
  5473 ;;  d               8   29[COMRAM] long long 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  n               8   51[COMRAM] long long 
  5476 ;;  i               2   59[COMRAM] int 
  5477 ;;  w               2   49[COMRAM] int 
  5478 ;;  p               2   47[COMRAM] int 
  5479 ;;  s               1   61[COMRAM] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:       35 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 5
  5496 ;; This function calls:
  5497 ;;		___aodiv
  5498 ;;		___aomod
  5499 ;;		_abs
  5500 ;;		_pad
  5501 ;; This function is called by:
  5502 ;;		_vfpfcnvrt
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text13
  5507   003D9C                     __ptext13:
  5508                           	callstack 0
  5509   003D9C                     _dtoa:
  5510                           	callstack 22
  5511   003D9C                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5513   003D9C  C01E  F034         	movff	dtoa@d,dtoa@n
  5514   003DA0  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5515   003DA4  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5516   003DA8  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5517   003DAC  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5518   003DB0  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5519   003DB4  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5520   003DB8  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5521   003DBC                     
  5522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5523   003DBC  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5524   003DBE  EFE3  F01E         	goto	u4491
  5525   003DC2  EFE6  F01E         	goto	u4490
  5526   003DC6                     u4491:
  5527   003DC6  0E01               	movlw	1
  5528   003DC8  EFE7  F01E         	goto	u4500
  5529   003DCC                     u4490:
  5530   003DCC  0E00               	movlw	0
  5531   003DCE                     u4500:
  5532   003DCE  6E3E               	movwf	dtoa@s^0,c
  5533   003DD0                     
  5534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5535   003DD0  503E               	movf	dtoa@s^0,w,c
  5536   003DD2  B4D8               	btfsc	status,2,c
  5537   003DD4  EFEE  F01E         	goto	u4511
  5538   003DD8  EFF0  F01E         	goto	u4510
  5539   003DDC                     u4511:
  5540   003DDC  EF00  F01F         	goto	l4693
  5541   003DE0                     u4510:
  5542   003DE0                     
  5543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5544   003DE0  1E3B               	comf	(dtoa@n+7)^0,f,c
  5545   003DE2  1E3A               	comf	(dtoa@n+6)^0,f,c
  5546   003DE4  1E39               	comf	(dtoa@n+5)^0,f,c
  5547   003DE6  1E38               	comf	(dtoa@n+4)^0,f,c
  5548   003DE8  1E37               	comf	(dtoa@n+3)^0,f,c
  5549   003DEA  1E36               	comf	(dtoa@n+2)^0,f,c
  5550   003DEC  1E35               	comf	(dtoa@n+1)^0,f,c
  5551   003DEE  6C34               	negf	dtoa@n^0,c
  5552   003DF0  0E00               	movlw	0
  5553   003DF2  2235               	addwfc	(dtoa@n+1)^0,f,c
  5554   003DF4  2236               	addwfc	(dtoa@n+2)^0,f,c
  5555   003DF6  2237               	addwfc	(dtoa@n+3)^0,f,c
  5556   003DF8  2238               	addwfc	(dtoa@n+4)^0,f,c
  5557   003DFA  2239               	addwfc	(dtoa@n+5)^0,f,c
  5558   003DFC  223A               	addwfc	(dtoa@n+6)^0,f,c
  5559   003DFE  223B               	addwfc	(dtoa@n+7)^0,f,c
  5560   003E00                     l4693:
  5561                           
  5562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5563   003E00  0100               	movlb	0	; () banked
  5564   003E02  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5565   003E04  EF0E  F01F         	goto	u4520
  5566   003E08  51EA               	movf	(_prec+1)& (0+255),w,b
  5567   003E0A  E106               	bnz	u4521
  5568   003E0C  05E9               	decf	_prec& (0+255),w,b
  5569   003E0E  B0D8               	btfsc	status,0,c
  5570   003E10  EF0C  F01F         	goto	u4521
  5571   003E14  EF0E  F01F         	goto	u4520
  5572   003E18                     u4521:
  5573   003E18  EF14  F01F         	goto	l1393
  5574   003E1C                     u4520:
  5575   003E1C                     
  5576                           ; BSR set to: 0
  5577   003E1C  0E00               	movlw	0
  5578   003E1E  6E31               	movwf	(dtoa@p+1)^0,c
  5579   003E20  0E01               	movlw	1
  5580   003E22  6E30               	movwf	dtoa@p^0,c
  5581   003E24  EF18  F01F         	goto	l1395
  5582   003E28                     l1393:
  5583                           
  5584                           ; BSR set to: 0
  5585   003E28  C0E9  F030         	movff	_prec,dtoa@p
  5586   003E2C  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5587   003E30                     l1395:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5591   003E30  C0E7  F032         	movff	_width,dtoa@w
  5592   003E34  C0E8  F033         	movff	_width+1,dtoa@w+1
  5593   003E38                     
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5596   003E38  503E               	movf	dtoa@s^0,w,c
  5597   003E3A  B4D8               	btfsc	status,2,c
  5598   003E3C  EF22  F01F         	goto	u4531
  5599   003E40  EF24  F01F         	goto	u4530
  5600   003E44                     u4531:
  5601   003E44  EF3B  F01F         	goto	l1396
  5602   003E48                     u4530:
  5603   003E48                     
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5606   003E48  0632               	decf	dtoa@w^0,f,c
  5607   003E4A  A0D8               	btfss	status,0,c
  5608   003E4C  0633               	decf	(dtoa@w+1)^0,f,c
  5609   003E4E                     
  5610                           ; BSR set to: 0
  5611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5612   003E4E  503E               	movf	dtoa@s^0,w,c
  5613   003E50  A4D8               	btfss	status,2,c
  5614   003E52  EF2D  F01F         	goto	u4541
  5615   003E56  EF2F  F01F         	goto	u4540
  5616   003E5A                     u4541:
  5617   003E5A  EF35  F01F         	goto	l4705
  5618   003E5E                     u4540:
  5619   003E5E                     
  5620                           ; BSR set to: 0
  5621   003E5E  0E00               	movlw	0
  5622   003E60  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5623   003E62  0E2B               	movlw	43
  5624   003E64  6E2E               	movwf	_dtoa$2821^0,c
  5625   003E66  EF39  F01F         	goto	l4707
  5626   003E6A                     l4705:
  5627                           
  5628                           ; BSR set to: 0
  5629   003E6A  0E00               	movlw	0
  5630   003E6C  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5631   003E6E  0E2D               	movlw	45
  5632   003E70  6E2E               	movwf	_dtoa$2821^0,c
  5633   003E72                     l4707:
  5634                           
  5635                           ; BSR set to: 0
  5636   003E72  C02E  F03E         	movff	_dtoa$2821,dtoa@s
  5637   003E76                     l1396:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5641   003E76  0E00               	movlw	0
  5642   003E78  6E3D               	movwf	(dtoa@i+1)^0,c
  5643   003E7A  0E4F               	movlw	79
  5644   003E7C  6E3C               	movwf	dtoa@i^0,c
  5645   003E7E                     
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5648   003E7E  0E00               	movlw	0
  5649   003E80  0102               	movlb	2	; () banked
  5650   003E82  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5651                           
  5652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5653   003E84  EFC0  F01F         	goto	l4721
  5654   003E88                     l4711:
  5655                           
  5656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5657   003E88  063C               	decf	dtoa@i^0,f,c
  5658   003E8A  A0D8               	btfss	status,0,c
  5659   003E8C  063D               	decf	(dtoa@i+1)^0,f,c
  5660   003E8E                     
  5661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5662   003E8E  0EA0               	movlw	low _dbuf
  5663   003E90  243C               	addwf	dtoa@i^0,w,c
  5664   003E92  6ED9               	movwf	fsr2l,c
  5665   003E94  0E02               	movlw	high _dbuf
  5666   003E96  203D               	addwfc	(dtoa@i+1)^0,w,c
  5667   003E98  6EDA               	movwf	fsr2h,c
  5668   003E9A  C034  F001         	movff	dtoa@n,___aomod@dividend
  5669   003E9E  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5670   003EA2  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5671   003EA6  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5672   003EAA  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5673   003EAE  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5674   003EB2  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5675   003EB6  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5676   003EBA  0E0A               	movlw	10
  5677   003EBC  6E09               	movwf	___aomod@divisor^0,c
  5678   003EBE  0E00               	movlw	0
  5679   003EC0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5680   003EC2  0E00               	movlw	0
  5681   003EC4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5682   003EC6  0E00               	movlw	0
  5683   003EC8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5684   003ECA  0E00               	movlw	0
  5685   003ECC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5686   003ECE  0E00               	movlw	0
  5687   003ED0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5688   003ED2  0E00               	movlw	0
  5689   003ED4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5690   003ED6  0E00               	movlw	0
  5691   003ED8  6E10               	movwf	(___aomod@divisor+7)^0,c
  5692   003EDA  EC40  F024         	call	___aomod	;wreg free
  5693   003EDE  C001  F026         	movff	?___aomod,??_dtoa
  5694   003EE2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5695   003EE6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5696   003EEA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5697   003EEE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5698   003EF2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5699   003EF6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5700   003EFA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5701   003EFE  C026  F013         	movff	??_dtoa,abs@a
  5702   003F02  C027  F014         	movff	??_dtoa+1,abs@a+1
  5703   003F06  EC04  F02F         	call	_abs	;wreg free
  5704   003F0A  5013               	movf	?_abs^0,w,c
  5705   003F0C  0F30               	addlw	48
  5706   003F0E  6EDF               	movwf	indf2,c
  5707   003F10                     
  5708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5709   003F10  0630               	decf	dtoa@p^0,f,c
  5710   003F12  A0D8               	btfss	status,0,c
  5711   003F14  0631               	decf	(dtoa@p+1)^0,f,c
  5712   003F16                     
  5713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5714   003F16  0632               	decf	dtoa@w^0,f,c
  5715   003F18  A0D8               	btfss	status,0,c
  5716   003F1A  0633               	decf	(dtoa@w+1)^0,f,c
  5717   003F1C                     
  5718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5719   003F1C  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5720   003F20  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5721   003F24  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5722   003F28  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5723   003F2C  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5724   003F30  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5725   003F34  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5726   003F38  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5727   003F3C  0E0A               	movlw	10
  5728   003F3E  6E09               	movwf	___aodiv@divisor^0,c
  5729   003F40  0E00               	movlw	0
  5730   003F42  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5731   003F44  0E00               	movlw	0
  5732   003F46  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5733   003F48  0E00               	movlw	0
  5734   003F4A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5735   003F4C  0E00               	movlw	0
  5736   003F4E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5737   003F50  0E00               	movlw	0
  5738   003F52  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5739   003F54  0E00               	movlw	0
  5740   003F56  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5741   003F58  0E00               	movlw	0
  5742   003F5A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5743   003F5C  ECC6  F022         	call	___aodiv	;wreg free
  5744   003F60  C001  F034         	movff	?___aodiv,dtoa@n
  5745   003F64  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5746   003F68  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5747   003F6C  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5748   003F70  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5749   003F74  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5750   003F78  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5751   003F7C  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5752   003F80                     l4721:
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5755   003F80  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5756   003F82  EFCB  F01F         	goto	u4551
  5757   003F86  503D               	movf	(dtoa@i+1)^0,w,c
  5758   003F88  E108               	bnz	u4550
  5759   003F8A  043C               	decf	dtoa@i^0,w,c
  5760   003F8C  A0D8               	btfss	status,0,c
  5761   003F8E  EFCB  F01F         	goto	u4551
  5762   003F92  EFCD  F01F         	goto	u4550
  5763   003F96                     u4551:
  5764   003F96  EFE9  F01F         	goto	l4727
  5765   003F9A                     u4550:
  5766   003F9A  5034               	movf	dtoa@n^0,w,c
  5767   003F9C  1035               	iorwf	(dtoa@n+1)^0,w,c
  5768   003F9E  1036               	iorwf	(dtoa@n+2)^0,w,c
  5769   003FA0  1037               	iorwf	(dtoa@n+3)^0,w,c
  5770   003FA2  1038               	iorwf	(dtoa@n+4)^0,w,c
  5771   003FA4  1039               	iorwf	(dtoa@n+5)^0,w,c
  5772   003FA6  103A               	iorwf	(dtoa@n+6)^0,w,c
  5773   003FA8  103B               	iorwf	(dtoa@n+7)^0,w,c
  5774   003FAA  A4D8               	btfss	status,2,c
  5775   003FAC  EFDA  F01F         	goto	u4561
  5776   003FB0  EFDC  F01F         	goto	u4560
  5777   003FB4                     u4561:
  5778   003FB4  EF44  F01F         	goto	l4711
  5779   003FB8                     u4560:
  5780   003FB8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5781   003FBA  EFE9  F01F         	goto	u4570
  5782   003FBE  5031               	movf	(dtoa@p+1)^0,w,c
  5783   003FC0  E106               	bnz	u4571
  5784   003FC2  0430               	decf	dtoa@p^0,w,c
  5785   003FC4  B0D8               	btfsc	status,0,c
  5786   003FC6  EFE7  F01F         	goto	u4571
  5787   003FCA  EFE9  F01F         	goto	u4570
  5788   003FCE                     u4571:
  5789   003FCE  EF44  F01F         	goto	l4711
  5790   003FD2                     u4570:
  5791   003FD2                     l4727:
  5792                           
  5793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5794   003FD2  503E               	movf	dtoa@s^0,w,c
  5795   003FD4  B4D8               	btfsc	status,2,c
  5796   003FD6  EFEF  F01F         	goto	u4581
  5797   003FDA  EFF1  F01F         	goto	u4580
  5798   003FDE                     u4581:
  5799   003FDE  EFFC  F01F         	goto	l4733
  5800   003FE2                     u4580:
  5801   003FE2                     
  5802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5803   003FE2  063C               	decf	dtoa@i^0,f,c
  5804   003FE4  A0D8               	btfss	status,0,c
  5805   003FE6  063D               	decf	(dtoa@i+1)^0,f,c
  5806   003FE8                     
  5807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5808   003FE8  0EA0               	movlw	low _dbuf
  5809   003FEA  243C               	addwf	dtoa@i^0,w,c
  5810   003FEC  6ED9               	movwf	fsr2l,c
  5811   003FEE  0E02               	movlw	high _dbuf
  5812   003FF0  203D               	addwfc	(dtoa@i+1)^0,w,c
  5813   003FF2  6EDA               	movwf	fsr2h,c
  5814   003FF4  C03E  FFDF         	movff	dtoa@s,indf2
  5815   003FF8                     l4733:
  5816                           
  5817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5818   003FF8  C01C  F011         	movff	dtoa@fp,pad@fp
  5819   003FFC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5820   004000  0EA0               	movlw	low _dbuf
  5821   004002  243C               	addwf	dtoa@i^0,w,c
  5822   004004  6E13               	movwf	pad@buf^0,c
  5823   004006  0E02               	movlw	high _dbuf
  5824   004008  203D               	addwfc	(dtoa@i+1)^0,w,c
  5825   00400A  6E14               	movwf	(pad@buf+1)^0,c
  5826   00400C  C032  F015         	movff	dtoa@w,pad@p
  5827   004010  C033  F016         	movff	dtoa@w+1,pad@p+1
  5828   004014  ECFA  F029         	call	_pad	;wreg free
  5829   004018  0012               	return		;funcret
  5830   00401A                     __end_of_dtoa:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _pad *****************
  5834 ;; Defined at:
  5835 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5838 ;;		 -> sprintf@f(11), 
  5839 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5840 ;;		 -> dbuf(80), 
  5841 ;;  p               2   20[COMRAM] int 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  w               2   25[COMRAM] int 
  5844 ;;  i               2   23[COMRAM] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5854 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;Total ram usage:       11 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 4
  5861 ;; This function calls:
  5862 ;;		_fputc
  5863 ;;		_fputs
  5864 ;; This function is called by:
  5865 ;;		_dtoa
  5866 ;;		_efgtoa
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text14
  5871   0053F4                     __ptext14:
  5872                           	callstack 0
  5873   0053F4                     _pad:
  5874                           	callstack 22
  5875   0053F4                     
  5876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5877   0053F4  BE16               	btfsc	(pad@p+1)^0,7,c
  5878   0053F6  EFFF  F029         	goto	u4131
  5879   0053FA  EF01  F02A         	goto	u4130
  5880   0053FE                     u4131:
  5881   0053FE  EF07  F02A         	goto	l4521
  5882   005402                     u4130:
  5883   005402  C015  F01A         	movff	pad@p,pad@w
  5884   005406  C016  F01B         	movff	pad@p+1,pad@w+1
  5885   00540A  EF0B  F02A         	goto	l1384
  5886   00540E                     l4521:
  5887   00540E  0E00               	movlw	0
  5888   005410  6E1B               	movwf	(pad@w+1)^0,c
  5889   005412  0E00               	movlw	0
  5890   005414  6E1A               	movwf	pad@w^0,c
  5891   005416                     l1384:
  5892                           
  5893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5894   005416  0E00               	movlw	0
  5895   005418  6E19               	movwf	(pad@i+1)^0,c
  5896   00541A  0E00               	movlw	0
  5897   00541C  6E18               	movwf	pad@i^0,c
  5898                           
  5899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5900   00541E  EF1D  F02A         	goto	l4527
  5901   005422                     l4523:
  5902                           
  5903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5904   005422  0E00               	movlw	0
  5905   005424  6E02               	movwf	(fputc@c+1)^0,c
  5906   005426  0E20               	movlw	32
  5907   005428  6E01               	movwf	fputc@c^0,c
  5908   00542A  C011  F003         	movff	pad@fp,fputc@fp
  5909   00542E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5910   005432  EC76  F026         	call	_fputc	;wreg free
  5911   005436                     
  5912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5913   005436  4A18               	infsnz	pad@i^0,f,c
  5914   005438  2A19               	incf	(pad@i+1)^0,f,c
  5915   00543A                     l4527:
  5916                           
  5917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5918   00543A  501A               	movf	pad@w^0,w,c
  5919   00543C  5C18               	subwf	pad@i^0,w,c
  5920   00543E  5019               	movf	(pad@i+1)^0,w,c
  5921   005440  0A80               	xorlw	128
  5922   005442  6E17               	movwf	??_pad^0,c
  5923   005444  501B               	movf	(pad@w+1)^0,w,c
  5924   005446  0A80               	xorlw	128
  5925   005448  5817               	subwfb	??_pad^0,w,c
  5926   00544A  A0D8               	btfss	status,0,c
  5927   00544C  EF2A  F02A         	goto	u4141
  5928   005450  EF2C  F02A         	goto	u4140
  5929   005454                     u4141:
  5930   005454  EF11  F02A         	goto	l4523
  5931   005458                     u4140:
  5932   005458                     
  5933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5934   005458  C013  F00A         	movff	pad@buf,fputs@s
  5935   00545C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5936   005460  C011  F00C         	movff	pad@fp,fputs@fp
  5937   005464  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5938   005468  ECC1  F02E         	call	_fputs	;wreg free
  5939   00546C  0012               	return		;funcret
  5940   00546E                     __end_of_pad:
  5941                           	callstack 0
  5942                           
  5943 ;; *************** function _fputs *****************
  5944 ;; Defined at:
  5945 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5948 ;;		 -> dbuf(80), 
  5949 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5950 ;;		 -> sprintf@f(11), 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  i               2   14[COMRAM] int 
  5953 ;;  c               1   13[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  2    9[COMRAM] int 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;Total ram usage:        7 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 3
  5970 ;; This function calls:
  5971 ;;		_fputc
  5972 ;; This function is called by:
  5973 ;;		_pad
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text15
  5978   005D82                     __ptext15:
  5979                           	callstack 0
  5980   005D82                     _fputs:
  5981                           	callstack 22
  5982   005D82  0E00               	movlw	0
  5983   005D84  6E10               	movwf	(fputs@i+1)^0,c
  5984   005D86  0E00               	movlw	0
  5985   005D88  6E0F               	movwf	fputs@i^0,c
  5986   005D8A  EFD2  F02E         	goto	l4055
  5987   005D8E                     l4051:
  5988   005D8E  C00E  F001         	movff	fputs@c,fputc@c
  5989   005D92  6A02               	clrf	(fputc@c+1)^0,c
  5990   005D94  C00C  F003         	movff	fputs@fp,fputc@fp
  5991   005D98  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5992   005D9C  EC76  F026         	call	_fputc	;wreg free
  5993   005DA0  4A0F               	infsnz	fputs@i^0,f,c
  5994   005DA2  2A10               	incf	(fputs@i+1)^0,f,c
  5995   005DA4                     l4055:
  5996   005DA4  500F               	movf	fputs@i^0,w,c
  5997   005DA6  240A               	addwf	fputs@s^0,w,c
  5998   005DA8  6ED9               	movwf	fsr2l,c
  5999   005DAA  5010               	movf	(fputs@i+1)^0,w,c
  6000   005DAC  200B               	addwfc	(fputs@s+1)^0,w,c
  6001   005DAE  6EDA               	movwf	fsr2h,c
  6002   005DB0  50DF               	movf	indf2,w,c
  6003   005DB2  6E0E               	movwf	fputs@c^0,c
  6004   005DB4  500E               	movf	fputs@c^0,w,c
  6005   005DB6  A4D8               	btfss	status,2,c
  6006   005DB8  EFE0  F02E         	goto	u3391
  6007   005DBC  EFE2  F02E         	goto	u3390
  6008   005DC0                     u3391:
  6009   005DC0  EFC7  F02E         	goto	l4051
  6010   005DC4                     u3390:
  6011   005DC4  0012               	return		;funcret
  6012   005DC6                     __end_of_fputs:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function _fputc *****************
  6016 ;; Defined at:
  6017 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  c               2    0[COMRAM] int 
  6020 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6021 ;;		 -> sprintf@f(11), 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2    0[COMRAM] int 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;Total ram usage:        9 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 2
  6040 ;; This function calls:
  6041 ;;		_putch
  6042 ;; This function is called by:
  6043 ;;		_pad
  6044 ;;		_vfpfcnvrt
  6045 ;;		_fputs
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text16
  6050   004CEC                     __ptext16:
  6051                           	callstack 0
  6052   004CEC                     _fputc:
  6053                           	callstack 25
  6054   004CEC  5003               	movf	fputc@fp^0,w,c
  6055   004CEE  1004               	iorwf	(fputc@fp+1)^0,w,c
  6056   004CF0  B4D8               	btfsc	status,2,c
  6057   004CF2  EF7D  F026         	goto	u2931
  6058   004CF6  EF7F  F026         	goto	u2930
  6059   004CFA                     u2931:
  6060   004CFA  EF88  F026         	goto	l3809
  6061   004CFE                     u2930:
  6062   004CFE  5003               	movf	fputc@fp^0,w,c
  6063   004D00  1004               	iorwf	(fputc@fp+1)^0,w,c
  6064   004D02  A4D8               	btfss	status,2,c
  6065   004D04  EF86  F026         	goto	u2941
  6066   004D08  EF88  F026         	goto	u2940
  6067   004D0C                     u2941:
  6068   004D0C  EF8D  F026         	goto	l3811
  6069   004D10                     u2940:
  6070   004D10                     l3809:
  6071   004D10  5001               	movf	fputc@c^0,w,c
  6072   004D12  EC62  F030         	call	_putch
  6073   004D16  EFDA  F026         	goto	l1544
  6074   004D1A                     l3811:
  6075   004D1A  EE20 F009          	lfsr	2,9
  6076   004D1E  5003               	movf	fputc@fp^0,w,c
  6077   004D20  26D9               	addwf	fsr2l,f,c
  6078   004D22  5004               	movf	(fputc@fp+1)^0,w,c
  6079   004D24  22DA               	addwfc	fsr2h,f,c
  6080   004D26  50DE               	movf	postinc2,w,c
  6081   004D28  10DE               	iorwf	postinc2,w,c
  6082   004D2A  B4D8               	btfsc	status,2,c
  6083   004D2C  EF9A  F026         	goto	u2951
  6084   004D30  EF9C  F026         	goto	u2950
  6085   004D34                     u2951:
  6086   004D34  EFB7  F026         	goto	l3815
  6087   004D38                     u2950:
  6088   004D38  EE20 F009          	lfsr	2,9
  6089   004D3C  5003               	movf	fputc@fp^0,w,c
  6090   004D3E  26D9               	addwf	fsr2l,f,c
  6091   004D40  5004               	movf	(fputc@fp+1)^0,w,c
  6092   004D42  22DA               	addwfc	fsr2h,f,c
  6093   004D44  EE10 F003          	lfsr	1,3
  6094   004D48  5003               	movf	fputc@fp^0,w,c
  6095   004D4A  26E1               	addwf	fsr1l,f,c
  6096   004D4C  5004               	movf	(fputc@fp+1)^0,w,c
  6097   004D4E  22E2               	addwfc	fsr1h,f,c
  6098   004D50  50DE               	movf	postinc2,w,c
  6099   004D52  5CE6               	subwf	postinc1,w,c
  6100   004D54  50E6               	movf	postinc1,w,c
  6101   004D56  0A80               	xorlw	128
  6102   004D58  6E09               	movwf	(??_fputc+4)^0,c
  6103   004D5A  50DE               	movf	postinc2,w,c
  6104   004D5C  0A80               	xorlw	128
  6105   004D5E  5809               	subwfb	(??_fputc+4)^0,w,c
  6106   004D60  B0D8               	btfsc	status,0,c
  6107   004D62  EFB5  F026         	goto	u2961
  6108   004D66  EFB7  F026         	goto	u2960
  6109   004D6A                     u2961:
  6110   004D6A  EFDA  F026         	goto	l1544
  6111   004D6E                     u2960:
  6112   004D6E                     l3815:
  6113   004D6E  EE20 F003          	lfsr	2,3
  6114   004D72  5003               	movf	fputc@fp^0,w,c
  6115   004D74  26D9               	addwf	fsr2l,f,c
  6116   004D76  5004               	movf	(fputc@fp+1)^0,w,c
  6117   004D78  22DA               	addwfc	fsr2h,f,c
  6118   004D7A  CFDE F005          	movff	postinc2,??_fputc
  6119   004D7E  CFDD F006          	movff	postdec2,??_fputc+1
  6120   004D82  C003  FFD9         	movff	fputc@fp,fsr2l
  6121   004D86  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6122   004D8A  CFDE F007          	movff	postinc2,??_fputc+2
  6123   004D8E  CFDD F008          	movff	postdec2,??_fputc+3
  6124   004D92  5005               	movf	??_fputc^0,w,c
  6125   004D94  2407               	addwf	(??_fputc+2)^0,w,c
  6126   004D96  6ED9               	movwf	fsr2l,c
  6127   004D98  5006               	movf	(??_fputc+1)^0,w,c
  6128   004D9A  2008               	addwfc	(??_fputc+3)^0,w,c
  6129   004D9C  6EDA               	movwf	fsr2h,c
  6130   004D9E  C001  FFDF         	movff	fputc@c,indf2
  6131   004DA2  EE20 F003          	lfsr	2,3
  6132   004DA6  5003               	movf	fputc@fp^0,w,c
  6133   004DA8  26D9               	addwf	fsr2l,f,c
  6134   004DAA  5004               	movf	(fputc@fp+1)^0,w,c
  6135   004DAC  22DA               	addwfc	fsr2h,f,c
  6136   004DAE  2ADE               	incf	postinc2,f,c
  6137   004DB0  0E00               	movlw	0
  6138   004DB2  22DD               	addwfc	postdec2,f,c
  6139   004DB4                     l1544:
  6140   004DB4  0012               	return		;funcret
  6141   004DB6                     __end_of_fputc:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _putch *****************
  6145 ;; Defined at:
  6146 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  c               1    wreg     unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  c               1    0[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 1
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_fputc
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text17
  6175   0060C4                     __ptext17:
  6176                           	callstack 0
  6177   0060C4                     _putch:
  6178                           	callstack 25
  6179   0060C4  0012               	return		;funcret
  6180   0060C6                     __end_of_putch:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function _abs *****************
  6184 ;; Defined at:
  6185 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  a               2   18[COMRAM] int 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  2   18[COMRAM] int 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;Total ram usage:        4 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_dtoa
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text18
  6214   005E08                     __ptext18:
  6215                           	callstack 0
  6216   005E08                     _abs:
  6217                           	callstack 25
  6218   005E08  BE14               	btfsc	(abs@a+1)^0,7,c
  6219   005E0A  EF11  F02F         	goto	u4150
  6220   005E0E  5014               	movf	(abs@a+1)^0,w,c
  6221   005E10  E106               	bnz	u4151
  6222   005E12  0413               	decf	abs@a^0,w,c
  6223   005E14  B0D8               	btfsc	status,0,c
  6224   005E16  EF0F  F02F         	goto	u4151
  6225   005E1A  EF11  F02F         	goto	u4150
  6226   005E1E                     u4151:
  6227   005E1E  EF1F  F02F         	goto	l1503
  6228   005E22                     u4150:
  6229   005E22  C013  F015         	movff	abs@a,??_abs
  6230   005E26  C014  F016         	movff	abs@a+1,??_abs+1
  6231   005E2A  1E15               	comf	??_abs^0,f,c
  6232   005E2C  1E16               	comf	(??_abs+1)^0,f,c
  6233   005E2E  4A15               	infsnz	??_abs^0,f,c
  6234   005E30  2A16               	incf	(??_abs+1)^0,f,c
  6235   005E32  C015  F013         	movff	??_abs,?_abs
  6236   005E36  C016  F014         	movff	??_abs+1,?_abs+1
  6237   005E3A  EF23  F02F         	goto	l1506
  6238   005E3E                     l1503:
  6239   005E3E  C013  F013         	movff	abs@a,?_abs
  6240   005E42  C014  F014         	movff	abs@a+1,?_abs+1
  6241   005E46                     l1506:
  6242   005E46  0012               	return		;funcret
  6243   005E48                     __end_of_abs:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function ___aomod *****************
  6247 ;; Defined at:
  6248 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  dividend        8    0[COMRAM] long long 
  6251 ;;  divisor         8    8[COMRAM] long long 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  sign            1   17[COMRAM] unsigned char 
  6254 ;;  counter         1   16[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  8    0[COMRAM] long long 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6264 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;Total ram usage:       18 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_dtoa
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text19
  6279   004880                     __ptext19:
  6280                           	callstack 0
  6281   004880                     ___aomod:
  6282                           	callstack 25
  6283   004880  0E00               	movlw	0
  6284   004882  6E12               	movwf	___aomod@sign^0,c
  6285   004884  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6286   004886  EF49  F024         	goto	u3490
  6287   00488A  EF47  F024         	goto	u3491
  6288   00488E                     u3491:
  6289   00488E  EF5B  F024         	goto	l4125
  6290   004892                     u3490:
  6291   004892  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6292   004894  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6293   004896  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6294   004898  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6295   00489A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6296   00489C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6297   00489E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6298   0048A0  6C01               	negf	___aomod@dividend^0,c
  6299   0048A2  0E00               	movlw	0
  6300   0048A4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6301   0048A6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6302   0048A8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6303   0048AA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6304   0048AC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6305   0048AE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6306   0048B0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6307   0048B2  0E01               	movlw	1
  6308   0048B4  6E12               	movwf	___aomod@sign^0,c
  6309   0048B6                     l4125:
  6310   0048B6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6311   0048B8  EF62  F024         	goto	u3500
  6312   0048BC  EF60  F024         	goto	u3501
  6313   0048C0                     u3501:
  6314   0048C0  EF72  F024         	goto	l4129
  6315   0048C4                     u3500:
  6316   0048C4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6317   0048C6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6318   0048C8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6319   0048CA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6320   0048CC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6321   0048CE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6322   0048D0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6323   0048D2  6C09               	negf	___aomod@divisor^0,c
  6324   0048D4  0E00               	movlw	0
  6325   0048D6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6326   0048D8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6327   0048DA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6328   0048DC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6329   0048DE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6330   0048E0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6331   0048E2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6332   0048E4                     l4129:
  6333   0048E4  5009               	movf	___aomod@divisor^0,w,c
  6334   0048E6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6335   0048E8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6336   0048EA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6337   0048EC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6338   0048EE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6339   0048F0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6340   0048F2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6341   0048F4  B4D8               	btfsc	status,2,c
  6342   0048F6  EF7F  F024         	goto	u3511
  6343   0048FA  EF81  F024         	goto	u3510
  6344   0048FE                     u3511:
  6345   0048FE  EFC9  F024         	goto	l4145
  6346   004902                     u3510:
  6347   004902  0E01               	movlw	1
  6348   004904  6E11               	movwf	___aomod@counter^0,c
  6349   004906  EF8F  F024         	goto	l4135
  6350   00490A                     l4133:
  6351   00490A  90D8               	bcf	status,0,c
  6352   00490C  3609               	rlcf	___aomod@divisor^0,f,c
  6353   00490E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6354   004910  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6355   004912  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6356   004914  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6357   004916  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6358   004918  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6359   00491A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6360   00491C  2A11               	incf	___aomod@counter^0,f,c
  6361   00491E                     l4135:
  6362   00491E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6363   004920  EF94  F024         	goto	u3521
  6364   004924  EF96  F024         	goto	u3520
  6365   004928                     u3521:
  6366   004928  EF85  F024         	goto	l4133
  6367   00492C                     u3520:
  6368   00492C                     l4137:
  6369   00492C  5009               	movf	___aomod@divisor^0,w,c
  6370   00492E  5C01               	subwf	___aomod@dividend^0,w,c
  6371   004930  500A               	movf	(___aomod@divisor+1)^0,w,c
  6372   004932  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6373   004934  500B               	movf	(___aomod@divisor+2)^0,w,c
  6374   004936  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6375   004938  500C               	movf	(___aomod@divisor+3)^0,w,c
  6376   00493A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6377   00493C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6378   00493E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6379   004940  500E               	movf	(___aomod@divisor+5)^0,w,c
  6380   004942  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6381   004944  500F               	movf	(___aomod@divisor+6)^0,w,c
  6382   004946  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6383   004948  5010               	movf	(___aomod@divisor+7)^0,w,c
  6384   00494A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6385   00494C  A0D8               	btfss	status,0,c
  6386   00494E  EFAB  F024         	goto	u3531
  6387   004952  EFAD  F024         	goto	u3530
  6388   004956                     u3531:
  6389   004956  EFBD  F024         	goto	l4141
  6390   00495A                     u3530:
  6391   00495A  5009               	movf	___aomod@divisor^0,w,c
  6392   00495C  5E01               	subwf	___aomod@dividend^0,f,c
  6393   00495E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6394   004960  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6395   004962  500B               	movf	(___aomod@divisor+2)^0,w,c
  6396   004964  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6397   004966  500C               	movf	(___aomod@divisor+3)^0,w,c
  6398   004968  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6399   00496A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6400   00496C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6401   00496E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6402   004970  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6403   004972  500F               	movf	(___aomod@divisor+6)^0,w,c
  6404   004974  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6405   004976  5010               	movf	(___aomod@divisor+7)^0,w,c
  6406   004978  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6407   00497A                     l4141:
  6408   00497A  90D8               	bcf	status,0,c
  6409   00497C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6410   00497E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6411   004980  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6412   004982  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6413   004984  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6414   004986  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6415   004988  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6416   00498A  3209               	rrcf	___aomod@divisor^0,f,c
  6417   00498C  2E11               	decfsz	___aomod@counter^0,f,c
  6418   00498E  EF96  F024         	goto	l4137
  6419   004992                     l4145:
  6420   004992  5012               	movf	___aomod@sign^0,w,c
  6421   004994  B4D8               	btfsc	status,2,c
  6422   004996  EFCF  F024         	goto	u3541
  6423   00499A  EFD1  F024         	goto	u3540
  6424   00499E                     u3541:
  6425   00499E  EFE1  F024         	goto	l4149
  6426   0049A2                     u3540:
  6427   0049A2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6428   0049A4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6429   0049A6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6430   0049A8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6431   0049AA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6432   0049AC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6433   0049AE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6434   0049B0  6C01               	negf	___aomod@dividend^0,c
  6435   0049B2  0E00               	movlw	0
  6436   0049B4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6437   0049B6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6438   0049B8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6439   0049BA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6440   0049BC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6441   0049BE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6442   0049C0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6443   0049C2                     l4149:
  6444   0049C2  C001  F001         	movff	___aomod@dividend,?___aomod
  6445   0049C6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6446   0049CA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6447   0049CE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6448   0049D2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6449   0049D6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6450   0049DA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6451   0049DE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6452   0049E2  0012               	return		;funcret
  6453   0049E4                     __end_of___aomod:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function ___aodiv *****************
  6457 ;; Defined at:
  6458 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  dividend        8    0[COMRAM] long long 
  6461 ;;  divisor         8    8[COMRAM] long long 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  quotient        8   18[COMRAM] long long 
  6464 ;;  sign            1   17[COMRAM] unsigned char 
  6465 ;;  counter         1   16[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  8    0[COMRAM] long long 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6475 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;Total ram usage:       26 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 1
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_dtoa
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text20
  6490   00458C                     __ptext20:
  6491                           	callstack 0
  6492   00458C                     ___aodiv:
  6493                           	callstack 25
  6494   00458C  0E00               	movlw	0
  6495   00458E  6E12               	movwf	___aodiv@sign^0,c
  6496   004590  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6497   004592  EFCF  F022         	goto	u3420
  6498   004596  EFCD  F022         	goto	u3421
  6499   00459A                     u3421:
  6500   00459A  EFE1  F022         	goto	l4081
  6501   00459E                     u3420:
  6502   00459E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6503   0045A0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6504   0045A2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6505   0045A4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6506   0045A6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6507   0045A8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6508   0045AA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6509   0045AC  6C09               	negf	___aodiv@divisor^0,c
  6510   0045AE  0E00               	movlw	0
  6511   0045B0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6512   0045B2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6513   0045B4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6514   0045B6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6515   0045B8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6516   0045BA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6517   0045BC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6518   0045BE  0E01               	movlw	1
  6519   0045C0  6E12               	movwf	___aodiv@sign^0,c
  6520   0045C2                     l4081:
  6521   0045C2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6522   0045C4  EFE8  F022         	goto	u3430
  6523   0045C8  EFE6  F022         	goto	u3431
  6524   0045CC                     u3431:
  6525   0045CC  EFFA  F022         	goto	l4087
  6526   0045D0                     u3430:
  6527   0045D0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6528   0045D2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6529   0045D4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6530   0045D6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6531   0045D8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6532   0045DA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6533   0045DC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6534   0045DE  6C01               	negf	___aodiv@dividend^0,c
  6535   0045E0  0E00               	movlw	0
  6536   0045E2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6537   0045E4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6538   0045E6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6539   0045E8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6540   0045EA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6541   0045EC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6542   0045EE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6543   0045F0  0E01               	movlw	1
  6544   0045F2  1A12               	xorwf	___aodiv@sign^0,f,c
  6545   0045F4                     l4087:
  6546   0045F4  EE20  F013         	lfsr	2,___aodiv@quotient
  6547   0045F8  0E07               	movlw	7
  6548   0045FA                     u3441:
  6549   0045FA  6ADE               	clrf	postinc2,c
  6550   0045FC  06E8               	decf	wreg,f,c
  6551   0045FE  E2FD               	bc	u3441
  6552   004600  5009               	movf	___aodiv@divisor^0,w,c
  6553   004602  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6554   004604  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6555   004606  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6556   004608  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6557   00460A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6558   00460C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6559   00460E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6560   004610  B4D8               	btfsc	status,2,c
  6561   004612  EF0D  F023         	goto	u3451
  6562   004616  EF0F  F023         	goto	u3450
  6563   00461A                     u3451:
  6564   00461A  EF61  F023         	goto	l4109
  6565   00461E                     u3450:
  6566   00461E  0E01               	movlw	1
  6567   004620  6E11               	movwf	___aodiv@counter^0,c
  6568   004622  EF1D  F023         	goto	l4095
  6569   004626                     l4093:
  6570   004626  90D8               	bcf	status,0,c
  6571   004628  3609               	rlcf	___aodiv@divisor^0,f,c
  6572   00462A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6573   00462C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6574   00462E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6575   004630  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6576   004632  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6577   004634  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6578   004636  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6579   004638  2A11               	incf	___aodiv@counter^0,f,c
  6580   00463A                     l4095:
  6581   00463A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6582   00463C  EF22  F023         	goto	u3461
  6583   004640  EF24  F023         	goto	u3460
  6584   004644                     u3461:
  6585   004644  EF13  F023         	goto	l4093
  6586   004648                     u3460:
  6587   004648                     l4097:
  6588   004648  90D8               	bcf	status,0,c
  6589   00464A  3613               	rlcf	___aodiv@quotient^0,f,c
  6590   00464C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6591   00464E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6592   004650  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6593   004652  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6594   004654  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6595   004656  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6596   004658  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6597   00465A  5009               	movf	___aodiv@divisor^0,w,c
  6598   00465C  5C01               	subwf	___aodiv@dividend^0,w,c
  6599   00465E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6600   004660  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6601   004662  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6602   004664  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6603   004666  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6604   004668  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6605   00466A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6606   00466C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6607   00466E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6608   004670  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6609   004672  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6610   004674  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6611   004676  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6612   004678  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6613   00467A  A0D8               	btfss	status,0,c
  6614   00467C  EF42  F023         	goto	u3471
  6615   004680  EF44  F023         	goto	u3470
  6616   004684                     u3471:
  6617   004684  EF55  F023         	goto	l4105
  6618   004688                     u3470:
  6619   004688  5009               	movf	___aodiv@divisor^0,w,c
  6620   00468A  5E01               	subwf	___aodiv@dividend^0,f,c
  6621   00468C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6622   00468E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6623   004690  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6624   004692  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6625   004694  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6626   004696  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6627   004698  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6628   00469A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6629   00469C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6630   00469E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6631   0046A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6632   0046A2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6633   0046A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6634   0046A6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6635   0046A8  8013               	bsf	___aodiv@quotient^0,0,c
  6636   0046AA                     l4105:
  6637   0046AA  90D8               	bcf	status,0,c
  6638   0046AC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6639   0046AE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6640   0046B0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6641   0046B2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6642   0046B4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6643   0046B6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6644   0046B8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6645   0046BA  3209               	rrcf	___aodiv@divisor^0,f,c
  6646   0046BC  2E11               	decfsz	___aodiv@counter^0,f,c
  6647   0046BE  EF24  F023         	goto	l4097
  6648   0046C2                     l4109:
  6649   0046C2  5012               	movf	___aodiv@sign^0,w,c
  6650   0046C4  B4D8               	btfsc	status,2,c
  6651   0046C6  EF67  F023         	goto	u3481
  6652   0046CA  EF69  F023         	goto	u3480
  6653   0046CE                     u3481:
  6654   0046CE  EF79  F023         	goto	l4113
  6655   0046D2                     u3480:
  6656   0046D2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6657   0046D4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6658   0046D6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6659   0046D8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6660   0046DA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6661   0046DC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6662   0046DE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6663   0046E0  6C13               	negf	___aodiv@quotient^0,c
  6664   0046E2  0E00               	movlw	0
  6665   0046E4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6666   0046E6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6667   0046E8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6668   0046EA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6669   0046EC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6670   0046EE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6671   0046F0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6672   0046F2                     l4113:
  6673   0046F2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6674   0046F6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6675   0046FA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6676   0046FE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6677   004702  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6678   004706  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6679   00470A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6680   00470E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6681   004712  0012               	return		;funcret
  6682   004714                     __end_of___aodiv:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function _sendStringSerial4 *****************
  6686 ;; Defined at:
  6687 ;;		line 33 in file "serial.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  string          2    1[COMRAM] PTR unsigned char 
  6690 ;;		 -> main@buf(100), 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;Total ram usage:        2 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 2
  6709 ;; This function calls:
  6710 ;;		_sendCharSerial4
  6711 ;; This function is called by:
  6712 ;;		_main
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text21
  6717   005F6A                     __ptext21:
  6718                           	callstack 0
  6719   005F6A                     _sendStringSerial4:
  6720                           	callstack 28
  6721   005F6A                     
  6722                           ;serial.c: 34:     while (*string!=0){
  6723   005F6A  EFC0  F02F         	goto	l5471
  6724   005F6E                     l5467:
  6725                           
  6726                           ;serial.c: 35:         sendCharSerial4(*string++);
  6727   005F6E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6728   005F72  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6729   005F76  50DF               	movf	indf2,w,c
  6730   005F78  EC38  F030         	call	_sendCharSerial4
  6731   005F7C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6732   005F7E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6733   005F80                     l5471:
  6734                           
  6735                           ;serial.c: 34:     while (*string!=0){
  6736   005F80  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6737   005F84  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6738   005F88  50DF               	movf	indf2,w,c
  6739   005F8A  A4D8               	btfss	status,2,c
  6740   005F8C  EFCA  F02F         	goto	u5431
  6741   005F90  EFCC  F02F         	goto	u5430
  6742   005F94                     u5431:
  6743   005F94  EFB7  F02F         	goto	l5467
  6744   005F98                     u5430:
  6745   005F98  0012               	return		;funcret
  6746   005F9A                     __end_of_sendStringSerial4:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function _sendCharSerial4 *****************
  6750 ;; Defined at:
  6751 ;;		line 26 in file "serial.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  charToSend      1    wreg     unsigned char 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  charToSend      1    0[COMRAM] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;Total ram usage:        1 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_sendStringSerial4
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text22
  6780   006070                     __ptext22:
  6781                           	callstack 0
  6782   006070                     _sendCharSerial4:
  6783                           	callstack 28
  6784                           
  6785                           ;incstack = 0
  6786                           ;sendCharSerial4@charToSend stored from wreg
  6787   006070  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6788   006072                     l195:
  6789   006072  010E               	movlb	14	; () banked
  6790   006074  A537               	btfss	55,2,b	;volatile
  6791   006076  EF3F  F030         	goto	u4981
  6792   00607A  EF41  F030         	goto	u4980
  6793   00607E                     u4981:
  6794   00607E  EF39  F030         	goto	l195
  6795   006082                     u4980:
  6796   006082                     
  6797                           ; BSR set to: 14
  6798                           ;serial.c: 28:     TX4REG = charToSend;
  6799   006082  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6800   006086                     
  6801                           ; BSR set to: 14
  6802   006086  0012               	return		;funcret
  6803   006088                     __end_of_sendCharSerial4:
  6804                           	callstack 0
  6805                           
  6806 ;; *************** function _readColours *****************
  6807 ;; Defined at:
  6808 ;;		line 105 in file "color.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  vals            2   11[COMRAM] PTR struct RGB
  6811 ;;		 -> vals(8), 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;Total ram usage:        2 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 4
  6830 ;; This function calls:
  6831 ;;		_color_read_Blue
  6832 ;;		_color_read_Green
  6833 ;;		_color_read_Red
  6834 ;;		_color_read_lum
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text23
  6841   00567A                     __ptext23:
  6842                           	callstack 0
  6843   00567A                     _readColours:
  6844                           	callstack 26
  6845   00567A                     
  6846                           ;color.c: 107:     vals ->R = color_read_Red();
  6847   00567A  EC8F  F02D         	call	_color_read_Red	;wreg free
  6848   00567E  C00C  FFD9         	movff	readColours@vals,fsr2l
  6849   005682  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6850   005686  C005  FFDE         	movff	?_color_read_Red,postinc2
  6851   00568A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6852                           
  6853                           ;color.c: 108:     vals ->B = color_read_Blue();
  6854   00568E  ECDF  F02D         	call	_color_read_Blue	;wreg free
  6855   005692  EE20 F004          	lfsr	2,4
  6856   005696  500C               	movf	readColours@vals^0,w,c
  6857   005698  26D9               	addwf	fsr2l,f,c
  6858   00569A  500D               	movf	(readColours@vals+1)^0,w,c
  6859   00569C  22DA               	addwfc	fsr2h,f,c
  6860   00569E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6861   0056A2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6862                           
  6863                           ;color.c: 109:     vals ->G = color_read_Green();
  6864   0056A6  ECB7  F02D         	call	_color_read_Green	;wreg free
  6865   0056AA  EE20 F002          	lfsr	2,2
  6866   0056AE  500C               	movf	readColours@vals^0,w,c
  6867   0056B0  26D9               	addwf	fsr2l,f,c
  6868   0056B2  500D               	movf	(readColours@vals+1)^0,w,c
  6869   0056B4  22DA               	addwfc	fsr2h,f,c
  6870   0056B6  C005  FFDE         	movff	?_color_read_Green,postinc2
  6871   0056BA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6872                           
  6873                           ;color.c: 110:     vals ->L = color_read_lum();
  6874   0056BE  EC67  F02D         	call	_color_read_lum	;wreg free
  6875   0056C2  EE20 F006          	lfsr	2,6
  6876   0056C6  500C               	movf	readColours@vals^0,w,c
  6877   0056C8  26D9               	addwf	fsr2l,f,c
  6878   0056CA  500D               	movf	(readColours@vals+1)^0,w,c
  6879   0056CC  22DA               	addwfc	fsr2h,f,c
  6880   0056CE  C005  FFDE         	movff	?_color_read_lum,postinc2
  6881   0056D2  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6882   0056D6  0012               	return		;funcret
  6883   0056D8                     __end_of_readColours:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _color_read_lum *****************
  6887 ;; Defined at:
  6888 ;;		line 49 in file "color.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  tmp             2    9[COMRAM] unsigned int 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  2    4[COMRAM] unsigned int 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;Total ram usage:        7 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 3
  6909 ;; This function calls:
  6910 ;;		_I2C_2_Master_Read
  6911 ;;		_I2C_2_Master_RepStart
  6912 ;;		_I2C_2_Master_Start
  6913 ;;		_I2C_2_Master_Stop
  6914 ;;		_I2C_2_Master_Write
  6915 ;; This function is called by:
  6916 ;;		_readColours
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text24
  6921   005ACE                     __ptext24:
  6922                           	callstack 0
  6923   005ACE                     _color_read_lum:
  6924                           	callstack 26
  6925   005ACE                     
  6926                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6927   005ACE  EC5A  F030         	call	_I2C_2_Master_Start	;wreg free
  6928                           
  6929                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6930   005AD2  0E52               	movlw	82
  6931   005AD4  EC44  F030         	call	_I2C_2_Master_Write
  6932                           
  6933                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6934   005AD8  0EB4               	movlw	180
  6935   005ADA  EC44  F030         	call	_I2C_2_Master_Write
  6936                           
  6937                           ;color.c: 55:  I2C_2_Master_RepStart();
  6938   005ADE  EC50  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6939                           
  6940                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6941   005AE2  0E53               	movlw	83
  6942   005AE4  EC44  F030         	call	_I2C_2_Master_Write
  6943                           
  6944                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6945   005AE8  0E01               	movlw	1
  6946   005AEA  ECE3  F02E         	call	_I2C_2_Master_Read
  6947   005AEE  6E07               	movwf	??_color_read_lum^0,c
  6948   005AF0  5007               	movf	??_color_read_lum^0,w,c
  6949   005AF2  6E0A               	movwf	color_read_lum@tmp^0,c
  6950   005AF4  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6951                           
  6952                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6953   005AF6  0E00               	movlw	0
  6954   005AF8  ECE3  F02E         	call	_I2C_2_Master_Read
  6955   005AFC  6E07               	movwf	??_color_read_lum^0,c
  6956   005AFE  5007               	movf	??_color_read_lum^0,w,c
  6957   005B00  6E09               	movwf	(??_color_read_lum+2)^0,c
  6958   005B02  6A08               	clrf	(??_color_read_lum+1)^0,c
  6959   005B04  500A               	movf	color_read_lum@tmp^0,w,c
  6960   005B06  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6961   005B08  6E0A               	movwf	color_read_lum@tmp^0,c
  6962   005B0A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6963   005B0C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6964   005B0E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6965                           
  6966                           ;color.c: 59:  I2C_2_Master_Stop();
  6967   005B10  EC55  F030         	call	_I2C_2_Master_Stop	;wreg free
  6968   005B14                     
  6969                           ;color.c: 60:  return tmp;
  6970   005B14  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6971   005B18  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6972   005B1C  0012               	return		;funcret
  6973   005B1E                     __end_of_color_read_lum:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _color_read_Red *****************
  6977 ;; Defined at:
  6978 ;;		line 63 in file "color.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  tmp             2    9[COMRAM] unsigned int 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  2    4[COMRAM] unsigned int 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;Total ram usage:        7 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 3
  6999 ;; This function calls:
  7000 ;;		_I2C_2_Master_Read
  7001 ;;		_I2C_2_Master_RepStart
  7002 ;;		_I2C_2_Master_Start
  7003 ;;		_I2C_2_Master_Stop
  7004 ;;		_I2C_2_Master_Write
  7005 ;; This function is called by:
  7006 ;;		_readColours
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text25
  7011   005B1E                     __ptext25:
  7012                           	callstack 0
  7013   005B1E                     _color_read_Red:
  7014                           	callstack 26
  7015   005B1E                     
  7016                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7017   005B1E  EC5A  F030         	call	_I2C_2_Master_Start	;wreg free
  7018                           
  7019                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7020   005B22  0E52               	movlw	82
  7021   005B24  EC44  F030         	call	_I2C_2_Master_Write
  7022                           
  7023                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7024   005B28  0EB6               	movlw	182
  7025   005B2A  EC44  F030         	call	_I2C_2_Master_Write
  7026                           
  7027                           ;color.c: 69:  I2C_2_Master_RepStart();
  7028   005B2E  EC50  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7029                           
  7030                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7031   005B32  0E53               	movlw	83
  7032   005B34  EC44  F030         	call	_I2C_2_Master_Write
  7033                           
  7034                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7035   005B38  0E01               	movlw	1
  7036   005B3A  ECE3  F02E         	call	_I2C_2_Master_Read
  7037   005B3E  6E07               	movwf	??_color_read_Red^0,c
  7038   005B40  5007               	movf	??_color_read_Red^0,w,c
  7039   005B42  6E0A               	movwf	color_read_Red@tmp^0,c
  7040   005B44  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7041                           
  7042                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7043   005B46  0E00               	movlw	0
  7044   005B48  ECE3  F02E         	call	_I2C_2_Master_Read
  7045   005B4C  6E07               	movwf	??_color_read_Red^0,c
  7046   005B4E  5007               	movf	??_color_read_Red^0,w,c
  7047   005B50  6E09               	movwf	(??_color_read_Red+2)^0,c
  7048   005B52  6A08               	clrf	(??_color_read_Red+1)^0,c
  7049   005B54  500A               	movf	color_read_Red@tmp^0,w,c
  7050   005B56  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7051   005B58  6E0A               	movwf	color_read_Red@tmp^0,c
  7052   005B5A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7053   005B5C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7054   005B5E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7055                           
  7056                           ;color.c: 73:  I2C_2_Master_Stop();
  7057   005B60  EC55  F030         	call	_I2C_2_Master_Stop	;wreg free
  7058   005B64                     
  7059                           ;color.c: 74:  return tmp;
  7060   005B64  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7061   005B68  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7062   005B6C  0012               	return		;funcret
  7063   005B6E                     __end_of_color_read_Red:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _color_read_Green *****************
  7067 ;; Defined at:
  7068 ;;		line 76 in file "color.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  tmp             2    9[COMRAM] unsigned int 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2    4[COMRAM] unsigned int 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;Total ram usage:        7 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 3
  7089 ;; This function calls:
  7090 ;;		_I2C_2_Master_Read
  7091 ;;		_I2C_2_Master_RepStart
  7092 ;;		_I2C_2_Master_Start
  7093 ;;		_I2C_2_Master_Stop
  7094 ;;		_I2C_2_Master_Write
  7095 ;; This function is called by:
  7096 ;;		_readColours
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text26
  7101   005B6E                     __ptext26:
  7102                           	callstack 0
  7103   005B6E                     _color_read_Green:
  7104                           	callstack 26
  7105   005B6E                     
  7106                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7107   005B6E  EC5A  F030         	call	_I2C_2_Master_Start	;wreg free
  7108                           
  7109                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7110   005B72  0E52               	movlw	82
  7111   005B74  EC44  F030         	call	_I2C_2_Master_Write
  7112                           
  7113                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7114   005B78  0EB8               	movlw	184
  7115   005B7A  EC44  F030         	call	_I2C_2_Master_Write
  7116                           
  7117                           ;color.c: 82:  I2C_2_Master_RepStart();
  7118   005B7E  EC50  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7119                           
  7120                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7121   005B82  0E53               	movlw	83
  7122   005B84  EC44  F030         	call	_I2C_2_Master_Write
  7123                           
  7124                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7125   005B88  0E01               	movlw	1
  7126   005B8A  ECE3  F02E         	call	_I2C_2_Master_Read
  7127   005B8E  6E07               	movwf	??_color_read_Green^0,c
  7128   005B90  5007               	movf	??_color_read_Green^0,w,c
  7129   005B92  6E0A               	movwf	color_read_Green@tmp^0,c
  7130   005B94  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7131                           
  7132                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7133   005B96  0E00               	movlw	0
  7134   005B98  ECE3  F02E         	call	_I2C_2_Master_Read
  7135   005B9C  6E07               	movwf	??_color_read_Green^0,c
  7136   005B9E  5007               	movf	??_color_read_Green^0,w,c
  7137   005BA0  6E09               	movwf	(??_color_read_Green+2)^0,c
  7138   005BA2  6A08               	clrf	(??_color_read_Green+1)^0,c
  7139   005BA4  500A               	movf	color_read_Green@tmp^0,w,c
  7140   005BA6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7141   005BA8  6E0A               	movwf	color_read_Green@tmp^0,c
  7142   005BAA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7143   005BAC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7144   005BAE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7145                           
  7146                           ;color.c: 86:  I2C_2_Master_Stop();
  7147   005BB0  EC55  F030         	call	_I2C_2_Master_Stop	;wreg free
  7148   005BB4                     
  7149                           ;color.c: 87:  return tmp;
  7150   005BB4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7151   005BB8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7152   005BBC  0012               	return		;funcret
  7153   005BBE                     __end_of_color_read_Green:
  7154                           	callstack 0
  7155                           
  7156 ;; *************** function _color_read_Blue *****************
  7157 ;; Defined at:
  7158 ;;		line 90 in file "color.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;		None
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  tmp             2    9[COMRAM] unsigned int 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2    4[COMRAM] unsigned int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;Total ram usage:        7 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 3
  7179 ;; This function calls:
  7180 ;;		_I2C_2_Master_Read
  7181 ;;		_I2C_2_Master_RepStart
  7182 ;;		_I2C_2_Master_Start
  7183 ;;		_I2C_2_Master_Stop
  7184 ;;		_I2C_2_Master_Write
  7185 ;; This function is called by:
  7186 ;;		_readColours
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text27
  7191   005BBE                     __ptext27:
  7192                           	callstack 0
  7193   005BBE                     _color_read_Blue:
  7194                           	callstack 26
  7195   005BBE                     
  7196                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7197   005BBE  EC5A  F030         	call	_I2C_2_Master_Start	;wreg free
  7198                           
  7199                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7200   005BC2  0E52               	movlw	82
  7201   005BC4  EC44  F030         	call	_I2C_2_Master_Write
  7202                           
  7203                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7204   005BC8  0EBA               	movlw	186
  7205   005BCA  EC44  F030         	call	_I2C_2_Master_Write
  7206                           
  7207                           ;color.c: 96:  I2C_2_Master_RepStart();
  7208   005BCE  EC50  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7209                           
  7210                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7211   005BD2  0E53               	movlw	83
  7212   005BD4  EC44  F030         	call	_I2C_2_Master_Write
  7213                           
  7214                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7215   005BD8  0E01               	movlw	1
  7216   005BDA  ECE3  F02E         	call	_I2C_2_Master_Read
  7217   005BDE  6E07               	movwf	??_color_read_Blue^0,c
  7218   005BE0  5007               	movf	??_color_read_Blue^0,w,c
  7219   005BE2  6E0A               	movwf	color_read_Blue@tmp^0,c
  7220   005BE4  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7221                           
  7222                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7223   005BE6  0E00               	movlw	0
  7224   005BE8  ECE3  F02E         	call	_I2C_2_Master_Read
  7225   005BEC  6E07               	movwf	??_color_read_Blue^0,c
  7226   005BEE  5007               	movf	??_color_read_Blue^0,w,c
  7227   005BF0  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7228   005BF2  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7229   005BF4  500A               	movf	color_read_Blue@tmp^0,w,c
  7230   005BF6  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7231   005BF8  6E0A               	movwf	color_read_Blue@tmp^0,c
  7232   005BFA  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7233   005BFC  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7234   005BFE  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7235                           
  7236                           ;color.c: 100:  I2C_2_Master_Stop();
  7237   005C00  EC55  F030         	call	_I2C_2_Master_Stop	;wreg free
  7238   005C04                     
  7239                           ;color.c: 101:  return tmp;
  7240   005C04  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7241   005C08  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7242   005C0C  0012               	return		;funcret
  7243   005C0E                     __end_of_color_read_Blue:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _I2C_2_Master_RepStart *****************
  7247 ;; Defined at:
  7248 ;;		line 33 in file "i2c.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 2
  7269 ;; This function calls:
  7270 ;;		_I2C_2_Master_Idle
  7271 ;; This function is called by:
  7272 ;;		_color_read_lum
  7273 ;;		_color_read_Red
  7274 ;;		_color_read_Green
  7275 ;;		_color_read_Blue
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text28
  7280   0060A0                     __ptext28:
  7281                           	callstack 0
  7282   0060A0                     _I2C_2_Master_RepStart:
  7283                           	callstack 26
  7284   0060A0                     
  7285                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7286   0060A0  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7287   0060A4                     
  7288                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7289   0060A4  010E               	movlb	14	; () banked
  7290   0060A6  83DA               	bsf	218,1,b	;volatile
  7291   0060A8                     
  7292                           ; BSR set to: 14
  7293   0060A8  0012               	return		;funcret
  7294   0060AA                     __end_of_I2C_2_Master_RepStart:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _I2C_2_Master_Read *****************
  7298 ;; Defined at:
  7299 ;;		line 51 in file "i2c.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  ack             1    wreg     unsigned char 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  ack             1    2[COMRAM] unsigned char 
  7304 ;;  tmp             1    3[COMRAM] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      unsigned char 
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;Total ram usage:        3 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 2
  7321 ;; This function calls:
  7322 ;;		_I2C_2_Master_Idle
  7323 ;; This function is called by:
  7324 ;;		_color_read_lum
  7325 ;;		_color_read_Red
  7326 ;;		_color_read_Green
  7327 ;;		_color_read_Blue
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text29
  7332   005DC6                     __ptext29:
  7333                           	callstack 0
  7334   005DC6                     _I2C_2_Master_Read:
  7335                           	callstack 26
  7336                           
  7337                           ; BSR set to: 14
  7338                           ;incstack = 0
  7339                           ;I2C_2_Master_Read@ack stored from wreg
  7340   005DC6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7341   005DC8                     
  7342                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7343   005DC8  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7344   005DCC                     
  7345                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7346   005DCC  010E               	movlb	14	; () banked
  7347   005DCE  87DA               	bsf	218,3,b	;volatile
  7348                           
  7349                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7350   005DD0  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7351   005DD4                     
  7352                           ;i2c.c: 57:   tmp = SSP2BUF;
  7353   005DD4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7354                           
  7355                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7356   005DD8  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7357   005DDC                     
  7358                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7359   005DDC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7360   005DDE  B4D8               	btfsc	status,2,c
  7361   005DE0  EFF4  F02E         	goto	u4911
  7362   005DE4  EFF8  F02E         	goto	u4910
  7363   005DE8                     u4911:
  7364   005DE8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7365   005DEA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7366   005DEC  EFF9  F02E         	goto	u4928
  7367   005DF0                     u4910:
  7368   005DF0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7369   005DF2                     u4928:
  7370   005DF2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7371   005DF4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7372   005DF6  010E               	movlb	14	; () banked
  7373   005DF8  51DA               	movf	218,w,b	;volatile
  7374   005DFA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7375   005DFC  0BDF               	andlw	-33
  7376   005DFE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7377   005E00  6FDA               	movwf	218,b	;volatile
  7378   005E02                     
  7379                           ; BSR set to: 14
  7380                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7381   005E02  89DA               	bsf	218,4,b	;volatile
  7382   005E04                     
  7383                           ; BSR set to: 14
  7384                           ;i2c.c: 61:   return tmp;
  7385   005E04  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7386   005E06                     
  7387                           ; BSR set to: 14
  7388   005E06  0012               	return		;funcret
  7389   005E08                     __end_of_I2C_2_Master_Read:
  7390                           	callstack 0
  7391                           
  7392 ;; *************** function _initUSART4 *****************
  7393 ;; Defined at:
  7394 ;;		line 4 in file "serial.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_main
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text30
  7423   006052                     __ptext30:
  7424                           	callstack 0
  7425   006052                     _initUSART4:
  7426                           	callstack 29
  7427   006052                     
  7428                           ;serial.c: 5:     RC0PPS = 0x12;
  7429   006052  0E12               	movlw	18
  7430   006054  010E               	movlb	14	; () banked
  7431   006056  6F62               	movwf	98,b	;volatile
  7432                           
  7433                           ;serial.c: 6:     RX4PPS = 0x11;
  7434   006058  0E11               	movlw	17
  7435   00605A  6F15               	movwf	21,b	;volatile
  7436   00605C                     
  7437                           ; BSR set to: 14
  7438                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7439   00605C  97E9               	bcf	233,3,b	;volatile
  7440   00605E                     
  7441                           ; BSR set to: 14
  7442                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7443   00605E  95E8               	bcf	232,2,b	;volatile
  7444                           
  7445                           ;serial.c: 9:     SP4BRGL = 51;
  7446   006060  0E33               	movlw	51
  7447   006062  6FE5               	movwf	229,b	;volatile
  7448                           
  7449                           ;serial.c: 10:     SP4BRGH = 0;
  7450   006064  0E00               	movlw	0
  7451   006066  6FE6               	movwf	230,b	;volatile
  7452   006068                     
  7453                           ; BSR set to: 14
  7454                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7455   006068  89E7               	bsf	231,4,b	;volatile
  7456   00606A                     
  7457                           ; BSR set to: 14
  7458                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7459   00606A  8BE8               	bsf	232,5,b	;volatile
  7460   00606C                     
  7461                           ; BSR set to: 14
  7462                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7463   00606C  8FE7               	bsf	231,7,b	;volatile
  7464   00606E                     
  7465                           ; BSR set to: 14
  7466   00606E  0012               	return		;funcret
  7467   006070                     __end_of_initUSART4:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _initDCmotorsPWM *****************
  7471 ;; Defined at:
  7472 ;;		line 6 in file "dc_motor.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;Total ram usage:        2 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; Hardware stack levels required when called: 1
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text31
  7501   0052EE                     __ptext31:
  7502                           	callstack 0
  7503   0052EE                     _initDCmotorsPWM:
  7504                           	callstack 29
  7505   0052EE                     
  7506                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7507   0052EE  0E05               	movlw	5
  7508   0052F0  010E               	movlb	14	; () banked
  7509   0052F2  6F74               	movwf	116,b	;volatile
  7510                           
  7511                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7512   0052F4  0E06               	movlw	6
  7513   0052F6  6F76               	movwf	118,b	;volatile
  7514                           
  7515                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7516   0052F8  0E07               	movlw	7
  7517   0052FA  6F69               	movwf	105,b	;volatile
  7518                           
  7519                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7520   0052FC  0E08               	movlw	8
  7521   0052FE  6F88               	movwf	136,b	;volatile
  7522   005300                     
  7523                           ; BSR set to: 14
  7524                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7525   005300  9485               	bcf	133,2,c	;volatile
  7526   005302                     
  7527                           ; BSR set to: 14
  7528                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7529   005302  9885               	bcf	133,4,c	;volatile
  7530   005304                     
  7531                           ; BSR set to: 14
  7532                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7533   005304  9E83               	bcf	131,7,c	;volatile
  7534   005306                     
  7535                           ; BSR set to: 14
  7536                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7537   005306  9C87               	bcf	135,6,c	;volatile
  7538                           
  7539                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7540   005308  50BD               	movf	189,w,c	;volatile
  7541   00530A  0B8F               	andlw	-113
  7542   00530C  0930               	iorlw	48
  7543   00530E  6EBD               	movwf	189,c	;volatile
  7544                           
  7545                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7546   005310  0EE0               	movlw	-32
  7547   005312  16BE               	andwf	190,f,c	;volatile
  7548                           
  7549                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7550   005314  50BF               	movf	191,w,c	;volatile
  7551   005316  0BF0               	andlw	-16
  7552   005318  0901               	iorlw	1
  7553   00531A  6EBF               	movwf	191,c	;volatile
  7554   00531C                     
  7555                           ; BSR set to: 14
  7556                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7557   00531C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7558   005320                     
  7559                           ; BSR set to: 14
  7560                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7561   005320  8EBD               	bsf	189,7,c	;volatile
  7562                           
  7563                           ;dc_motor.c: 34:     CCPR1H=0;
  7564   005322  0E00               	movlw	0
  7565   005324  6EAA               	movwf	170,c	;volatile
  7566                           
  7567                           ;dc_motor.c: 35:     CCPR2H=0;
  7568   005326  0E00               	movlw	0
  7569   005328  6EA6               	movwf	166,c	;volatile
  7570                           
  7571                           ;dc_motor.c: 36:     CCPR3H=0;
  7572   00532A  0E00               	movlw	0
  7573   00532C  010F               	movlb	15	; () banked
  7574   00532E  6F25               	movwf	37,b	;volatile
  7575                           
  7576                           ;dc_motor.c: 37:     CCPR4H=0;
  7577   005330  0E00               	movlw	0
  7578   005332  6F21               	movwf	33,b	;volatile
  7579                           
  7580                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7581   005334  0EFC               	movlw	-4
  7582   005336  16AD               	andwf	173,f,c	;volatile
  7583                           
  7584                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7585   005338  0EF3               	movlw	-13
  7586   00533A  16AD               	andwf	173,f,c	;volatile
  7587                           
  7588                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7589   00533C  0ECF               	movlw	-49
  7590   00533E  16AD               	andwf	173,f,c	;volatile
  7591                           
  7592                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7593   005340  0E3F               	movlw	-193
  7594   005342  16AD               	andwf	173,f,c	;volatile
  7595   005344                     
  7596                           ; BSR set to: 15
  7597                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7598   005344  88AB               	bsf	171,4,c	;volatile
  7599                           
  7600                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7601   005346  50AB               	movf	171,w,c	;volatile
  7602   005348  0BF0               	andlw	-16
  7603   00534A  090C               	iorlw	12
  7604   00534C  6EAB               	movwf	171,c	;volatile
  7605   00534E                     
  7606                           ; BSR set to: 15
  7607                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7608   00534E  8EAB               	bsf	171,7,c	;volatile
  7609   005350                     
  7610                           ; BSR set to: 15
  7611                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7612   005350  88A7               	bsf	167,4,c	;volatile
  7613                           
  7614                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7615   005352  50A7               	movf	167,w,c	;volatile
  7616   005354  0BF0               	andlw	-16
  7617   005356  090C               	iorlw	12
  7618   005358  6EA7               	movwf	167,c	;volatile
  7619   00535A                     
  7620                           ; BSR set to: 15
  7621                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7622   00535A  8EA7               	bsf	167,7,c	;volatile
  7623   00535C                     
  7624                           ; BSR set to: 15
  7625                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7626   00535C  8926               	bsf	38,4,b	;volatile
  7627                           
  7628                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7629   00535E  5126               	movf	38,w,b	;volatile
  7630   005360  0BF0               	andlw	-16
  7631   005362  090C               	iorlw	12
  7632   005364  6F26               	movwf	38,b	;volatile
  7633   005366                     
  7634                           ; BSR set to: 15
  7635                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7636   005366  8F26               	bsf	38,7,b	;volatile
  7637   005368                     
  7638                           ; BSR set to: 15
  7639                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7640   005368  8922               	bsf	34,4,b	;volatile
  7641                           
  7642                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7643   00536A  5122               	movf	34,w,b	;volatile
  7644   00536C  0BF0               	andlw	-16
  7645   00536E  090C               	iorlw	12
  7646   005370  6F22               	movwf	34,b	;volatile
  7647   005372                     
  7648                           ; BSR set to: 15
  7649                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7650   005372  8F22               	bsf	34,7,b	;volatile
  7651   005374                     
  7652                           ; BSR set to: 15
  7653   005374  0012               	return		;funcret
  7654   005376                     __end_of_initDCmotorsPWM:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _go_Home *****************
  7658 ;; Defined at:
  7659 ;;		line 4 in file "Memory.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7662 ;;		 -> WayBack(50), 
  7663 ;;  Time_forward    2   37[COMRAM] PTR int 
  7664 ;;		 -> Time_forward(100), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  i               2   42[COMRAM] int 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;Total ram usage:        9 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 6
  7683 ;; This function calls:
  7684 ;;		_BlueMove
  7685 ;;		_GreenMove
  7686 ;;		_LightBlueMove
  7687 ;;		_OrangeMove
  7688 ;;		_RedMove
  7689 ;;		_ReversePink
  7690 ;;		_ReverseYellow
  7691 ;;		_reverseDetect
  7692 ;;		_stop
  7693 ;;		_timed_forward
  7694 ;; This function is called by:
  7695 ;;		_main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text32
  7700   003ABC                     __ptext32:
  7701                           	callstack 0
  7702   003ABC                     _go_Home:
  7703                           	callstack 24
  7704   003ABC                     
  7705                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7706   003ABC  0E61               	movlw	low _motorL
  7707   003ABE  6E20               	movwf	BlueMove@mL^0,c
  7708   003AC0  0E01               	movlw	high _motorL
  7709   003AC2  6E21               	movwf	(BlueMove@mL+1)^0,c
  7710   003AC4  0E58               	movlw	low _motorR
  7711   003AC6  6E22               	movwf	BlueMove@mR^0,c
  7712   003AC8  0E01               	movlw	high _motorR
  7713   003ACA  6E23               	movwf	(BlueMove@mR+1)^0,c
  7714   003ACC  ECD9  F02A         	call	_BlueMove	;wreg free
  7715   003AD0                     
  7716                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7717   003AD0  9ED5               	bcf	213,7,c	;volatile
  7718   003AD2                     
  7719                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7720   003AD2  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7721   003AD6  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7722   003ADA                     l5597:
  7723   003ADA  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7724   003ADC  EF74  F01D         	goto	u5530
  7725   003AE0  EF72  F01D         	goto	u5531
  7726   003AE4                     u5531:
  7727   003AE4  EF76  F01D         	goto	l5601
  7728   003AE8                     u5530:
  7729   003AE8  EFCD  F01E         	goto	l638
  7730   003AEC                     l5601:
  7731                           
  7732                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7733   003AEC  0E61               	movlw	low _motorL
  7734   003AEE  6E14               	movwf	timed_forward@mL^0,c
  7735   003AF0  0E01               	movlw	high _motorL
  7736   003AF2  6E15               	movwf	(timed_forward@mL+1)^0,c
  7737   003AF4  0E58               	movlw	low _motorR
  7738   003AF6  6E16               	movwf	timed_forward@mR^0,c
  7739   003AF8  0E01               	movlw	high _motorR
  7740   003AFA  6E17               	movwf	(timed_forward@mR+1)^0,c
  7741   003AFC  90D8               	bcf	status,0,c
  7742   003AFE  342B               	rlcf	go_Home@i^0,w,c
  7743   003B00  6ED9               	movwf	fsr2l,c
  7744   003B02  342C               	rlcf	(go_Home@i+1)^0,w,c
  7745   003B04  6EDA               	movwf	fsr2h,c
  7746   003B06  5026               	movf	go_Home@Time_forward^0,w,c
  7747   003B08  26D9               	addwf	fsr2l,f,c
  7748   003B0A  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7749   003B0C  22DA               	addwfc	fsr2h,f,c
  7750   003B0E  CFDE F018          	movff	postinc2,timed_forward@time
  7751   003B12  CFDD F019          	movff	postdec2,timed_forward@time+1
  7752   003B16  EC91  F027         	call	_timed_forward	;wreg free
  7753   003B1A                     
  7754                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7755   003B1A  502B               	movf	go_Home@i^0,w,c
  7756   003B1C  2424               	addwf	go_Home@WayBack^0,w,c
  7757   003B1E  6E28               	movwf	??_go_Home^0,c
  7758   003B20  502C               	movf	(go_Home@i+1)^0,w,c
  7759   003B22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7760   003B24  6E29               	movwf	(??_go_Home+1)^0,c
  7761   003B26  0EFF               	movlw	255
  7762   003B28  2428               	addwf	??_go_Home^0,w,c
  7763   003B2A  6ED9               	movwf	fsr2l,c
  7764   003B2C  0EFF               	movlw	255
  7765   003B2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7766   003B30  6EDA               	movwf	fsr2h,c
  7767   003B32  04DE               	decf	postinc2,w,c
  7768   003B34  A4D8               	btfss	status,2,c
  7769   003B36  EF9F  F01D         	goto	u5541
  7770   003B3A  EFA1  F01D         	goto	u5540
  7771   003B3E                     u5541:
  7772   003B3E  EFB7  F01D         	goto	l5607
  7773   003B42                     u5540:
  7774   003B42                     
  7775                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7776   003B42  0E61               	movlw	low _motorL
  7777   003B44  6E1A               	movwf	reverseDetect@mL^0,c
  7778   003B46  0E01               	movlw	high _motorL
  7779   003B48  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7780   003B4A  0E58               	movlw	low _motorR
  7781   003B4C  6E1C               	movwf	reverseDetect@mR^0,c
  7782   003B4E  0E01               	movlw	high _motorR
  7783   003B50  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7784   003B52  EC6C  F02B         	call	_reverseDetect	;wreg free
  7785                           
  7786                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7787   003B56  0E61               	movlw	low _motorL
  7788   003B58  6E20               	movwf	GreenMove@mL^0,c
  7789   003B5A  0E01               	movlw	high _motorL
  7790   003B5C  6E21               	movwf	(GreenMove@mL+1)^0,c
  7791   003B5E  0E58               	movlw	low _motorR
  7792   003B60  6E22               	movwf	GreenMove@mR^0,c
  7793   003B62  0E01               	movlw	high _motorR
  7794   003B64  6E23               	movwf	(GreenMove@mR+1)^0,c
  7795   003B66  EC43  F02F         	call	_GreenMove	;wreg free
  7796                           
  7797                           ;Memory.c: 14:         }
  7798   003B6A  EFB9  F01E         	goto	l626
  7799   003B6E                     l5607:
  7800   003B6E  502B               	movf	go_Home@i^0,w,c
  7801   003B70  2424               	addwf	go_Home@WayBack^0,w,c
  7802   003B72  6E28               	movwf	??_go_Home^0,c
  7803   003B74  502C               	movf	(go_Home@i+1)^0,w,c
  7804   003B76  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7805   003B78  6E29               	movwf	(??_go_Home+1)^0,c
  7806   003B7A  0EFF               	movlw	255
  7807   003B7C  2428               	addwf	??_go_Home^0,w,c
  7808   003B7E  6ED9               	movwf	fsr2l,c
  7809   003B80  0EFF               	movlw	255
  7810   003B82  2029               	addwfc	(??_go_Home+1)^0,w,c
  7811   003B84  6EDA               	movwf	fsr2h,c
  7812   003B86  0E02               	movlw	2
  7813   003B88  18DE               	xorwf	postinc2,w,c
  7814   003B8A  A4D8               	btfss	status,2,c
  7815   003B8C  EFCA  F01D         	goto	u5551
  7816   003B90  EFCC  F01D         	goto	u5550
  7817   003B94                     u5551:
  7818   003B94  EFE2  F01D         	goto	l5611
  7819   003B98                     u5550:
  7820   003B98                     
  7821                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7822   003B98  0E61               	movlw	low _motorL
  7823   003B9A  6E1A               	movwf	reverseDetect@mL^0,c
  7824   003B9C  0E01               	movlw	high _motorL
  7825   003B9E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7826   003BA0  0E58               	movlw	low _motorR
  7827   003BA2  6E1C               	movwf	reverseDetect@mR^0,c
  7828   003BA4  0E01               	movlw	high _motorR
  7829   003BA6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7830   003BA8  EC6C  F02B         	call	_reverseDetect	;wreg free
  7831                           
  7832                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7833   003BAC  0E61               	movlw	low _motorL
  7834   003BAE  6E20               	movwf	LightBlueMove@mL^0,c
  7835   003BB0  0E01               	movlw	high _motorL
  7836   003BB2  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7837   003BB4  0E58               	movlw	low _motorR
  7838   003BB6  6E22               	movwf	LightBlueMove@mR^0,c
  7839   003BB8  0E01               	movlw	high _motorR
  7840   003BBA  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7841   003BBC  EC9B  F02C         	call	_LightBlueMove	;wreg free
  7842                           
  7843                           ;Memory.c: 18:         }
  7844   003BC0  EFB9  F01E         	goto	l626
  7845   003BC4                     l5611:
  7846   003BC4  502B               	movf	go_Home@i^0,w,c
  7847   003BC6  2424               	addwf	go_Home@WayBack^0,w,c
  7848   003BC8  6E28               	movwf	??_go_Home^0,c
  7849   003BCA  502C               	movf	(go_Home@i+1)^0,w,c
  7850   003BCC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7851   003BCE  6E29               	movwf	(??_go_Home+1)^0,c
  7852   003BD0  0EFF               	movlw	255
  7853   003BD2  2428               	addwf	??_go_Home^0,w,c
  7854   003BD4  6ED9               	movwf	fsr2l,c
  7855   003BD6  0EFF               	movlw	255
  7856   003BD8  2029               	addwfc	(??_go_Home+1)^0,w,c
  7857   003BDA  6EDA               	movwf	fsr2h,c
  7858   003BDC  0E03               	movlw	3
  7859   003BDE  18DE               	xorwf	postinc2,w,c
  7860   003BE0  A4D8               	btfss	status,2,c
  7861   003BE2  EFF5  F01D         	goto	u5561
  7862   003BE6  EFF7  F01D         	goto	u5560
  7863   003BEA                     u5561:
  7864   003BEA  EF0D  F01E         	goto	l5615
  7865   003BEE                     u5560:
  7866   003BEE                     
  7867                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7868   003BEE  0E61               	movlw	low _motorL
  7869   003BF0  6E1A               	movwf	reverseDetect@mL^0,c
  7870   003BF2  0E01               	movlw	high _motorL
  7871   003BF4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7872   003BF6  0E58               	movlw	low _motorR
  7873   003BF8  6E1C               	movwf	reverseDetect@mR^0,c
  7874   003BFA  0E01               	movlw	high _motorR
  7875   003BFC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7876   003BFE  EC6C  F02B         	call	_reverseDetect	;wreg free
  7877                           
  7878                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7879   003C02  0E61               	movlw	low _motorL
  7880   003C04  6E20               	movwf	ReverseYellow@mL^0,c
  7881   003C06  0E01               	movlw	high _motorL
  7882   003C08  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7883   003C0A  0E58               	movlw	low _motorR
  7884   003C0C  6E22               	movwf	ReverseYellow@mR^0,c
  7885   003C0E  0E01               	movlw	high _motorR
  7886   003C10  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7887   003C12  ECDB  F026         	call	_ReverseYellow	;wreg free
  7888                           
  7889                           ;Memory.c: 22:         }
  7890   003C16  EFB9  F01E         	goto	l626
  7891   003C1A                     l5615:
  7892   003C1A  502B               	movf	go_Home@i^0,w,c
  7893   003C1C  2424               	addwf	go_Home@WayBack^0,w,c
  7894   003C1E  6E28               	movwf	??_go_Home^0,c
  7895   003C20  502C               	movf	(go_Home@i+1)^0,w,c
  7896   003C22  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7897   003C24  6E29               	movwf	(??_go_Home+1)^0,c
  7898   003C26  0EFF               	movlw	255
  7899   003C28  2428               	addwf	??_go_Home^0,w,c
  7900   003C2A  6ED9               	movwf	fsr2l,c
  7901   003C2C  0EFF               	movlw	255
  7902   003C2E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7903   003C30  6EDA               	movwf	fsr2h,c
  7904   003C32  0E04               	movlw	4
  7905   003C34  18DE               	xorwf	postinc2,w,c
  7906   003C36  A4D8               	btfss	status,2,c
  7907   003C38  EF20  F01E         	goto	u5571
  7908   003C3C  EF22  F01E         	goto	u5570
  7909   003C40                     u5571:
  7910   003C40  EF38  F01E         	goto	l5619
  7911   003C44                     u5570:
  7912   003C44                     
  7913                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7914   003C44  0E61               	movlw	low _motorL
  7915   003C46  6E1A               	movwf	reverseDetect@mL^0,c
  7916   003C48  0E01               	movlw	high _motorL
  7917   003C4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7918   003C4C  0E58               	movlw	low _motorR
  7919   003C4E  6E1C               	movwf	reverseDetect@mR^0,c
  7920   003C50  0E01               	movlw	high _motorR
  7921   003C52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7922   003C54  EC6C  F02B         	call	_reverseDetect	;wreg free
  7923                           
  7924                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7925   003C58  0E61               	movlw	low _motorL
  7926   003C5A  6E20               	movwf	BlueMove@mL^0,c
  7927   003C5C  0E01               	movlw	high _motorL
  7928   003C5E  6E21               	movwf	(BlueMove@mL+1)^0,c
  7929   003C60  0E58               	movlw	low _motorR
  7930   003C62  6E22               	movwf	BlueMove@mR^0,c
  7931   003C64  0E01               	movlw	high _motorR
  7932   003C66  6E23               	movwf	(BlueMove@mR+1)^0,c
  7933   003C68  ECD9  F02A         	call	_BlueMove	;wreg free
  7934                           
  7935                           ;Memory.c: 26:         }
  7936   003C6C  EFB9  F01E         	goto	l626
  7937   003C70                     l5619:
  7938   003C70  502B               	movf	go_Home@i^0,w,c
  7939   003C72  2424               	addwf	go_Home@WayBack^0,w,c
  7940   003C74  6E28               	movwf	??_go_Home^0,c
  7941   003C76  502C               	movf	(go_Home@i+1)^0,w,c
  7942   003C78  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7943   003C7A  6E29               	movwf	(??_go_Home+1)^0,c
  7944   003C7C  0EFF               	movlw	255
  7945   003C7E  2428               	addwf	??_go_Home^0,w,c
  7946   003C80  6ED9               	movwf	fsr2l,c
  7947   003C82  0EFF               	movlw	255
  7948   003C84  2029               	addwfc	(??_go_Home+1)^0,w,c
  7949   003C86  6EDA               	movwf	fsr2h,c
  7950   003C88  0E05               	movlw	5
  7951   003C8A  18DE               	xorwf	postinc2,w,c
  7952   003C8C  A4D8               	btfss	status,2,c
  7953   003C8E  EF4B  F01E         	goto	u5581
  7954   003C92  EF4D  F01E         	goto	u5580
  7955   003C96                     u5581:
  7956   003C96  EF63  F01E         	goto	l5623
  7957   003C9A                     u5580:
  7958   003C9A                     
  7959                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7960   003C9A  0E61               	movlw	low _motorL
  7961   003C9C  6E1A               	movwf	reverseDetect@mL^0,c
  7962   003C9E  0E01               	movlw	high _motorL
  7963   003CA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7964   003CA2  0E58               	movlw	low _motorR
  7965   003CA4  6E1C               	movwf	reverseDetect@mR^0,c
  7966   003CA6  0E01               	movlw	high _motorR
  7967   003CA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7968   003CAA  EC6C  F02B         	call	_reverseDetect	;wreg free
  7969                           
  7970                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  7971   003CAE  0E61               	movlw	low _motorL
  7972   003CB0  6E20               	movwf	RedMove@mL^0,c
  7973   003CB2  0E01               	movlw	high _motorL
  7974   003CB4  6E21               	movwf	(RedMove@mL+1)^0,c
  7975   003CB6  0E58               	movlw	low _motorR
  7976   003CB8  6E22               	movwf	RedMove@mR^0,c
  7977   003CBA  0E01               	movlw	high _motorR
  7978   003CBC  6E23               	movwf	(RedMove@mR+1)^0,c
  7979   003CBE  EC24  F02F         	call	_RedMove	;wreg free
  7980                           
  7981                           ;Memory.c: 30:         }
  7982   003CC2  EFB9  F01E         	goto	l626
  7983   003CC6                     l5623:
  7984   003CC6  502B               	movf	go_Home@i^0,w,c
  7985   003CC8  2424               	addwf	go_Home@WayBack^0,w,c
  7986   003CCA  6E28               	movwf	??_go_Home^0,c
  7987   003CCC  502C               	movf	(go_Home@i+1)^0,w,c
  7988   003CCE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7989   003CD0  6E29               	movwf	(??_go_Home+1)^0,c
  7990   003CD2  0EFF               	movlw	255
  7991   003CD4  2428               	addwf	??_go_Home^0,w,c
  7992   003CD6  6ED9               	movwf	fsr2l,c
  7993   003CD8  0EFF               	movlw	255
  7994   003CDA  2029               	addwfc	(??_go_Home+1)^0,w,c
  7995   003CDC  6EDA               	movwf	fsr2h,c
  7996   003CDE  0E06               	movlw	6
  7997   003CE0  18DE               	xorwf	postinc2,w,c
  7998   003CE2  A4D8               	btfss	status,2,c
  7999   003CE4  EF76  F01E         	goto	u5591
  8000   003CE8  EF78  F01E         	goto	u5590
  8001   003CEC                     u5591:
  8002   003CEC  EF8E  F01E         	goto	l5627
  8003   003CF0                     u5590:
  8004   003CF0                     
  8005                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8006   003CF0  0E61               	movlw	low _motorL
  8007   003CF2  6E1A               	movwf	reverseDetect@mL^0,c
  8008   003CF4  0E01               	movlw	high _motorL
  8009   003CF6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8010   003CF8  0E58               	movlw	low _motorR
  8011   003CFA  6E1C               	movwf	reverseDetect@mR^0,c
  8012   003CFC  0E01               	movlw	high _motorR
  8013   003CFE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8014   003D00  EC6C  F02B         	call	_reverseDetect	;wreg free
  8015                           
  8016                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8017   003D04  0E61               	movlw	low _motorL
  8018   003D06  6E20               	movwf	OrangeMove@mL^0,c
  8019   003D08  0E01               	movlw	high _motorL
  8020   003D0A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8021   003D0C  0E58               	movlw	low _motorR
  8022   003D0E  6E22               	movwf	OrangeMove@mR^0,c
  8023   003D10  0E01               	movlw	high _motorR
  8024   003D12  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8025   003D14  EC72  F02C         	call	_OrangeMove	;wreg free
  8026                           
  8027                           ;Memory.c: 34:         }
  8028   003D18  EFB9  F01E         	goto	l626
  8029   003D1C                     l5627:
  8030   003D1C  502B               	movf	go_Home@i^0,w,c
  8031   003D1E  2424               	addwf	go_Home@WayBack^0,w,c
  8032   003D20  6E28               	movwf	??_go_Home^0,c
  8033   003D22  502C               	movf	(go_Home@i+1)^0,w,c
  8034   003D24  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8035   003D26  6E29               	movwf	(??_go_Home+1)^0,c
  8036   003D28  0EFF               	movlw	255
  8037   003D2A  2428               	addwf	??_go_Home^0,w,c
  8038   003D2C  6ED9               	movwf	fsr2l,c
  8039   003D2E  0EFF               	movlw	255
  8040   003D30  2029               	addwfc	(??_go_Home+1)^0,w,c
  8041   003D32  6EDA               	movwf	fsr2h,c
  8042   003D34  0E07               	movlw	7
  8043   003D36  18DE               	xorwf	postinc2,w,c
  8044   003D38  A4D8               	btfss	status,2,c
  8045   003D3A  EFA1  F01E         	goto	u5601
  8046   003D3E  EFA3  F01E         	goto	u5600
  8047   003D42                     u5601:
  8048   003D42  EFB9  F01E         	goto	l632
  8049   003D46                     u5600:
  8050   003D46                     
  8051                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8052   003D46  0E61               	movlw	low _motorL
  8053   003D48  6E1A               	movwf	reverseDetect@mL^0,c
  8054   003D4A  0E01               	movlw	high _motorL
  8055   003D4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8056   003D4E  0E58               	movlw	low _motorR
  8057   003D50  6E1C               	movwf	reverseDetect@mR^0,c
  8058   003D52  0E01               	movlw	high _motorR
  8059   003D54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8060   003D56  EC6C  F02B         	call	_reverseDetect	;wreg free
  8061                           
  8062                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8063   003D5A  0E61               	movlw	low _motorL
  8064   003D5C  6E20               	movwf	ReversePink@mL^0,c
  8065   003D5E  0E01               	movlw	high _motorL
  8066   003D60  6E21               	movwf	(ReversePink@mL+1)^0,c
  8067   003D62  0E58               	movlw	low _motorR
  8068   003D64  6E22               	movwf	ReversePink@mR^0,c
  8069   003D66  0E01               	movlw	high _motorR
  8070   003D68  6E23               	movwf	(ReversePink@mR+1)^0,c
  8071   003D6A  EC36  F027         	call	_ReversePink	;wreg free
  8072   003D6E  EFB9  F01E         	goto	l626
  8073   003D72                     l632:
  8074   003D72                     l626:
  8075                           
  8076                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8077   003D72  0E61               	movlw	low _motorL
  8078   003D74  6E14               	movwf	stop@mL^0,c
  8079   003D76  0E01               	movlw	high _motorL
  8080   003D78  6E15               	movwf	(stop@mL+1)^0,c
  8081   003D7A  0E58               	movlw	low _motorR
  8082   003D7C  6E16               	movwf	stop@mR^0,c
  8083   003D7E  0E01               	movlw	high _motorR
  8084   003D80  6E17               	movwf	(stop@mR+1)^0,c
  8085   003D82  ECBB  F029         	call	_stop	;wreg free
  8086   003D86                     
  8087                           ;Memory.c: 40:         run_flag=0;
  8088   003D86  0E00               	movlw	0
  8089   003D88  0101               	movlb	1	; () banked
  8090   003D8A  6F17               	movwf	(_run_flag+1)& (0+255),b
  8091   003D8C  0E00               	movlw	0
  8092   003D8E  6F16               	movwf	_run_flag& (0+255),b
  8093   003D90                     
  8094                           ; BSR set to: 1
  8095                           ;Memory.c: 43:   }
  8096   003D90  062B               	decf	go_Home@i^0,f,c
  8097   003D92  A0D8               	btfss	status,0,c
  8098   003D94  062C               	decf	(go_Home@i+1)^0,f,c
  8099   003D96  EF6D  F01D         	goto	l5597
  8100   003D9A                     l638:
  8101   003D9A  0012               	return		;funcret
  8102   003D9C                     __end_of_go_Home:
  8103                           	callstack 0
  8104                           
  8105 ;; *************** function _timed_forward *****************
  8106 ;; Defined at:
  8107 ;;		line 165 in file "dc_motor.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8110 ;;		 -> motorL(9), 
  8111 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8112 ;;		 -> motorR(9), 
  8113 ;;  time            2   23[COMRAM] int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;Total ram usage:        8 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; Hardware stack levels required when called: 3
  8132 ;; This function calls:
  8133 ;;		_delayed_ms
  8134 ;;		_setMotorPWM
  8135 ;; This function is called by:
  8136 ;;		_go_Home
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text33
  8141   004F22                     __ptext33:
  8142                           	callstack 0
  8143   004F22                     _timed_forward:
  8144                           	callstack 26
  8145   004F22                     
  8146                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8147   004F22  EE20 F001          	lfsr	2,1
  8148   004F26  5014               	movf	timed_forward@mL^0,w,c
  8149   004F28  26D9               	addwf	fsr2l,f,c
  8150   004F2A  5015               	movf	(timed_forward@mL+1)^0,w,c
  8151   004F2C  22DA               	addwfc	fsr2h,f,c
  8152   004F2E  0E01               	movlw	1
  8153   004F30  6EDF               	movwf	indf2,c
  8154                           
  8155                           ;dc_motor.c: 169:     mR->direction =1;
  8156   004F32  EE20 F001          	lfsr	2,1
  8157   004F36  5016               	movf	timed_forward@mR^0,w,c
  8158   004F38  26D9               	addwf	fsr2l,f,c
  8159   004F3A  5017               	movf	(timed_forward@mR+1)^0,w,c
  8160   004F3C  22DA               	addwfc	fsr2h,f,c
  8161   004F3E  0E01               	movlw	1
  8162   004F40  6EDF               	movwf	indf2,c
  8163                           
  8164                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8165   004F42  EFC7  F027         	goto	l5167
  8166   004F46                     l5159:
  8167                           
  8168                           ;dc_motor.c: 172:         mL->power+=10;
  8169   004F46  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8170   004F4A  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8171   004F4E  0E0A               	movlw	10
  8172   004F50  26DF               	addwf	indf2,f,c
  8173                           
  8174                           ;dc_motor.c: 173:         mR->power+=10;
  8175   004F52  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8176   004F56  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8177   004F5A  0E0A               	movlw	10
  8178   004F5C  26DF               	addwf	indf2,f,c
  8179   004F5E                     
  8180                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8181   004F5E  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8182   004F62  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8183   004F66  EC8A  F023         	call	_setMotorPWM	;wreg free
  8184   004F6A                     
  8185                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8186   004F6A  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8187   004F6E  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8188   004F72  EC8A  F023         	call	_setMotorPWM	;wreg free
  8189   004F76                     
  8190                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8191   004F76  0E02               	movlw	2
  8192   004F78  6E1B               	movwf	(??_timed_forward+1)^0,c
  8193   004F7A  0EA0               	movlw	160
  8194   004F7C  6E1A               	movwf	??_timed_forward^0,c
  8195   004F7E  0E92               	movlw	146
  8196   004F80                     u5947:
  8197   004F80  2EE8               	decfsz	wreg,f,c
  8198   004F82  D7FE               	bra	u5947
  8199   004F84  2E1A               	decfsz	??_timed_forward^0,f,c
  8200   004F86  D7FC               	bra	u5947
  8201   004F88  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8202   004F8A  D7FA               	bra	u5947
  8203   004F8C  D000               	nop2	
  8204   004F8E                     l5167:
  8205   004F8E  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8206   004F92  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8207   004F96  0E32               	movlw	50
  8208   004F98  60DF               	cpfslt	indf2,c
  8209   004F9A  EFD1  F027         	goto	u4991
  8210   004F9E  EFD3  F027         	goto	u4990
  8211   004FA2                     u4991:
  8212   004FA2  EFDF  F027         	goto	l5171
  8213   004FA6                     u4990:
  8214   004FA6  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8215   004FAA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8216   004FAE  0E31               	movlw	49
  8217   004FB0  64DF               	cpfsgt	indf2,c
  8218   004FB2  EFDD  F027         	goto	u5001
  8219   004FB6  EFDF  F027         	goto	u5000
  8220   004FBA                     u5001:
  8221   004FBA  EFA3  F027         	goto	l5159
  8222   004FBE                     u5000:
  8223   004FBE                     l5171:
  8224                           
  8225                           ;dc_motor.c: 181:     delayed_ms(time);
  8226   004FBE  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8227   004FC2  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8228   004FC6  EC7E  F02F         	call	_delayed_ms	;wreg free
  8229   004FCA  0012               	return		;funcret
  8230   004FCC                     __end_of_timed_forward:
  8231                           	callstack 0
  8232                           
  8233 ;; *************** function _delayed_ms *****************
  8234 ;; Defined at:
  8235 ;;		line 43 in file "timers.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  time            2    0[COMRAM] int 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  i               2    3[COMRAM] unsigned int 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;Total ram usage:        5 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; Hardware stack levels required when called: 1
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_timed_forward
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text34
  8264   005EFC                     __ptext34:
  8265                           	callstack 0
  8266   005EFC                     _delayed_ms:
  8267                           	callstack 27
  8268   005EFC                     
  8269                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8270   005EFC  0E00               	movlw	0
  8271   005EFE  6E05               	movwf	(delayed_ms@i+1)^0,c
  8272   005F00  0E00               	movlw	0
  8273   005F02  6E04               	movwf	delayed_ms@i^0,c
  8274   005F04  EF8E  F02F         	goto	l668
  8275   005F08                     l4991:
  8276                           
  8277                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8278   005F08  0E0B               	movlw	11
  8279   005F0A  6E03               	movwf	??_delayed_ms^0,c
  8280   005F0C  0E62               	movlw	98
  8281   005F0E                     u5957:
  8282   005F0E  2EE8               	decfsz	wreg,f,c
  8283   005F10  D7FE               	bra	u5957
  8284   005F12  2E03               	decfsz	??_delayed_ms^0,f,c
  8285   005F14  D7FC               	bra	u5957
  8286   005F16  D000               	nop2	
  8287   005F18                     
  8288                           ;timers.c: 46:     }
  8289   005F18  4A04               	infsnz	delayed_ms@i^0,f,c
  8290   005F1A  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8291   005F1C                     l668:
  8292   005F1C  5001               	movf	delayed_ms@time^0,w,c
  8293   005F1E  5C04               	subwf	delayed_ms@i^0,w,c
  8294   005F20  5002               	movf	(delayed_ms@time+1)^0,w,c
  8295   005F22  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8296   005F24  A0D8               	btfss	status,0,c
  8297   005F26  EF97  F02F         	goto	u4931
  8298   005F2A  EF99  F02F         	goto	u4930
  8299   005F2E                     u4931:
  8300   005F2E  EF84  F02F         	goto	l4991
  8301   005F32                     u4930:
  8302   005F32  0012               	return		;funcret
  8303   005F34                     __end_of_delayed_ms:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _ReverseYellow *****************
  8307 ;; Defined at:
  8308 ;;		line 333 in file "dc_motor.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8311 ;;		 -> motorL(9), 
  8312 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8313 ;;		 -> motorR(9), 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;Total ram usage:        4 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 5
  8332 ;; This function calls:
  8333 ;;		_ForwardOneBlock
  8334 ;;		_reverseDetect
  8335 ;;		_turnRight45
  8336 ;; This function is called by:
  8337 ;;		_go_Home
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text35
  8342   004DB6                     __ptext35:
  8343                           	callstack 0
  8344   004DB6                     _ReverseYellow:
  8345                           	callstack 24
  8346   004DB6                     
  8347                           ;dc_motor.c: 334:     reverseDetect(&motorL, &motorR);
  8348   004DB6  0E61               	movlw	low _motorL
  8349   004DB8  6E1A               	movwf	reverseDetect@mL^0,c
  8350   004DBA  0E01               	movlw	high _motorL
  8351   004DBC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8352   004DBE  0E58               	movlw	low _motorR
  8353   004DC0  6E1C               	movwf	reverseDetect@mR^0,c
  8354   004DC2  0E01               	movlw	high _motorR
  8355   004DC4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8356   004DC6  EC6C  F02B         	call	_reverseDetect	;wreg free
  8357                           
  8358                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
  8359   004DCA  0E61               	movlw	low _motorL
  8360   004DCC  6E1A               	movwf	turnRight45@mL^0,c
  8361   004DCE  0E01               	movlw	high _motorL
  8362   004DD0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8363   004DD2  0E58               	movlw	low _motorR
  8364   004DD4  6E1C               	movwf	turnRight45@mR^0,c
  8365   004DD6  0E01               	movlw	high _motorR
  8366   004DD8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8367   004DDA  EC2E  F02E         	call	_turnRight45	;wreg free
  8368                           
  8369                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8370   004DDE  0E61               	movlw	low _motorL
  8371   004DE0  6E1A               	movwf	turnRight45@mL^0,c
  8372   004DE2  0E01               	movlw	high _motorL
  8373   004DE4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8374   004DE6  0E58               	movlw	low _motorR
  8375   004DE8  6E1C               	movwf	turnRight45@mR^0,c
  8376   004DEA  0E01               	movlw	high _motorR
  8377   004DEC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8378   004DEE  EC2E  F02E         	call	_turnRight45	;wreg free
  8379                           
  8380                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  8381   004DF2  0E61               	movlw	low _motorL
  8382   004DF4  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8383   004DF6  0E01               	movlw	high _motorL
  8384   004DF8  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8385   004DFA  0E58               	movlw	low _motorR
  8386   004DFC  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8387   004DFE  0E01               	movlw	high _motorR
  8388   004E00  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8389   004E02  ECC6  F02B         	call	_ForwardOneBlock	;wreg free
  8390                           
  8391                           ;dc_motor.c: 338:     reverseDetect(&motorL, &motorR);
  8392   004E06  0E61               	movlw	low _motorL
  8393   004E08  6E1A               	movwf	reverseDetect@mL^0,c
  8394   004E0A  0E01               	movlw	high _motorL
  8395   004E0C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8396   004E0E  0E58               	movlw	low _motorR
  8397   004E10  6E1C               	movwf	reverseDetect@mR^0,c
  8398   004E12  0E01               	movlw	high _motorR
  8399   004E14  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8400   004E16  EC6C  F02B         	call	_reverseDetect	;wreg free
  8401                           
  8402                           ;dc_motor.c: 339:     turnRight45(&motorL, &motorR);
  8403   004E1A  0E61               	movlw	low _motorL
  8404   004E1C  6E1A               	movwf	turnRight45@mL^0,c
  8405   004E1E  0E01               	movlw	high _motorL
  8406   004E20  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8407   004E22  0E58               	movlw	low _motorR
  8408   004E24  6E1C               	movwf	turnRight45@mR^0,c
  8409   004E26  0E01               	movlw	high _motorR
  8410   004E28  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8411   004E2A  EC2E  F02E         	call	_turnRight45	;wreg free
  8412                           
  8413                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8414   004E2E  0E61               	movlw	low _motorL
  8415   004E30  6E1A               	movwf	turnRight45@mL^0,c
  8416   004E32  0E01               	movlw	high _motorL
  8417   004E34  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8418   004E36  0E58               	movlw	low _motorR
  8419   004E38  6E1C               	movwf	turnRight45@mR^0,c
  8420   004E3A  0E01               	movlw	high _motorR
  8421   004E3C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8422   004E3E  EC2E  F02E         	call	_turnRight45	;wreg free
  8423                           
  8424                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8425   004E42  0E61               	movlw	low _motorL
  8426   004E44  6E1A               	movwf	turnRight45@mL^0,c
  8427   004E46  0E01               	movlw	high _motorL
  8428   004E48  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8429   004E4A  0E58               	movlw	low _motorR
  8430   004E4C  6E1C               	movwf	turnRight45@mR^0,c
  8431   004E4E  0E01               	movlw	high _motorR
  8432   004E50  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8433   004E52  EC2E  F02E         	call	_turnRight45	;wreg free
  8434                           
  8435                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8436   004E56  0E61               	movlw	low _motorL
  8437   004E58  6E1A               	movwf	turnRight45@mL^0,c
  8438   004E5A  0E01               	movlw	high _motorL
  8439   004E5C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8440   004E5E  0E58               	movlw	low _motorR
  8441   004E60  6E1C               	movwf	turnRight45@mR^0,c
  8442   004E62  0E01               	movlw	high _motorR
  8443   004E64  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8444   004E66  EC2E  F02E         	call	_turnRight45	;wreg free
  8445   004E6A  0012               	return		;funcret
  8446   004E6C                     __end_of_ReverseYellow:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _ReversePink *****************
  8450 ;; Defined at:
  8451 ;;		line 344 in file "dc_motor.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8454 ;;		 -> motorL(9), 
  8455 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8456 ;;		 -> motorR(9), 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;Total ram usage:        4 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 5
  8475 ;; This function calls:
  8476 ;;		_ForwardOneBlock
  8477 ;;		_reverseDetect
  8478 ;;		_turnLeft45
  8479 ;; This function is called by:
  8480 ;;		_go_Home
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text36
  8485   004E6C                     __ptext36:
  8486                           	callstack 0
  8487   004E6C                     _ReversePink:
  8488                           	callstack 24
  8489   004E6C                     
  8490                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  8491   004E6C  0E61               	movlw	low _motorL
  8492   004E6E  6E1A               	movwf	reverseDetect@mL^0,c
  8493   004E70  0E01               	movlw	high _motorL
  8494   004E72  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8495   004E74  0E58               	movlw	low _motorR
  8496   004E76  6E1C               	movwf	reverseDetect@mR^0,c
  8497   004E78  0E01               	movlw	high _motorR
  8498   004E7A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8499   004E7C  EC6C  F02B         	call	_reverseDetect	;wreg free
  8500                           
  8501                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
  8502   004E80  0E61               	movlw	low _motorL
  8503   004E82  6E1A               	movwf	turnLeft45@mL^0,c
  8504   004E84  0E01               	movlw	high _motorL
  8505   004E86  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8506   004E88  0E58               	movlw	low _motorR
  8507   004E8A  6E1C               	movwf	turnLeft45@mR^0,c
  8508   004E8C  0E01               	movlw	high _motorR
  8509   004E8E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8510   004E90  EC55  F02E         	call	_turnLeft45	;wreg free
  8511                           
  8512                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8513   004E94  0E61               	movlw	low _motorL
  8514   004E96  6E1A               	movwf	turnLeft45@mL^0,c
  8515   004E98  0E01               	movlw	high _motorL
  8516   004E9A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8517   004E9C  0E58               	movlw	low _motorR
  8518   004E9E  6E1C               	movwf	turnLeft45@mR^0,c
  8519   004EA0  0E01               	movlw	high _motorR
  8520   004EA2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8521   004EA4  EC55  F02E         	call	_turnLeft45	;wreg free
  8522                           
  8523                           ;dc_motor.c: 348:     ForwardOneBlock(&motorL, &motorR);
  8524   004EA8  0E61               	movlw	low _motorL
  8525   004EAA  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8526   004EAC  0E01               	movlw	high _motorL
  8527   004EAE  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8528   004EB0  0E58               	movlw	low _motorR
  8529   004EB2  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8530   004EB4  0E01               	movlw	high _motorR
  8531   004EB6  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8532   004EB8  ECC6  F02B         	call	_ForwardOneBlock	;wreg free
  8533                           
  8534                           ;dc_motor.c: 349:     reverseDetect(&motorL, &motorR);
  8535   004EBC  0E61               	movlw	low _motorL
  8536   004EBE  6E1A               	movwf	reverseDetect@mL^0,c
  8537   004EC0  0E01               	movlw	high _motorL
  8538   004EC2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8539   004EC4  0E58               	movlw	low _motorR
  8540   004EC6  6E1C               	movwf	reverseDetect@mR^0,c
  8541   004EC8  0E01               	movlw	high _motorR
  8542   004ECA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8543   004ECC  EC6C  F02B         	call	_reverseDetect	;wreg free
  8544                           
  8545                           ;dc_motor.c: 350:     turnLeft45(&motorL, &motorR);
  8546   004ED0  0E61               	movlw	low _motorL
  8547   004ED2  6E1A               	movwf	turnLeft45@mL^0,c
  8548   004ED4  0E01               	movlw	high _motorL
  8549   004ED6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8550   004ED8  0E58               	movlw	low _motorR
  8551   004EDA  6E1C               	movwf	turnLeft45@mR^0,c
  8552   004EDC  0E01               	movlw	high _motorR
  8553   004EDE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8554   004EE0  EC55  F02E         	call	_turnLeft45	;wreg free
  8555                           
  8556                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8557   004EE4  0E61               	movlw	low _motorL
  8558   004EE6  6E1A               	movwf	turnLeft45@mL^0,c
  8559   004EE8  0E01               	movlw	high _motorL
  8560   004EEA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8561   004EEC  0E58               	movlw	low _motorR
  8562   004EEE  6E1C               	movwf	turnLeft45@mR^0,c
  8563   004EF0  0E01               	movlw	high _motorR
  8564   004EF2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8565   004EF4  EC55  F02E         	call	_turnLeft45	;wreg free
  8566                           
  8567                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8568   004EF8  0E61               	movlw	low _motorL
  8569   004EFA  6E1A               	movwf	turnLeft45@mL^0,c
  8570   004EFC  0E01               	movlw	high _motorL
  8571   004EFE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8572   004F00  0E58               	movlw	low _motorR
  8573   004F02  6E1C               	movwf	turnLeft45@mR^0,c
  8574   004F04  0E01               	movlw	high _motorR
  8575   004F06  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8576   004F08  EC55  F02E         	call	_turnLeft45	;wreg free
  8577                           
  8578                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8579   004F0C  0E61               	movlw	low _motorL
  8580   004F0E  6E1A               	movwf	turnLeft45@mL^0,c
  8581   004F10  0E01               	movlw	high _motorL
  8582   004F12  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8583   004F14  0E58               	movlw	low _motorR
  8584   004F16  6E1C               	movwf	turnLeft45@mR^0,c
  8585   004F18  0E01               	movlw	high _motorR
  8586   004F1A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8587   004F1C  EC55  F02E         	call	_turnLeft45	;wreg free
  8588   004F20  0012               	return		;funcret
  8589   004F22                     __end_of_ReversePink:
  8590                           	callstack 0
  8591                           
  8592 ;; *************** function _ForwardOneBlock *****************
  8593 ;; Defined at:
  8594 ;;		line 238 in file "dc_motor.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8597 ;;		 -> motorL(9), 
  8598 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8599 ;;		 -> motorR(9), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8615 ;;Total ram usage:        6 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 4
  8618 ;; This function calls:
  8619 ;;		_fullSpeedAhead
  8620 ;;		_stop
  8621 ;; This function is called by:
  8622 ;;		_ReverseYellow
  8623 ;;		_ReversePink
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text37
  8628   00578C                     __ptext37:
  8629                           	callstack 0
  8630   00578C                     _ForwardOneBlock:
  8631                           	callstack 24
  8632   00578C                     
  8633                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8634   00578C  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8635   005790  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8636   005794  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8637   005798  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8638   00579C  EC28  F029         	call	_fullSpeedAhead	;wreg free
  8639   0057A0                     
  8640                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8641   0057A0  0E56               	movlw	86
  8642   0057A2  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8643   0057A4  0E3A               	movlw	58
  8644   0057A6  6E1E               	movwf	??_ForwardOneBlock^0,c
  8645   0057A8  0EF4               	movlw	244
  8646   0057AA                     u5967:
  8647   0057AA  2EE8               	decfsz	wreg,f,c
  8648   0057AC  D7FE               	bra	u5967
  8649   0057AE  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8650   0057B0  D7FC               	bra	u5967
  8651   0057B2  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8652   0057B4  D7FA               	bra	u5967
  8653   0057B6                     
  8654                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8655   0057B6  0E61               	movlw	low _motorL
  8656   0057B8  6E14               	movwf	stop@mL^0,c
  8657   0057BA  0E01               	movlw	high _motorL
  8658   0057BC  6E15               	movwf	(stop@mL+1)^0,c
  8659   0057BE  0E58               	movlw	low _motorR
  8660   0057C0  6E16               	movwf	stop@mR^0,c
  8661   0057C2  0E01               	movlw	high _motorR
  8662   0057C4  6E17               	movwf	(stop@mR+1)^0,c
  8663   0057C6  ECBB  F029         	call	_stop	;wreg free
  8664                           
  8665                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8666   0057CA  0E05               	movlw	5
  8667   0057CC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8668   0057CE  0E0F               	movlw	15
  8669   0057D0  6E1E               	movwf	??_ForwardOneBlock^0,c
  8670   0057D2  0EF1               	movlw	241
  8671   0057D4                     u5977:
  8672   0057D4  2EE8               	decfsz	wreg,f,c
  8673   0057D6  D7FE               	bra	u5977
  8674   0057D8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8675   0057DA  D7FC               	bra	u5977
  8676   0057DC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8677   0057DE  D7FA               	bra	u5977
  8678   0057E0  F000               	nop	
  8679   0057E2  0012               	return		;funcret
  8680   0057E4                     __end_of_ForwardOneBlock:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _RedMove *****************
  8684 ;; Defined at:
  8685 ;;		line 262 in file "dc_motor.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8688 ;;		 -> motorL(9), 
  8689 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8690 ;;		 -> motorR(9), 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      void 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;Total ram usage:        4 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 5
  8709 ;; This function calls:
  8710 ;;		_reverseDetect
  8711 ;;		_turnRight45
  8712 ;; This function is called by:
  8713 ;;		_main
  8714 ;;		_go_Home
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           	psect	text38
  8719   005E48                     __ptext38:
  8720                           	callstack 0
  8721   005E48                     _RedMove:
  8722                           	callstack 24
  8723   005E48                     
  8724                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8725   005E48  0E61               	movlw	low _motorL
  8726   005E4A  6E1A               	movwf	reverseDetect@mL^0,c
  8727   005E4C  0E01               	movlw	high _motorL
  8728   005E4E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8729   005E50  0E58               	movlw	low _motorR
  8730   005E52  6E1C               	movwf	reverseDetect@mR^0,c
  8731   005E54  0E01               	movlw	high _motorR
  8732   005E56  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8733   005E58  EC6C  F02B         	call	_reverseDetect	;wreg free
  8734                           
  8735                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8736   005E5C  0E61               	movlw	low _motorL
  8737   005E5E  6E1A               	movwf	turnRight45@mL^0,c
  8738   005E60  0E01               	movlw	high _motorL
  8739   005E62  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8740   005E64  0E58               	movlw	low _motorR
  8741   005E66  6E1C               	movwf	turnRight45@mR^0,c
  8742   005E68  0E01               	movlw	high _motorR
  8743   005E6A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8744   005E6C  EC2E  F02E         	call	_turnRight45	;wreg free
  8745                           
  8746                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8747   005E70  0E61               	movlw	low _motorL
  8748   005E72  6E1A               	movwf	turnRight45@mL^0,c
  8749   005E74  0E01               	movlw	high _motorL
  8750   005E76  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8751   005E78  0E58               	movlw	low _motorR
  8752   005E7A  6E1C               	movwf	turnRight45@mR^0,c
  8753   005E7C  0E01               	movlw	high _motorR
  8754   005E7E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8755   005E80  EC2E  F02E         	call	_turnRight45	;wreg free
  8756   005E84  0012               	return		;funcret
  8757   005E86                     __end_of_RedMove:
  8758                           	callstack 0
  8759                           
  8760 ;; *************** function _OrangeMove *****************
  8761 ;; Defined at:
  8762 ;;		line 308 in file "dc_motor.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8765 ;;		 -> motorL(9), 
  8766 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8767 ;;		 -> motorR(9), 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8783 ;;Total ram usage:        4 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 5
  8786 ;; This function calls:
  8787 ;;		_reverseDetect
  8788 ;;		_turnRight45
  8789 ;; This function is called by:
  8790 ;;		_main
  8791 ;;		_go_Home
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text39
  8796   0058E4                     __ptext39:
  8797                           	callstack 0
  8798   0058E4                     _OrangeMove:
  8799                           	callstack 24
  8800   0058E4                     
  8801                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8802   0058E4  0E61               	movlw	low _motorL
  8803   0058E6  6E1A               	movwf	reverseDetect@mL^0,c
  8804   0058E8  0E01               	movlw	high _motorL
  8805   0058EA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8806   0058EC  0E58               	movlw	low _motorR
  8807   0058EE  6E1C               	movwf	reverseDetect@mR^0,c
  8808   0058F0  0E01               	movlw	high _motorR
  8809   0058F2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8810   0058F4  EC6C  F02B         	call	_reverseDetect	;wreg free
  8811                           
  8812                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8813   0058F8  0E61               	movlw	low _motorL
  8814   0058FA  6E1A               	movwf	turnRight45@mL^0,c
  8815   0058FC  0E01               	movlw	high _motorL
  8816   0058FE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8817   005900  0E58               	movlw	low _motorR
  8818   005902  6E1C               	movwf	turnRight45@mR^0,c
  8819   005904  0E01               	movlw	high _motorR
  8820   005906  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8821   005908  EC2E  F02E         	call	_turnRight45	;wreg free
  8822                           
  8823                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8824   00590C  0E61               	movlw	low _motorL
  8825   00590E  6E1A               	movwf	turnRight45@mL^0,c
  8826   005910  0E01               	movlw	high _motorL
  8827   005912  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8828   005914  0E58               	movlw	low _motorR
  8829   005916  6E1C               	movwf	turnRight45@mR^0,c
  8830   005918  0E01               	movlw	high _motorR
  8831   00591A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8832   00591C  EC2E  F02E         	call	_turnRight45	;wreg free
  8833                           
  8834                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8835   005920  0E61               	movlw	low _motorL
  8836   005922  6E1A               	movwf	turnRight45@mL^0,c
  8837   005924  0E01               	movlw	high _motorL
  8838   005926  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8839   005928  0E58               	movlw	low _motorR
  8840   00592A  6E1C               	movwf	turnRight45@mR^0,c
  8841   00592C  0E01               	movlw	high _motorR
  8842   00592E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8843   005930  EC2E  F02E         	call	_turnRight45	;wreg free
  8844   005934  0012               	return		;funcret
  8845   005936                     __end_of_OrangeMove:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _LightBlueMove *****************
  8849 ;; Defined at:
  8850 ;;		line 317 in file "dc_motor.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8853 ;;		 -> motorL(9), 
  8854 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8855 ;;		 -> motorR(9), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;Total ram usage:        4 bytes
  8872 ;; Hardware stack levels used: 1
  8873 ;; Hardware stack levels required when called: 5
  8874 ;; This function calls:
  8875 ;;		_reverseDetect
  8876 ;;		_turnLeft45
  8877 ;; This function is called by:
  8878 ;;		_main
  8879 ;;		_go_Home
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text40
  8884   005936                     __ptext40:
  8885                           	callstack 0
  8886   005936                     _LightBlueMove:
  8887                           	callstack 24
  8888   005936                     
  8889                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8890   005936  0E61               	movlw	low _motorL
  8891   005938  6E1A               	movwf	reverseDetect@mL^0,c
  8892   00593A  0E01               	movlw	high _motorL
  8893   00593C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8894   00593E  0E58               	movlw	low _motorR
  8895   005940  6E1C               	movwf	reverseDetect@mR^0,c
  8896   005942  0E01               	movlw	high _motorR
  8897   005944  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8898   005946  EC6C  F02B         	call	_reverseDetect	;wreg free
  8899                           
  8900                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8901   00594A  0E61               	movlw	low _motorL
  8902   00594C  6E1A               	movwf	turnLeft45@mL^0,c
  8903   00594E  0E01               	movlw	high _motorL
  8904   005950  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8905   005952  0E58               	movlw	low _motorR
  8906   005954  6E1C               	movwf	turnLeft45@mR^0,c
  8907   005956  0E01               	movlw	high _motorR
  8908   005958  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8909   00595A  EC55  F02E         	call	_turnLeft45	;wreg free
  8910                           
  8911                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8912   00595E  0E61               	movlw	low _motorL
  8913   005960  6E1A               	movwf	turnLeft45@mL^0,c
  8914   005962  0E01               	movlw	high _motorL
  8915   005964  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8916   005966  0E58               	movlw	low _motorR
  8917   005968  6E1C               	movwf	turnLeft45@mR^0,c
  8918   00596A  0E01               	movlw	high _motorR
  8919   00596C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8920   00596E  EC55  F02E         	call	_turnLeft45	;wreg free
  8921                           
  8922                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8923   005972  0E61               	movlw	low _motorL
  8924   005974  6E1A               	movwf	turnLeft45@mL^0,c
  8925   005976  0E01               	movlw	high _motorL
  8926   005978  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8927   00597A  0E58               	movlw	low _motorR
  8928   00597C  6E1C               	movwf	turnLeft45@mR^0,c
  8929   00597E  0E01               	movlw	high _motorR
  8930   005980  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8931   005982  EC55  F02E         	call	_turnLeft45	;wreg free
  8932   005986  0012               	return		;funcret
  8933   005988                     __end_of_LightBlueMove:
  8934                           	callstack 0
  8935                           
  8936 ;; *************** function _GreenMove *****************
  8937 ;; Defined at:
  8938 ;;		line 270 in file "dc_motor.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8941 ;;		 -> motorL(9), 
  8942 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8943 ;;		 -> motorR(9), 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;Total ram usage:        4 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 5
  8962 ;; This function calls:
  8963 ;;		_reverseDetect
  8964 ;;		_turnLeft45
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;;		_go_Home
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text41
  8972   005E86                     __ptext41:
  8973                           	callstack 0
  8974   005E86                     _GreenMove:
  8975                           	callstack 24
  8976   005E86                     
  8977                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  8978   005E86  0E61               	movlw	low _motorL
  8979   005E88  6E1A               	movwf	reverseDetect@mL^0,c
  8980   005E8A  0E01               	movlw	high _motorL
  8981   005E8C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8982   005E8E  0E58               	movlw	low _motorR
  8983   005E90  6E1C               	movwf	reverseDetect@mR^0,c
  8984   005E92  0E01               	movlw	high _motorR
  8985   005E94  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8986   005E96  EC6C  F02B         	call	_reverseDetect	;wreg free
  8987                           
  8988                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  8989   005E9A  0E61               	movlw	low _motorL
  8990   005E9C  6E1A               	movwf	turnLeft45@mL^0,c
  8991   005E9E  0E01               	movlw	high _motorL
  8992   005EA0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8993   005EA2  0E58               	movlw	low _motorR
  8994   005EA4  6E1C               	movwf	turnLeft45@mR^0,c
  8995   005EA6  0E01               	movlw	high _motorR
  8996   005EA8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8997   005EAA  EC55  F02E         	call	_turnLeft45	;wreg free
  8998                           
  8999                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9000   005EAE  0E61               	movlw	low _motorL
  9001   005EB0  6E1A               	movwf	turnLeft45@mL^0,c
  9002   005EB2  0E01               	movlw	high _motorL
  9003   005EB4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9004   005EB6  0E58               	movlw	low _motorR
  9005   005EB8  6E1C               	movwf	turnLeft45@mR^0,c
  9006   005EBA  0E01               	movlw	high _motorR
  9007   005EBC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9008   005EBE  EC55  F02E         	call	_turnLeft45	;wreg free
  9009   005EC2  0012               	return		;funcret
  9010   005EC4                     __end_of_GreenMove:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _BlueMove *****************
  9014 ;; Defined at:
  9015 ;;		line 278 in file "dc_motor.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9018 ;;		 -> motorL(9), 
  9019 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9020 ;;		 -> motorR(9), 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9036 ;;Total ram usage:        4 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 5
  9039 ;; This function calls:
  9040 ;;		_reverseDetect
  9041 ;;		_turnRight45
  9042 ;; This function is called by:
  9043 ;;		_main
  9044 ;;		_go_Home
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text42
  9049   0055B2                     __ptext42:
  9050                           	callstack 0
  9051   0055B2                     _BlueMove:
  9052                           	callstack 24
  9053   0055B2                     
  9054                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9055   0055B2  0E61               	movlw	low _motorL
  9056   0055B4  6E1A               	movwf	reverseDetect@mL^0,c
  9057   0055B6  0E01               	movlw	high _motorL
  9058   0055B8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9059   0055BA  0E58               	movlw	low _motorR
  9060   0055BC  6E1C               	movwf	reverseDetect@mR^0,c
  9061   0055BE  0E01               	movlw	high _motorR
  9062   0055C0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9063   0055C2  EC6C  F02B         	call	_reverseDetect	;wreg free
  9064                           
  9065                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9066   0055C6  0E61               	movlw	low _motorL
  9067   0055C8  6E1A               	movwf	turnRight45@mL^0,c
  9068   0055CA  0E01               	movlw	high _motorL
  9069   0055CC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9070   0055CE  0E58               	movlw	low _motorR
  9071   0055D0  6E1C               	movwf	turnRight45@mR^0,c
  9072   0055D2  0E01               	movlw	high _motorR
  9073   0055D4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9074   0055D6  EC2E  F02E         	call	_turnRight45	;wreg free
  9075                           
  9076                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9077   0055DA  0E61               	movlw	low _motorL
  9078   0055DC  6E1A               	movwf	turnRight45@mL^0,c
  9079   0055DE  0E01               	movlw	high _motorL
  9080   0055E0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9081   0055E2  0E58               	movlw	low _motorR
  9082   0055E4  6E1C               	movwf	turnRight45@mR^0,c
  9083   0055E6  0E01               	movlw	high _motorR
  9084   0055E8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9085   0055EA  EC2E  F02E         	call	_turnRight45	;wreg free
  9086                           
  9087                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9088   0055EE  0E61               	movlw	low _motorL
  9089   0055F0  6E1A               	movwf	turnRight45@mL^0,c
  9090   0055F2  0E01               	movlw	high _motorL
  9091   0055F4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9092   0055F6  0E58               	movlw	low _motorR
  9093   0055F8  6E1C               	movwf	turnRight45@mR^0,c
  9094   0055FA  0E01               	movlw	high _motorR
  9095   0055FC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9096   0055FE  EC2E  F02E         	call	_turnRight45	;wreg free
  9097                           
  9098                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9099   005602  0E61               	movlw	low _motorL
  9100   005604  6E1A               	movwf	turnRight45@mL^0,c
  9101   005606  0E01               	movlw	high _motorL
  9102   005608  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9103   00560A  0E58               	movlw	low _motorR
  9104   00560C  6E1C               	movwf	turnRight45@mR^0,c
  9105   00560E  0E01               	movlw	high _motorR
  9106   005610  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9107   005612  EC2E  F02E         	call	_turnRight45	;wreg free
  9108   005616  0012               	return		;funcret
  9109   005618                     __end_of_BlueMove:
  9110                           	callstack 0
  9111                           
  9112 ;; *************** function _getTMR0val *****************
  9113 ;; Defined at:
  9114 ;;		line 28 in file "timers.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;		None
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  moving          2    4[COMRAM] int 
  9119 ;;  temp            2    2[COMRAM] unsigned int 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;Total ram usage:        6 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 1
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_main
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text43
  9144   005618                     __ptext43:
  9145                           	callstack 0
  9146   005618                     _getTMR0val:
  9147                           	callstack 29
  9148   005618                     
  9149                           ;timers.c: 30:     unsigned int temp= TMR0L;
  9150   005618  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  9151   00561C  6A04               	clrf	(getTMR0val@temp+1)^0,c
  9152   00561E                     
  9153                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  9154   00561E  5003               	movf	getTMR0val@temp^0,w,c
  9155   005620  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  9156   005624  6A02               	clrf	(??_getTMR0val+1)^0,c
  9157   005626  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  9158   00562A  6A01               	clrf	??_getTMR0val^0,c
  9159   00562C  1001               	iorwf	??_getTMR0val^0,w,c
  9160   00562E  6E05               	movwf	getTMR0val@moving^0,c
  9161   005630  5002               	movf	(??_getTMR0val+1)^0,w,c
  9162   005632  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9163                           
  9164                           ;timers.c: 33:     if (moving>700){
  9165   005634  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  9166   005636  EF26  F02B         	goto	u5521
  9167   00563A  0EBD               	movlw	189
  9168   00563C  5C05               	subwf	getTMR0val@moving^0,w,c
  9169   00563E  0E02               	movlw	2
  9170   005640  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  9171   005642  A0D8               	btfss	status,0,c
  9172   005644  EF26  F02B         	goto	u5521
  9173   005648  EF28  F02B         	goto	u5520
  9174   00564C                     u5521:
  9175   00564C  EF2E  F02B         	goto	l5567
  9176   005650                     u5520:
  9177   005650                     
  9178                           ;timers.c: 34:         moving=moving-700;
  9179   005650  0E44               	movlw	68
  9180   005652  2405               	addwf	getTMR0val@moving^0,w,c
  9181   005654  6E05               	movwf	getTMR0val@moving^0,c
  9182   005656  0EFD               	movlw	253
  9183   005658  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  9184   00565A  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9185   00565C                     l5567:
  9186                           
  9187                           ;timers.c: 37:     Time_forward[move_count]=moving;
  9188   00565C  90D8               	bcf	status,0,c
  9189   00565E  0101               	movlb	1	; () banked
  9190   005660  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9191   005662  6ED9               	movwf	fsr2l,c
  9192   005664  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9193   005666  6EDA               	movwf	fsr2h,c
  9194   005668  0E3C               	movlw	low _Time_forward
  9195   00566A  26D9               	addwf	fsr2l,f,c
  9196   00566C  0E02               	movlw	high _Time_forward
  9197   00566E  22DA               	addwfc	fsr2h,f,c
  9198   005670  C005  FFDE         	movff	getTMR0val@moving,postinc2
  9199   005674  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  9200   005678                     
  9201                           ; BSR set to: 1
  9202   005678  0012               	return		;funcret
  9203   00567A                     __end_of_getTMR0val:
  9204                           	callstack 0
  9205                           
  9206 ;; *************** function _colour_rel *****************
  9207 ;; Defined at:
  9208 ;;		line 114 in file "color.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  vals            2   74[COMRAM] PTR struct RGB
  9211 ;;		 -> vals(8), 
  9212 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9213 ;;		 -> rel(12), 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  B               4   20[BANK0 ] float 
  9216 ;;  G               4   16[BANK0 ] float 
  9217 ;;  R               4   12[BANK0 ] float 
  9218 ;;  L               4    0[BANK0 ] float 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9229 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;Total ram usage:       28 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 2
  9235 ;; This function calls:
  9236 ;;		___fladd
  9237 ;;		___fldiv
  9238 ;;		___xxtofl
  9239 ;; This function is called by:
  9240 ;;		_main
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text44
  9245   003488                     __ptext44:
  9246                           	callstack 0
  9247   003488                     _colour_rel:
  9248                           	callstack 28
  9249   003488                     
  9250                           ;color.c: 115:     float R = vals->R;
  9251   003488  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9252   00348C  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9253   003490  CFDE F001          	movff	postinc2,___xxtofl@val
  9254   003494  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9255   003498  0E00               	movlw	0
  9256   00349A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9257   00349C  0EFF               	movlw	-1
  9258   00349E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9259   0034A0  6E04               	movwf	(___xxtofl@val+3)^0,c
  9260   0034A2  0E01               	movlw	1
  9261   0034A4  EC16  F021         	call	___xxtofl
  9262   0034A8  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9263   0034AC  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9264   0034B0  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9265   0034B4  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9266                           
  9267                           ;color.c: 116:     float G = vals->G;
  9268   0034B8  EE20 F002          	lfsr	2,2
  9269   0034BC  504B               	movf	colour_rel@vals^0,w,c
  9270   0034BE  26D9               	addwf	fsr2l,f,c
  9271   0034C0  504C               	movf	(colour_rel@vals+1)^0,w,c
  9272   0034C2  22DA               	addwfc	fsr2h,f,c
  9273   0034C4  CFDE F001          	movff	postinc2,___xxtofl@val
  9274   0034C8  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9275   0034CC  0E00               	movlw	0
  9276   0034CE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9277   0034D0  0EFF               	movlw	-1
  9278   0034D2  6E03               	movwf	(___xxtofl@val+2)^0,c
  9279   0034D4  6E04               	movwf	(___xxtofl@val+3)^0,c
  9280   0034D6  0E01               	movlw	1
  9281   0034D8  EC16  F021         	call	___xxtofl
  9282   0034DC  C001  F070         	movff	?___xxtofl,colour_rel@G
  9283   0034E0  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9284   0034E4  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9285   0034E8  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9286                           
  9287                           ;color.c: 117:     float B = vals->B;
  9288   0034EC  EE20 F004          	lfsr	2,4
  9289   0034F0  504B               	movf	colour_rel@vals^0,w,c
  9290   0034F2  26D9               	addwf	fsr2l,f,c
  9291   0034F4  504C               	movf	(colour_rel@vals+1)^0,w,c
  9292   0034F6  22DA               	addwfc	fsr2h,f,c
  9293   0034F8  CFDE F001          	movff	postinc2,___xxtofl@val
  9294   0034FC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9295   003500  0E00               	movlw	0
  9296   003502  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9297   003504  0EFF               	movlw	-1
  9298   003506  6E03               	movwf	(___xxtofl@val+2)^0,c
  9299   003508  6E04               	movwf	(___xxtofl@val+3)^0,c
  9300   00350A  0E01               	movlw	1
  9301   00350C  EC16  F021         	call	___xxtofl
  9302   003510  C001  F074         	movff	?___xxtofl,colour_rel@B
  9303   003514  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9304   003518  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9305   00351C  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9306                           
  9307                           ;color.c: 118:     float L = vals->L;
  9308   003520  EE20 F006          	lfsr	2,6
  9309   003524  504B               	movf	colour_rel@vals^0,w,c
  9310   003526  26D9               	addwf	fsr2l,f,c
  9311   003528  504C               	movf	(colour_rel@vals+1)^0,w,c
  9312   00352A  22DA               	addwfc	fsr2h,f,c
  9313   00352C  CFDE F001          	movff	postinc2,___xxtofl@val
  9314   003530  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9315   003534  0E00               	movlw	0
  9316   003536  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9317   003538  0EFF               	movlw	-1
  9318   00353A  6E03               	movwf	(___xxtofl@val+2)^0,c
  9319   00353C  6E04               	movwf	(___xxtofl@val+3)^0,c
  9320   00353E  0E01               	movlw	1
  9321   003540  EC16  F021         	call	___xxtofl
  9322   003544  C001  F060         	movff	?___xxtofl,colour_rel@L
  9323   003548  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9324   00354C  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9325   003550  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9326   003554                     
  9327                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9328   003554  C070  F005         	movff	colour_rel@G,___fladd@a
  9329   003558  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9330   00355C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9331   003560  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9332   003564  C06C  F001         	movff	colour_rel@R,___fladd@b
  9333   003568  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9334   00356C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9335   003570  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9336   003574  EC02  F014         	call	___fladd	;wreg free
  9337   003578  C001  F064         	movff	?___fladd,_colour_rel$3203
  9338   00357C  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9339   003580  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9340   003584  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9341   003588                     
  9342                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9343   003588  C074  F005         	movff	colour_rel@B,___fladd@a
  9344   00358C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9345   003590  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9346   003594  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9347   003598  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9348   00359C  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9349   0035A0  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9350   0035A4  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9351   0035A8  EC02  F014         	call	___fladd	;wreg free
  9352   0035AC  C001  F068         	movff	?___fladd,_colour_rel$3204
  9353   0035B0  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9354   0035B4  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9355   0035B8  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9356                           
  9357                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9358   0035BC  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9359   0035C0  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9360   0035C4  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9361   0035C8  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9362   0035CC  C060  F005         	movff	colour_rel@L,___fladd@a
  9363   0035D0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9364   0035D4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9365   0035D8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9366   0035DC  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9367   0035E0  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9368   0035E4  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9369   0035E8  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9370   0035EC  EC02  F014         	call	___fladd	;wreg free
  9371   0035F0  C001  F036         	movff	?___fladd,___fldiv@a
  9372   0035F4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9373   0035F8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9374   0035FC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9375   003600  EC77  F018         	call	___fldiv	;wreg free
  9376   003604  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9377   003608  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9378   00360C  C032  FFDE         	movff	?___fldiv,postinc2
  9379   003610  C033  FFDE         	movff	?___fldiv+1,postinc2
  9380   003614  C034  FFDE         	movff	?___fldiv+2,postinc2
  9381   003618  C035  FFDE         	movff	?___fldiv+3,postinc2
  9382   00361C                     
  9383                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9384   00361C  C070  F005         	movff	colour_rel@G,___fladd@a
  9385   003620  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9386   003624  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9387   003628  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9388   00362C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9389   003630  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9390   003634  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9391   003638  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9392   00363C  EC02  F014         	call	___fladd	;wreg free
  9393   003640  C001  F064         	movff	?___fladd,_colour_rel$3203
  9394   003644  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9395   003648  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9396   00364C  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9397   003650                     
  9398                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9399   003650  C074  F005         	movff	colour_rel@B,___fladd@a
  9400   003654  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9401   003658  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9402   00365C  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9403   003660  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9404   003664  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9405   003668  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9406   00366C  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9407   003670  EC02  F014         	call	___fladd	;wreg free
  9408   003674  C001  F068         	movff	?___fladd,_colour_rel$3204
  9409   003678  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9410   00367C  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9411   003680  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9412                           
  9413                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9414   003684  C074  F032         	movff	colour_rel@B,___fldiv@b
  9415   003688  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9416   00368C  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9417   003690  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9418   003694  C060  F005         	movff	colour_rel@L,___fladd@a
  9419   003698  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9420   00369C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9421   0036A0  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9422   0036A4  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9423   0036A8  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9424   0036AC  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9425   0036B0  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9426   0036B4  EC02  F014         	call	___fladd	;wreg free
  9427   0036B8  C001  F036         	movff	?___fladd,___fldiv@a
  9428   0036BC  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9429   0036C0  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9430   0036C4  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9431   0036C8  EC77  F018         	call	___fldiv	;wreg free
  9432   0036CC  EE20 F008          	lfsr	2,8
  9433   0036D0  504D               	movf	colour_rel@rel^0,w,c
  9434   0036D2  26D9               	addwf	fsr2l,f,c
  9435   0036D4  504E               	movf	(colour_rel@rel+1)^0,w,c
  9436   0036D6  22DA               	addwfc	fsr2h,f,c
  9437   0036D8  C032  FFDE         	movff	?___fldiv,postinc2
  9438   0036DC  C033  FFDE         	movff	?___fldiv+1,postinc2
  9439   0036E0  C034  FFDE         	movff	?___fldiv+2,postinc2
  9440   0036E4  C035  FFDE         	movff	?___fldiv+3,postinc2
  9441   0036E8                     
  9442                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9443   0036E8  C070  F005         	movff	colour_rel@G,___fladd@a
  9444   0036EC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9445   0036F0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9446   0036F4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9447   0036F8  C06C  F001         	movff	colour_rel@R,___fladd@b
  9448   0036FC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9449   003700  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9450   003704  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9451   003708  EC02  F014         	call	___fladd	;wreg free
  9452   00370C  C001  F064         	movff	?___fladd,_colour_rel$3203
  9453   003710  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9454   003714  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9455   003718  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9456   00371C                     
  9457                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9458   00371C  C074  F005         	movff	colour_rel@B,___fladd@a
  9459   003720  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9460   003724  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9461   003728  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9462   00372C  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9463   003730  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9464   003734  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9465   003738  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9466   00373C  EC02  F014         	call	___fladd	;wreg free
  9467   003740  C001  F068         	movff	?___fladd,_colour_rel$3204
  9468   003744  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9469   003748  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9470   00374C  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9471                           
  9472                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9473   003750  C070  F032         	movff	colour_rel@G,___fldiv@b
  9474   003754  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9475   003758  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9476   00375C  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9477   003760  C060  F005         	movff	colour_rel@L,___fladd@a
  9478   003764  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9479   003768  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9480   00376C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9481   003770  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9482   003774  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9483   003778  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9484   00377C  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9485   003780  EC02  F014         	call	___fladd	;wreg free
  9486   003784  C001  F036         	movff	?___fladd,___fldiv@a
  9487   003788  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9488   00378C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9489   003790  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9490   003794  EC77  F018         	call	___fldiv	;wreg free
  9491   003798  EE20 F004          	lfsr	2,4
  9492   00379C  504D               	movf	colour_rel@rel^0,w,c
  9493   00379E  26D9               	addwf	fsr2l,f,c
  9494   0037A0  504E               	movf	(colour_rel@rel+1)^0,w,c
  9495   0037A2  22DA               	addwfc	fsr2h,f,c
  9496   0037A4  C032  FFDE         	movff	?___fldiv,postinc2
  9497   0037A8  C033  FFDE         	movff	?___fldiv+1,postinc2
  9498   0037AC  C034  FFDE         	movff	?___fldiv+2,postinc2
  9499   0037B0  C035  FFDE         	movff	?___fldiv+3,postinc2
  9500   0037B4  0012               	return		;funcret
  9501   0037B6                     __end_of_colour_rel:
  9502                           	callstack 0
  9503                           
  9504 ;; *************** function _color_click_init *****************
  9505 ;; Defined at:
  9506 ;;		line 7 in file "color.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, status,0, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;Total ram usage:        1 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; Hardware stack levels required when called: 4
  9527 ;; This function calls:
  9528 ;;		_I2C_2_Master_Init
  9529 ;;		_color_writetoaddr
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text45
  9536   005988                     __ptext45:
  9537                           	callstack 0
  9538   005988                     _color_click_init:
  9539                           	callstack 26
  9540   005988                     
  9541                           ;color.c: 10:     I2C_2_Master_Init();
  9542   005988  ECCD  F02F         	call	_I2C_2_Master_Init	;wreg free
  9543   00598C                     
  9544                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9545   00598C  0E01               	movlw	1
  9546   00598E  6E03               	movwf	color_writetoaddr@value^0,c
  9547   005990  0E00               	movlw	0
  9548   005992  EC09  F030         	call	_color_writetoaddr
  9549   005996                     
  9550                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9551   005996  0E3F               	movlw	63
  9552   005998  6E05               	movwf	??_color_click_init^0,c
  9553   00599A  0E55               	movlw	85
  9554   00599C                     u5987:
  9555   00599C  2EE8               	decfsz	wreg,f,c
  9556   00599E  D7FE               	bra	u5987
  9557   0059A0  2E05               	decfsz	??_color_click_init^0,f,c
  9558   0059A2  D7FC               	bra	u5987
  9559   0059A4  F000               	nop	
  9560   0059A6                     
  9561                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9562   0059A6  0E03               	movlw	3
  9563   0059A8  6E03               	movwf	color_writetoaddr@value^0,c
  9564   0059AA  0E00               	movlw	0
  9565   0059AC  EC09  F030         	call	_color_writetoaddr
  9566   0059B0                     
  9567                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9568   0059B0  0ED5               	movlw	213
  9569   0059B2  6E03               	movwf	color_writetoaddr@value^0,c
  9570   0059B4  0E01               	movlw	1
  9571   0059B6  EC09  F030         	call	_color_writetoaddr
  9572   0059BA                     
  9573                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9574   0059BA  0E00               	movlw	0
  9575   0059BC  6E03               	movwf	color_writetoaddr@value^0,c
  9576   0059BE  0E0F               	movlw	15
  9577   0059C0  EC09  F030         	call	_color_writetoaddr
  9578   0059C4                     
  9579                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9580   0059C4  9287               	bcf	135,1,c	;volatile
  9581   0059C6                     
  9582                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9583   0059C6  9881               	bcf	129,4,c	;volatile
  9584   0059C8                     
  9585                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9586   0059C8  9E86               	bcf	134,7,c	;volatile
  9587   0059CA                     
  9588                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9589   0059CA  9684               	bcf	132,3,c	;volatile
  9590   0059CC                     
  9591                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9592   0059CC  9884               	bcf	132,4,c	;volatile
  9593   0059CE                     
  9594                           ;color.c: 28:     LATGbits.LATG1=0;
  9595   0059CE  927F               	bcf	127,1,c	;volatile
  9596   0059D0                     
  9597                           ;color.c: 29:     LATFbits.LATF7=0;
  9598   0059D0  9E7E               	bcf	126,7,c	;volatile
  9599   0059D2                     
  9600                           ;color.c: 30:     LATAbits.LATA4=0;
  9601   0059D2  9879               	bcf	121,4,c	;volatile
  9602   0059D4                     
  9603                           ;color.c: 32:     LATDbits.LATD3=0;
  9604   0059D4  967C               	bcf	124,3,c	;volatile
  9605   0059D6                     
  9606                           ;color.c: 33:     LATDbits.LATD4=0;
  9607   0059D6  987C               	bcf	124,4,c	;volatile
  9608   0059D8  0012               	return		;funcret
  9609   0059DA                     __end_of_color_click_init:
  9610                           	callstack 0
  9611                           
  9612 ;; *************** function _color_writetoaddr *****************
  9613 ;; Defined at:
  9614 ;;		line 41 in file "color.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  address         1    wreg     unsigned char 
  9617 ;;  value           1    2[COMRAM] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  address         1    3[COMRAM] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        2 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 3
  9636 ;; This function calls:
  9637 ;;		_I2C_2_Master_Start
  9638 ;;		_I2C_2_Master_Stop
  9639 ;;		_I2C_2_Master_Write
  9640 ;; This function is called by:
  9641 ;;		_color_click_init
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text46
  9646   006012                     __ptext46:
  9647                           	callstack 0
  9648   006012                     _color_writetoaddr:
  9649                           	callstack 26
  9650                           
  9651                           ;incstack = 0
  9652                           ;color_writetoaddr@address stored from wreg
  9653   006012  6E04               	movwf	color_writetoaddr@address^0,c
  9654   006014                     
  9655                           ;color.c: 42:     I2C_2_Master_Start();
  9656   006014  EC5A  F030         	call	_I2C_2_Master_Start	;wreg free
  9657                           
  9658                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9659   006018  0E52               	movlw	82
  9660   00601A  EC44  F030         	call	_I2C_2_Master_Write
  9661                           
  9662                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9663   00601E  5004               	movf	color_writetoaddr@address^0,w,c
  9664   006020  0980               	iorlw	128
  9665   006022  EC44  F030         	call	_I2C_2_Master_Write
  9666                           
  9667                           ;color.c: 45:     I2C_2_Master_Write(value);
  9668   006026  5003               	movf	color_writetoaddr@value^0,w,c
  9669   006028  EC44  F030         	call	_I2C_2_Master_Write
  9670                           
  9671                           ;color.c: 46:     I2C_2_Master_Stop();
  9672   00602C  EC55  F030         	call	_I2C_2_Master_Stop	;wreg free
  9673   006030  0012               	return		;funcret
  9674   006032                     __end_of_color_writetoaddr:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function _I2C_2_Master_Write *****************
  9678 ;; Defined at:
  9679 ;;		line 45 in file "i2c.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  data_byte       1    wreg     unsigned char 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  data_byte       1    1[COMRAM] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 2
  9700 ;; This function calls:
  9701 ;;		_I2C_2_Master_Idle
  9702 ;; This function is called by:
  9703 ;;		_color_writetoaddr
  9704 ;;		_color_read_lum
  9705 ;;		_color_read_Red
  9706 ;;		_color_read_Green
  9707 ;;		_color_read_Blue
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text47
  9712   006088                     __ptext47:
  9713                           	callstack 0
  9714   006088                     _I2C_2_Master_Write:
  9715                           	callstack 26
  9716                           
  9717                           ;incstack = 0
  9718                           ;I2C_2_Master_Write@data_byte stored from wreg
  9719   006088  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9720   00608A                     
  9721                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9722   00608A  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9723   00608E                     
  9724                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9725   00608E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9726   006092  0012               	return		;funcret
  9727   006094                     __end_of_I2C_2_Master_Write:
  9728                           	callstack 0
  9729                           
  9730 ;; *************** function _I2C_2_Master_Stop *****************
  9731 ;; Defined at:
  9732 ;;		line 39 in file "i2c.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9750 ;;Total ram usage:        0 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 2
  9753 ;; This function calls:
  9754 ;;		_I2C_2_Master_Idle
  9755 ;; This function is called by:
  9756 ;;		_color_writetoaddr
  9757 ;;		_color_read_lum
  9758 ;;		_color_read_Red
  9759 ;;		_color_read_Green
  9760 ;;		_color_read_Blue
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text48
  9765   0060AA                     __ptext48:
  9766                           	callstack 0
  9767   0060AA                     _I2C_2_Master_Stop:
  9768                           	callstack 26
  9769   0060AA                     
  9770                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9771   0060AA  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9772   0060AE                     
  9773                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9774   0060AE  010E               	movlb	14	; () banked
  9775   0060B0  85DA               	bsf	218,2,b	;volatile
  9776   0060B2                     
  9777                           ; BSR set to: 14
  9778   0060B2  0012               	return		;funcret
  9779   0060B4                     __end_of_I2C_2_Master_Stop:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _I2C_2_Master_Start *****************
  9783 ;; Defined at:
  9784 ;;		line 27 in file "i2c.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;		None
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;Total ram usage:        0 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 2
  9805 ;; This function calls:
  9806 ;;		_I2C_2_Master_Idle
  9807 ;; This function is called by:
  9808 ;;		_color_writetoaddr
  9809 ;;		_color_read_lum
  9810 ;;		_color_read_Red
  9811 ;;		_color_read_Green
  9812 ;;		_color_read_Blue
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text49
  9817   0060B4                     __ptext49:
  9818                           	callstack 0
  9819   0060B4                     _I2C_2_Master_Start:
  9820                           	callstack 26
  9821   0060B4                     
  9822                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9823   0060B4  ECE2  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9824   0060B8                     
  9825                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9826   0060B8  010E               	movlb	14	; () banked
  9827   0060BA  81DA               	bsf	218,0,b	;volatile
  9828   0060BC                     
  9829                           ; BSR set to: 14
  9830   0060BC  0012               	return		;funcret
  9831   0060BE                     __end_of_I2C_2_Master_Start:
  9832                           	callstack 0
  9833                           
  9834 ;; *************** function _I2C_2_Master_Idle *****************
  9835 ;; Defined at:
  9836 ;;		line 22 in file "i2c.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;		None
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;		None
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  1    wreg      void 
  9843 ;; Registers used:
  9844 ;;		wreg, status,2, status,0
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9854 ;;Total ram usage:        1 bytes
  9855 ;; Hardware stack levels used: 1
  9856 ;; Hardware stack levels required when called: 1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_I2C_2_Master_Start
  9861 ;;		_I2C_2_Master_RepStart
  9862 ;;		_I2C_2_Master_Stop
  9863 ;;		_I2C_2_Master_Write
  9864 ;;		_I2C_2_Master_Read
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text50
  9869   005FC4                     __ptext50:
  9870                           	callstack 0
  9871   005FC4                     _I2C_2_Master_Idle:
  9872                           	callstack 26
  9873   005FC4                     l133:
  9874   005FC4  010E               	movlb	14	; () banked
  9875   005FC6  B5D8               	btfsc	216,2,b	;volatile
  9876   005FC8  EFE8  F02F         	goto	u4361
  9877   005FCC  EFEA  F02F         	goto	u4360
  9878   005FD0                     u4361:
  9879   005FD0  EFE2  F02F         	goto	l133
  9880   005FD4                     u4360:
  9881   005FD4                     
  9882                           ; BSR set to: 14
  9883   005FD4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9884   005FD8  0E1F               	movlw	31
  9885   005FDA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9886   005FDC  A4D8               	btfss	status,2,c
  9887   005FDE  EFF3  F02F         	goto	u4371
  9888   005FE2  EFF5  F02F         	goto	u4370
  9889   005FE6                     u4371:
  9890   005FE6  EFE2  F02F         	goto	l133
  9891   005FEA                     u4370:
  9892   005FEA                     
  9893                           ; BSR set to: 14
  9894   005FEA  0012               	return		;funcret
  9895   005FEC                     __end_of_I2C_2_Master_Idle:
  9896                           	callstack 0
  9897                           
  9898 ;; *************** function _I2C_2_Master_Init *****************
  9899 ;; Defined at:
  9900 ;;		line 4 in file "i2c.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used: 1
  9920 ;; Hardware stack levels required when called: 1
  9921 ;; This function calls:
  9922 ;;		Nothing
  9923 ;; This function is called by:
  9924 ;;		_color_click_init
  9925 ;;		_main
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text51
  9930   005F9A                     __ptext51:
  9931                           	callstack 0
  9932   005F9A                     _I2C_2_Master_Init:
  9933                           	callstack 28
  9934   005F9A                     
  9935                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9936   005F9A  010E               	movlb	14	; () banked
  9937   005F9C  51D9               	movf	217,w,b	;volatile
  9938   005F9E  0BF0               	andlw	-16
  9939   005FA0  0908               	iorlw	8
  9940   005FA2  6FD9               	movwf	217,b	;volatile
  9941   005FA4                     
  9942                           ; BSR set to: 14
  9943                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9944   005FA4  8BD9               	bsf	217,5,b	;volatile
  9945                           
  9946                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9947   005FA6  0E9F               	movlw	159
  9948   005FA8  6FD6               	movwf	214,b	;volatile
  9949   005FAA                     
  9950                           ; BSR set to: 14
  9951                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9952   005FAA  8A84               	bsf	132,5,c	;volatile
  9953   005FAC                     
  9954                           ; BSR set to: 14
  9955                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9956   005FAC  8C84               	bsf	132,6,c	;volatile
  9957   005FAE                     
  9958                           ; BSR set to: 14
  9959                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9960   005FAE  9BA7               	bcf	167,5,b	;volatile
  9961   005FB0                     
  9962                           ; BSR set to: 14
  9963                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9964   005FB0  9DA7               	bcf	167,6,b	;volatile
  9965                           
  9966                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9967   005FB2  0E1D               	movlw	29
  9968   005FB4  6F1D               	movwf	29,b	;volatile
  9969                           
  9970                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9971   005FB6  0E1E               	movlw	30
  9972   005FB8  6F1C               	movwf	28,b	;volatile
  9973                           
  9974                           ;i2c.c: 18:   RD5PPS=0x1C;
  9975   005FBA  0E1C               	movlw	28
  9976   005FBC  6F6F               	movwf	111,b	;volatile
  9977                           
  9978                           ;i2c.c: 19:   RD6PPS=0x1B;
  9979   005FBE  0E1B               	movlw	27
  9980   005FC0  6F70               	movwf	112,b	;volatile
  9981   005FC2                     
  9982                           ; BSR set to: 14
  9983   005FC2  0012               	return		;funcret
  9984   005FC4                     __end_of_I2C_2_Master_Init:
  9985                           	callstack 0
  9986                           
  9987 ;; *************** function _YellowMove *****************
  9988 ;; Defined at:
  9989 ;;		line 288 in file "dc_motor.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9992 ;;		 -> motorL(9), 
  9993 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9994 ;;		 -> motorR(9), 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  1    wreg      void 
  9999 ;; Registers used:
 10000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;Total ram usage:        4 bytes
 10011 ;; Hardware stack levels used: 1
 10012 ;; Hardware stack levels required when called: 5
 10013 ;; This function calls:
 10014 ;;		_reverseDetect
 10015 ;;		_reverseOneBlock
 10016 ;;		_turnRight45
 10017 ;; This function is called by:
 10018 ;;		_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text52
 10023   0059DA                     __ptext52:
 10024                           	callstack 0
 10025   0059DA                     _YellowMove:
 10026                           	callstack 25
 10027   0059DA                     
 10028                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10029   0059DA  0E61               	movlw	low _motorL
 10030   0059DC  6E1A               	movwf	reverseDetect@mL^0,c
 10031   0059DE  0E01               	movlw	high _motorL
 10032   0059E0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10033   0059E2  0E58               	movlw	low _motorR
 10034   0059E4  6E1C               	movwf	reverseDetect@mR^0,c
 10035   0059E6  0E01               	movlw	high _motorR
 10036   0059E8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10037   0059EA  EC6C  F02B         	call	_reverseDetect	;wreg free
 10038                           
 10039                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10040   0059EE  0E61               	movlw	low _motorL
 10041   0059F0  6E1A               	movwf	reverseOneBlock@mL^0,c
 10042   0059F2  0E01               	movlw	high _motorL
 10043   0059F4  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10044   0059F6  0E58               	movlw	low _motorR
 10045   0059F8  6E1C               	movwf	reverseOneBlock@mR^0,c
 10046   0059FA  0E01               	movlw	high _motorR
 10047   0059FC  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10048   0059FE  ECF2  F02B         	call	_reverseOneBlock	;wreg free
 10049                           
 10050                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10051   005A02  0E61               	movlw	low _motorL
 10052   005A04  6E1A               	movwf	turnRight45@mL^0,c
 10053   005A06  0E01               	movlw	high _motorL
 10054   005A08  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10055   005A0A  0E58               	movlw	low _motorR
 10056   005A0C  6E1C               	movwf	turnRight45@mR^0,c
 10057   005A0E  0E01               	movlw	high _motorR
 10058   005A10  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10059   005A12  EC2E  F02E         	call	_turnRight45	;wreg free
 10060                           
 10061                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10062   005A16  0E61               	movlw	low _motorL
 10063   005A18  6E1A               	movwf	turnRight45@mL^0,c
 10064   005A1A  0E01               	movlw	high _motorL
 10065   005A1C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10066   005A1E  0E58               	movlw	low _motorR
 10067   005A20  6E1C               	movwf	turnRight45@mR^0,c
 10068   005A22  0E01               	movlw	high _motorR
 10069   005A24  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10070   005A26  EC2E  F02E         	call	_turnRight45	;wreg free
 10071   005A2A  0012               	return		;funcret
 10072   005A2C                     __end_of_YellowMove:
 10073                           	callstack 0
 10074                           
 10075 ;; *************** function _turnRight45 *****************
 10076 ;; Defined at:
 10077 ;;		line 211 in file "dc_motor.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10080 ;;		 -> motorL(9), 
 10081 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10082 ;;		 -> motorR(9), 
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10098 ;;Total ram usage:        6 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 4
 10101 ;; This function calls:
 10102 ;;		_TurnDelay
 10103 ;;		_stop
 10104 ;;		_turnRight
 10105 ;; This function is called by:
 10106 ;;		_RedMove
 10107 ;;		_BlueMove
 10108 ;;		_YellowMove
 10109 ;;		_OrangeMove
 10110 ;;		_ReverseYellow
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text53
 10115   005C5C                     __ptext53:
 10116                           	callstack 0
 10117   005C5C                     _turnRight45:
 10118                           	callstack 24
 10119   005C5C                     
 10120                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10121   005C5C  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10122   005C60  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10123   005C64  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10124   005C68  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10125   005C6C  EC3B  F028         	call	_turnRight	;wreg free
 10126   005C70                     
 10127                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10128   005C70  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10129   005C74  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10130   005C78  EC9A  F02F         	call	_TurnDelay	;wreg free
 10131   005C7C                     
 10132                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10133   005C7C  0E61               	movlw	low _motorL
 10134   005C7E  6E14               	movwf	stop@mL^0,c
 10135   005C80  0E01               	movlw	high _motorL
 10136   005C82  6E15               	movwf	(stop@mL+1)^0,c
 10137   005C84  0E58               	movlw	low _motorR
 10138   005C86  6E16               	movwf	stop@mR^0,c
 10139   005C88  0E01               	movlw	high _motorR
 10140   005C8A  6E17               	movwf	(stop@mR+1)^0,c
 10141   005C8C  ECBB  F029         	call	_stop	;wreg free
 10142   005C90                     
 10143                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10144   005C90  0E05               	movlw	5
 10145   005C92  6E1F               	movwf	(??_turnRight45+1)^0,c
 10146   005C94  0E0F               	movlw	15
 10147   005C96  6E1E               	movwf	??_turnRight45^0,c
 10148   005C98  0EF1               	movlw	241
 10149   005C9A                     u5997:
 10150   005C9A  2EE8               	decfsz	wreg,f,c
 10151   005C9C  D7FE               	bra	u5997
 10152   005C9E  2E1E               	decfsz	??_turnRight45^0,f,c
 10153   005CA0  D7FC               	bra	u5997
 10154   005CA2  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10155   005CA4  D7FA               	bra	u5997
 10156   005CA6  F000               	nop	
 10157   005CA8  0012               	return		;funcret
 10158   005CAA                     __end_of_turnRight45:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _turnRight *****************
 10162 ;; Defined at:
 10163 ;;		line 129 in file "dc_motor.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10166 ;;		 -> motorL(9), 
 10167 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10168 ;;		 -> motorR(9), 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      void 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10184 ;;Total ram usage:        6 bytes
 10185 ;; Hardware stack levels used: 1
 10186 ;; Hardware stack levels required when called: 3
 10187 ;; This function calls:
 10188 ;;		_setMotorPWM
 10189 ;; This function is called by:
 10190 ;;		_turnRight45
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text54
 10195   005076                     __ptext54:
 10196                           	callstack 0
 10197   005076                     _turnRight:
 10198                           	callstack 24
 10199   005076                     
 10200                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10201   005076  EE20 F001          	lfsr	2,1
 10202   00507A  5014               	movf	turnRight@mL^0,w,c
 10203   00507C  26D9               	addwf	fsr2l,f,c
 10204   00507E  5015               	movf	(turnRight@mL+1)^0,w,c
 10205   005080  22DA               	addwfc	fsr2h,f,c
 10206   005082  0E01               	movlw	1
 10207   005084  6EDF               	movwf	indf2,c
 10208                           
 10209                           ;dc_motor.c: 132:     mR->direction =0;
 10210   005086  EE20 F001          	lfsr	2,1
 10211   00508A  5016               	movf	turnRight@mR^0,w,c
 10212   00508C  26D9               	addwf	fsr2l,f,c
 10213   00508E  5017               	movf	(turnRight@mR+1)^0,w,c
 10214   005090  22DA               	addwfc	fsr2h,f,c
 10215   005092  0E00               	movlw	0
 10216   005094  6EDF               	movwf	indf2,c
 10217                           
 10218                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10219   005096  EF71  F028         	goto	l4661
 10220   00509A                     l4653:
 10221                           
 10222                           ;dc_motor.c: 136:         mL->power+=10;
 10223   00509A  C014  FFD9         	movff	turnRight@mL,fsr2l
 10224   00509E  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10225   0050A2  0E0A               	movlw	10
 10226   0050A4  26DF               	addwf	indf2,f,c
 10227                           
 10228                           ;dc_motor.c: 137:         mR->power+=10;
 10229   0050A6  C016  FFD9         	movff	turnRight@mR,fsr2l
 10230   0050AA  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10231   0050AE  0E0A               	movlw	10
 10232   0050B0  26DF               	addwf	indf2,f,c
 10233   0050B2                     
 10234                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10235   0050B2  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10236   0050B6  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10237   0050BA  EC8A  F023         	call	_setMotorPWM	;wreg free
 10238   0050BE                     
 10239                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10240   0050BE  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10241   0050C2  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10242   0050C6  EC8A  F023         	call	_setMotorPWM	;wreg free
 10243   0050CA                     
 10244                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10245   0050CA  0E02               	movlw	2
 10246   0050CC  6E19               	movwf	(??_turnRight+1)^0,c
 10247   0050CE  0EA0               	movlw	160
 10248   0050D0  6E18               	movwf	??_turnRight^0,c
 10249   0050D2  0E92               	movlw	146
 10250   0050D4                     u6007:
 10251   0050D4  2EE8               	decfsz	wreg,f,c
 10252   0050D6  D7FE               	bra	u6007
 10253   0050D8  2E18               	decfsz	??_turnRight^0,f,c
 10254   0050DA  D7FC               	bra	u6007
 10255   0050DC  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10256   0050DE  D7FA               	bra	u6007
 10257   0050E0  D000               	nop2	
 10258   0050E2                     l4661:
 10259   0050E2  C014  FFD9         	movff	turnRight@mL,fsr2l
 10260   0050E6  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10261   0050EA  0E32               	movlw	50
 10262   0050EC  60DF               	cpfslt	indf2,c
 10263   0050EE  EF7B  F028         	goto	u4441
 10264   0050F2  EF7D  F028         	goto	u4440
 10265   0050F6                     u4441:
 10266   0050F6  EF89  F028         	goto	l483
 10267   0050FA                     u4440:
 10268   0050FA  C016  FFD9         	movff	turnRight@mR,fsr2l
 10269   0050FE  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10270   005102  0E31               	movlw	49
 10271   005104  64DF               	cpfsgt	indf2,c
 10272   005106  EF87  F028         	goto	u4451
 10273   00510A  EF89  F028         	goto	u4450
 10274   00510E                     u4451:
 10275   00510E  EF4D  F028         	goto	l4653
 10276   005112                     u4450:
 10277   005112                     l483:
 10278   005112  0012               	return		;funcret
 10279   005114                     __end_of_turnRight:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _Timer0_init *****************
 10283 ;; Defined at:
 10284 ;;		line 8 in file "timers.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;Total ram usage:        0 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 1
 10305 ;; This function calls:
 10306 ;;		Nothing
 10307 ;; This function is called by:
 10308 ;;		_main
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text55
 10313   006032                     __ptext55:
 10314                           	callstack 0
 10315   006032                     _Timer0_init:
 10316                           	callstack 29
 10317   006032                     
 10318                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10319   006032  50D6               	movf	214,w,c	;volatile
 10320   006034  0B1F               	andlw	-225
 10321   006036  0940               	iorlw	64
 10322   006038  6ED6               	movwf	214,c	;volatile
 10323   00603A                     
 10324                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10325   00603A  88D6               	bsf	214,4,c	;volatile
 10326                           
 10327                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 10328   00603C  50D6               	movf	214,w,c	;volatile
 10329   00603E  0BF0               	andlw	-16
 10330   006040  090D               	iorlw	13
 10331   006042  6ED6               	movwf	214,c	;volatile
 10332   006044                     
 10333                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10334   006044  88D5               	bsf	213,4,c	;volatile
 10335                           
 10336                           ;timers.c: 16:     TMR0H=0;
 10337   006046  0E00               	movlw	0
 10338   006048  6ED4               	movwf	212,c	;volatile
 10339                           
 10340                           ;timers.c: 17:     TMR0L=0;
 10341   00604A  0E00               	movlw	0
 10342   00604C  6ED3               	movwf	211,c	;volatile
 10343   00604E                     
 10344                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10345   00604E  9ED5               	bcf	213,7,c	;volatile
 10346   006050  0012               	return		;funcret
 10347   006052                     __end_of_Timer0_init:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function _RetryMove *****************
 10351 ;; Defined at:
 10352 ;;		line 325 in file "dc_motor.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10355 ;;		 -> motorL(9), 
 10356 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10357 ;;		 -> motorR(9), 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;		None
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10372 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10373 ;;Total ram usage:        6 bytes
 10374 ;; Hardware stack levels used: 1
 10375 ;; Hardware stack levels required when called: 5
 10376 ;; This function calls:
 10377 ;;		_fullSpeedAhead
 10378 ;;		_reverseDetect
 10379 ;;		_stop
 10380 ;; This function is called by:
 10381 ;;		_main
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text56
 10386   0054E2                     __ptext56:
 10387                           	callstack 0
 10388   0054E2                     _RetryMove:
 10389                           	callstack 25
 10390   0054E2                     
 10391                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10392   0054E2  0E61               	movlw	low _motorL
 10393   0054E4  6E1A               	movwf	reverseDetect@mL^0,c
 10394   0054E6  0E01               	movlw	high _motorL
 10395   0054E8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10396   0054EA  0E58               	movlw	low _motorR
 10397   0054EC  6E1C               	movwf	reverseDetect@mR^0,c
 10398   0054EE  0E01               	movlw	high _motorR
 10399   0054F0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10400   0054F2  EC6C  F02B         	call	_reverseDetect	;wreg free
 10401                           
 10402                           ;dc_motor.c: 327:     stop(&motorL, &motorR);
 10403   0054F6  0E61               	movlw	low _motorL
 10404   0054F8  6E14               	movwf	stop@mL^0,c
 10405   0054FA  0E01               	movlw	high _motorL
 10406   0054FC  6E15               	movwf	(stop@mL+1)^0,c
 10407   0054FE  0E58               	movlw	low _motorR
 10408   005500  6E16               	movwf	stop@mR^0,c
 10409   005502  0E01               	movlw	high _motorR
 10410   005504  6E17               	movwf	(stop@mR+1)^0,c
 10411   005506  ECBB  F029         	call	_stop	;wreg free
 10412                           
 10413                           ;dc_motor.c: 328:     fullSpeedAhead(mL,mR);
 10414   00550A  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10415   00550E  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10416   005512  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10417   005516  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10418   00551A  EC28  F029         	call	_fullSpeedAhead	;wreg free
 10419   00551E                     
 10420                           ;dc_motor.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10421   00551E  0E29               	movlw	41
 10422   005520  6E25               	movwf	(??_RetryMove+1)^0,c
 10423   005522  0E96               	movlw	150
 10424   005524  6E24               	movwf	??_RetryMove^0,c
 10425   005526  0E7F               	movlw	127
 10426   005528                     u6017:
 10427   005528  2EE8               	decfsz	wreg,f,c
 10428   00552A  D7FE               	bra	u6017
 10429   00552C  2E24               	decfsz	??_RetryMove^0,f,c
 10430   00552E  D7FC               	bra	u6017
 10431   005530  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10432   005532  D7FA               	bra	u6017
 10433   005534  F000               	nop	
 10434   005536                     
 10435                           ;dc_motor.c: 330:     stop(&motorL, &motorR);
 10436   005536  0E61               	movlw	low _motorL
 10437   005538  6E14               	movwf	stop@mL^0,c
 10438   00553A  0E01               	movlw	high _motorL
 10439   00553C  6E15               	movwf	(stop@mL+1)^0,c
 10440   00553E  0E58               	movlw	low _motorR
 10441   005540  6E16               	movwf	stop@mR^0,c
 10442   005542  0E01               	movlw	high _motorR
 10443   005544  6E17               	movwf	(stop@mR+1)^0,c
 10444   005546  ECBB  F029         	call	_stop	;wreg free
 10445   00554A  0012               	return		;funcret
 10446   00554C                     __end_of_RetryMove:
 10447                           	callstack 0
 10448                           
 10449 ;; *************** function _PinkMove *****************
 10450 ;; Defined at:
 10451 ;;		line 298 in file "dc_motor.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10454 ;;		 -> motorL(9), 
 10455 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10456 ;;		 -> motorR(9), 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;		None
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;Total ram usage:        4 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; Hardware stack levels required when called: 5
 10475 ;; This function calls:
 10476 ;;		_reverseDetect
 10477 ;;		_reverseOneBlock
 10478 ;;		_turnLeft45
 10479 ;; This function is called by:
 10480 ;;		_main
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text57
 10485   005A2C                     __ptext57:
 10486                           	callstack 0
 10487   005A2C                     _PinkMove:
 10488                           	callstack 25
 10489   005A2C                     
 10490                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10491   005A2C  0E61               	movlw	low _motorL
 10492   005A2E  6E1A               	movwf	reverseDetect@mL^0,c
 10493   005A30  0E01               	movlw	high _motorL
 10494   005A32  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10495   005A34  0E58               	movlw	low _motorR
 10496   005A36  6E1C               	movwf	reverseDetect@mR^0,c
 10497   005A38  0E01               	movlw	high _motorR
 10498   005A3A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10499   005A3C  EC6C  F02B         	call	_reverseDetect	;wreg free
 10500                           
 10501                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10502   005A40  0E61               	movlw	low _motorL
 10503   005A42  6E1A               	movwf	reverseOneBlock@mL^0,c
 10504   005A44  0E01               	movlw	high _motorL
 10505   005A46  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10506   005A48  0E58               	movlw	low _motorR
 10507   005A4A  6E1C               	movwf	reverseOneBlock@mR^0,c
 10508   005A4C  0E01               	movlw	high _motorR
 10509   005A4E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10510   005A50  ECF2  F02B         	call	_reverseOneBlock	;wreg free
 10511                           
 10512                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10513   005A54  0E61               	movlw	low _motorL
 10514   005A56  6E1A               	movwf	turnLeft45@mL^0,c
 10515   005A58  0E01               	movlw	high _motorL
 10516   005A5A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10517   005A5C  0E58               	movlw	low _motorR
 10518   005A5E  6E1C               	movwf	turnLeft45@mR^0,c
 10519   005A60  0E01               	movlw	high _motorR
 10520   005A62  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10521   005A64  EC55  F02E         	call	_turnLeft45	;wreg free
 10522                           
 10523                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10524   005A68  0E61               	movlw	low _motorL
 10525   005A6A  6E1A               	movwf	turnLeft45@mL^0,c
 10526   005A6C  0E01               	movlw	high _motorL
 10527   005A6E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10528   005A70  0E58               	movlw	low _motorR
 10529   005A72  6E1C               	movwf	turnLeft45@mR^0,c
 10530   005A74  0E01               	movlw	high _motorR
 10531   005A76  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10532   005A78  EC55  F02E         	call	_turnLeft45	;wreg free
 10533   005A7C  0012               	return		;funcret
 10534   005A7E                     __end_of_PinkMove:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function _turnLeft45 *****************
 10538 ;; Defined at:
 10539 ;;		line 218 in file "dc_motor.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10542 ;;		 -> motorL(9), 
 10543 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10544 ;;		 -> motorR(9), 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10560 ;;Total ram usage:        6 bytes
 10561 ;; Hardware stack levels used: 1
 10562 ;; Hardware stack levels required when called: 4
 10563 ;; This function calls:
 10564 ;;		_TurnDelay
 10565 ;;		_stop
 10566 ;;		_turnLeft
 10567 ;; This function is called by:
 10568 ;;		_GreenMove
 10569 ;;		_PinkMove
 10570 ;;		_LightBlueMove
 10571 ;;		_ReversePink
 10572 ;;		_turnCalibration
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text58
 10577   005CAA                     __ptext58:
 10578                           	callstack 0
 10579   005CAA                     _turnLeft45:
 10580                           	callstack 25
 10581   005CAA                     
 10582                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10583   005CAA  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10584   005CAE  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10585   005CB2  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10586   005CB6  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10587   005CBA  EC8A  F028         	call	_turnLeft	;wreg free
 10588   005CBE                     
 10589                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10590   005CBE  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10591   005CC2  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10592   005CC6  EC9A  F02F         	call	_TurnDelay	;wreg free
 10593   005CCA                     
 10594                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10595   005CCA  0E61               	movlw	low _motorL
 10596   005CCC  6E14               	movwf	stop@mL^0,c
 10597   005CCE  0E01               	movlw	high _motorL
 10598   005CD0  6E15               	movwf	(stop@mL+1)^0,c
 10599   005CD2  0E58               	movlw	low _motorR
 10600   005CD4  6E16               	movwf	stop@mR^0,c
 10601   005CD6  0E01               	movlw	high _motorR
 10602   005CD8  6E17               	movwf	(stop@mR+1)^0,c
 10603   005CDA  ECBB  F029         	call	_stop	;wreg free
 10604   005CDE                     
 10605                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10606   005CDE  0E05               	movlw	5
 10607   005CE0  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10608   005CE2  0E0F               	movlw	15
 10609   005CE4  6E1E               	movwf	??_turnLeft45^0,c
 10610   005CE6  0EF1               	movlw	241
 10611   005CE8                     u6027:
 10612   005CE8  2EE8               	decfsz	wreg,f,c
 10613   005CEA  D7FE               	bra	u6027
 10614   005CEC  2E1E               	decfsz	??_turnLeft45^0,f,c
 10615   005CEE  D7FC               	bra	u6027
 10616   005CF0  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10617   005CF2  D7FA               	bra	u6027
 10618   005CF4  F000               	nop	
 10619   005CF6  0012               	return		;funcret
 10620   005CF8                     __end_of_turnLeft45:
 10621                           	callstack 0
 10622                           
 10623 ;; *************** function _turnLeft *****************
 10624 ;; Defined at:
 10625 ;;		line 111 in file "dc_motor.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10628 ;;		 -> motorL(9), 
 10629 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10630 ;;		 -> motorR(9), 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10646 ;;Total ram usage:        6 bytes
 10647 ;; Hardware stack levels used: 1
 10648 ;; Hardware stack levels required when called: 3
 10649 ;; This function calls:
 10650 ;;		_setMotorPWM
 10651 ;; This function is called by:
 10652 ;;		_turnLeft45
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text59
 10657   005114                     __ptext59:
 10658                           	callstack 0
 10659   005114                     _turnLeft:
 10660                           	callstack 25
 10661   005114                     
 10662                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10663   005114  EE20 F001          	lfsr	2,1
 10664   005118  5014               	movf	turnLeft@mL^0,w,c
 10665   00511A  26D9               	addwf	fsr2l,f,c
 10666   00511C  5015               	movf	(turnLeft@mL+1)^0,w,c
 10667   00511E  22DA               	addwfc	fsr2h,f,c
 10668   005120  0E00               	movlw	0
 10669   005122  6EDF               	movwf	indf2,c
 10670                           
 10671                           ;dc_motor.c: 114:     mR->direction =1;
 10672   005124  EE20 F001          	lfsr	2,1
 10673   005128  5016               	movf	turnLeft@mR^0,w,c
 10674   00512A  26D9               	addwf	fsr2l,f,c
 10675   00512C  5017               	movf	(turnLeft@mR+1)^0,w,c
 10676   00512E  22DA               	addwfc	fsr2h,f,c
 10677   005130  0E01               	movlw	1
 10678   005132  6EDF               	movwf	indf2,c
 10679                           
 10680                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10681   005134  EFC0  F028         	goto	l4647
 10682   005138                     l4639:
 10683                           
 10684                           ;dc_motor.c: 118:         mL->power+=10;
 10685   005138  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10686   00513C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10687   005140  0E0A               	movlw	10
 10688   005142  26DF               	addwf	indf2,f,c
 10689                           
 10690                           ;dc_motor.c: 119:         mR->power+=10;
 10691   005144  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10692   005148  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10693   00514C  0E0A               	movlw	10
 10694   00514E  26DF               	addwf	indf2,f,c
 10695   005150                     
 10696                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10697   005150  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10698   005154  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10699   005158  EC8A  F023         	call	_setMotorPWM	;wreg free
 10700   00515C                     
 10701                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10702   00515C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10703   005160  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10704   005164  EC8A  F023         	call	_setMotorPWM	;wreg free
 10705   005168                     
 10706                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10707   005168  0E02               	movlw	2
 10708   00516A  6E19               	movwf	(??_turnLeft+1)^0,c
 10709   00516C  0EA0               	movlw	160
 10710   00516E  6E18               	movwf	??_turnLeft^0,c
 10711   005170  0E92               	movlw	146
 10712   005172                     u6037:
 10713   005172  2EE8               	decfsz	wreg,f,c
 10714   005174  D7FE               	bra	u6037
 10715   005176  2E18               	decfsz	??_turnLeft^0,f,c
 10716   005178  D7FC               	bra	u6037
 10717   00517A  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10718   00517C  D7FA               	bra	u6037
 10719   00517E  D000               	nop2	
 10720   005180                     l4647:
 10721   005180  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10722   005184  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10723   005188  0E32               	movlw	50
 10724   00518A  60DF               	cpfslt	indf2,c
 10725   00518C  EFCA  F028         	goto	u4421
 10726   005190  EFCC  F028         	goto	u4420
 10727   005194                     u4421:
 10728   005194  EFD8  F028         	goto	l475
 10729   005198                     u4420:
 10730   005198  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10731   00519C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10732   0051A0  0E31               	movlw	49
 10733   0051A2  64DF               	cpfsgt	indf2,c
 10734   0051A4  EFD6  F028         	goto	u4431
 10735   0051A8  EFD8  F028         	goto	u4430
 10736   0051AC                     u4431:
 10737   0051AC  EF9C  F028         	goto	l4639
 10738   0051B0                     u4430:
 10739   0051B0                     l475:
 10740   0051B0  0012               	return		;funcret
 10741   0051B2                     __end_of_turnLeft:
 10742                           	callstack 0
 10743                           
 10744 ;; *************** function _TurnDelay *****************
 10745 ;; Defined at:
 10746 ;;		line 204 in file "dc_motor.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  Turn45Delay     2    0[COMRAM] int 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;Total ram usage:        3 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_turnRight45
 10771 ;;		_turnLeft45
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text60
 10776   005F34                     __ptext60:
 10777                           	callstack 0
 10778   005F34                     _TurnDelay:
 10779                           	callstack 27
 10780   005F34                     
 10781                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10782   005F34  EFA7  F02F         	goto	l510
 10783   005F38                     l4681:
 10784                           
 10785                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10786   005F38  0E15               	movlw	21
 10787   005F3A  6E03               	movwf	??_TurnDelay^0,c
 10788   005F3C  0EC6               	movlw	198
 10789   005F3E                     u6047:
 10790   005F3E  2EE8               	decfsz	wreg,f,c
 10791   005F40  D7FE               	bra	u6047
 10792   005F42  2E03               	decfsz	??_TurnDelay^0,f,c
 10793   005F44  D7FC               	bra	u6047
 10794   005F46  D000               	nop2	
 10795   005F48                     
 10796                           ;dc_motor.c: 207:         Turn45Delay--;
 10797   005F48  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10798   005F4A  A0D8               	btfss	status,0,c
 10799   005F4C  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10800   005F4E                     l510:
 10801                           
 10802                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10803   005F4E  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10804   005F50  EFB4  F02F         	goto	u4480
 10805   005F54  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10806   005F56  E106               	bnz	u4481
 10807   005F58  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10808   005F5A  B0D8               	btfsc	status,0,c
 10809   005F5C  EFB2  F02F         	goto	u4481
 10810   005F60  EFB4  F02F         	goto	u4480
 10811   005F64                     u4481:
 10812   005F64  EF9C  F02F         	goto	l4681
 10813   005F68                     u4480:
 10814   005F68  0012               	return		;funcret
 10815   005F6A                     __end_of_TurnDelay:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _reverseOneBlock *****************
 10819 ;; Defined at:
 10820 ;;		line 232 in file "dc_motor.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10823 ;;		 -> motorL(9), 
 10824 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10825 ;;		 -> motorR(9), 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      void 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10841 ;;Total ram usage:        6 bytes
 10842 ;; Hardware stack levels used: 1
 10843 ;; Hardware stack levels required when called: 4
 10844 ;; This function calls:
 10845 ;;		_fullSpeedBack
 10846 ;;		_stop
 10847 ;; This function is called by:
 10848 ;;		_YellowMove
 10849 ;;		_PinkMove
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text61
 10854   0057E4                     __ptext61:
 10855                           	callstack 0
 10856   0057E4                     _reverseOneBlock:
 10857                           	callstack 25
 10858   0057E4                     
 10859                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10860   0057E4  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10861   0057E8  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10862   0057EC  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10863   0057F0  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10864   0057F4  ECD9  F028         	call	_fullSpeedBack	;wreg free
 10865   0057F8                     
 10866                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10867   0057F8  0E56               	movlw	86
 10868   0057FA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10869   0057FC  0E3A               	movlw	58
 10870   0057FE  6E1E               	movwf	??_reverseOneBlock^0,c
 10871   005800  0EF4               	movlw	244
 10872   005802                     u6057:
 10873   005802  2EE8               	decfsz	wreg,f,c
 10874   005804  D7FE               	bra	u6057
 10875   005806  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10876   005808  D7FC               	bra	u6057
 10877   00580A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10878   00580C  D7FA               	bra	u6057
 10879   00580E                     
 10880                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10881   00580E  0E61               	movlw	low _motorL
 10882   005810  6E14               	movwf	stop@mL^0,c
 10883   005812  0E01               	movlw	high _motorL
 10884   005814  6E15               	movwf	(stop@mL+1)^0,c
 10885   005816  0E58               	movlw	low _motorR
 10886   005818  6E16               	movwf	stop@mR^0,c
 10887   00581A  0E01               	movlw	high _motorR
 10888   00581C  6E17               	movwf	(stop@mR+1)^0,c
 10889   00581E  ECBB  F029         	call	_stop	;wreg free
 10890                           
 10891                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10892   005822  0E05               	movlw	5
 10893   005824  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10894   005826  0E0F               	movlw	15
 10895   005828  6E1E               	movwf	??_reverseOneBlock^0,c
 10896   00582A  0EF1               	movlw	241
 10897   00582C                     u6067:
 10898   00582C  2EE8               	decfsz	wreg,f,c
 10899   00582E  D7FE               	bra	u6067
 10900   005830  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10901   005832  D7FC               	bra	u6067
 10902   005834  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10903   005836  D7FA               	bra	u6067
 10904   005838  F000               	nop	
 10905   00583A  0012               	return		;funcret
 10906   00583C                     __end_of_reverseOneBlock:
 10907                           	callstack 0
 10908                           
 10909 ;; *************** function _reverseDetect *****************
 10910 ;; Defined at:
 10911 ;;		line 225 in file "dc_motor.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10914 ;;		 -> motorL(9), 
 10915 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10916 ;;		 -> motorR(9), 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;Total ram usage:        6 bytes
 10933 ;; Hardware stack levels used: 1
 10934 ;; Hardware stack levels required when called: 4
 10935 ;; This function calls:
 10936 ;;		_fullSpeedBack
 10937 ;;		_stop
 10938 ;; This function is called by:
 10939 ;;		_RedMove
 10940 ;;		_GreenMove
 10941 ;;		_BlueMove
 10942 ;;		_YellowMove
 10943 ;;		_PinkMove
 10944 ;;		_OrangeMove
 10945 ;;		_LightBlueMove
 10946 ;;		_RetryMove
 10947 ;;		_ReverseYellow
 10948 ;;		_ReversePink
 10949 ;;		_go_Home
 10950 ;; This function uses a non-reentrant model
 10951 ;;
 10952                           
 10953                           	psect	text62
 10954   0056D8                     __ptext62:
 10955                           	callstack 0
 10956   0056D8                     _reverseDetect:
 10957                           	callstack 25
 10958   0056D8                     
 10959                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10960   0056D8  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10961   0056DC  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10962   0056E0  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10963   0056E4  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10964   0056E8  ECD9  F028         	call	_fullSpeedBack	;wreg free
 10965   0056EC                     
 10966                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10967   0056EC  0E11               	movlw	17
 10968   0056EE  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10969   0056F0  0E3C               	movlw	60
 10970   0056F2  6E1E               	movwf	??_reverseDetect^0,c
 10971   0056F4  0ECB               	movlw	203
 10972   0056F6                     u6077:
 10973   0056F6  2EE8               	decfsz	wreg,f,c
 10974   0056F8  D7FE               	bra	u6077
 10975   0056FA  2E1E               	decfsz	??_reverseDetect^0,f,c
 10976   0056FC  D7FC               	bra	u6077
 10977   0056FE  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10978   005700  D7FA               	bra	u6077
 10979   005702  F000               	nop	
 10980   005704                     
 10981                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10982   005704  0E61               	movlw	low _motorL
 10983   005706  6E14               	movwf	stop@mL^0,c
 10984   005708  0E01               	movlw	high _motorL
 10985   00570A  6E15               	movwf	(stop@mL+1)^0,c
 10986   00570C  0E58               	movlw	low _motorR
 10987   00570E  6E16               	movwf	stop@mR^0,c
 10988   005710  0E01               	movlw	high _motorR
 10989   005712  6E17               	movwf	(stop@mR+1)^0,c
 10990   005714  ECBB  F029         	call	_stop	;wreg free
 10991                           
 10992                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10993   005718  0E05               	movlw	5
 10994   00571A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10995   00571C  0E0F               	movlw	15
 10996   00571E  6E1E               	movwf	??_reverseDetect^0,c
 10997   005720  0EF1               	movlw	241
 10998   005722                     u6087:
 10999   005722  2EE8               	decfsz	wreg,f,c
 11000   005724  D7FE               	bra	u6087
 11001   005726  2E1E               	decfsz	??_reverseDetect^0,f,c
 11002   005728  D7FC               	bra	u6087
 11003   00572A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11004   00572C  D7FA               	bra	u6087
 11005   00572E  F000               	nop	
 11006   005730  0012               	return		;funcret
 11007   005732                     __end_of_reverseDetect:
 11008                           	callstack 0
 11009                           
 11010 ;; *************** function _fullSpeedBack *****************
 11011 ;; Defined at:
 11012 ;;		line 185 in file "dc_motor.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11015 ;;		 -> motorL(9), 
 11016 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11017 ;;		 -> motorR(9), 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;		None
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      void 
 11022 ;; Registers used:
 11023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;Total ram usage:        6 bytes
 11034 ;; Hardware stack levels used: 1
 11035 ;; Hardware stack levels required when called: 3
 11036 ;; This function calls:
 11037 ;;		_setMotorPWM
 11038 ;; This function is called by:
 11039 ;;		_reverseDetect
 11040 ;;		_reverseOneBlock
 11041 ;;		_Backhalfblock
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           	psect	text63
 11046   0051B2                     __ptext63:
 11047                           	callstack 0
 11048   0051B2                     _fullSpeedBack:
 11049                           	callstack 25
 11050   0051B2                     
 11051                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11052   0051B2  EE20 F001          	lfsr	2,1
 11053   0051B6  5014               	movf	fullSpeedBack@mL^0,w,c
 11054   0051B8  26D9               	addwf	fsr2l,f,c
 11055   0051BA  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11056   0051BC  22DA               	addwfc	fsr2h,f,c
 11057   0051BE  0E00               	movlw	0
 11058   0051C0  6EDF               	movwf	indf2,c
 11059                           
 11060                           ;dc_motor.c: 189:     mR->direction =0;
 11061   0051C2  EE20 F001          	lfsr	2,1
 11062   0051C6  5016               	movf	fullSpeedBack@mR^0,w,c
 11063   0051C8  26D9               	addwf	fsr2l,f,c
 11064   0051CA  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11065   0051CC  22DA               	addwfc	fsr2h,f,c
 11066   0051CE  0E00               	movlw	0
 11067   0051D0  6EDF               	movwf	indf2,c
 11068                           
 11069                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11070   0051D2  EF0F  F029         	goto	l4675
 11071   0051D6                     l4667:
 11072                           
 11073                           ;dc_motor.c: 192:         mL->power+=10;
 11074   0051D6  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11075   0051DA  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11076   0051DE  0E0A               	movlw	10
 11077   0051E0  26DF               	addwf	indf2,f,c
 11078                           
 11079                           ;dc_motor.c: 193:         mR->power+=10;
 11080   0051E2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11081   0051E6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11082   0051EA  0E0A               	movlw	10
 11083   0051EC  26DF               	addwf	indf2,f,c
 11084   0051EE                     
 11085                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11086   0051EE  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11087   0051F2  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11088   0051F6  EC8A  F023         	call	_setMotorPWM	;wreg free
 11089   0051FA                     
 11090                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11091   0051FA  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11092   0051FE  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11093   005202  EC8A  F023         	call	_setMotorPWM	;wreg free
 11094   005206                     
 11095                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11096   005206  0E02               	movlw	2
 11097   005208  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11098   00520A  0EA0               	movlw	160
 11099   00520C  6E18               	movwf	??_fullSpeedBack^0,c
 11100   00520E  0E92               	movlw	146
 11101   005210                     u6097:
 11102   005210  2EE8               	decfsz	wreg,f,c
 11103   005212  D7FE               	bra	u6097
 11104   005214  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11105   005216  D7FC               	bra	u6097
 11106   005218  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11107   00521A  D7FA               	bra	u6097
 11108   00521C  D000               	nop2	
 11109   00521E                     l4675:
 11110   00521E  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11111   005222  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11112   005226  0E32               	movlw	50
 11113   005228  60DF               	cpfslt	indf2,c
 11114   00522A  EF19  F029         	goto	u4461
 11115   00522E  EF1B  F029         	goto	u4460
 11116   005232                     u4461:
 11117   005232  EF27  F029         	goto	l507
 11118   005236                     u4460:
 11119   005236  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11120   00523A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11121   00523E  0E31               	movlw	49
 11122   005240  64DF               	cpfsgt	indf2,c
 11123   005242  EF25  F029         	goto	u4471
 11124   005246  EF27  F029         	goto	u4470
 11125   00524A                     u4471:
 11126   00524A  EFEB  F028         	goto	l4667
 11127   00524E                     u4470:
 11128   00524E                     l507:
 11129   00524E  0012               	return		;funcret
 11130   005250                     __end_of_fullSpeedBack:
 11131                           	callstack 0
 11132                           
 11133 ;; *************** function _Interrupts_init *****************
 11134 ;; Defined at:
 11135 ;;		line 9 in file "interrupts.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;		None
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		None
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;Total ram usage:        0 bytes
 11154 ;; Hardware stack levels used: 1
 11155 ;; Hardware stack levels required when called: 1
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_main
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text64
 11164   006094                     __ptext64:
 11165                           	callstack 0
 11166   006094                     _Interrupts_init:
 11167                           	callstack 29
 11168   006094                     
 11169                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11170   006094  9AF2               	bcf	242,5,c	;volatile
 11171                           
 11172                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11173   006096  9CF2               	bcf	242,6,c	;volatile
 11174                           
 11175                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11176   006098  8EF2               	bsf	242,7,c	;volatile
 11177                           
 11178                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11179   00609A  010E               	movlb	14	; () banked
 11180   00609C  8B29               	bsf	41,5,b	;volatile
 11181   00609E                     
 11182                           ; BSR set to: 14
 11183   00609E  0012               	return		;funcret
 11184   0060A0                     __end_of_Interrupts_init:
 11185                           	callstack 0
 11186                           
 11187 ;; *************** function _Forwardhalfblock *****************
 11188 ;; Defined at:
 11189 ;;		line 245 in file "dc_motor.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11192 ;;		 -> motorL(9), 
 11193 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11194 ;;		 -> motorR(9), 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;		None
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      void 
 11199 ;; Registers used:
 11200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;Total ram usage:        6 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 4
 11213 ;; This function calls:
 11214 ;;		_fullSpeedAhead
 11215 ;;		_stop
 11216 ;; This function is called by:
 11217 ;;		_main
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text65
 11222   005732                     __ptext65:
 11223                           	callstack 0
 11224   005732                     _Forwardhalfblock:
 11225                           	callstack 26
 11226   005732                     
 11227                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11228   005732  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11229   005736  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11230   00573A  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11231   00573E  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11232   005742  EC28  F029         	call	_fullSpeedAhead	;wreg free
 11233   005746                     
 11234                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11235   005746  0E2B               	movlw	43
 11236   005748  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11237   00574A  0E9D               	movlw	157
 11238   00574C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11239   00574E  0EF9               	movlw	249
 11240   005750                     u6107:
 11241   005750  2EE8               	decfsz	wreg,f,c
 11242   005752  D7FE               	bra	u6107
 11243   005754  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11244   005756  D7FC               	bra	u6107
 11245   005758  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11246   00575A  D7FA               	bra	u6107
 11247   00575C  F000               	nop	
 11248   00575E                     
 11249                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11250   00575E  0E61               	movlw	low _motorL
 11251   005760  6E14               	movwf	stop@mL^0,c
 11252   005762  0E01               	movlw	high _motorL
 11253   005764  6E15               	movwf	(stop@mL+1)^0,c
 11254   005766  0E58               	movlw	low _motorR
 11255   005768  6E16               	movwf	stop@mR^0,c
 11256   00576A  0E01               	movlw	high _motorR
 11257   00576C  6E17               	movwf	(stop@mR+1)^0,c
 11258   00576E  ECBB  F029         	call	_stop	;wreg free
 11259                           
 11260                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11261   005772  0E05               	movlw	5
 11262   005774  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11263   005776  0E0F               	movlw	15
 11264   005778  6E1E               	movwf	??_Forwardhalfblock^0,c
 11265   00577A  0EF1               	movlw	241
 11266   00577C                     u6117:
 11267   00577C  2EE8               	decfsz	wreg,f,c
 11268   00577E  D7FE               	bra	u6117
 11269   005780  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11270   005782  D7FC               	bra	u6117
 11271   005784  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11272   005786  D7FA               	bra	u6117
 11273   005788  F000               	nop	
 11274   00578A  0012               	return		;funcret
 11275   00578C                     __end_of_Forwardhalfblock:
 11276                           	callstack 0
 11277                           
 11278 ;; *************** function _stop *****************
 11279 ;; Defined at:
 11280 ;;		line 93 in file "dc_motor.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11283 ;;		 -> motorL(9), 
 11284 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11285 ;;		 -> motorR(9), 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;		None
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11301 ;;Total ram usage:        6 bytes
 11302 ;; Hardware stack levels used: 1
 11303 ;; Hardware stack levels required when called: 3
 11304 ;; This function calls:
 11305 ;;		_setMotorPWM
 11306 ;; This function is called by:
 11307 ;;		_main
 11308 ;;		_turnRight45
 11309 ;;		_turnLeft45
 11310 ;;		_reverseDetect
 11311 ;;		_reverseOneBlock
 11312 ;;		_ForwardOneBlock
 11313 ;;		_Forwardhalfblock
 11314 ;;		_RetryMove
 11315 ;;		_go_Home
 11316 ;;		_Backhalfblock
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text66
 11321   005376                     __ptext66:
 11322                           	callstack 0
 11323   005376                     _stop:
 11324                           	callstack 25
 11325   005376                     
 11326                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11327   005376  EFE1  F029         	goto	l4633
 11328   00537A                     l4625:
 11329                           
 11330                           ;dc_motor.c: 97:         mL->power-=10;
 11331   00537A  C014  FFD9         	movff	stop@mL,fsr2l
 11332   00537E  C015  FFDA         	movff	stop@mL+1,fsr2h
 11333   005382  0E0A               	movlw	10
 11334   005384  5EDF               	subwf	indf2,f,c
 11335                           
 11336                           ;dc_motor.c: 98:         mR->power-=10;
 11337   005386  C016  FFD9         	movff	stop@mR,fsr2l
 11338   00538A  C017  FFDA         	movff	stop@mR+1,fsr2h
 11339   00538E  0E0A               	movlw	10
 11340   005390  5EDF               	subwf	indf2,f,c
 11341   005392                     
 11342                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11343   005392  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11344   005396  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11345   00539A  EC8A  F023         	call	_setMotorPWM	;wreg free
 11346   00539E                     
 11347                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11348   00539E  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11349   0053A2  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11350   0053A6  EC8A  F023         	call	_setMotorPWM	;wreg free
 11351   0053AA                     
 11352                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11353   0053AA  0E02               	movlw	2
 11354   0053AC  6E19               	movwf	(??_stop+1)^0,c
 11355   0053AE  0EA0               	movlw	160
 11356   0053B0  6E18               	movwf	??_stop^0,c
 11357   0053B2  0E92               	movlw	146
 11358   0053B4                     u6127:
 11359   0053B4  2EE8               	decfsz	wreg,f,c
 11360   0053B6  D7FE               	bra	u6127
 11361   0053B8  2E18               	decfsz	??_stop^0,f,c
 11362   0053BA  D7FC               	bra	u6127
 11363   0053BC  2E19               	decfsz	(??_stop+1)^0,f,c
 11364   0053BE  D7FA               	bra	u6127
 11365   0053C0  D000               	nop2	
 11366   0053C2                     l4633:
 11367                           
 11368                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11369   0053C2  C014  FFD9         	movff	stop@mL,fsr2l
 11370   0053C6  C015  FFDA         	movff	stop@mL+1,fsr2h
 11371   0053CA  50DF               	movf	indf2,w,c
 11372   0053CC  A4D8               	btfss	status,2,c
 11373   0053CE  EFEB  F029         	goto	u4401
 11374   0053D2  EFED  F029         	goto	u4400
 11375   0053D6                     u4401:
 11376   0053D6  EFBD  F029         	goto	l4625
 11377   0053DA                     u4400:
 11378   0053DA  C016  FFD9         	movff	stop@mR,fsr2l
 11379   0053DE  C017  FFDA         	movff	stop@mR+1,fsr2h
 11380   0053E2  50DF               	movf	indf2,w,c
 11381   0053E4  A4D8               	btfss	status,2,c
 11382   0053E6  EFF7  F029         	goto	u4411
 11383   0053EA  EFF9  F029         	goto	u4410
 11384   0053EE                     u4411:
 11385   0053EE  EFBD  F029         	goto	l4625
 11386   0053F2                     u4410:
 11387   0053F2  0012               	return		;funcret
 11388   0053F4                     __end_of_stop:
 11389                           	callstack 0
 11390                           
 11391 ;; *************** function _fullSpeedAhead *****************
 11392 ;; Defined at:
 11393 ;;		line 147 in file "dc_motor.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11396 ;;		 -> motorL(9), 
 11397 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11398 ;;		 -> motorR(9), 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11413 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11414 ;;Total ram usage:        6 bytes
 11415 ;; Hardware stack levels used: 1
 11416 ;; Hardware stack levels required when called: 3
 11417 ;; This function calls:
 11418 ;;		_setMotorPWM
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;;		_ForwardOneBlock
 11422 ;;		_Forwardhalfblock
 11423 ;;		_RetryMove
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text67
 11428   005250                     __ptext67:
 11429                           	callstack 0
 11430   005250                     _fullSpeedAhead:
 11431                           	callstack 24
 11432   005250                     
 11433                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11434   005250  EE20 F001          	lfsr	2,1
 11435   005254  5014               	movf	fullSpeedAhead@mL^0,w,c
 11436   005256  26D9               	addwf	fsr2l,f,c
 11437   005258  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11438   00525A  22DA               	addwfc	fsr2h,f,c
 11439   00525C  0E01               	movlw	1
 11440   00525E  6EDF               	movwf	indf2,c
 11441                           
 11442                           ;dc_motor.c: 151:     mR->direction =1;
 11443   005260  EE20 F001          	lfsr	2,1
 11444   005264  5016               	movf	fullSpeedAhead@mR^0,w,c
 11445   005266  26D9               	addwf	fsr2l,f,c
 11446   005268  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11447   00526A  22DA               	addwfc	fsr2h,f,c
 11448   00526C  0E01               	movlw	1
 11449   00526E  6EDF               	movwf	indf2,c
 11450                           
 11451                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11452   005270  EF5E  F029         	goto	l4619
 11453   005274                     l4611:
 11454                           
 11455                           ;dc_motor.c: 154:         mL->power+=10;
 11456   005274  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11457   005278  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11458   00527C  0E0A               	movlw	10
 11459   00527E  26DF               	addwf	indf2,f,c
 11460                           
 11461                           ;dc_motor.c: 155:         mR->power+=10;
 11462   005280  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11463   005284  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11464   005288  0E0A               	movlw	10
 11465   00528A  26DF               	addwf	indf2,f,c
 11466   00528C                     
 11467                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11468   00528C  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11469   005290  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11470   005294  EC8A  F023         	call	_setMotorPWM	;wreg free
 11471   005298                     
 11472                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11473   005298  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11474   00529C  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11475   0052A0  EC8A  F023         	call	_setMotorPWM	;wreg free
 11476   0052A4                     
 11477                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11478   0052A4  0E02               	movlw	2
 11479   0052A6  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11480   0052A8  0EA0               	movlw	160
 11481   0052AA  6E18               	movwf	??_fullSpeedAhead^0,c
 11482   0052AC  0E92               	movlw	146
 11483   0052AE                     u6137:
 11484   0052AE  2EE8               	decfsz	wreg,f,c
 11485   0052B0  D7FE               	bra	u6137
 11486   0052B2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11487   0052B4  D7FC               	bra	u6137
 11488   0052B6  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11489   0052B8  D7FA               	bra	u6137
 11490   0052BA  D000               	nop2	
 11491   0052BC                     l4619:
 11492   0052BC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11493   0052C0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11494   0052C4  0E32               	movlw	50
 11495   0052C6  60DF               	cpfslt	indf2,c
 11496   0052C8  EF68  F029         	goto	u4381
 11497   0052CC  EF6A  F029         	goto	u4380
 11498   0052D0                     u4381:
 11499   0052D0  EF76  F029         	goto	l491
 11500   0052D4                     u4380:
 11501   0052D4  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11502   0052D8  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11503   0052DC  0E31               	movlw	49
 11504   0052DE  64DF               	cpfsgt	indf2,c
 11505   0052E0  EF74  F029         	goto	u4391
 11506   0052E4  EF76  F029         	goto	u4390
 11507   0052E8                     u4391:
 11508   0052E8  EF3A  F029         	goto	l4611
 11509   0052EC                     u4390:
 11510   0052EC                     l491:
 11511   0052EC  0012               	return		;funcret
 11512   0052EE                     __end_of_fullSpeedAhead:
 11513                           	callstack 0
 11514                           
 11515 ;; *************** function _setMotorPWM *****************
 11516 ;; Defined at:
 11517 ;;		line 68 in file "dc_motor.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11520 ;;		 -> motorR(9), motorL(9), 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  negDuty         1   18[COMRAM] unsigned char 
 11523 ;;  posDuty         1   17[COMRAM] unsigned char 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11537 ;;Total ram usage:        6 bytes
 11538 ;; Hardware stack levels used: 1
 11539 ;; Hardware stack levels required when called: 2
 11540 ;; This function calls:
 11541 ;;		___lwdiv
 11542 ;;		___wmul
 11543 ;; This function is called by:
 11544 ;;		_stop
 11545 ;;		_turnLeft
 11546 ;;		_turnRight
 11547 ;;		_fullSpeedAhead
 11548 ;;		_timed_forward
 11549 ;;		_fullSpeedBack
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text68
 11554   004714                     __ptext68:
 11555                           	callstack 0
 11556   004714                     _setMotorPWM:
 11557                           	callstack 25
 11558   004714                     
 11559                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11560   004714  EE20 F002          	lfsr	2,2
 11561   004718  500E               	movf	setMotorPWM@m^0,w,c
 11562   00471A  26D9               	addwf	fsr2l,f,c
 11563   00471C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11564   00471E  22DA               	addwfc	fsr2h,f,c
 11565   004720  50DF               	movf	indf2,w,c
 11566   004722  B4D8               	btfsc	status,2,c
 11567   004724  EF96  F023         	goto	u3401
 11568   004728  EF98  F023         	goto	u3400
 11569   00472C                     u3401:
 11570   00472C  EFCC  F023         	goto	l4063
 11571   004730                     u3400:
 11572   004730                     
 11573                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11574   004730  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11575   004734  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11576   004738  50DF               	movf	indf2,w,c
 11577   00473A  6E10               	movwf	??_setMotorPWM^0,c
 11578   00473C  5010               	movf	??_setMotorPWM^0,w,c
 11579   00473E  6E01               	movwf	___wmul@multiplier^0,c
 11580   004740  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11581   004742  EE20 F003          	lfsr	2,3
 11582   004746  500E               	movf	setMotorPWM@m^0,w,c
 11583   004748  26D9               	addwf	fsr2l,f,c
 11584   00474A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11585   00474C  22DA               	addwfc	fsr2h,f,c
 11586   00474E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11587   004752  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11588   004756  ECF6  F02F         	call	___wmul	;wreg free
 11589   00475A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11590   00475E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11591   004762  0E00               	movlw	0
 11592   004764  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11593   004766  0E64               	movlw	100
 11594   004768  6E09               	movwf	___lwdiv@divisor^0,c
 11595   00476A  EC37  F02A         	call	___lwdiv	;wreg free
 11596   00476E  EE20 F003          	lfsr	2,3
 11597   004772  500E               	movf	setMotorPWM@m^0,w,c
 11598   004774  26D9               	addwf	fsr2l,f,c
 11599   004776  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11600   004778  22DA               	addwfc	fsr2h,f,c
 11601   00477A  50DF               	movf	indf2,w,c
 11602   00477C  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11603   00477E  5007               	movf	?___lwdiv^0,w,c
 11604   004780  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11605   004782  6E12               	movwf	setMotorPWM@posDuty^0,c
 11606   004784                     
 11607                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11608   004784  EE20 F003          	lfsr	2,3
 11609   004788  500E               	movf	setMotorPWM@m^0,w,c
 11610   00478A  26D9               	addwf	fsr2l,f,c
 11611   00478C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11612   00478E  22DA               	addwfc	fsr2h,f,c
 11613   004790  50DF               	movf	indf2,w,c
 11614   004792  6E13               	movwf	setMotorPWM@negDuty^0,c
 11615                           
 11616                           ;dc_motor.c: 75:     }
 11617   004794  EFEF  F023         	goto	l4067
 11618   004798                     l4063:
 11619                           
 11620                           ;dc_motor.c: 77:         posDuty=0;
 11621   004798  0E00               	movlw	0
 11622   00479A  6E12               	movwf	setMotorPWM@posDuty^0,c
 11623   00479C                     
 11624                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11625   00479C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11626   0047A0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11627   0047A4  50DF               	movf	indf2,w,c
 11628   0047A6  6E10               	movwf	??_setMotorPWM^0,c
 11629   0047A8  5010               	movf	??_setMotorPWM^0,w,c
 11630   0047AA  6E01               	movwf	___wmul@multiplier^0,c
 11631   0047AC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11632   0047AE  EE20 F003          	lfsr	2,3
 11633   0047B2  500E               	movf	setMotorPWM@m^0,w,c
 11634   0047B4  26D9               	addwf	fsr2l,f,c
 11635   0047B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11636   0047B8  22DA               	addwfc	fsr2h,f,c
 11637   0047BA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11638   0047BE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11639   0047C2  ECF6  F02F         	call	___wmul	;wreg free
 11640   0047C6  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11641   0047CA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11642   0047CE  0E00               	movlw	0
 11643   0047D0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11644   0047D2  0E64               	movlw	100
 11645   0047D4  6E09               	movwf	___lwdiv@divisor^0,c
 11646   0047D6  EC37  F02A         	call	___lwdiv	;wreg free
 11647   0047DA  5007               	movf	?___lwdiv^0,w,c
 11648   0047DC  6E13               	movwf	setMotorPWM@negDuty^0,c
 11649   0047DE                     l4067:
 11650                           
 11651                           ;dc_motor.c: 81:     if (m->direction) {
 11652   0047DE  EE20 F001          	lfsr	2,1
 11653   0047E2  500E               	movf	setMotorPWM@m^0,w,c
 11654   0047E4  26D9               	addwf	fsr2l,f,c
 11655   0047E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11656   0047E8  22DA               	addwfc	fsr2h,f,c
 11657   0047EA  50DF               	movf	indf2,w,c
 11658   0047EC  B4D8               	btfsc	status,2,c
 11659   0047EE  EFFB  F023         	goto	u3411
 11660   0047F2  EFFD  F023         	goto	u3410
 11661   0047F6                     u3411:
 11662   0047F6  EF1F  F024         	goto	l4071
 11663   0047FA                     u3410:
 11664   0047FA                     
 11665                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11666   0047FA  EE20 F005          	lfsr	2,5
 11667   0047FE  500E               	movf	setMotorPWM@m^0,w,c
 11668   004800  26D9               	addwf	fsr2l,f,c
 11669   004802  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11670   004804  22DA               	addwfc	fsr2h,f,c
 11671   004806  CFDE F010          	movff	postinc2,??_setMotorPWM
 11672   00480A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11673   00480E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11674   004812  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11675   004816  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11676                           
 11677                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11678   00481A  EE20 F007          	lfsr	2,7
 11679   00481E  500E               	movf	setMotorPWM@m^0,w,c
 11680   004820  26D9               	addwf	fsr2l,f,c
 11681   004822  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11682   004824  22DA               	addwfc	fsr2h,f,c
 11683   004826  CFDE F010          	movff	postinc2,??_setMotorPWM
 11684   00482A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11685   00482E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11686   004832  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11687   004836  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11688                           
 11689                           ;dc_motor.c: 86:     } else {
 11690   00483A  EF3F  F024         	goto	l461
 11691   00483E                     l4071:
 11692                           
 11693                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11694   00483E  EE20 F005          	lfsr	2,5
 11695   004842  500E               	movf	setMotorPWM@m^0,w,c
 11696   004844  26D9               	addwf	fsr2l,f,c
 11697   004846  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11698   004848  22DA               	addwfc	fsr2h,f,c
 11699   00484A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11700   00484E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11701   004852  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11702   004856  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11703   00485A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11704                           
 11705                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11706   00485E  EE20 F007          	lfsr	2,7
 11707   004862  500E               	movf	setMotorPWM@m^0,w,c
 11708   004864  26D9               	addwf	fsr2l,f,c
 11709   004866  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11710   004868  22DA               	addwfc	fsr2h,f,c
 11711   00486A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11712   00486E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11713   004872  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11714   004876  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11715   00487A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11716   00487E                     l461:
 11717   00487E  0012               	return		;funcret
 11718   004880                     __end_of_setMotorPWM:
 11719                           	callstack 0
 11720                           
 11721 ;; *************** function ___wmul *****************
 11722 ;; Defined at:
 11723 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  multiplier      2    0[COMRAM] unsigned int 
 11726 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  product         2    4[COMRAM] unsigned int 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2    0[COMRAM] unsigned int 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0, prodl, prodh
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;Total ram usage:        6 bytes
 11743 ;; Hardware stack levels used: 1
 11744 ;; Hardware stack levels required when called: 1
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_setMotorPWM
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           	psect	text69
 11753   005FEC                     __ptext69:
 11754                           	callstack 0
 11755   005FEC                     ___wmul:
 11756                           	callstack 25
 11757   005FEC  5001               	movf	___wmul@multiplier^0,w,c
 11758   005FEE  0203               	mulwf	___wmul@multiplicand^0,c
 11759   005FF0  CFF3 F005          	movff	prodl,___wmul@product
 11760   005FF4  CFF4 F006          	movff	prodh,___wmul@product+1
 11761   005FF8  5001               	movf	___wmul@multiplier^0,w,c
 11762   005FFA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11763   005FFC  50F3               	movf	243,w,c
 11764   005FFE  2606               	addwf	(___wmul@product+1)^0,f,c
 11765   006000  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11766   006002  0203               	mulwf	___wmul@multiplicand^0,c
 11767   006004  50F3               	movf	243,w,c
 11768   006006  2606               	addwf	(___wmul@product+1)^0,f,c
 11769   006008  C005  F001         	movff	___wmul@product,?___wmul
 11770   00600C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11771   006010  0012               	return		;funcret
 11772   006012                     __end_of___wmul:
 11773                           	callstack 0
 11774                           
 11775 ;; *************** function ___lwdiv *****************
 11776 ;; Defined at:
 11777 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  dividend        2    6[COMRAM] unsigned int 
 11780 ;;  divisor         2    8[COMRAM] unsigned int 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;  quotient        2   10[COMRAM] unsigned int 
 11783 ;;  counter         1   12[COMRAM] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  2    6[COMRAM] unsigned int 
 11786 ;; Registers used:
 11787 ;;		wreg, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11794 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11796 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;Total ram usage:        7 bytes
 11798 ;; Hardware stack levels used: 1
 11799 ;; Hardware stack levels required when called: 1
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_setMotorPWM
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text70
 11808   00546E                     __ptext70:
 11809                           	callstack 0
 11810   00546E                     ___lwdiv:
 11811                           	callstack 25
 11812   00546E  0E00               	movlw	0
 11813   005470  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11814   005472  0E00               	movlw	0
 11815   005474  6E0B               	movwf	___lwdiv@quotient^0,c
 11816   005476  5009               	movf	___lwdiv@divisor^0,w,c
 11817   005478  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11818   00547A  B4D8               	btfsc	status,2,c
 11819   00547C  EF42  F02A         	goto	u3361
 11820   005480  EF44  F02A         	goto	u3360
 11821   005484                     u3361:
 11822   005484  EF6C  F02A         	goto	l1165
 11823   005488                     u3360:
 11824   005488  0E01               	movlw	1
 11825   00548A  6E0D               	movwf	___lwdiv@counter^0,c
 11826   00548C  EF4C  F02A         	goto	l4035
 11827   005490                     l4033:
 11828   005490  90D8               	bcf	status,0,c
 11829   005492  3609               	rlcf	___lwdiv@divisor^0,f,c
 11830   005494  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11831   005496  2A0D               	incf	___lwdiv@counter^0,f,c
 11832   005498                     l4035:
 11833   005498  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11834   00549A  EF51  F02A         	goto	u3371
 11835   00549E  EF53  F02A         	goto	u3370
 11836   0054A2                     u3371:
 11837   0054A2  EF48  F02A         	goto	l4033
 11838   0054A6                     u3370:
 11839   0054A6                     l4037:
 11840   0054A6  90D8               	bcf	status,0,c
 11841   0054A8  360B               	rlcf	___lwdiv@quotient^0,f,c
 11842   0054AA  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11843   0054AC  5009               	movf	___lwdiv@divisor^0,w,c
 11844   0054AE  5C07               	subwf	___lwdiv@dividend^0,w,c
 11845   0054B0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11846   0054B2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11847   0054B4  A0D8               	btfss	status,0,c
 11848   0054B6  EF5F  F02A         	goto	u3381
 11849   0054BA  EF61  F02A         	goto	u3380
 11850   0054BE                     u3381:
 11851   0054BE  EF66  F02A         	goto	l4045
 11852   0054C2                     u3380:
 11853   0054C2  5009               	movf	___lwdiv@divisor^0,w,c
 11854   0054C4  5E07               	subwf	___lwdiv@dividend^0,f,c
 11855   0054C6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11856   0054C8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11857   0054CA  800B               	bsf	___lwdiv@quotient^0,0,c
 11858   0054CC                     l4045:
 11859   0054CC  90D8               	bcf	status,0,c
 11860   0054CE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11861   0054D0  3209               	rrcf	___lwdiv@divisor^0,f,c
 11862   0054D2  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11863   0054D4  EF53  F02A         	goto	l4037
 11864   0054D8                     l1165:
 11865   0054D8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11866   0054DC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11867   0054E0  0012               	return		;funcret
 11868   0054E2                     __end_of___lwdiv:
 11869                           	callstack 0
 11870                           
 11871 ;; *************** function _Colour_decider *****************
 11872 ;; Defined at:
 11873 ;;		line 125 in file "color.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;  vals            2   74[COMRAM] PTR struct RGB
 11876 ;;		 -> vals(8), 
 11877 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11878 ;;		 -> rel(12), 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  RGB_col        12    6[BANK0 ] float [3]
 11881 ;;  Hue             4   28[BANK0 ] float 
 11882 ;;  Cmin            4   22[BANK0 ] float 
 11883 ;;  Cmax            4   18[BANK0 ] float 
 11884 ;;  i               2   26[BANK0 ] int 
 11885 ;;  Cmax_i          2    4[BANK0 ] int 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  2   74[COMRAM] int 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11896 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;Total ram usage:       38 bytes
 11900 ;; Hardware stack levels used: 1
 11901 ;; Hardware stack levels required when called: 3
 11902 ;; This function calls:
 11903 ;;		___fladd
 11904 ;;		___fldiv
 11905 ;;		___fleq
 11906 ;;		___flge
 11907 ;;		___flmul
 11908 ;;		___flsub
 11909 ;;		___xxtofl
 11910 ;; This function is called by:
 11911 ;;		_main
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text71
 11916   000E3E                     __ptext71:
 11917                           	callstack 0
 11918   000E3E                     _Colour_decider:
 11919                           	callstack 27
 11920   000E3E                     
 11921                           ;color.c: 126:     float Cmax = 0;
 11922   000E3E  0E00               	movlw	0
 11923   000E40  0100               	movlb	0	; () banked
 11924   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11925   000E44  0E00               	movlw	0
 11926   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11927   000E48  0E00               	movlw	0
 11928   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11929   000E4C  0E00               	movlw	0
 11930   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11931                           
 11932                           ;color.c: 127:     float Cmin= 100000;
 11933   000E50  0E00               	movlw	0
 11934   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11935   000E54  0E50               	movlw	80
 11936   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11937   000E58  0EC3               	movlw	195
 11938   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11939   000E5C  0E47               	movlw	71
 11940   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11941                           
 11942                           ;color.c: 128:     int Cmax_i =4;
 11943   000E60  0E00               	movlw	0
 11944   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11945   000E64  0E04               	movlw	4
 11946   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11947   000E68                     
 11948                           ; BSR set to: 0
 11949                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11950   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11951   000E6C  0E0B               	movlw	11
 11952   000E6E                     u5121:
 11953   000E6E  6ADE               	clrf	postinc2,c
 11954   000E70  06E8               	decf	wreg,f,c
 11955   000E72  E2FD               	bc	u5121
 11956   000E74                     
 11957                           ; BSR set to: 0
 11958   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11959   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11960   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 11961   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11962   000E84  0E00               	movlw	0
 11963   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11964   000E88  0EFF               	movlw	-1
 11965   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 11966   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 11967   000E8E  0E01               	movlw	1
 11968   000E90  EC16  F021         	call	___xxtofl
 11969   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11970   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11971   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11972   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11973   000EA4  EE20 F002          	lfsr	2,2
 11974   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 11975   000EAA  26D9               	addwf	fsr2l,f,c
 11976   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11977   000EAE  22DA               	addwfc	fsr2h,f,c
 11978   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 11979   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11980   000EB8  0E00               	movlw	0
 11981   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11982   000EBC  0EFF               	movlw	-1
 11983   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 11984   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 11985   000EC2  0E01               	movlw	1
 11986   000EC4  EC16  F021         	call	___xxtofl
 11987   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11988   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11989   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11990   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11991   000ED8  EE20 F004          	lfsr	2,4
 11992   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 11993   000EDE  26D9               	addwf	fsr2l,f,c
 11994   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11995   000EE2  22DA               	addwfc	fsr2h,f,c
 11996   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 11997   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11998   000EEC  0E00               	movlw	0
 11999   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12000   000EF0  0EFF               	movlw	-1
 12001   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12002   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12003   000EF6  0E01               	movlw	1
 12004   000EF8  EC16  F021         	call	___xxtofl
 12005   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12006   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12007   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12008   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12009   000F0C                     
 12010                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12011   000F0C  0E00               	movlw	0
 12012   000F0E  0100               	movlb	0	; () banked
 12013   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12014   000F12  0E00               	movlw	0
 12015   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 12016   000F16                     l5303:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12020   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12021   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12022   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12023   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12024   000F26  0E66               	movlw	low Colour_decider@RGB_col
 12025   000F28  6E4F               	movwf	??_Colour_decider^0,c
 12026   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 12027   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 12028   000F2E  90D8               	bcf	status,0,c
 12029   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12030   000F32  6ED9               	movwf	fsr2l,c
 12031   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12032   000F36  6EDA               	movwf	fsr2h,c
 12033   000F38  90D8               	bcf	status,0,c
 12034   000F3A  36D9               	rlcf	fsr2l,f,c
 12035   000F3C  36DA               	rlcf	fsr2h,f,c
 12036   000F3E  504F               	movf	??_Colour_decider^0,w,c
 12037   000F40  26D9               	addwf	fsr2l,f,c
 12038   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 12039   000F44  22DA               	addwfc	fsr2h,f,c
 12040   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 12041   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12042   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12043   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12044   000F56  EC75  F025         	call	___flge	;wreg free
 12045   000F5A  B0D8               	btfsc	status,0,c
 12046   000F5C  EFB2  F007         	goto	u5131
 12047   000F60  EFB4  F007         	goto	u5130
 12048   000F64                     u5131:
 12049   000F64  EFD1  F007         	goto	l5309
 12050   000F68                     u5130:
 12051   000F68                     
 12052                           ;color.c: 137:             Cmax=RGB_col[i];
 12053   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12054   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12055   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12056   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12057   000F70  90D8               	bcf	status,0,c
 12058   000F72  0100               	movlb	0	; () banked
 12059   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12060   000F76  6ED9               	movwf	fsr2l,c
 12061   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12062   000F7A  6EDA               	movwf	fsr2h,c
 12063   000F7C  90D8               	bcf	status,0,c
 12064   000F7E  36D9               	rlcf	fsr2l,f,c
 12065   000F80  36DA               	rlcf	fsr2h,f,c
 12066   000F82  504F               	movf	??_Colour_decider^0,w,c
 12067   000F84  26D9               	addwf	fsr2l,f,c
 12068   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12069   000F88  22DA               	addwfc	fsr2h,f,c
 12070   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12071   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12072   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12073   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12074   000F9A                     
 12075                           ; BSR set to: 0
 12076                           ;color.c: 138:             Cmax_i=i;
 12077   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12078   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12079   000FA2                     l5309:
 12080                           
 12081                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12082   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12083   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12084   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12085   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12086   000FAA  90D8               	bcf	status,0,c
 12087   000FAC  0100               	movlb	0	; () banked
 12088   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12089   000FB0  6ED9               	movwf	fsr2l,c
 12090   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12091   000FB4  6EDA               	movwf	fsr2h,c
 12092   000FB6  90D8               	bcf	status,0,c
 12093   000FB8  36D9               	rlcf	fsr2l,f,c
 12094   000FBA  36DA               	rlcf	fsr2h,f,c
 12095   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12096   000FBE  26D9               	addwf	fsr2l,f,c
 12097   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12098   000FC2  22DA               	addwfc	fsr2h,f,c
 12099   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12100   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12101   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12102   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12103   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12104   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12105   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12106   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12107   000FE4  EC75  F025         	call	___flge	;wreg free
 12108   000FE8  B0D8               	btfsc	status,0,c
 12109   000FEA  EFF9  F007         	goto	u5141
 12110   000FEE  EFFB  F007         	goto	u5140
 12111   000FF2                     u5141:
 12112   000FF2  EF14  F008         	goto	l5313
 12113   000FF6                     u5140:
 12114   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12115   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12116   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12117   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12118   000FFE  90D8               	bcf	status,0,c
 12119   001000  0100               	movlb	0	; () banked
 12120   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12121   001004  6ED9               	movwf	fsr2l,c
 12122   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12123   001008  6EDA               	movwf	fsr2h,c
 12124   00100A  90D8               	bcf	status,0,c
 12125   00100C  36D9               	rlcf	fsr2l,f,c
 12126   00100E  36DA               	rlcf	fsr2h,f,c
 12127   001010  504F               	movf	??_Colour_decider^0,w,c
 12128   001012  26D9               	addwf	fsr2l,f,c
 12129   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12130   001016  22DA               	addwfc	fsr2h,f,c
 12131   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12132   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12133   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12134   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12135   001028                     l5313:
 12136                           
 12137                           ;color.c: 141:     }
 12138   001028  0100               	movlb	0	; () banked
 12139   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12140   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12141   00102E                     
 12142                           ; BSR set to: 0
 12143   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12144   001030  EF23  F008         	goto	u5151
 12145   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12146   001036  E109               	bnz	u5150
 12147   001038  0E03               	movlw	3
 12148   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12149   00103C  A0D8               	btfss	status,0,c
 12150   00103E  EF23  F008         	goto	u5151
 12151   001042  EF25  F008         	goto	u5150
 12152   001046                     u5151:
 12153   001046  EF8B  F007         	goto	l5303
 12154   00104A                     u5150:
 12155   00104A                     
 12156                           ; BSR set to: 0
 12157                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12158   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12159   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12160   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12161   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12162   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12163   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12164   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12165   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12166   00106A  EC7C  F02E         	call	___flsub	;wreg free
 12167   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12168   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12169   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12170   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12171   00107E  0E00               	movlw	0
 12172   001080  6E36               	movwf	___fleq@ff2^0,c
 12173   001082  0E00               	movlw	0
 12174   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12175   001086  0E00               	movlw	0
 12176   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12177   00108A  0E00               	movlw	0
 12178   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12179   00108E  ECE6  F027         	call	___fleq	;wreg free
 12180   001092  A0D8               	btfss	status,0,c
 12181   001094  EF4E  F008         	goto	u5161
 12182   001098  EF50  F008         	goto	u5160
 12183   00109C                     u5161:
 12184   00109C  EF56  F008         	goto	l5323
 12185   0010A0                     u5160:
 12186   0010A0                     l5319:
 12187   0010A0  0E00               	movlw	0
 12188   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12189   0010A4  0E00               	movlw	0
 12190   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12191   0010A8  EF4E  F00C         	goto	l76
 12192   0010AC                     l5323:
 12193                           
 12194                           ;color.c: 146:     if (Cmax_i==0){
 12195   0010AC  0100               	movlb	0	; () banked
 12196   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12197   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12198   0010B2  A4D8               	btfss	status,2,c
 12199   0010B4  EF5E  F008         	goto	u5171
 12200   0010B8  EF60  F008         	goto	u5170
 12201   0010BC                     u5171:
 12202   0010BC  EFD4  F008         	goto	l5331
 12203   0010C0                     u5170:
 12204   0010C0                     
 12205                           ; BSR set to: 0
 12206                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12207   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12208   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12209   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12210   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12211   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12212   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12213   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12214   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12215   0010E0  EC7C  F02E         	call	___flsub	;wreg free
 12216   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12217   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12218   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12219   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12220   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12221   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12222   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12223   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12224   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12225   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12226   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12227   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12228   001114  EC7C  F02E         	call	___flsub	;wreg free
 12229   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12230   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12231   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12232   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12233   001128  EC77  F018         	call	___fldiv	;wreg free
 12234   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12235   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12236   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12237   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12238   00113C  0E00               	movlw	0
 12239   00113E  6E15               	movwf	___flmul@a^0,c
 12240   001140  0E00               	movlw	0
 12241   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12242   001144  0E70               	movlw	112
 12243   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12244   001148  0E42               	movlw	66
 12245   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12246   00114C  EC62  F016         	call	___flmul	;wreg free
 12247   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12248   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12249   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12250   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12251   001160                     
 12252                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12253   001160  0100               	movlb	0	; () banked
 12254   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12255   001164  EFB8  F008         	goto	u5180
 12256   001168  EFB6  F008         	goto	u5181
 12257   00116C                     u5181:
 12258   00116C  EFB3  F009         	goto	l5341
 12259   001170                     u5180:
 12260   001170                     
 12261                           ; BSR set to: 0
 12262   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12263   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12264   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12265   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12266   001180  0E00               	movlw	0
 12267   001182  6E05               	movwf	___fladd@a^0,c
 12268   001184  0E00               	movlw	0
 12269   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12270   001188  0EB4               	movlw	180
 12271   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12272   00118C  0E43               	movlw	67
 12273   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12274   001190  EC02  F014         	call	___fladd	;wreg free
 12275   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12276   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12277   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12278   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12279   0011A4  EFB3  F009         	goto	l5341
 12280   0011A8                     l5331:
 12281                           
 12282                           ; BSR set to: 0
 12283   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12284   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12285   0011AC  A4D8               	btfss	status,2,c
 12286   0011AE  EFDB  F008         	goto	u5191
 12287   0011B2  EFDD  F008         	goto	u5190
 12288   0011B6                     u5191:
 12289   0011B6  EF49  F009         	goto	l5337
 12290   0011BA                     u5190:
 12291   0011BA                     
 12292                           ; BSR set to: 0
 12293                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12294   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12295   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12296   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12297   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12298   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12299   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12300   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12301   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12302   0011DA  EC7C  F02E         	call	___flsub	;wreg free
 12303   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12304   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12305   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12306   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12307   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12308   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12309   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12310   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12311   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12312   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12313   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12314   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12315   00120E  EC7C  F02E         	call	___flsub	;wreg free
 12316   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12317   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12318   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12319   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12320   001222  EC77  F018         	call	___fldiv	;wreg free
 12321   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12322   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12323   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12324   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12325   001236                     
 12326                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12327   001236  0E00               	movlw	0
 12328   001238  6E05               	movwf	___fladd@a^0,c
 12329   00123A  0E00               	movlw	0
 12330   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12331   00123E  0E00               	movlw	0
 12332   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12333   001242  0E40               	movlw	64
 12334   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12335   001246  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12336   00124A  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12337   00124E  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12338   001252  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12339   001256  EC02  F014         	call	___fladd	;wreg free
 12340   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12341   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12342   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12343   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12344   00126A  0E00               	movlw	0
 12345   00126C  6E15               	movwf	___flmul@a^0,c
 12346   00126E  0E00               	movlw	0
 12347   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12348   001272  0E70               	movlw	112
 12349   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12350   001276  0E42               	movlw	66
 12351   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12352   00127A  EC62  F016         	call	___flmul	;wreg free
 12353   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12354   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12355   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12356   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12357                           
 12358                           ;color.c: 155:     }
 12359   00128E  EFB3  F009         	goto	l5341
 12360   001292                     l5337:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12364   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12365   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12366   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12367   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12368   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12369   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12370   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12371   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12372   0012B2  EC7C  F02E         	call	___flsub	;wreg free
 12373   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12374   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12375   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12376   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12377   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12378   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12379   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12380   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12381   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12382   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12383   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12384   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12385   0012E6  EC7C  F02E         	call	___flsub	;wreg free
 12386   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12387   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12388   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12389   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12390   0012FA  EC77  F018         	call	___fldiv	;wreg free
 12391   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12392   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12393   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12394   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12395   00130E                     
 12396                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12397   00130E  0E00               	movlw	0
 12398   001310  6E05               	movwf	___fladd@a^0,c
 12399   001312  0E00               	movlw	0
 12400   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12401   001316  0E80               	movlw	128
 12402   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12403   00131A  0E40               	movlw	64
 12404   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12405   00131E  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12406   001322  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12407   001326  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12408   00132A  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12409   00132E  EC02  F014         	call	___fladd	;wreg free
 12410   001332  C001  F011         	movff	?___fladd,___flmul@b
 12411   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12412   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12413   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12414   001342  0E00               	movlw	0
 12415   001344  6E15               	movwf	___flmul@a^0,c
 12416   001346  0E00               	movlw	0
 12417   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12418   00134A  0E70               	movlw	112
 12419   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12420   00134E  0E42               	movlw	66
 12421   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12422   001352  EC62  F016         	call	___flmul	;wreg free
 12423   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12424   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12425   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12426   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12427   001366                     l5341:
 12428                           
 12429                           ;color.c: 162:     if ((330<=Hue)&(Hue<=360)){
 12430   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12431   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12432   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12433   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12434   001376  0E00               	movlw	0
 12435   001378  6E2E               	movwf	___flge@ff2^0,c
 12436   00137A  0E00               	movlw	0
 12437   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12438   00137E  0EA5               	movlw	165
 12439   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12440   001382  0E43               	movlw	67
 12441   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12442   001386  EC75  F025         	call	___flge	;wreg free
 12443   00138A  A0D8               	btfss	status,0,c
 12444   00138C  EFCA  F009         	goto	u5201
 12445   001390  EFCC  F009         	goto	u5200
 12446   001394                     u5201:
 12447   001394  EFEB  F009         	goto	l5351
 12448   001398                     u5200:
 12449   001398  0E00               	movlw	0
 12450   00139A  6E2A               	movwf	___flge@ff1^0,c
 12451   00139C  0E00               	movlw	0
 12452   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12453   0013A0  0EB4               	movlw	180
 12454   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12455   0013A4  0E43               	movlw	67
 12456   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12457   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12458   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12459   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12460   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12461   0013B8  EC75  F025         	call	___flge	;wreg free
 12462   0013BC  A0D8               	btfss	status,0,c
 12463   0013BE  EFE3  F009         	goto	u5211
 12464   0013C2  EFE5  F009         	goto	u5210
 12465   0013C6                     u5211:
 12466   0013C6  EFEB  F009         	goto	l5351
 12467   0013CA                     u5210:
 12468   0013CA                     
 12469                           ;color.c: 163:         return 1;
 12470   0013CA  0E00               	movlw	0
 12471   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12472   0013CE  0E01               	movlw	1
 12473   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12474   0013D2  EF4E  F00C         	goto	l76
 12475   0013D6                     l5351:
 12476   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12477   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12478   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12479   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12480   0013E6  0E00               	movlw	0
 12481   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12482   0013EA  0E00               	movlw	0
 12483   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12484   0013EE  0EA0               	movlw	160
 12485   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12486   0013F2  0E40               	movlw	64
 12487   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12488   0013F6  EC75  F025         	call	___flge	;wreg free
 12489   0013FA  A0D8               	btfss	status,0,c
 12490   0013FC  EF02  F00A         	goto	u5221
 12491   001400  EF04  F00A         	goto	u5220
 12492   001404                     u5221:
 12493   001404  EF23  F00A         	goto	l5361
 12494   001408                     u5220:
 12495   001408  0E00               	movlw	0
 12496   00140A  6E2A               	movwf	___flge@ff1^0,c
 12497   00140C  0E00               	movlw	0
 12498   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12499   001410  0E30               	movlw	48
 12500   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12501   001414  0E41               	movlw	65
 12502   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12503   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12504   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12505   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12506   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12507   001428  EC75  F025         	call	___flge	;wreg free
 12508   00142C  A0D8               	btfss	status,0,c
 12509   00142E  EF1B  F00A         	goto	u5231
 12510   001432  EF1D  F00A         	goto	u5230
 12511   001436                     u5231:
 12512   001436  EF23  F00A         	goto	l5361
 12513   00143A                     u5230:
 12514   00143A                     
 12515                           ;color.c: 167:         return 2;
 12516   00143A  0E00               	movlw	0
 12517   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12518   00143E  0E02               	movlw	2
 12519   001440  6E4B               	movwf	?_Colour_decider^0,c
 12520   001442  EF4E  F00C         	goto	l76
 12521   001446                     l5361:
 12522   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12523   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12524   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12525   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12526   001456  0E00               	movlw	0
 12527   001458  6E2E               	movwf	___flge@ff2^0,c
 12528   00145A  0E00               	movlw	0
 12529   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12530   00145E  0E90               	movlw	144
 12531   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12532   001462  0E41               	movlw	65
 12533   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12534   001466  EC75  F025         	call	___flge	;wreg free
 12535   00146A  A0D8               	btfss	status,0,c
 12536   00146C  EF3A  F00A         	goto	u5241
 12537   001470  EF3C  F00A         	goto	u5240
 12538   001474                     u5241:
 12539   001474  EFF0  F00A         	goto	l5391
 12540   001478                     u5240:
 12541   001478  0E00               	movlw	0
 12542   00147A  6E2A               	movwf	___flge@ff1^0,c
 12543   00147C  0E00               	movlw	0
 12544   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12545   001480  0EC8               	movlw	200
 12546   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12547   001484  0E41               	movlw	65
 12548   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12549   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12550   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12551   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12552   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12553   001498  EC75  F025         	call	___flge	;wreg free
 12554   00149C  A0D8               	btfss	status,0,c
 12555   00149E  EF53  F00A         	goto	u5251
 12556   0014A2  EF55  F00A         	goto	u5250
 12557   0014A6                     u5251:
 12558   0014A6  EFF0  F00A         	goto	l5391
 12559   0014AA                     u5250:
 12560   0014AA                     
 12561                           ;color.c: 172:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12562   0014AA  0EB8               	movlw	184
 12563   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12564   0014AE  0E1E               	movlw	30
 12565   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12566   0014B2  0E85               	movlw	133
 12567   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12568   0014B6  0E3E               	movlw	62
 12569   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12570   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12571   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12572   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12573   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12574   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12575   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12576   0014D2  EC75  F025         	call	___flge	;wreg free
 12577   0014D6  A0D8               	btfss	status,0,c
 12578   0014D8  EF70  F00A         	goto	u5261
 12579   0014DC  EF72  F00A         	goto	u5260
 12580   0014E0                     u5261:
 12581   0014E0  EFA8  F00A         	goto	l5377
 12582   0014E4                     u5260:
 12583   0014E4  0ECD               	movlw	205
 12584   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12585   0014E8  0ECC               	movlw	204
 12586   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12587   0014EC  0ECC               	movlw	204
 12588   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12589   0014F0  0E3D               	movlw	61
 12590   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12591   0014F4  EE20 F008          	lfsr	2,8
 12592   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12593   0014FA  26D9               	addwf	fsr2l,f,c
 12594   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12595   0014FE  22DA               	addwfc	fsr2h,f,c
 12596   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12597   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12598   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12599   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12600   001510  EC75  F025         	call	___flge	;wreg free
 12601   001514  B0D8               	btfsc	status,0,c
 12602   001516  EF8F  F00A         	goto	u5271
 12603   00151A  EF91  F00A         	goto	u5270
 12604   00151E                     u5271:
 12605   00151E  EFA8  F00A         	goto	l5377
 12606   001522                     u5270:
 12607   001522  EE20 F006          	lfsr	2,6
 12608   001526  504B               	movf	Colour_decider@vals^0,w,c
 12609   001528  26D9               	addwf	fsr2l,f,c
 12610   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12611   00152C  22DA               	addwfc	fsr2h,f,c
 12612   00152E  0E01               	movlw	1
 12613   001530  BEDB               	btfsc	plusw2,7,c
 12614   001532  EFA4  F00A         	goto	u5281
 12615   001536  0EE9               	movlw	233
 12616   001538  5CDE               	subwf	postinc2,w,c
 12617   00153A  0E03               	movlw	3
 12618   00153C  58DE               	subwfb	postinc2,w,c
 12619   00153E  A0D8               	btfss	status,0,c
 12620   001540  EFA4  F00A         	goto	u5281
 12621   001544  EFA6  F00A         	goto	u5280
 12622   001548                     u5281:
 12623   001548  EFA8  F00A         	goto	l5377
 12624   00154C                     u5280:
 12625   00154C  EF50  F008         	goto	l5319
 12626   001550                     l5377:
 12627   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12628   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12629   001558  CFDE F02A          	movff	postinc2,___flge@ff1
 12630   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12631   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12632   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12633   001568  0EB8               	movlw	184
 12634   00156A  6E2E               	movwf	___flge@ff2^0,c
 12635   00156C  0E1E               	movlw	30
 12636   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12637   001570  0E85               	movlw	133
 12638   001572  6E30               	movwf	(___flge@ff2+2)^0,c
 12639   001574  0E3E               	movlw	62
 12640   001576  6E31               	movwf	(___flge@ff2+3)^0,c
 12641   001578  EC75  F025         	call	___flge	;wreg free
 12642   00157C  A0D8               	btfss	status,0,c
 12643   00157E  EFC3  F00A         	goto	u5291
 12644   001582  EFC5  F00A         	goto	u5290
 12645   001586                     u5291:
 12646   001586  EFEA  F00A         	goto	l5387
 12647   00158A                     u5290:
 12648   00158A  EE20 F008          	lfsr	2,8
 12649   00158E  504D               	movf	Colour_decider@rel^0,w,c
 12650   001590  26D9               	addwf	fsr2l,f,c
 12651   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12652   001594  22DA               	addwfc	fsr2h,f,c
 12653   001596  CFDE F02A          	movff	postinc2,___flge@ff1
 12654   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12655   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12656   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12657   0015A6  0ECD               	movlw	205
 12658   0015A8  6E2E               	movwf	___flge@ff2^0,c
 12659   0015AA  0ECC               	movlw	204
 12660   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12661   0015AE  0ECC               	movlw	204
 12662   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12663   0015B2  0E3D               	movlw	61
 12664   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12665   0015B6  EC75  F025         	call	___flge	;wreg free
 12666   0015BA  B0D8               	btfsc	status,0,c
 12667   0015BC  EFE2  F00A         	goto	u5301
 12668   0015C0  EFE4  F00A         	goto	u5300
 12669   0015C4                     u5301:
 12670   0015C4  EFEA  F00A         	goto	l5387
 12671   0015C8                     u5300:
 12672   0015C8                     
 12673                           ;color.c: 176:             return 3;
 12674   0015C8  0E00               	movlw	0
 12675   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12676   0015CC  0E03               	movlw	3
 12677   0015CE  6E4B               	movwf	?_Colour_decider^0,c
 12678   0015D0  EF4E  F00C         	goto	l76
 12679   0015D4                     l5387:
 12680                           
 12681                           ;color.c: 179:             return 10;
 12682   0015D4  0E00               	movlw	0
 12683   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12684   0015D8  0E0A               	movlw	10
 12685   0015DA  6E4B               	movwf	?_Colour_decider^0,c
 12686   0015DC  EF4E  F00C         	goto	l76
 12687   0015E0                     l5391:
 12688   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12689   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12690   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12691   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12692   0015F0  0E00               	movlw	0
 12693   0015F2  6E2E               	movwf	___flge@ff2^0,c
 12694   0015F4  0E00               	movlw	0
 12695   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12696   0015F8  0EAA               	movlw	170
 12697   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12698   0015FC  0E42               	movlw	66
 12699   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12700   001600  EC75  F025         	call	___flge	;wreg free
 12701   001604  A0D8               	btfss	status,0,c
 12702   001606  EF07  F00B         	goto	u5311
 12703   00160A  EF09  F00B         	goto	u5310
 12704   00160E                     u5311:
 12705   00160E  EF28  F00B         	goto	l5401
 12706   001612                     u5310:
 12707   001612  0E00               	movlw	0
 12708   001614  6E2A               	movwf	___flge@ff1^0,c
 12709   001616  0E00               	movlw	0
 12710   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
 12711   00161A  0E20               	movlw	32
 12712   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12713   00161E  0E43               	movlw	67
 12714   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
 12715   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12716   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12717   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12718   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12719   001632  EC75  F025         	call	___flge	;wreg free
 12720   001636  A0D8               	btfss	status,0,c
 12721   001638  EF20  F00B         	goto	u5321
 12722   00163C  EF22  F00B         	goto	u5320
 12723   001640                     u5321:
 12724   001640  EF28  F00B         	goto	l5401
 12725   001644                     u5320:
 12726   001644                     
 12727                           ;color.c: 185:         return 4;
 12728   001644  0E00               	movlw	0
 12729   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12730   001648  0E04               	movlw	4
 12731   00164A  6E4B               	movwf	?_Colour_decider^0,c
 12732   00164C  EF4E  F00C         	goto	l76
 12733   001650                     l5401:
 12734   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12735   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12736   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12737   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12738   001660  0E00               	movlw	0
 12739   001662  6E2E               	movwf	___flge@ff2^0,c
 12740   001664  0E00               	movlw	0
 12741   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
 12742   001668  0E70               	movlw	112
 12743   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
 12744   00166C  0E42               	movlw	66
 12745   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
 12746   001670  EC75  F025         	call	___flge	;wreg free
 12747   001674  A0D8               	btfss	status,0,c
 12748   001676  EF3F  F00B         	goto	u5331
 12749   00167A  EF41  F00B         	goto	u5330
 12750   00167E                     u5331:
 12751   00167E  EFE2  F00B         	goto	l5429
 12752   001682                     u5330:
 12753   001682  0E00               	movlw	0
 12754   001684  6E2A               	movwf	___flge@ff1^0,c
 12755   001686  0E00               	movlw	0
 12756   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
 12757   00168A  0E9A               	movlw	154
 12758   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12759   00168E  0E42               	movlw	66
 12760   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
 12761   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12762   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12763   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12764   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12765   0016A2  EC75  F025         	call	___flge	;wreg free
 12766   0016A6  A0D8               	btfss	status,0,c
 12767   0016A8  EF58  F00B         	goto	u5341
 12768   0016AC  EF5A  F00B         	goto	u5340
 12769   0016B0                     u5341:
 12770   0016B0  EFE2  F00B         	goto	l5429
 12771   0016B4                     u5340:
 12772   0016B4                     
 12773                           ;color.c: 190:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12774   0016B4  EE20 F008          	lfsr	2,8
 12775   0016B8  504D               	movf	Colour_decider@rel^0,w,c
 12776   0016BA  26D9               	addwf	fsr2l,f,c
 12777   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12778   0016BE  22DA               	addwfc	fsr2h,f,c
 12779   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
 12780   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12781   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12782   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12783   0016D0  0E8F               	movlw	143
 12784   0016D2  6E2E               	movwf	___flge@ff2^0,c
 12785   0016D4  0EC2               	movlw	194
 12786   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12787   0016D8  0EF5               	movlw	245
 12788   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
 12789   0016DC  0E3D               	movlw	61
 12790   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
 12791   0016E0  EC75  F025         	call	___flge	;wreg free
 12792   0016E4  A0D8               	btfss	status,0,c
 12793   0016E6  EF77  F00B         	goto	u5351
 12794   0016EA  EF79  F00B         	goto	u5350
 12795   0016EE                     u5351:
 12796   0016EE  EF9E  F00B         	goto	l5415
 12797   0016F2                     u5350:
 12798   0016F2  EE20 F004          	lfsr	2,4
 12799   0016F6  504D               	movf	Colour_decider@rel^0,w,c
 12800   0016F8  26D9               	addwf	fsr2l,f,c
 12801   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12802   0016FC  22DA               	addwfc	fsr2h,f,c
 12803   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
 12804   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12805   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12806   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12807   00170E  0E3D               	movlw	61
 12808   001710  6E2E               	movwf	___flge@ff2^0,c
 12809   001712  0E0A               	movlw	10
 12810   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
 12811   001716  0E57               	movlw	87
 12812   001718  6E30               	movwf	(___flge@ff2+2)^0,c
 12813   00171A  0E3E               	movlw	62
 12814   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
 12815   00171E  EC75  F025         	call	___flge	;wreg free
 12816   001722  B0D8               	btfsc	status,0,c
 12817   001724  EF96  F00B         	goto	u5361
 12818   001728  EF98  F00B         	goto	u5360
 12819   00172C                     u5361:
 12820   00172C  EF9E  F00B         	goto	l5415
 12821   001730                     u5360:
 12822   001730                     
 12823                           ;color.c: 191:             return 6;
 12824   001730  0E00               	movlw	0
 12825   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12826   001734  0E06               	movlw	6
 12827   001736  6E4B               	movwf	?_Colour_decider^0,c
 12828   001738  EF4E  F00C         	goto	l76
 12829   00173C                     l5415:
 12830   00173C  EE20 F008          	lfsr	2,8
 12831   001740  504D               	movf	Colour_decider@rel^0,w,c
 12832   001742  26D9               	addwf	fsr2l,f,c
 12833   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12834   001746  22DA               	addwfc	fsr2h,f,c
 12835   001748  CFDE F02A          	movff	postinc2,___flge@ff1
 12836   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12837   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12838   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12839   001758  0E8F               	movlw	143
 12840   00175A  6E2E               	movwf	___flge@ff2^0,c
 12841   00175C  0EC2               	movlw	194
 12842   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12843   001760  0EF5               	movlw	245
 12844   001762  6E30               	movwf	(___flge@ff2+2)^0,c
 12845   001764  0E3D               	movlw	61
 12846   001766  6E31               	movwf	(___flge@ff2+3)^0,c
 12847   001768  EC75  F025         	call	___flge	;wreg free
 12848   00176C  B0D8               	btfsc	status,0,c
 12849   00176E  EFBB  F00B         	goto	u5371
 12850   001772  EFBD  F00B         	goto	u5370
 12851   001776                     u5371:
 12852   001776  EFEA  F00A         	goto	l5387
 12853   00177A                     u5370:
 12854   00177A  0E3D               	movlw	61
 12855   00177C  6E2A               	movwf	___flge@ff1^0,c
 12856   00177E  0E0A               	movlw	10
 12857   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
 12858   001782  0E57               	movlw	87
 12859   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
 12860   001786  0E3E               	movlw	62
 12861   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
 12862   00178A  EE20 F004          	lfsr	2,4
 12863   00178E  504D               	movf	Colour_decider@rel^0,w,c
 12864   001790  26D9               	addwf	fsr2l,f,c
 12865   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12866   001794  22DA               	addwfc	fsr2h,f,c
 12867   001796  CFDE F02E          	movff	postinc2,___flge@ff2
 12868   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12869   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12870   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12871   0017A6  EC75  F025         	call	___flge	;wreg free
 12872   0017AA  B0D8               	btfsc	status,0,c
 12873   0017AC  EFDA  F00B         	goto	u5381
 12874   0017B0  EFDC  F00B         	goto	u5380
 12875   0017B4                     u5381:
 12876   0017B4  EFEA  F00A         	goto	l5387
 12877   0017B8                     u5380:
 12878   0017B8                     
 12879                           ;color.c: 194:             return 5;
 12880   0017B8  0E00               	movlw	0
 12881   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12882   0017BC  0E05               	movlw	5
 12883   0017BE  6E4B               	movwf	?_Colour_decider^0,c
 12884   0017C0  EF4E  F00C         	goto	l76
 12885   0017C4                     l5429:
 12886   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12887   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12888   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12889   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12890   0017D4  0E00               	movlw	0
 12891   0017D6  6E2E               	movwf	___flge@ff2^0,c
 12892   0017D8  0E00               	movlw	0
 12893   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12894   0017DC  0E40               	movlw	64
 12895   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
 12896   0017E0  0E41               	movlw	65
 12897   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
 12898   0017E4  EC75  F025         	call	___flge	;wreg free
 12899   0017E8  A0D8               	btfss	status,0,c
 12900   0017EA  EFF9  F00B         	goto	u5391
 12901   0017EE  EFFB  F00B         	goto	u5390
 12902   0017F2                     u5391:
 12903   0017F2  EF1A  F00C         	goto	l5439
 12904   0017F6                     u5390:
 12905   0017F6  0E00               	movlw	0
 12906   0017F8  6E2A               	movwf	___flge@ff1^0,c
 12907   0017FA  0E00               	movlw	0
 12908   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12909   0017FE  0E88               	movlw	136
 12910   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
 12911   001802  0E41               	movlw	65
 12912   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
 12913   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12914   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12915   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12916   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12917   001816  EC75  F025         	call	___flge	;wreg free
 12918   00181A  A0D8               	btfss	status,0,c
 12919   00181C  EF12  F00C         	goto	u5401
 12920   001820  EF14  F00C         	goto	u5400
 12921   001824                     u5401:
 12922   001824  EF1A  F00C         	goto	l5439
 12923   001828                     u5400:
 12924   001828                     
 12925                           ;color.c: 203:             return 7;
 12926   001828  0E00               	movlw	0
 12927   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12928   00182C  0E07               	movlw	7
 12929   00182E  6E4B               	movwf	?_Colour_decider^0,c
 12930   001830  EF4E  F00C         	goto	l76
 12931   001834                     l5439:
 12932   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12933   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12934   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12935   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12936   001844  0E00               	movlw	0
 12937   001846  6E2E               	movwf	___flge@ff2^0,c
 12938   001848  0E00               	movlw	0
 12939   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12940   00184C  0EB0               	movlw	176
 12941   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
 12942   001850  0E41               	movlw	65
 12943   001852  6E31               	movwf	(___flge@ff2+3)^0,c
 12944   001854  EC75  F025         	call	___flge	;wreg free
 12945   001858  A0D8               	btfss	status,0,c
 12946   00185A  EF31  F00C         	goto	u5411
 12947   00185E  EF33  F00C         	goto	u5410
 12948   001862                     u5411:
 12949   001862  EFEA  F00A         	goto	l5387
 12950   001866                     u5410:
 12951   001866  0E00               	movlw	0
 12952   001868  6E2A               	movwf	___flge@ff1^0,c
 12953   00186A  0E00               	movlw	0
 12954   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
 12955   00186E  0EC0               	movlw	192
 12956   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
 12957   001872  0E41               	movlw	65
 12958   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
 12959   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12960   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12961   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12962   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12963   001886  EC75  F025         	call	___flge	;wreg free
 12964   00188A  A0D8               	btfss	status,0,c
 12965   00188C  EF4A  F00C         	goto	u5421
 12966   001890  EF4C  F00C         	goto	u5420
 12967   001894                     u5421:
 12968   001894  EFEA  F00A         	goto	l5387
 12969   001898                     u5420:
 12970   001898  EF50  F008         	goto	l5319
 12971   00189C                     l76:
 12972   00189C  0012               	return		;funcret
 12973   00189E                     __end_of_Colour_decider:
 12974                           	callstack 0
 12975                           
 12976 ;; *************** function ___xxtofl *****************
 12977 ;; Defined at:
 12978 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  sign            1    wreg     unsigned char 
 12981 ;;  val             4    0[COMRAM] long 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;  sign            1    8[COMRAM] unsigned char 
 12984 ;;  arg             4   10[COMRAM] unsigned long 
 12985 ;;  exp             1    9[COMRAM] unsigned char 
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  4    0[COMRAM] unsigned char 
 12988 ;; Registers used:
 12989 ;;		wreg, status,2, status,0
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12998 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12999 ;;Total ram usage:       14 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; Hardware stack levels required when called: 1
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_colour_rel
 13006 ;;		_Colour_decider
 13007 ;;		_reverseOneBlock
 13008 ;;		_ForwardOneBlock
 13009 ;;		_Forwardhalfblock
 13010 ;;		_Backhalfblock
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text72
 13015   00422C                     __ptext72:
 13016                           	callstack 0
 13017   00422C                     ___xxtofl:
 13018                           	callstack 28
 13019                           
 13020                           ;incstack = 0
 13021                           ;___xxtofl@sign stored from wreg
 13022   00422C  6E09               	movwf	___xxtofl@sign^0,c
 13023   00422E  5009               	movf	___xxtofl@sign^0,w,c
 13024   004230  B4D8               	btfsc	status,2,c
 13025   004232  EF1D  F021         	goto	u5011
 13026   004236  EF1F  F021         	goto	u5010
 13027   00423A                     u5011:
 13028   00423A  EF41  F021         	goto	l1329
 13029   00423E                     u5010:
 13030   00423E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13031   004240  EF26  F021         	goto	u5020
 13032   004244  EF24  F021         	goto	u5021
 13033   004248                     u5021:
 13034   004248  EF41  F021         	goto	l1329
 13035   00424C                     u5020:
 13036   00424C  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13037   004250  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13038   004254  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13039   004258  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13040   00425C  1E05               	comf	??___xxtofl^0,f,c
 13041   00425E  1E06               	comf	(??___xxtofl+1)^0,f,c
 13042   004260  1E07               	comf	(??___xxtofl+2)^0,f,c
 13043   004262  1E08               	comf	(??___xxtofl+3)^0,f,c
 13044   004264  2A05               	incf	??___xxtofl^0,f,c
 13045   004266  0E00               	movlw	0
 13046   004268  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13047   00426A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13048   00426C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13049   00426E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13050   004272  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13051   004276  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13052   00427A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13053   00427E  EF49  F021         	goto	l5189
 13054   004282                     l1329:
 13055   004282  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13056   004286  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13057   00428A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13058   00428E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13059   004292                     l5189:
 13060   004292  5001               	movf	___xxtofl@val^0,w,c
 13061   004294  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13062   004296  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13063   004298  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13064   00429A  A4D8               	btfss	status,2,c
 13065   00429C  EF52  F021         	goto	u5031
 13066   0042A0  EF54  F021         	goto	u5030
 13067   0042A4                     u5031:
 13068   0042A4  EF5E  F021         	goto	l5195
 13069   0042A8                     u5030:
 13070   0042A8  0E00               	movlw	0
 13071   0042AA  6E01               	movwf	?___xxtofl^0,c
 13072   0042AC  0E00               	movlw	0
 13073   0042AE  6E02               	movwf	(?___xxtofl+1)^0,c
 13074   0042B0  0E00               	movlw	0
 13075   0042B2  6E03               	movwf	(?___xxtofl+2)^0,c
 13076   0042B4  0E00               	movlw	0
 13077   0042B6  6E04               	movwf	(?___xxtofl+3)^0,c
 13078   0042B8  EFEF  F021         	goto	l1332
 13079   0042BC                     l5195:
 13080   0042BC  0E96               	movlw	150
 13081   0042BE  6E0A               	movwf	___xxtofl@exp^0,c
 13082   0042C0  EF68  F021         	goto	l5199
 13083   0042C4                     l5197:
 13084   0042C4  2A0A               	incf	___xxtofl@exp^0,f,c
 13085   0042C6  90D8               	bcf	status,0,c
 13086   0042C8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13087   0042CA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13088   0042CC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13089   0042CE  320B               	rrcf	___xxtofl@arg^0,f,c
 13090   0042D0                     l5199:
 13091   0042D0  0E00               	movlw	0
 13092   0042D2  140B               	andwf	___xxtofl@arg^0,w,c
 13093   0042D4  6E05               	movwf	??___xxtofl^0,c
 13094   0042D6  0E00               	movlw	0
 13095   0042D8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13096   0042DA  6E06               	movwf	(??___xxtofl+1)^0,c
 13097   0042DC  0E00               	movlw	0
 13098   0042DE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13099   0042E0  6E07               	movwf	(??___xxtofl+2)^0,c
 13100   0042E2  0EFE               	movlw	254
 13101   0042E4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13102   0042E6  6E08               	movwf	(??___xxtofl+3)^0,c
 13103   0042E8  5005               	movf	??___xxtofl^0,w,c
 13104   0042EA  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13105   0042EC  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13106   0042EE  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13107   0042F0  A4D8               	btfss	status,2,c
 13108   0042F2  EF7D  F021         	goto	u5041
 13109   0042F6  EF7F  F021         	goto	u5040
 13110   0042FA                     u5041:
 13111   0042FA  EF62  F021         	goto	l5197
 13112   0042FE                     u5040:
 13113   0042FE  EF8D  F021         	goto	l1336
 13114   004302                     l5201:
 13115   004302  2A0A               	incf	___xxtofl@exp^0,f,c
 13116   004304  0E01               	movlw	1
 13117   004306  260B               	addwf	___xxtofl@arg^0,f,c
 13118   004308  0E00               	movlw	0
 13119   00430A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13120   00430C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13121   00430E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13122   004310  90D8               	bcf	status,0,c
 13123   004312  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13124   004314  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13125   004316  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13126   004318  320B               	rrcf	___xxtofl@arg^0,f,c
 13127   00431A                     l1336:
 13128   00431A  0E00               	movlw	0
 13129   00431C  140B               	andwf	___xxtofl@arg^0,w,c
 13130   00431E  6E05               	movwf	??___xxtofl^0,c
 13131   004320  0E00               	movlw	0
 13132   004322  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13133   004324  6E06               	movwf	(??___xxtofl+1)^0,c
 13134   004326  0E00               	movlw	0
 13135   004328  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13136   00432A  6E07               	movwf	(??___xxtofl+2)^0,c
 13137   00432C  0EFF               	movlw	255
 13138   00432E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13139   004330  6E08               	movwf	(??___xxtofl+3)^0,c
 13140   004332  5005               	movf	??___xxtofl^0,w,c
 13141   004334  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13142   004336  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13143   004338  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13144   00433A  A4D8               	btfss	status,2,c
 13145   00433C  EFA2  F021         	goto	u5051
 13146   004340  EFA4  F021         	goto	u5050
 13147   004344                     u5051:
 13148   004344  EF81  F021         	goto	l5201
 13149   004348                     u5050:
 13150   004348  EFAC  F021         	goto	l5209
 13151   00434C                     l5207:
 13152   00434C  060A               	decf	___xxtofl@exp^0,f,c
 13153   00434E  90D8               	bcf	status,0,c
 13154   004350  360B               	rlcf	___xxtofl@arg^0,f,c
 13155   004352  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13156   004354  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13157   004356  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13158   004358                     l5209:
 13159   004358  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13160   00435A  EFB1  F021         	goto	u5061
 13161   00435E  EFB3  F021         	goto	u5060
 13162   004362                     u5061:
 13163   004362  EFBB  F021         	goto	l1343
 13164   004366                     u5060:
 13165   004366  0E02               	movlw	2
 13166   004368  600A               	cpfslt	___xxtofl@exp^0,c
 13167   00436A  EFB9  F021         	goto	u5071
 13168   00436E  EFBB  F021         	goto	u5070
 13169   004372                     u5071:
 13170   004372  EFA6  F021         	goto	l5207
 13171   004376                     u5070:
 13172   004376                     l1343:
 13173   004376  B00A               	btfsc	___xxtofl@exp^0,0,c
 13174   004378  EFC0  F021         	goto	u5081
 13175   00437C  EFC2  F021         	goto	u5080
 13176   004380                     u5081:
 13177   004380  EFC3  F021         	goto	l5215
 13178   004384                     u5080:
 13179   004384  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13180   004386                     l5215:
 13181   004386  90D8               	bcf	status,0,c
 13182   004388  320A               	rrcf	___xxtofl@exp^0,f,c
 13183   00438A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13184   00438E  6A06               	clrf	(??___xxtofl+1)^0,c
 13185   004390  6A07               	clrf	(??___xxtofl+2)^0,c
 13186   004392  6A08               	clrf	(??___xxtofl+3)^0,c
 13187   004394  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13188   004398  6A07               	clrf	(??___xxtofl+2)^0,c
 13189   00439A  6A06               	clrf	(??___xxtofl+1)^0,c
 13190   00439C  6A05               	clrf	??___xxtofl^0,c
 13191   00439E  5005               	movf	??___xxtofl^0,w,c
 13192   0043A0  120B               	iorwf	___xxtofl@arg^0,f,c
 13193   0043A2  5006               	movf	(??___xxtofl+1)^0,w,c
 13194   0043A4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13195   0043A6  5007               	movf	(??___xxtofl+2)^0,w,c
 13196   0043A8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13197   0043AA  5008               	movf	(??___xxtofl+3)^0,w,c
 13198   0043AC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13199   0043AE  5009               	movf	___xxtofl@sign^0,w,c
 13200   0043B0  B4D8               	btfsc	status,2,c
 13201   0043B2  EFDD  F021         	goto	u5091
 13202   0043B6  EFDF  F021         	goto	u5090
 13203   0043BA                     u5091:
 13204   0043BA  EFE7  F021         	goto	l5225
 13205   0043BE                     u5090:
 13206   0043BE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13207   0043C0  EFE6  F021         	goto	u5100
 13208   0043C4  EFE4  F021         	goto	u5101
 13209   0043C8                     u5101:
 13210   0043C8  EFE7  F021         	goto	l5225
 13211   0043CC                     u5100:
 13212   0043CC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13213   0043CE                     l5225:
 13214   0043CE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13215   0043D2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13216   0043D6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13217   0043DA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13218   0043DE                     l1332:
 13219   0043DE  0012               	return		;funcret
 13220   0043E0                     __end_of___xxtofl:
 13221                           	callstack 0
 13222                           
 13223 ;; *************** function ___flsub *****************
 13224 ;; Defined at:
 13225 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;  b               4   41[COMRAM] unsigned char 
 13228 ;;  a               4   45[COMRAM] unsigned char 
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  4   41[COMRAM] unsigned char 
 13233 ;; Registers used:
 13234 ;;		wreg, status,2, status,0, cstack
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13244 ;;Total ram usage:        8 bytes
 13245 ;; Hardware stack levels used: 1
 13246 ;; Hardware stack levels required when called: 2
 13247 ;; This function calls:
 13248 ;;		___fladd
 13249 ;; This function is called by:
 13250 ;;		_Colour_decider
 13251 ;;		_efgtoa
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           
 13255                           	psect	text73
 13256   005CF8                     __ptext73:
 13257                           	callstack 0
 13258   005CF8                     ___flsub:
 13259                           	callstack 24
 13260   005CF8  0E00               	movlw	0
 13261   005CFA  1A2E               	xorwf	___flsub@a^0,f,c
 13262   005CFC  0E00               	movlw	0
 13263   005CFE  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13264   005D00  0E00               	movlw	0
 13265   005D02  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13266   005D04  0E80               	movlw	128
 13267   005D06  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13268   005D08  C02A  F001         	movff	___flsub@b,___fladd@b
 13269   005D0C  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13270   005D10  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13271   005D14  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13272   005D18  C02E  F005         	movff	___flsub@a,___fladd@a
 13273   005D1C  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13274   005D20  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13275   005D24  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13276   005D28  EC02  F014         	call	___fladd	;wreg free
 13277   005D2C  C001  F02A         	movff	?___fladd,?___flsub
 13278   005D30  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13279   005D34  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13280   005D38  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13281   005D3C  0012               	return		;funcret
 13282   005D3E                     __end_of___flsub:
 13283                           	callstack 0
 13284                           
 13285 ;; *************** function ___fladd *****************
 13286 ;; Defined at:
 13287 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;  b               4    0[COMRAM] unsigned char 
 13290 ;;  a               4    4[COMRAM] unsigned char 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;  grs             1   15[COMRAM] unsigned char 
 13293 ;;  bexp            1   14[COMRAM] unsigned char 
 13294 ;;  aexp            1   13[COMRAM] unsigned char 
 13295 ;;  signs           1   12[COMRAM] unsigned char 
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  4    0[COMRAM] unsigned char 
 13298 ;; Registers used:
 13299 ;;		wreg, status,2, status,0
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13305 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13306 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13308 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13309 ;;Total ram usage:       16 bytes
 13310 ;; Hardware stack levels used: 1
 13311 ;; Hardware stack levels required when called: 1
 13312 ;; This function calls:
 13313 ;;		Nothing
 13314 ;; This function is called by:
 13315 ;;		_colour_rel
 13316 ;;		_Colour_decider
 13317 ;;		___flsub
 13318 ;;		_efgtoa
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           	psect	text74
 13323   002804                     __ptext74:
 13324                           	callstack 0
 13325   002804                     ___fladd:
 13326                           	callstack 24
 13327   002804  5004               	movf	(___fladd@b+3)^0,w,c
 13328   002806  0B80               	andlw	128
 13329   002808  6E0D               	movwf	___fladd@signs^0,c
 13330   00280A  5004               	movf	(___fladd@b+3)^0,w,c
 13331   00280C  2404               	addwf	(___fladd@b+3)^0,w,c
 13332   00280E  6E0F               	movwf	___fladd@bexp^0,c
 13333   002810  AE03               	btfss	(___fladd@b+2)^0,7,c
 13334   002812  EF0D  F014         	goto	u2971
 13335   002816  EF0F  F014         	goto	u2970
 13336   00281A                     u2971:
 13337   00281A  EF10  F014         	goto	l3831
 13338   00281E                     u2970:
 13339   00281E  800F               	bsf	___fladd@bexp^0,0,c
 13340   002820                     l3831:
 13341   002820  500F               	movf	___fladd@bexp^0,w,c
 13342   002822  B4D8               	btfsc	status,2,c
 13343   002824  EF16  F014         	goto	u2981
 13344   002828  EF18  F014         	goto	u2980
 13345   00282C                     u2981:
 13346   00282C  EF2D  F014         	goto	l3841
 13347   002830                     u2980:
 13348   002830  280F               	incf	___fladd@bexp^0,w,c
 13349   002832  A4D8               	btfss	status,2,c
 13350   002834  EF1E  F014         	goto	u2991
 13351   002838  EF20  F014         	goto	u2990
 13352   00283C                     u2991:
 13353   00283C  EF28  F014         	goto	l3837
 13354   002840                     u2990:
 13355   002840  0E00               	movlw	0
 13356   002842  6E01               	movwf	___fladd@b^0,c
 13357   002844  0E00               	movlw	0
 13358   002846  6E02               	movwf	(___fladd@b+1)^0,c
 13359   002848  0E00               	movlw	0
 13360   00284A  6E03               	movwf	(___fladd@b+2)^0,c
 13361   00284C  0E00               	movlw	0
 13362   00284E  6E04               	movwf	(___fladd@b+3)^0,c
 13363   002850                     l3837:
 13364   002850  8E03               	bsf	(___fladd@b+2)^0,7,c
 13365   002852  0E00               	movlw	0
 13366   002854  6E04               	movwf	(___fladd@b+3)^0,c
 13367   002856  EF35  F014         	goto	l3843
 13368   00285A                     l3841:
 13369   00285A  0E00               	movlw	0
 13370   00285C  6E01               	movwf	___fladd@b^0,c
 13371   00285E  0E00               	movlw	0
 13372   002860  6E02               	movwf	(___fladd@b+1)^0,c
 13373   002862  0E00               	movlw	0
 13374   002864  6E03               	movwf	(___fladd@b+2)^0,c
 13375   002866  0E00               	movlw	0
 13376   002868  6E04               	movwf	(___fladd@b+3)^0,c
 13377   00286A                     l3843:
 13378   00286A  5008               	movf	(___fladd@a+3)^0,w,c
 13379   00286C  0B80               	andlw	128
 13380   00286E  6E0E               	movwf	___fladd@aexp^0,c
 13381   002870  500D               	movf	___fladd@signs^0,w,c
 13382   002872  180E               	xorwf	___fladd@aexp^0,w,c
 13383   002874  B4D8               	btfsc	status,2,c
 13384   002876  EF3F  F014         	goto	u3001
 13385   00287A  EF41  F014         	goto	u3000
 13386   00287E                     u3001:
 13387   00287E  EF42  F014         	goto	l3849
 13388   002882                     u3000:
 13389   002882  8C0D               	bsf	___fladd@signs^0,6,c
 13390   002884                     l3849:
 13391   002884  5008               	movf	(___fladd@a+3)^0,w,c
 13392   002886  2408               	addwf	(___fladd@a+3)^0,w,c
 13393   002888  6E0E               	movwf	___fladd@aexp^0,c
 13394   00288A  AE07               	btfss	(___fladd@a+2)^0,7,c
 13395   00288C  EF4A  F014         	goto	u3011
 13396   002890  EF4C  F014         	goto	u3010
 13397   002894                     u3011:
 13398   002894  EF4D  F014         	goto	l3855
 13399   002898                     u3010:
 13400   002898  800E               	bsf	___fladd@aexp^0,0,c
 13401   00289A                     l3855:
 13402   00289A  500E               	movf	___fladd@aexp^0,w,c
 13403   00289C  B4D8               	btfsc	status,2,c
 13404   00289E  EF53  F014         	goto	u3021
 13405   0028A2  EF55  F014         	goto	u3020
 13406   0028A6                     u3021:
 13407   0028A6  EF6A  F014         	goto	l3865
 13408   0028AA                     u3020:
 13409   0028AA  280E               	incf	___fladd@aexp^0,w,c
 13410   0028AC  A4D8               	btfss	status,2,c
 13411   0028AE  EF5B  F014         	goto	u3031
 13412   0028B2  EF5D  F014         	goto	u3030
 13413   0028B6                     u3031:
 13414   0028B6  EF65  F014         	goto	l3861
 13415   0028BA                     u3030:
 13416   0028BA  0E00               	movlw	0
 13417   0028BC  6E05               	movwf	___fladd@a^0,c
 13418   0028BE  0E00               	movlw	0
 13419   0028C0  6E06               	movwf	(___fladd@a+1)^0,c
 13420   0028C2  0E00               	movlw	0
 13421   0028C4  6E07               	movwf	(___fladd@a+2)^0,c
 13422   0028C6  0E00               	movlw	0
 13423   0028C8  6E08               	movwf	(___fladd@a+3)^0,c
 13424   0028CA                     l3861:
 13425   0028CA  8E07               	bsf	(___fladd@a+2)^0,7,c
 13426   0028CC  0E00               	movlw	0
 13427   0028CE  6E08               	movwf	(___fladd@a+3)^0,c
 13428   0028D0  EF72  F014         	goto	l3867
 13429   0028D4                     l3865:
 13430   0028D4  0E00               	movlw	0
 13431   0028D6  6E05               	movwf	___fladd@a^0,c
 13432   0028D8  0E00               	movlw	0
 13433   0028DA  6E06               	movwf	(___fladd@a+1)^0,c
 13434   0028DC  0E00               	movlw	0
 13435   0028DE  6E07               	movwf	(___fladd@a+2)^0,c
 13436   0028E0  0E00               	movlw	0
 13437   0028E2  6E08               	movwf	(___fladd@a+3)^0,c
 13438   0028E4                     l3867:
 13439   0028E4  500F               	movf	___fladd@bexp^0,w,c
 13440   0028E6  5C0E               	subwf	___fladd@aexp^0,w,c
 13441   0028E8  B0D8               	btfsc	status,0,c
 13442   0028EA  EF79  F014         	goto	u3041
 13443   0028EE  EF7B  F014         	goto	u3040
 13444   0028F2                     u3041:
 13445   0028F2  EFA2  F014         	goto	l3903
 13446   0028F6                     u3040:
 13447   0028F6  AC0D               	btfss	___fladd@signs^0,6,c
 13448   0028F8  EF80  F014         	goto	u3051
 13449   0028FC  EF82  F014         	goto	u3050
 13450   002900                     u3051:
 13451   002900  EF84  F014         	goto	l3873
 13452   002904                     u3050:
 13453   002904  0E80               	movlw	128
 13454   002906  1A0D               	xorwf	___fladd@signs^0,f,c
 13455   002908                     l3873:
 13456   002908  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13457   00290C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13458   002910  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13459   002914  C001  F010         	movff	___fladd@b,___fladd@grs
 13460   002918  C005  F001         	movff	___fladd@a,___fladd@b
 13461   00291C  C010  F005         	movff	___fladd@grs,___fladd@a
 13462   002920  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13463   002924  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13464   002928  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13465   00292C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13466   002930  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13467   002934  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13468   002938  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13469   00293C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13470   002940  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13471   002944                     l3903:
 13472   002944  0E00               	movlw	0
 13473   002946  6E10               	movwf	___fladd@grs^0,c
 13474   002948  500F               	movf	___fladd@bexp^0,w,c
 13475   00294A  C00E  F009         	movff	___fladd@aexp,??___fladd
 13476   00294E  6A0A               	clrf	(??___fladd+1)^0,c
 13477   002950  5E09               	subwf	??___fladd^0,f,c
 13478   002952  0E00               	movlw	0
 13479   002954  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13480   002956  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13481   002958  EFB7  F014         	goto	u3061
 13482   00295C  500A               	movf	(??___fladd+1)^0,w,c
 13483   00295E  E109               	bnz	u3060
 13484   002960  0E1A               	movlw	26
 13485   002962  5C09               	subwf	??___fladd^0,w,c
 13486   002964  A0D8               	btfss	status,0,c
 13487   002966  EFB7  F014         	goto	u3061
 13488   00296A  EFB9  F014         	goto	u3060
 13489   00296E                     u3061:
 13490   00296E  EFF0  F014         	goto	l1203
 13491   002972                     u3060:
 13492   002972  5001               	movf	___fladd@b^0,w,c
 13493   002974  1002               	iorwf	(___fladd@b+1)^0,w,c
 13494   002976  1003               	iorwf	(___fladd@b+2)^0,w,c
 13495   002978  1004               	iorwf	(___fladd@b+3)^0,w,c
 13496   00297A  A4D8               	btfss	status,2,c
 13497   00297C  EFC2  F014         	goto	u3071
 13498   002980  EFC5  F014         	goto	u3070
 13499   002984                     u3071:
 13500   002984  0E01               	movlw	1
 13501   002986  EFC6  F014         	goto	u3080
 13502   00298A                     u3070:
 13503   00298A  0E00               	movlw	0
 13504   00298C                     u3080:
 13505   00298C  6E10               	movwf	___fladd@grs^0,c
 13506   00298E  0E00               	movlw	0
 13507   002990  6E01               	movwf	___fladd@b^0,c
 13508   002992  0E00               	movlw	0
 13509   002994  6E02               	movwf	(___fladd@b+1)^0,c
 13510   002996  0E00               	movlw	0
 13511   002998  6E03               	movwf	(___fladd@b+2)^0,c
 13512   00299A  0E00               	movlw	0
 13513   00299C  6E04               	movwf	(___fladd@b+3)^0,c
 13514   00299E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13515   0029A2  EFF9  F014         	goto	l1202
 13516   0029A6                     l1204:
 13517   0029A6  A010               	btfss	___fladd@grs^0,0,c
 13518   0029A8  EFD8  F014         	goto	u3091
 13519   0029AC  EFDA  F014         	goto	u3090
 13520   0029B0                     u3091:
 13521   0029B0  EFE0  F014         	goto	l3915
 13522   0029B4                     u3090:
 13523   0029B4  90D8               	bcf	status,0,c
 13524   0029B6  3010               	rrcf	___fladd@grs^0,w,c
 13525   0029B8  0901               	iorlw	1
 13526   0029BA  6E10               	movwf	___fladd@grs^0,c
 13527   0029BC  EFE2  F014         	goto	l3917
 13528   0029C0                     l3915:
 13529   0029C0  90D8               	bcf	status,0,c
 13530   0029C2  3210               	rrcf	___fladd@grs^0,f,c
 13531   0029C4                     l3917:
 13532   0029C4  A001               	btfss	___fladd@b^0,0,c
 13533   0029C6  EFE7  F014         	goto	u3101
 13534   0029CA  EFE9  F014         	goto	u3100
 13535   0029CE                     u3101:
 13536   0029CE  EFEA  F014         	goto	l3921
 13537   0029D2                     u3100:
 13538   0029D2  8E10               	bsf	___fladd@grs^0,7,c
 13539   0029D4                     l3921:
 13540   0029D4  3404               	rlcf	(___fladd@b+3)^0,w,c
 13541   0029D6  3204               	rrcf	(___fladd@b+3)^0,f,c
 13542   0029D8  3203               	rrcf	(___fladd@b+2)^0,f,c
 13543   0029DA  3202               	rrcf	(___fladd@b+1)^0,f,c
 13544   0029DC  3201               	rrcf	___fladd@b^0,f,c
 13545   0029DE  2A0F               	incf	___fladd@bexp^0,f,c
 13546   0029E0                     l1203:
 13547   0029E0  500E               	movf	___fladd@aexp^0,w,c
 13548   0029E2  5C0F               	subwf	___fladd@bexp^0,w,c
 13549   0029E4  A0D8               	btfss	status,0,c
 13550   0029E6  EFF7  F014         	goto	u3111
 13551   0029EA  EFF9  F014         	goto	u3110
 13552   0029EE                     u3111:
 13553   0029EE  EFD3  F014         	goto	l1204
 13554   0029F2                     u3110:
 13555   0029F2                     l1202:
 13556   0029F2  BC0D               	btfsc	___fladd@signs^0,6,c
 13557   0029F4  EFFE  F014         	goto	u3121
 13558   0029F8  EF00  F015         	goto	u3120
 13559   0029FC                     u3121:
 13560   0029FC  EF40  F015         	goto	l3949
 13561   002A00                     u3120:
 13562   002A00  500F               	movf	___fladd@bexp^0,w,c
 13563   002A02  A4D8               	btfss	status,2,c
 13564   002A04  EF06  F015         	goto	u3131
 13565   002A08  EF08  F015         	goto	u3130
 13566   002A0C                     u3131:
 13567   002A0C  EF12  F015         	goto	l3931
 13568   002A10                     u3130:
 13569   002A10  0E00               	movlw	0
 13570   002A12  6E01               	movwf	?___fladd^0,c
 13571   002A14  0E00               	movlw	0
 13572   002A16  6E02               	movwf	(?___fladd+1)^0,c
 13573   002A18  0E00               	movlw	0
 13574   002A1A  6E03               	movwf	(?___fladd+2)^0,c
 13575   002A1C  0E00               	movlw	0
 13576   002A1E  6E04               	movwf	(?___fladd+3)^0,c
 13577   002A20  EF61  F016         	goto	l1211
 13578   002A24                     l3931:
 13579   002A24  5005               	movf	___fladd@a^0,w,c
 13580   002A26  2601               	addwf	___fladd@b^0,f,c
 13581   002A28  5006               	movf	(___fladd@a+1)^0,w,c
 13582   002A2A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13583   002A2C  5007               	movf	(___fladd@a+2)^0,w,c
 13584   002A2E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13585   002A30  5008               	movf	(___fladd@a+3)^0,w,c
 13586   002A32  2204               	addwfc	(___fladd@b+3)^0,f,c
 13587   002A34  A004               	btfss	(___fladd@b+3)^0,0,c
 13588   002A36  EF1F  F015         	goto	u3141
 13589   002A3A  EF21  F015         	goto	u3140
 13590   002A3E                     u3141:
 13591   002A3E  EFCD  F015         	goto	l3985
 13592   002A42                     u3140:
 13593   002A42  A010               	btfss	___fladd@grs^0,0,c
 13594   002A44  EF26  F015         	goto	u3151
 13595   002A48  EF28  F015         	goto	u3150
 13596   002A4C                     u3151:
 13597   002A4C  EF2E  F015         	goto	l3939
 13598   002A50                     u3150:
 13599   002A50  90D8               	bcf	status,0,c
 13600   002A52  3010               	rrcf	___fladd@grs^0,w,c
 13601   002A54  0901               	iorlw	1
 13602   002A56  6E10               	movwf	___fladd@grs^0,c
 13603   002A58  EF30  F015         	goto	l3941
 13604   002A5C                     l3939:
 13605   002A5C  90D8               	bcf	status,0,c
 13606   002A5E  3210               	rrcf	___fladd@grs^0,f,c
 13607   002A60                     l3941:
 13608   002A60  A001               	btfss	___fladd@b^0,0,c
 13609   002A62  EF35  F015         	goto	u3161
 13610   002A66  EF37  F015         	goto	u3160
 13611   002A6A                     u3161:
 13612   002A6A  EF38  F015         	goto	l3945
 13613   002A6E                     u3160:
 13614   002A6E  8E10               	bsf	___fladd@grs^0,7,c
 13615   002A70                     l3945:
 13616   002A70  3404               	rlcf	(___fladd@b+3)^0,w,c
 13617   002A72  3204               	rrcf	(___fladd@b+3)^0,f,c
 13618   002A74  3203               	rrcf	(___fladd@b+2)^0,f,c
 13619   002A76  3202               	rrcf	(___fladd@b+1)^0,f,c
 13620   002A78  3201               	rrcf	___fladd@b^0,f,c
 13621   002A7A  2A0F               	incf	___fladd@bexp^0,f,c
 13622   002A7C  EFCD  F015         	goto	l3985
 13623   002A80                     l3949:
 13624   002A80  5005               	movf	___fladd@a^0,w,c
 13625   002A82  5C01               	subwf	___fladd@b^0,w,c
 13626   002A84  5006               	movf	(___fladd@a+1)^0,w,c
 13627   002A86  5802               	subwfb	(___fladd@b+1)^0,w,c
 13628   002A88  5007               	movf	(___fladd@a+2)^0,w,c
 13629   002A8A  5803               	subwfb	(___fladd@b+2)^0,w,c
 13630   002A8C  5004               	movf	(___fladd@b+3)^0,w,c
 13631   002A8E  0A80               	xorlw	128
 13632   002A90  6E09               	movwf	??___fladd^0,c
 13633   002A92  5008               	movf	(___fladd@a+3)^0,w,c
 13634   002A94  0A80               	xorlw	128
 13635   002A96  5809               	subwfb	??___fladd^0,w,c
 13636   002A98  B0D8               	btfsc	status,0,c
 13637   002A9A  EF51  F015         	goto	u3171
 13638   002A9E  EF53  F015         	goto	u3170
 13639   002AA2                     u3171:
 13640   002AA2  EF7E  F015         	goto	l3959
 13641   002AA6                     u3170:
 13642   002AA6  5001               	movf	___fladd@b^0,w,c
 13643   002AA8  5C05               	subwf	___fladd@a^0,w,c
 13644   002AAA  6E09               	movwf	??___fladd^0,c
 13645   002AAC  5002               	movf	(___fladd@b+1)^0,w,c
 13646   002AAE  5806               	subwfb	(___fladd@a+1)^0,w,c
 13647   002AB0  6E0A               	movwf	(??___fladd+1)^0,c
 13648   002AB2  5003               	movf	(___fladd@b+2)^0,w,c
 13649   002AB4  5807               	subwfb	(___fladd@a+2)^0,w,c
 13650   002AB6  6E0B               	movwf	(??___fladd+2)^0,c
 13651   002AB8  5004               	movf	(___fladd@b+3)^0,w,c
 13652   002ABA  5808               	subwfb	(___fladd@a+3)^0,w,c
 13653   002ABC  6E0C               	movwf	(??___fladd+3)^0,c
 13654   002ABE  0EFF               	movlw	255
 13655   002AC0  2409               	addwf	??___fladd^0,w,c
 13656   002AC2  6E01               	movwf	___fladd@b^0,c
 13657   002AC4  0EFF               	movlw	255
 13658   002AC6  200A               	addwfc	(??___fladd+1)^0,w,c
 13659   002AC8  6E02               	movwf	(___fladd@b+1)^0,c
 13660   002ACA  0EFF               	movlw	255
 13661   002ACC  200B               	addwfc	(??___fladd+2)^0,w,c
 13662   002ACE  6E03               	movwf	(___fladd@b+2)^0,c
 13663   002AD0  0EFF               	movlw	255
 13664   002AD2  200C               	addwfc	(??___fladd+3)^0,w,c
 13665   002AD4  6E04               	movwf	(___fladd@b+3)^0,c
 13666   002AD6  0E80               	movlw	128
 13667   002AD8  1A0D               	xorwf	___fladd@signs^0,f,c
 13668   002ADA  6C10               	negf	___fladd@grs^0,c
 13669   002ADC  5010               	movf	___fladd@grs^0,w,c
 13670   002ADE  A4D8               	btfss	status,2,c
 13671   002AE0  EF74  F015         	goto	u3181
 13672   002AE4  EF76  F015         	goto	u3180
 13673   002AE8                     u3181:
 13674   002AE8  EF86  F015         	goto	l1219
 13675   002AEC                     u3180:
 13676   002AEC  0E01               	movlw	1
 13677   002AEE  2601               	addwf	___fladd@b^0,f,c
 13678   002AF0  0E00               	movlw	0
 13679   002AF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13680   002AF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13681   002AF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13682   002AF8  EF86  F015         	goto	l1219
 13683   002AFC                     l3959:
 13684   002AFC  5005               	movf	___fladd@a^0,w,c
 13685   002AFE  5E01               	subwf	___fladd@b^0,f,c
 13686   002B00  5006               	movf	(___fladd@a+1)^0,w,c
 13687   002B02  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13688   002B04  5007               	movf	(___fladd@a+2)^0,w,c
 13689   002B06  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13690   002B08  5008               	movf	(___fladd@a+3)^0,w,c
 13691   002B0A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13692   002B0C                     l1219:
 13693   002B0C  5001               	movf	___fladd@b^0,w,c
 13694   002B0E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13695   002B10  1003               	iorwf	(___fladd@b+2)^0,w,c
 13696   002B12  1004               	iorwf	(___fladd@b+3)^0,w,c
 13697   002B14  A4D8               	btfss	status,2,c
 13698   002B16  EF8F  F015         	goto	u3191
 13699   002B1A  EF91  F015         	goto	u3190
 13700   002B1E                     u3191:
 13701   002B1E  EFC6  F015         	goto	l3983
 13702   002B22                     u3190:
 13703   002B22  5010               	movf	___fladd@grs^0,w,c
 13704   002B24  A4D8               	btfss	status,2,c
 13705   002B26  EF97  F015         	goto	u3201
 13706   002B2A  EF99  F015         	goto	u3200
 13707   002B2E                     u3201:
 13708   002B2E  EFC6  F015         	goto	l3983
 13709   002B32                     u3200:
 13710   002B32  0E00               	movlw	0
 13711   002B34  6E01               	movwf	?___fladd^0,c
 13712   002B36  0E00               	movlw	0
 13713   002B38  6E02               	movwf	(?___fladd+1)^0,c
 13714   002B3A  0E00               	movlw	0
 13715   002B3C  6E03               	movwf	(?___fladd+2)^0,c
 13716   002B3E  0E00               	movlw	0
 13717   002B40  6E04               	movwf	(?___fladd+3)^0,c
 13718   002B42  EF61  F016         	goto	l1211
 13719   002B46                     l3967:
 13720   002B46  90D8               	bcf	status,0,c
 13721   002B48  3601               	rlcf	___fladd@b^0,f,c
 13722   002B4A  3602               	rlcf	(___fladd@b+1)^0,f,c
 13723   002B4C  3603               	rlcf	(___fladd@b+2)^0,f,c
 13724   002B4E  3604               	rlcf	(___fladd@b+3)^0,f,c
 13725   002B50  AE10               	btfss	___fladd@grs^0,7,c
 13726   002B52  EFAD  F015         	goto	u3211
 13727   002B56  EFAF  F015         	goto	u3210
 13728   002B5A                     u3211:
 13729   002B5A  EFB0  F015         	goto	l3973
 13730   002B5E                     u3210:
 13731   002B5E  8001               	bsf	___fladd@b^0,0,c
 13732   002B60                     l3973:
 13733   002B60  A010               	btfss	___fladd@grs^0,0,c
 13734   002B62  EFB5  F015         	goto	u3221
 13735   002B66  EFB7  F015         	goto	u3220
 13736   002B6A                     u3221:
 13737   002B6A  EFBB  F015         	goto	l3977
 13738   002B6E                     u3220:
 13739   002B6E  80D8               	bsf	status,0,c
 13740   002B70  3610               	rlcf	___fladd@grs^0,f,c
 13741   002B72  EFBD  F015         	goto	l3979
 13742   002B76                     l3977:
 13743   002B76  90D8               	bcf	status,0,c
 13744   002B78  3610               	rlcf	___fladd@grs^0,f,c
 13745   002B7A                     l3979:
 13746   002B7A  500F               	movf	___fladd@bexp^0,w,c
 13747   002B7C  B4D8               	btfsc	status,2,c
 13748   002B7E  EFC3  F015         	goto	u3231
 13749   002B82  EFC5  F015         	goto	u3230
 13750   002B86                     u3231:
 13751   002B86  EFC6  F015         	goto	l3983
 13752   002B8A                     u3230:
 13753   002B8A  060F               	decf	___fladd@bexp^0,f,c
 13754   002B8C                     l3983:
 13755   002B8C  AE03               	btfss	(___fladd@b+2)^0,7,c
 13756   002B8E  EFCB  F015         	goto	u3241
 13757   002B92  EFCD  F015         	goto	u3240
 13758   002B96                     u3241:
 13759   002B96  EFA3  F015         	goto	l3967
 13760   002B9A                     u3240:
 13761   002B9A                     l3985:
 13762   002B9A  0E00               	movlw	0
 13763   002B9C  6E0E               	movwf	___fladd@aexp^0,c
 13764   002B9E  AE10               	btfss	___fladd@grs^0,7,c
 13765   002BA0  EFD4  F015         	goto	u3251
 13766   002BA4  EFD6  F015         	goto	u3250
 13767   002BA8                     u3251:
 13768   002BA8  EFEE  F015         	goto	l1228
 13769   002BAC                     u3250:
 13770   002BAC  C010  F009         	movff	___fladd@grs,??___fladd
 13771   002BB0  0E7F               	movlw	127
 13772   002BB2  1609               	andwf	??___fladd^0,f,c
 13773   002BB4  B4D8               	btfsc	status,2,c
 13774   002BB6  EFDF  F015         	goto	u3261
 13775   002BBA  EFE1  F015         	goto	u3260
 13776   002BBE                     u3261:
 13777   002BBE  EFE5  F015         	goto	l1229
 13778   002BC2                     u3260:
 13779   002BC2                     l3991:
 13780   002BC2  0E01               	movlw	1
 13781   002BC4  6E0E               	movwf	___fladd@aexp^0,c
 13782   002BC6  EFEE  F015         	goto	l1228
 13783   002BCA                     l1229:
 13784   002BCA  A001               	btfss	___fladd@b^0,0,c
 13785   002BCC  EFEA  F015         	goto	u3271
 13786   002BD0  EFEC  F015         	goto	u3270
 13787   002BD4                     u3271:
 13788   002BD4  EFEE  F015         	goto	l1228
 13789   002BD8                     u3270:
 13790   002BD8  EFE1  F015         	goto	l3991
 13791   002BDC                     l1228:
 13792   002BDC  500E               	movf	___fladd@aexp^0,w,c
 13793   002BDE  B4D8               	btfsc	status,2,c
 13794   002BE0  EFF4  F015         	goto	u3281
 13795   002BE4  EFF6  F015         	goto	u3280
 13796   002BE8                     u3281:
 13797   002BE8  EF21  F016         	goto	l4003
 13798   002BEC                     u3280:
 13799   002BEC  0E01               	movlw	1
 13800   002BEE  2601               	addwf	___fladd@b^0,f,c
 13801   002BF0  0E00               	movlw	0
 13802   002BF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 13803   002BF4  2203               	addwfc	(___fladd@b+2)^0,f,c
 13804   002BF6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13805   002BF8  A004               	btfss	(___fladd@b+3)^0,0,c
 13806   002BFA  EF01  F016         	goto	u3291
 13807   002BFE  EF03  F016         	goto	u3290
 13808   002C02                     u3291:
 13809   002C02  EF21  F016         	goto	l4003
 13810   002C06                     u3290:
 13811   002C06  C001  F009         	movff	___fladd@b,??___fladd
 13812   002C0A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13813   002C0E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13814   002C12  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13815   002C16  340C               	rlcf	(??___fladd+3)^0,w,c
 13816   002C18  320C               	rrcf	(??___fladd+3)^0,f,c
 13817   002C1A  320B               	rrcf	(??___fladd+2)^0,f,c
 13818   002C1C  320A               	rrcf	(??___fladd+1)^0,f,c
 13819   002C1E  3209               	rrcf	??___fladd^0,f,c
 13820   002C20  C009  F001         	movff	??___fladd,___fladd@b
 13821   002C24  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13822   002C28  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13823   002C2C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13824   002C30  280F               	incf	___fladd@bexp^0,w,c
 13825   002C32  B4D8               	btfsc	status,2,c
 13826   002C34  EF1E  F016         	goto	u3301
 13827   002C38  EF20  F016         	goto	u3300
 13828   002C3C                     u3301:
 13829   002C3C  EF21  F016         	goto	l4003
 13830   002C40                     u3300:
 13831   002C40  2A0F               	incf	___fladd@bexp^0,f,c
 13832   002C42                     l4003:
 13833   002C42  280F               	incf	___fladd@bexp^0,w,c
 13834   002C44  B4D8               	btfsc	status,2,c
 13835   002C46  EF27  F016         	goto	u3311
 13836   002C4A  EF29  F016         	goto	u3310
 13837   002C4E                     u3311:
 13838   002C4E  EF31  F016         	goto	l4007
 13839   002C52                     u3310:
 13840   002C52  500F               	movf	___fladd@bexp^0,w,c
 13841   002C54  A4D8               	btfss	status,2,c
 13842   002C56  EF2F  F016         	goto	u3321
 13843   002C5A  EF31  F016         	goto	u3320
 13844   002C5E                     u3321:
 13845   002C5E  EF43  F016         	goto	l4011
 13846   002C62                     u3320:
 13847   002C62                     l4007:
 13848   002C62  0E00               	movlw	0
 13849   002C64  6E01               	movwf	___fladd@b^0,c
 13850   002C66  0E00               	movlw	0
 13851   002C68  6E02               	movwf	(___fladd@b+1)^0,c
 13852   002C6A  0E00               	movlw	0
 13853   002C6C  6E03               	movwf	(___fladd@b+2)^0,c
 13854   002C6E  0E00               	movlw	0
 13855   002C70  6E04               	movwf	(___fladd@b+3)^0,c
 13856   002C72  500F               	movf	___fladd@bexp^0,w,c
 13857   002C74  A4D8               	btfss	status,2,c
 13858   002C76  EF3F  F016         	goto	u3331
 13859   002C7A  EF41  F016         	goto	u3330
 13860   002C7E                     u3331:
 13861   002C7E  EF43  F016         	goto	l4011
 13862   002C82                     u3330:
 13863   002C82  0E00               	movlw	0
 13864   002C84  6E0D               	movwf	___fladd@signs^0,c
 13865   002C86                     l4011:
 13866   002C86  A00F               	btfss	___fladd@bexp^0,0,c
 13867   002C88  EF48  F016         	goto	u3341
 13868   002C8C  EF4A  F016         	goto	u3340
 13869   002C90                     u3341:
 13870   002C90  EF4D  F016         	goto	l4015
 13871   002C94                     u3340:
 13872   002C94  8E03               	bsf	(___fladd@b+2)^0,7,c
 13873   002C96  EF4E  F016         	goto	l4017
 13874   002C9A                     l4015:
 13875   002C9A  9E03               	bcf	(___fladd@b+2)^0,7,c
 13876   002C9C                     l4017:
 13877   002C9C  90D8               	bcf	status,0,c
 13878   002C9E  300F               	rrcf	___fladd@bexp^0,w,c
 13879   002CA0  6E04               	movwf	(___fladd@b+3)^0,c
 13880   002CA2  AE0D               	btfss	___fladd@signs^0,7,c
 13881   002CA4  EF56  F016         	goto	u3351
 13882   002CA8  EF58  F016         	goto	u3350
 13883   002CAC                     u3351:
 13884   002CAC  EF59  F016         	goto	l4023
 13885   002CB0                     u3350:
 13886   002CB0  8E04               	bsf	(___fladd@b+3)^0,7,c
 13887   002CB2                     l4023:
 13888   002CB2  C001  F001         	movff	___fladd@b,?___fladd
 13889   002CB6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13890   002CBA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13891   002CBE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13892   002CC2                     l1211:
 13893   002CC2  0012               	return		;funcret
 13894   002CC4                     __end_of___fladd:
 13895                           	callstack 0
 13896                           
 13897 ;; *************** function ___flmul *****************
 13898 ;; Defined at:
 13899 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  b               4   16[COMRAM] unsigned char 
 13902 ;;  a               4   20[COMRAM] unsigned char 
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;  prod            4   35[COMRAM] struct .
 13905 ;;  grs             4   29[COMRAM] unsigned long 
 13906 ;;  temp            2   39[COMRAM] struct .
 13907 ;;  bexp            1   34[COMRAM] unsigned char 
 13908 ;;  aexp            1   33[COMRAM] unsigned char 
 13909 ;;  sign            1   28[COMRAM] unsigned char 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  4   16[COMRAM] unsigned char 
 13912 ;; Registers used:
 13913 ;;		wreg, status,2, status,0, prodl, prodh
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13919 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13920 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13922 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13923 ;;Total ram usage:       25 bytes
 13924 ;; Hardware stack levels used: 1
 13925 ;; Hardware stack levels required when called: 1
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		_Colour_decider
 13930 ;;		_reverseOneBlock
 13931 ;;		_ForwardOneBlock
 13932 ;;		_Forwardhalfblock
 13933 ;;		_efgtoa
 13934 ;;		_Backhalfblock
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text75
 13939   002CC4                     __ptext75:
 13940                           	callstack 0
 13941   002CC4                     ___flmul:
 13942                           	callstack 25
 13943   002CC4  5014               	movf	(___flmul@b+3)^0,w,c
 13944   002CC6  0B80               	andlw	128
 13945   002CC8  6E1D               	movwf	___flmul@sign^0,c
 13946   002CCA  5014               	movf	(___flmul@b+3)^0,w,c
 13947   002CCC  2414               	addwf	(___flmul@b+3)^0,w,c
 13948   002CCE  6E23               	movwf	___flmul@bexp^0,c
 13949   002CD0  AE13               	btfss	(___flmul@b+2)^0,7,c
 13950   002CD2  EF6D  F016         	goto	u3781
 13951   002CD6  EF6F  F016         	goto	u3780
 13952   002CDA                     u3781:
 13953   002CDA  EF70  F016         	goto	l4297
 13954   002CDE                     u3780:
 13955   002CDE  8023               	bsf	___flmul@bexp^0,0,c
 13956   002CE0                     l4297:
 13957   002CE0  5023               	movf	___flmul@bexp^0,w,c
 13958   002CE2  B4D8               	btfsc	status,2,c
 13959   002CE4  EF76  F016         	goto	u3791
 13960   002CE8  EF78  F016         	goto	u3790
 13961   002CEC                     u3791:
 13962   002CEC  EF8B  F016         	goto	l4305
 13963   002CF0                     u3790:
 13964   002CF0  2823               	incf	___flmul@bexp^0,w,c
 13965   002CF2  A4D8               	btfss	status,2,c
 13966   002CF4  EF7E  F016         	goto	u3801
 13967   002CF8  EF80  F016         	goto	u3800
 13968   002CFC                     u3801:
 13969   002CFC  EF88  F016         	goto	l4303
 13970   002D00                     u3800:
 13971   002D00  0E00               	movlw	0
 13972   002D02  6E11               	movwf	___flmul@b^0,c
 13973   002D04  0E00               	movlw	0
 13974   002D06  6E12               	movwf	(___flmul@b+1)^0,c
 13975   002D08  0E00               	movlw	0
 13976   002D0A  6E13               	movwf	(___flmul@b+2)^0,c
 13977   002D0C  0E00               	movlw	0
 13978   002D0E  6E14               	movwf	(___flmul@b+3)^0,c
 13979   002D10                     l4303:
 13980   002D10  8E13               	bsf	(___flmul@b+2)^0,7,c
 13981   002D12  EF93  F016         	goto	l4307
 13982   002D16                     l4305:
 13983   002D16  0E00               	movlw	0
 13984   002D18  6E11               	movwf	___flmul@b^0,c
 13985   002D1A  0E00               	movlw	0
 13986   002D1C  6E12               	movwf	(___flmul@b+1)^0,c
 13987   002D1E  0E00               	movlw	0
 13988   002D20  6E13               	movwf	(___flmul@b+2)^0,c
 13989   002D22  0E00               	movlw	0
 13990   002D24  6E14               	movwf	(___flmul@b+3)^0,c
 13991   002D26                     l4307:
 13992   002D26  5018               	movf	(___flmul@a+3)^0,w,c
 13993   002D28  0B80               	andlw	128
 13994   002D2A  1A1D               	xorwf	___flmul@sign^0,f,c
 13995   002D2C  5018               	movf	(___flmul@a+3)^0,w,c
 13996   002D2E  2418               	addwf	(___flmul@a+3)^0,w,c
 13997   002D30  6E22               	movwf	___flmul@aexp^0,c
 13998   002D32  AE17               	btfss	(___flmul@a+2)^0,7,c
 13999   002D34  EF9E  F016         	goto	u3811
 14000   002D38  EFA0  F016         	goto	u3810
 14001   002D3C                     u3811:
 14002   002D3C  EFA1  F016         	goto	l4315
 14003   002D40                     u3810:
 14004   002D40  8022               	bsf	___flmul@aexp^0,0,c
 14005   002D42                     l4315:
 14006   002D42  5022               	movf	___flmul@aexp^0,w,c
 14007   002D44  B4D8               	btfsc	status,2,c
 14008   002D46  EFA7  F016         	goto	u3821
 14009   002D4A  EFA9  F016         	goto	u3820
 14010   002D4E                     u3821:
 14011   002D4E  EFBC  F016         	goto	l4323
 14012   002D52                     u3820:
 14013   002D52  2822               	incf	___flmul@aexp^0,w,c
 14014   002D54  A4D8               	btfss	status,2,c
 14015   002D56  EFAF  F016         	goto	u3831
 14016   002D5A  EFB1  F016         	goto	u3830
 14017   002D5E                     u3831:
 14018   002D5E  EFB9  F016         	goto	l4321
 14019   002D62                     u3830:
 14020   002D62  0E00               	movlw	0
 14021   002D64  6E15               	movwf	___flmul@a^0,c
 14022   002D66  0E00               	movlw	0
 14023   002D68  6E16               	movwf	(___flmul@a+1)^0,c
 14024   002D6A  0E00               	movlw	0
 14025   002D6C  6E17               	movwf	(___flmul@a+2)^0,c
 14026   002D6E  0E00               	movlw	0
 14027   002D70  6E18               	movwf	(___flmul@a+3)^0,c
 14028   002D72                     l4321:
 14029   002D72  8E17               	bsf	(___flmul@a+2)^0,7,c
 14030   002D74  EFC4  F016         	goto	l1288
 14031   002D78                     l4323:
 14032   002D78  0E00               	movlw	0
 14033   002D7A  6E15               	movwf	___flmul@a^0,c
 14034   002D7C  0E00               	movlw	0
 14035   002D7E  6E16               	movwf	(___flmul@a+1)^0,c
 14036   002D80  0E00               	movlw	0
 14037   002D82  6E17               	movwf	(___flmul@a+2)^0,c
 14038   002D84  0E00               	movlw	0
 14039   002D86  6E18               	movwf	(___flmul@a+3)^0,c
 14040   002D88                     l1288:
 14041   002D88  5022               	movf	___flmul@aexp^0,w,c
 14042   002D8A  B4D8               	btfsc	status,2,c
 14043   002D8C  EFCA  F016         	goto	u3841
 14044   002D90  EFCC  F016         	goto	u3840
 14045   002D94                     u3841:
 14046   002D94  EFD4  F016         	goto	l4327
 14047   002D98                     u3840:
 14048   002D98  5023               	movf	___flmul@bexp^0,w,c
 14049   002D9A  A4D8               	btfss	status,2,c
 14050   002D9C  EFD2  F016         	goto	u3851
 14051   002DA0  EFD4  F016         	goto	u3850
 14052   002DA4                     u3851:
 14053   002DA4  EFDE  F016         	goto	l4331
 14054   002DA8                     u3850:
 14055   002DA8                     l4327:
 14056   002DA8  0E00               	movlw	0
 14057   002DAA  6E11               	movwf	?___flmul^0,c
 14058   002DAC  0E00               	movlw	0
 14059   002DAE  6E12               	movwf	(?___flmul+1)^0,c
 14060   002DB0  0E00               	movlw	0
 14061   002DB2  6E13               	movwf	(?___flmul+2)^0,c
 14062   002DB4  0E00               	movlw	0
 14063   002DB6  6E14               	movwf	(?___flmul+3)^0,c
 14064   002DB8  EF76  F018         	goto	l1292
 14065   002DBC                     l4331:
 14066   002DBC  5017               	movf	(___flmul@a+2)^0,w,c
 14067   002DBE  0211               	mulwf	___flmul@b^0,c
 14068   002DC0  CFF3 F028          	movff	prodl,___flmul@temp
 14069   002DC4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14070   002DC8  5028               	movf	___flmul@temp^0,w,c
 14071   002DCA  6E1E               	movwf	___flmul@grs^0,c
 14072   002DCC  6A1F               	clrf	(___flmul@grs+1)^0,c
 14073   002DCE  6A20               	clrf	(___flmul@grs+2)^0,c
 14074   002DD0  6A21               	clrf	(___flmul@grs+3)^0,c
 14075   002DD2  5029               	movf	(___flmul@temp+1)^0,w,c
 14076   002DD4  6E24               	movwf	___flmul@prod^0,c
 14077   002DD6  6A25               	clrf	(___flmul@prod+1)^0,c
 14078   002DD8  6A26               	clrf	(___flmul@prod+2)^0,c
 14079   002DDA  6A27               	clrf	(___flmul@prod+3)^0,c
 14080   002DDC  5016               	movf	(___flmul@a+1)^0,w,c
 14081   002DDE  0212               	mulwf	(___flmul@b+1)^0,c
 14082   002DE0  CFF3 F028          	movff	prodl,___flmul@temp
 14083   002DE4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14084   002DE8  5028               	movf	___flmul@temp^0,w,c
 14085   002DEA  261E               	addwf	___flmul@grs^0,f,c
 14086   002DEC  0E00               	movlw	0
 14087   002DEE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14088   002DF0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14089   002DF2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14090   002DF4  5029               	movf	(___flmul@temp+1)^0,w,c
 14091   002DF6  2624               	addwf	___flmul@prod^0,f,c
 14092   002DF8  0E00               	movlw	0
 14093   002DFA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14094   002DFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14095   002DFE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14096   002E00  5015               	movf	___flmul@a^0,w,c
 14097   002E02  0213               	mulwf	(___flmul@b+2)^0,c
 14098   002E04  CFF3 F028          	movff	prodl,___flmul@temp
 14099   002E08  CFF4 F029          	movff	prodh,___flmul@temp+1
 14100   002E0C  5028               	movf	___flmul@temp^0,w,c
 14101   002E0E  261E               	addwf	___flmul@grs^0,f,c
 14102   002E10  0E00               	movlw	0
 14103   002E12  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14104   002E14  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14105   002E16  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14106   002E18  5029               	movf	(___flmul@temp+1)^0,w,c
 14107   002E1A  2624               	addwf	___flmul@prod^0,f,c
 14108   002E1C  0E00               	movlw	0
 14109   002E1E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14110   002E20  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14111   002E22  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14112   002E24  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14113   002E28  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14114   002E2C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14115   002E30  6A1E               	clrf	___flmul@grs^0,c
 14116   002E32  5015               	movf	___flmul@a^0,w,c
 14117   002E34  0212               	mulwf	(___flmul@b+1)^0,c
 14118   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 14119   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14120   002E3E  5028               	movf	___flmul@temp^0,w,c
 14121   002E40  261E               	addwf	___flmul@grs^0,f,c
 14122   002E42  5029               	movf	(___flmul@temp+1)^0,w,c
 14123   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14124   002E46  0E00               	movlw	0
 14125   002E48  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14126   002E4A  0E00               	movlw	0
 14127   002E4C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14128   002E4E  5016               	movf	(___flmul@a+1)^0,w,c
 14129   002E50  0211               	mulwf	___flmul@b^0,c
 14130   002E52  CFF3 F028          	movff	prodl,___flmul@temp
 14131   002E56  CFF4 F029          	movff	prodh,___flmul@temp+1
 14132   002E5A  5028               	movf	___flmul@temp^0,w,c
 14133   002E5C  261E               	addwf	___flmul@grs^0,f,c
 14134   002E5E  5029               	movf	(___flmul@temp+1)^0,w,c
 14135   002E60  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14136   002E62  0E00               	movlw	0
 14137   002E64  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14138   002E66  0E00               	movlw	0
 14139   002E68  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14140   002E6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14141   002E6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14142   002E72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14143   002E76  6A1E               	clrf	___flmul@grs^0,c
 14144   002E78  5015               	movf	___flmul@a^0,w,c
 14145   002E7A  0211               	mulwf	___flmul@b^0,c
 14146   002E7C  CFF3 F028          	movff	prodl,___flmul@temp
 14147   002E80  CFF4 F029          	movff	prodh,___flmul@temp+1
 14148   002E84  5028               	movf	___flmul@temp^0,w,c
 14149   002E86  261E               	addwf	___flmul@grs^0,f,c
 14150   002E88  5029               	movf	(___flmul@temp+1)^0,w,c
 14151   002E8A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14152   002E8C  0E00               	movlw	0
 14153   002E8E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14154   002E90  0E00               	movlw	0
 14155   002E92  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14156   002E94  5017               	movf	(___flmul@a+2)^0,w,c
 14157   002E96  0212               	mulwf	(___flmul@b+1)^0,c
 14158   002E98  CFF3 F028          	movff	prodl,___flmul@temp
 14159   002E9C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14160   002EA0  5028               	movf	___flmul@temp^0,w,c
 14161   002EA2  2624               	addwf	___flmul@prod^0,f,c
 14162   002EA4  5029               	movf	(___flmul@temp+1)^0,w,c
 14163   002EA6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14164   002EA8  0E00               	movlw	0
 14165   002EAA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14166   002EAC  0E00               	movlw	0
 14167   002EAE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14168   002EB0  5016               	movf	(___flmul@a+1)^0,w,c
 14169   002EB2  0213               	mulwf	(___flmul@b+2)^0,c
 14170   002EB4  CFF3 F028          	movff	prodl,___flmul@temp
 14171   002EB8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14172   002EBC  5028               	movf	___flmul@temp^0,w,c
 14173   002EBE  2624               	addwf	___flmul@prod^0,f,c
 14174   002EC0  5029               	movf	(___flmul@temp+1)^0,w,c
 14175   002EC2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14176   002EC4  0E00               	movlw	0
 14177   002EC6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14178   002EC8  0E00               	movlw	0
 14179   002ECA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14180   002ECC  5017               	movf	(___flmul@a+2)^0,w,c
 14181   002ECE  0213               	mulwf	(___flmul@b+2)^0,c
 14182   002ED0  CFF3 F028          	movff	prodl,___flmul@temp
 14183   002ED4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14184   002ED8  5028               	movf	___flmul@temp^0,w,c
 14185   002EDA  6E19               	movwf	??___flmul^0,c
 14186   002EDC  5029               	movf	(___flmul@temp+1)^0,w,c
 14187   002EDE  6E1A               	movwf	(??___flmul+1)^0,c
 14188   002EE0  6A1B               	clrf	(??___flmul+2)^0,c
 14189   002EE2  6A1C               	clrf	(??___flmul+3)^0,c
 14190   002EE4  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14191   002EE8  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14192   002EEC  C019  F01A         	movff	??___flmul,??___flmul+1
 14193   002EF0  6A19               	clrf	??___flmul^0,c
 14194   002EF2  5019               	movf	??___flmul^0,w,c
 14195   002EF4  2624               	addwf	___flmul@prod^0,f,c
 14196   002EF6  501A               	movf	(??___flmul+1)^0,w,c
 14197   002EF8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14198   002EFA  501B               	movf	(??___flmul+2)^0,w,c
 14199   002EFC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14200   002EFE  501C               	movf	(??___flmul+3)^0,w,c
 14201   002F00  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14202   002F02  C01E  F019         	movff	___flmul@grs,??___flmul
 14203   002F06  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14204   002F0A  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14205   002F0E  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14206   002F12  0E19               	movlw	25
 14207   002F14  EF91  F017         	goto	u3860
 14208   002F18                     u3865:
 14209   002F18  90D8               	bcf	status,0,c
 14210   002F1A  321C               	rrcf	(??___flmul+3)^0,f,c
 14211   002F1C  321B               	rrcf	(??___flmul+2)^0,f,c
 14212   002F1E  321A               	rrcf	(??___flmul+1)^0,f,c
 14213   002F20  3219               	rrcf	??___flmul^0,f,c
 14214   002F22                     u3860:
 14215   002F22  2EE8               	decfsz	wreg,f,c
 14216   002F24  EF8C  F017         	goto	u3865
 14217   002F28  5019               	movf	??___flmul^0,w,c
 14218   002F2A  2624               	addwf	___flmul@prod^0,f,c
 14219   002F2C  501A               	movf	(??___flmul+1)^0,w,c
 14220   002F2E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14221   002F30  501B               	movf	(??___flmul+2)^0,w,c
 14222   002F32  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14223   002F34  501C               	movf	(??___flmul+3)^0,w,c
 14224   002F36  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14225   002F38  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14226   002F3C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14227   002F40  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14228   002F44  6A1E               	clrf	___flmul@grs^0,c
 14229   002F46  5022               	movf	___flmul@aexp^0,w,c
 14230   002F48  C023  F019         	movff	___flmul@bexp,??___flmul
 14231   002F4C  6A1A               	clrf	(??___flmul+1)^0,c
 14232   002F4E  2619               	addwf	??___flmul^0,f,c
 14233   002F50  0E00               	movlw	0
 14234   002F52  221A               	addwfc	(??___flmul+1)^0,f,c
 14235   002F54  0E82               	movlw	130
 14236   002F56  2419               	addwf	??___flmul^0,w,c
 14237   002F58  6E28               	movwf	___flmul@temp^0,c
 14238   002F5A  0EFF               	movlw	255
 14239   002F5C  201A               	addwfc	(??___flmul+1)^0,w,c
 14240   002F5E  6E29               	movwf	(___flmul@temp+1)^0,c
 14241   002F60  EFC7  F017         	goto	l4379
 14242   002F64                     l4373:
 14243   002F64  90D8               	bcf	status,0,c
 14244   002F66  3624               	rlcf	___flmul@prod^0,f,c
 14245   002F68  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14246   002F6A  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14247   002F6C  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14248   002F6E  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14249   002F70  EFBC  F017         	goto	u3871
 14250   002F74  EFBE  F017         	goto	u3870
 14251   002F78                     u3871:
 14252   002F78  EFBF  F017         	goto	l1295
 14253   002F7C                     u3870:
 14254   002F7C  8024               	bsf	___flmul@prod^0,0,c
 14255   002F7E                     l1295:
 14256   002F7E  90D8               	bcf	status,0,c
 14257   002F80  361E               	rlcf	___flmul@grs^0,f,c
 14258   002F82  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14259   002F84  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14260   002F86  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14261   002F88  0628               	decf	___flmul@temp^0,f,c
 14262   002F8A  A0D8               	btfss	status,0,c
 14263   002F8C  0629               	decf	(___flmul@temp+1)^0,f,c
 14264   002F8E                     l4379:
 14265   002F8E  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14266   002F90  EFCC  F017         	goto	u3881
 14267   002F94  EFCE  F017         	goto	u3880
 14268   002F98                     u3881:
 14269   002F98  EFB2  F017         	goto	l4373
 14270   002F9C                     u3880:
 14271   002F9C  0E00               	movlw	0
 14272   002F9E  6E22               	movwf	___flmul@aexp^0,c
 14273   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14274   002FA2  EFD5  F017         	goto	u3891
 14275   002FA6  EFD7  F017         	goto	u3890
 14276   002FAA                     u3891:
 14277   002FAA  EFFB  F017         	goto	l1297
 14278   002FAE                     u3890:
 14279   002FAE  0EFF               	movlw	255
 14280   002FB0  141E               	andwf	___flmul@grs^0,w,c
 14281   002FB2  6E19               	movwf	??___flmul^0,c
 14282   002FB4  0EFF               	movlw	255
 14283   002FB6  141F               	andwf	(___flmul@grs+1)^0,w,c
 14284   002FB8  6E1A               	movwf	(??___flmul+1)^0,c
 14285   002FBA  0EFF               	movlw	255
 14286   002FBC  1420               	andwf	(___flmul@grs+2)^0,w,c
 14287   002FBE  6E1B               	movwf	(??___flmul+2)^0,c
 14288   002FC0  0E7F               	movlw	127
 14289   002FC2  1421               	andwf	(___flmul@grs+3)^0,w,c
 14290   002FC4  6E1C               	movwf	(??___flmul+3)^0,c
 14291   002FC6  5019               	movf	??___flmul^0,w,c
 14292   002FC8  101A               	iorwf	(??___flmul+1)^0,w,c
 14293   002FCA  101B               	iorwf	(??___flmul+2)^0,w,c
 14294   002FCC  101C               	iorwf	(??___flmul+3)^0,w,c
 14295   002FCE  B4D8               	btfsc	status,2,c
 14296   002FD0  EFEC  F017         	goto	u3901
 14297   002FD4  EFEE  F017         	goto	u3900
 14298   002FD8                     u3901:
 14299   002FD8  EFF2  F017         	goto	l1298
 14300   002FDC                     u3900:
 14301   002FDC                     l4387:
 14302   002FDC  0E01               	movlw	1
 14303   002FDE  6E22               	movwf	___flmul@aexp^0,c
 14304   002FE0  EFFB  F017         	goto	l1297
 14305   002FE4                     l1298:
 14306   002FE4  A024               	btfss	___flmul@prod^0,0,c
 14307   002FE6  EFF7  F017         	goto	u3911
 14308   002FEA  EFF9  F017         	goto	u3910
 14309   002FEE                     u3911:
 14310   002FEE  EFFB  F017         	goto	l1297
 14311   002FF2                     u3910:
 14312   002FF2  EFEE  F017         	goto	l4387
 14313   002FF6                     l1297:
 14314   002FF6  5022               	movf	___flmul@aexp^0,w,c
 14315   002FF8  B4D8               	btfsc	status,2,c
 14316   002FFA  EF01  F018         	goto	u3921
 14317   002FFE  EF03  F018         	goto	u3920
 14318   003002                     u3921:
 14319   003002  EF27  F018         	goto	l4399
 14320   003006                     u3920:
 14321   003006  0E01               	movlw	1
 14322   003008  2624               	addwf	___flmul@prod^0,f,c
 14323   00300A  0E00               	movlw	0
 14324   00300C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14325   00300E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14326   003010  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14327   003012  A027               	btfss	(___flmul@prod+3)^0,0,c
 14328   003014  EF0E  F018         	goto	u3931
 14329   003018  EF10  F018         	goto	u3930
 14330   00301C                     u3931:
 14331   00301C  EF27  F018         	goto	l4399
 14332   003020                     u3930:
 14333   003020  C024  F019         	movff	___flmul@prod,??___flmul
 14334   003024  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14335   003028  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14336   00302C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14337   003030  341C               	rlcf	(??___flmul+3)^0,w,c
 14338   003032  321C               	rrcf	(??___flmul+3)^0,f,c
 14339   003034  321B               	rrcf	(??___flmul+2)^0,f,c
 14340   003036  321A               	rrcf	(??___flmul+1)^0,f,c
 14341   003038  3219               	rrcf	??___flmul^0,f,c
 14342   00303A  C019  F024         	movff	??___flmul,___flmul@prod
 14343   00303E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14344   003042  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14345   003046  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14346   00304A  4A28               	infsnz	___flmul@temp^0,f,c
 14347   00304C  2A29               	incf	(___flmul@temp+1)^0,f,c
 14348   00304E                     l4399:
 14349   00304E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14350   003050  EF32  F018         	goto	u3941
 14351   003054  5029               	movf	(___flmul@temp+1)^0,w,c
 14352   003056  E108               	bnz	u3940
 14353   003058  2828               	incf	___flmul@temp^0,w,c
 14354   00305A  A0D8               	btfss	status,0,c
 14355   00305C  EF32  F018         	goto	u3941
 14356   003060  EF34  F018         	goto	u3940
 14357   003064                     u3941:
 14358   003064  EF3E  F018         	goto	l4403
 14359   003068                     u3940:
 14360   003068  0E00               	movlw	0
 14361   00306A  6E24               	movwf	___flmul@prod^0,c
 14362   00306C  0E00               	movlw	0
 14363   00306E  6E25               	movwf	(___flmul@prod+1)^0,c
 14364   003070  0E80               	movlw	128
 14365   003072  6E26               	movwf	(___flmul@prod+2)^0,c
 14366   003074  0E7F               	movlw	127
 14367   003076  6E27               	movwf	(___flmul@prod+3)^0,c
 14368   003078  EF6C  F018         	goto	l4415
 14369   00307C                     l4403:
 14370   00307C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14371   00307E  EF4B  F018         	goto	u3950
 14372   003082  5029               	movf	(___flmul@temp+1)^0,w,c
 14373   003084  E106               	bnz	u3951
 14374   003086  0428               	decf	___flmul@temp^0,w,c
 14375   003088  B0D8               	btfsc	status,0,c
 14376   00308A  EF49  F018         	goto	u3951
 14377   00308E  EF4B  F018         	goto	u3950
 14378   003092                     u3951:
 14379   003092  EF57  F018         	goto	l1305
 14380   003096                     u3950:
 14381   003096  0E00               	movlw	0
 14382   003098  6E24               	movwf	___flmul@prod^0,c
 14383   00309A  0E00               	movlw	0
 14384   00309C  6E25               	movwf	(___flmul@prod+1)^0,c
 14385   00309E  0E00               	movlw	0
 14386   0030A0  6E26               	movwf	(___flmul@prod+2)^0,c
 14387   0030A2  0E00               	movlw	0
 14388   0030A4  6E27               	movwf	(___flmul@prod+3)^0,c
 14389   0030A6  0E00               	movlw	0
 14390   0030A8  6E1D               	movwf	___flmul@sign^0,c
 14391   0030AA  EF6C  F018         	goto	l4415
 14392   0030AE                     l1305:
 14393   0030AE  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14394   0030B2  0EFF               	movlw	255
 14395   0030B4  1624               	andwf	___flmul@prod^0,f,c
 14396   0030B6  0EFF               	movlw	255
 14397   0030B8  1625               	andwf	(___flmul@prod+1)^0,f,c
 14398   0030BA  0E7F               	movlw	127
 14399   0030BC  1626               	andwf	(___flmul@prod+2)^0,f,c
 14400   0030BE  0E00               	movlw	0
 14401   0030C0  1627               	andwf	(___flmul@prod+3)^0,f,c
 14402   0030C2  A023               	btfss	___flmul@bexp^0,0,c
 14403   0030C4  EF66  F018         	goto	u3961
 14404   0030C8  EF68  F018         	goto	u3960
 14405   0030CC                     u3961:
 14406   0030CC  EF69  F018         	goto	l4413
 14407   0030D0                     u3960:
 14408   0030D0  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14409   0030D2                     l4413:
 14410   0030D2  90D8               	bcf	status,0,c
 14411   0030D4  3023               	rrcf	___flmul@bexp^0,w,c
 14412   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 14413   0030D8                     l4415:
 14414   0030D8  501D               	movf	___flmul@sign^0,w,c
 14415   0030DA  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14416   0030DC  C024  F011         	movff	___flmul@prod,?___flmul
 14417   0030E0  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14418   0030E4  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14419   0030E8  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14420   0030EC                     l1292:
 14421   0030EC  0012               	return		;funcret
 14422   0030EE                     __end_of___flmul:
 14423                           	callstack 0
 14424                           
 14425 ;; *************** function ___flge *****************
 14426 ;; Defined at:
 14427 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  ff1             4   41[COMRAM] unsigned char 
 14430 ;;  ff2             4   45[COMRAM] unsigned char 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;		None               void
 14435 ;; Registers used:
 14436 ;;		wreg, status,2, status,0
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14442 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14445 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14446 ;;Total ram usage:       12 bytes
 14447 ;; Hardware stack levels used: 1
 14448 ;; Hardware stack levels required when called: 1
 14449 ;; This function calls:
 14450 ;;		Nothing
 14451 ;; This function is called by:
 14452 ;;		_Colour_decider
 14453 ;;		_efgtoa
 14454 ;; This function uses a non-reentrant model
 14455 ;;
 14456                           
 14457                           	psect	text76
 14458   004AEA                     __ptext76:
 14459                           	callstack 0
 14460   004AEA                     ___flge:
 14461                           	callstack 25
 14462   004AEA  0E00               	movlw	0
 14463   004AEC  142A               	andwf	___flge@ff1^0,w,c
 14464   004AEE  6E32               	movwf	??___flge^0,c
 14465   004AF0  0E00               	movlw	0
 14466   004AF2  142B               	andwf	(___flge@ff1+1)^0,w,c
 14467   004AF4  6E33               	movwf	(??___flge+1)^0,c
 14468   004AF6  0E80               	movlw	128
 14469   004AF8  142C               	andwf	(___flge@ff1+2)^0,w,c
 14470   004AFA  6E34               	movwf	(??___flge+2)^0,c
 14471   004AFC  0E7F               	movlw	127
 14472   004AFE  142D               	andwf	(___flge@ff1+3)^0,w,c
 14473   004B00  6E35               	movwf	(??___flge+3)^0,c
 14474   004B02  5032               	movf	??___flge^0,w,c
 14475   004B04  1033               	iorwf	(??___flge+1)^0,w,c
 14476   004B06  1034               	iorwf	(??___flge+2)^0,w,c
 14477   004B08  1035               	iorwf	(??___flge+3)^0,w,c
 14478   004B0A  A4D8               	btfss	status,2,c
 14479   004B0C  EF8A  F025         	goto	u4001
 14480   004B10  EF8C  F025         	goto	u4000
 14481   004B14                     u4001:
 14482   004B14  EF94  F025         	goto	l4447
 14483   004B18                     u4000:
 14484   004B18  0E00               	movlw	0
 14485   004B1A  6E2A               	movwf	___flge@ff1^0,c
 14486   004B1C  0E00               	movlw	0
 14487   004B1E  6E2B               	movwf	(___flge@ff1+1)^0,c
 14488   004B20  0E00               	movlw	0
 14489   004B22  6E2C               	movwf	(___flge@ff1+2)^0,c
 14490   004B24  0E00               	movlw	0
 14491   004B26  6E2D               	movwf	(___flge@ff1+3)^0,c
 14492   004B28                     l4447:
 14493   004B28  0E00               	movlw	0
 14494   004B2A  142E               	andwf	___flge@ff2^0,w,c
 14495   004B2C  6E32               	movwf	??___flge^0,c
 14496   004B2E  0E00               	movlw	0
 14497   004B30  142F               	andwf	(___flge@ff2+1)^0,w,c
 14498   004B32  6E33               	movwf	(??___flge+1)^0,c
 14499   004B34  0E80               	movlw	128
 14500   004B36  1430               	andwf	(___flge@ff2+2)^0,w,c
 14501   004B38  6E34               	movwf	(??___flge+2)^0,c
 14502   004B3A  0E7F               	movlw	127
 14503   004B3C  1431               	andwf	(___flge@ff2+3)^0,w,c
 14504   004B3E  6E35               	movwf	(??___flge+3)^0,c
 14505   004B40  5032               	movf	??___flge^0,w,c
 14506   004B42  1033               	iorwf	(??___flge+1)^0,w,c
 14507   004B44  1034               	iorwf	(??___flge+2)^0,w,c
 14508   004B46  1035               	iorwf	(??___flge+3)^0,w,c
 14509   004B48  A4D8               	btfss	status,2,c
 14510   004B4A  EFA9  F025         	goto	u4011
 14511   004B4E  EFAB  F025         	goto	u4010
 14512   004B52                     u4011:
 14513   004B52  EFB3  F025         	goto	l4451
 14514   004B56                     u4010:
 14515   004B56  0E00               	movlw	0
 14516   004B58  6E2E               	movwf	___flge@ff2^0,c
 14517   004B5A  0E00               	movlw	0
 14518   004B5C  6E2F               	movwf	(___flge@ff2+1)^0,c
 14519   004B5E  0E00               	movlw	0
 14520   004B60  6E30               	movwf	(___flge@ff2+2)^0,c
 14521   004B62  0E00               	movlw	0
 14522   004B64  6E31               	movwf	(___flge@ff2+3)^0,c
 14523   004B66                     l4451:
 14524   004B66  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14525   004B68  EFB8  F025         	goto	u4021
 14526   004B6C  EFBA  F025         	goto	u4020
 14527   004B70                     u4021:
 14528   004B70  EFC3  F025         	goto	l4455
 14529   004B74                     u4020:
 14530   004B74  6C2A               	negf	___flge@ff1^0,c
 14531   004B76  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14532   004B78  B0D8               	btfsc	status,0,c
 14533   004B7A  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14534   004B7C  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14535   004B7E  B0D8               	btfsc	status,0,c
 14536   004B80  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14537   004B82  0E80               	movlw	128
 14538   004B84  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14539   004B86                     l4455:
 14540   004B86  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14541   004B88  EFC8  F025         	goto	u4031
 14542   004B8C  EFCA  F025         	goto	u4030
 14543   004B90                     u4031:
 14544   004B90  EFD3  F025         	goto	l939
 14545   004B94                     u4030:
 14546   004B94  6C2E               	negf	___flge@ff2^0,c
 14547   004B96  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14548   004B98  B0D8               	btfsc	status,0,c
 14549   004B9A  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14550   004B9C  1E30               	comf	(___flge@ff2+2)^0,f,c
 14551   004B9E  B0D8               	btfsc	status,0,c
 14552   004BA0  2A30               	incf	(___flge@ff2+2)^0,f,c
 14553   004BA2  0E80               	movlw	128
 14554   004BA4  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14555   004BA6                     l939:
 14556   004BA6  0E00               	movlw	0
 14557   004BA8  1A2A               	xorwf	___flge@ff1^0,f,c
 14558   004BAA  0E00               	movlw	0
 14559   004BAC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14560   004BAE  0E00               	movlw	0
 14561   004BB0  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14562   004BB2  0E80               	movlw	128
 14563   004BB4  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14564   004BB6  0E00               	movlw	0
 14565   004BB8  1A2E               	xorwf	___flge@ff2^0,f,c
 14566   004BBA  0E00               	movlw	0
 14567   004BBC  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14568   004BBE  0E00               	movlw	0
 14569   004BC0  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14570   004BC2  0E80               	movlw	128
 14571   004BC4  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14572   004BC6  502E               	movf	___flge@ff2^0,w,c
 14573   004BC8  5C2A               	subwf	___flge@ff1^0,w,c
 14574   004BCA  502F               	movf	(___flge@ff2+1)^0,w,c
 14575   004BCC  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14576   004BCE  5030               	movf	(___flge@ff2+2)^0,w,c
 14577   004BD0  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14578   004BD2  5031               	movf	(___flge@ff2+3)^0,w,c
 14579   004BD4  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14580   004BD6  B0D8               	btfsc	status,0,c
 14581   004BD8  EFF0  F025         	goto	u4041
 14582   004BDC  EFF2  F025         	goto	u4040
 14583   004BE0                     u4041:
 14584   004BE0  EFF5  F025         	goto	l4461
 14585   004BE4                     u4040:
 14586   004BE4  90D8               	bcf	status,0,c
 14587   004BE6  EFF6  F025         	goto	l944
 14588   004BEA                     l4461:
 14589   004BEA  80D8               	bsf	status,0,c
 14590   004BEC                     l944:
 14591   004BEC  0012               	return		;funcret
 14592   004BEE                     __end_of___flge:
 14593                           	callstack 0
 14594                           
 14595 ;; *************** function ___fleq *****************
 14596 ;; Defined at:
 14597 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  ff1             4   49[COMRAM] unsigned char 
 14600 ;;  ff2             4   53[COMRAM] unsigned char 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;		None               void
 14605 ;; Registers used:
 14606 ;;		wreg, status,2, status,0
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14612 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14615 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14616 ;;Total ram usage:       12 bytes
 14617 ;; Hardware stack levels used: 1
 14618 ;; Hardware stack levels required when called: 1
 14619 ;; This function calls:
 14620 ;;		Nothing
 14621 ;; This function is called by:
 14622 ;;		_Colour_decider
 14623 ;;		_efgtoa
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           	psect	text77
 14628   004FCC                     __ptext77:
 14629                           	callstack 0
 14630   004FCC                     ___fleq:
 14631                           	callstack 25
 14632   004FCC  0E00               	movlw	0
 14633   004FCE  1432               	andwf	___fleq@ff1^0,w,c
 14634   004FD0  6E3A               	movwf	??___fleq^0,c
 14635   004FD2  0E00               	movlw	0
 14636   004FD4  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14637   004FD6  6E3B               	movwf	(??___fleq+1)^0,c
 14638   004FD8  0E80               	movlw	128
 14639   004FDA  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14640   004FDC  6E3C               	movwf	(??___fleq+2)^0,c
 14641   004FDE  0E7F               	movlw	127
 14642   004FE0  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14643   004FE2  6E3D               	movwf	(??___fleq+3)^0,c
 14644   004FE4  503A               	movf	??___fleq^0,w,c
 14645   004FE6  103B               	iorwf	(??___fleq+1)^0,w,c
 14646   004FE8  103C               	iorwf	(??___fleq+2)^0,w,c
 14647   004FEA  103D               	iorwf	(??___fleq+3)^0,w,c
 14648   004FEC  A4D8               	btfss	status,2,c
 14649   004FEE  EFFB  F027         	goto	u3971
 14650   004FF2  EFFD  F027         	goto	u3970
 14651   004FF6                     u3971:
 14652   004FF6  EF05  F028         	goto	l4431
 14653   004FFA                     u3970:
 14654   004FFA  0E00               	movlw	0
 14655   004FFC  6E32               	movwf	___fleq@ff1^0,c
 14656   004FFE  0E00               	movlw	0
 14657   005000  6E33               	movwf	(___fleq@ff1+1)^0,c
 14658   005002  0E00               	movlw	0
 14659   005004  6E34               	movwf	(___fleq@ff1+2)^0,c
 14660   005006  0E00               	movlw	0
 14661   005008  6E35               	movwf	(___fleq@ff1+3)^0,c
 14662   00500A                     l4431:
 14663   00500A  0E00               	movlw	0
 14664   00500C  1436               	andwf	___fleq@ff2^0,w,c
 14665   00500E  6E3A               	movwf	??___fleq^0,c
 14666   005010  0E00               	movlw	0
 14667   005012  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14668   005014  6E3B               	movwf	(??___fleq+1)^0,c
 14669   005016  0E80               	movlw	128
 14670   005018  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14671   00501A  6E3C               	movwf	(??___fleq+2)^0,c
 14672   00501C  0E7F               	movlw	127
 14673   00501E  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14674   005020  6E3D               	movwf	(??___fleq+3)^0,c
 14675   005022  503A               	movf	??___fleq^0,w,c
 14676   005024  103B               	iorwf	(??___fleq+1)^0,w,c
 14677   005026  103C               	iorwf	(??___fleq+2)^0,w,c
 14678   005028  103D               	iorwf	(??___fleq+3)^0,w,c
 14679   00502A  A4D8               	btfss	status,2,c
 14680   00502C  EF1A  F028         	goto	u3981
 14681   005030  EF1C  F028         	goto	u3980
 14682   005034                     u3981:
 14683   005034  EF24  F028         	goto	l4435
 14684   005038                     u3980:
 14685   005038  0E00               	movlw	0
 14686   00503A  6E36               	movwf	___fleq@ff2^0,c
 14687   00503C  0E00               	movlw	0
 14688   00503E  6E37               	movwf	(___fleq@ff2+1)^0,c
 14689   005040  0E00               	movlw	0
 14690   005042  6E38               	movwf	(___fleq@ff2+2)^0,c
 14691   005044  0E00               	movlw	0
 14692   005046  6E39               	movwf	(___fleq@ff2+3)^0,c
 14693   005048                     l4435:
 14694   005048  5036               	movf	___fleq@ff2^0,w,c
 14695   00504A  1832               	xorwf	___fleq@ff1^0,w,c
 14696   00504C  E10F               	bnz	u3990
 14697   00504E  5037               	movf	(___fleq@ff2+1)^0,w,c
 14698   005050  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14699   005052  E10C               	bnz	u3990
 14700   005054  5038               	movf	(___fleq@ff2+2)^0,w,c
 14701   005056  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14702   005058  E109               	bnz	u3990
 14703   00505A  5039               	movf	(___fleq@ff2+3)^0,w,c
 14704   00505C  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14705   00505E  B4D8               	btfsc	status,2,c
 14706   005060  EF34  F028         	goto	u3991
 14707   005064  EF36  F028         	goto	u3990
 14708   005068                     u3991:
 14709   005068  EF39  F028         	goto	l4439
 14710   00506C                     u3990:
 14711   00506C  90D8               	bcf	status,0,c
 14712   00506E  EF3A  F028         	goto	l933
 14713   005072                     l4439:
 14714   005072  80D8               	bsf	status,0,c
 14715   005074                     l933:
 14716   005074  0012               	return		;funcret
 14717   005076                     __end_of___fleq:
 14718                           	callstack 0
 14719                           
 14720 ;; *************** function ___fldiv *****************
 14721 ;; Defined at:
 14722 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;  b               4   49[COMRAM] unsigned char 
 14725 ;;  a               4   53[COMRAM] unsigned char 
 14726 ;; Auto vars:     Size  Location     Type
 14727 ;;  grs             4   68[COMRAM] unsigned long 
 14728 ;;  rem             4   61[COMRAM] unsigned long 
 14729 ;;  new_exp         2   66[COMRAM] short 
 14730 ;;  aexp            1   73[COMRAM] unsigned char 
 14731 ;;  bexp            1   72[COMRAM] unsigned char 
 14732 ;;  sign            1   65[COMRAM] unsigned char 
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  4   49[COMRAM] unsigned char 
 14735 ;; Registers used:
 14736 ;;		wreg, status,2, status,0
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14743 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14745 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14746 ;;Total ram usage:       25 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 1
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_colour_rel
 14753 ;;		_Colour_decider
 14754 ;;		_efgtoa
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text78
 14759   0030EE                     __ptext78:
 14760                           	callstack 0
 14761   0030EE                     ___fldiv:
 14762                           	callstack 25
 14763   0030EE  5035               	movf	(___fldiv@b+3)^0,w,c
 14764   0030F0  0B80               	andlw	128
 14765   0030F2  6E42               	movwf	___fldiv@sign^0,c
 14766   0030F4  5035               	movf	(___fldiv@b+3)^0,w,c
 14767   0030F6  2435               	addwf	(___fldiv@b+3)^0,w,c
 14768   0030F8  6E49               	movwf	___fldiv@bexp^0,c
 14769   0030FA  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14770   0030FC  EF82  F018         	goto	u3551
 14771   003100  EF84  F018         	goto	u3550
 14772   003104                     u3551:
 14773   003104  EF85  F018         	goto	l4159
 14774   003108                     u3550:
 14775   003108  8049               	bsf	___fldiv@bexp^0,0,c
 14776   00310A                     l4159:
 14777   00310A  5049               	movf	___fldiv@bexp^0,w,c
 14778   00310C  B4D8               	btfsc	status,2,c
 14779   00310E  EF8B  F018         	goto	u3561
 14780   003112  EF8D  F018         	goto	u3560
 14781   003116                     u3561:
 14782   003116  EFA2  F018         	goto	l4169
 14783   00311A                     u3560:
 14784   00311A  2849               	incf	___fldiv@bexp^0,w,c
 14785   00311C  A4D8               	btfss	status,2,c
 14786   00311E  EF93  F018         	goto	u3571
 14787   003122  EF95  F018         	goto	u3570
 14788   003126                     u3571:
 14789   003126  EF9D  F018         	goto	l4165
 14790   00312A                     u3570:
 14791   00312A  0E00               	movlw	0
 14792   00312C  6E32               	movwf	___fldiv@b^0,c
 14793   00312E  0E00               	movlw	0
 14794   003130  6E33               	movwf	(___fldiv@b+1)^0,c
 14795   003132  0E00               	movlw	0
 14796   003134  6E34               	movwf	(___fldiv@b+2)^0,c
 14797   003136  0E00               	movlw	0
 14798   003138  6E35               	movwf	(___fldiv@b+3)^0,c
 14799   00313A                     l4165:
 14800   00313A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14801   00313C  0E00               	movlw	0
 14802   00313E  6E35               	movwf	(___fldiv@b+3)^0,c
 14803   003140  EFAA  F018         	goto	l4171
 14804   003144                     l4169:
 14805   003144  0E00               	movlw	0
 14806   003146  6E32               	movwf	___fldiv@b^0,c
 14807   003148  0E00               	movlw	0
 14808   00314A  6E33               	movwf	(___fldiv@b+1)^0,c
 14809   00314C  0E00               	movlw	0
 14810   00314E  6E34               	movwf	(___fldiv@b+2)^0,c
 14811   003150  0E00               	movlw	0
 14812   003152  6E35               	movwf	(___fldiv@b+3)^0,c
 14813   003154                     l4171:
 14814   003154  5039               	movf	(___fldiv@a+3)^0,w,c
 14815   003156  0B80               	andlw	128
 14816   003158  1A42               	xorwf	___fldiv@sign^0,f,c
 14817   00315A  5039               	movf	(___fldiv@a+3)^0,w,c
 14818   00315C  2439               	addwf	(___fldiv@a+3)^0,w,c
 14819   00315E  6E4A               	movwf	___fldiv@aexp^0,c
 14820   003160  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14821   003162  EFB5  F018         	goto	u3581
 14822   003166  EFB7  F018         	goto	u3580
 14823   00316A                     u3581:
 14824   00316A  EFB8  F018         	goto	l4179
 14825   00316E                     u3580:
 14826   00316E  804A               	bsf	___fldiv@aexp^0,0,c
 14827   003170                     l4179:
 14828   003170  504A               	movf	___fldiv@aexp^0,w,c
 14829   003172  B4D8               	btfsc	status,2,c
 14830   003174  EFBE  F018         	goto	u3591
 14831   003178  EFC0  F018         	goto	u3590
 14832   00317C                     u3591:
 14833   00317C  EFD5  F018         	goto	l4189
 14834   003180                     u3590:
 14835   003180  284A               	incf	___fldiv@aexp^0,w,c
 14836   003182  A4D8               	btfss	status,2,c
 14837   003184  EFC6  F018         	goto	u3601
 14838   003188  EFC8  F018         	goto	u3600
 14839   00318C                     u3601:
 14840   00318C  EFD0  F018         	goto	l4185
 14841   003190                     u3600:
 14842   003190  0E00               	movlw	0
 14843   003192  6E36               	movwf	___fldiv@a^0,c
 14844   003194  0E00               	movlw	0
 14845   003196  6E37               	movwf	(___fldiv@a+1)^0,c
 14846   003198  0E00               	movlw	0
 14847   00319A  6E38               	movwf	(___fldiv@a+2)^0,c
 14848   00319C  0E00               	movlw	0
 14849   00319E  6E39               	movwf	(___fldiv@a+3)^0,c
 14850   0031A0                     l4185:
 14851   0031A0  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14852   0031A2  0E00               	movlw	0
 14853   0031A4  6E39               	movwf	(___fldiv@a+3)^0,c
 14854   0031A6  EFDD  F018         	goto	l4191
 14855   0031AA                     l4189:
 14856   0031AA  0E00               	movlw	0
 14857   0031AC  6E36               	movwf	___fldiv@a^0,c
 14858   0031AE  0E00               	movlw	0
 14859   0031B0  6E37               	movwf	(___fldiv@a+1)^0,c
 14860   0031B2  0E00               	movlw	0
 14861   0031B4  6E38               	movwf	(___fldiv@a+2)^0,c
 14862   0031B6  0E00               	movlw	0
 14863   0031B8  6E39               	movwf	(___fldiv@a+3)^0,c
 14864   0031BA                     l4191:
 14865   0031BA  5036               	movf	___fldiv@a^0,w,c
 14866   0031BC  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14867   0031BE  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14868   0031C0  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14869   0031C2  A4D8               	btfss	status,2,c
 14870   0031C4  EFE6  F018         	goto	u3611
 14871   0031C8  EFE8  F018         	goto	u3610
 14872   0031CC                     u3611:
 14873   0031CC  EF00  F019         	goto	l4203
 14874   0031D0                     u3610:
 14875   0031D0  0E00               	movlw	0
 14876   0031D2  6E32               	movwf	___fldiv@b^0,c
 14877   0031D4  0E00               	movlw	0
 14878   0031D6  6E33               	movwf	(___fldiv@b+1)^0,c
 14879   0031D8  0E00               	movlw	0
 14880   0031DA  6E34               	movwf	(___fldiv@b+2)^0,c
 14881   0031DC  0E00               	movlw	0
 14882   0031DE  6E35               	movwf	(___fldiv@b+3)^0,c
 14883   0031E0  0E80               	movlw	128
 14884   0031E2  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14885   0031E4  0E7F               	movlw	127
 14886   0031E6  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14887   0031E8                     l4197:
 14888   0031E8  5042               	movf	___fldiv@sign^0,w,c
 14889   0031EA  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14890   0031EC  C032  F032         	movff	___fldiv@b,?___fldiv
 14891   0031F0  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14892   0031F4  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14893   0031F8  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14894   0031FC  EF43  F01A         	goto	l1256
 14895   003200                     l4203:
 14896   003200  5049               	movf	___fldiv@bexp^0,w,c
 14897   003202  A4D8               	btfss	status,2,c
 14898   003204  EF06  F019         	goto	u3621
 14899   003208  EF08  F019         	goto	u3620
 14900   00320C                     u3621:
 14901   00320C  EF12  F019         	goto	l4211
 14902   003210                     u3620:
 14903   003210  0E00               	movlw	0
 14904   003212  6E32               	movwf	?___fldiv^0,c
 14905   003214  0E00               	movlw	0
 14906   003216  6E33               	movwf	(?___fldiv+1)^0,c
 14907   003218  0E00               	movlw	0
 14908   00321A  6E34               	movwf	(?___fldiv+2)^0,c
 14909   00321C  0E00               	movlw	0
 14910   00321E  6E35               	movwf	(?___fldiv+3)^0,c
 14911   003220  EF43  F01A         	goto	l1256
 14912   003224                     l4211:
 14913   003224  504A               	movf	___fldiv@aexp^0,w,c
 14914   003226  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14915   00322A  6A3B               	clrf	(??___fldiv+1)^0,c
 14916   00322C  5E3A               	subwf	??___fldiv^0,f,c
 14917   00322E  0E00               	movlw	0
 14918   003230  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14919   003232  0E7F               	movlw	127
 14920   003234  243A               	addwf	??___fldiv^0,w,c
 14921   003236  6E43               	movwf	___fldiv@new_exp^0,c
 14922   003238  0E00               	movlw	0
 14923   00323A  203B               	addwfc	(??___fldiv+1)^0,w,c
 14924   00323C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14925   00323E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14926   003242  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14927   003246  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14928   00324A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14929   00324E  0E00               	movlw	0
 14930   003250  6E32               	movwf	___fldiv@b^0,c
 14931   003252  0E00               	movlw	0
 14932   003254  6E33               	movwf	(___fldiv@b+1)^0,c
 14933   003256  0E00               	movlw	0
 14934   003258  6E34               	movwf	(___fldiv@b+2)^0,c
 14935   00325A  0E00               	movlw	0
 14936   00325C  6E35               	movwf	(___fldiv@b+3)^0,c
 14937   00325E  0E00               	movlw	0
 14938   003260  6E45               	movwf	___fldiv@grs^0,c
 14939   003262  0E00               	movlw	0
 14940   003264  6E46               	movwf	(___fldiv@grs+1)^0,c
 14941   003266  0E00               	movlw	0
 14942   003268  6E47               	movwf	(___fldiv@grs+2)^0,c
 14943   00326A  0E00               	movlw	0
 14944   00326C  6E48               	movwf	(___fldiv@grs+3)^0,c
 14945   00326E  0E00               	movlw	0
 14946   003270  6E4A               	movwf	___fldiv@aexp^0,c
 14947   003272  EF73  F019         	goto	l1258
 14948   003276                     l4221:
 14949   003276  504A               	movf	___fldiv@aexp^0,w,c
 14950   003278  B4D8               	btfsc	status,2,c
 14951   00327A  EF41  F019         	goto	u3631
 14952   00327E  EF43  F019         	goto	u3630
 14953   003282                     u3631:
 14954   003282  EF5A  F019         	goto	l4229
 14955   003286                     u3630:
 14956   003286  90D8               	bcf	status,0,c
 14957   003288  363E               	rlcf	___fldiv@rem^0,f,c
 14958   00328A  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14959   00328C  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14960   00328E  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14961   003290  90D8               	bcf	status,0,c
 14962   003292  3632               	rlcf	___fldiv@b^0,f,c
 14963   003294  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14964   003296  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14965   003298  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14966   00329A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14967   00329C  EF52  F019         	goto	u3641
 14968   0032A0  EF54  F019         	goto	u3640
 14969   0032A4                     u3641:
 14970   0032A4  EF55  F019         	goto	l1261
 14971   0032A8                     u3640:
 14972   0032A8  8032               	bsf	___fldiv@b^0,0,c
 14973   0032AA                     l1261:
 14974   0032AA  90D8               	bcf	status,0,c
 14975   0032AC  3645               	rlcf	___fldiv@grs^0,f,c
 14976   0032AE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14977   0032B0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14978   0032B2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14979   0032B4                     l4229:
 14980   0032B4  5036               	movf	___fldiv@a^0,w,c
 14981   0032B6  5C3E               	subwf	___fldiv@rem^0,w,c
 14982   0032B8  5037               	movf	(___fldiv@a+1)^0,w,c
 14983   0032BA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 14984   0032BC  5038               	movf	(___fldiv@a+2)^0,w,c
 14985   0032BE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 14986   0032C0  5039               	movf	(___fldiv@a+3)^0,w,c
 14987   0032C2  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 14988   0032C4  A0D8               	btfss	status,0,c
 14989   0032C6  EF67  F019         	goto	u3651
 14990   0032CA  EF69  F019         	goto	u3650
 14991   0032CE                     u3651:
 14992   0032CE  EF72  F019         	goto	l4235
 14993   0032D2                     u3650:
 14994   0032D2  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 14995   0032D4  5036               	movf	___fldiv@a^0,w,c
 14996   0032D6  5E3E               	subwf	___fldiv@rem^0,f,c
 14997   0032D8  5037               	movf	(___fldiv@a+1)^0,w,c
 14998   0032DA  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 14999   0032DC  5038               	movf	(___fldiv@a+2)^0,w,c
 15000   0032DE  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15001   0032E0  5039               	movf	(___fldiv@a+3)^0,w,c
 15002   0032E2  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15003   0032E4                     l4235:
 15004   0032E4  2A4A               	incf	___fldiv@aexp^0,f,c
 15005   0032E6                     l1258:
 15006   0032E6  0E19               	movlw	25
 15007   0032E8  644A               	cpfsgt	___fldiv@aexp^0,c
 15008   0032EA  EF79  F019         	goto	u3661
 15009   0032EE  EF7B  F019         	goto	u3660
 15010   0032F2                     u3661:
 15011   0032F2  EF3B  F019         	goto	l4221
 15012   0032F6                     u3660:
 15013   0032F6  503E               	movf	___fldiv@rem^0,w,c
 15014   0032F8  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15015   0032FA  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15016   0032FC  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15017   0032FE  B4D8               	btfsc	status,2,c
 15018   003300  EF84  F019         	goto	u3671
 15019   003304  EF86  F019         	goto	u3670
 15020   003308                     u3671:
 15021   003308  EF9E  F019         	goto	l4247
 15022   00330C                     u3670:
 15023   00330C  8045               	bsf	___fldiv@grs^0,0,c
 15024   00330E  EF9E  F019         	goto	l4247
 15025   003312                     l4241:
 15026   003312  90D8               	bcf	status,0,c
 15027   003314  3632               	rlcf	___fldiv@b^0,f,c
 15028   003316  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15029   003318  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15030   00331A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15031   00331C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15032   00331E  EF93  F019         	goto	u3681
 15033   003322  EF95  F019         	goto	u3680
 15034   003326                     u3681:
 15035   003326  EF96  F019         	goto	l1267
 15036   00332A                     u3680:
 15037   00332A  8032               	bsf	___fldiv@b^0,0,c
 15038   00332C                     l1267:
 15039   00332C  90D8               	bcf	status,0,c
 15040   00332E  3645               	rlcf	___fldiv@grs^0,f,c
 15041   003330  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15042   003332  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15043   003334  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15044   003336  0643               	decf	___fldiv@new_exp^0,f,c
 15045   003338  A0D8               	btfss	status,0,c
 15046   00333A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15047   00333C                     l4247:
 15048   00333C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15049   00333E  EFA3  F019         	goto	u3691
 15050   003342  EFA5  F019         	goto	u3690
 15051   003346                     u3691:
 15052   003346  EF89  F019         	goto	l4241
 15053   00334A                     u3690:
 15054   00334A  0E00               	movlw	0
 15055   00334C  6E4A               	movwf	___fldiv@aexp^0,c
 15056   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15057   003350  EFAC  F019         	goto	u3701
 15058   003354  EFAE  F019         	goto	u3700
 15059   003358                     u3701:
 15060   003358  EFD2  F019         	goto	l1269
 15061   00335C                     u3700:
 15062   00335C  0EFF               	movlw	255
 15063   00335E  1445               	andwf	___fldiv@grs^0,w,c
 15064   003360  6E3A               	movwf	??___fldiv^0,c
 15065   003362  0EFF               	movlw	255
 15066   003364  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15067   003366  6E3B               	movwf	(??___fldiv+1)^0,c
 15068   003368  0EFF               	movlw	255
 15069   00336A  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15070   00336C  6E3C               	movwf	(??___fldiv+2)^0,c
 15071   00336E  0E7F               	movlw	127
 15072   003370  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15073   003372  6E3D               	movwf	(??___fldiv+3)^0,c
 15074   003374  503A               	movf	??___fldiv^0,w,c
 15075   003376  103B               	iorwf	(??___fldiv+1)^0,w,c
 15076   003378  103C               	iorwf	(??___fldiv+2)^0,w,c
 15077   00337A  103D               	iorwf	(??___fldiv+3)^0,w,c
 15078   00337C  B4D8               	btfsc	status,2,c
 15079   00337E  EFC3  F019         	goto	u3711
 15080   003382  EFC5  F019         	goto	u3710
 15081   003386                     u3711:
 15082   003386  EFC9  F019         	goto	l1270
 15083   00338A                     u3710:
 15084   00338A                     l4255:
 15085   00338A  0E01               	movlw	1
 15086   00338C  6E4A               	movwf	___fldiv@aexp^0,c
 15087   00338E  EFD2  F019         	goto	l1269
 15088   003392                     l1270:
 15089   003392  A032               	btfss	___fldiv@b^0,0,c
 15090   003394  EFCE  F019         	goto	u3721
 15091   003398  EFD0  F019         	goto	u3720
 15092   00339C                     u3721:
 15093   00339C  EFD2  F019         	goto	l1269
 15094   0033A0                     u3720:
 15095   0033A0  EFC5  F019         	goto	l4255
 15096   0033A4                     l1269:
 15097   0033A4  504A               	movf	___fldiv@aexp^0,w,c
 15098   0033A6  B4D8               	btfsc	status,2,c
 15099   0033A8  EFD8  F019         	goto	u3731
 15100   0033AC  EFDA  F019         	goto	u3730
 15101   0033B0                     u3731:
 15102   0033B0  EFFE  F019         	goto	l4267
 15103   0033B4                     u3730:
 15104   0033B4  0E01               	movlw	1
 15105   0033B6  2632               	addwf	___fldiv@b^0,f,c
 15106   0033B8  0E00               	movlw	0
 15107   0033BA  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15108   0033BC  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15109   0033BE  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15110   0033C0  A035               	btfss	(___fldiv@b+3)^0,0,c
 15111   0033C2  EFE5  F019         	goto	u3741
 15112   0033C6  EFE7  F019         	goto	u3740
 15113   0033CA                     u3741:
 15114   0033CA  EFFE  F019         	goto	l4267
 15115   0033CE                     u3740:
 15116   0033CE  C032  F03A         	movff	___fldiv@b,??___fldiv
 15117   0033D2  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15118   0033D6  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15119   0033DA  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15120   0033DE  343D               	rlcf	(??___fldiv+3)^0,w,c
 15121   0033E0  323D               	rrcf	(??___fldiv+3)^0,f,c
 15122   0033E2  323C               	rrcf	(??___fldiv+2)^0,f,c
 15123   0033E4  323B               	rrcf	(??___fldiv+1)^0,f,c
 15124   0033E6  323A               	rrcf	??___fldiv^0,f,c
 15125   0033E8  C03A  F032         	movff	??___fldiv,___fldiv@b
 15126   0033EC  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15127   0033F0  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15128   0033F4  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15129   0033F8  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15130   0033FA  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15131   0033FC                     l4267:
 15132   0033FC  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15133   0033FE  EF09  F01A         	goto	u3751
 15134   003402  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15135   003404  E108               	bnz	u3750
 15136   003406  2843               	incf	___fldiv@new_exp^0,w,c
 15137   003408  A0D8               	btfss	status,0,c
 15138   00340A  EF09  F01A         	goto	u3751
 15139   00340E  EF0B  F01A         	goto	u3750
 15140   003412                     u3751:
 15141   003412  EF16  F01A         	goto	l4271
 15142   003416                     u3750:
 15143   003416  0E00               	movlw	0
 15144   003418  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15145   00341A  6843               	setf	___fldiv@new_exp^0,c
 15146   00341C  0E00               	movlw	0
 15147   00341E  6E32               	movwf	___fldiv@b^0,c
 15148   003420  0E00               	movlw	0
 15149   003422  6E33               	movwf	(___fldiv@b+1)^0,c
 15150   003424  0E00               	movlw	0
 15151   003426  6E34               	movwf	(___fldiv@b+2)^0,c
 15152   003428  0E00               	movlw	0
 15153   00342A  6E35               	movwf	(___fldiv@b+3)^0,c
 15154   00342C                     l4271:
 15155   00342C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15156   00342E  EF23  F01A         	goto	u3760
 15157   003432  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15158   003434  E106               	bnz	u3761
 15159   003436  0443               	decf	___fldiv@new_exp^0,w,c
 15160   003438  B0D8               	btfsc	status,0,c
 15161   00343A  EF21  F01A         	goto	u3761
 15162   00343E  EF23  F01A         	goto	u3760
 15163   003442                     u3761:
 15164   003442  EF31  F01A         	goto	l4275
 15165   003446                     u3760:
 15166   003446  0E00               	movlw	0
 15167   003448  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15168   00344A  0E00               	movlw	0
 15169   00344C  6E43               	movwf	___fldiv@new_exp^0,c
 15170   00344E  0E00               	movlw	0
 15171   003450  6E32               	movwf	___fldiv@b^0,c
 15172   003452  0E00               	movlw	0
 15173   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 15174   003456  0E00               	movlw	0
 15175   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 15176   00345A  0E00               	movlw	0
 15177   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 15178   00345E  0E00               	movlw	0
 15179   003460  6E42               	movwf	___fldiv@sign^0,c
 15180   003462                     l4275:
 15181   003462  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15182   003466  A049               	btfss	___fldiv@bexp^0,0,c
 15183   003468  EF38  F01A         	goto	u3771
 15184   00346C  EF3A  F01A         	goto	u3770
 15185   003470                     u3771:
 15186   003470  EF3D  F01A         	goto	l4281
 15187   003474                     u3770:
 15188   003474  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15189   003476  EF3E  F01A         	goto	l4283
 15190   00347A                     l4281:
 15191   00347A  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15192   00347C                     l4283:
 15193   00347C  90D8               	bcf	status,0,c
 15194   00347E  3049               	rrcf	___fldiv@bexp^0,w,c
 15195   003480  6E35               	movwf	(___fldiv@b+3)^0,c
 15196   003482  EFF4  F018         	goto	l4197
 15197   003486                     l1256:
 15198   003486  0012               	return		;funcret
 15199   003488                     __end_of___fldiv:
 15200                           	callstack 0
 15201                           
 15202 ;; *************** function _HighISR *****************
 15203 ;; Defined at:
 15204 ;;		line 23 in file "interrupts.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;		None
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;		None
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1    wreg      void 
 15211 ;; Registers used:
 15212 ;;		wreg, status,2
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/0
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15222 ;;Total ram usage:        0 bytes
 15223 ;; Hardware stack levels used: 1
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		Interrupt level 2
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           	psect	intcode
 15232   000008                     __pintcode:
 15233                           	callstack 0
 15234   000008                     _HighISR:
 15235                           	callstack 22
 15236                           
 15237                           ;incstack = 0
 15238   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15239   00000A                     
 15240                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15241   00000A  010E               	movlb	14	; () banked
 15242   00000C  AB33               	btfss	51,5,b	;volatile
 15243   00000E  EF0B  F000         	goto	i2u561_41
 15244   000012  EF0D  F000         	goto	i2u561_40
 15245   000016                     i2u561_41:
 15246   000016  EF18  F000         	goto	i2l225
 15247   00001A                     i2u561_40:
 15248   00001A                     
 15249                           ; BSR set to: 14
 15250                           ;interrupts.c: 26:         TMR0H=0;
 15251   00001A  0E00               	movlw	0
 15252   00001C  6ED4               	movwf	212,c	;volatile
 15253                           
 15254                           ;interrupts.c: 27:         TMR0L=0;
 15255   00001E  0E00               	movlw	0
 15256   000020  6ED3               	movwf	211,c	;volatile
 15257                           
 15258                           ;interrupts.c: 28:         lost_flag=1;
 15259   000022  0E00               	movlw	0
 15260   000024  0101               	movlb	1	; () banked
 15261   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15262   000028  0E01               	movlw	1
 15263   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15264   00002C                     
 15265                           ; BSR set to: 1
 15266                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15267   00002C  010E               	movlb	14	; () banked
 15268   00002E  9B33               	bcf	51,5,b	;volatile
 15269   000030                     i2l225:
 15270                           
 15271                           ; BSR set to: 14
 15272   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15273   000032  0011               	retfie		f
 15274   000034                     __end_of_HighISR:
 15275                           	callstack 0
 15276                           
 15277                           	psect	rparam
 15278   000000                     
 15279                           	psect	temp
 15280   00005F                     btemp:
 15281                           	callstack 0
 15282   00005F                     	ds	1
 15283   000000                     int$flags	set	btemp
 15284   000000                     wtemp8	set	btemp+1
 15285   000000                     ttemp5	set	btemp+1
 15286   000000                     ttemp6	set	btemp+4
 15287   000000                     ttemp7	set	btemp+8
 15288                           
 15289                           	psect	idloc
 15290                           
 15291                           ;Config register IDLOC0 @ 0x200000
 15292                           ;	unspecified, using default values
 15293   200000                     	org	2097152
 15294   200000  0FFF               	dw	4095
 15295                           
 15296                           ;Config register IDLOC1 @ 0x200002
 15297                           ;	unspecified, using default values
 15298   200002                     	org	2097154
 15299   200002  0FFF               	dw	4095
 15300                           
 15301                           ;Config register IDLOC2 @ 0x200004
 15302                           ;	unspecified, using default values
 15303   200004                     	org	2097156
 15304   200004  0FFF               	dw	4095
 15305                           
 15306                           ;Config register IDLOC3 @ 0x200006
 15307                           ;	unspecified, using default values
 15308   200006                     	org	2097158
 15309   200006  0FFF               	dw	4095
 15310                           
 15311                           ;Config register IDLOC4 @ 0x200008
 15312                           ;	unspecified, using default values
 15313   200008                     	org	2097160
 15314   200008  0FFF               	dw	4095
 15315                           
 15316                           ;Config register IDLOC5 @ 0x20000A
 15317                           ;	unspecified, using default values
 15318   20000A                     	org	2097162
 15319   20000A  0FFF               	dw	4095
 15320                           
 15321                           ;Config register IDLOC6 @ 0x20000C
 15322                           ;	unspecified, using default values
 15323   20000C                     	org	2097164
 15324   20000C  0FFF               	dw	4095
 15325                           
 15326                           ;Config register IDLOC7 @ 0x20000E
 15327                           ;	unspecified, using default values
 15328   20000E                     	org	2097166
 15329   20000E  0FFF               	dw	4095
 15330                           
 15331                           	psect	config
 15332                           
 15333                           ;Config register CONFIG1L @ 0x300000
 15334                           ;	External Oscillator mode Selection bits
 15335                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15336                           ;	Power-up default value for COSC bits
 15337                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15338   300000                     	org	3145728
 15339   300000  AA                 	db	170
 15340                           
 15341                           ;Config register CONFIG1H @ 0x300001
 15342                           ;	unspecified, using default values
 15343                           ;	Clock Out Enable bit
 15344                           ;	CLKOUTEN = 0x1, unprogrammed default
 15345                           ;	Clock Switch Enable bit
 15346                           ;	CSWEN = 0x1, unprogrammed default
 15347                           ;	Fail-Safe Clock Monitor Enable bit
 15348                           ;	FCMEN = 0x1, unprogrammed default
 15349   300001                     	org	3145729
 15350   300001  FF                 	db	255
 15351                           
 15352                           ;Config register CONFIG2L @ 0x300002
 15353                           ;	unspecified, using default values
 15354                           ;	Master Clear Enable bit
 15355                           ;	MCLRE = 0x1, unprogrammed default
 15356                           ;	Power-up Timer Enable bit
 15357                           ;	PWRTE = 0x1, unprogrammed default
 15358                           ;	Low-power BOR enable bit
 15359                           ;	LPBOREN = 0x1, unprogrammed default
 15360                           ;	Brown-out Reset Enable bits
 15361                           ;	BOREN = 0x3, unprogrammed default
 15362   300002                     	org	3145730
 15363   300002  FF                 	db	255
 15364                           
 15365                           ;Config register CONFIG2H @ 0x300003
 15366                           ;	unspecified, using default values
 15367                           ;	Brown Out Reset Voltage selection bits
 15368                           ;	BORV = 0x3, unprogrammed default
 15369                           ;	ZCD Disable bit
 15370                           ;	ZCD = 0x1, unprogrammed default
 15371                           ;	PPSLOCK bit One-Way Set Enable bit
 15372                           ;	PPS1WAY = 0x1, unprogrammed default
 15373                           ;	Stack Full/Underflow Reset Enable bit
 15374                           ;	STVREN = 0x1, unprogrammed default
 15375                           ;	Debugger Enable bit
 15376                           ;	DEBUG = 0x1, unprogrammed default
 15377                           ;	Extended Instruction Set Enable bit
 15378                           ;	XINST = 0x1, unprogrammed default
 15379   300003                     	org	3145731
 15380   300003  FF                 	db	255
 15381                           
 15382                           ;Config register CONFIG3L @ 0x300004
 15383                           ;	WDT Period Select bits
 15384                           ;	WDTCPS = 0x1F, unprogrammed default
 15385                           ;	WDT operating mode
 15386                           ;	WDTE = OFF, WDT Disabled
 15387   300004                     	org	3145732
 15388   300004  9F                 	db	159
 15389                           
 15390                           ;Config register CONFIG3H @ 0x300005
 15391                           ;	unspecified, using default values
 15392                           ;	WDT Window Select bits
 15393                           ;	WDTCWS = 0x7, unprogrammed default
 15394                           ;	WDT input clock selector
 15395                           ;	WDTCCS = 0x7, unprogrammed default
 15396   300005                     	org	3145733
 15397   300005  FF                 	db	255
 15398                           
 15399                           ;Config register CONFIG4L @ 0x300006
 15400                           ;	unspecified, using default values
 15401                           ;	Write Protection Block 0
 15402                           ;	WRT0 = 0x1, unprogrammed default
 15403                           ;	Write Protection Block 1
 15404                           ;	WRT1 = 0x1, unprogrammed default
 15405                           ;	Write Protection Block 2
 15406                           ;	WRT2 = 0x1, unprogrammed default
 15407                           ;	Write Protection Block 3
 15408                           ;	WRT3 = 0x1, unprogrammed default
 15409                           ;	Write Protection Block 3
 15410                           ;	WRT4 = 0x1, unprogrammed default
 15411                           ;	Write Protection Block 3
 15412                           ;	WRT5 = 0x1, unprogrammed default
 15413                           ;	Write Protection Block 3
 15414                           ;	WRT6 = 0x1, unprogrammed default
 15415                           ;	Write Protection Block 3
 15416                           ;	WRT7 = 0x1, unprogrammed default
 15417   300006                     	org	3145734
 15418   300006  FF                 	db	255
 15419                           
 15420                           ;Config register CONFIG4H @ 0x300007
 15421                           ;	unspecified, using default values
 15422                           ;	Configuration Register Write Protection bit
 15423                           ;	WRTC = 0x1, unprogrammed default
 15424                           ;	Boot Block Write Protection bit
 15425                           ;	WRTB = 0x1, unprogrammed default
 15426                           ;	Data EEPROM Write Protection bit
 15427                           ;	WRTD = 0x1, unprogrammed default
 15428                           ;	Scanner Enable bit
 15429                           ;	SCANE = 0x1, unprogrammed default
 15430                           ;	Low Voltage Programming Enable bit
 15431                           ;	LVP = 0x1, unprogrammed default
 15432   300007                     	org	3145735
 15433   300007  FF                 	db	255
 15434                           
 15435                           ;Config register CONFIG5L @ 0x300008
 15436                           ;	unspecified, using default values
 15437                           ;	UserNVM Program Memory Code Protection bit
 15438                           ;	CP = 0x1, unprogrammed default
 15439                           ;	DataNVM Memory Code Protection bit
 15440                           ;	CPD = 0x1, unprogrammed default
 15441   300008                     	org	3145736
 15442   300008  FF                 	db	255
 15443                           
 15444                           ;Config register CONFIG5H @ 0x300009
 15445                           ;	unspecified, using default values
 15446   300009                     	org	3145737
 15447   300009  FF                 	db	255
 15448                           
 15449                           ;Config register CONFIG6L @ 0x30000A
 15450                           ;	unspecified, using default values
 15451                           ;	Table Read Protection Block 0
 15452                           ;	EBTR0 = 0x1, unprogrammed default
 15453                           ;	Table Read Protection Block 1
 15454                           ;	EBTR1 = 0x1, unprogrammed default
 15455                           ;	Table Read Protection Block 2
 15456                           ;	EBTR2 = 0x1, unprogrammed default
 15457                           ;	Table Read Protection Block 3
 15458                           ;	EBTR3 = 0x1, unprogrammed default
 15459                           ;	Table Read Protection Block 4
 15460                           ;	EBTR4 = 0x1, unprogrammed default
 15461                           ;	Table Read Protection Block 5
 15462                           ;	EBTR5 = 0x1, unprogrammed default
 15463                           ;	Table Read Protection Block 6
 15464                           ;	EBTR6 = 0x1, unprogrammed default
 15465                           ;	Table Read Protection Block 7
 15466                           ;	EBTR7 = 0x1, unprogrammed default
 15467   30000A                     	org	3145738
 15468   30000A  FF                 	db	255
 15469                           
 15470                           ;Config register CONFIG6H @ 0x30000B
 15471                           ;	unspecified, using default values
 15472                           ;	Boot Block Table Read Protection bit
 15473                           ;	EBTRB = 0x1, unprogrammed default
 15474   30000B                     	org	3145739
 15475   30000B  FF                 	db	255
 15476                           tosu	equ	0xFFF
 15477                           tosh	equ	0xFFE
 15478                           tosl	equ	0xFFD
 15479                           stkptr	equ	0xFFC
 15480                           pclatu	equ	0xFFB
 15481                           pclath	equ	0xFFA
 15482                           pcl	equ	0xFF9
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           indf0	equ	0xFEF
 15490                           postinc0	equ	0xFEE
 15491                           postdec0	equ	0xFED
 15492                           preinc0	equ	0xFEC
 15493                           plusw0	equ	0xFEB
 15494                           fsr0h	equ	0xFEA
 15495                           fsr0l	equ	0xFE9
 15496                           wreg	equ	0xFE8
 15497                           indf1	equ	0xFE7
 15498                           postinc1	equ	0xFE6
 15499                           postdec1	equ	0xFE5
 15500                           preinc1	equ	0xFE4
 15501                           plusw1	equ	0xFE3
 15502                           fsr1h	equ	0xFE2
 15503                           fsr1l	equ	0xFE1
 15504                           bsr	equ	0xFE0
 15505                           indf2	equ	0xFDF
 15506                           postinc2	equ	0xFDE
 15507                           postdec2	equ	0xFDD
 15508                           preinc2	equ	0xFDC
 15509                           plusw2	equ	0xFDB
 15510                           fsr2h	equ	0xFDA
 15511                           fsr2l	equ	0xFD9
 15512                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    108     222
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2709$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2709$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411479
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23701
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 19:19:12 2023

               _color_read_Red 5B1E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5ACE                   ___fldiv@sign 0042                _color_read_Blue 5BBE  
                           l51 5B1C                             l60 5C0C                             l45 59D8  
                           l54 5B6C                             l63 56D6                             l48 6030  
                           l57 5BBC                             l66 37B4                             l76 189C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 43E0  
             _color_read_Green 5B6E                readColours@vals 000C              ??_Interrupts_init 0001  
                          l130 5FC2                            l204 5F98                            l133 5FC4  
                          l142 60A8                            l151 5E06                            l136 5FEA  
                          l145 60B2                            l219 609E                            l139 60BC  
                          l148 6092                            l510 5F4E                            l513 5F68  
                          l522 5730                            l186 606E                            l531 578A  
                          l507 524E                            l195 6072                            l516 5CA8  
                          l540 5EC2                            l356 237C                            l461 487E  
                          l525 583A                            l454 5374                            l198 6086  
                          l519 5CF6                            l543 5616                            l552 5934  
                          l528 57E2                            l632 3D72                            l537 5E84  
                          l561 4E6A                            l801 49E2                            l546 5A2A  
                          l626 3D72                            l570 4454                            l378 27B4  
                          l491 52EC                            l467 53F2                            l475 51B0  
                          l483 5112                            l555 5986                            l571 44AE  
                          l564 4F20                            l580 458A                            l572 451E  
                          l549 5A7C                            l661 6050                            l573 44E6  
                          l389 2800                            l558 554A                            l638 3D9A  
                          l671 5F32                            l568 43FE                            l665 5678  
                          l674 6010                            l578 453A                            l499 4FCA  
                          l579 4570                            l668 5F1C                            l933 5074  
                          l944 4BEC                            l939 4BA6                            l971 4AE8  
                          l788 4712                            l948 5EFA                            _abs 5E08  
                          _pad 53F4                            _rel 014C                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1202 29F2                           l1211 2CC2  
                         l1203 29E0                           ?_abs 0013                           l1204 29A6  
                         l1305 30AE                           l1219 2B0C                           l1228 2BDC  
                         l1244 5D3C                           l1332 43DE                           l1172 54E0  
                         l1261 32AA                           l1229 2BCA                           l1165 54D8  
                         l1421 1C30                           l1270 3392                           l1343 4376  
                         l1503 5E3E                           l1407 4018                           l1423 1A76  
                         l1256 3486                           l1336 431A                           l1512 422A  
                         l1352 58E2                           l4001 2C40                           l1329 4282  
                         l1258 32E6                           l1506 5E46                           l1418 2296  
                         l1267 332C                           l4011 2C86                           l4003 2C42  
                         l1515 416E                           l1523 55A0                           l1451 2078  
                         l1292 30EC                           l1532 5ACC                           l1269 33A4  
                         l4021 2CB0                           l4013 2C94                           l4005 2C52  
                         l4101 4688                           l1526 55B0                           l1295 2F7E  
                         l4023 2CB2                           l4015 2C9A                           l4007 2C62  
                         l4031 5488                           l4111 46D2                           l4103 46A8  
                         l1288 2D88                           l1544 4DB4                           l1552 5DC4  
                         l1384 5416                           l1297 2FF6                           l4017 2C9C  
                         l4009 2C82                           l4041 54C2                           l4033 5490  
                         l5001 5C90                           l4113 46F2                           l4105 46AA  
                         l4121 4892                           l1393 3E28                           l1561 5D80  
                         l1298 2FE4                           l1466 3ABA                           l4211 3224  
                         l4203 3200                           l4019 2CA2                           l4043 54CA  
                         l4035 5498                           l4027 546E                           l5011 56D8  
                         l5003 5CAA                           l4107 46BC                           l4131 4902  
                         l4123 48B2                           l1555 60C4                           l4051 5D8E  
                         l1395 3E30                           l1388 546C                           l1396 3E76  
                         l4221 3276                           l4213 323E                           l4205 3210  
                         l4301 2D00                           l4045 54CC                           l4037 54A6  
                         l4029 5476                           l4061 4784                           l5013 56EC  
                         l5005 5CBE                           l5021 57B6                           l4109 46C2  
                         l4141 497A                           l4133 490A                           l4125 48B6  
                         l4117 4880                           l4053 5DA0                           l4231 32D2  
                         l4223 3286                           l4215 324E                           l4207 3210  
                         l4311 2D32                           l4303 2D10                           l4047 54D2  
                         l4039 54AC                           l4071 483E                           l4063 4798  
                         l5015 5704                           l5007 5CCA                           l5111 5FAC  
                         l4143 498C                           l4135 491E                           l4127 48C4  
                         l4119 4884                           l4055 5DA4                           l5031 37FE  
                         l5023 37B6                           l1488 5890                           l4241 3312  
                         l4233 32D4                           l4225 329A                           l4217 325E  
                         l4161 311A                           l4153 30EE                           l4401 3068  
                         l4321 2D72                           l4313 2D40                           l4305 2D16  
                         l5201 4302                           l4065 479C                           l4057 4714  
                         l5009 5CDE                           l5113 5FAE                           l5105 5F9A  
                         l5017 578C                           l5121 5B14                           l4081 45C2  
                         l4073 458C                           l4137 492C                           l4145 4992  
                         l4129 48E4                           l4049 5D82                           l5033 380E  
                         l5025 37DE                           l1498 4CEA                           l4251 334E  
                         l4243 331C                           l4235 32E4                           l4227 32A8  
                         l4219 326E                           l4171 3154                           l4163 312A  
                         l4155 30FA                           l4411 30D0                           l4403 307C  
                         l4331 2DBC                           l4323 2D78                           l4315 2D42  
                         l4307 2D26                           l5211 4366                           l5203 4304  
                         l4067 47DE                           l4059 4730                           l5115 5FB0  
                         l5107 5FA4                           l5019 57A0                           l5131 5B6E  
                         l4091 461E                           l4083 45D0                           l4075 4590  
                         l4147 49A2                           l4139 495A                           l5051 390A  
                         l5043 38D4                           l5035 382E                           l5027 37EC  
                         l4261 33C0                           l4253 335C                           l4245 332A  
                         l4237 32F6                           l4229 32B4                           l4181 3180  
                         l4173 315A                           l4165 313A                           l4157 3108  
                         l4413 30D2                           l4405 3096                           l4341 2E0C  
                         l4333 2DC8                           l4325 2D98                           l4317 2D52  
                         l4309 2D2C                           l4421 5CF8                           l5221 43BE  
                         l5213 4384                           l5205 4310                           l4069 47FA  
                         l5109 5FAA                           l5117 6014                           l5133 5BB4  
                         l5125 5B1E                           l4093 4626                           l4085 45F0  
                         l4077 459E                           l4149 49C2                           l5061 399C  
                         l5045 38E4                           l5037 384E                           l5029 37FA  
                         l4271 342C                           l4263 33CE                           l4255 338A  
                         l4239 330C                           l4247 333C                           l4191 31BA  
                         l4183 3190                           l4175 3160                           l4167 313C  
                         l4159 310A                           l4431 500A                           l4407 30B2  
                         l4415 30D8                           l4351 2E4E                           l4343 2E18  
                         l4335 2DD2                           l4327 2DA8                           l4319 2D62  
                         l4423 5D08                           l5223 43CC                           l5215 4386  
                         l5207 434C                           l5311 0FF6                           l5303 0F16  
                         l5151 55B2                           l5127 5B64                           l5119 5ACE  
                         l5143 6072                           l4095 463A                           l4087 45F4  
                         l4079 45BE                           l4511 4AC8                           l5047 38FA  
                         l5055 3912                           l5039 38A4                           l5231 5848  
                         l4281 347A                           l4273 3446                           l4265 33F8  
                         l4249 334A                           l4193 31D0                           l4185 31A0  
                         l4177 316E                           l4169 3144                           l4433 5038  
                         l4417 30DC                           l4409 30C2                           l4361 2EB0  
                         l4353 2E5A                           l4345 2E24                           l4337 2DE8  
                         l5225 43CE                           l5217 438A                           l5209 4358  
                         l5401 1650                           l5313 1028                           l5305 0F68  
                         l5241 598C                           l5153 5E86                           l5161 4F5E  
                         l5137 5BBE                           l5145 6082                           l4097 4648  
                         l4089 4600                           l4521 540E                           l4513 4AD8  
                         l4505 4A9C                           l4601 5AAE                           l5065 39D0  
                         l6041 3926                           l5049 3902                           l5057 3944  
                         l5081 3A8E                           l5233 5866                           l4283 347C  
                         l4275 3462                           l4259 33B4                           l4267 33FC  
                         l4195 31E0                           l4187 31A2                           l4179 3170  
                         l4435 5048                           l4427 4FCC                           l4451 4B66  
                         l4443 4AEA                           l4371 2F46                           l4363 2EBC  
                         l4355 2E6A                           l4347 2E32                           l4339 2DF4  
                         l4291 2CC4                           l5219 43AE                           l5403 1682  
                         l5331 11A8                           l5323 10AC                           l5315 102E  
                         l5307 0F9A                           l4611 5274                           l5251 59C4  
                         l5243 5996                           l5155 5936                           l5147 5E48  
                         l5171 4FBE                           l5163 4F6A                           l5139 5C04  
                         l4099 465A                           l4531 5E08                           l3811 4D1A  
                         l4523 5422                           l4507 4AA8                           l4603 5AB2  
                         l5075 3A4C                           l6043 39E4                           l5067 39FA  
                         l5059 3968                           l5235 5886                           l4277 3466  
                         l4269 3416                           l4197 31E8                           l4189 31AA  
                         l4437 506C                           l4429 4FFA                           l4461 4BEA  
                         l4453 4B74                           l4445 4B18                           l4381 2F9C  
                         l4373 2F64                           l4365 2ED8                           l4357 2E84  
                         l4349 2E3E                           l4293 2CD0                           l3901 2940  
                         l5405 16B4                           l5333 11BA                           l5341 1366  
                         l5325 10C0                           l5317 104A                           l5309 0FA2  
                         l3821 6008                           l4621 52D4                           l4613 528C  
                         l5173 57E4                           l4605 5FC4                           l5261 59CE  
                         l5253 59C6                           l5245 59A6                           l5149 58E4  
                         l5181 4E6C                           l5165 4F76                           l5157 4F22  
                         l5501 5368                           l4533 5E22                           l3813 4D38  
                         l3805 4CEC                           l4525 5436                           l4517 53F4  
                         l4701 3E4E                           l4509 4AB8                           l4541 4C74  
                         l6045 3A6E                           l5069 3A1A                           l5077 3A7C  
                         l5229 583C                           ?_pad 0011                           l4279 3474  
                         l4199 31EC                           l4439 5072                           l4455 4B86  
                         l4447 4B28                           l4391 3006                           l4383 2FA0  
                         l4375 2F6E                           l4367 2F02                           l4359 2E94  
                         l4295 2CDE                           l3911 299E                           l3903 2944  
                         l3831 2820                           l5191 42A8                           l5183 422E  
                         l5431 17F6                           l5407 16F2                           l5415 173C  
                         l5343 1398                           l5351 13D6                           l5335 1236  
                         l5327 1160                           l5319 10A0                           l4615 5298  
                         l4631 53AA                           l4623 5376                           l5175 57F8  
                         l5511 604E                           l4607 5FD4                           l5263 59D0  
                         l5255 59C8                           l5247 59B0                           l5239 5988  
                         l5159 4F46                           l5167 4F8E                           l5503 5372  
                         l5271 567A                           l3815 4D6E                           l3807 4CFE  
                         l4527 543A                           l4519 5402                           l4711 3E88  
                         l4703 3E5E                           l4543 4C80                           l4535 4BEE  
                         l4457 4B94                           l4449 4B56                           l4393 3012  
                         l4385 2FAE                           l4377 2F7C                           l4369 2F38  
                         l4297 2CE0                           l3921 29D4                           l3913 29B4  
                         l3905 2948                           l3833 2830                           l3841 285A  
                         l3825 2804                           l5185 423E                           l5441 1866  
                         l5433 1828                           l5417 177A                           l5409 1730  
                         l5353 1408                           l5361 1446                           l5345 13CA  
                         l5337 1292                           l5329 1170                           l4617 52A4  
                         l4609 5250                           l4625 537A                           l4633 53C2  
                         l5177 580E                           l4641 5150                           l5505 6032  
                         l5265 59D2                           l5257 59CA                           l5249 59BA  
                         l5281 3650                           l5273 3488                           l5169 4FA6  
                         l5601 3AEC                           l3809 4D10                           l4529 5458  
                         l4713 3E8E                           l4721 3F80                           l4705 3E6A  
                         l4465 5EC4                           l4481 4A38                           l4473 49E4  
                         l4553 4CE2                           l4537 4C0E                           l4561 554C  
                         l5521 446E                           l5513 43E0                           l4459 4BE4  
                         l4395 3020                           l4387 2FDC                           l4379 2F8E  
                         l4299 2CF0                           l3931 2A24                           l3923 29DE  
                         l3915 29C0                           l3907 2972                           l3851 288A  
                         l3843 286A                           l3835 2840                           l3827 2810  
                         l5195 42BC                           l5187 424C                           l5419 17B8  
                         l5363 1478                           l5355 143A                           l5339 130E  
                         l5291 0E74                           l3819 5FEC                           l4619 52BC  
                         l4635 53DA                           l4627 5392                           l4643 515C  
                         l5507 603A                           l4651 5076                           l5267 59D4  
                         l5259 59CC                           l5283 36E8                           l5275 3554  
                         l5179 4DB6                           l5611 3BC4                           l5603 3B1A  
                         l4731 3FE8                           l4723 3F9A                           l4715 3F10  
                         l4707 3E72                           l4467 5EDA                           l4483 4A3A  
                         l4475 49FA                           l4539 4C4C                           l4547 4C8C  
                         l4571 40A4                           l4563 556A                           l4811 1B30  
                         l4803 1A86                           l5531 44A8                           l5523 447C  
                         l5515 43E2                           l4397 304A                           l3941 2A60  
                         l3933 2A34                           l3925 2A00                           l3917 29C4  
                         l3909 298E                           l3861 28CA                           l3853 2898  
                         l3845 2870                           l3837 2850                           l3829 281E  
                         l5197 42C4                           l5189 4292                           l5429 17C4  
                         l5381 15C8                           l5365 14AA                           l5293 0EA4  
                         l4629 539E                           l4645 5168                           l4637 5114  
                         l5509 6044                           l4653 509A                           l4661 50E2  
                         l5269 59D6                           l5285 371C                           l5277 3588  
                         l5621 3C9A                           l5613 3BEE                           l5605 3B42  
                         l5461 606A                           l5453 6052                           l4733 3FF8  
                         l4725 3FB8                           l4717 3F16                           l4709 3E7E  
                         l4469 5EEA                           l4485 4A4A                           l4549 4C9E  
                         l4573 40B2                           l4581 4192                           l4565 401A  
                         l4557 5D3E                           l4901 208A                           l4813 1B6E  
                         l4805 1A8C                           l4741 18B4                           l5541 44F4  
                         l5533 44BC                           l5525 448A                           l5517 4400  
                         l5701 22E2                           l4399 304E                           l3951 2AA6  
                         l3943 2A6E                           l3935 2A42                           l3927 2A10  
                         l3919 29D2                           l3871 2904                           l3863 28CC  
                         l3855 289A                           l3847 2882                           l3839 2852  
                         l5199 42D0                           l5439 1834                           l5367 14E4  
                         l5391 15E0                           l5295 0ED8                           l5287 0E3E  
                         l4671 51FA                           l4639 5138                           l4647 5180  
                         l4663 50FA                           l4655 50B2                           l5279 361C  
                         l5631 3D86                           l5623 3CC6                           l5615 3C1A  
                         l5607 3B6E                           l5463 606C                           l5455 605C  
                         l5471 5F80                           l4727 3FD2                           l4719 3F1C  
                         l4495 4A74                           l4487 4A4E                           l4479 4A0E  
                         l4583 41CE                           l4567 403A                           l4559 5D4E  
                         l4911 20BA                           l4903 2098                           l4831 1C5C  
                         l4815 1B82                           l4823 1BFE                           l4807 1AC0  
                         l4751 18FC                           l4743 18C2                           l5551 452C  
                         l5543 44FE                           l5535 44C6                           l5527 448E  
                         l5519 4456                           l5711 22F4                           l5703 22E4  
                         l3961 2B22                           l3953 2ADA                           l3945 2A70  
                         l3937 2A50                           l3881 2918                           l3873 2908  
                         l3857 28AA                           l3865 28D4                           l3849 2884  
                         l5393 1612                           l5369 1522                           l5377 1550  
                         l5297 0F0C                           l5289 0E68                           l5473 6094  
                         l4673 5206                           l4665 51B2                           l4681 5F38  
                         l4649 5198                           l5641 5536                           l4657 50BE  
                         l5561 5618                           l5633 3D90                           l5625 3CF0  
                         l5617 3C44                           l5609 3B98                           l5481 5304  
                         l5457 605E                           l5465 5F6A                           l4729 3FE2  
                         l4497 4A7E                           l4489 4A5C                           l4585 41E2  
                         l4577 4122                           l4569 4090                           l4593 5A7E  
                         l4921 20EC                           l4913 20CA                           l4905 20A8  
                         l4841 1CA0                           l4833 1C64                           l4825 1C38  
                         l4817 1BB6                           l4809 1AFE                           l4753 190C  
                         l4761 1934                           l4745 18C6                           l4737 189E  
                         l5553 453C                           l5545 4500                           l5537 44C8  
                         l5529 44A6                           l5801 258E                           l5721 2314  
                         l5713 22FC                           l5705 22E6                           l3971 2B5E  
                         l3963 2B32                           l3955 2ADC                           l3947 2A7A  
                         l3939 2A5C                           l3891 292C                           l3883 291C  
                         l3875 290C                           l3867 28E4                           l3859 28BA  
                         l5395 1644                           l5379 158A                           l5387 15D4  
                         l5571 5746                           l4667 51D6                           l4675 521E  
                         l4683 5F48                           l4659 50CA                           l5563 561E  
                         l5627 3D1C                           l5619 3C70                           l5491 534E  
                         l5483 5306                           l5475 52EE                           l5459 6068  
                         l5467 5F6E                           l4691 3DE0                           l4499 4A88  
                         l4587 420A                           l4579 415E                           l4595 5A92  
                         l4931 2194                           l4923 20FE                           l4915 20CE  
                         l4907 20AC                           l4851 1CE6                           l4843 1CB2  
                         l4835 1C68                           l4827 1C48                           l4819 1BBE  
                         l4771 197E                           l4763 195A                           l4755 191C  
                         l4747 18EA                           l4739 18A4                           l5547 4518  
                         l5539 44E0                           l5555 4554                           l5803 25A2  
                         l5731 2330                           l5723 2318                           l5715 2304  
                         l5707 22EC                           l5651 229C                           l3981 2B8A  
                         l3973 2B60                           l3957 2AEC                           l3949 2A80  
                         l3893 2930                           l3885 2920                           l3877 2910  
                         l3869 28F6                           l5573 575E                           l4677 5236  
                         l4669 51EE                           l5637 54E2                           l5565 5650  
                         l5629 3D46                           l5493 5350                           l5485 531C  
                         l5477 5300                           l5469 5F7C                           l4693 3E00  
                         l4685 3D9C                           l4589 421A                           l4597 5A9E  
                         l4941 21E2                           l4933 219C                           l4925 2102  
                         l4917 20D4                           l4909 20B2                           l4861 1DFA  
                         l4853 1D4A                           l4837 1C7A                           l4845 1CBA  
                         l4829 1C54                           l4781 19E6                           l4773 1996  
                         l4765 196C                           l4757 1928                           l4749 18F4  
                         l5581 58B4                           l5557 4562                           l5549 451E  
                         l5821 2604                           l5805 25B6                           l5813 25D4  
                         l5741 2360                           l5733 2338                           l5725 2320  
                         l5717 230C                           l5709 22F0                           l5661 22B8  
                         l5653 22A0                           l3991 2BC2                           l3975 2B6E  
                         l3967 2B46                           l3983 2B8C                           l3959 2AFC  
                         l3895 2934                           l3887 2924                           l3879 2914  
                         l4679 5F34                           l5639 551E                           l5567 565C  
                         l5591 3ABC                           l5495 535A                           l5487 5320  
                         l5479 5302                           l4695 3E1C                           l4687 3DBC  
                         l4599 5AA2                           l4951 2258                           l4943 21F2  
                         l4927 2108                           l4919 20DA                           l4935 21A0  
                         l4871 1EB8                           l4863 1E2E                           l4855 1DA2  
                         l4847 1CC2                           l4839 1C88                           l4783 19F8  
                         l4775 19A0                           l4767 1970                           l4759 1930  
                         l5583 58D0                           l5575 5892                           l5559 4572  
                         l5831 2646                           l5815 25E8                           l5807 25BA  
                         l5751 23B2                           l5743 2362                           l5735 2340  
                         l5727 2328                           l5719 2310                           l5671 22C4  
                         l5663 22BA                           l5655 22A4                           l3977 2B76  
                         l3969 2B50                           l3985 2B9A                           l3897 2938  
                         l3889 2928                           l5569 5732                           l4961 60B8  
                         l5593 3AD0                           l5497 535C                           l5489 5344  
                         l4697 3E38                           l4689 3DD0                           l4953 226E  
                         l4945 2222                           l4937 21BE                           l4929 2160  
                         l4881 1F8C                           l4873 1EC8                           l4865 1E60  
                         l4857 1DD6                           l4849 1CD2                           l4785 19FC  
                         l4769 1976                           l5577 58A4                           l5841 2688  
                         l5833 264A                           l5817 25FC                           l5825 261A  
                         l5809 25BE                           l5761 2408                           l5753 23C6  
                         l5745 238A                           l5737 2344                           l5729 2330  
                         l5681 22CE                           l5673 22C6                           l5665 22BC  
                         l5657 22A8                           l5649 2298                           l3995 2BEC  
                         l3987 2B9E                           l3979 2B7A                           l3899 293C  
                         l5587 59DA                           l4963 608A                           l5595 3AD2  
                         l5499 5366                           l4971 60A0                           l4699 3E48  
                         l4955 2276                           l4947 2230                           l4939 21DA  
                         l4891 1FC2                           l4883 1FA0                           l4875 1EFC  
                         l4867 1E76                           l4859 1DDC                           l4787 1A02  
                         l4779 19C0                           l5579 58AC                           l5851 26BA  
                         l5843 268C                           l5827 262E                           l5819 2600  
                         l5771 245E                           l5763 240C                           l5755 23D2  
                         l5747 23A4                           l5739 234C                           l5691 22D8  
                         l5683 22D0                           l5675 22C8                           l5667 22BE  
                         l5659 22B4                           l3997 2BF8                           l3989 2BAC  
                         l5589 5A2C                           l4965 608E                           l5597 3ADA  
                         l4981 5DDC                           l4973 60A4                           l4949 2248  
                         l4893 1FCA                           l4877 1F52                           l4885 1FA4  
                         l4869 1EA8                           l4789 1A0A                           l4797 1A26  
                         l5853 26CE                           l5861 26EC                           l5845 2690  
                         l5829 2642                           l5837 2660                           l5781 24B8  
                         l5773 2472                           l5765 2420                           l5757 23E6  
                         l5749 23AA                           l5693 22DA                           l5685 22D2  
                         l5677 22CA                           l5669 22C0                           l3999 2C06  
                         l4959 60B4                           l4967 60AA                           l4991 5F08  
                         l4983 5E02                           l4975 5DC8                           l4895 1FD6  
                         l4887 1FB4                           l4879 1F58                           l4799 1A40  
                         l5863 2700                           l5855 26D2                           l5839 2674  
                         l5791 2554                           l5775 248E                           l5767 2438  
                         l5783 24C0                           l5759 2404                           l5695 22DC  
                         l5687 22D4                           l5679 22CC                           l4969 60AE  
                         l4993 5F18                           l4985 5E04                           l4977 5DCC  
                         l4897 204E                           l4889 1FBC                           l5881 277E  
                         l5865 2714                           l5873 2732                           l5857 26D6  
                         l5849 26A6                           l5793 2568                           l5785 24DE  
                         l5777 24A8                           l5769 2452                           l5697 22DE  
                         l5689 22D6                           l4995 5C5C                           l4979 5DD4  
                         l4899 206E                           l5883 2792                           l5875 2746  
                         l5867 2718                           l5795 256C                           l5787 2534  
                         l5779 24B0                           l5891 27B8                           l5699 22E0  
                         l4997 5C70                           l4989 5EFC                           l5893 27CA  
                         l5885 2796                           l5877 274A                           l5869 271C  
                         l5797 2570                           l5789 2540                           l4999 5C7C  
                         l5895 27CE                           l5879 2766                           l5887 279E  
                         l5799 2582                           l5899 27EC                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E34  
                         STR_5 0E38                           u3000 2882                           u3001 287E  
                         u3010 2898                           u3011 2894                           u3100 29D2  
                         u3020 28AA                           u3101 29CE                           u3021 28A6  
                         u3110 29F2                           u3030 28BA                           u3111 29EE  
                         u3031 28B6                           u4000 4B18                           u3200 2B32  
                         u3120 2A00                           u3040 28F6                   _BAUD4CONbits 000EE9  
                         u4001 4B14                           u3201 2B2E                           u3121 29FC  
                         u3041 28F2                           u4010 4B56                           u3210 2B5E  
                         u3130 2A10                           u3050 2904                           u4011 4B52  
                         u3211 2B5A                           u3131 2A0C                           u3051 2900  
                         u4020 4B74                           u3300 2C40                           u3220 2B6E  
                         u3140 2A42                           u3060 2972                           u4100 4A98  
                         u4021 4B70                           u3301 2C3C                           u3221 2B6A  
                         u3141 2A3E                           u3061 296E                           u4101 4A94  
                         u4030 4B94                           u3310 2C52                           u3230 2B8A  
                         u3150 2A50                           u3070 298A                           u4110 4AB8  
                         u4031 4B90                           u3311 2C4E                           u3231 2B86  
                         u3151 2A4C                           u3071 2984                           u4111 4AB4  
                         u4040 4BE4                           u3320 2C62                           u3240 2B9A  
                         u3160 2A6E                           u3080 298C                           u3400 4730  
                         u5000 4FBE                           u4120 4AC8                           u4041 4BE0  
                         u3321 2C5E                           u3241 2B96                           u3161 2A6A  
                         u3401 472C                           u5001 4FBA                           u4121 4AC4  
                         u3330 2C82                           u3250 2BAC                           u3170 2AA6  
                         u3090 29B4                           u5010 423E                           u3410 47FA  
                         u4130 5402                           u4050 5EDA                           u4210 4CD8  
                         _T2PR 000FBC                           u3331 2C7E                           u3251 2BA8  
                         u3171 2AA2                           u3091 29B0                           u5011 423A  
                         u3411 47F6                           u4131 53FE                           u4051 5ED6  
                         u4211 4CD2                           u3340 2C94                           u3260 2BC2  
                         u3180 2AEC                           u5100 43CC                           u5020 424C  
                         u3420 459E                           u3500 48C4                           u4140 5458  
                         u4060 49FA                           u4220 4CDA                           u4300 4142  
                         u3341 2C90                           u3261 2BBE                           u3181 2AE8  
                         u5101 43C8                           u5021 4248                           u3421 459A  
                         u3501 48C0                           u4141 5454                           u4061 49F6  
                         u4205 4CB0                           u3350 2CB0                           u3270 2BD8  
                         u3190 2B22                           u5030 42A8                           u3430 45D0  
                         u3510 4902                           u4150 5E22                           u4070 4A2E  
                         u4310 415E                           u4230 5D80                           u5110 5886  
                         u3351 2CAC                           u3271 2BD4                           u3191 2B1E  
                         u5031 42A4                           u3431 45CC                           u3511 48FE  
                         u4151 5E1E                           u4311 415A                           u4231 5D7C  
                         u5111 5882                           u3600 3190                           u3280 2BEC  
                         u5040 42FE                           u5200 1398                           u3360 5488  
                         u4400 53DA                           u3520 492C                           u4080 4A5C  
                         u4160 4C2E                           u4320 41B2                           u4240 556A  
                         u3601 318C                           u3281 2BE8                           u5041 42FA  
                         u5201 1394                           u5121 0E6E                           u3361 5484  
                         u4401 53D6                           u3441 45FA                           u3521 4928  
                         u4081 4A58                           u4305 4138                           u4241 5566  
                         u3610 31D0                           u3290 2C06                           u5050 4348  
                         u5210 13CA                           u5130 0F68                           u3370 54A6  
                         u4410 53F2                           u3450 461E                           u3530 495A  
                         u4090 4A70                           u4170 4C4C                           u4330 41CE  
                         u4250 4062                           u3611 31CC                           u3291 2C02  
                         u5051 4344                           u5211 13C6                           u5131 0F64  
                         u3371 54A2                           u4411 53EE                           u3451 461A  
                         u3531 4956                           u4091 4A6C                           u4075 4A24  
                         u4171 4C48                           u4331 41CA                           u3700 335C  
                         u3620 3210                           u5060 4366                           u5300 15C8  
                         u5220 1408                           u5140 0FF6                           u3380 54C2  
                         u4420 5198                           u3460 4648                           u3540 49A2  
                         u4500 3DCE                           u4180 4C74                           u4340 420A  
                         u4260 4090                           u3701 3358                           u3621 320C  
                         u5061 4362                           u5301 15C4                           u5221 1404  
                         u5141 0FF2                           u3381 54BE                           u4421 5194  
                         u3461 4644                           u3541 499E                           u4181 4C70  
                         u4165 4C24                           u4341 4206                           u4325 41A8  
                         u4261 408C                           u3710 338A                           u3630 3286  
                         u3550 3108                           u5070 4376                           u5310 1612  
                         u5230 143A                           u5150 104A                           u4430 51B0  
                         u3470 4688                           u3390 5DC4                           u4510 3DE0  
                         u4190 4C9E                           u4270 40B2                           u4350 5ACC  
                         u3711 3386                           u3631 3282                           u3551 3104  
                         u5071 4372                           u5311 160E                           u5231 1436  
                         u5151 1046                           u4431 51AC                           u6007 50D4  
                         u3471 4684                           u3391 5DC0                           u4511 3DDC  
                         u4191 4C9A                           u4271 40AE                           u4255 4058  
                         u4351 5AC8                           u3720 33A0                           u3640 32A8  
                         u3560 311A                           u3800 2D00                           u5080 4384  
                         u5400 1828                           u5320 1644                           u5240 1478  
                         u5160 10A0                           u4440 50FA                           u4360 5FD4  
                         u3480 46D2                           u4520 3E1C                           u4600 190C  
                         u3721 339C                           u3641 32A4                           u3561 3116  
                         u3801 2CFC                           u5081 4380                           u5401 1824  
                         u5321 1640                           u5241 1474                           u5161 109C  
                         u6017 5528                           u4441 50F6                           u4361 5FD0  
                         u3481 46CE                           u4521 3E18                           u4601 1908  
                         u3730 33B4                           u3650 32D2                           u3570 312A  
                         u3810 2D40                           u5090 43BE                           u5410 1866  
                         u5330 1682                           u5250 14AA                           u5170 10C0  
                         u4450 5112                           u4370 5FEA                           u3490 4892  
                         u2930 4CFE                           u4530 3E48                           u4290 411E  
                         u4610 191C                           u3731 33B0                           u3651 32CE  
                         u3571 3126                           u3811 2D3C                           u5091 43BA  
                         u5411 1862                           u5331 167E                           u5251 14A6  
                         u5171 10BC                           u6107 5750                           u6027 5CE8  
                         u4451 510E                           u4371 5FE6                           u3491 488E  
                         u2931 4CFA                           u4531 3E44                           u4291 411A  
                         u4611 1918                           u3740 33CE                           u3660 32F6  
                         u3580 316E                           u3900 2FDC                           u3820 2D52  
                         u5420 1898                           u5340 16B4                           u5260 14E4  
                         u5180 1170                           u4380 52D4                           u4460 5236  
                         u2940 4D10                           u4540 3E5E                           u4700 1BFA  
                         u4620 195A                           u5500 4562                           u3741 33CA  
                         u3661 32F2                           u3581 316A                           u3901 2FD8  
                         u3821 2D4E                           u5421 1894                           u5341 16B0  
                         u5261 14E0                           u5181 116C                           u4381 52D0  
                         u6117 577C                           u4461 5232                           u6037 5172  
                         u2941 4D0C                           u4541 3E5A                           u4285 40C6  
                         u4701 1BF6                           u4621 1956                           u5501 455E  
                         u3750 3416                           u3670 330C                           u3590 3180  
                         u3910 2FF2                           u3830 2D62                           u5350 16F2  
                         u5270 1522                           u5190 11BA                           u4390 52EC  
                         u4470 524E                           u5430 5F98                           u2950 4D38  
                         u4550 3F9A                           u4286 40D0                           u4710 1C30  
                         u4630 196C                           u5510 4570                           u3751 3412  
                         u3671 3308                           u3591 317C                           u3911 2FEE  
                         u3831 2D5E                           u5351 16EE                           u5271 151E  
                         u5191 11B6                           u4391 52E8                           u6127 53B4  
                         u4471 524A                           u6047 5F3E                           u5431 5F94  
                         u2951 4D34                           u4551 3F96                           u4287 40E0  
                         u4711 1C2C                           u4631 1968                           u5511 456C  
                         u3760 3446                           u3680 332A                           u3920 3006  
                         u3840 2D98                           u5360 1730                           u5280 154C  
                         u4480 5F68                           u5520 5650                           u5600 3D46  
                         u2960 4D6E                           u4560 3FB8                           u4800 1F52  
                         u4720 1C48                           u4640 19E6                           u5440 447C  
                         u3761 3442                           u3681 3326                           u3921 3002  
                         u3841 2D94                           u5361 172C                           u5281 1548  
                         u6137 52AE                           u6057 5802                           u4481 5F64  
                         u5521 564C                           u5601 3D42                           u2961 4D6A  
                         u4561 3FB4                           u4801 1F4E                           u4721 1C44  
                         u4641 19E2                           u5441 4478                           u3770 3474  
                         u3690 334A                           u3930 3020                           u3850 2DA8  
                         u2970 281E                           u5370 177A                           u5290 158A  
                         u5530 3AE8                           u4570 3FD2                           u4490 3DCC  
                         u4810 1FA0                           u4730 1C7A                           u4650 19F8  
                         u5450 448A                           u3771 3470                           u3691 3346  
                         u3931 301C                           u3851 2DA4                           u2971 281A  
                         u5371 1776                           u5291 1586                           u6067 582C  
                         u5531 3AE4                           u4571 3FCE                           u4491 3DC6  
                         u4811 1F9C                           u4731 1C76                           u4651 19F4  
                         u5451 4486                           u3940 3068                           u3860 2F22  
                         u3780 2CDE                           u2980 2830                           u5380 17B8  
                         u5540 3B42                           u4580 3FE2                           u4900 2258  
                         u4820 204E                           u4740 1C88                           u4660 1A72  
                         u5460 44BC                           u5700 2674                           u5620 238A  
                         u3941 3064                           u3781 2CDA                           u2981 282C  
                         u5381 17B4                           u6077 56F6                           u5541 3B3E  
                         u4581 3FDE                           u4901 2254                           u4821 204A  
                         u4741 1C84                           u4661 1A6E                           u5461 44B8  
                         u5701 2670                           u5621 2386                           u3950 3096  
                         u3870 2F7C                           u3790 2CF0                           u2990 2840  
                         u5390 17F6                           u5550 3B98                           u4910 5DF0  
                         u4830 208A                           u4750 1CB2                           u4670 1AFE  
                         u4590 18C2                           u5470 44F4                           u5710 26BA  
                         u5630 2404                           u3951 3092                           u3871 2F78  
                         u3791 2CEC                           u2991 283C                           u5391 17F2  
                         u6087 5722                           u5551 3B94                           u4911 5DE8  
                         u4831 2086                           u4751 1CAE                           u4671 1AFA  
                         u4591 18BE                           u5471 44F0                           u5711 26B6  
                         u5631 2400                           u3960 30D0                           u3880 2F9C  
                         u5560 3BEE                           u4840 2098                           u4760 1DFA  
                         u4680 1B30                           u5480 452C                           u5720 2700  
                         u5640 24A8                           u3961 30CC                           u3881 2F98  
                         u3865 2F18                           u6097 5210                           u5561 3BEA  
                         u4841 2094                           u4761 1DF6                           u4681 1B2C  
                         u5481 4528                           u5721 26FC                           u5641 24A4  
                         u3970 4FFA                           u3890 2FAE                           u4930 5F32  
                         u5570 3C44                           u4850 20EC                           u4770 1E60  
                         u4690 1B6E                           u5490 453A                           u5730 2746  
                         u5650 24DE                           u3971 4FF6                           u3891 2FAA  
                         u4931 5F2E                           u5571 3C40                           u4851 20E8  
                         u4771 1E5C                           u4691 1B6A                           u5491 4536  
                         u5731 2742                           u5651 24DA                           u3980 5038  
                         u5580 3C9A                           u4860 21BE                           u4780 1EA8  
                         u4940 37DE                           u5740 2766                           u5660 2554  
                         u3981 5034                           u5581 3C96                           u4861 21BA  
                         u4781 1EA4                           u4941 37DA                           u5741 2762  
                         u5661 2550                           u3990 506C                           u5590 3CF0  
                         u4870 21DA                           u4790 1EB8                           u4950 382E  
                         u5750 27B0                           u5670 25A2                           u3991 5068  
                         u5591 3CEC                           u4871 21D6                           u4791 1EB4  
                         u4951 382A                           u5751 27AC                           u5671 259E  
                         u4928 5DF2                           u4880 2242                           u4960 384E  
                         u5760 27CA                           u5680 25E8                           u4881 223C  
                         u4961 384A                           u5761 27C6                           u5681 25E4  
                         u4890 2244                           u4970 3964                           u5770 2800  
                         u5690 262E                           u4971 3960                           u5907 44D2  
                         u5771 27FC                           u5691 262A                           u4980 6082  
                         u4981 607E                           u5917 450A                           u4990 4FA6  
                         u4991 4FA2                           u5927 4546                           u5847 236E  
                         u5937 457C                           u5857 2396                           u5947 4F80  
                         u5867 2444                           u5957 5F0E                           u5877 43EC  
                         u5967 57AA                           u5887 4460                           u5977 57D4  
                         u5897 4498                           u5987 599C                           u5997 5C9A  
                _LightBlueMove 5936                           abs@a 0013                           _dbuf 02A0  
                         _labs 554C                           _main 2298                           _dtoa 3D9C  
                         _prec 00E9                           _vals 016A                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 5376  
                ___fpclassifyf 4BEE                           prodh 000FF4                           prodl 000FF3  
                         start 0034                ___fldiv@new_exp 0043         __end_of_color_read_Red 5B6E  
              __end_of_HighISR 0034         __end_of_color_read_lum 5B1E                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5E86  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 5C5C                _RunOneBlockTime 00F0                  ___fltol@sign1 0009  
              __end_of___aodiv 4714                          ?_labs 0001                __end_of___fladd 2CC4  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 49E4  
              __end_of___fldiv 3488                __end_of___flneg 5EFC                __end_of___flmul 30EE  
              __end_of___flsub 5D3E                __end_of___fltol 4AEA                    colour_rel@B 0074  
                  colour_rel@G 0070                          ?_stop 0014                    colour_rel@L 0060  
                  colour_rel@R 006C                __end_of___lwdiv 54E2                          i2l225 0030  
                 vfpfcnvrt@fmt 0097                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 3D9C        __end_of_sendCharSerial4 6088     __end_of_I2C_2_Master_Start 60BE  
   __end_of_I2C_2_Master_Write 6094                   YellowMove@mL 0020                          _flags 00EB  
                 YellowMove@mR 0022                          _fputc 4CEC                          _fputs 5D82  
               delayed_ms@time 0001                          labs@a 0001                          pad@fp 0011  
                        _power 00F4                          _width 00E7                          _putch 60C4  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5                          plusw2 000FDB  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 58E4                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5C0E  
        _I2C_2_Master_RepStart 60A0               __end_of_BlueMove 5618                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5C0E        __end_of_turnCalibration 458C                _reverseOneBlock 57E4  
                 __end_of_labs 55B2                   __end_of_main 2804                   __end_of_dtoa 401A  
                 __end_of_stop 53F4                _colour_rel$3203 0064                _colour_rel$3204 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 4E6C               __end_of_PinkMove 5A7E                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                         i2l5643 000A                         i2l5645 001A  
                       i2l5647 002C                      ??_HighISR 0001       __end_of_color_click_init 59DA  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 58E4  
             __end_of___xxtofl 43E0                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4AEA                         ___fleq 4FCC                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 5FEC  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 189E                      ??___lwdiv 000B  
                       _floorf 401A                         _memcpy 5A7E                         clear_0 5C34  
                       clear_1 5C40                         clear_2 5C4C                         _motorL 0161  
                       _motorR 0158                         isa$std 000001                      ??_go_Home 0028  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 5D3E  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 5892                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 005F  
             __end_of_turnLeft 51B2                     ___flge@ff1 002A                     _YellowMove 59DA  
                   ___flge@ff2 002E                ??___fpclassifyf 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0032  
                   ___fleq@ff2 0036                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 5C52        __end_of_reverseOneBlock 583C  
                   ___flneg@f1 0001       __end_of_color_read_Green 5BBE         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 6094                 __pcstackCOMRAM 0001               ?_turnCalibration 0020  
                _fullSpeedBack 51B2                   __pidataBANK0 60BE                  __end_of_fputc 4DB6  
                __end_of_fputs 5DC6                  __end_of_putch 60C6              __end_of_GreenMove 5EC4  
          __end_of_Timer0_init 6052            __end_of_ReversePink 4F22                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14357 00D3  
        __end_of_reverseDetect 5732                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 5732  
                   _getTMR0val 5618              __end_of_RetryMove 554C                      ?_PinkMove 0020  
            _color_writetoaddr 6012                     _delayed_ms 5EFC                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 001A  
                      ?_memcpy 0001              __end_of_TurnDelay 5F6A          __end_of_timed_forward 4FCC  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 3488        __end_of_Interrupts_init 60A0         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 01D6                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 6032  
                      _RedMove 5E48             _I2C_2_Master_Start 60B4                     ??_PinkMove 0024  
                   _initUSART4 6052             _I2C_2_Master_Write 6088                        __Hparam 0000  
                      _WayBack 011A                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 6032                    RetryMove@mL 0020                    RetryMove@mR 0022  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4E6C                        ___aodiv 458C                        ___fladd 2804  
                      ___aomod 4880                        ___fldiv 30EE                        ___flneg 5EC4  
                      ___flmul 2CC4                        ___flsub 5CF8                        ___fltol 49E4  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 546E            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 5C0E                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3ABC                        __ptext0 2298  
                      __ptext1 43E0                        __ptext2 5892                        __ptext3 583C  
                      __ptext4 37B6                        __ptext5 189E                        __ptext6 5D3E  
                      __ptext7 5A7E                        __ptext8 554C                        __ptext9 401A  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                 main@lost_count 01DA  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00EF              color_read_lum@tmp 000A                        main@buf 0172  
                      _sprintf 5892           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5C52                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 0114                    ?_delayed_ms 0001  
            turnCalibration@mL 0020              turnCalibration@mR 0022              __end_of_vfpfcnvrt 3ABC  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F2                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 52EE                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 5114                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                    _CCP1CONbits 000FAB  
                   main@colour 01D8                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5CAA                 __end_of___flge 4BEE                 __end_of___fleq 5076  
               _fullSpeedAhead 5250                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 6012                 __end_of_efgtoa 2298  
               __end_of_floorf 422C                 __end_of_memcpy 5ACE                     floorf@F526 00DF  
     __end_of_Forwardhalfblock 578C                      _GreenMove 5E86                 __end_of_strcpy 5D82  
          start_initialization 5C0E                    __end_of_abs 5E48                    __end_of_pad 546E  
                _TxBufWriteCnt 00ED          __end_of_LightBlueMove 5988                   ??_OrangeMove 0024  
        __end_of___fpclassifyf 4CEC            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 5376  
                  vfprintf@fmt 00AA         __end_of_fullSpeedAhead 52EE                       ??___flge 0032  
                     ??___fleq 003A                      _RetryMove 54E2                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F0                _ForwardOneBlock 578C                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4DB6                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 5936                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5F34                  __pcstackBANK0 0060                  __pcstackBANK1 0172  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020                    _efgtoa$2852 006F  
             ___lwdiv@dividend 0007                      _dtoa$2821 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 0020                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3205 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 5A2C           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 56D8              _I2C_2_Master_Idle 5FC4  
            _I2C_2_Master_Init 5F9A              _I2C_2_Master_Read 5DC6              _I2C_2_Master_Stop 60AA  
                   ?_TurnDelay 0001                   _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00B0               getTMR0val@moving 0005                 colour_rel@vals 004B  
            _sendStringSerial4 5F6A            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                   ??_getTMR0val 0001  
                     _PIE0bits 000E29             ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 57E4  
                 ??_delayed_ms 0003                    turnRight@mL 0014                    turnRight@mR 0016  
                    _lost_flag 0118                       _PIR0bits 000E33                       _PIR4bits 000E37  
                     i2u561_40 001A                       i2u561_41 0016               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E3E  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 37B6  
    __end_of_I2C_2_Master_Idle 5FEC      __end_of_I2C_2_Master_Init 5FC4      __end_of_I2C_2_Master_Read 5E08  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 60B4                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
           __end_of_getTMR0val 567A                   _TxBufReadCnt 00EC                       _BlueMove 55B2  
                    _turnRight 5076             __end_of_delayed_ms 5F34                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 5C22      __end_of_sendStringSerial4 5F9A  
                 ??_colour_rel 004F                  _reverseDetect 56D8  __end_of_I2C_2_Master_RepStart 60AA  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 4880                   ??_initUSART4 0001  
                     _PinkMove 5A2C                       __Hrparam 0000         __end_of_Colour_decider 189E  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 5250                    ??_RetryMove 0024  
         TurnDelay@Turn45Delay 0001                    _readColours 567A                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 37B6                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3  
                   _ANSELFbits 000EB4                  _timed_forward 4F22                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 422C                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 6070                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4BEE  
                     __ptext11 49E4                       __ptext20 458C                       __ptext12 5EC4  
                     __ptext21 5F6A                       __ptext13 3D9C                       __ptext30 6052  
                     __ptext22 6070                       __ptext14 53F4                       __ptext31 52EE  
                     __ptext23 567A                       __ptext15 5D82                       __ptext40 5936  
                     __ptext32 3ABC                       __ptext24 5ACE                       __ptext16 4CEC  
                     __ptext41 5E86                       __ptext33 4F22                       __ptext25 5B1E  
                     __ptext17 60C4                       __ptext50 5FC4                       __ptext42 55B2  
                     __ptext34 5EFC                       __ptext26 5B6E                       __ptext18 5E08  
                     __ptext51 5F9A                       __ptext43 5618                       __ptext35 4DB6  
                     __ptext27 5BBE                       __ptext19 4880                       __ptext60 5F34  
                     __ptext52 59DA                       __ptext44 3488                       __ptext36 4E6C  
                     __ptext28 60A0                       __ptext61 57E4                       __ptext53 5C5C  
                     __ptext45 5988                       __ptext37 578C                       __ptext29 5DC6  
                     __ptext70 546E                       __ptext62 56D8                       __ptext54 5076  
                     __ptext46 6012                       __ptext38 5E48                       __ptext71 0E3E  
                     __ptext63 51B2                       __ptext55 6032                       __ptext47 6088  
                     __ptext39 58E4                       __ptext72 422C                       __ptext64 6094  
                     __ptext56 54E2                       __ptext48 60AA                       __ptext73 5CF8  
                     __ptext65 5732                       __ptext57 5A2C                       __ptext49 60B4  
                     __ptext74 2804                       __ptext66 5376                       __ptext58 5CAA  
                     __ptext75 2CC4                       __ptext67 5250                       __ptext59 5114  
                     __ptext76 4AEA                       __ptext68 4714                       __ptext77 4FCC  
                     __ptext69 5FEC                       __ptext78 30EE                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 583C                       _run_flag 0116                  ??_turnRight45 001E  
                     _turnLeft 5114               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
              main@prev_colour 01DC                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 4714                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                 getTMR0val@temp 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5988                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5CAA  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5CF8                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 6070                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
