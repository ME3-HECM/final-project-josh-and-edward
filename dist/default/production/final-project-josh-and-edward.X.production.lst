

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 23:50:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94   000000                     
    95                           ; Generated 06/04/2022 GMT
    96                           ; 
    97                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129   000000                     
   130                           	psect	idataBANK0
   131   004E76                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _Turn45Delay
   135   004E76  00DC               	dw	220
   136                           
   137                           ;initializer for _DataFlag
   138   004E78  01                 	db	1
   139                           
   140                           	psect	idataBANK1
   141   004E70                     __pidataBANK1:
   142                           	callstack 0
   143                           
   144                           ;initializer for _high_threshold
   145   004E70  03E8               	dw	1000
   146                           
   147                           ;initializer for _RunOneBlockTime
   148   004E72  07D0               	dw	2000
   149                           
   150                           ;initializer for _power
   151   004E74  001E               	dw	30
   152   000000                     _TRISEbits	set	3973
   153   000000                     _LATHbits	set	3968
   154   000000                     _TX4REG	set	3812
   155   000000                     _RC4STAbits	set	3815
   156   000000                     _SP4BRGH	set	3814
   157   000000                     _SSP2CON2bits	set	3802
   158   000000                     _RX4PPS	set	3605
   159   000000                     _SSP2CLKPPS	set	3612
   160   000000                     _SSP2DATPPS	set	3613
   161   000000                     _ANSELDbits	set	3751
   162   000000                     _SSP2ADD	set	3798
   163   000000                     _SSP2CON1bits	set	3801
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATFbits	set	3966
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISAbits	set	3969
   168   000000                     _TRISGbits	set	3975
   169   000000                     _PORTFbits	set	3982
   170   000000                     _TRISHbits	set	3976
   171   000000                     _CCPR2H	set	4006
   172   000000                     _CCPR1H	set	4010
   173   000000                     _TRISCbits	set	3971
   174   000000                     _TRISDbits	set	3972
   175   000000                     _TRISFbits	set	3974
   176   000000                     _LATDbits	set	3964
   177   000000                     _RC4REG	set	3811
   178   000000                     _SP4BRGL	set	3813
   179   000000                     _TX4STAbits	set	3816
   180   000000                     _BAUD4CONbits	set	3817
   181   000000                     _SSP2CON2	set	3802
   182   000000                     _SSP2STAT	set	3800
   183   000000                     _ANSELFbits	set	3764
   184   000000                     _SSP2BUF	set	3797
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR4bits	set	3639
   187   000000                     _RC0PPS	set	3682
   188   000000                     _RD5PPS	set	3695
   189   000000                     _RE2PPS	set	3700
   190   000000                     _RD6PPS	set	3696
   191   000000                     _RC7PPS	set	3689
   192   000000                     _CCPR4H	set	3873
   193   000000                     _CCPR3H	set	3877
   194   000000                     _CCP1CONbits	set	4011
   195   000000                     _CCPTMRS0bits	set	4013
   196   000000                     _T2PR	set	4028
   197   000000                     _T2CONbits	set	4029
   198   000000                     _TMR0L	set	4051
   199   000000                     _TMR0H	set	4052
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _T0CON1bits	set	4054
   204   000000                     _T0CON0bits	set	4053
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _T2CLKCONbits	set	4031
   208   000000                     _T2HLTbits	set	4030
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  64                 	db	100	;'d'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  64                 	db	100	;'d'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  64                 	db	100	;'d'
   238   000E18  20                 	db	32
   239   000E19  74                 	db	116	;'t'
   240   000E1A  69                 	db	105	;'i'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  65                 	db	101	;'e'
   243   000E1D  72                 	db	114	;'r'
   244   000E1E  3D                 	db	61	;'='
   245   000E1F  25                 	db	37
   246   000E20  64                 	db	100	;'d'
   247   000E21  20                 	db	32
   248   000E22  0D                 	db	13
   249   000E23  0A                 	db	10
   250   000E24  00                 	db	0
   251   000E25  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   0042E4                     __pcinit:
   257                           	callstack 0
   258   0042E4                     start_initialization:
   259                           	callstack 0
   260   0042E4                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK1 (6 bytes)
   264                           ; load TBLPTR registers with __pidataBANK1
   265   0042E4  0E70               	movlw	low __pidataBANK1
   266   0042E6  6EF6               	movwf	tblptrl,c
   267   0042E8  0E4E               	movlw	high __pidataBANK1
   268   0042EA  6EF7               	movwf	tblptrh,c
   269   0042EC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   270   0042EE  6EF8               	movwf	tblptru,c
   271   0042F0  EE01  F0D1         	lfsr	0,__pdataBANK1
   272   0042F4  EE10 F006          	lfsr	1,6
   273   0042F8                     copy_data0:
   274   0042F8  0009               	tblrd		*+
   275   0042FA  CFF5 FFEE          	movff	tablat,postinc0
   276   0042FE  50E5               	movf	postdec1,w,c
   277   004300  50E1               	movf	fsr1l,w,c
   278   004302  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to BANK0 (3 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   004304  0E76               	movlw	low __pidataBANK0
   283   004306  6EF6               	movwf	tblptrl,c
   284   004308  0E4E               	movlw	high __pidataBANK0
   285   00430A  6EF7               	movwf	tblptrh,c
   286   00430C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   00430E  6EF8               	movwf	tblptru,c
   288   004310  0009               	tblrd		*+	;fetch initializer
   289   004312  CFF5 F0FC          	movff	tablat,__pdataBANK0
   290   004316  0009               	tblrd		*+	;fetch initializer
   291   004318  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   292   00431C  0009               	tblrd		*+	;fetch initializer
   293   00431E  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   294                           
   295                           ; Clear objects allocated to BANK2 (100 bytes)
   296   004322  EE02  F000         	lfsr	0,__pbssBANK2
   297   004326  0E64               	movlw	100
   298   004328                     clear_0:
   299   004328  6AEE               	clrf	postinc0,c
   300   00432A  06E8               	decf	wreg,f,c
   301   00432C  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK1 (209 bytes)
   304   00432E  EE01  F000         	lfsr	0,__pbssBANK1
   305   004332  0ED1               	movlw	209
   306   004334                     clear_1:
   307   004334  6AEE               	clrf	postinc0,c
   308   004336  06E8               	decf	wreg,f,c
   309   004338  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to BANK0 (12 bytes)
   312   00433A  EE00  F0F0         	lfsr	0,__pbssBANK0
   313   00433E  0E0C               	movlw	12
   314   004340                     clear_2:
   315   004340  6AEE               	clrf	postinc0,c
   316   004342  06E8               	decf	wreg,f,c
   317   004344  E1FD               	bnz	clear_2
   318                           
   319                           ; Clear objects allocated to COMRAM (4 bytes)
   320   004346  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   321   004348  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   322   00434A  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   323   00434C  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   324   00434E                     end_of_initialization:
   325                           	callstack 0
   326   00434E                     __end_of__initialization:
   327                           	callstack 0
   328   00434E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329   004350  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330   004352  0E00               	movlw	low (__Lsmallconst shr (0+16))
   331   004354  6EF8               	movwf	tblptru,c
   332   004356  0E0E               	movlw	high __Lsmallconst
   333   004358  6EF7               	movwf	tblptrh,c
   334   00435A  0100               	movlb	0
   335   00435C  EF81  F00C         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00005B                     __pbssCOMRAM:
   339                           	callstack 0
   340   00005B                     _TxBufReadCnt:
   341                           	callstack 0
   342   00005B                     	ds	1
   343   00005C                     _TxBufWriteCnt:
   344                           	callstack 0
   345   00005C                     	ds	1
   346   00005D                     _RxBufReadCnt:
   347                           	callstack 0
   348   00005D                     	ds	1
   349   00005E                     _RxBufWriteCnt:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000F0                     __pbssBANK0:
   355                           	callstack 0
   356   0000F0                     _move_count:
   357                           	callstack 0
   358   0000F0                     	ds	2
   359   0000F2                     _flags:
   360                           	callstack 0
   361   0000F2                     	ds	1
   362   0000F3                     _motorL:
   363                           	callstack 0
   364   0000F3                     	ds	9
   365                           
   366                           	psect	dataBANK0
   367   0000FC                     __pdataBANK0:
   368                           	callstack 0
   369   0000FC                     _Turn45Delay:
   370                           	callstack 0
   371   0000FC                     	ds	2
   372   0000FE                     _DataFlag:
   373                           	callstack 0
   374   0000FE                     	ds	1
   375                           
   376                           	psect	bssBANK1
   377   000100                     __pbssBANK1:
   378                           	callstack 0
   379   000100                     _EUSART4TXbuf:
   380                           	callstack 0
   381   000100                     	ds	60
   382   00013C                     _EUSART4RXbuf:
   383                           	callstack 0
   384   00013C                     	ds	20
   385   000150                     	ds	12
   386   00015C                     _width:
   387                           	callstack 0
   388   00015C                     	ds	2
   389   00015E                     _prec:
   390                           	callstack 0
   391   00015E                     	ds	2
   392   000160                     _low_threshold:
   393                           	callstack 0
   394   000160                     	ds	2
   395   000162                     _WayBack:
   396                           	callstack 0
   397   000162                     	ds	50
   398   000194                     _dbuf:
   399                           	callstack 0
   400   000194                     	ds	32
   401   0001B4                     _rel:
   402                           	callstack 0
   403   0001B4                     	ds	12
   404   0001C0                     _motorR:
   405                           	callstack 0
   406   0001C0                     	ds	9
   407   0001C9                     _vals:
   408                           	callstack 0
   409   0001C9                     	ds	8
   410                           
   411                           	psect	dataBANK1
   412   0001D1                     __pdataBANK1:
   413                           	callstack 0
   414   0001D1                     _high_threshold:
   415                           	callstack 0
   416   0001D1                     	ds	2
   417   0001D3                     _RunOneBlockTime:
   418                           	callstack 0
   419   0001D3                     	ds	2
   420   0001D5                     _power:
   421                           	callstack 0
   422   0001D5                     	ds	2
   423                           
   424                           	psect	bssBANK2
   425   000200                     __pbssBANK2:
   426                           	callstack 0
   427   000200                     _Time_forward:
   428                           	callstack 0
   429   000200                     	ds	100
   430                           
   431                           	psect	cstackBANK0
   432   000060                     __pcstackBANK0:
   433                           	callstack 0
   434   000060                     ?_sprintf:
   435                           	callstack 0
   436   000060                     sprintf@s:
   437                           	callstack 0
   438   000060                     _Colour_decider$3027:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x0
   442   000060                     	ds	2
   443   000062                     sprintf@fmt:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447   000062                     	ds	2
   448   000064                     Colour_decider@Cmax_i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4
   452   000064                     	ds	2
   453   000066                     Colour_decider@RGB_col:
   454                           	callstack 0
   455                           
   456                           ; 12 bytes @ 0x6
   457   000066                     	ds	6
   458   00006C                     sprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xC
   462   00006C                     	ds	2
   463   00006E                     sprintf@f:
   464                           	callstack 0
   465                           
   466                           ; 11 bytes @ 0xE
   467   00006E                     	ds	4
   468   000072                     Colour_decider@Cmax:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x12
   472   000072                     	ds	4
   473   000076                     Colour_decider@Cmin:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x16
   477   000076                     	ds	4
   478   00007A                     Colour_decider@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1A
   482   00007A                     	ds	2
   483   00007C                     Colour_decider@Hue:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x1C
   487   00007C                     	ds	4
   488   000080                     main@buf:
   489                           	callstack 0
   490                           
   491                           ; 100 bytes @ 0x20
   492   000080                     	ds	100
   493   0000E4                     main@temp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x84
   497   0000E4                     	ds	2
   498   0000E6                     main@temp_1304:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x86
   502   0000E6                     	ds	2
   503   0000E8                     main@run_flag:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x88
   507   0000E8                     	ds	2
   508   0000EA                     main@consecuitive:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x8A
   512   0000EA                     	ds	2
   513   0000EC                     main@colour:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x8C
   517   0000EC                     	ds	2
   518   0000EE                     main@prev_colour:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x8E
   522   0000EE                     	ds	2
   523                           
   524                           	psect	cstackCOMRAM
   525   000001                     __pcstackCOMRAM:
   526                           	callstack 0
   527   000001                     ??_I2C_2_Master_Idle:
   528   000001                     ?___wmul:
   529                           	callstack 0
   530   000001                     ?___fladd:
   531                           	callstack 0
   532   000001                     ?___xxtofl:
   533                           	callstack 0
   534   000001                     ?___aodiv:
   535                           	callstack 0
   536   000001                     ?___aomod:
   537                           	callstack 0
   538   000001                     sendCharSerial4@charToSend:
   539                           	callstack 0
   540   000001                     initDCmotorsPWM@PWMperiod:
   541                           	callstack 0
   542   000001                     TurnDelay@Turn45Delay:
   543                           	callstack 0
   544   000001                     getTMR0val@moving:
   545                           	callstack 0
   546   000001                     delayed_ms@time:
   547                           	callstack 0
   548   000001                     ___wmul@multiplier:
   549                           	callstack 0
   550   000001                     fputc@c:
   551                           	callstack 0
   552   000001                     ___flge@ff1:
   553                           	callstack 0
   554   000001                     ___fladd@b:
   555                           	callstack 0
   556   000001                     ___xxtofl@val:
   557                           	callstack 0
   558   000001                     ___aodiv@dividend:
   559                           	callstack 0
   560   000001                     ___aomod@dividend:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x0
   564   000001                     	ds	1
   565   000002                     ??_I2C_2_Master_Read:
   566   000002                     I2C_2_Master_Write@data_byte:
   567                           	callstack 0
   568   000002                     sendStringSerial4@string:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1
   572   000002                     	ds	1
   573   000003                     ??_delayed_ms:
   574   000003                     ??_TurnDelay:
   575   000003                     color_writetoaddr@value:
   576                           	callstack 0
   577   000003                     I2C_2_Master_Read@ack:
   578                           	callstack 0
   579   000003                     ___wmul@multiplicand:
   580                           	callstack 0
   581   000003                     fputc@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585   000003                     	ds	1
   586   000004                     color_writetoaddr@address:
   587                           	callstack 0
   588   000004                     I2C_2_Master_Read@tmp:
   589                           	callstack 0
   590   000004                     delayed_ms@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x3
   594   000004                     	ds	1
   595   000005                     ??_fputc:
   596   000005                     ??_color_click_init:
   597   000005                     ??___xxtofl:
   598   000005                     ?_color_read_lum:
   599                           	callstack 0
   600   000005                     ?_color_read_Red:
   601                           	callstack 0
   602   000005                     ?_color_read_Green:
   603                           	callstack 0
   604   000005                     ?_color_read_Blue:
   605                           	callstack 0
   606   000005                     ___wmul@product:
   607                           	callstack 0
   608   000005                     ___flge@ff2:
   609                           	callstack 0
   610   000005                     ___fladd@a:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614   000005                     	ds	2
   615   000007                     ??_color_read_lum:
   616   000007                     ??_color_read_Red:
   617   000007                     ??_color_read_Green:
   618   000007                     ??_color_read_Blue:
   619   000007                     ?___lwdiv:
   620                           	callstack 0
   621   000007                     ___lwdiv@dividend:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x6
   625   000007                     	ds	2
   626   000009                     ??___fladd:
   627   000009                     ??___flge:
   628   000009                     ___xxtofl@sign:
   629                           	callstack 0
   630   000009                     ___lwdiv@divisor:
   631                           	callstack 0
   632   000009                     ___aodiv@divisor:
   633                           	callstack 0
   634   000009                     ___aomod@divisor:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x8
   638   000009                     	ds	1
   639   00000A                     ___xxtofl@exp:
   640                           	callstack 0
   641   00000A                     color_read_lum@tmp:
   642                           	callstack 0
   643   00000A                     color_read_Red@tmp:
   644                           	callstack 0
   645   00000A                     color_read_Green@tmp:
   646                           	callstack 0
   647   00000A                     color_read_Blue@tmp:
   648                           	callstack 0
   649   00000A                     fputs@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x9
   653   00000A                     	ds	1
   654   00000B                     ___lwdiv@quotient:
   655                           	callstack 0
   656   00000B                     ___xxtofl@arg:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0xA
   660   00000B                     	ds	1
   661   00000C                     readColours@vals:
   662                           	callstack 0
   663   00000C                     fputs@fp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0xB
   667   00000C                     	ds	1
   668   00000D                     ___lwdiv@counter:
   669                           	callstack 0
   670   00000D                     ___fladd@signs:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0xC
   674   00000D                     	ds	1
   675   00000E                     ___fladd@aexp:
   676                           	callstack 0
   677   00000E                     fputs@c:
   678                           	callstack 0
   679   00000E                     setMotorPWM@m:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683   00000E                     	ds	1
   684   00000F                     ___fladd@bexp:
   685                           	callstack 0
   686   00000F                     fputs@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690   00000F                     	ds	1
   691   000010                     ??_setMotorPWM:
   692   000010                     ___fladd@grs:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0xF
   696   000010                     	ds	1
   697   000011                     ?___flsub:
   698                           	callstack 0
   699   000011                     ___aodiv@counter:
   700                           	callstack 0
   701   000011                     ___aomod@counter:
   702                           	callstack 0
   703   000011                     pad@fp:
   704                           	callstack 0
   705   000011                     ___flsub@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x10
   709   000011                     	ds	1
   710   000012                     setMotorPWM@posDuty:
   711                           	callstack 0
   712   000012                     ___aodiv@sign:
   713                           	callstack 0
   714   000012                     ___aomod@sign:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x11
   718   000012                     	ds	1
   719   000013                     ?_abs:
   720                           	callstack 0
   721   000013                     setMotorPWM@negDuty:
   722                           	callstack 0
   723   000013                     pad@buf:
   724                           	callstack 0
   725   000013                     abs@a:
   726                           	callstack 0
   727   000013                     ___aodiv@quotient:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x12
   731   000013                     	ds	1
   732   000014                     stop@mL:
   733                           	callstack 0
   734   000014                     turnLeft@mL:
   735                           	callstack 0
   736   000014                     turnRight@mL:
   737                           	callstack 0
   738   000014                     fullSpeedAhead@mL:
   739                           	callstack 0
   740   000014                     timed_forward@mL:
   741                           	callstack 0
   742   000014                     fullSpeedBack@mL:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x13
   746   000014                     	ds	1
   747   000015                     ??_abs:
   748   000015                     pad@p:
   749                           	callstack 0
   750   000015                     ___flsub@a:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x14
   754   000015                     	ds	1
   755   000016                     stop@mR:
   756                           	callstack 0
   757   000016                     turnLeft@mR:
   758                           	callstack 0
   759   000016                     turnRight@mR:
   760                           	callstack 0
   761   000016                     fullSpeedAhead@mR:
   762                           	callstack 0
   763   000016                     timed_forward@mR:
   764                           	callstack 0
   765   000016                     fullSpeedBack@mR:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x15
   769   000016                     	ds	1
   770   000017                     ??_pad:
   771                           
   772                           ; 1 bytes @ 0x16
   773   000017                     	ds	1
   774   000018                     ??_fullSpeedAhead:
   775   000018                     ??_stop:
   776   000018                     ??_turnLeft:
   777   000018                     ??_turnRight:
   778   000018                     ??_fullSpeedBack:
   779   000018                     timed_forward@time:
   780                           	callstack 0
   781   000018                     pad@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785   000018                     	ds	1
   786   000019                     ?___fldiv:
   787                           	callstack 0
   788   000019                     ___fleq@ff1:
   789                           	callstack 0
   790   000019                     ___fldiv@b:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794   000019                     	ds	1
   795   00001A                     ??_timed_forward:
   796   00001A                     turnRight45@mL:
   797                           	callstack 0
   798   00001A                     turnLeft45@mL:
   799                           	callstack 0
   800   00001A                     reverseDetect@mL:
   801                           	callstack 0
   802   00001A                     reverseOneBlock@mL:
   803                           	callstack 0
   804   00001A                     ForwardOneBlock@mL:
   805                           	callstack 0
   806   00001A                     Forwardhalfblock@mL:
   807                           	callstack 0
   808   00001A                     RetryMove@mL:
   809                           	callstack 0
   810   00001A                     pad@w:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x19
   814   00001A                     	ds	2
   815   00001C                     turnRight45@mR:
   816                           	callstack 0
   817   00001C                     turnLeft45@mR:
   818                           	callstack 0
   819   00001C                     reverseDetect@mR:
   820                           	callstack 0
   821   00001C                     reverseOneBlock@mR:
   822                           	callstack 0
   823   00001C                     ForwardOneBlock@mR:
   824                           	callstack 0
   825   00001C                     Forwardhalfblock@mR:
   826                           	callstack 0
   827   00001C                     RetryMove@mR:
   828                           	callstack 0
   829   00001C                     dtoa@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1B
   833   00001C                     	ds	1
   834   00001D                     ___fleq@ff2:
   835                           	callstack 0
   836   00001D                     ___fldiv@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x1C
   840   00001D                     	ds	1
   841   00001E                     ??_Forwardhalfblock:
   842   00001E                     ??_RetryMove:
   843   00001E                     ??_turnRight45:
   844   00001E                     ??_turnLeft45:
   845   00001E                     ??_reverseDetect:
   846   00001E                     ??_reverseOneBlock:
   847   00001E                     ??_ForwardOneBlock:
   848   00001E                     dtoa@d:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x1D
   852   00001E                     	ds	2
   853   000020                     RedMove@mL:
   854                           	callstack 0
   855   000020                     GreenMove@mL:
   856                           	callstack 0
   857   000020                     BlueMove@mL:
   858                           	callstack 0
   859   000020                     YellowMove@mL:
   860                           	callstack 0
   861   000020                     PinkMove@mL:
   862                           	callstack 0
   863   000020                     OrangeMove@mL:
   864                           	callstack 0
   865   000020                     LightBlueMove@mL:
   866                           	callstack 0
   867   000020                     ReverseYellow@mL:
   868                           	callstack 0
   869   000020                     ReversePink@mL:
   870                           	callstack 0
   871   000020                     turnCalibration@mL:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x1F
   875   000020                     	ds	1
   876   000021                     ??___fldiv:
   877   000021                     ??___fleq:
   878                           
   879                           ; 1 bytes @ 0x20
   880   000021                     	ds	1
   881   000022                     RedMove@mR:
   882                           	callstack 0
   883   000022                     GreenMove@mR:
   884                           	callstack 0
   885   000022                     BlueMove@mR:
   886                           	callstack 0
   887   000022                     YellowMove@mR:
   888                           	callstack 0
   889   000022                     PinkMove@mR:
   890                           	callstack 0
   891   000022                     OrangeMove@mR:
   892                           	callstack 0
   893   000022                     LightBlueMove@mR:
   894                           	callstack 0
   895   000022                     ReverseYellow@mR:
   896                           	callstack 0
   897   000022                     ReversePink@mR:
   898                           	callstack 0
   899   000022                     turnCalibration@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x21
   903   000022                     	ds	2
   904   000024                     ??_turnCalibration:
   905   000024                     go_Home@WayBack:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x23
   909   000024                     	ds	1
   910   000025                     ___fldiv@rem:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x24
   914   000025                     	ds	1
   915   000026                     ??_dtoa:
   916   000026                     go_Home@Time_forward:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x25
   920   000026                     	ds	2
   921   000028                     ??_go_Home:
   922                           
   923                           ; 1 bytes @ 0x27
   924   000028                     	ds	1
   925   000029                     ___fldiv@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x28
   929   000029                     	ds	1
   930   00002A                     ___fldiv@new_exp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x29
   934   00002A                     	ds	1
   935   00002B                     go_Home@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x2A
   939   00002B                     	ds	1
   940   00002C                     ___fldiv@grs:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x2B
   944   00002C                     	ds	2
   945   00002E                     _dtoa$2701:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x2D
   949   00002E                     	ds	2
   950   000030                     ___fldiv@bexp:
   951                           	callstack 0
   952   000030                     dtoa@p:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2F
   956   000030                     	ds	1
   957   000031                     ___fldiv@aexp:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x30
   961   000031                     	ds	1
   962   000032                     ?___flmul:
   963                           	callstack 0
   964   000032                     colour_rel@vals:
   965                           	callstack 0
   966   000032                     dtoa@w:
   967                           	callstack 0
   968   000032                     ___flmul@b:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x31
   972   000032                     	ds	2
   973   000034                     colour_rel@rel:
   974                           	callstack 0
   975   000034                     dtoa@n:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x33
   979   000034                     	ds	2
   980   000036                     colour_rel@L:
   981                           	callstack 0
   982   000036                     ___flmul@a:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x35
   986   000036                     	ds	4
   987   00003A                     ??___flmul:
   988   00003A                     _colour_rel$3025:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x39
   992   00003A                     	ds	2
   993   00003C                     dtoa@i:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x3B
   997   00003C                     	ds	2
   998   00003E                     ___flmul@sign:
   999                           	callstack 0
  1000   00003E                     dtoa@s:
  1001                           	callstack 0
  1002   00003E                     _colour_rel$3026:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3D
  1006   00003E                     	ds	1
  1007   00003F                     vfpfcnvrt@fp:
  1008                           	callstack 0
  1009   00003F                     ___flmul@grs:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x3E
  1013   00003F                     	ds	2
  1014   000041                     vfpfcnvrt@fmt:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x40
  1018   000041                     	ds	1
  1019   000042                     colour_rel@R:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x41
  1023   000042                     	ds	1
  1024   000043                     ___flmul@aexp:
  1025                           	callstack 0
  1026   000043                     vfpfcnvrt@ap:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x42
  1030   000043                     	ds	1
  1031   000044                     ___flmul@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x43
  1035   000044                     	ds	1
  1036   000045                     ??_vfpfcnvrt:
  1037   000045                     ___flmul@prod:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x44
  1041   000045                     	ds	1
  1042   000046                     colour_rel@G:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x45
  1046   000046                     	ds	1
  1047   000047                     vfpfcnvrt@convarg:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x46
  1051   000047                     	ds	2
  1052   000049                     ___flmul@temp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x48
  1056   000049                     	ds	1
  1057   00004A                     colour_rel@B:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x49
  1061   00004A                     	ds	1
  1062   00004B                     ?_Colour_decider:
  1063                           	callstack 0
  1064   00004B                     Colour_decider@vals:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x4A
  1068   00004B                     	ds	2
  1069   00004D                     Colour_decider@rel:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x4C
  1073   00004D                     	ds	2
  1074   00004F                     ??_Colour_decider:
  1075   00004F                     vfpfcnvrt@cp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x4E
  1079   00004F                     	ds	2
  1080   000051                     ?_vfprintf:
  1081                           	callstack 0
  1082   000051                     vfprintf@fp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x50
  1086   000051                     	ds	2
  1087   000053                     vfprintf@fmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x52
  1091   000053                     	ds	2
  1092   000055                     vfprintf@ap:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x54
  1096   000055                     	ds	2
  1097   000057                     vfprintf@cfmt:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x56
  1101   000057                     	ds	2
  1102   000059                     ??_main:
  1103                           
  1104                           ; 1 bytes @ 0x58
  1105   000059                     	ds	2
  1106                           
  1107 ;;
  1108 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1109 ;;
  1110 ;; *************** function _main *****************
  1111 ;; Defined at:
  1112 ;;		line 30 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  colour          2  140[BANK0 ] int 
  1117 ;;  temp            2  134[BANK0 ] int 
  1118 ;;  temp            2  132[BANK0 ] int 
  1119 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1120 ;;  prev_colour     2  142[BANK0 ] int 
  1121 ;;  consecuitive    2  138[BANK0 ] int 
  1122 ;;  run_flag        2  136[BANK0 ] int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:      114 bytes
  1137 ;; Hardware stack levels required when called: 9
  1138 ;; This function calls:
  1139 ;;		_BlueMove
  1140 ;;		_Colour_decider
  1141 ;;		_Forwardhalfblock
  1142 ;;		_GreenMove
  1143 ;;		_I2C_2_Master_Init
  1144 ;;		_Interrupts_init
  1145 ;;		_LightBlueMove
  1146 ;;		_OrangeMove
  1147 ;;		_PinkMove
  1148 ;;		_RedMove
  1149 ;;		_RetryMove
  1150 ;;		_Timer0_init
  1151 ;;		_YellowMove
  1152 ;;		_color_click_init
  1153 ;;		_colour_rel
  1154 ;;		_fullSpeedAhead
  1155 ;;		_getTMR0val
  1156 ;;		_go_Home
  1157 ;;		_initDCmotorsPWM
  1158 ;;		_initUSART4
  1159 ;;		_readColours
  1160 ;;		_sendStringSerial4
  1161 ;;		_sprintf
  1162 ;;		_stop
  1163 ;;		_turnCalibration
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text0
  1170   001902                     __ptext0:
  1171                           	callstack 0
  1172   001902                     _main:
  1173                           	callstack 22
  1174   001902                     
  1175                           ;main.c: 31:     initUSART4();
  1176   001902  EC08  F027         	call	_initUSART4	;wreg free
  1177   001906                     
  1178                           ;main.c: 32:     Interrupts_init();
  1179   001906  EC3E  F027         	call	_Interrupts_init	;wreg free
  1180   00190A                     
  1181                           ;main.c: 33:     color_click_init();
  1182   00190A  ECB8  F023         	call	_color_click_init	;wreg free
  1183   00190E                     
  1184                           ;main.c: 34:     I2C_2_Master_Init();
  1185   00190E  EC99  F026         	call	_I2C_2_Master_Init	;wreg free
  1186   001912                     
  1187                           ;main.c: 35:     Timer0_init();
  1188   001912  ECF8  F026         	call	_Timer0_init	;wreg free
  1189   001916                     
  1190                           ;main.c: 36:     initDCmotorsPWM(200);
  1191   001916  0E00               	movlw	0
  1192   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1193   00191A  0EC8               	movlw	200
  1194   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1195   00191E  ECAE  F020         	call	_initDCmotorsPWM	;wreg free
  1196   001922                     
  1197                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1198   001922  9287               	bcf	135,1,c	;volatile
  1199   001924                     
  1200                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1201   001924  9881               	bcf	129,4,c	;volatile
  1202   001926                     
  1203                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1204   001926  9E86               	bcf	134,7,c	;volatile
  1205   001928                     
  1206                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1207   001928  8486               	bsf	134,2,c	;volatile
  1208   00192A                     
  1209                           ;main.c: 44:     ANSELFbits.ANSELF2=0;
  1210   00192A  010E               	movlb	14	; () banked
  1211   00192C  95B4               	bcf	180,2,b	;volatile
  1212   00192E                     
  1213                           ; BSR set to: 14
  1214                           ;main.c: 45:     TRISFbits.TRISF3 = 1;
  1215   00192E  8686               	bsf	134,3,c	;volatile
  1216   001930                     
  1217                           ; BSR set to: 14
  1218                           ;main.c: 47:     ANSELFbits.ANSELF3=0;
  1219   001930  97B4               	bcf	180,3,b	;volatile
  1220   001932                     
  1221                           ; BSR set to: 14
  1222                           ;main.c: 48:     LATGbits.LATG1=1;
  1223   001932  827F               	bsf	127,1,c	;volatile
  1224   001934                     
  1225                           ; BSR set to: 14
  1226                           ;main.c: 49:     LATAbits.LATA4=1;
  1227   001934  8879               	bsf	121,4,c	;volatile
  1228   001936                     
  1229                           ; BSR set to: 14
  1230                           ;main.c: 50:     LATFbits.LATF7=1;
  1231   001936  8E7E               	bsf	126,7,c	;volatile
  1232   001938                     
  1233                           ; BSR set to: 14
  1234                           ;main.c: 53:     LATDbits.LATD7=0;
  1235   001938  9E7C               	bcf	124,7,c	;volatile
  1236   00193A                     
  1237                           ; BSR set to: 14
  1238                           ;main.c: 54:     TRISDbits.TRISD7=0;
  1239   00193A  9E84               	bcf	132,7,c	;volatile
  1240   00193C                     
  1241                           ; BSR set to: 14
  1242                           ;main.c: 55:     LATHbits.LATH3=0;
  1243   00193C  9680               	bcf	128,3,c	;volatile
  1244   00193E                     
  1245                           ; BSR set to: 14
  1246                           ;main.c: 56:     TRISHbits.TRISH3=0;
  1247   00193E  9688               	bcf	136,3,c	;volatile
  1248   001940                     
  1249                           ; BSR set to: 14
  1250                           ;main.c: 59:     LATHbits.LATH0=1;
  1251   001940  8080               	bsf	128,0,c	;volatile
  1252   001942                     
  1253                           ; BSR set to: 14
  1254                           ;main.c: 60:     TRISHbits.TRISH0=0;
  1255   001942  9088               	bcf	136,0,c	;volatile
  1256   001944                     
  1257                           ; BSR set to: 14
  1258                           ;main.c: 63:     LATFbits.LATF0=1;
  1259   001944  807E               	bsf	126,0,c	;volatile
  1260   001946                     
  1261                           ; BSR set to: 14
  1262                           ;main.c: 64:     TRISFbits.TRISF0=0;
  1263   001946  9086               	bcf	134,0,c	;volatile
  1264   001948                     
  1265                           ; BSR set to: 14
  1266                           ;main.c: 67:     LATDbits.LATD4=1;
  1267   001948  887C               	bsf	124,4,c	;volatile
  1268   00194A                     
  1269                           ; BSR set to: 14
  1270                           ;main.c: 68:     TRISDbits.TRISD4=0;
  1271   00194A  9884               	bcf	132,4,c	;volatile
  1272   00194C                     
  1273                           ; BSR set to: 14
  1274                           ;main.c: 71:     LATDbits.LATD3=0;
  1275   00194C  967C               	bcf	124,3,c	;volatile
  1276   00194E                     
  1277                           ; BSR set to: 14
  1278                           ;main.c: 72:     TRISDbits.TRISD3=0;
  1279   00194E  9684               	bcf	132,3,c	;volatile
  1280   001950                     
  1281                           ; BSR set to: 14
  1282                           ;main.c: 77:     motorL.power=0;
  1283   001950  0E00               	movlw	0
  1284   001952  0100               	movlb	0	; () banked
  1285   001954  6FF3               	movwf	_motorL& (0+255),b
  1286   001956                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 78:     motorL.direction=1;
  1289   001956  0E01               	movlw	1
  1290   001958  6FF4               	movwf	(_motorL+1)& (0+255),b
  1291   00195A                     
  1292                           ; BSR set to: 0
  1293                           ;main.c: 79:     motorL.brakemode=1;
  1294   00195A  0E01               	movlw	1
  1295   00195C  6FF5               	movwf	(_motorL+2)& (0+255),b
  1296   00195E                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 80:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1299   00195E  0EAA               	movlw	170
  1300   001960  6FF8               	movwf	(_motorL+5)& (0+255),b
  1301   001962  0E0F               	movlw	15
  1302   001964  6FF9               	movwf	(_motorL+6)& (0+255),b
  1303   001966                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 81:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1306   001966  0EA6               	movlw	166
  1307   001968  6FFA               	movwf	(_motorL+7)& (0+255),b
  1308   00196A  0E0F               	movlw	15
  1309   00196C  6FFB               	movwf	(_motorL+8)& (0+255),b
  1310   00196E                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 82:     motorL.PWMperiod=200;
  1313   00196E  0E00               	movlw	0
  1314   001970  6FF7               	movwf	(_motorL+4)& (0+255),b
  1315   001972  0EC8               	movlw	200
  1316   001974  6FF6               	movwf	(_motorL+3)& (0+255),b
  1317   001976                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 83:     motorR.power=0;
  1320   001976  0E00               	movlw	0
  1321   001978  0101               	movlb	1	; () banked
  1322   00197A  6FC0               	movwf	_motorR& (0+255),b
  1323   00197C                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 84:     motorR.direction=1;
  1326   00197C  0E01               	movlw	1
  1327   00197E  6FC1               	movwf	(_motorR+1)& (0+255),b
  1328   001980                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 85:     motorR.brakemode=1;
  1331   001980  0E01               	movlw	1
  1332   001982  6FC2               	movwf	(_motorR+2)& (0+255),b
  1333   001984                     
  1334                           ; BSR set to: 1
  1335                           ;main.c: 86:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1336   001984  0E25               	movlw	37
  1337   001986  6FC5               	movwf	(_motorR+5)& (0+255),b
  1338   001988  0E0F               	movlw	15
  1339   00198A  6FC6               	movwf	(_motorR+6)& (0+255),b
  1340   00198C                     
  1341                           ; BSR set to: 1
  1342                           ;main.c: 87:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1343   00198C  0E21               	movlw	33
  1344   00198E  6FC7               	movwf	(_motorR+7)& (0+255),b
  1345   001990  0E0F               	movlw	15
  1346   001992  6FC8               	movwf	(_motorR+8)& (0+255),b
  1347   001994                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 88:     motorR.PWMperiod=200;
  1350   001994  0E00               	movlw	0
  1351   001996  6FC4               	movwf	(_motorR+4)& (0+255),b
  1352   001998  0EC8               	movlw	200
  1353   00199A  6FC3               	movwf	(_motorR+3)& (0+255),b
  1354   00199C                     
  1355                           ; BSR set to: 1
  1356                           ;main.c: 90:     int consecuitive=0;
  1357   00199C  0E00               	movlw	0
  1358   00199E  0100               	movlb	0	; () banked
  1359   0019A0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1360   0019A2  0E00               	movlw	0
  1361   0019A4  6FEA               	movwf	main@consecuitive& (0+255),b
  1362   0019A6                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 91:     int prev_colour =0;
  1365   0019A6  0E00               	movlw	0
  1366   0019A8  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1367   0019AA  0E00               	movlw	0
  1368   0019AC  6FEE               	movwf	main@prev_colour& (0+255),b
  1369   0019AE                     
  1370                           ; BSR set to: 0
  1371                           ;main.c: 92:     int run_flag=1;
  1372   0019AE  0E00               	movlw	0
  1373   0019B0  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1374   0019B2  0E01               	movlw	1
  1375   0019B4  6FE8               	movwf	main@run_flag& (0+255),b
  1376   0019B6                     
  1377                           ; BSR set to: 0
  1378                           ;main.c: 93:     move_count=-1;
  1379   0019B6  69F0               	setf	_move_count& (0+255),b	;volatile
  1380   0019B8  69F1               	setf	(_move_count+1)& (0+255),b	;volatile
  1381   0019BA                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 95:     turnCalibration(&motorL,&motorR);
  1384   0019BA  0EF3               	movlw	low _motorL
  1385   0019BC  6E20               	movwf	turnCalibration@mL^0,c
  1386   0019BE  0E00               	movlw	high _motorL
  1387   0019C0  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1388   0019C2  0EC0               	movlw	low _motorR
  1389   0019C4  6E22               	movwf	turnCalibration@mR^0,c
  1390   0019C6  0E01               	movlw	high _motorR
  1391   0019C8  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1392   0019CA  EC4A  F019         	call	_turnCalibration	;wreg free
  1393   0019CE                     l410:
  1394   0019CE  A48E               	btfss	142,2,c	;volatile
  1395   0019D0  EFEC  F00C         	goto	u4651
  1396   0019D4  EFEE  F00C         	goto	u4650
  1397   0019D8                     u4651:
  1398   0019D8  EFE7  F00C         	goto	l410
  1399   0019DC                     u4650:
  1400   0019DC                     
  1401                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1402   0019DC  0E52               	movlw	82
  1403   0019DE  6E5A               	movwf	(??_main+1)^0,c
  1404   0019E0  0E2B               	movlw	43
  1405   0019E2  6E59               	movwf	??_main^0,c
  1406   0019E4  0E00               	movlw	0
  1407   0019E6                     u4927:
  1408   0019E6  2EE8               	decfsz	wreg,f,c
  1409   0019E8  D7FE               	bra	u4927
  1410   0019EA  2E59               	decfsz	??_main^0,f,c
  1411   0019EC  D7FC               	bra	u4927
  1412   0019EE  2E5A               	decfsz	(??_main+1)^0,f,c
  1413   0019F0  D7FA               	bra	u4927
  1414   0019F2  D000               	nop2	
  1415   0019F4                     
  1416                           ;main.c: 99:     TMR0H=0;
  1417   0019F4  0E00               	movlw	0
  1418   0019F6  6ED4               	movwf	212,c	;volatile
  1419   0019F8                     
  1420                           ;main.c: 100:     TMR0L=0;
  1421   0019F8  0E00               	movlw	0
  1422   0019FA  6ED3               	movwf	211,c	;volatile
  1423                           
  1424                           ;main.c: 101:     while (run_flag)
  1425   0019FC  EF17  F00F         	goto	l5037
  1426   001A00                     l4911:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 102:     {;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1430   001A00  0EF3               	movlw	low _motorL
  1431   001A02  6E14               	movwf	fullSpeedAhead@mL^0,c
  1432   001A04  0E00               	movlw	high _motorL
  1433   001A06  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1434   001A08  0EC0               	movlw	low _motorR
  1435   001A0A  6E16               	movwf	fullSpeedAhead@mR^0,c
  1436   001A0C  0E01               	movlw	high _motorR
  1437   001A0E  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1438   001A10  EC5F  F020         	call	_fullSpeedAhead	;wreg free
  1439   001A14                     
  1440                           ;main.c: 109:         readColours(&vals);
  1441   001A14  0EC9               	movlw	low _vals
  1442   001A16  6E0C               	movwf	readColours@vals^0,c
  1443   001A18  0E01               	movlw	high _vals
  1444   001A1A  6E0D               	movwf	(readColours@vals+1)^0,c
  1445   001A1C  EC5A  F022         	call	_readColours	;wreg free
  1446   001A20                     
  1447                           ;main.c: 112:         colour_rel(&vals, &rel);
  1448   001A20  0EC9               	movlw	low _vals
  1449   001A22  6E32               	movwf	colour_rel@vals^0,c
  1450   001A24  0E01               	movlw	high _vals
  1451   001A26  6E33               	movwf	(colour_rel@vals+1)^0,c
  1452   001A28  0EB4               	movlw	low _rel
  1453   001A2A  6E34               	movwf	colour_rel@rel^0,c
  1454   001A2C  0E01               	movlw	high _rel
  1455   001A2E  6E35               	movwf	(colour_rel@rel+1)^0,c
  1456   001A30  EC65  F015         	call	_colour_rel	;wreg free
  1457   001A34                     
  1458                           ;main.c: 115:         if (vals.L>=500){
  1459   001A34  0101               	movlb	1	; () banked
  1460   001A36  BFD0               	btfsc	(_vals+7)& (0+255),7,b
  1461   001A38  EF27  F00D         	goto	u4661
  1462   001A3C  0EF4               	movlw	244
  1463   001A3E  5DCF               	subwf	(_vals+6)& (0+255),w,b
  1464   001A40  0E01               	movlw	1
  1465   001A42  59D0               	subwfb	(_vals+7)& (0+255),w,b
  1466   001A44  A0D8               	btfss	status,0,c
  1467   001A46  EF27  F00D         	goto	u4661
  1468   001A4A  EF29  F00D         	goto	u4660
  1469   001A4E                     u4661:
  1470   001A4E  EFF4  F00E         	goto	l415
  1471   001A52                     u4660:
  1472   001A52                     
  1473                           ; BSR set to: 1
  1474                           ;main.c: 116:             move_count++;
  1475   001A52  0100               	movlb	0	; () banked
  1476   001A54  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1477   001A56  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1478   001A58                     
  1479                           ; BSR set to: 0
  1480                           ;main.c: 117:             getTMR0val();
  1481   001A58  ECC2  F026         	call	_getTMR0val	;wreg free
  1482   001A5C                     
  1483                           ;main.c: 119:             Forwardhalfblock(&motorL,&motorR);
  1484   001A5C  0EF3               	movlw	low _motorL
  1485   001A5E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1486   001A60  0E00               	movlw	high _motorL
  1487   001A62  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1488   001A64  0EC0               	movlw	low _motorR
  1489   001A66  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1490   001A68  0E01               	movlw	high _motorR
  1491   001A6A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1492   001A6C  EC10  F023         	call	_Forwardhalfblock	;wreg free
  1493   001A70                     
  1494                           ;main.c: 121:             stop(&motorL, &motorR);
  1495   001A70  0EF3               	movlw	low _motorL
  1496   001A72  6E14               	movwf	stop@mL^0,c
  1497   001A74  0E00               	movlw	high _motorL
  1498   001A76  6E15               	movwf	(stop@mL+1)^0,c
  1499   001A78  0EC0               	movlw	low _motorR
  1500   001A7A  6E16               	movwf	stop@mR^0,c
  1501   001A7C  0E01               	movlw	high _motorR
  1502   001A7E  6E17               	movwf	(stop@mR+1)^0,c
  1503   001A80  EC33  F021         	call	_stop	;wreg free
  1504   001A84                     
  1505                           ;main.c: 122:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1506   001A84  0E11               	movlw	17
  1507   001A86  6E5A               	movwf	(??_main+1)^0,c
  1508   001A88  0E3C               	movlw	60
  1509   001A8A  6E59               	movwf	??_main^0,c
  1510   001A8C  0ECB               	movlw	203
  1511   001A8E                     u4937:
  1512   001A8E  2EE8               	decfsz	wreg,f,c
  1513   001A90  D7FE               	bra	u4937
  1514   001A92  2E59               	decfsz	??_main^0,f,c
  1515   001A94  D7FC               	bra	u4937
  1516   001A96  2E5A               	decfsz	(??_main+1)^0,f,c
  1517   001A98  D7FA               	bra	u4937
  1518   001A9A  F000               	nop	
  1519                           
  1520                           ;main.c: 129:             while (consecuitive<20){
  1521   001A9C  EF83  F00D         	goto	l4941
  1522   001AA0                     l4929:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;main.c: 130:                 int colour = Colour_decider(&vals, &rel);
  1526   001AA0  0EC9               	movlw	low _vals
  1527   001AA2  6E4B               	movwf	Colour_decider@vals^0,c
  1528   001AA4  0E01               	movlw	high _vals
  1529   001AA6  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1530   001AA8  0EB4               	movlw	low _rel
  1531   001AAA  6E4D               	movwf	Colour_decider@rel^0,c
  1532   001AAC  0E01               	movlw	high _rel
  1533   001AAE  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1534   001AB0  EC13  F007         	call	_Colour_decider	;wreg free
  1535   001AB4  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1536   001AB8  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1537   001ABC                     
  1538                           ;main.c: 131:                 if (colour==prev_colour){
  1539   001ABC  0100               	movlb	0	; () banked
  1540   001ABE  51EE               	movf	main@prev_colour& (0+255),w,b
  1541   001AC0  19EC               	xorwf	main@colour& (0+255),w,b
  1542   001AC2  E107               	bnz	u4671
  1543   001AC4  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1544   001AC6  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1545   001AC8  A4D8               	btfss	status,2,c
  1546   001ACA  EF69  F00D         	goto	u4671
  1547   001ACE  EF6B  F00D         	goto	u4670
  1548   001AD2                     u4671:
  1549   001AD2  EF6F  F00D         	goto	l4935
  1550   001AD6                     u4670:
  1551   001AD6                     
  1552                           ; BSR set to: 0
  1553                           ;main.c: 132:                     consecuitive++;
  1554   001AD6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1555   001AD8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1556                           
  1557                           ;main.c: 133:                 }
  1558   001ADA  EF73  F00D         	goto	l4937
  1559   001ADE                     l4935:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 135:                     consecuitive=0;
  1563   001ADE  0E00               	movlw	0
  1564   001AE0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1565   001AE2  0E00               	movlw	0
  1566   001AE4  6FEA               	movwf	main@consecuitive& (0+255),b
  1567   001AE6                     l4937:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 137:                 prev_colour=colour;
  1571   001AE6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1572   001AEA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1573   001AEE                     
  1574                           ; BSR set to: 0
  1575                           ;main.c: 138:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1576   001AEE  0E05               	movlw	5
  1577   001AF0  6E5A               	movwf	(??_main+1)^0,c
  1578   001AF2  0E0F               	movlw	15
  1579   001AF4  6E59               	movwf	??_main^0,c
  1580   001AF6  0EF1               	movlw	241
  1581   001AF8                     u4947:
  1582   001AF8  2EE8               	decfsz	wreg,f,c
  1583   001AFA  D7FE               	bra	u4947
  1584   001AFC  2E59               	decfsz	??_main^0,f,c
  1585   001AFE  D7FC               	bra	u4947
  1586   001B00  2E5A               	decfsz	(??_main+1)^0,f,c
  1587   001B02  D7FA               	bra	u4947
  1588   001B04  F000               	nop	
  1589   001B06                     l4941:
  1590                           
  1591                           ;main.c: 129:             while (consecuitive<20){
  1592   001B06  0100               	movlb	0	; () banked
  1593   001B08  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1594   001B0A  EF90  F00D         	goto	u4681
  1595   001B0E  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1596   001B10  E109               	bnz	u4680
  1597   001B12  0E14               	movlw	20
  1598   001B14  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1599   001B16  A0D8               	btfss	status,0,c
  1600   001B18  EF90  F00D         	goto	u4681
  1601   001B1C  EF92  F00D         	goto	u4680
  1602   001B20                     u4681:
  1603   001B20  EF50  F00D         	goto	l4929
  1604   001B24                     u4680:
  1605   001B24                     
  1606                           ; BSR set to: 0
  1607                           ;main.c: 140:             consecuitive=0;
  1608   001B24  0E00               	movlw	0
  1609   001B26  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1610   001B28  0E00               	movlw	0
  1611   001B2A  6FEA               	movwf	main@consecuitive& (0+255),b
  1612   001B2C                     
  1613                           ; BSR set to: 0
  1614                           ;main.c: 141:             int temp=TMR0L;
  1615   001B2C  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1616   001B30  6BE5               	clrf	(main@temp+1)& (0+255),b
  1617   001B32                     
  1618                           ; BSR set to: 0
  1619                           ;main.c: 142:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1620   001B32  0E80               	movlw	low main@buf
  1621   001B34  6F60               	movwf	sprintf@s& (0+255),b
  1622   001B36  0E00               	movlw	high main@buf
  1623   001B38  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1624   001B3A  0E01               	movlw	low STR_1
  1625   001B3C  6F62               	movwf	sprintf@fmt& (0+255),b
  1626   001B3E  0E0E               	movlw	high STR_1
  1627   001B40  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1628   001B42  C1C9  F064         	movff	_vals,?_sprintf+4
  1629   001B46  C1CA  F065         	movff	_vals+1,?_sprintf+5
  1630   001B4A  C1CB  F066         	movff	_vals+2,?_sprintf+6
  1631   001B4E  C1CC  F067         	movff	_vals+3,?_sprintf+7
  1632   001B52  C1CD  F068         	movff	_vals+4,?_sprintf+8
  1633   001B56  C1CE  F069         	movff	_vals+5,?_sprintf+9
  1634   001B5A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1635   001B5E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1636   001B60  EC3D  F023         	call	_sprintf	;wreg free
  1637   001B64                     
  1638                           ;main.c: 145:             sendStringSerial4(buf);
  1639   001B64  0E80               	movlw	low main@buf
  1640   001B66  6E02               	movwf	sendStringSerial4@string^0,c
  1641   001B68  0E00               	movlw	high main@buf
  1642   001B6A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1643   001B6C  EC81  F026         	call	_sendStringSerial4	;wreg free
  1644   001B70                     
  1645                           ;main.c: 147:             if (prev_colour==1){
  1646   001B70  0100               	movlb	0	; () banked
  1647   001B72  05EE               	decf	main@prev_colour& (0+255),w,b
  1648   001B74  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1649   001B76  A4D8               	btfss	status,2,c
  1650   001B78  EFC0  F00D         	goto	u4691
  1651   001B7C  EFC2  F00D         	goto	u4690
  1652   001B80                     u4691:
  1653   001B80  EFDB  F00D         	goto	l4961
  1654   001B84                     u4690:
  1655   001B84                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 148:                 RedMove(&motorL, &motorR);
  1658   001B84  0EF3               	movlw	low _motorL
  1659   001B86  6E20               	movwf	RedMove@mL^0,c
  1660   001B88  0E00               	movlw	high _motorL
  1661   001B8A  6E21               	movwf	(RedMove@mL+1)^0,c
  1662   001B8C  0EC0               	movlw	low _motorR
  1663   001B8E  6E22               	movwf	RedMove@mR^0,c
  1664   001B90  0E01               	movlw	high _motorR
  1665   001B92  6E23               	movwf	(RedMove@mR+1)^0,c
  1666   001B94  EC0C  F026         	call	_RedMove	;wreg free
  1667   001B98                     
  1668                           ;main.c: 149:                 TMR0H=0;
  1669   001B98  0E00               	movlw	0
  1670   001B9A  6ED4               	movwf	212,c	;volatile
  1671   001B9C                     
  1672                           ;main.c: 150:                 TMR0L=0;
  1673   001B9C  0E00               	movlw	0
  1674   001B9E  6ED3               	movwf	211,c	;volatile
  1675   001BA0                     
  1676                           ;main.c: 151:                 WayBack[move_count]=1;
  1677   001BA0  0E62               	movlw	low _WayBack
  1678   001BA2  0100               	movlb	0	; () banked
  1679   001BA4  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1680   001BA6  6ED9               	movwf	fsr2l,c
  1681   001BA8  0E01               	movlw	high _WayBack
  1682   001BAA  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1683   001BAC  6EDA               	movwf	fsr2h,c
  1684   001BAE  0E01               	movlw	1
  1685   001BB0  6EDF               	movwf	indf2,c
  1686                           
  1687                           ;main.c: 152:             }
  1688   001BB2  EF17  F00F         	goto	l5037
  1689   001BB6                     l4961:
  1690                           
  1691                           ; BSR set to: 0
  1692   001BB6  0E02               	movlw	2
  1693   001BB8  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1694   001BBA  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1695   001BBC  A4D8               	btfss	status,2,c
  1696   001BBE  EFE3  F00D         	goto	u4701
  1697   001BC2  EFE5  F00D         	goto	u4700
  1698   001BC6                     u4701:
  1699   001BC6  EFFE  F00D         	goto	l4971
  1700   001BCA                     u4700:
  1701   001BCA                     
  1702                           ; BSR set to: 0
  1703                           ;main.c: 154:                 OrangeMove(&motorL, &motorR);
  1704   001BCA  0EF3               	movlw	low _motorL
  1705   001BCC  6E20               	movwf	OrangeMove@mL^0,c
  1706   001BCE  0E00               	movlw	high _motorL
  1707   001BD0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1708   001BD2  0EC0               	movlw	low _motorR
  1709   001BD4  6E22               	movwf	OrangeMove@mR^0,c
  1710   001BD6  0E01               	movlw	high _motorR
  1711   001BD8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1712   001BDA  EC66  F023         	call	_OrangeMove	;wreg free
  1713   001BDE                     
  1714                           ;main.c: 155:                 TMR0H=0;
  1715   001BDE  0E00               	movlw	0
  1716   001BE0  6ED4               	movwf	212,c	;volatile
  1717   001BE2                     
  1718                           ;main.c: 156:                 TMR0L=0;
  1719   001BE2  0E00               	movlw	0
  1720   001BE4  6ED3               	movwf	211,c	;volatile
  1721   001BE6                     
  1722                           ;main.c: 157:                 WayBack[move_count]=2;
  1723   001BE6  0E62               	movlw	low _WayBack
  1724   001BE8  0100               	movlb	0	; () banked
  1725   001BEA  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1726   001BEC  6ED9               	movwf	fsr2l,c
  1727   001BEE  0E01               	movlw	high _WayBack
  1728   001BF0  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1729   001BF2  6EDA               	movwf	fsr2h,c
  1730   001BF4  0E02               	movlw	2
  1731   001BF6  6EDF               	movwf	indf2,c
  1732                           
  1733                           ;main.c: 158:             }
  1734   001BF8  EF17  F00F         	goto	l5037
  1735   001BFC                     l4971:
  1736                           
  1737                           ; BSR set to: 0
  1738   001BFC  0E03               	movlw	3
  1739   001BFE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1740   001C00  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1741   001C02  A4D8               	btfss	status,2,c
  1742   001C04  EF06  F00E         	goto	u4711
  1743   001C08  EF08  F00E         	goto	u4710
  1744   001C0C                     u4711:
  1745   001C0C  EF21  F00E         	goto	l4981
  1746   001C10                     u4710:
  1747   001C10                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 160:                 YellowMove(&motorL, &motorR);
  1750   001C10  0EF3               	movlw	low _motorL
  1751   001C12  6E20               	movwf	YellowMove@mL^0,c
  1752   001C14  0E00               	movlw	high _motorL
  1753   001C16  6E21               	movwf	(YellowMove@mL+1)^0,c
  1754   001C18  0EC0               	movlw	low _motorR
  1755   001C1A  6E22               	movwf	YellowMove@mR^0,c
  1756   001C1C  0E01               	movlw	high _motorR
  1757   001C1E  6E23               	movwf	(YellowMove@mR+1)^0,c
  1758   001C20  ECE1  F023         	call	_YellowMove	;wreg free
  1759   001C24                     
  1760                           ;main.c: 161:                 TMR0H=0;
  1761   001C24  0E00               	movlw	0
  1762   001C26  6ED4               	movwf	212,c	;volatile
  1763   001C28                     
  1764                           ;main.c: 162:                 TMR0L=0;
  1765   001C28  0E00               	movlw	0
  1766   001C2A  6ED3               	movwf	211,c	;volatile
  1767   001C2C                     
  1768                           ;main.c: 163:                 WayBack[move_count]=3;
  1769   001C2C  0E62               	movlw	low _WayBack
  1770   001C2E  0100               	movlb	0	; () banked
  1771   001C30  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1772   001C32  6ED9               	movwf	fsr2l,c
  1773   001C34  0E01               	movlw	high _WayBack
  1774   001C36  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1775   001C38  6EDA               	movwf	fsr2h,c
  1776   001C3A  0E03               	movlw	3
  1777   001C3C  6EDF               	movwf	indf2,c
  1778                           
  1779                           ;main.c: 164:             }
  1780   001C3E  EF17  F00F         	goto	l5037
  1781   001C42                     l4981:
  1782                           
  1783                           ; BSR set to: 0
  1784   001C42  0E04               	movlw	4
  1785   001C44  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1786   001C46  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1787   001C48  A4D8               	btfss	status,2,c
  1788   001C4A  EF29  F00E         	goto	u4721
  1789   001C4E  EF2B  F00E         	goto	u4720
  1790   001C52                     u4721:
  1791   001C52  EF44  F00E         	goto	l4991
  1792   001C56                     u4720:
  1793   001C56                     
  1794                           ; BSR set to: 0
  1795                           ;main.c: 166:                 BlueMove(&motorL, &motorR);
  1796   001C56  0EF3               	movlw	low _motorL
  1797   001C58  6E20               	movwf	BlueMove@mL^0,c
  1798   001C5A  0E00               	movlw	high _motorL
  1799   001C5C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1800   001C5E  0EC0               	movlw	low _motorR
  1801   001C60  6E22               	movwf	BlueMove@mR^0,c
  1802   001C62  0E01               	movlw	high _motorR
  1803   001C64  6E23               	movwf	(BlueMove@mR+1)^0,c
  1804   001C66  EC27  F022         	call	_BlueMove	;wreg free
  1805   001C6A                     
  1806                           ;main.c: 167:                 TMR0H=0;
  1807   001C6A  0E00               	movlw	0
  1808   001C6C  6ED4               	movwf	212,c	;volatile
  1809   001C6E                     
  1810                           ;main.c: 168:                 TMR0L=0;
  1811   001C6E  0E00               	movlw	0
  1812   001C70  6ED3               	movwf	211,c	;volatile
  1813   001C72                     
  1814                           ;main.c: 169:                 WayBack[move_count]=4;
  1815   001C72  0E62               	movlw	low _WayBack
  1816   001C74  0100               	movlb	0	; () banked
  1817   001C76  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1818   001C78  6ED9               	movwf	fsr2l,c
  1819   001C7A  0E01               	movlw	high _WayBack
  1820   001C7C  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1821   001C7E  6EDA               	movwf	fsr2h,c
  1822   001C80  0E04               	movlw	4
  1823   001C82  6EDF               	movwf	indf2,c
  1824                           
  1825                           ;main.c: 170:             }
  1826   001C84  EF17  F00F         	goto	l5037
  1827   001C88                     l4991:
  1828                           
  1829                           ; BSR set to: 0
  1830   001C88  0E05               	movlw	5
  1831   001C8A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1832   001C8C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1833   001C8E  A4D8               	btfss	status,2,c
  1834   001C90  EF4C  F00E         	goto	u4731
  1835   001C94  EF4E  F00E         	goto	u4730
  1836   001C98                     u4731:
  1837   001C98  EF67  F00E         	goto	l5001
  1838   001C9C                     u4730:
  1839   001C9C                     
  1840                           ; BSR set to: 0
  1841                           ;main.c: 172:                 GreenMove(&motorL, &motorR);
  1842   001C9C  0EF3               	movlw	low _motorL
  1843   001C9E  6E20               	movwf	GreenMove@mL^0,c
  1844   001CA0  0E00               	movlw	high _motorL
  1845   001CA2  6E21               	movwf	(GreenMove@mL+1)^0,c
  1846   001CA4  0EC0               	movlw	low _motorR
  1847   001CA6  6E22               	movwf	GreenMove@mR^0,c
  1848   001CA8  0E01               	movlw	high _motorR
  1849   001CAA  6E23               	movwf	(GreenMove@mR+1)^0,c
  1850   001CAC  EC2B  F026         	call	_GreenMove	;wreg free
  1851   001CB0                     
  1852                           ;main.c: 173:                 TMR0H=0;
  1853   001CB0  0E00               	movlw	0
  1854   001CB2  6ED4               	movwf	212,c	;volatile
  1855   001CB4                     
  1856                           ;main.c: 174:                 TMR0L=0;
  1857   001CB4  0E00               	movlw	0
  1858   001CB6  6ED3               	movwf	211,c	;volatile
  1859   001CB8                     
  1860                           ;main.c: 175:                 WayBack[move_count]=5;
  1861   001CB8  0E62               	movlw	low _WayBack
  1862   001CBA  0100               	movlb	0	; () banked
  1863   001CBC  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1864   001CBE  6ED9               	movwf	fsr2l,c
  1865   001CC0  0E01               	movlw	high _WayBack
  1866   001CC2  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1867   001CC4  6EDA               	movwf	fsr2h,c
  1868   001CC6  0E05               	movlw	5
  1869   001CC8  6EDF               	movwf	indf2,c
  1870                           
  1871                           ;main.c: 176:             }
  1872   001CCA  EF17  F00F         	goto	l5037
  1873   001CCE                     l5001:
  1874                           
  1875                           ; BSR set to: 0
  1876   001CCE  0E06               	movlw	6
  1877   001CD0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1878   001CD2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1879   001CD4  A4D8               	btfss	status,2,c
  1880   001CD6  EF6F  F00E         	goto	u4741
  1881   001CDA  EF71  F00E         	goto	u4740
  1882   001CDE                     u4741:
  1883   001CDE  EF8A  F00E         	goto	l5011
  1884   001CE2                     u4740:
  1885   001CE2                     
  1886                           ; BSR set to: 0
  1887                           ;main.c: 178:                 LightBlueMove(&motorL, &motorR);
  1888   001CE2  0EF3               	movlw	low _motorL
  1889   001CE4  6E20               	movwf	LightBlueMove@mL^0,c
  1890   001CE6  0E00               	movlw	high _motorL
  1891   001CE8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1892   001CEA  0EC0               	movlw	low _motorR
  1893   001CEC  6E22               	movwf	LightBlueMove@mR^0,c
  1894   001CEE  0E01               	movlw	high _motorR
  1895   001CF0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1896   001CF2  EC8F  F023         	call	_LightBlueMove	;wreg free
  1897   001CF6                     
  1898                           ;main.c: 179:                 TMR0H=0;
  1899   001CF6  0E00               	movlw	0
  1900   001CF8  6ED4               	movwf	212,c	;volatile
  1901   001CFA                     
  1902                           ;main.c: 180:                 TMR0L=0;
  1903   001CFA  0E00               	movlw	0
  1904   001CFC  6ED3               	movwf	211,c	;volatile
  1905   001CFE                     
  1906                           ;main.c: 181:                 WayBack[move_count]=6;
  1907   001CFE  0E62               	movlw	low _WayBack
  1908   001D00  0100               	movlb	0	; () banked
  1909   001D02  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1910   001D04  6ED9               	movwf	fsr2l,c
  1911   001D06  0E01               	movlw	high _WayBack
  1912   001D08  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1913   001D0A  6EDA               	movwf	fsr2h,c
  1914   001D0C  0E06               	movlw	6
  1915   001D0E  6EDF               	movwf	indf2,c
  1916                           
  1917                           ;main.c: 182:             }
  1918   001D10  EF17  F00F         	goto	l5037
  1919   001D14                     l5011:
  1920                           
  1921                           ; BSR set to: 0
  1922   001D14  0E07               	movlw	7
  1923   001D16  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1924   001D18  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1925   001D1A  A4D8               	btfss	status,2,c
  1926   001D1C  EF92  F00E         	goto	u4751
  1927   001D20  EF94  F00E         	goto	u4750
  1928   001D24                     u4751:
  1929   001D24  EFAD  F00E         	goto	l5021
  1930   001D28                     u4750:
  1931   001D28                     
  1932                           ; BSR set to: 0
  1933                           ;main.c: 184:                 PinkMove(&motorL, &motorR);
  1934   001D28  0EF3               	movlw	low _motorL
  1935   001D2A  6E20               	movwf	PinkMove@mL^0,c
  1936   001D2C  0E00               	movlw	high _motorL
  1937   001D2E  6E21               	movwf	(PinkMove@mL+1)^0,c
  1938   001D30  0EC0               	movlw	low _motorR
  1939   001D32  6E22               	movwf	PinkMove@mR^0,c
  1940   001D34  0E01               	movlw	high _motorR
  1941   001D36  6E23               	movwf	(PinkMove@mR+1)^0,c
  1942   001D38  EC0A  F024         	call	_PinkMove	;wreg free
  1943   001D3C                     
  1944                           ;main.c: 185:                 TMR0H=0;
  1945   001D3C  0E00               	movlw	0
  1946   001D3E  6ED4               	movwf	212,c	;volatile
  1947   001D40                     
  1948                           ;main.c: 186:                 TMR0L=0;
  1949   001D40  0E00               	movlw	0
  1950   001D42  6ED3               	movwf	211,c	;volatile
  1951   001D44                     
  1952                           ;main.c: 187:                 WayBack[move_count]=7;
  1953   001D44  0E62               	movlw	low _WayBack
  1954   001D46  0100               	movlb	0	; () banked
  1955   001D48  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1956   001D4A  6ED9               	movwf	fsr2l,c
  1957   001D4C  0E01               	movlw	high _WayBack
  1958   001D4E  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1959   001D50  6EDA               	movwf	fsr2h,c
  1960   001D52  0E07               	movlw	7
  1961   001D54  6EDF               	movwf	indf2,c
  1962                           
  1963                           ;main.c: 188:             }
  1964   001D56  EF17  F00F         	goto	l5037
  1965   001D5A                     l5021:
  1966                           
  1967                           ; BSR set to: 0
  1968   001D5A  0E0A               	movlw	10
  1969   001D5C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1970   001D5E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1971   001D60  A4D8               	btfss	status,2,c
  1972   001D62  EFB5  F00E         	goto	u4761
  1973   001D66  EFB7  F00E         	goto	u4760
  1974   001D6A                     u4761:
  1975   001D6A  EFC3  F00E         	goto	l5025
  1976   001D6E                     u4760:
  1977   001D6E                     
  1978                           ; BSR set to: 0
  1979                           ;main.c: 190:                 RetryMove(&motorL, &motorR);
  1980   001D6E  0EF3               	movlw	low _motorL
  1981   001D70  6E1A               	movwf	RetryMove@mL^0,c
  1982   001D72  0E00               	movlw	high _motorL
  1983   001D74  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1984   001D76  0EC0               	movlw	low _motorR
  1985   001D78  6E1C               	movwf	RetryMove@mR^0,c
  1986   001D7A  0E01               	movlw	high _motorR
  1987   001D7C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1988   001D7E  ECF2  F020         	call	_RetryMove	;wreg free
  1989                           
  1990                           ;main.c: 191:             }
  1991   001D82  EF17  F00F         	goto	l5037
  1992   001D86                     l5025:
  1993                           
  1994                           ; BSR set to: 0
  1995   001D86  51EE               	movf	main@prev_colour& (0+255),w,b
  1996   001D88  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1997   001D8A  A4D8               	btfss	status,2,c
  1998   001D8C  EFCA  F00E         	goto	u4771
  1999   001D90  EFCC  F00E         	goto	u4770
  2000   001D94                     u4771:
  2001   001D94  EFF2  F00E         	goto	l432
  2002   001D98                     u4770:
  2003   001D98                     
  2004                           ; BSR set to: 0
  2005                           ;main.c: 193:                 BlueMove(&motorL, &motorR);
  2006   001D98  0EF3               	movlw	low _motorL
  2007   001D9A  6E20               	movwf	BlueMove@mL^0,c
  2008   001D9C  0E00               	movlw	high _motorL
  2009   001D9E  6E21               	movwf	(BlueMove@mL+1)^0,c
  2010   001DA0  0EC0               	movlw	low _motorR
  2011   001DA2  6E22               	movwf	BlueMove@mR^0,c
  2012   001DA4  0E01               	movlw	high _motorR
  2013   001DA6  6E23               	movwf	(BlueMove@mR+1)^0,c
  2014   001DA8  EC27  F022         	call	_BlueMove	;wreg free
  2015   001DAC                     
  2016                           ;main.c: 194:                 T0CON0bits.T0EN=0;
  2017   001DAC  9ED5               	bcf	213,7,c	;volatile
  2018                           
  2019                           ;main.c: 195:                 go_Home(WayBack, Time_forward);
  2020   001DAE  0E62               	movlw	low _WayBack
  2021   001DB0  6E24               	movwf	go_Home@WayBack^0,c
  2022   001DB2  0E01               	movlw	high _WayBack
  2023   001DB4  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2024   001DB6  0E00               	movlw	low _Time_forward
  2025   001DB8  6E26               	movwf	go_Home@Time_forward^0,c
  2026   001DBA  0E02               	movlw	high _Time_forward
  2027   001DBC  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2028   001DBE  EC3A  F018         	call	_go_Home	;wreg free
  2029                           
  2030                           ;main.c: 196:                 stop(&motorL, &motorR);
  2031   001DC2  0EF3               	movlw	low _motorL
  2032   001DC4  6E14               	movwf	stop@mL^0,c
  2033   001DC6  0E00               	movlw	high _motorL
  2034   001DC8  6E15               	movwf	(stop@mL+1)^0,c
  2035   001DCA  0EC0               	movlw	low _motorR
  2036   001DCC  6E16               	movwf	stop@mR^0,c
  2037   001DCE  0E01               	movlw	high _motorR
  2038   001DD0  6E17               	movwf	(stop@mR+1)^0,c
  2039   001DD2  EC33  F021         	call	_stop	;wreg free
  2040   001DD6                     
  2041                           ;main.c: 197:                 run_flag=0;
  2042   001DD6  0E00               	movlw	0
  2043   001DD8  0100               	movlb	0	; () banked
  2044   001DDA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  2045   001DDC  0E00               	movlw	0
  2046   001DDE  6FE8               	movwf	main@run_flag& (0+255),b
  2047   001DE0  EF17  F00F         	goto	l5037
  2048   001DE4                     l432:
  2049                           
  2050                           ; BSR set to: 0
  2051   001DE4  EF17  F00F         	goto	l5037
  2052   001DE8                     l415:
  2053                           
  2054                           ; BSR set to: 1
  2055                           ;main.c: 203:             int temp=TMR0L;
  2056   001DE8  CFD3 F0E6          	movff	4051,main@temp_1304	;volatile
  2057   001DEC  0100               	movlb	0	; () banked
  2058   001DEE  6BE7               	clrf	(main@temp_1304+1)& (0+255),b
  2059   001DF0                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 204:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  2062   001DF0  0E80               	movlw	low main@buf
  2063   001DF2  6F60               	movwf	sprintf@s& (0+255),b
  2064   001DF4  0E00               	movlw	high main@buf
  2065   001DF6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2066   001DF8  0E01               	movlw	low STR_1
  2067   001DFA  6F62               	movwf	sprintf@fmt& (0+255),b
  2068   001DFC  0E0E               	movlw	high STR_1
  2069   001DFE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2070   001E00  C1C9  F064         	movff	_vals,?_sprintf+4
  2071   001E04  C1CA  F065         	movff	_vals+1,?_sprintf+5
  2072   001E08  C1CB  F066         	movff	_vals+2,?_sprintf+6
  2073   001E0C  C1CC  F067         	movff	_vals+3,?_sprintf+7
  2074   001E10  C1CD  F068         	movff	_vals+4,?_sprintf+8
  2075   001E14  C1CE  F069         	movff	_vals+5,?_sprintf+9
  2076   001E18  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  2077   001E1C  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  2078   001E1E  EC3D  F023         	call	_sprintf	;wreg free
  2079   001E22                     
  2080                           ;main.c: 205:             sendStringSerial4(buf);
  2081   001E22  0E80               	movlw	low main@buf
  2082   001E24  6E02               	movwf	sendStringSerial4@string^0,c
  2083   001E26  0E00               	movlw	high main@buf
  2084   001E28  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2085   001E2A  EC81  F026         	call	_sendStringSerial4	;wreg free
  2086   001E2E                     l5037:
  2087                           
  2088                           ;main.c: 101:     while (run_flag)
  2089   001E2E  0100               	movlb	0	; () banked
  2090   001E30  51E8               	movf	main@run_flag& (0+255),w,b
  2091   001E32  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2092   001E34  A4D8               	btfss	status,2,c
  2093   001E36  EF1F  F00F         	goto	u4781
  2094   001E3A  EF21  F00F         	goto	u4780
  2095   001E3E                     u4781:
  2096   001E3E  EF00  F00D         	goto	l4911
  2097   001E42                     u4780:
  2098   001E42                     
  2099                           ; BSR set to: 0
  2100   001E42  EF07  F000         	goto	start
  2101   001E46                     __end_of_main:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _turnCalibration *****************
  2105 ;; Defined at:
  2106 ;;		line 345 in file "dc_motor.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2109 ;;		 -> motorL(9), 
  2110 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2111 ;;		 -> motorR(9), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 5
  2130 ;; This function calls:
  2131 ;;		_turnLeft45
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text1
  2138   003294                     __ptext1:
  2139                           	callstack 0
  2140   003294                     _turnCalibration:
  2141                           	callstack 25
  2142   003294                     
  2143                           ;dc_motor.c: 346:     LATDbits.LATD3=1;
  2144   003294  867C               	bsf	124,3,c	;volatile
  2145   003296                     
  2146                           ;dc_motor.c: 347:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2147   003296  0E52               	movlw	82
  2148   003298  6E25               	movwf	(??_turnCalibration+1)^0,c
  2149   00329A  0E2B               	movlw	43
  2150   00329C  6E24               	movwf	??_turnCalibration^0,c
  2151   00329E  0E00               	movlw	0
  2152   0032A0                     u4957:
  2153   0032A0  2EE8               	decfsz	wreg,f,c
  2154   0032A2  D7FE               	bra	u4957
  2155   0032A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2156   0032A6  D7FC               	bra	u4957
  2157   0032A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2158   0032AA  D7FA               	bra	u4957
  2159   0032AC  D000               	nop2	
  2160   0032AE                     
  2161                           ;dc_motor.c: 348:     LATDbits.LATD3=0;
  2162   0032AE  967C               	bcf	124,3,c	;volatile
  2163                           
  2164                           ;dc_motor.c: 349:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2165   0032B0  0E52               	movlw	82
  2166   0032B2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2167   0032B4  0E2B               	movlw	43
  2168   0032B6  6E24               	movwf	??_turnCalibration^0,c
  2169   0032B8  0E00               	movlw	0
  2170   0032BA                     u4967:
  2171   0032BA  2EE8               	decfsz	wreg,f,c
  2172   0032BC  D7FE               	bra	u4967
  2173   0032BE  2E24               	decfsz	??_turnCalibration^0,f,c
  2174   0032C0  D7FC               	bra	u4967
  2175   0032C2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2176   0032C4  D7FA               	bra	u4967
  2177   0032C6  D000               	nop2	
  2178                           
  2179                           ;dc_motor.c: 350:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2180   0032C8  EF18  F01A         	goto	l616
  2181   0032CC                     l617:
  2182                           
  2183                           ;dc_motor.c: 351:         LATDbits.LATD3=1;
  2184   0032CC  867C               	bsf	124,3,c	;volatile
  2185   0032CE                     
  2186                           ;dc_motor.c: 353:         turnLeft45(&motorL, &motorR);
  2187   0032CE  0EF3               	movlw	low _motorL
  2188   0032D0  6E1A               	movwf	turnLeft45@mL^0,c
  2189   0032D2  0E00               	movlw	high _motorL
  2190   0032D4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2191   0032D6  0EC0               	movlw	low _motorR
  2192   0032D8  6E1C               	movwf	turnLeft45@mR^0,c
  2193   0032DA  0E01               	movlw	high _motorR
  2194   0032DC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2195   0032DE  EC21  F025         	call	_turnLeft45	;wreg free
  2196                           
  2197                           ;dc_motor.c: 354:         turnLeft45(&motorL, &motorR);
  2198   0032E2  0EF3               	movlw	low _motorL
  2199   0032E4  6E1A               	movwf	turnLeft45@mL^0,c
  2200   0032E6  0E00               	movlw	high _motorL
  2201   0032E8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2202   0032EA  0EC0               	movlw	low _motorR
  2203   0032EC  6E1C               	movwf	turnLeft45@mR^0,c
  2204   0032EE  0E01               	movlw	high _motorR
  2205   0032F0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2206   0032F2  EC21  F025         	call	_turnLeft45	;wreg free
  2207                           
  2208                           ;dc_motor.c: 355:         turnLeft45(&motorL, &motorR);
  2209   0032F6  0EF3               	movlw	low _motorL
  2210   0032F8  6E1A               	movwf	turnLeft45@mL^0,c
  2211   0032FA  0E00               	movlw	high _motorL
  2212   0032FC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2213   0032FE  0EC0               	movlw	low _motorR
  2214   003300  6E1C               	movwf	turnLeft45@mR^0,c
  2215   003302  0E01               	movlw	high _motorR
  2216   003304  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2217   003306  EC21  F025         	call	_turnLeft45	;wreg free
  2218                           
  2219                           ;dc_motor.c: 356:         turnLeft45(&motorL, &motorR);
  2220   00330A  0EF3               	movlw	low _motorL
  2221   00330C  6E1A               	movwf	turnLeft45@mL^0,c
  2222   00330E  0E00               	movlw	high _motorL
  2223   003310  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2224   003312  0EC0               	movlw	low _motorR
  2225   003314  6E1C               	movwf	turnLeft45@mR^0,c
  2226   003316  0E01               	movlw	high _motorR
  2227   003318  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2228   00331A  EC21  F025         	call	_turnLeft45	;wreg free
  2229                           
  2230                           ;dc_motor.c: 358:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2231   00331E  EFFE  F019         	goto	l4687
  2232   003322                     l4659:
  2233                           
  2234                           ;dc_motor.c: 362:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2235   003322  0EA3               	movlw	163
  2236   003324  6E25               	movwf	(??_turnCalibration+1)^0,c
  2237   003326  0E57               	movlw	87
  2238   003328  6E24               	movwf	??_turnCalibration^0,c
  2239   00332A  0E02               	movlw	2
  2240   00332C                     u4977:
  2241   00332C  2EE8               	decfsz	wreg,f,c
  2242   00332E  D7FE               	bra	u4977
  2243   003330  2E24               	decfsz	??_turnCalibration^0,f,c
  2244   003332  D7FC               	bra	u4977
  2245   003334  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2246   003336  D7FA               	bra	u4977
  2247   003338  D000               	nop2	
  2248                           
  2249                           ;dc_motor.c: 363:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2250   00333A  A48E               	btfss	142,2,c	;volatile
  2251   00333C  EFA2  F019         	goto	u4421
  2252   003340  EFA5  F019         	goto	u4420
  2253   003344                     u4421:
  2254   003344  0E01               	movlw	1
  2255   003346  EFA6  F019         	goto	u4422
  2256   00334A                     u4420:
  2257   00334A  0E00               	movlw	0
  2258   00334C                     u4422:
  2259   00334C  6E24               	movwf	??_turnCalibration^0,c
  2260   00334E  A68E               	btfss	142,3,c	;volatile
  2261   003350  EFAC  F019         	goto	u4431
  2262   003354  EFAF  F019         	goto	u4430
  2263   003358                     u4431:
  2264   003358  0E01               	movlw	1
  2265   00335A  EFB0  F019         	goto	u4432
  2266   00335E                     u4430:
  2267   00335E  0E00               	movlw	0
  2268   003360                     u4432:
  2269   003360  1424               	andwf	??_turnCalibration^0,w,c
  2270   003362  A0E8               	btfss	wreg,0,c
  2271   003364  EFB6  F019         	goto	u4441
  2272   003368  EFB8  F019         	goto	u4440
  2273   00336C                     u4441:
  2274   00336C  EFC8  F019         	goto	l4669
  2275   003370                     u4440:
  2276   003370                     
  2277                           ;dc_motor.c: 364:                 LATHbits.LATH3=1;
  2278   003370  8680               	bsf	128,3,c	;volatile
  2279                           
  2280                           ;dc_motor.c: 365:                 LATDbits.LATD7=1;
  2281   003372  8E7C               	bsf	124,7,c	;volatile
  2282   003374                     
  2283                           ;dc_motor.c: 366:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2284   003374  0E52               	movlw	82
  2285   003376  6E25               	movwf	(??_turnCalibration+1)^0,c
  2286   003378  0E2B               	movlw	43
  2287   00337A  6E24               	movwf	??_turnCalibration^0,c
  2288   00337C  0E00               	movlw	0
  2289   00337E                     u4987:
  2290   00337E  2EE8               	decfsz	wreg,f,c
  2291   003380  D7FE               	bra	u4987
  2292   003382  2E24               	decfsz	??_turnCalibration^0,f,c
  2293   003384  D7FC               	bra	u4987
  2294   003386  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2295   003388  D7FA               	bra	u4987
  2296   00338A  D000               	nop2	
  2297   00338C                     
  2298                           ;dc_motor.c: 367:                 LATHbits.LATH3=1;
  2299   00338C  8680               	bsf	128,3,c	;volatile
  2300   00338E                     
  2301                           ;dc_motor.c: 368:                 LATDbits.LATD7=0;
  2302   00338E  9E7C               	bcf	124,7,c	;volatile
  2303   003390                     l4669:
  2304                           
  2305                           ;dc_motor.c: 370:             if (!PORTFbits.RF3){
  2306   003390  B68E               	btfsc	142,3,c	;volatile
  2307   003392  EFCD  F019         	goto	u4451
  2308   003396  EFCF  F019         	goto	u4450
  2309   00339A                     u4451:
  2310   00339A  EFE4  F019         	goto	l621
  2311   00339E                     u4450:
  2312   00339E                     
  2313                           ;dc_motor.c: 371:                 Turn45Delay+=10;
  2314   00339E  0E0A               	movlw	10
  2315   0033A0  0100               	movlb	0	; () banked
  2316   0033A2  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2317   0033A4  0E00               	movlw	0
  2318   0033A6  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2319   0033A8                     
  2320                           ; BSR set to: 0
  2321                           ;dc_motor.c: 372:                 LATHbits.LATH3=1;
  2322   0033A8  8680               	bsf	128,3,c	;volatile
  2323   0033AA                     
  2324                           ; BSR set to: 0
  2325                           ;dc_motor.c: 373:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2326   0033AA  0E52               	movlw	82
  2327   0033AC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2328   0033AE  0E2B               	movlw	43
  2329   0033B0  6E24               	movwf	??_turnCalibration^0,c
  2330   0033B2  0E00               	movlw	0
  2331   0033B4                     u4997:
  2332   0033B4  2EE8               	decfsz	wreg,f,c
  2333   0033B6  D7FE               	bra	u4997
  2334   0033B8  2E24               	decfsz	??_turnCalibration^0,f,c
  2335   0033BA  D7FC               	bra	u4997
  2336   0033BC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2337   0033BE  D7FA               	bra	u4997
  2338   0033C0  D000               	nop2	
  2339   0033C2                     
  2340                           ;dc_motor.c: 374:                 LATHbits.LATH3=0;
  2341   0033C2  9680               	bcf	128,3,c	;volatile
  2342                           
  2343                           ;dc_motor.c: 375:             }
  2344   0033C4  EFFE  F019         	goto	l4687
  2345   0033C8                     l621:
  2346   0033C8  B48E               	btfsc	142,2,c	;volatile
  2347   0033CA  EFE9  F019         	goto	u4461
  2348   0033CE  EFEB  F019         	goto	u4460
  2349   0033D2                     u4461:
  2350   0033D2  EFFE  F019         	goto	l4687
  2351   0033D6                     u4460:
  2352   0033D6                     
  2353                           ;dc_motor.c: 378:                 Turn45Delay-=10;
  2354   0033D6  0100               	movlb	0	; () banked
  2355   0033D8  0EF6               	movlw	246
  2356   0033DA  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2357   0033DC  0EFF               	movlw	255
  2358   0033DE  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2359   0033E0                     
  2360                           ; BSR set to: 0
  2361                           ;dc_motor.c: 379:                 LATDbits.LATD7=1;
  2362   0033E0  8E7C               	bsf	124,7,c	;volatile
  2363   0033E2                     
  2364                           ; BSR set to: 0
  2365                           ;dc_motor.c: 380:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2366   0033E2  0E52               	movlw	82
  2367   0033E4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2368   0033E6  0E2B               	movlw	43
  2369   0033E8  6E24               	movwf	??_turnCalibration^0,c
  2370   0033EA  0E00               	movlw	0
  2371   0033EC                     u5007:
  2372   0033EC  2EE8               	decfsz	wreg,f,c
  2373   0033EE  D7FE               	bra	u5007
  2374   0033F0  2E24               	decfsz	??_turnCalibration^0,f,c
  2375   0033F2  D7FC               	bra	u5007
  2376   0033F4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2377   0033F6  D7FA               	bra	u5007
  2378   0033F8  D000               	nop2	
  2379   0033FA                     
  2380                           ;dc_motor.c: 381:                 LATDbits.LATD7=0;
  2381   0033FA  9E7C               	bcf	124,7,c	;volatile
  2382   0033FC                     l4687:
  2383                           
  2384                           ;dc_motor.c: 358:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2385   0033FC  A48E               	btfss	142,2,c	;volatile
  2386   0033FE  EF03  F01A         	goto	u4471
  2387   003402  EF05  F01A         	goto	u4470
  2388   003406                     u4471:
  2389   003406  EF0C  F01A         	goto	l4691
  2390   00340A                     u4470:
  2391   00340A  B68E               	btfsc	142,3,c	;volatile
  2392   00340C  EF0A  F01A         	goto	u4481
  2393   003410  EF0C  F01A         	goto	u4480
  2394   003414                     u4481:
  2395   003414  EF91  F019         	goto	l4659
  2396   003418                     u4480:
  2397   003418                     l4691:
  2398                           
  2399                           ;dc_motor.c: 384:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2400   003418  0EA3               	movlw	163
  2401   00341A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2402   00341C  0E57               	movlw	87
  2403   00341E  6E24               	movwf	??_turnCalibration^0,c
  2404   003420  0E02               	movlw	2
  2405   003422                     u5017:
  2406   003422  2EE8               	decfsz	wreg,f,c
  2407   003424  D7FE               	bra	u5017
  2408   003426  2E24               	decfsz	??_turnCalibration^0,f,c
  2409   003428  D7FC               	bra	u5017
  2410   00342A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2411   00342C  D7FA               	bra	u5017
  2412   00342E  D000               	nop2	
  2413   003430                     l616:
  2414                           
  2415                           ;dc_motor.c: 350:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2416   003430  A68E               	btfss	142,3,c	;volatile
  2417   003432  EF1D  F01A         	goto	u4491
  2418   003436  EF20  F01A         	goto	u4490
  2419   00343A                     u4491:
  2420   00343A  0E01               	movlw	1
  2421   00343C  EF21  F01A         	goto	u4492
  2422   003440                     u4490:
  2423   003440  0E00               	movlw	0
  2424   003442                     u4492:
  2425   003442  6E24               	movwf	??_turnCalibration^0,c
  2426   003444  A48E               	btfss	142,2,c	;volatile
  2427   003446  EF27  F01A         	goto	u4501
  2428   00344A  EF2A  F01A         	goto	u4500
  2429   00344E                     u4501:
  2430   00344E  0E01               	movlw	1
  2431   003450  EF2B  F01A         	goto	u4502
  2432   003454                     u4500:
  2433   003454  0E00               	movlw	0
  2434   003456                     u4502:
  2435   003456  1424               	andwf	??_turnCalibration^0,w,c
  2436   003458  A0E8               	btfss	wreg,0,c
  2437   00345A  EF31  F01A         	goto	u4511
  2438   00345E  EF33  F01A         	goto	u4510
  2439   003462                     u4511:
  2440   003462  EF66  F019         	goto	l617
  2441   003466                     u4510:
  2442   003466  0012               	return		;funcret
  2443   003468                     __end_of_turnCalibration:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _sprintf *****************
  2447 ;; Defined at:
  2448 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2451 ;;		 -> main@buf(100), 
  2452 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2453 ;;		 -> STR_2(36), STR_1(36), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2456 ;;  ap              2   12[BANK0 ] PTR void [1]
  2457 ;;		 -> ?_sprintf(2), 
  2458 ;;  ret             2    0        int 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    0[BANK0 ] int 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2468 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;Total ram usage:       25 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 8
  2475 ;; This function calls:
  2476 ;;		_vfprintf
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text2
  2483   00467A                     __ptext2:
  2484                           	callstack 0
  2485   00467A                     _sprintf:
  2486                           	callstack 22
  2487   00467A  0E64               	movlw	low (?_sprintf+4)
  2488   00467C  0100               	movlb	0	; () banked
  2489   00467E  6F6C               	movwf	sprintf@ap& (0+255),b
  2490   004680  0E00               	movlw	high (?_sprintf+4)
  2491   004682  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2492   004684  C060  F06E         	movff	sprintf@s,sprintf@f
  2493   004688  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2494   00468C                     
  2495                           ; BSR set to: 0
  2496   00468C  0E00               	movlw	0
  2497   00468E  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2498   004690  0E00               	movlw	0
  2499   004692  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2500   004694                     
  2501                           ; BSR set to: 0
  2502   004694  0E00               	movlw	0
  2503   004696  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2504   004698  0E00               	movlw	0
  2505   00469A  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2506   00469C                     
  2507                           ; BSR set to: 0
  2508   00469C  0E6E               	movlw	low sprintf@f
  2509   00469E  6E51               	movwf	vfprintf@fp^0,c
  2510   0046A0  0E00               	movlw	high sprintf@f
  2511   0046A2  6E52               	movwf	(vfprintf@fp+1)^0,c
  2512   0046A4  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2513   0046A8  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2514   0046AC  0E6C               	movlw	low sprintf@ap
  2515   0046AE  6E55               	movwf	vfprintf@ap^0,c
  2516   0046B0  0E00               	movlw	high sprintf@ap
  2517   0046B2  6E56               	movwf	(vfprintf@ap+1)^0,c
  2518   0046B4  ECD3  F024         	call	_vfprintf	;wreg free
  2519   0046B8  0100               	movlb	0	; () banked
  2520   0046BA  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2521   0046BC  2560               	addwf	sprintf@s& (0+255),w,b
  2522   0046BE  6ED9               	movwf	fsr2l,c
  2523   0046C0  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2524   0046C2  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2525   0046C4  6EDA               	movwf	fsr2h,c
  2526   0046C6  0E00               	movlw	0
  2527   0046C8  6EDF               	movwf	indf2,c
  2528   0046CA                     
  2529                           ; BSR set to: 0
  2530   0046CA  0012               	return		;funcret
  2531   0046CC                     __end_of_sprintf:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _vfprintf *****************
  2535 ;; Defined at:
  2536 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2539 ;;		 -> sprintf@f(11), 
  2540 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2541 ;;		 -> STR_2(36), STR_1(36), 
  2542 ;;  ap              2   84[COMRAM] PTR PTR void 
  2543 ;;		 -> sprintf@ap(2), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2546 ;;		 -> STR_2(36), STR_1(36), 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2   80[COMRAM] int 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;Total ram usage:        8 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 7
  2563 ;; This function calls:
  2564 ;;		_vfpfcnvrt
  2565 ;; This function is called by:
  2566 ;;		_sprintf
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text3
  2571   0049A6                     __ptext3:
  2572                           	callstack 0
  2573   0049A6                     _vfprintf:
  2574                           	callstack 22
  2575   0049A6                     
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2577   0049A6  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2578   0049AA  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2581   0049AE  EFE7  F024         	goto	l4343
  2582   0049B2                     l4341:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2585   0049B2  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2586   0049B6  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2587   0049BA  0E57               	movlw	low vfprintf@cfmt
  2588   0049BC  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2589   0049BE  0E00               	movlw	high vfprintf@cfmt
  2590   0049C0  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2591   0049C2  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2592   0049C6  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2593   0049CA  EC3A  F01D         	call	_vfpfcnvrt	;wreg free
  2594   0049CE                     l4343:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2597   0049CE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2598   0049D2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2599   0049D6                     	if	0	;tblptru may be non-zero
  2600   0049D6                     	endif
  2601   0049D6                     	if	0	;tblptru may be non-zero
  2602   0049D6                     	endif
  2603   0049D6  0008               	tblrd		*
  2604   0049D8  50F5               	movf	tablat,w,c
  2605   0049DA  0900               	iorlw	0
  2606   0049DC  A4D8               	btfss	status,2,c
  2607   0049DE  EFF3  F024         	goto	u4041
  2608   0049E2  EFF5  F024         	goto	u4040
  2609   0049E6                     u4041:
  2610   0049E6  EFD9  F024         	goto	l4341
  2611   0049EA                     u4040:
  2612   0049EA                     
  2613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2614   0049EA  0E00               	movlw	0
  2615   0049EC  6E52               	movwf	(?_vfprintf+1)^0,c
  2616   0049EE  0E00               	movlw	0
  2617   0049F0  6E51               	movwf	?_vfprintf^0,c
  2618   0049F2  0012               	return		;funcret
  2619   0049F4                     __end_of_vfprintf:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _vfpfcnvrt *****************
  2623 ;; Defined at:
  2624 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2627 ;;		 -> sprintf@f(11), 
  2628 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2629 ;;		 -> vfprintf@cfmt(2), 
  2630 ;;  ap              2   66[COMRAM] PTR PTR void 
  2631 ;;		 -> sprintf@ap(2), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  convarg         8   70[COMRAM] struct .
  2634 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2635 ;;		 -> STR_2(36), STR_1(36), 
  2636 ;;  i               2    0        int 
  2637 ;;  done            2    0        int 
  2638 ;;  c               1    0        unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2648 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;Total ram usage:       18 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 6
  2655 ;; This function calls:
  2656 ;;		_dtoa
  2657 ;;		_fputc
  2658 ;; This function is called by:
  2659 ;;		_vfprintf
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text4
  2664   003A74                     __ptext4:
  2665                           	callstack 0
  2666   003A74                     _vfpfcnvrt:
  2667                           	callstack 22
  2668   003A74                     
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2670   003A74  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2671   003A78  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2672   003A7C  CFDE FFF6          	movff	postinc2,tblptrl
  2673   003A80  CFDD FFF7          	movff	postdec2,tblptrh
  2674   003A84                     	if	0	;tblptru may be non-zero
  2675   003A84                     	endif
  2676   003A84                     	if	0	;tblptru may be non-zero
  2677   003A84                     	endif
  2678   003A84  0008               	tblrd		*
  2679   003A86  50F5               	movf	tablat,w,c
  2680   003A88  0A25               	xorlw	37
  2681   003A8A  A4D8               	btfss	status,2,c
  2682   003A8C  EF4A  F01D         	goto	u3381
  2683   003A90  EF4C  F01D         	goto	u3380
  2684   003A94                     u3381:
  2685   003A94  EFCC  F01D         	goto	l3897
  2686   003A98                     u3380:
  2687   003A98                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2689   003A98  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2690   003A9C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2691   003AA0  2ADE               	incf	postinc2,f,c
  2692   003AA2  0E00               	movlw	0
  2693   003AA4  22DD               	addwfc	postdec2,f,c
  2694   003AA6                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2696   003AA6  0E00               	movlw	0
  2697   003AA8  0101               	movlb	1	; () banked
  2698   003AAA  6F5D               	movwf	(_width+1)& (0+255),b
  2699   003AAC  0E00               	movlw	0
  2700   003AAE  6F5C               	movwf	_width& (0+255),b
  2701   003AB0  C15C  F0F2         	movff	_width,_flags
  2702   003AB4                     
  2703                           ; BSR set to: 1
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2705   003AB4  695E               	setf	_prec& (0+255),b
  2706   003AB6  695F               	setf	(_prec+1)& (0+255),b
  2707   003AB8                     
  2708                           ; BSR set to: 1
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2710   003AB8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711   003ABC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712   003AC0  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2713   003AC4  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2714   003AC8                     
  2715                           ; BSR set to: 1
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2717   003AC8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2718   003ACC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2719   003AD0                     	if	0	;tblptru may be non-zero
  2720   003AD0                     	endif
  2721   003AD0                     	if	0	;tblptru may be non-zero
  2722   003AD0                     	endif
  2723   003AD0  0008               	tblrd		*
  2724   003AD2  50F5               	movf	tablat,w,c
  2725   003AD4  0A64               	xorlw	100
  2726   003AD6  B4D8               	btfsc	status,2,c
  2727   003AD8  EF70  F01D         	goto	u3391
  2728   003ADC  EF72  F01D         	goto	u3390
  2729   003AE0                     u3391:
  2730   003AE0  EF80  F01D         	goto	l3887
  2731   003AE4                     u3390:
  2732   003AE4                     
  2733                           ; BSR set to: 1
  2734   003AE4  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2735   003AE8  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2736   003AEC                     	if	0	;tblptru may be non-zero
  2737   003AEC                     	endif
  2738   003AEC                     	if	0	;tblptru may be non-zero
  2739   003AEC                     	endif
  2740   003AEC  0008               	tblrd		*
  2741   003AEE  50F5               	movf	tablat,w,c
  2742   003AF0  0A69               	xorlw	105
  2743   003AF2  A4D8               	btfss	status,2,c
  2744   003AF4  EF7E  F01D         	goto	u3401
  2745   003AF8  EF80  F01D         	goto	u3400
  2746   003AFC                     u3401:
  2747   003AFC  EFC3  F01D         	goto	l3893
  2748   003B00                     u3400:
  2749   003B00                     l3887:
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2753   003B00  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2754   003B04  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2755   003B08  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2756   003B0C  0E02               	movlw	2
  2757   003B0E  26DE               	addwf	postinc2,f,c
  2758   003B10  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2759   003B14  0E00               	movlw	0
  2760   003B16  22DD               	addwfc	postdec2,f,c
  2761   003B18  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2762   003B1C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2763   003B20  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2764   003B24  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2765   003B28  0E00               	movlw	0
  2766   003B2A  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2767   003B2C  0EFF               	movlw	-1
  2768   003B2E  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2769   003B30  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2770   003B32  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2771   003B34  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2772   003B36  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2773   003B38  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2776   003B3A  0E01               	movlw	1
  2777   003B3C  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2778   003B3E  6E45               	movwf	??_vfpfcnvrt^0,c
  2779   003B40  0E00               	movlw	0
  2780   003B42  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2781   003B44  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2782   003B46  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2783   003B4A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2784   003B4E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2785   003B52  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2786   003B56                     
  2787                           ; BSR set to: 1
  2788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2789   003B56  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2790   003B5A  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2791   003B5E  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2792   003B62  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2793   003B66  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2794   003B6A  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2795   003B6E  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2796   003B72  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2797   003B76  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2798   003B7A  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2799   003B7E  ECFC  F016         	call	_dtoa	;wreg free
  2800   003B82  EFE0  F01D         	goto	l1443
  2801   003B86                     l3893:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2804   003B86  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805   003B8A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806   003B8E  2ADE               	incf	postinc2,f,c
  2807   003B90  0E00               	movlw	0
  2808   003B92  22DD               	addwfc	postdec2,f,c
  2809   003B94  EFE0  F01D         	goto	l1443
  2810   003B98                     l3897:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2813   003B98  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2814   003B9C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2815   003BA0  CFDE FFF6          	movff	postinc2,tblptrl
  2816   003BA4  CFDD FFF7          	movff	postdec2,tblptrh
  2817   003BA8                     	if	0	;tblptru may be non-zero
  2818   003BA8                     	endif
  2819   003BA8                     	if	0	;tblptru may be non-zero
  2820   003BA8                     	endif
  2821   003BA8  0008               	tblrd		*
  2822   003BAA  50F5               	movf	tablat,w,c
  2823   003BAC  6E01               	movwf	fputc@c^0,c
  2824   003BAE  6A02               	clrf	(fputc@c+1)^0,c
  2825   003BB0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2826   003BB4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2827   003BB8  EC63  F01E         	call	_fputc	;wreg free
  2828   003BBC  EFC3  F01D         	goto	l3893
  2829   003BC0                     l1443:
  2830   003BC0  0012               	return		;funcret
  2831   003BC2                     __end_of_vfpfcnvrt:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _dtoa *****************
  2835 ;; Defined at:
  2836 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2839 ;;		 -> sprintf@f(11), 
  2840 ;;  d               8   29[COMRAM] long long 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  n               8   51[COMRAM] long long 
  2843 ;;  i               2   59[COMRAM] int 
  2844 ;;  w               2   49[COMRAM] int 
  2845 ;;  p               2   47[COMRAM] int 
  2846 ;;  s               1   61[COMRAM] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2856 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;Total ram usage:       35 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 5
  2863 ;; This function calls:
  2864 ;;		___aodiv
  2865 ;;		___aomod
  2866 ;;		_abs
  2867 ;;		_pad
  2868 ;; This function is called by:
  2869 ;;		_vfpfcnvrt
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text5
  2874   002DF8                     __ptext5:
  2875                           	callstack 0
  2876   002DF8                     _dtoa:
  2877                           	callstack 22
  2878   002DF8                     
  2879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2880   002DF8  C01E  F034         	movff	dtoa@d,dtoa@n
  2881   002DFC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2882   002E00  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2883   002E04  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2884   002E08  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2885   002E0C  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2886   002E10  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2887   002E14  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2888   002E18                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2890   002E18  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2891   002E1A  EF11  F017         	goto	u2861
  2892   002E1E  EF14  F017         	goto	u2860
  2893   002E22                     u2861:
  2894   002E22  0E01               	movlw	1
  2895   002E24  EF15  F017         	goto	u2870
  2896   002E28                     u2860:
  2897   002E28  0E00               	movlw	0
  2898   002E2A                     u2870:
  2899   002E2A  6E3E               	movwf	dtoa@s^0,c
  2900   002E2C                     
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2902   002E2C  503E               	movf	dtoa@s^0,w,c
  2903   002E2E  B4D8               	btfsc	status,2,c
  2904   002E30  EF1C  F017         	goto	u2881
  2905   002E34  EF1E  F017         	goto	u2880
  2906   002E38                     u2881:
  2907   002E38  EF2E  F017         	goto	l3563
  2908   002E3C                     u2880:
  2909   002E3C                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2911   002E3C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2912   002E3E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2913   002E40  1E39               	comf	(dtoa@n+5)^0,f,c
  2914   002E42  1E38               	comf	(dtoa@n+4)^0,f,c
  2915   002E44  1E37               	comf	(dtoa@n+3)^0,f,c
  2916   002E46  1E36               	comf	(dtoa@n+2)^0,f,c
  2917   002E48  1E35               	comf	(dtoa@n+1)^0,f,c
  2918   002E4A  6C34               	negf	dtoa@n^0,c
  2919   002E4C  0E00               	movlw	0
  2920   002E4E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2921   002E50  2236               	addwfc	(dtoa@n+2)^0,f,c
  2922   002E52  2237               	addwfc	(dtoa@n+3)^0,f,c
  2923   002E54  2238               	addwfc	(dtoa@n+4)^0,f,c
  2924   002E56  2239               	addwfc	(dtoa@n+5)^0,f,c
  2925   002E58  223A               	addwfc	(dtoa@n+6)^0,f,c
  2926   002E5A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2927   002E5C                     l3563:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2930   002E5C  0101               	movlb	1	; () banked
  2931   002E5E  BF5F               	btfsc	(_prec+1)& (0+255),7,b
  2932   002E60  EF3C  F017         	goto	u2890
  2933   002E64  515F               	movf	(_prec+1)& (0+255),w,b
  2934   002E66  E106               	bnz	u2891
  2935   002E68  055E               	decf	_prec& (0+255),w,b
  2936   002E6A  B0D8               	btfsc	status,0,c
  2937   002E6C  EF3A  F017         	goto	u2891
  2938   002E70  EF3C  F017         	goto	u2890
  2939   002E74                     u2891:
  2940   002E74  EF42  F017         	goto	l1422
  2941   002E78                     u2890:
  2942   002E78                     
  2943                           ; BSR set to: 1
  2944   002E78  0E00               	movlw	0
  2945   002E7A  6E31               	movwf	(dtoa@p+1)^0,c
  2946   002E7C  0E01               	movlw	1
  2947   002E7E  6E30               	movwf	dtoa@p^0,c
  2948   002E80  EF46  F017         	goto	l1424
  2949   002E84                     l1422:
  2950                           
  2951                           ; BSR set to: 1
  2952   002E84  C15E  F030         	movff	_prec,dtoa@p
  2953   002E88  C15F  F031         	movff	_prec+1,dtoa@p+1
  2954   002E8C                     l1424:
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2958   002E8C  C15C  F032         	movff	_width,dtoa@w
  2959   002E90  C15D  F033         	movff	_width+1,dtoa@w+1
  2960   002E94                     
  2961                           ; BSR set to: 1
  2962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2963   002E94  503E               	movf	dtoa@s^0,w,c
  2964   002E96  B4D8               	btfsc	status,2,c
  2965   002E98  EF50  F017         	goto	u2901
  2966   002E9C  EF52  F017         	goto	u2900
  2967   002EA0                     u2901:
  2968   002EA0  EF69  F017         	goto	l1425
  2969   002EA4                     u2900:
  2970   002EA4                     
  2971                           ; BSR set to: 1
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2973   002EA4  0632               	decf	dtoa@w^0,f,c
  2974   002EA6  A0D8               	btfss	status,0,c
  2975   002EA8  0633               	decf	(dtoa@w+1)^0,f,c
  2976   002EAA                     
  2977                           ; BSR set to: 1
  2978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2979   002EAA  503E               	movf	dtoa@s^0,w,c
  2980   002EAC  A4D8               	btfss	status,2,c
  2981   002EAE  EF5B  F017         	goto	u2911
  2982   002EB2  EF5D  F017         	goto	u2910
  2983   002EB6                     u2911:
  2984   002EB6  EF63  F017         	goto	l3575
  2985   002EBA                     u2910:
  2986   002EBA                     
  2987                           ; BSR set to: 1
  2988   002EBA  0E00               	movlw	0
  2989   002EBC  6E2F               	movwf	(_dtoa$2701+1)^0,c
  2990   002EBE  0E2B               	movlw	43
  2991   002EC0  6E2E               	movwf	_dtoa$2701^0,c
  2992   002EC2  EF67  F017         	goto	l3577
  2993   002EC6                     l3575:
  2994                           
  2995                           ; BSR set to: 1
  2996   002EC6  0E00               	movlw	0
  2997   002EC8  6E2F               	movwf	(_dtoa$2701+1)^0,c
  2998   002ECA  0E2D               	movlw	45
  2999   002ECC  6E2E               	movwf	_dtoa$2701^0,c
  3000   002ECE                     l3577:
  3001                           
  3002                           ; BSR set to: 1
  3003   002ECE  C02E  F03E         	movff	_dtoa$2701,dtoa@s
  3004   002ED2                     l1425:
  3005                           
  3006                           ; BSR set to: 1
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3008   002ED2  0E00               	movlw	0
  3009   002ED4  6E3D               	movwf	(dtoa@i+1)^0,c
  3010   002ED6  0E1F               	movlw	31
  3011   002ED8  6E3C               	movwf	dtoa@i^0,c
  3012   002EDA                     
  3013                           ; BSR set to: 1
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3015   002EDA  0E00               	movlw	0
  3016   002EDC  6FB3               	movwf	(_dbuf+31)& (0+255),b
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3019   002EDE  EFED  F017         	goto	l3591
  3020   002EE2                     l3581:
  3021                           
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3023   002EE2  063C               	decf	dtoa@i^0,f,c
  3024   002EE4  A0D8               	btfss	status,0,c
  3025   002EE6  063D               	decf	(dtoa@i+1)^0,f,c
  3026   002EE8                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3028   002EE8  0E94               	movlw	low _dbuf
  3029   002EEA  243C               	addwf	dtoa@i^0,w,c
  3030   002EEC  6ED9               	movwf	fsr2l,c
  3031   002EEE  0E01               	movlw	high _dbuf
  3032   002EF0  203D               	addwfc	(dtoa@i+1)^0,w,c
  3033   002EF2  6EDA               	movwf	fsr2h,c
  3034   002EF4  C034  F001         	movff	dtoa@n,___aomod@dividend
  3035   002EF8  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3036   002EFC  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3037   002F00  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3038   002F04  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3039   002F08  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3040   002F0C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3041   002F10  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3042   002F14  0E0A               	movlw	10
  3043   002F16  6E09               	movwf	___aomod@divisor^0,c
  3044   002F18  0E00               	movlw	0
  3045   002F1A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3046   002F1C  0E00               	movlw	0
  3047   002F1E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3048   002F20  0E00               	movlw	0
  3049   002F22  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3050   002F24  0E00               	movlw	0
  3051   002F26  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3052   002F28  0E00               	movlw	0
  3053   002F2A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3054   002F2C  0E00               	movlw	0
  3055   002F2E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3056   002F30  0E00               	movlw	0
  3057   002F32  6E10               	movwf	(___aomod@divisor+7)^0,c
  3058   002F34  EC88  F01C         	call	___aomod	;wreg free
  3059   002F38  C001  F026         	movff	?___aomod,??_dtoa
  3060   002F3C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3061   002F40  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3062   002F44  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3063   002F48  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3064   002F4C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3065   002F50  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3066   002F54  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3067   002F58  C026  F013         	movff	??_dtoa,abs@a
  3068   002F5C  C027  F014         	movff	??_dtoa+1,abs@a+1
  3069   002F60  ECAE  F025         	call	_abs	;wreg free
  3070   002F64  5013               	movf	?_abs^0,w,c
  3071   002F66  0F30               	addlw	48
  3072   002F68  6EDF               	movwf	indf2,c
  3073   002F6A                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3075   002F6A  0630               	decf	dtoa@p^0,f,c
  3076   002F6C  A0D8               	btfss	status,0,c
  3077   002F6E  0631               	decf	(dtoa@p+1)^0,f,c
  3078   002F70                     
  3079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3080   002F70  0632               	decf	dtoa@w^0,f,c
  3081   002F72  A0D8               	btfss	status,0,c
  3082   002F74  0633               	decf	(dtoa@w+1)^0,f,c
  3083   002F76                     
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3085   002F76  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3086   002F7A  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3087   002F7E  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3088   002F82  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3089   002F86  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3090   002F8A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3091   002F8E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3092   002F92  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3093   002F96  0E0A               	movlw	10
  3094   002F98  6E09               	movwf	___aodiv@divisor^0,c
  3095   002F9A  0E00               	movlw	0
  3096   002F9C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3097   002F9E  0E00               	movlw	0
  3098   002FA0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3099   002FA2  0E00               	movlw	0
  3100   002FA4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3101   002FA6  0E00               	movlw	0
  3102   002FA8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3103   002FAA  0E00               	movlw	0
  3104   002FAC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3105   002FAE  0E00               	movlw	0
  3106   002FB0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3107   002FB2  0E00               	movlw	0
  3108   002FB4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3109   002FB6  EC0E  F01B         	call	___aodiv	;wreg free
  3110   002FBA  C001  F034         	movff	?___aodiv,dtoa@n
  3111   002FBE  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3112   002FC2  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3113   002FC6  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3114   002FCA  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3115   002FCE  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3116   002FD2  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3117   002FD6  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3118   002FDA                     l3591:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3121   002FDA  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3122   002FDC  EFF8  F017         	goto	u2921
  3123   002FE0  503D               	movf	(dtoa@i+1)^0,w,c
  3124   002FE2  E108               	bnz	u2920
  3125   002FE4  043C               	decf	dtoa@i^0,w,c
  3126   002FE6  A0D8               	btfss	status,0,c
  3127   002FE8  EFF8  F017         	goto	u2921
  3128   002FEC  EFFA  F017         	goto	u2920
  3129   002FF0                     u2921:
  3130   002FF0  EF16  F018         	goto	l3597
  3131   002FF4                     u2920:
  3132   002FF4  5034               	movf	dtoa@n^0,w,c
  3133   002FF6  1035               	iorwf	(dtoa@n+1)^0,w,c
  3134   002FF8  1036               	iorwf	(dtoa@n+2)^0,w,c
  3135   002FFA  1037               	iorwf	(dtoa@n+3)^0,w,c
  3136   002FFC  1038               	iorwf	(dtoa@n+4)^0,w,c
  3137   002FFE  1039               	iorwf	(dtoa@n+5)^0,w,c
  3138   003000  103A               	iorwf	(dtoa@n+6)^0,w,c
  3139   003002  103B               	iorwf	(dtoa@n+7)^0,w,c
  3140   003004  A4D8               	btfss	status,2,c
  3141   003006  EF07  F018         	goto	u2931
  3142   00300A  EF09  F018         	goto	u2930
  3143   00300E                     u2931:
  3144   00300E  EF71  F017         	goto	l3581
  3145   003012                     u2930:
  3146   003012  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3147   003014  EF16  F018         	goto	u2940
  3148   003018  5031               	movf	(dtoa@p+1)^0,w,c
  3149   00301A  E106               	bnz	u2941
  3150   00301C  0430               	decf	dtoa@p^0,w,c
  3151   00301E  B0D8               	btfsc	status,0,c
  3152   003020  EF14  F018         	goto	u2941
  3153   003024  EF16  F018         	goto	u2940
  3154   003028                     u2941:
  3155   003028  EF71  F017         	goto	l3581
  3156   00302C                     u2940:
  3157   00302C                     l3597:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3160   00302C  503E               	movf	dtoa@s^0,w,c
  3161   00302E  B4D8               	btfsc	status,2,c
  3162   003030  EF1C  F018         	goto	u2951
  3163   003034  EF1E  F018         	goto	u2950
  3164   003038                     u2951:
  3165   003038  EF29  F018         	goto	l3603
  3166   00303C                     u2950:
  3167   00303C                     
  3168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3169   00303C  063C               	decf	dtoa@i^0,f,c
  3170   00303E  A0D8               	btfss	status,0,c
  3171   003040  063D               	decf	(dtoa@i+1)^0,f,c
  3172   003042                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3174   003042  0E94               	movlw	low _dbuf
  3175   003044  243C               	addwf	dtoa@i^0,w,c
  3176   003046  6ED9               	movwf	fsr2l,c
  3177   003048  0E01               	movlw	high _dbuf
  3178   00304A  203D               	addwfc	(dtoa@i+1)^0,w,c
  3179   00304C  6EDA               	movwf	fsr2h,c
  3180   00304E  C03E  FFDF         	movff	dtoa@s,indf2
  3181   003052                     l3603:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3184   003052  C01C  F011         	movff	dtoa@fp,pad@fp
  3185   003056  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3186   00305A  0E94               	movlw	low _dbuf
  3187   00305C  243C               	addwf	dtoa@i^0,w,c
  3188   00305E  6E13               	movwf	pad@buf^0,c
  3189   003060  0E01               	movlw	high _dbuf
  3190   003062  203D               	addwfc	(dtoa@i+1)^0,w,c
  3191   003064  6E14               	movwf	(pad@buf+1)^0,c
  3192   003066  C032  F015         	movff	dtoa@w,pad@p
  3193   00306A  C033  F016         	movff	dtoa@w+1,pad@p+1
  3194   00306E  ECB0  F021         	call	_pad	;wreg free
  3195   003072  0012               	return		;funcret
  3196   003074                     __end_of_dtoa:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _pad *****************
  3200 ;; Defined at:
  3201 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3204 ;;		 -> sprintf@f(11), 
  3205 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3206 ;;		 -> dbuf(32), 
  3207 ;;  p               2   20[COMRAM] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  w               2   25[COMRAM] int 
  3210 ;;  i               2   23[COMRAM] int 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3220 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;Total ram usage:       11 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 4
  3227 ;; This function calls:
  3228 ;;		_fputc
  3229 ;;		_fputs
  3230 ;; This function is called by:
  3231 ;;		_dtoa
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text6
  3236   004360                     __ptext6:
  3237                           	callstack 0
  3238   004360                     _pad:
  3239                           	callstack 22
  3240   004360                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3242   004360  BE16               	btfsc	(pad@p+1)^0,7,c
  3243   004362  EFB5  F021         	goto	u2701
  3244   004366  EFB7  F021         	goto	u2700
  3245   00436A                     u2701:
  3246   00436A  EFBD  F021         	goto	l3461
  3247   00436E                     u2700:
  3248   00436E  C015  F01A         	movff	pad@p,pad@w
  3249   004372  C016  F01B         	movff	pad@p+1,pad@w+1
  3250   004376  EFC1  F021         	goto	l1413
  3251   00437A                     l3461:
  3252   00437A  0E00               	movlw	0
  3253   00437C  6E1B               	movwf	(pad@w+1)^0,c
  3254   00437E  0E00               	movlw	0
  3255   004380  6E1A               	movwf	pad@w^0,c
  3256   004382                     l1413:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3259   004382  0E00               	movlw	0
  3260   004384  6E19               	movwf	(pad@i+1)^0,c
  3261   004386  0E00               	movlw	0
  3262   004388  6E18               	movwf	pad@i^0,c
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3265   00438A  EFD3  F021         	goto	l3467
  3266   00438E                     l3463:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3269   00438E  0E00               	movlw	0
  3270   004390  6E02               	movwf	(fputc@c+1)^0,c
  3271   004392  0E20               	movlw	32
  3272   004394  6E01               	movwf	fputc@c^0,c
  3273   004396  C011  F003         	movff	pad@fp,fputc@fp
  3274   00439A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3275   00439E  EC63  F01E         	call	_fputc	;wreg free
  3276   0043A2                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3278   0043A2  4A18               	infsnz	pad@i^0,f,c
  3279   0043A4  2A19               	incf	(pad@i+1)^0,f,c
  3280   0043A6                     l3467:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3283   0043A6  501A               	movf	pad@w^0,w,c
  3284   0043A8  5C18               	subwf	pad@i^0,w,c
  3285   0043AA  5019               	movf	(pad@i+1)^0,w,c
  3286   0043AC  0A80               	xorlw	128
  3287   0043AE  6E17               	movwf	??_pad^0,c
  3288   0043B0  501B               	movf	(pad@w+1)^0,w,c
  3289   0043B2  0A80               	xorlw	128
  3290   0043B4  5817               	subwfb	??_pad^0,w,c
  3291   0043B6  A0D8               	btfss	status,0,c
  3292   0043B8  EFE0  F021         	goto	u2711
  3293   0043BC  EFE2  F021         	goto	u2710
  3294   0043C0                     u2711:
  3295   0043C0  EFC7  F021         	goto	l3463
  3296   0043C4                     u2710:
  3297   0043C4                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3299   0043C4  C013  F00A         	movff	pad@buf,fputs@s
  3300   0043C8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3301   0043CC  C011  F00C         	movff	pad@fp,fputs@fp
  3302   0043D0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3303   0043D4  EC6B  F025         	call	_fputs	;wreg free
  3304   0043D8  0012               	return		;funcret
  3305   0043DA                     __end_of_pad:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _fputs *****************
  3309 ;; Defined at:
  3310 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3313 ;;		 -> dbuf(32), 
  3314 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3315 ;;		 -> sprintf@f(11), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  i               2   14[COMRAM] int 
  3318 ;;  c               1   13[COMRAM] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2    9[COMRAM] int 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;Total ram usage:        7 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 3
  3335 ;; This function calls:
  3336 ;;		_fputc
  3337 ;; This function is called by:
  3338 ;;		_pad
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text7
  3343   004AD6                     __ptext7:
  3344                           	callstack 0
  3345   004AD6                     _fputs:
  3346                           	callstack 22
  3347   004AD6  0E00               	movlw	0
  3348   004AD8  6E10               	movwf	(fputs@i+1)^0,c
  3349   004ADA  0E00               	movlw	0
  3350   004ADC  6E0F               	movwf	fputs@i^0,c
  3351   004ADE  EF7C  F025         	goto	l3359
  3352   004AE2                     l3355:
  3353   004AE2  C00E  F001         	movff	fputs@c,fputc@c
  3354   004AE6  6A02               	clrf	(fputc@c+1)^0,c
  3355   004AE8  C00C  F003         	movff	fputs@fp,fputc@fp
  3356   004AEC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3357   004AF0  EC63  F01E         	call	_fputc	;wreg free
  3358   004AF4  4A0F               	infsnz	fputs@i^0,f,c
  3359   004AF6  2A10               	incf	(fputs@i+1)^0,f,c
  3360   004AF8                     l3359:
  3361   004AF8  500F               	movf	fputs@i^0,w,c
  3362   004AFA  240A               	addwf	fputs@s^0,w,c
  3363   004AFC  6ED9               	movwf	fsr2l,c
  3364   004AFE  5010               	movf	(fputs@i+1)^0,w,c
  3365   004B00  200B               	addwfc	(fputs@s+1)^0,w,c
  3366   004B02  6EDA               	movwf	fsr2h,c
  3367   004B04  50DF               	movf	indf2,w,c
  3368   004B06  6E0E               	movwf	fputs@c^0,c
  3369   004B08  500E               	movf	fputs@c^0,w,c
  3370   004B0A  A4D8               	btfss	status,2,c
  3371   004B0C  EF8A  F025         	goto	u2541
  3372   004B10  EF8C  F025         	goto	u2540
  3373   004B14                     u2541:
  3374   004B14  EF71  F025         	goto	l3355
  3375   004B18                     u2540:
  3376   004B18  0012               	return		;funcret
  3377   004B1A                     __end_of_fputs:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _fputc *****************
  3381 ;; Defined at:
  3382 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  c               2    0[COMRAM] int 
  3385 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3386 ;;		 -> sprintf@f(11), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  2    0[COMRAM] int 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;Total ram usage:        9 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 2
  3405 ;; This function calls:
  3406 ;;		_putch
  3407 ;; This function is called by:
  3408 ;;		_pad
  3409 ;;		_vfpfcnvrt
  3410 ;;		_fputs
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text8
  3415   003CC6                     __ptext8:
  3416                           	callstack 0
  3417   003CC6                     _fputc:
  3418                           	callstack 25
  3419   003CC6  5003               	movf	fputc@fp^0,w,c
  3420   003CC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  3421   003CCA  B4D8               	btfsc	status,2,c
  3422   003CCC  EF6A  F01E         	goto	u2471
  3423   003CD0  EF6C  F01E         	goto	u2470
  3424   003CD4                     u2471:
  3425   003CD4  EF75  F01E         	goto	l3315
  3426   003CD8                     u2470:
  3427   003CD8  5003               	movf	fputc@fp^0,w,c
  3428   003CDA  1004               	iorwf	(fputc@fp+1)^0,w,c
  3429   003CDC  A4D8               	btfss	status,2,c
  3430   003CDE  EF73  F01E         	goto	u2481
  3431   003CE2  EF75  F01E         	goto	u2480
  3432   003CE6                     u2481:
  3433   003CE6  EF7A  F01E         	goto	l3317
  3434   003CEA                     u2480:
  3435   003CEA                     l3315:
  3436   003CEA  5001               	movf	fputc@c^0,w,c
  3437   003CEC  EC3D  F027         	call	_putch
  3438   003CF0  EFC7  F01E         	goto	l1468
  3439   003CF4                     l3317:
  3440   003CF4  EE20 F009          	lfsr	2,9
  3441   003CF8  5003               	movf	fputc@fp^0,w,c
  3442   003CFA  26D9               	addwf	fsr2l,f,c
  3443   003CFC  5004               	movf	(fputc@fp+1)^0,w,c
  3444   003CFE  22DA               	addwfc	fsr2h,f,c
  3445   003D00  50DE               	movf	postinc2,w,c
  3446   003D02  10DE               	iorwf	postinc2,w,c
  3447   003D04  B4D8               	btfsc	status,2,c
  3448   003D06  EF87  F01E         	goto	u2491
  3449   003D0A  EF89  F01E         	goto	u2490
  3450   003D0E                     u2491:
  3451   003D0E  EFA4  F01E         	goto	l3321
  3452   003D12                     u2490:
  3453   003D12  EE20 F009          	lfsr	2,9
  3454   003D16  5003               	movf	fputc@fp^0,w,c
  3455   003D18  26D9               	addwf	fsr2l,f,c
  3456   003D1A  5004               	movf	(fputc@fp+1)^0,w,c
  3457   003D1C  22DA               	addwfc	fsr2h,f,c
  3458   003D1E  EE10 F003          	lfsr	1,3
  3459   003D22  5003               	movf	fputc@fp^0,w,c
  3460   003D24  26E1               	addwf	fsr1l,f,c
  3461   003D26  5004               	movf	(fputc@fp+1)^0,w,c
  3462   003D28  22E2               	addwfc	fsr1h,f,c
  3463   003D2A  50DE               	movf	postinc2,w,c
  3464   003D2C  5CE6               	subwf	postinc1,w,c
  3465   003D2E  50E6               	movf	postinc1,w,c
  3466   003D30  0A80               	xorlw	128
  3467   003D32  6E09               	movwf	(??_fputc+4)^0,c
  3468   003D34  50DE               	movf	postinc2,w,c
  3469   003D36  0A80               	xorlw	128
  3470   003D38  5809               	subwfb	(??_fputc+4)^0,w,c
  3471   003D3A  B0D8               	btfsc	status,0,c
  3472   003D3C  EFA2  F01E         	goto	u2501
  3473   003D40  EFA4  F01E         	goto	u2500
  3474   003D44                     u2501:
  3475   003D44  EFC7  F01E         	goto	l1468
  3476   003D48                     u2500:
  3477   003D48                     l3321:
  3478   003D48  EE20 F003          	lfsr	2,3
  3479   003D4C  5003               	movf	fputc@fp^0,w,c
  3480   003D4E  26D9               	addwf	fsr2l,f,c
  3481   003D50  5004               	movf	(fputc@fp+1)^0,w,c
  3482   003D52  22DA               	addwfc	fsr2h,f,c
  3483   003D54  CFDE F005          	movff	postinc2,??_fputc
  3484   003D58  CFDD F006          	movff	postdec2,??_fputc+1
  3485   003D5C  C003  FFD9         	movff	fputc@fp,fsr2l
  3486   003D60  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3487   003D64  CFDE F007          	movff	postinc2,??_fputc+2
  3488   003D68  CFDD F008          	movff	postdec2,??_fputc+3
  3489   003D6C  5005               	movf	??_fputc^0,w,c
  3490   003D6E  2407               	addwf	(??_fputc+2)^0,w,c
  3491   003D70  6ED9               	movwf	fsr2l,c
  3492   003D72  5006               	movf	(??_fputc+1)^0,w,c
  3493   003D74  2008               	addwfc	(??_fputc+3)^0,w,c
  3494   003D76  6EDA               	movwf	fsr2h,c
  3495   003D78  C001  FFDF         	movff	fputc@c,indf2
  3496   003D7C  EE20 F003          	lfsr	2,3
  3497   003D80  5003               	movf	fputc@fp^0,w,c
  3498   003D82  26D9               	addwf	fsr2l,f,c
  3499   003D84  5004               	movf	(fputc@fp+1)^0,w,c
  3500   003D86  22DA               	addwfc	fsr2h,f,c
  3501   003D88  2ADE               	incf	postinc2,f,c
  3502   003D8A  0E00               	movlw	0
  3503   003D8C  22DD               	addwfc	postdec2,f,c
  3504   003D8E                     l1468:
  3505   003D8E  0012               	return		;funcret
  3506   003D90                     __end_of_fputc:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _putch *****************
  3510 ;; Defined at:
  3511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  c               1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  c               1    0[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;Total ram usage:        0 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_fputc
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text9
  3540   004E7A                     __ptext9:
  3541                           	callstack 0
  3542   004E7A                     _putch:
  3543                           	callstack 25
  3544   004E7A  0012               	return		;funcret
  3545   004E7C                     __end_of_putch:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function _abs *****************
  3549 ;; Defined at:
  3550 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  a               2   18[COMRAM] int 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  2   18[COMRAM] int 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;Total ram usage:        4 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_dtoa
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text10
  3579   004B5C                     __ptext10:
  3580                           	callstack 0
  3581   004B5C                     _abs:
  3582                           	callstack 25
  3583   004B5C  BE14               	btfsc	(abs@a+1)^0,7,c
  3584   004B5E  EFBB  F025         	goto	u2720
  3585   004B62  5014               	movf	(abs@a+1)^0,w,c
  3586   004B64  E106               	bnz	u2721
  3587   004B66  0413               	decf	abs@a^0,w,c
  3588   004B68  B0D8               	btfsc	status,0,c
  3589   004B6A  EFB9  F025         	goto	u2721
  3590   004B6E  EFBB  F025         	goto	u2720
  3591   004B72                     u2721:
  3592   004B72  EFC9  F025         	goto	l1453
  3593   004B76                     u2720:
  3594   004B76  C013  F015         	movff	abs@a,??_abs
  3595   004B7A  C014  F016         	movff	abs@a+1,??_abs+1
  3596   004B7E  1E15               	comf	??_abs^0,f,c
  3597   004B80  1E16               	comf	(??_abs+1)^0,f,c
  3598   004B82  4A15               	infsnz	??_abs^0,f,c
  3599   004B84  2A16               	incf	(??_abs+1)^0,f,c
  3600   004B86  C015  F013         	movff	??_abs,?_abs
  3601   004B8A  C016  F014         	movff	??_abs+1,?_abs+1
  3602   004B8E  EFCD  F025         	goto	l1456
  3603   004B92                     l1453:
  3604   004B92  C013  F013         	movff	abs@a,?_abs
  3605   004B96  C014  F014         	movff	abs@a+1,?_abs+1
  3606   004B9A                     l1456:
  3607   004B9A  0012               	return		;funcret
  3608   004B9C                     __end_of_abs:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function ___aomod *****************
  3612 ;; Defined at:
  3613 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  dividend        8    0[COMRAM] long long 
  3616 ;;  divisor         8    8[COMRAM] long long 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  sign            1   17[COMRAM] unsigned char 
  3619 ;;  counter         1   16[COMRAM] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  8    0[COMRAM] long long 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3629 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;Total ram usage:       18 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_dtoa
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text11
  3644   003910                     __ptext11:
  3645                           	callstack 0
  3646   003910                     ___aomod:
  3647                           	callstack 25
  3648   003910  0E00               	movlw	0
  3649   003912  6E12               	movwf	___aomod@sign^0,c
  3650   003914  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3651   003916  EF91  F01C         	goto	u2640
  3652   00391A  EF8F  F01C         	goto	u2641
  3653   00391E                     u2641:
  3654   00391E  EFA3  F01C         	goto	l3429
  3655   003922                     u2640:
  3656   003922  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3657   003924  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3658   003926  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3659   003928  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3660   00392A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3661   00392C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3662   00392E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3663   003930  6C01               	negf	___aomod@dividend^0,c
  3664   003932  0E00               	movlw	0
  3665   003934  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3666   003936  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3667   003938  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3668   00393A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3669   00393C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3670   00393E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3671   003940  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3672   003942  0E01               	movlw	1
  3673   003944  6E12               	movwf	___aomod@sign^0,c
  3674   003946                     l3429:
  3675   003946  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3676   003948  EFAA  F01C         	goto	u2650
  3677   00394C  EFA8  F01C         	goto	u2651
  3678   003950                     u2651:
  3679   003950  EFBA  F01C         	goto	l3433
  3680   003954                     u2650:
  3681   003954  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3682   003956  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3683   003958  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3684   00395A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3685   00395C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3686   00395E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3687   003960  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3688   003962  6C09               	negf	___aomod@divisor^0,c
  3689   003964  0E00               	movlw	0
  3690   003966  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3691   003968  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3692   00396A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3693   00396C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3694   00396E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3695   003970  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3696   003972  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3697   003974                     l3433:
  3698   003974  5009               	movf	___aomod@divisor^0,w,c
  3699   003976  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3700   003978  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3701   00397A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3702   00397C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3703   00397E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3704   003980  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3705   003982  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3706   003984  B4D8               	btfsc	status,2,c
  3707   003986  EFC7  F01C         	goto	u2661
  3708   00398A  EFC9  F01C         	goto	u2660
  3709   00398E                     u2661:
  3710   00398E  EF11  F01D         	goto	l3449
  3711   003992                     u2660:
  3712   003992  0E01               	movlw	1
  3713   003994  6E11               	movwf	___aomod@counter^0,c
  3714   003996  EFD7  F01C         	goto	l3439
  3715   00399A                     l3437:
  3716   00399A  90D8               	bcf	status,0,c
  3717   00399C  3609               	rlcf	___aomod@divisor^0,f,c
  3718   00399E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3719   0039A0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3720   0039A2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3721   0039A4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3722   0039A6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3723   0039A8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3724   0039AA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3725   0039AC  2A11               	incf	___aomod@counter^0,f,c
  3726   0039AE                     l3439:
  3727   0039AE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3728   0039B0  EFDC  F01C         	goto	u2671
  3729   0039B4  EFDE  F01C         	goto	u2670
  3730   0039B8                     u2671:
  3731   0039B8  EFCD  F01C         	goto	l3437
  3732   0039BC                     u2670:
  3733   0039BC                     l3441:
  3734   0039BC  5009               	movf	___aomod@divisor^0,w,c
  3735   0039BE  5C01               	subwf	___aomod@dividend^0,w,c
  3736   0039C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  3737   0039C2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3738   0039C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  3739   0039C6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3740   0039C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  3741   0039CA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3742   0039CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  3743   0039CE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3744   0039D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  3745   0039D2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3746   0039D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  3747   0039D6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3748   0039D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  3749   0039DA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3750   0039DC  A0D8               	btfss	status,0,c
  3751   0039DE  EFF3  F01C         	goto	u2681
  3752   0039E2  EFF5  F01C         	goto	u2680
  3753   0039E6                     u2681:
  3754   0039E6  EF05  F01D         	goto	l3445
  3755   0039EA                     u2680:
  3756   0039EA  5009               	movf	___aomod@divisor^0,w,c
  3757   0039EC  5E01               	subwf	___aomod@dividend^0,f,c
  3758   0039EE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3759   0039F0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3760   0039F2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3761   0039F4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3762   0039F6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3763   0039F8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3764   0039FA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3765   0039FC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3766   0039FE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3767   003A00  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3768   003A02  500F               	movf	(___aomod@divisor+6)^0,w,c
  3769   003A04  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3770   003A06  5010               	movf	(___aomod@divisor+7)^0,w,c
  3771   003A08  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3772   003A0A                     l3445:
  3773   003A0A  90D8               	bcf	status,0,c
  3774   003A0C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3775   003A0E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3776   003A10  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3777   003A12  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3778   003A14  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3779   003A16  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3780   003A18  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3781   003A1A  3209               	rrcf	___aomod@divisor^0,f,c
  3782   003A1C  2E11               	decfsz	___aomod@counter^0,f,c
  3783   003A1E  EFDE  F01C         	goto	l3441
  3784   003A22                     l3449:
  3785   003A22  5012               	movf	___aomod@sign^0,w,c
  3786   003A24  B4D8               	btfsc	status,2,c
  3787   003A26  EF17  F01D         	goto	u2691
  3788   003A2A  EF19  F01D         	goto	u2690
  3789   003A2E                     u2691:
  3790   003A2E  EF29  F01D         	goto	l3453
  3791   003A32                     u2690:
  3792   003A32  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3793   003A34  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3794   003A36  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3795   003A38  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3796   003A3A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3797   003A3C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3798   003A3E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3799   003A40  6C01               	negf	___aomod@dividend^0,c
  3800   003A42  0E00               	movlw	0
  3801   003A44  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3802   003A46  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3803   003A48  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3804   003A4A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3805   003A4C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3806   003A4E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3807   003A50  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3808   003A52                     l3453:
  3809   003A52  C001  F001         	movff	___aomod@dividend,?___aomod
  3810   003A56  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3811   003A5A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3812   003A5E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3813   003A62  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3814   003A66  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3815   003A6A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3816   003A6E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3817   003A72  0012               	return		;funcret
  3818   003A74                     __end_of___aomod:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function ___aodiv *****************
  3822 ;; Defined at:
  3823 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  dividend        8    0[COMRAM] long long 
  3826 ;;  divisor         8    8[COMRAM] long long 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  quotient        8   18[COMRAM] long long 
  3829 ;;  sign            1   17[COMRAM] unsigned char 
  3830 ;;  counter         1   16[COMRAM] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  8    0[COMRAM] long long 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3840 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;Total ram usage:       26 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_dtoa
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text12
  3855   00361C                     __ptext12:
  3856                           	callstack 0
  3857   00361C                     ___aodiv:
  3858                           	callstack 25
  3859   00361C  0E00               	movlw	0
  3860   00361E  6E12               	movwf	___aodiv@sign^0,c
  3861   003620  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3862   003622  EF17  F01B         	goto	u2570
  3863   003626  EF15  F01B         	goto	u2571
  3864   00362A                     u2571:
  3865   00362A  EF29  F01B         	goto	l3385
  3866   00362E                     u2570:
  3867   00362E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3868   003630  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3869   003632  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3870   003634  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3871   003636  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3872   003638  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3873   00363A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3874   00363C  6C09               	negf	___aodiv@divisor^0,c
  3875   00363E  0E00               	movlw	0
  3876   003640  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3877   003642  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3878   003644  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3879   003646  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3880   003648  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3881   00364A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3882   00364C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3883   00364E  0E01               	movlw	1
  3884   003650  6E12               	movwf	___aodiv@sign^0,c
  3885   003652                     l3385:
  3886   003652  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3887   003654  EF30  F01B         	goto	u2580
  3888   003658  EF2E  F01B         	goto	u2581
  3889   00365C                     u2581:
  3890   00365C  EF42  F01B         	goto	l3391
  3891   003660                     u2580:
  3892   003660  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3893   003662  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3894   003664  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3895   003666  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3896   003668  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3897   00366A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3898   00366C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3899   00366E  6C01               	negf	___aodiv@dividend^0,c
  3900   003670  0E00               	movlw	0
  3901   003672  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3902   003674  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3903   003676  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3904   003678  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3905   00367A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3906   00367C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3907   00367E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3908   003680  0E01               	movlw	1
  3909   003682  1A12               	xorwf	___aodiv@sign^0,f,c
  3910   003684                     l3391:
  3911   003684  EE20  F013         	lfsr	2,___aodiv@quotient
  3912   003688  0E07               	movlw	7
  3913   00368A                     u2591:
  3914   00368A  6ADE               	clrf	postinc2,c
  3915   00368C  06E8               	decf	wreg,f,c
  3916   00368E  E2FD               	bc	u2591
  3917   003690  5009               	movf	___aodiv@divisor^0,w,c
  3918   003692  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3919   003694  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3920   003696  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3921   003698  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3922   00369A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3923   00369C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3924   00369E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3925   0036A0  B4D8               	btfsc	status,2,c
  3926   0036A2  EF55  F01B         	goto	u2601
  3927   0036A6  EF57  F01B         	goto	u2600
  3928   0036AA                     u2601:
  3929   0036AA  EFA9  F01B         	goto	l3413
  3930   0036AE                     u2600:
  3931   0036AE  0E01               	movlw	1
  3932   0036B0  6E11               	movwf	___aodiv@counter^0,c
  3933   0036B2  EF65  F01B         	goto	l3399
  3934   0036B6                     l3397:
  3935   0036B6  90D8               	bcf	status,0,c
  3936   0036B8  3609               	rlcf	___aodiv@divisor^0,f,c
  3937   0036BA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3938   0036BC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3939   0036BE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3940   0036C0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3941   0036C2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3942   0036C4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3943   0036C6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3944   0036C8  2A11               	incf	___aodiv@counter^0,f,c
  3945   0036CA                     l3399:
  3946   0036CA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3947   0036CC  EF6A  F01B         	goto	u2611
  3948   0036D0  EF6C  F01B         	goto	u2610
  3949   0036D4                     u2611:
  3950   0036D4  EF5B  F01B         	goto	l3397
  3951   0036D8                     u2610:
  3952   0036D8                     l3401:
  3953   0036D8  90D8               	bcf	status,0,c
  3954   0036DA  3613               	rlcf	___aodiv@quotient^0,f,c
  3955   0036DC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3956   0036DE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3957   0036E0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3958   0036E2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3959   0036E4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3960   0036E6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3961   0036E8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3962   0036EA  5009               	movf	___aodiv@divisor^0,w,c
  3963   0036EC  5C01               	subwf	___aodiv@dividend^0,w,c
  3964   0036EE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3965   0036F0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3966   0036F2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3967   0036F4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3968   0036F6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3969   0036F8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3970   0036FA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3971   0036FC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3972   0036FE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3973   003700  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3974   003702  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3975   003704  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3976   003706  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3977   003708  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3978   00370A  A0D8               	btfss	status,0,c
  3979   00370C  EF8A  F01B         	goto	u2621
  3980   003710  EF8C  F01B         	goto	u2620
  3981   003714                     u2621:
  3982   003714  EF9D  F01B         	goto	l3409
  3983   003718                     u2620:
  3984   003718  5009               	movf	___aodiv@divisor^0,w,c
  3985   00371A  5E01               	subwf	___aodiv@dividend^0,f,c
  3986   00371C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3987   00371E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3988   003720  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3989   003722  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3990   003724  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3991   003726  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3992   003728  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3993   00372A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3994   00372C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3995   00372E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3996   003730  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3997   003732  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3998   003734  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3999   003736  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4000   003738  8013               	bsf	___aodiv@quotient^0,0,c
  4001   00373A                     l3409:
  4002   00373A  90D8               	bcf	status,0,c
  4003   00373C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4004   00373E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4005   003740  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4006   003742  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4007   003744  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4008   003746  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4009   003748  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4010   00374A  3209               	rrcf	___aodiv@divisor^0,f,c
  4011   00374C  2E11               	decfsz	___aodiv@counter^0,f,c
  4012   00374E  EF6C  F01B         	goto	l3401
  4013   003752                     l3413:
  4014   003752  5012               	movf	___aodiv@sign^0,w,c
  4015   003754  B4D8               	btfsc	status,2,c
  4016   003756  EFAF  F01B         	goto	u2631
  4017   00375A  EFB1  F01B         	goto	u2630
  4018   00375E                     u2631:
  4019   00375E  EFC1  F01B         	goto	l3417
  4020   003762                     u2630:
  4021   003762  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4022   003764  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4023   003766  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4024   003768  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4025   00376A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4026   00376C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4027   00376E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4028   003770  6C13               	negf	___aodiv@quotient^0,c
  4029   003772  0E00               	movlw	0
  4030   003774  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4031   003776  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4032   003778  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4033   00377A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4034   00377C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4035   00377E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4036   003780  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4037   003782                     l3417:
  4038   003782  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4039   003786  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4040   00378A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4041   00378E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4042   003792  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4043   003796  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4044   00379A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4045   00379E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4046   0037A2  0012               	return		;funcret
  4047   0037A4                     __end_of___aodiv:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _sendStringSerial4 *****************
  4051 ;; Defined at:
  4052 ;;		line 33 in file "serial.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  string          2    1[COMRAM] PTR unsigned char 
  4055 ;;		 -> main@buf(100), 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;Total ram usage:        2 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 2
  4074 ;; This function calls:
  4075 ;;		_sendCharSerial4
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text13
  4082   004D02                     __ptext13:
  4083                           	callstack 0
  4084   004D02                     _sendStringSerial4:
  4085                           	callstack 28
  4086   004D02                     
  4087                           ;serial.c: 34:     while (*string!=0){
  4088   004D02  EF8C  F026         	goto	l4599
  4089   004D06                     l4595:
  4090                           
  4091                           ;serial.c: 35:         sendCharSerial4(*string++);
  4092   004D06  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4093   004D0A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4094   004D0E  50DF               	movf	indf2,w,c
  4095   004D10  EC17  F027         	call	_sendCharSerial4
  4096   004D14  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4097   004D16  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4098   004D18                     l4599:
  4099                           
  4100                           ;serial.c: 34:     while (*string!=0){
  4101   004D18  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4102   004D1C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4103   004D20  50DF               	movf	indf2,w,c
  4104   004D22  A4D8               	btfss	status,2,c
  4105   004D24  EF96  F026         	goto	u4381
  4106   004D28  EF98  F026         	goto	u4380
  4107   004D2C                     u4381:
  4108   004D2C  EF83  F026         	goto	l4595
  4109   004D30                     u4380:
  4110   004D30  0012               	return		;funcret
  4111   004D32                     __end_of_sendStringSerial4:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _sendCharSerial4 *****************
  4115 ;; Defined at:
  4116 ;;		line 26 in file "serial.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  charToSend      1    wreg     unsigned char 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  charToSend      1    0[COMRAM] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;Total ram usage:        1 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_sendStringSerial4
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text14
  4145   004E2E                     __ptext14:
  4146                           	callstack 0
  4147   004E2E                     _sendCharSerial4:
  4148                           	callstack 28
  4149                           
  4150                           ;incstack = 0
  4151                           ;sendCharSerial4@charToSend stored from wreg
  4152   004E2E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4153   004E30                     l209:
  4154   004E30  010E               	movlb	14	; () banked
  4155   004E32  A537               	btfss	55,2,b	;volatile
  4156   004E34  EF1E  F027         	goto	u3411
  4157   004E38  EF20  F027         	goto	u3410
  4158   004E3C                     u3411:
  4159   004E3C  EF18  F027         	goto	l209
  4160   004E40                     u3410:
  4161   004E40                     
  4162                           ; BSR set to: 14
  4163                           ;serial.c: 28:     TX4REG = charToSend;
  4164   004E40  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4165   004E44                     
  4166                           ; BSR set to: 14
  4167   004E44  0012               	return		;funcret
  4168   004E46                     __end_of_sendCharSerial4:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _readColours *****************
  4172 ;; Defined at:
  4173 ;;		line 105 in file "color.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  vals            2   11[COMRAM] PTR struct RGB
  4176 ;;		 -> vals(8), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;Total ram usage:        2 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 4
  4195 ;; This function calls:
  4196 ;;		_color_read_Blue
  4197 ;;		_color_read_Green
  4198 ;;		_color_read_Red
  4199 ;;		_color_read_lum
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text15
  4206   0044B4                     __ptext15:
  4207                           	callstack 0
  4208   0044B4                     _readColours:
  4209                           	callstack 26
  4210   0044B4                     
  4211                           ;color.c: 107:     vals ->R = color_read_Red();
  4212   0044B4  EC5B  F024         	call	_color_read_Red	;wreg free
  4213   0044B8  C00C  FFD9         	movff	readColours@vals,fsr2l
  4214   0044BC  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  4215   0044C0  C005  FFDE         	movff	?_color_read_Red,postinc2
  4216   0044C4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4217                           
  4218                           ;color.c: 108:     vals ->B = color_read_Blue();
  4219   0044C8  ECAB  F024         	call	_color_read_Blue	;wreg free
  4220   0044CC  EE20 F004          	lfsr	2,4
  4221   0044D0  500C               	movf	readColours@vals^0,w,c
  4222   0044D2  26D9               	addwf	fsr2l,f,c
  4223   0044D4  500D               	movf	(readColours@vals+1)^0,w,c
  4224   0044D6  22DA               	addwfc	fsr2h,f,c
  4225   0044D8  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4226   0044DC  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4227                           
  4228                           ;color.c: 109:     vals ->G = color_read_Green();
  4229   0044E0  EC83  F024         	call	_color_read_Green	;wreg free
  4230   0044E4  EE20 F002          	lfsr	2,2
  4231   0044E8  500C               	movf	readColours@vals^0,w,c
  4232   0044EA  26D9               	addwf	fsr2l,f,c
  4233   0044EC  500D               	movf	(readColours@vals+1)^0,w,c
  4234   0044EE  22DA               	addwfc	fsr2h,f,c
  4235   0044F0  C005  FFDE         	movff	?_color_read_Green,postinc2
  4236   0044F4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4237                           
  4238                           ;color.c: 110:     vals ->L = color_read_lum();
  4239   0044F8  EC33  F024         	call	_color_read_lum	;wreg free
  4240   0044FC  EE20 F006          	lfsr	2,6
  4241   004500  500C               	movf	readColours@vals^0,w,c
  4242   004502  26D9               	addwf	fsr2l,f,c
  4243   004504  500D               	movf	(readColours@vals+1)^0,w,c
  4244   004506  22DA               	addwfc	fsr2h,f,c
  4245   004508  C005  FFDE         	movff	?_color_read_lum,postinc2
  4246   00450C  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  4247   004510  0012               	return		;funcret
  4248   004512                     __end_of_readColours:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _color_read_lum *****************
  4252 ;; Defined at:
  4253 ;;		line 49 in file "color.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  tmp             2    9[COMRAM] unsigned int 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    4[COMRAM] unsigned int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;Total ram usage:        7 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 3
  4274 ;; This function calls:
  4275 ;;		_I2C_2_Master_Read
  4276 ;;		_I2C_2_Master_RepStart
  4277 ;;		_I2C_2_Master_Start
  4278 ;;		_I2C_2_Master_Stop
  4279 ;;		_I2C_2_Master_Write
  4280 ;; This function is called by:
  4281 ;;		_readColours
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text16
  4286   004866                     __ptext16:
  4287                           	callstack 0
  4288   004866                     _color_read_lum:
  4289                           	callstack 26
  4290   004866                     
  4291                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  4292   004866  EC33  F027         	call	_I2C_2_Master_Start	;wreg free
  4293                           
  4294                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  4295   00486A  0E52               	movlw	82
  4296   00486C  EC23  F027         	call	_I2C_2_Master_Write
  4297                           
  4298                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  4299   004870  0EB4               	movlw	180
  4300   004872  EC23  F027         	call	_I2C_2_Master_Write
  4301                           
  4302                           ;color.c: 55:  I2C_2_Master_RepStart();
  4303   004876  EC29  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4304                           
  4305                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4306   00487A  0E53               	movlw	83
  4307   00487C  EC23  F027         	call	_I2C_2_Master_Write
  4308                           
  4309                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4310   004880  0E01               	movlw	1
  4311   004882  EC8D  F025         	call	_I2C_2_Master_Read
  4312   004886  6E07               	movwf	??_color_read_lum^0,c
  4313   004888  5007               	movf	??_color_read_lum^0,w,c
  4314   00488A  6E0A               	movwf	color_read_lum@tmp^0,c
  4315   00488C  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  4316                           
  4317                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4318   00488E  0E00               	movlw	0
  4319   004890  EC8D  F025         	call	_I2C_2_Master_Read
  4320   004894  6E07               	movwf	??_color_read_lum^0,c
  4321   004896  5007               	movf	??_color_read_lum^0,w,c
  4322   004898  6E09               	movwf	(??_color_read_lum+2)^0,c
  4323   00489A  6A08               	clrf	(??_color_read_lum+1)^0,c
  4324   00489C  500A               	movf	color_read_lum@tmp^0,w,c
  4325   00489E  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  4326   0048A0  6E0A               	movwf	color_read_lum@tmp^0,c
  4327   0048A2  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  4328   0048A4  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  4329   0048A6  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  4330                           
  4331                           ;color.c: 59:  I2C_2_Master_Stop();
  4332   0048A8  EC2E  F027         	call	_I2C_2_Master_Stop	;wreg free
  4333   0048AC                     
  4334                           ;color.c: 60:  return tmp;
  4335   0048AC  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  4336   0048B0  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  4337   0048B4  0012               	return		;funcret
  4338   0048B6                     __end_of_color_read_lum:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _color_read_Red *****************
  4342 ;; Defined at:
  4343 ;;		line 63 in file "color.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  tmp             2    9[COMRAM] unsigned int 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    4[COMRAM] unsigned int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;Total ram usage:        7 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 3
  4364 ;; This function calls:
  4365 ;;		_I2C_2_Master_Read
  4366 ;;		_I2C_2_Master_RepStart
  4367 ;;		_I2C_2_Master_Start
  4368 ;;		_I2C_2_Master_Stop
  4369 ;;		_I2C_2_Master_Write
  4370 ;; This function is called by:
  4371 ;;		_readColours
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text17
  4376   0048B6                     __ptext17:
  4377                           	callstack 0
  4378   0048B6                     _color_read_Red:
  4379                           	callstack 26
  4380   0048B6                     
  4381                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4382   0048B6  EC33  F027         	call	_I2C_2_Master_Start	;wreg free
  4383                           
  4384                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4385   0048BA  0E52               	movlw	82
  4386   0048BC  EC23  F027         	call	_I2C_2_Master_Write
  4387                           
  4388                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  4389   0048C0  0EB6               	movlw	182
  4390   0048C2  EC23  F027         	call	_I2C_2_Master_Write
  4391                           
  4392                           ;color.c: 69:  I2C_2_Master_RepStart();
  4393   0048C6  EC29  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4394                           
  4395                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4396   0048CA  0E53               	movlw	83
  4397   0048CC  EC23  F027         	call	_I2C_2_Master_Write
  4398                           
  4399                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4400   0048D0  0E01               	movlw	1
  4401   0048D2  EC8D  F025         	call	_I2C_2_Master_Read
  4402   0048D6  6E07               	movwf	??_color_read_Red^0,c
  4403   0048D8  5007               	movf	??_color_read_Red^0,w,c
  4404   0048DA  6E0A               	movwf	color_read_Red@tmp^0,c
  4405   0048DC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4406                           
  4407                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4408   0048DE  0E00               	movlw	0
  4409   0048E0  EC8D  F025         	call	_I2C_2_Master_Read
  4410   0048E4  6E07               	movwf	??_color_read_Red^0,c
  4411   0048E6  5007               	movf	??_color_read_Red^0,w,c
  4412   0048E8  6E09               	movwf	(??_color_read_Red+2)^0,c
  4413   0048EA  6A08               	clrf	(??_color_read_Red+1)^0,c
  4414   0048EC  500A               	movf	color_read_Red@tmp^0,w,c
  4415   0048EE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4416   0048F0  6E0A               	movwf	color_read_Red@tmp^0,c
  4417   0048F2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4418   0048F4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4419   0048F6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4420                           
  4421                           ;color.c: 73:  I2C_2_Master_Stop();
  4422   0048F8  EC2E  F027         	call	_I2C_2_Master_Stop	;wreg free
  4423   0048FC                     
  4424                           ;color.c: 74:  return tmp;
  4425   0048FC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4426   004900  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4427   004904  0012               	return		;funcret
  4428   004906                     __end_of_color_read_Red:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _color_read_Green *****************
  4432 ;; Defined at:
  4433 ;;		line 76 in file "color.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  tmp             2    9[COMRAM] unsigned int 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2    4[COMRAM] unsigned int 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;Total ram usage:        7 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 3
  4454 ;; This function calls:
  4455 ;;		_I2C_2_Master_Read
  4456 ;;		_I2C_2_Master_RepStart
  4457 ;;		_I2C_2_Master_Start
  4458 ;;		_I2C_2_Master_Stop
  4459 ;;		_I2C_2_Master_Write
  4460 ;; This function is called by:
  4461 ;;		_readColours
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text18
  4466   004906                     __ptext18:
  4467                           	callstack 0
  4468   004906                     _color_read_Green:
  4469                           	callstack 26
  4470   004906                     
  4471                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4472   004906  EC33  F027         	call	_I2C_2_Master_Start	;wreg free
  4473                           
  4474                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4475   00490A  0E52               	movlw	82
  4476   00490C  EC23  F027         	call	_I2C_2_Master_Write
  4477                           
  4478                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4479   004910  0EB8               	movlw	184
  4480   004912  EC23  F027         	call	_I2C_2_Master_Write
  4481                           
  4482                           ;color.c: 82:  I2C_2_Master_RepStart();
  4483   004916  EC29  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4484                           
  4485                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4486   00491A  0E53               	movlw	83
  4487   00491C  EC23  F027         	call	_I2C_2_Master_Write
  4488                           
  4489                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4490   004920  0E01               	movlw	1
  4491   004922  EC8D  F025         	call	_I2C_2_Master_Read
  4492   004926  6E07               	movwf	??_color_read_Green^0,c
  4493   004928  5007               	movf	??_color_read_Green^0,w,c
  4494   00492A  6E0A               	movwf	color_read_Green@tmp^0,c
  4495   00492C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4496                           
  4497                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4498   00492E  0E00               	movlw	0
  4499   004930  EC8D  F025         	call	_I2C_2_Master_Read
  4500   004934  6E07               	movwf	??_color_read_Green^0,c
  4501   004936  5007               	movf	??_color_read_Green^0,w,c
  4502   004938  6E09               	movwf	(??_color_read_Green+2)^0,c
  4503   00493A  6A08               	clrf	(??_color_read_Green+1)^0,c
  4504   00493C  500A               	movf	color_read_Green@tmp^0,w,c
  4505   00493E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4506   004940  6E0A               	movwf	color_read_Green@tmp^0,c
  4507   004942  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4508   004944  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4509   004946  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4510                           
  4511                           ;color.c: 86:  I2C_2_Master_Stop();
  4512   004948  EC2E  F027         	call	_I2C_2_Master_Stop	;wreg free
  4513   00494C                     
  4514                           ;color.c: 87:  return tmp;
  4515   00494C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4516   004950  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4517   004954  0012               	return		;funcret
  4518   004956                     __end_of_color_read_Green:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _color_read_Blue *****************
  4522 ;; Defined at:
  4523 ;;		line 90 in file "color.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  tmp             2    9[COMRAM] unsigned int 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  2    4[COMRAM] unsigned int 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;Total ram usage:        7 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 3
  4544 ;; This function calls:
  4545 ;;		_I2C_2_Master_Read
  4546 ;;		_I2C_2_Master_RepStart
  4547 ;;		_I2C_2_Master_Start
  4548 ;;		_I2C_2_Master_Stop
  4549 ;;		_I2C_2_Master_Write
  4550 ;; This function is called by:
  4551 ;;		_readColours
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text19
  4556   004956                     __ptext19:
  4557                           	callstack 0
  4558   004956                     _color_read_Blue:
  4559                           	callstack 26
  4560   004956                     
  4561                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4562   004956  EC33  F027         	call	_I2C_2_Master_Start	;wreg free
  4563                           
  4564                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4565   00495A  0E52               	movlw	82
  4566   00495C  EC23  F027         	call	_I2C_2_Master_Write
  4567                           
  4568                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4569   004960  0EBA               	movlw	186
  4570   004962  EC23  F027         	call	_I2C_2_Master_Write
  4571                           
  4572                           ;color.c: 96:  I2C_2_Master_RepStart();
  4573   004966  EC29  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4574                           
  4575                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4576   00496A  0E53               	movlw	83
  4577   00496C  EC23  F027         	call	_I2C_2_Master_Write
  4578                           
  4579                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4580   004970  0E01               	movlw	1
  4581   004972  EC8D  F025         	call	_I2C_2_Master_Read
  4582   004976  6E07               	movwf	??_color_read_Blue^0,c
  4583   004978  5007               	movf	??_color_read_Blue^0,w,c
  4584   00497A  6E0A               	movwf	color_read_Blue@tmp^0,c
  4585   00497C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4586                           
  4587                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4588   00497E  0E00               	movlw	0
  4589   004980  EC8D  F025         	call	_I2C_2_Master_Read
  4590   004984  6E07               	movwf	??_color_read_Blue^0,c
  4591   004986  5007               	movf	??_color_read_Blue^0,w,c
  4592   004988  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4593   00498A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4594   00498C  500A               	movf	color_read_Blue@tmp^0,w,c
  4595   00498E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4596   004990  6E0A               	movwf	color_read_Blue@tmp^0,c
  4597   004992  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4598   004994  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4599   004996  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4600                           
  4601                           ;color.c: 100:  I2C_2_Master_Stop();
  4602   004998  EC2E  F027         	call	_I2C_2_Master_Stop	;wreg free
  4603   00499C                     
  4604                           ;color.c: 101:  return tmp;
  4605   00499C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4606   0049A0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4607   0049A4  0012               	return		;funcret
  4608   0049A6                     __end_of_color_read_Blue:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _I2C_2_Master_RepStart *****************
  4612 ;; Defined at:
  4613 ;;		line 33 in file "i2c.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 2
  4634 ;; This function calls:
  4635 ;;		_I2C_2_Master_Idle
  4636 ;; This function is called by:
  4637 ;;		_color_read_lum
  4638 ;;		_color_read_Red
  4639 ;;		_color_read_Green
  4640 ;;		_color_read_Blue
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text20
  4645   004E52                     __ptext20:
  4646                           	callstack 0
  4647   004E52                     _I2C_2_Master_RepStart:
  4648                           	callstack 26
  4649   004E52                     
  4650                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4651   004E52  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  4652   004E56                     
  4653                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4654   004E56  010E               	movlb	14	; () banked
  4655   004E58  83DA               	bsf	218,1,b	;volatile
  4656   004E5A                     
  4657                           ; BSR set to: 14
  4658   004E5A  0012               	return		;funcret
  4659   004E5C                     __end_of_I2C_2_Master_RepStart:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _I2C_2_Master_Read *****************
  4663 ;; Defined at:
  4664 ;;		line 51 in file "i2c.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  ack             1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  ack             1    2[COMRAM] unsigned char 
  4669 ;;  tmp             1    3[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      unsigned char 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;Total ram usage:        3 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 2
  4686 ;; This function calls:
  4687 ;;		_I2C_2_Master_Idle
  4688 ;; This function is called by:
  4689 ;;		_color_read_lum
  4690 ;;		_color_read_Red
  4691 ;;		_color_read_Green
  4692 ;;		_color_read_Blue
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text21
  4697   004B1A                     __ptext21:
  4698                           	callstack 0
  4699   004B1A                     _I2C_2_Master_Read:
  4700                           	callstack 26
  4701                           
  4702                           ; BSR set to: 14
  4703                           ;incstack = 0
  4704                           ;I2C_2_Master_Read@ack stored from wreg
  4705   004B1A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4706   004B1C                     
  4707                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4708   004B1C  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  4709   004B20                     
  4710                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4711   004B20  010E               	movlb	14	; () banked
  4712   004B22  87DA               	bsf	218,3,b	;volatile
  4713                           
  4714                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4715   004B24  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  4716   004B28                     
  4717                           ;i2c.c: 57:   tmp = SSP2BUF;
  4718   004B28  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4719                           
  4720                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4721   004B2C  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  4722   004B30                     
  4723                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4724   004B30  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4725   004B32  B4D8               	btfsc	status,2,c
  4726   004B34  EF9E  F025         	goto	u2961
  4727   004B38  EFA2  F025         	goto	u2960
  4728   004B3C                     u2961:
  4729   004B3C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4730   004B3E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4731   004B40  EFA3  F025         	goto	u2978
  4732   004B44                     u2960:
  4733   004B44  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4734   004B46                     u2978:
  4735   004B46  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4736   004B48  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4737   004B4A  010E               	movlb	14	; () banked
  4738   004B4C  51DA               	movf	218,w,b	;volatile
  4739   004B4E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4740   004B50  0BDF               	andlw	-33
  4741   004B52  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4742   004B54  6FDA               	movwf	218,b	;volatile
  4743   004B56                     
  4744                           ; BSR set to: 14
  4745                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4746   004B56  89DA               	bsf	218,4,b	;volatile
  4747   004B58                     
  4748                           ; BSR set to: 14
  4749                           ;i2c.c: 61:   return tmp;
  4750   004B58  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4751   004B5A                     
  4752                           ; BSR set to: 14
  4753   004B5A  0012               	return		;funcret
  4754   004B5C                     __end_of_I2C_2_Master_Read:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _initUSART4 *****************
  4758 ;; Defined at:
  4759 ;;		line 4 in file "serial.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;Total ram usage:        0 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_main
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text22
  4788   004E10                     __ptext22:
  4789                           	callstack 0
  4790   004E10                     _initUSART4:
  4791                           	callstack 29
  4792   004E10                     
  4793                           ;serial.c: 5:     RC0PPS = 0x12;
  4794   004E10  0E12               	movlw	18
  4795   004E12  010E               	movlb	14	; () banked
  4796   004E14  6F62               	movwf	98,b	;volatile
  4797                           
  4798                           ;serial.c: 6:     RX4PPS = 0x11;
  4799   004E16  0E11               	movlw	17
  4800   004E18  6F15               	movwf	21,b	;volatile
  4801   004E1A                     
  4802                           ; BSR set to: 14
  4803                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4804   004E1A  97E9               	bcf	233,3,b	;volatile
  4805   004E1C                     
  4806                           ; BSR set to: 14
  4807                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4808   004E1C  95E8               	bcf	232,2,b	;volatile
  4809                           
  4810                           ;serial.c: 9:     SP4BRGL = 51;
  4811   004E1E  0E33               	movlw	51
  4812   004E20  6FE5               	movwf	229,b	;volatile
  4813                           
  4814                           ;serial.c: 10:     SP4BRGH = 0;
  4815   004E22  0E00               	movlw	0
  4816   004E24  6FE6               	movwf	230,b	;volatile
  4817   004E26                     
  4818                           ; BSR set to: 14
  4819                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4820   004E26  89E7               	bsf	231,4,b	;volatile
  4821   004E28                     
  4822                           ; BSR set to: 14
  4823                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4824   004E28  8BE8               	bsf	232,5,b	;volatile
  4825   004E2A                     
  4826                           ; BSR set to: 14
  4827                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4828   004E2A  8FE7               	bsf	231,7,b	;volatile
  4829   004E2C                     
  4830                           ; BSR set to: 14
  4831   004E2C  0012               	return		;funcret
  4832   004E2E                     __end_of_initUSART4:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _initDCmotorsPWM *****************
  4836 ;; Defined at:
  4837 ;;		line 6 in file "dc_motor.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;Total ram usage:        2 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_main
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text23
  4866   00415C                     __ptext23:
  4867                           	callstack 0
  4868   00415C                     _initDCmotorsPWM:
  4869                           	callstack 29
  4870   00415C                     
  4871                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4872   00415C  0E05               	movlw	5
  4873   00415E  010E               	movlb	14	; () banked
  4874   004160  6F74               	movwf	116,b	;volatile
  4875                           
  4876                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4877   004162  0E06               	movlw	6
  4878   004164  6F76               	movwf	118,b	;volatile
  4879                           
  4880                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4881   004166  0E07               	movlw	7
  4882   004168  6F69               	movwf	105,b	;volatile
  4883                           
  4884                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4885   00416A  0E08               	movlw	8
  4886   00416C  6F88               	movwf	136,b	;volatile
  4887   00416E                     
  4888                           ; BSR set to: 14
  4889                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  4890   00416E  9485               	bcf	133,2,c	;volatile
  4891   004170                     
  4892                           ; BSR set to: 14
  4893                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  4894   004170  9885               	bcf	133,4,c	;volatile
  4895   004172                     
  4896                           ; BSR set to: 14
  4897                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  4898   004172  9E83               	bcf	131,7,c	;volatile
  4899   004174                     
  4900                           ; BSR set to: 14
  4901                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  4902   004174  9C87               	bcf	135,6,c	;volatile
  4903                           
  4904                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  4905   004176  50BD               	movf	189,w,c	;volatile
  4906   004178  0B8F               	andlw	-113
  4907   00417A  0930               	iorlw	48
  4908   00417C  6EBD               	movwf	189,c	;volatile
  4909                           
  4910                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  4911   00417E  0EE0               	movlw	-32
  4912   004180  16BE               	andwf	190,f,c	;volatile
  4913                           
  4914                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  4915   004182  50BF               	movf	191,w,c	;volatile
  4916   004184  0BF0               	andlw	-16
  4917   004186  0901               	iorlw	1
  4918   004188  6EBF               	movwf	191,c	;volatile
  4919   00418A                     
  4920                           ; BSR set to: 14
  4921                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  4922   00418A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4923   00418E                     
  4924                           ; BSR set to: 14
  4925                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  4926   00418E  8EBD               	bsf	189,7,c	;volatile
  4927                           
  4928                           ;dc_motor.c: 34:     CCPR1H=0;
  4929   004190  0E00               	movlw	0
  4930   004192  6EAA               	movwf	170,c	;volatile
  4931                           
  4932                           ;dc_motor.c: 35:     CCPR2H=0;
  4933   004194  0E00               	movlw	0
  4934   004196  6EA6               	movwf	166,c	;volatile
  4935                           
  4936                           ;dc_motor.c: 36:     CCPR3H=0;
  4937   004198  0E00               	movlw	0
  4938   00419A  010F               	movlb	15	; () banked
  4939   00419C  6F25               	movwf	37,b	;volatile
  4940                           
  4941                           ;dc_motor.c: 37:     CCPR4H=0;
  4942   00419E  0E00               	movlw	0
  4943   0041A0  6F21               	movwf	33,b	;volatile
  4944                           
  4945                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  4946   0041A2  0EFC               	movlw	-4
  4947   0041A4  16AD               	andwf	173,f,c	;volatile
  4948                           
  4949                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  4950   0041A6  0EF3               	movlw	-13
  4951   0041A8  16AD               	andwf	173,f,c	;volatile
  4952                           
  4953                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  4954   0041AA  0ECF               	movlw	-49
  4955   0041AC  16AD               	andwf	173,f,c	;volatile
  4956                           
  4957                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  4958   0041AE  0E3F               	movlw	-193
  4959   0041B0  16AD               	andwf	173,f,c	;volatile
  4960   0041B2                     
  4961                           ; BSR set to: 15
  4962                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  4963   0041B2  88AB               	bsf	171,4,c	;volatile
  4964                           
  4965                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  4966   0041B4  50AB               	movf	171,w,c	;volatile
  4967   0041B6  0BF0               	andlw	-16
  4968   0041B8  090C               	iorlw	12
  4969   0041BA  6EAB               	movwf	171,c	;volatile
  4970   0041BC                     
  4971                           ; BSR set to: 15
  4972                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  4973   0041BC  8EAB               	bsf	171,7,c	;volatile
  4974   0041BE                     
  4975                           ; BSR set to: 15
  4976                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  4977   0041BE  88A7               	bsf	167,4,c	;volatile
  4978                           
  4979                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  4980   0041C0  50A7               	movf	167,w,c	;volatile
  4981   0041C2  0BF0               	andlw	-16
  4982   0041C4  090C               	iorlw	12
  4983   0041C6  6EA7               	movwf	167,c	;volatile
  4984   0041C8                     
  4985                           ; BSR set to: 15
  4986                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  4987   0041C8  8EA7               	bsf	167,7,c	;volatile
  4988   0041CA                     
  4989                           ; BSR set to: 15
  4990                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  4991   0041CA  8926               	bsf	38,4,b	;volatile
  4992                           
  4993                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  4994   0041CC  5126               	movf	38,w,b	;volatile
  4995   0041CE  0BF0               	andlw	-16
  4996   0041D0  090C               	iorlw	12
  4997   0041D2  6F26               	movwf	38,b	;volatile
  4998   0041D4                     
  4999                           ; BSR set to: 15
  5000                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  5001   0041D4  8F26               	bsf	38,7,b	;volatile
  5002   0041D6                     
  5003                           ; BSR set to: 15
  5004                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  5005   0041D6  8922               	bsf	34,4,b	;volatile
  5006                           
  5007                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  5008   0041D8  5122               	movf	34,w,b	;volatile
  5009   0041DA  0BF0               	andlw	-16
  5010   0041DC  090C               	iorlw	12
  5011   0041DE  6F22               	movwf	34,b	;volatile
  5012   0041E0                     
  5013                           ; BSR set to: 15
  5014                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  5015   0041E0  8F22               	bsf	34,7,b	;volatile
  5016   0041E2                     
  5017                           ; BSR set to: 15
  5018   0041E2  0012               	return		;funcret
  5019   0041E4                     __end_of_initDCmotorsPWM:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _go_Home *****************
  5023 ;; Defined at:
  5024 ;;		line 4 in file "Memory.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  5027 ;;		 -> WayBack(50), 
  5028 ;;  Time_forward    2   37[COMRAM] PTR int 
  5029 ;;		 -> Time_forward(100), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  i               2   42[COMRAM] int 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:        9 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 6
  5048 ;; This function calls:
  5049 ;;		_BlueMove
  5050 ;;		_GreenMove
  5051 ;;		_LightBlueMove
  5052 ;;		_OrangeMove
  5053 ;;		_RedMove
  5054 ;;		_ReversePink
  5055 ;;		_ReverseYellow
  5056 ;;		_timed_forward
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text24
  5063   003074                     __ptext24:
  5064                           	callstack 0
  5065   003074                     _go_Home:
  5066                           	callstack 24
  5067   003074                     
  5068                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  5069   003074  C0F0  F02B         	movff	_move_count,go_Home@i	;volatile
  5070   003078  C0F1  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  5071   00307C                     l4733:
  5072   00307C  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  5073   00307E  EF45  F018         	goto	u4520
  5074   003082  EF43  F018         	goto	u4521
  5075   003086                     u4521:
  5076   003086  EF47  F018         	goto	l4737
  5077   00308A                     u4520:
  5078   00308A  EF49  F019         	goto	l678
  5079   00308E                     l4737:
  5080                           
  5081                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  5082   00308E  0EF3               	movlw	low _motorL
  5083   003090  6E14               	movwf	timed_forward@mL^0,c
  5084   003092  0E00               	movlw	high _motorL
  5085   003094  6E15               	movwf	(timed_forward@mL+1)^0,c
  5086   003096  0EC0               	movlw	low _motorR
  5087   003098  6E16               	movwf	timed_forward@mR^0,c
  5088   00309A  0E01               	movlw	high _motorR
  5089   00309C  6E17               	movwf	(timed_forward@mR+1)^0,c
  5090   00309E  90D8               	bcf	status,0,c
  5091   0030A0  342B               	rlcf	go_Home@i^0,w,c
  5092   0030A2  6ED9               	movwf	fsr2l,c
  5093   0030A4  342C               	rlcf	(go_Home@i+1)^0,w,c
  5094   0030A6  6EDA               	movwf	fsr2h,c
  5095   0030A8  5026               	movf	go_Home@Time_forward^0,w,c
  5096   0030AA  26D9               	addwf	fsr2l,f,c
  5097   0030AC  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  5098   0030AE  22DA               	addwfc	fsr2h,f,c
  5099   0030B0  CFDE F018          	movff	postinc2,timed_forward@time
  5100   0030B4  CFDD F019          	movff	postdec2,timed_forward@time+1
  5101   0030B8  ECC8  F01E         	call	_timed_forward	;wreg free
  5102   0030BC                     
  5103                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  5104   0030BC  502B               	movf	go_Home@i^0,w,c
  5105   0030BE  2424               	addwf	go_Home@WayBack^0,w,c
  5106   0030C0  6E28               	movwf	??_go_Home^0,c
  5107   0030C2  502C               	movf	(go_Home@i+1)^0,w,c
  5108   0030C4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5109   0030C6  6E29               	movwf	(??_go_Home+1)^0,c
  5110   0030C8  0EFF               	movlw	255
  5111   0030CA  2428               	addwf	??_go_Home^0,w,c
  5112   0030CC  6ED9               	movwf	fsr2l,c
  5113   0030CE  0EFF               	movlw	255
  5114   0030D0  2029               	addwfc	(??_go_Home+1)^0,w,c
  5115   0030D2  6EDA               	movwf	fsr2h,c
  5116   0030D4  04DE               	decf	postinc2,w,c
  5117   0030D6  A4D8               	btfss	status,2,c
  5118   0030D8  EF70  F018         	goto	u4531
  5119   0030DC  EF72  F018         	goto	u4530
  5120   0030E0                     u4531:
  5121   0030E0  EF7E  F018         	goto	l4743
  5122   0030E4                     u4530:
  5123   0030E4                     
  5124                           ;Memory.c: 22:             GreenMove(&motorL, &motorR);
  5125   0030E4  0EF3               	movlw	low _motorL
  5126   0030E6  6E20               	movwf	GreenMove@mL^0,c
  5127   0030E8  0E00               	movlw	high _motorL
  5128   0030EA  6E21               	movwf	(GreenMove@mL+1)^0,c
  5129   0030EC  0EC0               	movlw	low _motorR
  5130   0030EE  6E22               	movwf	GreenMove@mR^0,c
  5131   0030F0  0E01               	movlw	high _motorR
  5132   0030F2  6E23               	movwf	(GreenMove@mR+1)^0,c
  5133   0030F4  EC2B  F026         	call	_GreenMove	;wreg free
  5134                           
  5135                           ;Memory.c: 23:         }
  5136   0030F8  EF44  F019         	goto	l4767
  5137   0030FC                     l4743:
  5138   0030FC  502B               	movf	go_Home@i^0,w,c
  5139   0030FE  2424               	addwf	go_Home@WayBack^0,w,c
  5140   003100  6E28               	movwf	??_go_Home^0,c
  5141   003102  502C               	movf	(go_Home@i+1)^0,w,c
  5142   003104  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5143   003106  6E29               	movwf	(??_go_Home+1)^0,c
  5144   003108  0EFF               	movlw	255
  5145   00310A  2428               	addwf	??_go_Home^0,w,c
  5146   00310C  6ED9               	movwf	fsr2l,c
  5147   00310E  0EFF               	movlw	255
  5148   003110  2029               	addwfc	(??_go_Home+1)^0,w,c
  5149   003112  6EDA               	movwf	fsr2h,c
  5150   003114  0E02               	movlw	2
  5151   003116  18DE               	xorwf	postinc2,w,c
  5152   003118  A4D8               	btfss	status,2,c
  5153   00311A  EF91  F018         	goto	u4541
  5154   00311E  EF93  F018         	goto	u4540
  5155   003122                     u4541:
  5156   003122  EF9F  F018         	goto	l4747
  5157   003126                     u4540:
  5158   003126                     
  5159                           ;Memory.c: 25:             LightBlueMove(&motorL, &motorR);
  5160   003126  0EF3               	movlw	low _motorL
  5161   003128  6E20               	movwf	LightBlueMove@mL^0,c
  5162   00312A  0E00               	movlw	high _motorL
  5163   00312C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  5164   00312E  0EC0               	movlw	low _motorR
  5165   003130  6E22               	movwf	LightBlueMove@mR^0,c
  5166   003132  0E01               	movlw	high _motorR
  5167   003134  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  5168   003136  EC8F  F023         	call	_LightBlueMove	;wreg free
  5169                           
  5170                           ;Memory.c: 26:         }
  5171   00313A  EF44  F019         	goto	l4767
  5172   00313E                     l4747:
  5173   00313E  502B               	movf	go_Home@i^0,w,c
  5174   003140  2424               	addwf	go_Home@WayBack^0,w,c
  5175   003142  6E28               	movwf	??_go_Home^0,c
  5176   003144  502C               	movf	(go_Home@i+1)^0,w,c
  5177   003146  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5178   003148  6E29               	movwf	(??_go_Home+1)^0,c
  5179   00314A  0EFF               	movlw	255
  5180   00314C  2428               	addwf	??_go_Home^0,w,c
  5181   00314E  6ED9               	movwf	fsr2l,c
  5182   003150  0EFF               	movlw	255
  5183   003152  2029               	addwfc	(??_go_Home+1)^0,w,c
  5184   003154  6EDA               	movwf	fsr2h,c
  5185   003156  0E03               	movlw	3
  5186   003158  18DE               	xorwf	postinc2,w,c
  5187   00315A  A4D8               	btfss	status,2,c
  5188   00315C  EFB2  F018         	goto	u4551
  5189   003160  EFB4  F018         	goto	u4550
  5190   003164                     u4551:
  5191   003164  EFC0  F018         	goto	l4751
  5192   003168                     u4550:
  5193   003168                     
  5194                           ;Memory.c: 28:             ReverseYellow(&motorL, &motorR);
  5195   003168  0EF3               	movlw	low _motorL
  5196   00316A  6E20               	movwf	ReverseYellow@mL^0,c
  5197   00316C  0E00               	movlw	high _motorL
  5198   00316E  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  5199   003170  0EC0               	movlw	low _motorR
  5200   003172  6E22               	movwf	ReverseYellow@mR^0,c
  5201   003174  0E01               	movlw	high _motorR
  5202   003176  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  5203   003178  ECCE  F025         	call	_ReverseYellow	;wreg free
  5204                           
  5205                           ;Memory.c: 29:         }
  5206   00317C  EF44  F019         	goto	l4767
  5207   003180                     l4751:
  5208   003180  502B               	movf	go_Home@i^0,w,c
  5209   003182  2424               	addwf	go_Home@WayBack^0,w,c
  5210   003184  6E28               	movwf	??_go_Home^0,c
  5211   003186  502C               	movf	(go_Home@i+1)^0,w,c
  5212   003188  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5213   00318A  6E29               	movwf	(??_go_Home+1)^0,c
  5214   00318C  0EFF               	movlw	255
  5215   00318E  2428               	addwf	??_go_Home^0,w,c
  5216   003190  6ED9               	movwf	fsr2l,c
  5217   003192  0EFF               	movlw	255
  5218   003194  2029               	addwfc	(??_go_Home+1)^0,w,c
  5219   003196  6EDA               	movwf	fsr2h,c
  5220   003198  0E04               	movlw	4
  5221   00319A  18DE               	xorwf	postinc2,w,c
  5222   00319C  A4D8               	btfss	status,2,c
  5223   00319E  EFD3  F018         	goto	u4561
  5224   0031A2  EFD5  F018         	goto	u4560
  5225   0031A6                     u4561:
  5226   0031A6  EFE1  F018         	goto	l4755
  5227   0031AA                     u4560:
  5228   0031AA                     
  5229                           ;Memory.c: 31:             BlueMove(&motorL, &motorR);
  5230   0031AA  0EF3               	movlw	low _motorL
  5231   0031AC  6E20               	movwf	BlueMove@mL^0,c
  5232   0031AE  0E00               	movlw	high _motorL
  5233   0031B0  6E21               	movwf	(BlueMove@mL+1)^0,c
  5234   0031B2  0EC0               	movlw	low _motorR
  5235   0031B4  6E22               	movwf	BlueMove@mR^0,c
  5236   0031B6  0E01               	movlw	high _motorR
  5237   0031B8  6E23               	movwf	(BlueMove@mR+1)^0,c
  5238   0031BA  EC27  F022         	call	_BlueMove	;wreg free
  5239                           
  5240                           ;Memory.c: 32:         }
  5241   0031BE  EF44  F019         	goto	l4767
  5242   0031C2                     l4755:
  5243   0031C2  502B               	movf	go_Home@i^0,w,c
  5244   0031C4  2424               	addwf	go_Home@WayBack^0,w,c
  5245   0031C6  6E28               	movwf	??_go_Home^0,c
  5246   0031C8  502C               	movf	(go_Home@i+1)^0,w,c
  5247   0031CA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5248   0031CC  6E29               	movwf	(??_go_Home+1)^0,c
  5249   0031CE  0EFF               	movlw	255
  5250   0031D0  2428               	addwf	??_go_Home^0,w,c
  5251   0031D2  6ED9               	movwf	fsr2l,c
  5252   0031D4  0EFF               	movlw	255
  5253   0031D6  2029               	addwfc	(??_go_Home+1)^0,w,c
  5254   0031D8  6EDA               	movwf	fsr2h,c
  5255   0031DA  0E05               	movlw	5
  5256   0031DC  18DE               	xorwf	postinc2,w,c
  5257   0031DE  A4D8               	btfss	status,2,c
  5258   0031E0  EFF4  F018         	goto	u4571
  5259   0031E4  EFF6  F018         	goto	u4570
  5260   0031E8                     u4571:
  5261   0031E8  EF02  F019         	goto	l4759
  5262   0031EC                     u4570:
  5263   0031EC                     
  5264                           ;Memory.c: 34:             RedMove(&motorL, &motorR);
  5265   0031EC  0EF3               	movlw	low _motorL
  5266   0031EE  6E20               	movwf	RedMove@mL^0,c
  5267   0031F0  0E00               	movlw	high _motorL
  5268   0031F2  6E21               	movwf	(RedMove@mL+1)^0,c
  5269   0031F4  0EC0               	movlw	low _motorR
  5270   0031F6  6E22               	movwf	RedMove@mR^0,c
  5271   0031F8  0E01               	movlw	high _motorR
  5272   0031FA  6E23               	movwf	(RedMove@mR+1)^0,c
  5273   0031FC  EC0C  F026         	call	_RedMove	;wreg free
  5274                           
  5275                           ;Memory.c: 35:         }
  5276   003200  EF44  F019         	goto	l4767
  5277   003204                     l4759:
  5278   003204  502B               	movf	go_Home@i^0,w,c
  5279   003206  2424               	addwf	go_Home@WayBack^0,w,c
  5280   003208  6E28               	movwf	??_go_Home^0,c
  5281   00320A  502C               	movf	(go_Home@i+1)^0,w,c
  5282   00320C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5283   00320E  6E29               	movwf	(??_go_Home+1)^0,c
  5284   003210  0EFF               	movlw	255
  5285   003212  2428               	addwf	??_go_Home^0,w,c
  5286   003214  6ED9               	movwf	fsr2l,c
  5287   003216  0EFF               	movlw	255
  5288   003218  2029               	addwfc	(??_go_Home+1)^0,w,c
  5289   00321A  6EDA               	movwf	fsr2h,c
  5290   00321C  0E06               	movlw	6
  5291   00321E  18DE               	xorwf	postinc2,w,c
  5292   003220  A4D8               	btfss	status,2,c
  5293   003222  EF15  F019         	goto	u4581
  5294   003226  EF17  F019         	goto	u4580
  5295   00322A                     u4581:
  5296   00322A  EF23  F019         	goto	l4763
  5297   00322E                     u4580:
  5298   00322E                     
  5299                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  5300   00322E  0EF3               	movlw	low _motorL
  5301   003230  6E20               	movwf	OrangeMove@mL^0,c
  5302   003232  0E00               	movlw	high _motorL
  5303   003234  6E21               	movwf	(OrangeMove@mL+1)^0,c
  5304   003236  0EC0               	movlw	low _motorR
  5305   003238  6E22               	movwf	OrangeMove@mR^0,c
  5306   00323A  0E01               	movlw	high _motorR
  5307   00323C  6E23               	movwf	(OrangeMove@mR+1)^0,c
  5308   00323E  EC66  F023         	call	_OrangeMove	;wreg free
  5309                           
  5310                           ;Memory.c: 38:         }
  5311   003242  EF44  F019         	goto	l4767
  5312   003246                     l4763:
  5313   003246  502B               	movf	go_Home@i^0,w,c
  5314   003248  2424               	addwf	go_Home@WayBack^0,w,c
  5315   00324A  6E28               	movwf	??_go_Home^0,c
  5316   00324C  502C               	movf	(go_Home@i+1)^0,w,c
  5317   00324E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5318   003250  6E29               	movwf	(??_go_Home+1)^0,c
  5319   003252  0EFF               	movlw	255
  5320   003254  2428               	addwf	??_go_Home^0,w,c
  5321   003256  6ED9               	movwf	fsr2l,c
  5322   003258  0EFF               	movlw	255
  5323   00325A  2029               	addwfc	(??_go_Home+1)^0,w,c
  5324   00325C  6EDA               	movwf	fsr2h,c
  5325   00325E  0E07               	movlw	7
  5326   003260  18DE               	xorwf	postinc2,w,c
  5327   003262  A4D8               	btfss	status,2,c
  5328   003264  EF36  F019         	goto	u4591
  5329   003268  EF38  F019         	goto	u4590
  5330   00326C                     u4591:
  5331   00326C  EF44  F019         	goto	l672
  5332   003270                     u4590:
  5333   003270                     
  5334                           ;Memory.c: 40:             ReversePink(&motorL, &motorR);
  5335   003270  0EF3               	movlw	low _motorL
  5336   003272  6E20               	movwf	ReversePink@mL^0,c
  5337   003274  0E00               	movlw	high _motorL
  5338   003276  6E21               	movwf	(ReversePink@mL+1)^0,c
  5339   003278  0EC0               	movlw	low _motorR
  5340   00327A  6E22               	movwf	ReversePink@mR^0,c
  5341   00327C  0E01               	movlw	high _motorR
  5342   00327E  6E23               	movwf	(ReversePink@mR+1)^0,c
  5343   003280  ECED  F025         	call	_ReversePink	;wreg free
  5344   003284  EF44  F019         	goto	l4767
  5345   003288                     l672:
  5346   003288                     l4767:
  5347                           
  5348                           ;Memory.c: 44:   }
  5349   003288  062B               	decf	go_Home@i^0,f,c
  5350   00328A  A0D8               	btfss	status,0,c
  5351   00328C  062C               	decf	(go_Home@i+1)^0,f,c
  5352   00328E  EF3E  F018         	goto	l4733
  5353   003292                     l678:
  5354   003292  0012               	return		;funcret
  5355   003294                     __end_of_go_Home:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _timed_forward *****************
  5359 ;; Defined at:
  5360 ;;		line 165 in file "dc_motor.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5363 ;;		 -> motorL(9), 
  5364 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5365 ;;		 -> motorR(9), 
  5366 ;;  time            2   23[COMRAM] int 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:        8 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 3
  5385 ;; This function calls:
  5386 ;;		_delayed_ms
  5387 ;;		_setMotorPWM
  5388 ;; This function is called by:
  5389 ;;		_go_Home
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text25
  5394   003D90                     __ptext25:
  5395                           	callstack 0
  5396   003D90                     _timed_forward:
  5397                           	callstack 26
  5398   003D90                     
  5399                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  5400   003D90  EE20 F001          	lfsr	2,1
  5401   003D94  5014               	movf	timed_forward@mL^0,w,c
  5402   003D96  26D9               	addwf	fsr2l,f,c
  5403   003D98  5015               	movf	(timed_forward@mL+1)^0,w,c
  5404   003D9A  22DA               	addwfc	fsr2h,f,c
  5405   003D9C  0E01               	movlw	1
  5406   003D9E  6EDF               	movwf	indf2,c
  5407                           
  5408                           ;dc_motor.c: 169:     mR->direction =1;
  5409   003DA0  EE20 F001          	lfsr	2,1
  5410   003DA4  5016               	movf	timed_forward@mR^0,w,c
  5411   003DA6  26D9               	addwf	fsr2l,f,c
  5412   003DA8  5017               	movf	(timed_forward@mR+1)^0,w,c
  5413   003DAA  22DA               	addwfc	fsr2h,f,c
  5414   003DAC  0E01               	movlw	1
  5415   003DAE  6EDF               	movwf	indf2,c
  5416                           
  5417                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  5418   003DB0  EFFE  F01E         	goto	l3965
  5419   003DB4                     l3957:
  5420                           
  5421                           ;dc_motor.c: 172:         mL->power+=10;
  5422   003DB4  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5423   003DB8  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5424   003DBC  0E0A               	movlw	10
  5425   003DBE  26DF               	addwf	indf2,f,c
  5426                           
  5427                           ;dc_motor.c: 173:         mR->power+=10;
  5428   003DC0  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5429   003DC4  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5430   003DC8  0E0A               	movlw	10
  5431   003DCA  26DF               	addwf	indf2,f,c
  5432   003DCC                     
  5433                           ;dc_motor.c: 175:         setMotorPWM(mL);
  5434   003DCC  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5435   003DD0  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5436   003DD4  ECD2  F01B         	call	_setMotorPWM	;wreg free
  5437   003DD8                     
  5438                           ;dc_motor.c: 176:         setMotorPWM(mR);
  5439   003DD8  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5440   003DDC  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5441   003DE0  ECD2  F01B         	call	_setMotorPWM	;wreg free
  5442   003DE4                     
  5443                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5444   003DE4  0E02               	movlw	2
  5445   003DE6  6E1B               	movwf	(??_timed_forward+1)^0,c
  5446   003DE8  0EA0               	movlw	160
  5447   003DEA  6E1A               	movwf	??_timed_forward^0,c
  5448   003DEC  0E92               	movlw	146
  5449   003DEE                     u5027:
  5450   003DEE  2EE8               	decfsz	wreg,f,c
  5451   003DF0  D7FE               	bra	u5027
  5452   003DF2  2E1A               	decfsz	??_timed_forward^0,f,c
  5453   003DF4  D7FC               	bra	u5027
  5454   003DF6  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5455   003DF8  D7FA               	bra	u5027
  5456   003DFA  D000               	nop2	
  5457   003DFC                     l3965:
  5458   003DFC  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5459   003E00  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5460   003E04  0E1E               	movlw	30
  5461   003E06  60DF               	cpfslt	indf2,c
  5462   003E08  EF08  F01F         	goto	u3421
  5463   003E0C  EF0A  F01F         	goto	u3420
  5464   003E10                     u3421:
  5465   003E10  EF16  F01F         	goto	l3969
  5466   003E14                     u3420:
  5467   003E14  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5468   003E18  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5469   003E1C  0E1D               	movlw	29
  5470   003E1E  64DF               	cpfsgt	indf2,c
  5471   003E20  EF14  F01F         	goto	u3431
  5472   003E24  EF16  F01F         	goto	u3430
  5473   003E28                     u3431:
  5474   003E28  EFDA  F01E         	goto	l3957
  5475   003E2C                     u3430:
  5476   003E2C                     l3969:
  5477                           
  5478                           ;dc_motor.c: 181:     delayed_ms(time);
  5479   003E2C  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5480   003E30  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5481   003E34  EC4A  F026         	call	_delayed_ms	;wreg free
  5482   003E38  0012               	return		;funcret
  5483   003E3A                     __end_of_timed_forward:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _delayed_ms *****************
  5487 ;; Defined at:
  5488 ;;		line 39 in file "timers.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  time            2    0[COMRAM] int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  i               2    3[COMRAM] unsigned int 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;Total ram usage:        5 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_timed_forward
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text26
  5517   004C94                     __ptext26:
  5518                           	callstack 0
  5519   004C94                     _delayed_ms:
  5520                           	callstack 27
  5521   004C94                     
  5522                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5523   004C94  0E00               	movlw	0
  5524   004C96  6E05               	movwf	(delayed_ms@i+1)^0,c
  5525   004C98  0E00               	movlw	0
  5526   004C9A  6E04               	movwf	delayed_ms@i^0,c
  5527   004C9C  EF5A  F026         	goto	l707
  5528   004CA0                     l3639:
  5529                           
  5530                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5531   004CA0  0E15               	movlw	21
  5532   004CA2  6E03               	movwf	??_delayed_ms^0,c
  5533   004CA4  0EC6               	movlw	198
  5534   004CA6                     u5037:
  5535   004CA6  2EE8               	decfsz	wreg,f,c
  5536   004CA8  D7FE               	bra	u5037
  5537   004CAA  2E03               	decfsz	??_delayed_ms^0,f,c
  5538   004CAC  D7FC               	bra	u5037
  5539   004CAE  D000               	nop2	
  5540   004CB0                     
  5541                           ;timers.c: 42:     }
  5542   004CB0  4A04               	infsnz	delayed_ms@i^0,f,c
  5543   004CB2  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5544   004CB4                     l707:
  5545   004CB4  5001               	movf	delayed_ms@time^0,w,c
  5546   004CB6  5C04               	subwf	delayed_ms@i^0,w,c
  5547   004CB8  5002               	movf	(delayed_ms@time+1)^0,w,c
  5548   004CBA  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5549   004CBC  A0D8               	btfss	status,0,c
  5550   004CBE  EF63  F026         	goto	u2981
  5551   004CC2  EF65  F026         	goto	u2980
  5552   004CC6                     u2981:
  5553   004CC6  EF50  F026         	goto	l3639
  5554   004CCA                     u2980:
  5555   004CCA  0012               	return		;funcret
  5556   004CCC                     __end_of_delayed_ms:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _ReverseYellow *****************
  5560 ;; Defined at:
  5561 ;;		line 334 in file "dc_motor.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5564 ;;		 -> motorL(9), 
  5565 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5566 ;;		 -> motorR(9), 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;Total ram usage:        4 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 5
  5585 ;; This function calls:
  5586 ;;		_ForwardOneBlock
  5587 ;;		_turnLeft45
  5588 ;; This function is called by:
  5589 ;;		_go_Home
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text27
  5594   004B9C                     __ptext27:
  5595                           	callstack 0
  5596   004B9C                     _ReverseYellow:
  5597                           	callstack 24
  5598   004B9C                     
  5599                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5600   004B9C  0EF3               	movlw	low _motorL
  5601   004B9E  6E1A               	movwf	turnLeft45@mL^0,c
  5602   004BA0  0E00               	movlw	high _motorL
  5603   004BA2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5604   004BA4  0EC0               	movlw	low _motorR
  5605   004BA6  6E1C               	movwf	turnLeft45@mR^0,c
  5606   004BA8  0E01               	movlw	high _motorR
  5607   004BAA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5608   004BAC  EC21  F025         	call	_turnLeft45	;wreg free
  5609                           
  5610                           ;dc_motor.c: 336:     turnLeft45(&motorL, &motorR);
  5611   004BB0  0EF3               	movlw	low _motorL
  5612   004BB2  6E1A               	movwf	turnLeft45@mL^0,c
  5613   004BB4  0E00               	movlw	high _motorL
  5614   004BB6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5615   004BB8  0EC0               	movlw	low _motorR
  5616   004BBA  6E1C               	movwf	turnLeft45@mR^0,c
  5617   004BBC  0E01               	movlw	high _motorR
  5618   004BBE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5619   004BC0  EC21  F025         	call	_turnLeft45	;wreg free
  5620                           
  5621                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  5622   004BC4  0EF3               	movlw	low _motorL
  5623   004BC6  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5624   004BC8  0E00               	movlw	high _motorL
  5625   004BCA  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5626   004BCC  0EC0               	movlw	low _motorR
  5627   004BCE  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5628   004BD0  0E01               	movlw	high _motorR
  5629   004BD2  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5630   004BD4  EC89  F022         	call	_ForwardOneBlock	;wreg free
  5631   004BD8  0012               	return		;funcret
  5632   004BDA                     __end_of_ReverseYellow:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _ReversePink *****************
  5636 ;; Defined at:
  5637 ;;		line 339 in file "dc_motor.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5640 ;;		 -> motorL(9), 
  5641 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5642 ;;		 -> motorR(9), 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        4 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 5
  5661 ;; This function calls:
  5662 ;;		_ForwardOneBlock
  5663 ;;		_turnRight45
  5664 ;; This function is called by:
  5665 ;;		_go_Home
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text28
  5670   004BDA                     __ptext28:
  5671                           	callstack 0
  5672   004BDA                     _ReversePink:
  5673                           	callstack 24
  5674   004BDA                     
  5675                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  5676   004BDA  0EF3               	movlw	low _motorL
  5677   004BDC  6E1A               	movwf	turnRight45@mL^0,c
  5678   004BDE  0E00               	movlw	high _motorL
  5679   004BE0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5680   004BE2  0EC0               	movlw	low _motorR
  5681   004BE4  6E1C               	movwf	turnRight45@mR^0,c
  5682   004BE6  0E01               	movlw	high _motorR
  5683   004BE8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5684   004BEA  ECFA  F024         	call	_turnRight45	;wreg free
  5685                           
  5686                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  5687   004BEE  0EF3               	movlw	low _motorL
  5688   004BF0  6E1A               	movwf	turnRight45@mL^0,c
  5689   004BF2  0E00               	movlw	high _motorL
  5690   004BF4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5691   004BF6  0EC0               	movlw	low _motorR
  5692   004BF8  6E1C               	movwf	turnRight45@mR^0,c
  5693   004BFA  0E01               	movlw	high _motorR
  5694   004BFC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5695   004BFE  ECFA  F024         	call	_turnRight45	;wreg free
  5696                           
  5697                           ;dc_motor.c: 342:     ForwardOneBlock(&motorL, &motorR);
  5698   004C02  0EF3               	movlw	low _motorL
  5699   004C04  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5700   004C06  0E00               	movlw	high _motorL
  5701   004C08  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5702   004C0A  0EC0               	movlw	low _motorR
  5703   004C0C  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5704   004C0E  0E01               	movlw	high _motorR
  5705   004C10  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5706   004C12  EC89  F022         	call	_ForwardOneBlock	;wreg free
  5707   004C16  0012               	return		;funcret
  5708   004C18                     __end_of_ReversePink:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _ForwardOneBlock *****************
  5712 ;; Defined at:
  5713 ;;		line 238 in file "dc_motor.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5716 ;;		 -> motorL(9), 
  5717 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5718 ;;		 -> motorR(9), 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;Total ram usage:        6 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 4
  5737 ;; This function calls:
  5738 ;;		_fullSpeedAhead
  5739 ;;		_stop
  5740 ;; This function is called by:
  5741 ;;		_ReverseYellow
  5742 ;;		_ReversePink
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text29
  5747   004512                     __ptext29:
  5748                           	callstack 0
  5749   004512                     _ForwardOneBlock:
  5750                           	callstack 24
  5751   004512                     
  5752                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  5753   004512  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5754   004516  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5755   00451A  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5756   00451E  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5757   004522  EC5F  F020         	call	_fullSpeedAhead	;wreg free
  5758   004526                     
  5759                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5760   004526  0EA3               	movlw	163
  5761   004528  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5762   00452A  0E57               	movlw	87
  5763   00452C  6E1E               	movwf	??_ForwardOneBlock^0,c
  5764   00452E  0E02               	movlw	2
  5765   004530                     u5047:
  5766   004530  2EE8               	decfsz	wreg,f,c
  5767   004532  D7FE               	bra	u5047
  5768   004534  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5769   004536  D7FC               	bra	u5047
  5770   004538  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5771   00453A  D7FA               	bra	u5047
  5772   00453C  D000               	nop2	
  5773   00453E                     
  5774                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  5775   00453E  0EF3               	movlw	low _motorL
  5776   004540  6E14               	movwf	stop@mL^0,c
  5777   004542  0E00               	movlw	high _motorL
  5778   004544  6E15               	movwf	(stop@mL+1)^0,c
  5779   004546  0EC0               	movlw	low _motorR
  5780   004548  6E16               	movwf	stop@mR^0,c
  5781   00454A  0E01               	movlw	high _motorR
  5782   00454C  6E17               	movwf	(stop@mR+1)^0,c
  5783   00454E  EC33  F021         	call	_stop	;wreg free
  5784                           
  5785                           ;dc_motor.c: 242:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5786   004552  0E52               	movlw	82
  5787   004554  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5788   004556  0E2B               	movlw	43
  5789   004558  6E1E               	movwf	??_ForwardOneBlock^0,c
  5790   00455A  0E00               	movlw	0
  5791   00455C                     u5057:
  5792   00455C  2EE8               	decfsz	wreg,f,c
  5793   00455E  D7FE               	bra	u5057
  5794   004560  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5795   004562  D7FC               	bra	u5057
  5796   004564  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5797   004566  D7FA               	bra	u5057
  5798   004568  D000               	nop2	
  5799   00456A  0012               	return		;funcret
  5800   00456C                     __end_of_ForwardOneBlock:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _RedMove *****************
  5804 ;; Defined at:
  5805 ;;		line 262 in file "dc_motor.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5808 ;;		 -> motorL(9), 
  5809 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5810 ;;		 -> motorR(9), 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;Total ram usage:        4 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; Hardware stack levels required when called: 5
  5829 ;; This function calls:
  5830 ;;		_reverseDetect
  5831 ;;		_turnRight45
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;;		_go_Home
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text30
  5839   004C18                     __ptext30:
  5840                           	callstack 0
  5841   004C18                     _RedMove:
  5842                           	callstack 24
  5843   004C18                     
  5844                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  5845   004C18  0EF3               	movlw	low _motorL
  5846   004C1A  6E1A               	movwf	reverseDetect@mL^0,c
  5847   004C1C  0E00               	movlw	high _motorL
  5848   004C1E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5849   004C20  0EC0               	movlw	low _motorR
  5850   004C22  6E1C               	movwf	reverseDetect@mR^0,c
  5851   004C24  0E01               	movlw	high _motorR
  5852   004C26  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5853   004C28  ECE3  F022         	call	_reverseDetect	;wreg free
  5854                           
  5855                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  5856   004C2C  0EF3               	movlw	low _motorL
  5857   004C2E  6E1A               	movwf	turnRight45@mL^0,c
  5858   004C30  0E00               	movlw	high _motorL
  5859   004C32  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5860   004C34  0EC0               	movlw	low _motorR
  5861   004C36  6E1C               	movwf	turnRight45@mR^0,c
  5862   004C38  0E01               	movlw	high _motorR
  5863   004C3A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5864   004C3C  ECFA  F024         	call	_turnRight45	;wreg free
  5865                           
  5866                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  5867   004C40  0EF3               	movlw	low _motorL
  5868   004C42  6E1A               	movwf	turnRight45@mL^0,c
  5869   004C44  0E00               	movlw	high _motorL
  5870   004C46  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5871   004C48  0EC0               	movlw	low _motorR
  5872   004C4A  6E1C               	movwf	turnRight45@mR^0,c
  5873   004C4C  0E01               	movlw	high _motorR
  5874   004C4E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5875   004C50  ECFA  F024         	call	_turnRight45	;wreg free
  5876   004C54  0012               	return		;funcret
  5877   004C56                     __end_of_RedMove:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _OrangeMove *****************
  5881 ;; Defined at:
  5882 ;;		line 308 in file "dc_motor.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5885 ;;		 -> motorL(9), 
  5886 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5887 ;;		 -> motorR(9), 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 5
  5906 ;; This function calls:
  5907 ;;		_reverseDetect
  5908 ;;		_turnRight45
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;;		_go_Home
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text31
  5916   0046CC                     __ptext31:
  5917                           	callstack 0
  5918   0046CC                     _OrangeMove:
  5919                           	callstack 24
  5920   0046CC                     
  5921                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  5922   0046CC  0EF3               	movlw	low _motorL
  5923   0046CE  6E1A               	movwf	reverseDetect@mL^0,c
  5924   0046D0  0E00               	movlw	high _motorL
  5925   0046D2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5926   0046D4  0EC0               	movlw	low _motorR
  5927   0046D6  6E1C               	movwf	reverseDetect@mR^0,c
  5928   0046D8  0E01               	movlw	high _motorR
  5929   0046DA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5930   0046DC  ECE3  F022         	call	_reverseDetect	;wreg free
  5931                           
  5932                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5933   0046E0  0EF3               	movlw	low _motorL
  5934   0046E2  6E1A               	movwf	turnRight45@mL^0,c
  5935   0046E4  0E00               	movlw	high _motorL
  5936   0046E6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5937   0046E8  0EC0               	movlw	low _motorR
  5938   0046EA  6E1C               	movwf	turnRight45@mR^0,c
  5939   0046EC  0E01               	movlw	high _motorR
  5940   0046EE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5941   0046F0  ECFA  F024         	call	_turnRight45	;wreg free
  5942                           
  5943                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  5944   0046F4  0EF3               	movlw	low _motorL
  5945   0046F6  6E1A               	movwf	turnRight45@mL^0,c
  5946   0046F8  0E00               	movlw	high _motorL
  5947   0046FA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5948   0046FC  0EC0               	movlw	low _motorR
  5949   0046FE  6E1C               	movwf	turnRight45@mR^0,c
  5950   004700  0E01               	movlw	high _motorR
  5951   004702  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5952   004704  ECFA  F024         	call	_turnRight45	;wreg free
  5953                           
  5954                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  5955   004708  0EF3               	movlw	low _motorL
  5956   00470A  6E1A               	movwf	turnRight45@mL^0,c
  5957   00470C  0E00               	movlw	high _motorL
  5958   00470E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5959   004710  0EC0               	movlw	low _motorR
  5960   004712  6E1C               	movwf	turnRight45@mR^0,c
  5961   004714  0E01               	movlw	high _motorR
  5962   004716  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5963   004718  ECFA  F024         	call	_turnRight45	;wreg free
  5964   00471C  0012               	return		;funcret
  5965   00471E                     __end_of_OrangeMove:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _LightBlueMove *****************
  5969 ;; Defined at:
  5970 ;;		line 317 in file "dc_motor.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5973 ;;		 -> motorL(9), 
  5974 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5975 ;;		 -> motorR(9), 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;Total ram usage:        4 bytes
  5992 ;; Hardware stack levels used: 1
  5993 ;; Hardware stack levels required when called: 5
  5994 ;; This function calls:
  5995 ;;		_reverseDetect
  5996 ;;		_turnLeft45
  5997 ;; This function is called by:
  5998 ;;		_main
  5999 ;;		_go_Home
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text32
  6004   00471E                     __ptext32:
  6005                           	callstack 0
  6006   00471E                     _LightBlueMove:
  6007                           	callstack 24
  6008   00471E                     
  6009                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  6010   00471E  0EF3               	movlw	low _motorL
  6011   004720  6E1A               	movwf	reverseDetect@mL^0,c
  6012   004722  0E00               	movlw	high _motorL
  6013   004724  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6014   004726  0EC0               	movlw	low _motorR
  6015   004728  6E1C               	movwf	reverseDetect@mR^0,c
  6016   00472A  0E01               	movlw	high _motorR
  6017   00472C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6018   00472E  ECE3  F022         	call	_reverseDetect	;wreg free
  6019                           
  6020                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  6021   004732  0EF3               	movlw	low _motorL
  6022   004734  6E1A               	movwf	turnLeft45@mL^0,c
  6023   004736  0E00               	movlw	high _motorL
  6024   004738  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6025   00473A  0EC0               	movlw	low _motorR
  6026   00473C  6E1C               	movwf	turnLeft45@mR^0,c
  6027   00473E  0E01               	movlw	high _motorR
  6028   004740  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6029   004742  EC21  F025         	call	_turnLeft45	;wreg free
  6030                           
  6031                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  6032   004746  0EF3               	movlw	low _motorL
  6033   004748  6E1A               	movwf	turnLeft45@mL^0,c
  6034   00474A  0E00               	movlw	high _motorL
  6035   00474C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6036   00474E  0EC0               	movlw	low _motorR
  6037   004750  6E1C               	movwf	turnLeft45@mR^0,c
  6038   004752  0E01               	movlw	high _motorR
  6039   004754  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6040   004756  EC21  F025         	call	_turnLeft45	;wreg free
  6041                           
  6042                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  6043   00475A  0EF3               	movlw	low _motorL
  6044   00475C  6E1A               	movwf	turnLeft45@mL^0,c
  6045   00475E  0E00               	movlw	high _motorL
  6046   004760  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6047   004762  0EC0               	movlw	low _motorR
  6048   004764  6E1C               	movwf	turnLeft45@mR^0,c
  6049   004766  0E01               	movlw	high _motorR
  6050   004768  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6051   00476A  EC21  F025         	call	_turnLeft45	;wreg free
  6052   00476E  0012               	return		;funcret
  6053   004770                     __end_of_LightBlueMove:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _GreenMove *****************
  6057 ;; Defined at:
  6058 ;;		line 270 in file "dc_motor.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6061 ;;		 -> motorL(9), 
  6062 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6063 ;;		 -> motorR(9), 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;Total ram usage:        4 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; Hardware stack levels required when called: 5
  6082 ;; This function calls:
  6083 ;;		_reverseDetect
  6084 ;;		_turnLeft45
  6085 ;; This function is called by:
  6086 ;;		_main
  6087 ;;		_go_Home
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text33
  6092   004C56                     __ptext33:
  6093                           	callstack 0
  6094   004C56                     _GreenMove:
  6095                           	callstack 24
  6096   004C56                     
  6097                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  6098   004C56  0EF3               	movlw	low _motorL
  6099   004C58  6E1A               	movwf	reverseDetect@mL^0,c
  6100   004C5A  0E00               	movlw	high _motorL
  6101   004C5C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6102   004C5E  0EC0               	movlw	low _motorR
  6103   004C60  6E1C               	movwf	reverseDetect@mR^0,c
  6104   004C62  0E01               	movlw	high _motorR
  6105   004C64  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6106   004C66  ECE3  F022         	call	_reverseDetect	;wreg free
  6107                           
  6108                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  6109   004C6A  0EF3               	movlw	low _motorL
  6110   004C6C  6E1A               	movwf	turnLeft45@mL^0,c
  6111   004C6E  0E00               	movlw	high _motorL
  6112   004C70  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6113   004C72  0EC0               	movlw	low _motorR
  6114   004C74  6E1C               	movwf	turnLeft45@mR^0,c
  6115   004C76  0E01               	movlw	high _motorR
  6116   004C78  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6117   004C7A  EC21  F025         	call	_turnLeft45	;wreg free
  6118                           
  6119                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  6120   004C7E  0EF3               	movlw	low _motorL
  6121   004C80  6E1A               	movwf	turnLeft45@mL^0,c
  6122   004C82  0E00               	movlw	high _motorL
  6123   004C84  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6124   004C86  0EC0               	movlw	low _motorR
  6125   004C88  6E1C               	movwf	turnLeft45@mR^0,c
  6126   004C8A  0E01               	movlw	high _motorR
  6127   004C8C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6128   004C8E  EC21  F025         	call	_turnLeft45	;wreg free
  6129   004C92  0012               	return		;funcret
  6130   004C94                     __end_of_GreenMove:
  6131                           	callstack 0
  6132                           
  6133 ;; *************** function _BlueMove *****************
  6134 ;; Defined at:
  6135 ;;		line 278 in file "dc_motor.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6138 ;;		 -> motorL(9), 
  6139 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6140 ;;		 -> motorR(9), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;Total ram usage:        4 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 5
  6159 ;; This function calls:
  6160 ;;		_reverseDetect
  6161 ;;		_turnRight45
  6162 ;; This function is called by:
  6163 ;;		_main
  6164 ;;		_go_Home
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text34
  6169   00444E                     __ptext34:
  6170                           	callstack 0
  6171   00444E                     _BlueMove:
  6172                           	callstack 24
  6173   00444E                     
  6174                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6175   00444E  0EF3               	movlw	low _motorL
  6176   004450  6E1A               	movwf	reverseDetect@mL^0,c
  6177   004452  0E00               	movlw	high _motorL
  6178   004454  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6179   004456  0EC0               	movlw	low _motorR
  6180   004458  6E1C               	movwf	reverseDetect@mR^0,c
  6181   00445A  0E01               	movlw	high _motorR
  6182   00445C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6183   00445E  ECE3  F022         	call	_reverseDetect	;wreg free
  6184                           
  6185                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  6186   004462  0EF3               	movlw	low _motorL
  6187   004464  6E1A               	movwf	turnRight45@mL^0,c
  6188   004466  0E00               	movlw	high _motorL
  6189   004468  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6190   00446A  0EC0               	movlw	low _motorR
  6191   00446C  6E1C               	movwf	turnRight45@mR^0,c
  6192   00446E  0E01               	movlw	high _motorR
  6193   004470  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6194   004472  ECFA  F024         	call	_turnRight45	;wreg free
  6195                           
  6196                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  6197   004476  0EF3               	movlw	low _motorL
  6198   004478  6E1A               	movwf	turnRight45@mL^0,c
  6199   00447A  0E00               	movlw	high _motorL
  6200   00447C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6201   00447E  0EC0               	movlw	low _motorR
  6202   004480  6E1C               	movwf	turnRight45@mR^0,c
  6203   004482  0E01               	movlw	high _motorR
  6204   004484  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6205   004486  ECFA  F024         	call	_turnRight45	;wreg free
  6206                           
  6207                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6208   00448A  0EF3               	movlw	low _motorL
  6209   00448C  6E1A               	movwf	turnRight45@mL^0,c
  6210   00448E  0E00               	movlw	high _motorL
  6211   004490  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6212   004492  0EC0               	movlw	low _motorR
  6213   004494  6E1C               	movwf	turnRight45@mR^0,c
  6214   004496  0E01               	movlw	high _motorR
  6215   004498  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6216   00449A  ECFA  F024         	call	_turnRight45	;wreg free
  6217                           
  6218                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6219   00449E  0EF3               	movlw	low _motorL
  6220   0044A0  6E1A               	movwf	turnRight45@mL^0,c
  6221   0044A2  0E00               	movlw	high _motorL
  6222   0044A4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6223   0044A6  0EC0               	movlw	low _motorR
  6224   0044A8  6E1C               	movwf	turnRight45@mR^0,c
  6225   0044AA  0E01               	movlw	high _motorR
  6226   0044AC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6227   0044AE  ECFA  F024         	call	_turnRight45	;wreg free
  6228   0044B2  0012               	return		;funcret
  6229   0044B4                     __end_of_BlueMove:
  6230                           	callstack 0
  6231                           
  6232 ;; *************** function _getTMR0val *****************
  6233 ;; Defined at:
  6234 ;;		line 28 in file "timers.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  moving          2    0[COMRAM] int 
  6239 ;;  temp            2    0        unsigned int 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;Total ram usage:        2 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 1
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_main
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text35
  6264   004D84                     __ptext35:
  6265                           	callstack 0
  6266   004D84                     _getTMR0val:
  6267                           	callstack 29
  6268   004D84  50D3               	movf	211,w,c	;volatile
  6269   004D86                     
  6270                           ;timers.c: 32:     int moving=TMR0H<<8;
  6271   004D86  50D4               	movf	212,w,c	;volatile
  6272   004D88  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6273   004D8A  6A01               	clrf	getTMR0val@moving^0,c
  6274   004D8C                     
  6275                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6276   004D8C  90D8               	bcf	status,0,c
  6277   004D8E  0100               	movlb	0	; () banked
  6278   004D90  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  6279   004D92  6ED9               	movwf	fsr2l,c
  6280   004D94  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6281   004D96  6EDA               	movwf	fsr2h,c
  6282   004D98  0E00               	movlw	low _Time_forward
  6283   004D9A  26D9               	addwf	fsr2l,f,c
  6284   004D9C  0E02               	movlw	high _Time_forward
  6285   004D9E  22DA               	addwfc	fsr2h,f,c
  6286   004DA0  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6287   004DA4  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6288   004DA8                     
  6289                           ; BSR set to: 0
  6290   004DA8  0012               	return		;funcret
  6291   004DAA                     __end_of_getTMR0val:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function _colour_rel *****************
  6295 ;; Defined at:
  6296 ;;		line 114 in file "color.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  vals            2   49[COMRAM] PTR struct RGB
  6299 ;;		 -> vals(8), 
  6300 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6301 ;;		 -> rel(12), 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  B               4   73[COMRAM] float 
  6304 ;;  G               4   69[COMRAM] float 
  6305 ;;  R               4   65[COMRAM] float 
  6306 ;;  L               4   53[COMRAM] float 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:       28 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 2
  6323 ;; This function calls:
  6324 ;;		___fladd
  6325 ;;		___fldiv
  6326 ;;		___xxtofl
  6327 ;; This function is called by:
  6328 ;;		_main
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text36
  6333   002ACA                     __ptext36:
  6334                           	callstack 0
  6335   002ACA                     _colour_rel:
  6336                           	callstack 28
  6337   002ACA                     
  6338                           ;color.c: 115:     float R = vals->R;
  6339   002ACA  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6340   002ACE  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6341   002AD2  CFDE F001          	movff	postinc2,___xxtofl@val
  6342   002AD6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6343   002ADA  0E00               	movlw	0
  6344   002ADC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6345   002ADE  0EFF               	movlw	-1
  6346   002AE0  6E03               	movwf	(___xxtofl@val+2)^0,c
  6347   002AE2  6E04               	movwf	(___xxtofl@val+3)^0,c
  6348   002AE4  0E01               	movlw	1
  6349   002AE6  EC34  F01A         	call	___xxtofl
  6350   002AEA  C001  F042         	movff	?___xxtofl,colour_rel@R
  6351   002AEE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6352   002AF2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6353   002AF6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6354                           
  6355                           ;color.c: 116:     float G = vals->G;
  6356   002AFA  EE20 F002          	lfsr	2,2
  6357   002AFE  5032               	movf	colour_rel@vals^0,w,c
  6358   002B00  26D9               	addwf	fsr2l,f,c
  6359   002B02  5033               	movf	(colour_rel@vals+1)^0,w,c
  6360   002B04  22DA               	addwfc	fsr2h,f,c
  6361   002B06  CFDE F001          	movff	postinc2,___xxtofl@val
  6362   002B0A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6363   002B0E  0E00               	movlw	0
  6364   002B10  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6365   002B12  0EFF               	movlw	-1
  6366   002B14  6E03               	movwf	(___xxtofl@val+2)^0,c
  6367   002B16  6E04               	movwf	(___xxtofl@val+3)^0,c
  6368   002B18  0E01               	movlw	1
  6369   002B1A  EC34  F01A         	call	___xxtofl
  6370   002B1E  C001  F046         	movff	?___xxtofl,colour_rel@G
  6371   002B22  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6372   002B26  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6373   002B2A  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6374                           
  6375                           ;color.c: 117:     float B = vals->B;
  6376   002B2E  EE20 F004          	lfsr	2,4
  6377   002B32  5032               	movf	colour_rel@vals^0,w,c
  6378   002B34  26D9               	addwf	fsr2l,f,c
  6379   002B36  5033               	movf	(colour_rel@vals+1)^0,w,c
  6380   002B38  22DA               	addwfc	fsr2h,f,c
  6381   002B3A  CFDE F001          	movff	postinc2,___xxtofl@val
  6382   002B3E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6383   002B42  0E00               	movlw	0
  6384   002B44  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6385   002B46  0EFF               	movlw	-1
  6386   002B48  6E03               	movwf	(___xxtofl@val+2)^0,c
  6387   002B4A  6E04               	movwf	(___xxtofl@val+3)^0,c
  6388   002B4C  0E01               	movlw	1
  6389   002B4E  EC34  F01A         	call	___xxtofl
  6390   002B52  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6391   002B56  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6392   002B5A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6393   002B5E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6394                           
  6395                           ;color.c: 118:     float L = vals->L;
  6396   002B62  EE20 F006          	lfsr	2,6
  6397   002B66  5032               	movf	colour_rel@vals^0,w,c
  6398   002B68  26D9               	addwf	fsr2l,f,c
  6399   002B6A  5033               	movf	(colour_rel@vals+1)^0,w,c
  6400   002B6C  22DA               	addwfc	fsr2h,f,c
  6401   002B6E  CFDE F001          	movff	postinc2,___xxtofl@val
  6402   002B72  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6403   002B76  0E00               	movlw	0
  6404   002B78  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6405   002B7A  0EFF               	movlw	-1
  6406   002B7C  6E03               	movwf	(___xxtofl@val+2)^0,c
  6407   002B7E  6E04               	movwf	(___xxtofl@val+3)^0,c
  6408   002B80  0E01               	movlw	1
  6409   002B82  EC34  F01A         	call	___xxtofl
  6410   002B86  C001  F036         	movff	?___xxtofl,colour_rel@L
  6411   002B8A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6412   002B8E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6413   002B92  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6414   002B96                     
  6415                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6416   002B96  C046  F005         	movff	colour_rel@G,___fladd@a
  6417   002B9A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6418   002B9E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6419   002BA2  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6420   002BA6  C042  F001         	movff	colour_rel@R,___fladd@b
  6421   002BAA  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6422   002BAE  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6423   002BB2  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6424   002BB6  EC23  F00F         	call	___fladd	;wreg free
  6425   002BBA  C001  F03A         	movff	?___fladd,_colour_rel$3025
  6426   002BBE  C002  F03B         	movff	?___fladd+1,_colour_rel$3025+1
  6427   002BC2  C003  F03C         	movff	?___fladd+2,_colour_rel$3025+2
  6428   002BC6  C004  F03D         	movff	?___fladd+3,_colour_rel$3025+3
  6429   002BCA                     
  6430                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6431   002BCA  C04A  F005         	movff	colour_rel@B,___fladd@a
  6432   002BCE  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6433   002BD2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6434   002BD6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6435   002BDA  C03A  F001         	movff	_colour_rel$3025,___fladd@b
  6436   002BDE  C03B  F002         	movff	_colour_rel$3025+1,___fladd@b+1
  6437   002BE2  C03C  F003         	movff	_colour_rel$3025+2,___fladd@b+2
  6438   002BE6  C03D  F004         	movff	_colour_rel$3025+3,___fladd@b+3
  6439   002BEA  EC23  F00F         	call	___fladd	;wreg free
  6440   002BEE  C001  F03E         	movff	?___fladd,_colour_rel$3026
  6441   002BF2  C002  F03F         	movff	?___fladd+1,_colour_rel$3026+1
  6442   002BF6  C003  F040         	movff	?___fladd+2,_colour_rel$3026+2
  6443   002BFA  C004  F041         	movff	?___fladd+3,_colour_rel$3026+3
  6444                           
  6445                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6446   002BFE  C042  F019         	movff	colour_rel@R,___fldiv@b
  6447   002C02  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6448   002C06  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6449   002C0A  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6450   002C0E  C036  F005         	movff	colour_rel@L,___fladd@a
  6451   002C12  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6452   002C16  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6453   002C1A  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6454   002C1E  C03E  F001         	movff	_colour_rel$3026,___fladd@b
  6455   002C22  C03F  F002         	movff	_colour_rel$3026+1,___fladd@b+1
  6456   002C26  C040  F003         	movff	_colour_rel$3026+2,___fladd@b+2
  6457   002C2A  C041  F004         	movff	_colour_rel$3026+3,___fladd@b+3
  6458   002C2E  EC23  F00F         	call	___fladd	;wreg free
  6459   002C32  C001  F01D         	movff	?___fladd,___fldiv@a
  6460   002C36  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6461   002C3A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6462   002C3E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6463   002C42  EC98  F013         	call	___fldiv	;wreg free
  6464   002C46  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6465   002C4A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6466   002C4E  C019  FFDE         	movff	?___fldiv,postinc2
  6467   002C52  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6468   002C56  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6469   002C5A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6470   002C5E                     
  6471                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6472   002C5E  C046  F005         	movff	colour_rel@G,___fladd@a
  6473   002C62  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6474   002C66  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6475   002C6A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6476   002C6E  C042  F001         	movff	colour_rel@R,___fladd@b
  6477   002C72  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6478   002C76  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6479   002C7A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6480   002C7E  EC23  F00F         	call	___fladd	;wreg free
  6481   002C82  C001  F03A         	movff	?___fladd,_colour_rel$3025
  6482   002C86  C002  F03B         	movff	?___fladd+1,_colour_rel$3025+1
  6483   002C8A  C003  F03C         	movff	?___fladd+2,_colour_rel$3025+2
  6484   002C8E  C004  F03D         	movff	?___fladd+3,_colour_rel$3025+3
  6485   002C92                     
  6486                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6487   002C92  C04A  F005         	movff	colour_rel@B,___fladd@a
  6488   002C96  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6489   002C9A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6490   002C9E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6491   002CA2  C03A  F001         	movff	_colour_rel$3025,___fladd@b
  6492   002CA6  C03B  F002         	movff	_colour_rel$3025+1,___fladd@b+1
  6493   002CAA  C03C  F003         	movff	_colour_rel$3025+2,___fladd@b+2
  6494   002CAE  C03D  F004         	movff	_colour_rel$3025+3,___fladd@b+3
  6495   002CB2  EC23  F00F         	call	___fladd	;wreg free
  6496   002CB6  C001  F03E         	movff	?___fladd,_colour_rel$3026
  6497   002CBA  C002  F03F         	movff	?___fladd+1,_colour_rel$3026+1
  6498   002CBE  C003  F040         	movff	?___fladd+2,_colour_rel$3026+2
  6499   002CC2  C004  F041         	movff	?___fladd+3,_colour_rel$3026+3
  6500                           
  6501                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6502   002CC6  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6503   002CCA  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6504   002CCE  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6505   002CD2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6506   002CD6  C036  F005         	movff	colour_rel@L,___fladd@a
  6507   002CDA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6508   002CDE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6509   002CE2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6510   002CE6  C03E  F001         	movff	_colour_rel$3026,___fladd@b
  6511   002CEA  C03F  F002         	movff	_colour_rel$3026+1,___fladd@b+1
  6512   002CEE  C040  F003         	movff	_colour_rel$3026+2,___fladd@b+2
  6513   002CF2  C041  F004         	movff	_colour_rel$3026+3,___fladd@b+3
  6514   002CF6  EC23  F00F         	call	___fladd	;wreg free
  6515   002CFA  C001  F01D         	movff	?___fladd,___fldiv@a
  6516   002CFE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6517   002D02  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6518   002D06  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6519   002D0A  EC98  F013         	call	___fldiv	;wreg free
  6520   002D0E  EE20 F008          	lfsr	2,8
  6521   002D12  5034               	movf	colour_rel@rel^0,w,c
  6522   002D14  26D9               	addwf	fsr2l,f,c
  6523   002D16  5035               	movf	(colour_rel@rel+1)^0,w,c
  6524   002D18  22DA               	addwfc	fsr2h,f,c
  6525   002D1A  C019  FFDE         	movff	?___fldiv,postinc2
  6526   002D1E  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6527   002D22  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6528   002D26  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6529   002D2A                     
  6530                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6531   002D2A  C046  F005         	movff	colour_rel@G,___fladd@a
  6532   002D2E  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6533   002D32  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6534   002D36  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6535   002D3A  C042  F001         	movff	colour_rel@R,___fladd@b
  6536   002D3E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6537   002D42  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6538   002D46  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6539   002D4A  EC23  F00F         	call	___fladd	;wreg free
  6540   002D4E  C001  F03A         	movff	?___fladd,_colour_rel$3025
  6541   002D52  C002  F03B         	movff	?___fladd+1,_colour_rel$3025+1
  6542   002D56  C003  F03C         	movff	?___fladd+2,_colour_rel$3025+2
  6543   002D5A  C004  F03D         	movff	?___fladd+3,_colour_rel$3025+3
  6544   002D5E                     
  6545                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6546   002D5E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6547   002D62  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6548   002D66  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6549   002D6A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6550   002D6E  C03A  F001         	movff	_colour_rel$3025,___fladd@b
  6551   002D72  C03B  F002         	movff	_colour_rel$3025+1,___fladd@b+1
  6552   002D76  C03C  F003         	movff	_colour_rel$3025+2,___fladd@b+2
  6553   002D7A  C03D  F004         	movff	_colour_rel$3025+3,___fladd@b+3
  6554   002D7E  EC23  F00F         	call	___fladd	;wreg free
  6555   002D82  C001  F03E         	movff	?___fladd,_colour_rel$3026
  6556   002D86  C002  F03F         	movff	?___fladd+1,_colour_rel$3026+1
  6557   002D8A  C003  F040         	movff	?___fladd+2,_colour_rel$3026+2
  6558   002D8E  C004  F041         	movff	?___fladd+3,_colour_rel$3026+3
  6559                           
  6560                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6561   002D92  C046  F019         	movff	colour_rel@G,___fldiv@b
  6562   002D96  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6563   002D9A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6564   002D9E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6565   002DA2  C036  F005         	movff	colour_rel@L,___fladd@a
  6566   002DA6  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6567   002DAA  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6568   002DAE  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6569   002DB2  C03E  F001         	movff	_colour_rel$3026,___fladd@b
  6570   002DB6  C03F  F002         	movff	_colour_rel$3026+1,___fladd@b+1
  6571   002DBA  C040  F003         	movff	_colour_rel$3026+2,___fladd@b+2
  6572   002DBE  C041  F004         	movff	_colour_rel$3026+3,___fladd@b+3
  6573   002DC2  EC23  F00F         	call	___fladd	;wreg free
  6574   002DC6  C001  F01D         	movff	?___fladd,___fldiv@a
  6575   002DCA  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6576   002DCE  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6577   002DD2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6578   002DD6  EC98  F013         	call	___fldiv	;wreg free
  6579   002DDA  EE20 F004          	lfsr	2,4
  6580   002DDE  5034               	movf	colour_rel@rel^0,w,c
  6581   002DE0  26D9               	addwf	fsr2l,f,c
  6582   002DE2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6583   002DE4  22DA               	addwfc	fsr2h,f,c
  6584   002DE6  C019  FFDE         	movff	?___fldiv,postinc2
  6585   002DEA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6586   002DEE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6587   002DF2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6588   002DF6  0012               	return		;funcret
  6589   002DF8                     __end_of_colour_rel:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _color_click_init *****************
  6593 ;; Defined at:
  6594 ;;		line 7 in file "color.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;Total ram usage:        1 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 4
  6615 ;; This function calls:
  6616 ;;		_I2C_2_Master_Init
  6617 ;;		_color_writetoaddr
  6618 ;; This function is called by:
  6619 ;;		_main
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text37
  6624   004770                     __ptext37:
  6625                           	callstack 0
  6626   004770                     _color_click_init:
  6627                           	callstack 26
  6628   004770                     
  6629                           ;color.c: 10:     I2C_2_Master_Init();
  6630   004770  EC99  F026         	call	_I2C_2_Master_Init	;wreg free
  6631   004774                     
  6632                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6633   004774  0E01               	movlw	1
  6634   004776  6E03               	movwf	color_writetoaddr@value^0,c
  6635   004778  0E00               	movlw	0
  6636   00477A  ECE8  F026         	call	_color_writetoaddr
  6637   00477E                     
  6638                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6639   00477E  0E3F               	movlw	63
  6640   004780  6E05               	movwf	??_color_click_init^0,c
  6641   004782  0E55               	movlw	85
  6642   004784                     u5067:
  6643   004784  2EE8               	decfsz	wreg,f,c
  6644   004786  D7FE               	bra	u5067
  6645   004788  2E05               	decfsz	??_color_click_init^0,f,c
  6646   00478A  D7FC               	bra	u5067
  6647   00478C  F000               	nop	
  6648   00478E                     
  6649                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6650   00478E  0E03               	movlw	3
  6651   004790  6E03               	movwf	color_writetoaddr@value^0,c
  6652   004792  0E00               	movlw	0
  6653   004794  ECE8  F026         	call	_color_writetoaddr
  6654   004798                     
  6655                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6656   004798  0ED5               	movlw	213
  6657   00479A  6E03               	movwf	color_writetoaddr@value^0,c
  6658   00479C  0E01               	movlw	1
  6659   00479E  ECE8  F026         	call	_color_writetoaddr
  6660   0047A2                     
  6661                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6662   0047A2  0E00               	movlw	0
  6663   0047A4  6E03               	movwf	color_writetoaddr@value^0,c
  6664   0047A6  0E0F               	movlw	15
  6665   0047A8  ECE8  F026         	call	_color_writetoaddr
  6666   0047AC                     
  6667                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6668   0047AC  9287               	bcf	135,1,c	;volatile
  6669   0047AE                     
  6670                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6671   0047AE  9881               	bcf	129,4,c	;volatile
  6672   0047B0                     
  6673                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6674   0047B0  9E86               	bcf	134,7,c	;volatile
  6675   0047B2                     
  6676                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6677   0047B2  9684               	bcf	132,3,c	;volatile
  6678   0047B4                     
  6679                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6680   0047B4  9884               	bcf	132,4,c	;volatile
  6681   0047B6                     
  6682                           ;color.c: 28:     LATGbits.LATG1=0;
  6683   0047B6  927F               	bcf	127,1,c	;volatile
  6684   0047B8                     
  6685                           ;color.c: 29:     LATFbits.LATF7=0;
  6686   0047B8  9E7E               	bcf	126,7,c	;volatile
  6687   0047BA                     
  6688                           ;color.c: 30:     LATAbits.LATA4=0;
  6689   0047BA  9879               	bcf	121,4,c	;volatile
  6690   0047BC                     
  6691                           ;color.c: 32:     LATDbits.LATD3=0;
  6692   0047BC  967C               	bcf	124,3,c	;volatile
  6693   0047BE                     
  6694                           ;color.c: 33:     LATDbits.LATD4=0;
  6695   0047BE  987C               	bcf	124,4,c	;volatile
  6696   0047C0  0012               	return		;funcret
  6697   0047C2                     __end_of_color_click_init:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function _color_writetoaddr *****************
  6701 ;; Defined at:
  6702 ;;		line 41 in file "color.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  address         1    wreg     unsigned char 
  6705 ;;  value           1    2[COMRAM] unsigned char 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  address         1    3[COMRAM] unsigned char 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;Total ram usage:        2 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; Hardware stack levels required when called: 3
  6724 ;; This function calls:
  6725 ;;		_I2C_2_Master_Start
  6726 ;;		_I2C_2_Master_Stop
  6727 ;;		_I2C_2_Master_Write
  6728 ;; This function is called by:
  6729 ;;		_color_click_init
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text38
  6734   004DD0                     __ptext38:
  6735                           	callstack 0
  6736   004DD0                     _color_writetoaddr:
  6737                           	callstack 26
  6738                           
  6739                           ;incstack = 0
  6740                           ;color_writetoaddr@address stored from wreg
  6741   004DD0  6E04               	movwf	color_writetoaddr@address^0,c
  6742   004DD2                     
  6743                           ;color.c: 42:     I2C_2_Master_Start();
  6744   004DD2  EC33  F027         	call	_I2C_2_Master_Start	;wreg free
  6745                           
  6746                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6747   004DD6  0E52               	movlw	82
  6748   004DD8  EC23  F027         	call	_I2C_2_Master_Write
  6749                           
  6750                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6751   004DDC  5004               	movf	color_writetoaddr@address^0,w,c
  6752   004DDE  0980               	iorlw	128
  6753   004DE0  EC23  F027         	call	_I2C_2_Master_Write
  6754                           
  6755                           ;color.c: 45:     I2C_2_Master_Write(value);
  6756   004DE4  5003               	movf	color_writetoaddr@value^0,w,c
  6757   004DE6  EC23  F027         	call	_I2C_2_Master_Write
  6758                           
  6759                           ;color.c: 46:     I2C_2_Master_Stop();
  6760   004DEA  EC2E  F027         	call	_I2C_2_Master_Stop	;wreg free
  6761   004DEE  0012               	return		;funcret
  6762   004DF0                     __end_of_color_writetoaddr:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _I2C_2_Master_Write *****************
  6766 ;; Defined at:
  6767 ;;		line 45 in file "i2c.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  data_byte       1    wreg     unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  data_byte       1    1[COMRAM] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;Total ram usage:        1 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 2
  6788 ;; This function calls:
  6789 ;;		_I2C_2_Master_Idle
  6790 ;; This function is called by:
  6791 ;;		_color_writetoaddr
  6792 ;;		_color_read_lum
  6793 ;;		_color_read_Red
  6794 ;;		_color_read_Green
  6795 ;;		_color_read_Blue
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text39
  6800   004E46                     __ptext39:
  6801                           	callstack 0
  6802   004E46                     _I2C_2_Master_Write:
  6803                           	callstack 26
  6804                           
  6805                           ;incstack = 0
  6806                           ;I2C_2_Master_Write@data_byte stored from wreg
  6807   004E46  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6808   004E48                     
  6809                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6810   004E48  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  6811   004E4C                     
  6812                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6813   004E4C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6814   004E50  0012               	return		;funcret
  6815   004E52                     __end_of_I2C_2_Master_Write:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _I2C_2_Master_Stop *****************
  6819 ;; Defined at:
  6820 ;;		line 39 in file "i2c.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used: 1
  6840 ;; Hardware stack levels required when called: 2
  6841 ;; This function calls:
  6842 ;;		_I2C_2_Master_Idle
  6843 ;; This function is called by:
  6844 ;;		_color_writetoaddr
  6845 ;;		_color_read_lum
  6846 ;;		_color_read_Red
  6847 ;;		_color_read_Green
  6848 ;;		_color_read_Blue
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text40
  6853   004E5C                     __ptext40:
  6854                           	callstack 0
  6855   004E5C                     _I2C_2_Master_Stop:
  6856                           	callstack 26
  6857   004E5C                     
  6858                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6859   004E5C  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  6860   004E60                     
  6861                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6862   004E60  010E               	movlb	14	; () banked
  6863   004E62  85DA               	bsf	218,2,b	;volatile
  6864   004E64                     
  6865                           ; BSR set to: 14
  6866   004E64  0012               	return		;funcret
  6867   004E66                     __end_of_I2C_2_Master_Stop:
  6868                           	callstack 0
  6869                           
  6870 ;; *************** function _I2C_2_Master_Start *****************
  6871 ;; Defined at:
  6872 ;;		line 27 in file "i2c.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;		None
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      void 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used: 1
  6892 ;; Hardware stack levels required when called: 2
  6893 ;; This function calls:
  6894 ;;		_I2C_2_Master_Idle
  6895 ;; This function is called by:
  6896 ;;		_color_writetoaddr
  6897 ;;		_color_read_lum
  6898 ;;		_color_read_Red
  6899 ;;		_color_read_Green
  6900 ;;		_color_read_Blue
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text41
  6905   004E66                     __ptext41:
  6906                           	callstack 0
  6907   004E66                     _I2C_2_Master_Start:
  6908                           	callstack 26
  6909   004E66                     
  6910                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6911   004E66  ECAE  F026         	call	_I2C_2_Master_Idle	;wreg free
  6912   004E6A                     
  6913                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6914   004E6A  010E               	movlb	14	; () banked
  6915   004E6C  81DA               	bsf	218,0,b	;volatile
  6916   004E6E                     
  6917                           ; BSR set to: 14
  6918   004E6E  0012               	return		;funcret
  6919   004E70                     __end_of_I2C_2_Master_Start:
  6920                           	callstack 0
  6921                           
  6922 ;; *************** function _I2C_2_Master_Idle *****************
  6923 ;; Defined at:
  6924 ;;		line 22 in file "i2c.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;Total ram usage:        1 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 1
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_I2C_2_Master_Start
  6949 ;;		_I2C_2_Master_RepStart
  6950 ;;		_I2C_2_Master_Stop
  6951 ;;		_I2C_2_Master_Write
  6952 ;;		_I2C_2_Master_Read
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text42
  6957   004D5C                     __ptext42:
  6958                           	callstack 0
  6959   004D5C                     _I2C_2_Master_Idle:
  6960                           	callstack 26
  6961   004D5C                     l143:
  6962   004D5C  010E               	movlb	14	; () banked
  6963   004D5E  B5D8               	btfsc	216,2,b	;volatile
  6964   004D60  EFB4  F026         	goto	u2731
  6965   004D64  EFB6  F026         	goto	u2730
  6966   004D68                     u2731:
  6967   004D68  EFAE  F026         	goto	l143
  6968   004D6C                     u2730:
  6969   004D6C                     
  6970                           ; BSR set to: 14
  6971   004D6C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6972   004D70  0E1F               	movlw	31
  6973   004D72  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6974   004D74  A4D8               	btfss	status,2,c
  6975   004D76  EFBF  F026         	goto	u2741
  6976   004D7A  EFC1  F026         	goto	u2740
  6977   004D7E                     u2741:
  6978   004D7E  EFAE  F026         	goto	l143
  6979   004D82                     u2740:
  6980   004D82                     
  6981                           ; BSR set to: 14
  6982   004D82  0012               	return		;funcret
  6983   004D84                     __end_of_I2C_2_Master_Idle:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function _I2C_2_Master_Init *****************
  6987 ;; Defined at:
  6988 ;;		line 4 in file "i2c.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;Total ram usage:        0 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; Hardware stack levels required when called: 1
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_color_click_init
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text43
  7018   004D32                     __ptext43:
  7019                           	callstack 0
  7020   004D32                     _I2C_2_Master_Init:
  7021                           	callstack 28
  7022   004D32                     
  7023                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7024   004D32  010E               	movlb	14	; () banked
  7025   004D34  51D9               	movf	217,w,b	;volatile
  7026   004D36  0BF0               	andlw	-16
  7027   004D38  0908               	iorlw	8
  7028   004D3A  6FD9               	movwf	217,b	;volatile
  7029   004D3C                     
  7030                           ; BSR set to: 14
  7031                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7032   004D3C  8BD9               	bsf	217,5,b	;volatile
  7033                           
  7034                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7035   004D3E  0E9F               	movlw	159
  7036   004D40  6FD6               	movwf	214,b	;volatile
  7037   004D42                     
  7038                           ; BSR set to: 14
  7039                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7040   004D42  8A84               	bsf	132,5,c	;volatile
  7041   004D44                     
  7042                           ; BSR set to: 14
  7043                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7044   004D44  8C84               	bsf	132,6,c	;volatile
  7045   004D46                     
  7046                           ; BSR set to: 14
  7047                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7048   004D46  9BA7               	bcf	167,5,b	;volatile
  7049   004D48                     
  7050                           ; BSR set to: 14
  7051                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7052   004D48  9DA7               	bcf	167,6,b	;volatile
  7053                           
  7054                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7055   004D4A  0E1D               	movlw	29
  7056   004D4C  6F1D               	movwf	29,b	;volatile
  7057                           
  7058                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7059   004D4E  0E1E               	movlw	30
  7060   004D50  6F1C               	movwf	28,b	;volatile
  7061                           
  7062                           ;i2c.c: 18:   RD5PPS=0x1C;
  7063   004D52  0E1C               	movlw	28
  7064   004D54  6F6F               	movwf	111,b	;volatile
  7065                           
  7066                           ;i2c.c: 19:   RD6PPS=0x1B;
  7067   004D56  0E1B               	movlw	27
  7068   004D58  6F70               	movwf	112,b	;volatile
  7069   004D5A                     
  7070                           ; BSR set to: 14
  7071   004D5A  0012               	return		;funcret
  7072   004D5C                     __end_of_I2C_2_Master_Init:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function _YellowMove *****************
  7076 ;; Defined at:
  7077 ;;		line 288 in file "dc_motor.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7080 ;;		 -> motorL(9), 
  7081 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7082 ;;		 -> motorR(9), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;Total ram usage:        4 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 5
  7101 ;; This function calls:
  7102 ;;		_reverseDetect
  7103 ;;		_reverseOneBlock
  7104 ;;		_turnRight45
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text44
  7111   0047C2                     __ptext44:
  7112                           	callstack 0
  7113   0047C2                     _YellowMove:
  7114                           	callstack 25
  7115   0047C2                     
  7116                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7117   0047C2  0EF3               	movlw	low _motorL
  7118   0047C4  6E1A               	movwf	reverseDetect@mL^0,c
  7119   0047C6  0E00               	movlw	high _motorL
  7120   0047C8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7121   0047CA  0EC0               	movlw	low _motorR
  7122   0047CC  6E1C               	movwf	reverseDetect@mR^0,c
  7123   0047CE  0E01               	movlw	high _motorR
  7124   0047D0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7125   0047D2  ECE3  F022         	call	_reverseDetect	;wreg free
  7126                           
  7127                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7128   0047D6  0EF3               	movlw	low _motorL
  7129   0047D8  6E1A               	movwf	reverseOneBlock@mL^0,c
  7130   0047DA  0E00               	movlw	high _motorL
  7131   0047DC  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7132   0047DE  0EC0               	movlw	low _motorR
  7133   0047E0  6E1C               	movwf	reverseOneBlock@mR^0,c
  7134   0047E2  0E01               	movlw	high _motorR
  7135   0047E4  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7136   0047E6  ECB6  F022         	call	_reverseOneBlock	;wreg free
  7137                           
  7138                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
  7139   0047EA  0EF3               	movlw	low _motorL
  7140   0047EC  6E1A               	movwf	turnRight45@mL^0,c
  7141   0047EE  0E00               	movlw	high _motorL
  7142   0047F0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7143   0047F2  0EC0               	movlw	low _motorR
  7144   0047F4  6E1C               	movwf	turnRight45@mR^0,c
  7145   0047F6  0E01               	movlw	high _motorR
  7146   0047F8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7147   0047FA  ECFA  F024         	call	_turnRight45	;wreg free
  7148                           
  7149                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
  7150   0047FE  0EF3               	movlw	low _motorL
  7151   004800  6E1A               	movwf	turnRight45@mL^0,c
  7152   004802  0E00               	movlw	high _motorL
  7153   004804  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7154   004806  0EC0               	movlw	low _motorR
  7155   004808  6E1C               	movwf	turnRight45@mR^0,c
  7156   00480A  0E01               	movlw	high _motorR
  7157   00480C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7158   00480E  ECFA  F024         	call	_turnRight45	;wreg free
  7159   004812  0012               	return		;funcret
  7160   004814                     __end_of_YellowMove:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _turnRight45 *****************
  7164 ;; Defined at:
  7165 ;;		line 211 in file "dc_motor.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7168 ;;		 -> motorL(9), 
  7169 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7170 ;;		 -> motorR(9), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;		None
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;Total ram usage:        6 bytes
  7187 ;; Hardware stack levels used: 1
  7188 ;; Hardware stack levels required when called: 4
  7189 ;; This function calls:
  7190 ;;		_TurnDelay
  7191 ;;		_stop
  7192 ;;		_turnRight
  7193 ;; This function is called by:
  7194 ;;		_RedMove
  7195 ;;		_BlueMove
  7196 ;;		_YellowMove
  7197 ;;		_OrangeMove
  7198 ;;		_ReversePink
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text45
  7203   0049F4                     __ptext45:
  7204                           	callstack 0
  7205   0049F4                     _turnRight45:
  7206                           	callstack 24
  7207   0049F4                     
  7208                           ;dc_motor.c: 212:     turnRight(mL,mR);
  7209   0049F4  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  7210   0049F8  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  7211   0049FC  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  7212   004A00  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  7213   004A04  EC72  F01F         	call	_turnRight	;wreg free
  7214   004A08                     
  7215                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
  7216   004A08  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7217   004A0C  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7218   004A10  EC66  F026         	call	_TurnDelay	;wreg free
  7219   004A14                     
  7220                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
  7221   004A14  0EF3               	movlw	low _motorL
  7222   004A16  6E14               	movwf	stop@mL^0,c
  7223   004A18  0E00               	movlw	high _motorL
  7224   004A1A  6E15               	movwf	(stop@mL+1)^0,c
  7225   004A1C  0EC0               	movlw	low _motorR
  7226   004A1E  6E16               	movwf	stop@mR^0,c
  7227   004A20  0E01               	movlw	high _motorR
  7228   004A22  6E17               	movwf	(stop@mR+1)^0,c
  7229   004A24  EC33  F021         	call	_stop	;wreg free
  7230   004A28                     
  7231                           ;dc_motor.c: 215:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7232   004A28  0E52               	movlw	82
  7233   004A2A  6E1F               	movwf	(??_turnRight45+1)^0,c
  7234   004A2C  0E2B               	movlw	43
  7235   004A2E  6E1E               	movwf	??_turnRight45^0,c
  7236   004A30  0E00               	movlw	0
  7237   004A32                     u5077:
  7238   004A32  2EE8               	decfsz	wreg,f,c
  7239   004A34  D7FE               	bra	u5077
  7240   004A36  2E1E               	decfsz	??_turnRight45^0,f,c
  7241   004A38  D7FC               	bra	u5077
  7242   004A3A  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7243   004A3C  D7FA               	bra	u5077
  7244   004A3E  D000               	nop2	
  7245   004A40  0012               	return		;funcret
  7246   004A42                     __end_of_turnRight45:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function _turnRight *****************
  7250 ;; Defined at:
  7251 ;;		line 129 in file "dc_motor.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7254 ;;		 -> motorL(9), 
  7255 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7256 ;;		 -> motorR(9), 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;Total ram usage:        6 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 3
  7275 ;; This function calls:
  7276 ;;		_setMotorPWM
  7277 ;; This function is called by:
  7278 ;;		_turnRight45
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text46
  7283   003EE4                     __ptext46:
  7284                           	callstack 0
  7285   003EE4                     _turnRight:
  7286                           	callstack 24
  7287   003EE4                     
  7288                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
  7289   003EE4  EE20 F001          	lfsr	2,1
  7290   003EE8  5014               	movf	turnRight@mL^0,w,c
  7291   003EEA  26D9               	addwf	fsr2l,f,c
  7292   003EEC  5015               	movf	(turnRight@mL+1)^0,w,c
  7293   003EEE  22DA               	addwfc	fsr2h,f,c
  7294   003EF0  0E01               	movlw	1
  7295   003EF2  6EDF               	movwf	indf2,c
  7296                           
  7297                           ;dc_motor.c: 132:     mR->direction =0;
  7298   003EF4  EE20 F001          	lfsr	2,1
  7299   003EF8  5016               	movf	turnRight@mR^0,w,c
  7300   003EFA  26D9               	addwf	fsr2l,f,c
  7301   003EFC  5017               	movf	(turnRight@mR+1)^0,w,c
  7302   003EFE  22DA               	addwfc	fsr2h,f,c
  7303   003F00  0E00               	movlw	0
  7304   003F02  6EDF               	movwf	indf2,c
  7305                           
  7306                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
  7307   003F04  EFA8  F01F         	goto	l3531
  7308   003F08                     l3523:
  7309                           
  7310                           ;dc_motor.c: 136:         mL->power+=10;
  7311   003F08  C014  FFD9         	movff	turnRight@mL,fsr2l
  7312   003F0C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7313   003F10  0E0A               	movlw	10
  7314   003F12  26DF               	addwf	indf2,f,c
  7315                           
  7316                           ;dc_motor.c: 137:         mR->power+=10;
  7317   003F14  C016  FFD9         	movff	turnRight@mR,fsr2l
  7318   003F18  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7319   003F1C  0E0A               	movlw	10
  7320   003F1E  26DF               	addwf	indf2,f,c
  7321   003F20                     
  7322                           ;dc_motor.c: 139:         setMotorPWM(mL);
  7323   003F20  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7324   003F24  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7325   003F28  ECD2  F01B         	call	_setMotorPWM	;wreg free
  7326   003F2C                     
  7327                           ;dc_motor.c: 140:         setMotorPWM(mR);
  7328   003F2C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7329   003F30  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7330   003F34  ECD2  F01B         	call	_setMotorPWM	;wreg free
  7331   003F38                     
  7332                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7333   003F38  0E02               	movlw	2
  7334   003F3A  6E19               	movwf	(??_turnRight+1)^0,c
  7335   003F3C  0EA0               	movlw	160
  7336   003F3E  6E18               	movwf	??_turnRight^0,c
  7337   003F40  0E92               	movlw	146
  7338   003F42                     u5087:
  7339   003F42  2EE8               	decfsz	wreg,f,c
  7340   003F44  D7FE               	bra	u5087
  7341   003F46  2E18               	decfsz	??_turnRight^0,f,c
  7342   003F48  D7FC               	bra	u5087
  7343   003F4A  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7344   003F4C  D7FA               	bra	u5087
  7345   003F4E  D000               	nop2	
  7346   003F50                     l3531:
  7347   003F50  C014  FFD9         	movff	turnRight@mL,fsr2l
  7348   003F54  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7349   003F58  0E1E               	movlw	30
  7350   003F5A  60DF               	cpfslt	indf2,c
  7351   003F5C  EFB2  F01F         	goto	u2811
  7352   003F60  EFB4  F01F         	goto	u2810
  7353   003F64                     u2811:
  7354   003F64  EFC0  F01F         	goto	l532
  7355   003F68                     u2810:
  7356   003F68  C016  FFD9         	movff	turnRight@mR,fsr2l
  7357   003F6C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7358   003F70  0E1D               	movlw	29
  7359   003F72  64DF               	cpfsgt	indf2,c
  7360   003F74  EFBE  F01F         	goto	u2821
  7361   003F78  EFC0  F01F         	goto	u2820
  7362   003F7C                     u2821:
  7363   003F7C  EF84  F01F         	goto	l3523
  7364   003F80                     u2820:
  7365   003F80                     l532:
  7366   003F80  0012               	return		;funcret
  7367   003F82                     __end_of_turnRight:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _Timer0_init *****************
  7371 ;; Defined at:
  7372 ;;		line 8 in file "timers.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;		None
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;Total ram usage:        0 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 1
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text47
  7401   004DF0                     __ptext47:
  7402                           	callstack 0
  7403   004DF0                     _Timer0_init:
  7404                           	callstack 29
  7405   004DF0                     
  7406                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7407   004DF0  50D6               	movf	214,w,c	;volatile
  7408   004DF2  0B1F               	andlw	-225
  7409   004DF4  0940               	iorlw	64
  7410   004DF6  6ED6               	movwf	214,c	;volatile
  7411   004DF8                     
  7412                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7413   004DF8  88D6               	bsf	214,4,c	;volatile
  7414                           
  7415                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7416   004DFA  50D6               	movf	214,w,c	;volatile
  7417   004DFC  0BF0               	andlw	-16
  7418   004DFE  090E               	iorlw	14
  7419   004E00  6ED6               	movwf	214,c	;volatile
  7420   004E02                     
  7421                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7422   004E02  88D5               	bsf	213,4,c	;volatile
  7423                           
  7424                           ;timers.c: 16:     TMR0H=0;
  7425   004E04  0E00               	movlw	0
  7426   004E06  6ED4               	movwf	212,c	;volatile
  7427                           
  7428                           ;timers.c: 17:     TMR0L=0;
  7429   004E08  0E00               	movlw	0
  7430   004E0A  6ED3               	movwf	211,c	;volatile
  7431   004E0C                     
  7432                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7433   004E0C  8ED5               	bsf	213,7,c	;volatile
  7434   004E0E  0012               	return		;funcret
  7435   004E10                     __end_of_Timer0_init:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _RetryMove *****************
  7439 ;; Defined at:
  7440 ;;		line 325 in file "dc_motor.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7443 ;;		 -> motorL(9), 
  7444 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7445 ;;		 -> motorR(9), 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;Total ram usage:        6 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 4
  7464 ;; This function calls:
  7465 ;;		_fullSpeedAhead
  7466 ;;		_fullSpeedBack
  7467 ;;		_stop
  7468 ;; This function is called by:
  7469 ;;		_main
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text48
  7474   0041E4                     __ptext48:
  7475                           	callstack 0
  7476   0041E4                     _RetryMove:
  7477                           	callstack 26
  7478   0041E4                     
  7479                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
  7480   0041E4  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7481   0041E8  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7482   0041EC  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7483   0041F0  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7484   0041F4  EC10  F020         	call	_fullSpeedBack	;wreg free
  7485   0041F8                     
  7486                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7487   0041F8  0E29               	movlw	41
  7488   0041FA  6E1F               	movwf	(??_RetryMove+1)^0,c
  7489   0041FC  0E96               	movlw	150
  7490   0041FE  6E1E               	movwf	??_RetryMove^0,c
  7491   004200  0E7F               	movlw	127
  7492   004202                     u5097:
  7493   004202  2EE8               	decfsz	wreg,f,c
  7494   004204  D7FE               	bra	u5097
  7495   004206  2E1E               	decfsz	??_RetryMove^0,f,c
  7496   004208  D7FC               	bra	u5097
  7497   00420A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7498   00420C  D7FA               	bra	u5097
  7499   00420E  F000               	nop	
  7500   004210                     
  7501                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
  7502   004210  0EF3               	movlw	low _motorL
  7503   004212  6E14               	movwf	stop@mL^0,c
  7504   004214  0E00               	movlw	high _motorL
  7505   004216  6E15               	movwf	(stop@mL+1)^0,c
  7506   004218  0EC0               	movlw	low _motorR
  7507   00421A  6E16               	movwf	stop@mR^0,c
  7508   00421C  0E01               	movlw	high _motorR
  7509   00421E  6E17               	movwf	(stop@mR+1)^0,c
  7510   004220  EC33  F021         	call	_stop	;wreg free
  7511   004224                     
  7512                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
  7513   004224  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7514   004228  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7515   00422C  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7516   004230  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7517   004234  EC5F  F020         	call	_fullSpeedAhead	;wreg free
  7518   004238                     
  7519                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7520   004238  0E29               	movlw	41
  7521   00423A  6E1F               	movwf	(??_RetryMove+1)^0,c
  7522   00423C  0E96               	movlw	150
  7523   00423E  6E1E               	movwf	??_RetryMove^0,c
  7524   004240  0E7F               	movlw	127
  7525   004242                     u5107:
  7526   004242  2EE8               	decfsz	wreg,f,c
  7527   004244  D7FE               	bra	u5107
  7528   004246  2E1E               	decfsz	??_RetryMove^0,f,c
  7529   004248  D7FC               	bra	u5107
  7530   00424A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7531   00424C  D7FA               	bra	u5107
  7532   00424E  F000               	nop	
  7533                           
  7534                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
  7535   004250  0EF3               	movlw	low _motorL
  7536   004252  6E14               	movwf	stop@mL^0,c
  7537   004254  0E00               	movlw	high _motorL
  7538   004256  6E15               	movwf	(stop@mL+1)^0,c
  7539   004258  0EC0               	movlw	low _motorR
  7540   00425A  6E16               	movwf	stop@mR^0,c
  7541   00425C  0E01               	movlw	high _motorR
  7542   00425E  6E17               	movwf	(stop@mR+1)^0,c
  7543   004260  EC33  F021         	call	_stop	;wreg free
  7544   004264  0012               	return		;funcret
  7545   004266                     __end_of_RetryMove:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _PinkMove *****************
  7549 ;; Defined at:
  7550 ;;		line 298 in file "dc_motor.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7553 ;;		 -> motorL(9), 
  7554 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7555 ;;		 -> motorR(9), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;Total ram usage:        4 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 5
  7574 ;; This function calls:
  7575 ;;		_reverseDetect
  7576 ;;		_reverseOneBlock
  7577 ;;		_turnLeft45
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text49
  7584   004814                     __ptext49:
  7585                           	callstack 0
  7586   004814                     _PinkMove:
  7587                           	callstack 25
  7588   004814                     
  7589                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  7590   004814  0EF3               	movlw	low _motorL
  7591   004816  6E1A               	movwf	reverseDetect@mL^0,c
  7592   004818  0E00               	movlw	high _motorL
  7593   00481A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7594   00481C  0EC0               	movlw	low _motorR
  7595   00481E  6E1C               	movwf	reverseDetect@mR^0,c
  7596   004820  0E01               	movlw	high _motorR
  7597   004822  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7598   004824  ECE3  F022         	call	_reverseDetect	;wreg free
  7599                           
  7600                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
  7601   004828  0EF3               	movlw	low _motorL
  7602   00482A  6E1A               	movwf	reverseOneBlock@mL^0,c
  7603   00482C  0E00               	movlw	high _motorL
  7604   00482E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7605   004830  0EC0               	movlw	low _motorR
  7606   004832  6E1C               	movwf	reverseOneBlock@mR^0,c
  7607   004834  0E01               	movlw	high _motorR
  7608   004836  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7609   004838  ECB6  F022         	call	_reverseOneBlock	;wreg free
  7610                           
  7611                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
  7612   00483C  0EF3               	movlw	low _motorL
  7613   00483E  6E1A               	movwf	turnLeft45@mL^0,c
  7614   004840  0E00               	movlw	high _motorL
  7615   004842  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7616   004844  0EC0               	movlw	low _motorR
  7617   004846  6E1C               	movwf	turnLeft45@mR^0,c
  7618   004848  0E01               	movlw	high _motorR
  7619   00484A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7620   00484C  EC21  F025         	call	_turnLeft45	;wreg free
  7621                           
  7622                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
  7623   004850  0EF3               	movlw	low _motorL
  7624   004852  6E1A               	movwf	turnLeft45@mL^0,c
  7625   004854  0E00               	movlw	high _motorL
  7626   004856  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7627   004858  0EC0               	movlw	low _motorR
  7628   00485A  6E1C               	movwf	turnLeft45@mR^0,c
  7629   00485C  0E01               	movlw	high _motorR
  7630   00485E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7631   004860  EC21  F025         	call	_turnLeft45	;wreg free
  7632   004864  0012               	return		;funcret
  7633   004866                     __end_of_PinkMove:
  7634                           	callstack 0
  7635                           
  7636 ;; *************** function _turnLeft45 *****************
  7637 ;; Defined at:
  7638 ;;		line 218 in file "dc_motor.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7641 ;;		 -> motorL(9), 
  7642 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7643 ;;		 -> motorR(9), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;Total ram usage:        6 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 4
  7662 ;; This function calls:
  7663 ;;		_TurnDelay
  7664 ;;		_stop
  7665 ;;		_turnLeft
  7666 ;; This function is called by:
  7667 ;;		_GreenMove
  7668 ;;		_PinkMove
  7669 ;;		_LightBlueMove
  7670 ;;		_ReverseYellow
  7671 ;;		_turnCalibration
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text50
  7676   004A42                     __ptext50:
  7677                           	callstack 0
  7678   004A42                     _turnLeft45:
  7679                           	callstack 25
  7680   004A42                     
  7681                           ;dc_motor.c: 219:     turnLeft(mL,mR);
  7682   004A42  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7683   004A46  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7684   004A4A  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7685   004A4E  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7686   004A52  ECC1  F01F         	call	_turnLeft	;wreg free
  7687   004A56                     
  7688                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
  7689   004A56  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7690   004A5A  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7691   004A5E  EC66  F026         	call	_TurnDelay	;wreg free
  7692   004A62                     
  7693                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
  7694   004A62  0EF3               	movlw	low _motorL
  7695   004A64  6E14               	movwf	stop@mL^0,c
  7696   004A66  0E00               	movlw	high _motorL
  7697   004A68  6E15               	movwf	(stop@mL+1)^0,c
  7698   004A6A  0EC0               	movlw	low _motorR
  7699   004A6C  6E16               	movwf	stop@mR^0,c
  7700   004A6E  0E01               	movlw	high _motorR
  7701   004A70  6E17               	movwf	(stop@mR+1)^0,c
  7702   004A72  EC33  F021         	call	_stop	;wreg free
  7703   004A76                     
  7704                           ;dc_motor.c: 222:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7705   004A76  0E52               	movlw	82
  7706   004A78  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7707   004A7A  0E2B               	movlw	43
  7708   004A7C  6E1E               	movwf	??_turnLeft45^0,c
  7709   004A7E  0E00               	movlw	0
  7710   004A80                     u5117:
  7711   004A80  2EE8               	decfsz	wreg,f,c
  7712   004A82  D7FE               	bra	u5117
  7713   004A84  2E1E               	decfsz	??_turnLeft45^0,f,c
  7714   004A86  D7FC               	bra	u5117
  7715   004A88  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7716   004A8A  D7FA               	bra	u5117
  7717   004A8C  D000               	nop2	
  7718   004A8E  0012               	return		;funcret
  7719   004A90                     __end_of_turnLeft45:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function _turnLeft *****************
  7723 ;; Defined at:
  7724 ;;		line 111 in file "dc_motor.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7727 ;;		 -> motorL(9), 
  7728 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7729 ;;		 -> motorR(9), 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;Total ram usage:        6 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; Hardware stack levels required when called: 3
  7748 ;; This function calls:
  7749 ;;		_setMotorPWM
  7750 ;; This function is called by:
  7751 ;;		_turnLeft45
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text51
  7756   003F82                     __ptext51:
  7757                           	callstack 0
  7758   003F82                     _turnLeft:
  7759                           	callstack 25
  7760   003F82                     
  7761                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
  7762   003F82  EE20 F001          	lfsr	2,1
  7763   003F86  5014               	movf	turnLeft@mL^0,w,c
  7764   003F88  26D9               	addwf	fsr2l,f,c
  7765   003F8A  5015               	movf	(turnLeft@mL+1)^0,w,c
  7766   003F8C  22DA               	addwfc	fsr2h,f,c
  7767   003F8E  0E00               	movlw	0
  7768   003F90  6EDF               	movwf	indf2,c
  7769                           
  7770                           ;dc_motor.c: 114:     mR->direction =1;
  7771   003F92  EE20 F001          	lfsr	2,1
  7772   003F96  5016               	movf	turnLeft@mR^0,w,c
  7773   003F98  26D9               	addwf	fsr2l,f,c
  7774   003F9A  5017               	movf	(turnLeft@mR+1)^0,w,c
  7775   003F9C  22DA               	addwfc	fsr2h,f,c
  7776   003F9E  0E01               	movlw	1
  7777   003FA0  6EDF               	movwf	indf2,c
  7778                           
  7779                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
  7780   003FA2  EFF7  F01F         	goto	l3517
  7781   003FA6                     l3509:
  7782                           
  7783                           ;dc_motor.c: 118:         mL->power+=10;
  7784   003FA6  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7785   003FAA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7786   003FAE  0E0A               	movlw	10
  7787   003FB0  26DF               	addwf	indf2,f,c
  7788                           
  7789                           ;dc_motor.c: 119:         mR->power+=10;
  7790   003FB2  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7791   003FB6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7792   003FBA  0E0A               	movlw	10
  7793   003FBC  26DF               	addwf	indf2,f,c
  7794   003FBE                     
  7795                           ;dc_motor.c: 121:         setMotorPWM(mL);
  7796   003FBE  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7797   003FC2  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7798   003FC6  ECD2  F01B         	call	_setMotorPWM	;wreg free
  7799   003FCA                     
  7800                           ;dc_motor.c: 122:         setMotorPWM(mR);
  7801   003FCA  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7802   003FCE  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7803   003FD2  ECD2  F01B         	call	_setMotorPWM	;wreg free
  7804   003FD6                     
  7805                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7806   003FD6  0E02               	movlw	2
  7807   003FD8  6E19               	movwf	(??_turnLeft+1)^0,c
  7808   003FDA  0EA0               	movlw	160
  7809   003FDC  6E18               	movwf	??_turnLeft^0,c
  7810   003FDE  0E92               	movlw	146
  7811   003FE0                     u5127:
  7812   003FE0  2EE8               	decfsz	wreg,f,c
  7813   003FE2  D7FE               	bra	u5127
  7814   003FE4  2E18               	decfsz	??_turnLeft^0,f,c
  7815   003FE6  D7FC               	bra	u5127
  7816   003FE8  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7817   003FEA  D7FA               	bra	u5127
  7818   003FEC  D000               	nop2	
  7819   003FEE                     l3517:
  7820   003FEE  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7821   003FF2  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7822   003FF6  0E1E               	movlw	30
  7823   003FF8  60DF               	cpfslt	indf2,c
  7824   003FFA  EF01  F020         	goto	u2791
  7825   003FFE  EF03  F020         	goto	u2790
  7826   004002                     u2791:
  7827   004002  EF0F  F020         	goto	l524
  7828   004006                     u2790:
  7829   004006  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7830   00400A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7831   00400E  0E1D               	movlw	29
  7832   004010  64DF               	cpfsgt	indf2,c
  7833   004012  EF0D  F020         	goto	u2801
  7834   004016  EF0F  F020         	goto	u2800
  7835   00401A                     u2801:
  7836   00401A  EFD3  F01F         	goto	l3509
  7837   00401E                     u2800:
  7838   00401E                     l524:
  7839   00401E  0012               	return		;funcret
  7840   004020                     __end_of_turnLeft:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function _TurnDelay *****************
  7844 ;; Defined at:
  7845 ;;		line 204 in file "dc_motor.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  Turn45Delay     2    0[COMRAM] int 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;Total ram usage:        3 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; Hardware stack levels required when called: 1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_turnRight45
  7870 ;;		_turnLeft45
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text52
  7875   004CCC                     __ptext52:
  7876                           	callstack 0
  7877   004CCC                     _TurnDelay:
  7878                           	callstack 27
  7879   004CCC                     
  7880                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7881   004CCC  EF73  F026         	goto	l559
  7882   004CD0                     l3551:
  7883                           
  7884                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
  7885   004CD0  0E15               	movlw	21
  7886   004CD2  6E03               	movwf	??_TurnDelay^0,c
  7887   004CD4  0EC6               	movlw	198
  7888   004CD6                     u5137:
  7889   004CD6  2EE8               	decfsz	wreg,f,c
  7890   004CD8  D7FE               	bra	u5137
  7891   004CDA  2E03               	decfsz	??_TurnDelay^0,f,c
  7892   004CDC  D7FC               	bra	u5137
  7893   004CDE  D000               	nop2	
  7894   004CE0                     
  7895                           ;dc_motor.c: 207:         Turn45Delay--;
  7896   004CE0  0601               	decf	TurnDelay@Turn45Delay^0,f,c
  7897   004CE2  A0D8               	btfss	status,0,c
  7898   004CE4  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
  7899   004CE6                     l559:
  7900                           
  7901                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7902   004CE6  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
  7903   004CE8  EF80  F026         	goto	u2850
  7904   004CEC  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
  7905   004CEE  E106               	bnz	u2851
  7906   004CF0  0401               	decf	TurnDelay@Turn45Delay^0,w,c
  7907   004CF2  B0D8               	btfsc	status,0,c
  7908   004CF4  EF7E  F026         	goto	u2851
  7909   004CF8  EF80  F026         	goto	u2850
  7910   004CFC                     u2851:
  7911   004CFC  EF68  F026         	goto	l3551
  7912   004D00                     u2850:
  7913   004D00  0012               	return		;funcret
  7914   004D02                     __end_of_TurnDelay:
  7915                           	callstack 0
  7916                           
  7917 ;; *************** function _reverseOneBlock *****************
  7918 ;; Defined at:
  7919 ;;		line 232 in file "dc_motor.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7922 ;;		 -> motorL(9), 
  7923 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7924 ;;		 -> motorR(9), 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;Total ram usage:        6 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; Hardware stack levels required when called: 4
  7943 ;; This function calls:
  7944 ;;		_fullSpeedBack
  7945 ;;		_stop
  7946 ;; This function is called by:
  7947 ;;		_YellowMove
  7948 ;;		_PinkMove
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text53
  7953   00456C                     __ptext53:
  7954                           	callstack 0
  7955   00456C                     _reverseOneBlock:
  7956                           	callstack 25
  7957   00456C                     
  7958                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
  7959   00456C  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7960   004570  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7961   004574  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7962   004578  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7963   00457C  EC10  F020         	call	_fullSpeedBack	;wreg free
  7964   004580                     
  7965                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7966   004580  0EA3               	movlw	163
  7967   004582  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7968   004584  0E57               	movlw	87
  7969   004586  6E1E               	movwf	??_reverseOneBlock^0,c
  7970   004588  0E02               	movlw	2
  7971   00458A                     u5147:
  7972   00458A  2EE8               	decfsz	wreg,f,c
  7973   00458C  D7FE               	bra	u5147
  7974   00458E  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7975   004590  D7FC               	bra	u5147
  7976   004592  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7977   004594  D7FA               	bra	u5147
  7978   004596  D000               	nop2	
  7979   004598                     
  7980                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
  7981   004598  0EF3               	movlw	low _motorL
  7982   00459A  6E14               	movwf	stop@mL^0,c
  7983   00459C  0E00               	movlw	high _motorL
  7984   00459E  6E15               	movwf	(stop@mL+1)^0,c
  7985   0045A0  0EC0               	movlw	low _motorR
  7986   0045A2  6E16               	movwf	stop@mR^0,c
  7987   0045A4  0E01               	movlw	high _motorR
  7988   0045A6  6E17               	movwf	(stop@mR+1)^0,c
  7989   0045A8  EC33  F021         	call	_stop	;wreg free
  7990                           
  7991                           ;dc_motor.c: 236:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7992   0045AC  0E52               	movlw	82
  7993   0045AE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7994   0045B0  0E2B               	movlw	43
  7995   0045B2  6E1E               	movwf	??_reverseOneBlock^0,c
  7996   0045B4  0E00               	movlw	0
  7997   0045B6                     u5157:
  7998   0045B6  2EE8               	decfsz	wreg,f,c
  7999   0045B8  D7FE               	bra	u5157
  8000   0045BA  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8001   0045BC  D7FC               	bra	u5157
  8002   0045BE  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8003   0045C0  D7FA               	bra	u5157
  8004   0045C2  D000               	nop2	
  8005   0045C4  0012               	return		;funcret
  8006   0045C6                     __end_of_reverseOneBlock:
  8007                           	callstack 0
  8008                           
  8009 ;; *************** function _reverseDetect *****************
  8010 ;; Defined at:
  8011 ;;		line 225 in file "dc_motor.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8014 ;;		 -> motorL(9), 
  8015 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8016 ;;		 -> motorR(9), 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;Total ram usage:        6 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 4
  8035 ;; This function calls:
  8036 ;;		_fullSpeedBack
  8037 ;;		_stop
  8038 ;; This function is called by:
  8039 ;;		_RedMove
  8040 ;;		_GreenMove
  8041 ;;		_BlueMove
  8042 ;;		_YellowMove
  8043 ;;		_PinkMove
  8044 ;;		_OrangeMove
  8045 ;;		_LightBlueMove
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text54
  8050   0045C6                     __ptext54:
  8051                           	callstack 0
  8052   0045C6                     _reverseDetect:
  8053                           	callstack 24
  8054   0045C6                     
  8055                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
  8056   0045C6  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  8057   0045CA  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  8058   0045CE  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  8059   0045D2  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  8060   0045D6  EC10  F020         	call	_fullSpeedBack	;wreg free
  8061   0045DA                     
  8062                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8063   0045DA  0E11               	movlw	17
  8064   0045DC  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8065   0045DE  0E3C               	movlw	60
  8066   0045E0  6E1E               	movwf	??_reverseDetect^0,c
  8067   0045E2  0ECB               	movlw	203
  8068   0045E4                     u5167:
  8069   0045E4  2EE8               	decfsz	wreg,f,c
  8070   0045E6  D7FE               	bra	u5167
  8071   0045E8  2E1E               	decfsz	??_reverseDetect^0,f,c
  8072   0045EA  D7FC               	bra	u5167
  8073   0045EC  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8074   0045EE  D7FA               	bra	u5167
  8075   0045F0  F000               	nop	
  8076   0045F2                     
  8077                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
  8078   0045F2  0EF3               	movlw	low _motorL
  8079   0045F4  6E14               	movwf	stop@mL^0,c
  8080   0045F6  0E00               	movlw	high _motorL
  8081   0045F8  6E15               	movwf	(stop@mL+1)^0,c
  8082   0045FA  0EC0               	movlw	low _motorR
  8083   0045FC  6E16               	movwf	stop@mR^0,c
  8084   0045FE  0E01               	movlw	high _motorR
  8085   004600  6E17               	movwf	(stop@mR+1)^0,c
  8086   004602  EC33  F021         	call	_stop	;wreg free
  8087                           
  8088                           ;dc_motor.c: 229:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8089   004606  0E52               	movlw	82
  8090   004608  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8091   00460A  0E2B               	movlw	43
  8092   00460C  6E1E               	movwf	??_reverseDetect^0,c
  8093   00460E  0E00               	movlw	0
  8094   004610                     u5177:
  8095   004610  2EE8               	decfsz	wreg,f,c
  8096   004612  D7FE               	bra	u5177
  8097   004614  2E1E               	decfsz	??_reverseDetect^0,f,c
  8098   004616  D7FC               	bra	u5177
  8099   004618  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8100   00461A  D7FA               	bra	u5177
  8101   00461C  D000               	nop2	
  8102   00461E  0012               	return		;funcret
  8103   004620                     __end_of_reverseDetect:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _fullSpeedBack *****************
  8107 ;; Defined at:
  8108 ;;		line 185 in file "dc_motor.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8111 ;;		 -> motorL(9), 
  8112 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8113 ;;		 -> motorR(9), 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;Total ram usage:        6 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; Hardware stack levels required when called: 3
  8132 ;; This function calls:
  8133 ;;		_setMotorPWM
  8134 ;; This function is called by:
  8135 ;;		_reverseDetect
  8136 ;;		_reverseOneBlock
  8137 ;;		_RetryMove
  8138 ;;		_Backhalfblock
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text55
  8143   004020                     __ptext55:
  8144                           	callstack 0
  8145   004020                     _fullSpeedBack:
  8146                           	callstack 24
  8147   004020                     
  8148                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
  8149   004020  EE20 F001          	lfsr	2,1
  8150   004024  5014               	movf	fullSpeedBack@mL^0,w,c
  8151   004026  26D9               	addwf	fsr2l,f,c
  8152   004028  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  8153   00402A  22DA               	addwfc	fsr2h,f,c
  8154   00402C  0E00               	movlw	0
  8155   00402E  6EDF               	movwf	indf2,c
  8156                           
  8157                           ;dc_motor.c: 189:     mR->direction =0;
  8158   004030  EE20 F001          	lfsr	2,1
  8159   004034  5016               	movf	fullSpeedBack@mR^0,w,c
  8160   004036  26D9               	addwf	fsr2l,f,c
  8161   004038  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  8162   00403A  22DA               	addwfc	fsr2h,f,c
  8163   00403C  0E00               	movlw	0
  8164   00403E  6EDF               	movwf	indf2,c
  8165                           
  8166                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
  8167   004040  EF46  F020         	goto	l3545
  8168   004044                     l3537:
  8169                           
  8170                           ;dc_motor.c: 192:         mL->power+=10;
  8171   004044  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8172   004048  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8173   00404C  0E0A               	movlw	10
  8174   00404E  26DF               	addwf	indf2,f,c
  8175                           
  8176                           ;dc_motor.c: 193:         mR->power+=10;
  8177   004050  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8178   004054  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8179   004058  0E0A               	movlw	10
  8180   00405A  26DF               	addwf	indf2,f,c
  8181   00405C                     
  8182                           ;dc_motor.c: 195:         setMotorPWM(mL);
  8183   00405C  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  8184   004060  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  8185   004064  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8186   004068                     
  8187                           ;dc_motor.c: 196:         setMotorPWM(mR);
  8188   004068  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  8189   00406C  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  8190   004070  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8191   004074                     
  8192                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8193   004074  0E02               	movlw	2
  8194   004076  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  8195   004078  0EA0               	movlw	160
  8196   00407A  6E18               	movwf	??_fullSpeedBack^0,c
  8197   00407C  0E92               	movlw	146
  8198   00407E                     u5187:
  8199   00407E  2EE8               	decfsz	wreg,f,c
  8200   004080  D7FE               	bra	u5187
  8201   004082  2E18               	decfsz	??_fullSpeedBack^0,f,c
  8202   004084  D7FC               	bra	u5187
  8203   004086  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  8204   004088  D7FA               	bra	u5187
  8205   00408A  D000               	nop2	
  8206   00408C                     l3545:
  8207   00408C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8208   004090  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8209   004094  0E1E               	movlw	30
  8210   004096  60DF               	cpfslt	indf2,c
  8211   004098  EF50  F020         	goto	u2831
  8212   00409C  EF52  F020         	goto	u2830
  8213   0040A0                     u2831:
  8214   0040A0  EF5E  F020         	goto	l556
  8215   0040A4                     u2830:
  8216   0040A4  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8217   0040A8  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8218   0040AC  0E1D               	movlw	29
  8219   0040AE  64DF               	cpfsgt	indf2,c
  8220   0040B0  EF5C  F020         	goto	u2841
  8221   0040B4  EF5E  F020         	goto	u2840
  8222   0040B8                     u2841:
  8223   0040B8  EF22  F020         	goto	l3537
  8224   0040BC                     u2840:
  8225   0040BC                     l556:
  8226   0040BC  0012               	return		;funcret
  8227   0040BE                     __end_of_fullSpeedBack:
  8228                           	callstack 0
  8229                           
  8230 ;; *************** function _Interrupts_init *****************
  8231 ;; Defined at:
  8232 ;;		line 12 in file "interrupts.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;		None
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  1    wreg      void 
  8239 ;; Registers used:
  8240 ;;		None
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;Total ram usage:        0 bytes
  8251 ;; Hardware stack levels used: 1
  8252 ;; Hardware stack levels required when called: 1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_main
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text56
  8261   004E7C                     __ptext56:
  8262                           	callstack 0
  8263   004E7C                     _Interrupts_init:
  8264                           	callstack 29
  8265   004E7C  0012               	return		;funcret
  8266   004E7E                     __end_of_Interrupts_init:
  8267                           	callstack 0
  8268                           
  8269 ;; *************** function _Forwardhalfblock *****************
  8270 ;; Defined at:
  8271 ;;		line 245 in file "dc_motor.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8274 ;;		 -> motorL(9), 
  8275 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8276 ;;		 -> motorR(9), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;Total ram usage:        6 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 4
  8295 ;; This function calls:
  8296 ;;		_fullSpeedAhead
  8297 ;;		_stop
  8298 ;; This function is called by:
  8299 ;;		_main
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text57
  8304   004620                     __ptext57:
  8305                           	callstack 0
  8306   004620                     _Forwardhalfblock:
  8307                           	callstack 26
  8308   004620                     
  8309                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
  8310   004620  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8311   004624  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8312   004628  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8313   00462C  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8314   004630  EC5F  F020         	call	_fullSpeedAhead	;wreg free
  8315   004634                     
  8316                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  8317   004634  0E52               	movlw	82
  8318   004636  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8319   004638  0E2B               	movlw	43
  8320   00463A  6E1E               	movwf	??_Forwardhalfblock^0,c
  8321   00463C  0E00               	movlw	0
  8322   00463E                     u5197:
  8323   00463E  2EE8               	decfsz	wreg,f,c
  8324   004640  D7FE               	bra	u5197
  8325   004642  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8326   004644  D7FC               	bra	u5197
  8327   004646  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8328   004648  D7FA               	bra	u5197
  8329   00464A  D000               	nop2	
  8330   00464C                     
  8331                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
  8332   00464C  0EF3               	movlw	low _motorL
  8333   00464E  6E14               	movwf	stop@mL^0,c
  8334   004650  0E00               	movlw	high _motorL
  8335   004652  6E15               	movwf	(stop@mL+1)^0,c
  8336   004654  0EC0               	movlw	low _motorR
  8337   004656  6E16               	movwf	stop@mR^0,c
  8338   004658  0E01               	movlw	high _motorR
  8339   00465A  6E17               	movwf	(stop@mR+1)^0,c
  8340   00465C  EC33  F021         	call	_stop	;wreg free
  8341                           
  8342                           ;dc_motor.c: 249:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8343   004660  0E52               	movlw	82
  8344   004662  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8345   004664  0E2B               	movlw	43
  8346   004666  6E1E               	movwf	??_Forwardhalfblock^0,c
  8347   004668  0E00               	movlw	0
  8348   00466A                     u5207:
  8349   00466A  2EE8               	decfsz	wreg,f,c
  8350   00466C  D7FE               	bra	u5207
  8351   00466E  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8352   004670  D7FC               	bra	u5207
  8353   004672  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8354   004674  D7FA               	bra	u5207
  8355   004676  D000               	nop2	
  8356   004678  0012               	return		;funcret
  8357   00467A                     __end_of_Forwardhalfblock:
  8358                           	callstack 0
  8359                           
  8360 ;; *************** function _stop *****************
  8361 ;; Defined at:
  8362 ;;		line 93 in file "dc_motor.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8365 ;;		 -> motorL(9), 
  8366 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8367 ;;		 -> motorR(9), 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;Total ram usage:        6 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 3
  8386 ;; This function calls:
  8387 ;;		_setMotorPWM
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;;		_turnRight45
  8391 ;;		_turnLeft45
  8392 ;;		_reverseDetect
  8393 ;;		_reverseOneBlock
  8394 ;;		_ForwardOneBlock
  8395 ;;		_Forwardhalfblock
  8396 ;;		_RetryMove
  8397 ;;		_Backhalfblock
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text58
  8402   004266                     __ptext58:
  8403                           	callstack 0
  8404   004266                     _stop:
  8405                           	callstack 25
  8406   004266                     
  8407                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
  8408   004266  EF59  F021         	goto	l3503
  8409   00426A                     l3495:
  8410                           
  8411                           ;dc_motor.c: 97:         mL->power-=10;
  8412   00426A  C014  FFD9         	movff	stop@mL,fsr2l
  8413   00426E  C015  FFDA         	movff	stop@mL+1,fsr2h
  8414   004272  0E0A               	movlw	10
  8415   004274  5EDF               	subwf	indf2,f,c
  8416                           
  8417                           ;dc_motor.c: 98:         mR->power-=10;
  8418   004276  C016  FFD9         	movff	stop@mR,fsr2l
  8419   00427A  C017  FFDA         	movff	stop@mR+1,fsr2h
  8420   00427E  0E0A               	movlw	10
  8421   004280  5EDF               	subwf	indf2,f,c
  8422   004282                     
  8423                           ;dc_motor.c: 103:         setMotorPWM(mL);
  8424   004282  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8425   004286  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8426   00428A  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8427   00428E                     
  8428                           ;dc_motor.c: 104:         setMotorPWM(mR);
  8429   00428E  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8430   004292  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8431   004296  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8432   00429A                     
  8433                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8434   00429A  0E02               	movlw	2
  8435   00429C  6E19               	movwf	(??_stop+1)^0,c
  8436   00429E  0EA0               	movlw	160
  8437   0042A0  6E18               	movwf	??_stop^0,c
  8438   0042A2  0E92               	movlw	146
  8439   0042A4                     u5217:
  8440   0042A4  2EE8               	decfsz	wreg,f,c
  8441   0042A6  D7FE               	bra	u5217
  8442   0042A8  2E18               	decfsz	??_stop^0,f,c
  8443   0042AA  D7FC               	bra	u5217
  8444   0042AC  2E19               	decfsz	(??_stop+1)^0,f,c
  8445   0042AE  D7FA               	bra	u5217
  8446   0042B0  D000               	nop2	
  8447   0042B2                     l3503:
  8448                           
  8449                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
  8450   0042B2  C014  FFD9         	movff	stop@mL,fsr2l
  8451   0042B6  C015  FFDA         	movff	stop@mL+1,fsr2h
  8452   0042BA  50DF               	movf	indf2,w,c
  8453   0042BC  A4D8               	btfss	status,2,c
  8454   0042BE  EF63  F021         	goto	u2771
  8455   0042C2  EF65  F021         	goto	u2770
  8456   0042C6                     u2771:
  8457   0042C6  EF35  F021         	goto	l3495
  8458   0042CA                     u2770:
  8459   0042CA  C016  FFD9         	movff	stop@mR,fsr2l
  8460   0042CE  C017  FFDA         	movff	stop@mR+1,fsr2h
  8461   0042D2  50DF               	movf	indf2,w,c
  8462   0042D4  A4D8               	btfss	status,2,c
  8463   0042D6  EF6F  F021         	goto	u2781
  8464   0042DA  EF71  F021         	goto	u2780
  8465   0042DE                     u2781:
  8466   0042DE  EF35  F021         	goto	l3495
  8467   0042E2                     u2780:
  8468   0042E2  0012               	return		;funcret
  8469   0042E4                     __end_of_stop:
  8470                           	callstack 0
  8471                           
  8472 ;; *************** function _fullSpeedAhead *****************
  8473 ;; Defined at:
  8474 ;;		line 147 in file "dc_motor.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8477 ;;		 -> motorL(9), 
  8478 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8479 ;;		 -> motorR(9), 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;Total ram usage:        6 bytes
  8496 ;; Hardware stack levels used: 1
  8497 ;; Hardware stack levels required when called: 3
  8498 ;; This function calls:
  8499 ;;		_setMotorPWM
  8500 ;; This function is called by:
  8501 ;;		_main
  8502 ;;		_ForwardOneBlock
  8503 ;;		_Forwardhalfblock
  8504 ;;		_RetryMove
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text59
  8509   0040BE                     __ptext59:
  8510                           	callstack 0
  8511   0040BE                     _fullSpeedAhead:
  8512                           	callstack 24
  8513   0040BE                     
  8514                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
  8515   0040BE  EE20 F001          	lfsr	2,1
  8516   0040C2  5014               	movf	fullSpeedAhead@mL^0,w,c
  8517   0040C4  26D9               	addwf	fsr2l,f,c
  8518   0040C6  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8519   0040C8  22DA               	addwfc	fsr2h,f,c
  8520   0040CA  0E01               	movlw	1
  8521   0040CC  6EDF               	movwf	indf2,c
  8522                           
  8523                           ;dc_motor.c: 151:     mR->direction =1;
  8524   0040CE  EE20 F001          	lfsr	2,1
  8525   0040D2  5016               	movf	fullSpeedAhead@mR^0,w,c
  8526   0040D4  26D9               	addwf	fsr2l,f,c
  8527   0040D6  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8528   0040D8  22DA               	addwfc	fsr2h,f,c
  8529   0040DA  0E01               	movlw	1
  8530   0040DC  6EDF               	movwf	indf2,c
  8531                           
  8532                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
  8533   0040DE  EF95  F020         	goto	l3489
  8534   0040E2                     l3481:
  8535                           
  8536                           ;dc_motor.c: 154:         mL->power+=10;
  8537   0040E2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8538   0040E6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8539   0040EA  0E0A               	movlw	10
  8540   0040EC  26DF               	addwf	indf2,f,c
  8541                           
  8542                           ;dc_motor.c: 155:         mR->power+=10;
  8543   0040EE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8544   0040F2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8545   0040F6  0E0A               	movlw	10
  8546   0040F8  26DF               	addwf	indf2,f,c
  8547   0040FA                     
  8548                           ;dc_motor.c: 157:         setMotorPWM(mL);
  8549   0040FA  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8550   0040FE  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8551   004102  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8552   004106                     
  8553                           ;dc_motor.c: 158:         setMotorPWM(mR);
  8554   004106  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8555   00410A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8556   00410E  ECD2  F01B         	call	_setMotorPWM	;wreg free
  8557   004112                     
  8558                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8559   004112  0E02               	movlw	2
  8560   004114  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8561   004116  0EA0               	movlw	160
  8562   004118  6E18               	movwf	??_fullSpeedAhead^0,c
  8563   00411A  0E92               	movlw	146
  8564   00411C                     u5227:
  8565   00411C  2EE8               	decfsz	wreg,f,c
  8566   00411E  D7FE               	bra	u5227
  8567   004120  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8568   004122  D7FC               	bra	u5227
  8569   004124  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8570   004126  D7FA               	bra	u5227
  8571   004128  D000               	nop2	
  8572   00412A                     l3489:
  8573   00412A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8574   00412E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8575   004132  0E1E               	movlw	30
  8576   004134  60DF               	cpfslt	indf2,c
  8577   004136  EF9F  F020         	goto	u2751
  8578   00413A  EFA1  F020         	goto	u2750
  8579   00413E                     u2751:
  8580   00413E  EFAD  F020         	goto	l540
  8581   004142                     u2750:
  8582   004142  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8583   004146  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8584   00414A  0E1D               	movlw	29
  8585   00414C  64DF               	cpfsgt	indf2,c
  8586   00414E  EFAB  F020         	goto	u2761
  8587   004152  EFAD  F020         	goto	u2760
  8588   004156                     u2761:
  8589   004156  EF71  F020         	goto	l3481
  8590   00415A                     u2760:
  8591   00415A                     l540:
  8592   00415A  0012               	return		;funcret
  8593   00415C                     __end_of_fullSpeedAhead:
  8594                           	callstack 0
  8595                           
  8596 ;; *************** function _setMotorPWM *****************
  8597 ;; Defined at:
  8598 ;;		line 68 in file "dc_motor.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8601 ;;		 -> motorR(9), motorL(9), 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;  negDuty         1   18[COMRAM] unsigned char 
  8604 ;;  posDuty         1   17[COMRAM] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8618 ;;Total ram usage:        6 bytes
  8619 ;; Hardware stack levels used: 1
  8620 ;; Hardware stack levels required when called: 2
  8621 ;; This function calls:
  8622 ;;		___lwdiv
  8623 ;;		___wmul
  8624 ;; This function is called by:
  8625 ;;		_stop
  8626 ;;		_turnLeft
  8627 ;;		_turnRight
  8628 ;;		_fullSpeedAhead
  8629 ;;		_timed_forward
  8630 ;;		_fullSpeedBack
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text60
  8635   0037A4                     __ptext60:
  8636                           	callstack 0
  8637   0037A4                     _setMotorPWM:
  8638                           	callstack 25
  8639   0037A4                     
  8640                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8641   0037A4  EE20 F002          	lfsr	2,2
  8642   0037A8  500E               	movf	setMotorPWM@m^0,w,c
  8643   0037AA  26D9               	addwf	fsr2l,f,c
  8644   0037AC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8645   0037AE  22DA               	addwfc	fsr2h,f,c
  8646   0037B0  50DF               	movf	indf2,w,c
  8647   0037B2  B4D8               	btfsc	status,2,c
  8648   0037B4  EFDE  F01B         	goto	u2551
  8649   0037B8  EFE0  F01B         	goto	u2550
  8650   0037BC                     u2551:
  8651   0037BC  EF14  F01C         	goto	l3367
  8652   0037C0                     u2550:
  8653   0037C0                     
  8654                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8655   0037C0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8656   0037C4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8657   0037C8  50DF               	movf	indf2,w,c
  8658   0037CA  6E10               	movwf	??_setMotorPWM^0,c
  8659   0037CC  5010               	movf	??_setMotorPWM^0,w,c
  8660   0037CE  6E01               	movwf	___wmul@multiplier^0,c
  8661   0037D0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8662   0037D2  EE20 F003          	lfsr	2,3
  8663   0037D6  500E               	movf	setMotorPWM@m^0,w,c
  8664   0037D8  26D9               	addwf	fsr2l,f,c
  8665   0037DA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8666   0037DC  22DA               	addwfc	fsr2h,f,c
  8667   0037DE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8668   0037E2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8669   0037E6  ECD5  F026         	call	___wmul	;wreg free
  8670   0037EA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8671   0037EE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8672   0037F2  0E00               	movlw	0
  8673   0037F4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8674   0037F6  0E64               	movlw	100
  8675   0037F8  6E09               	movwf	___lwdiv@divisor^0,c
  8676   0037FA  ECED  F021         	call	___lwdiv	;wreg free
  8677   0037FE  EE20 F003          	lfsr	2,3
  8678   003802  500E               	movf	setMotorPWM@m^0,w,c
  8679   003804  26D9               	addwf	fsr2l,f,c
  8680   003806  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8681   003808  22DA               	addwfc	fsr2h,f,c
  8682   00380A  50DF               	movf	indf2,w,c
  8683   00380C  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8684   00380E  5007               	movf	?___lwdiv^0,w,c
  8685   003810  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8686   003812  6E12               	movwf	setMotorPWM@posDuty^0,c
  8687   003814                     
  8688                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8689   003814  EE20 F003          	lfsr	2,3
  8690   003818  500E               	movf	setMotorPWM@m^0,w,c
  8691   00381A  26D9               	addwf	fsr2l,f,c
  8692   00381C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8693   00381E  22DA               	addwfc	fsr2h,f,c
  8694   003820  50DF               	movf	indf2,w,c
  8695   003822  6E13               	movwf	setMotorPWM@negDuty^0,c
  8696                           
  8697                           ;dc_motor.c: 75:     }
  8698   003824  EF37  F01C         	goto	l3371
  8699   003828                     l3367:
  8700                           
  8701                           ;dc_motor.c: 77:         posDuty=0;
  8702   003828  0E00               	movlw	0
  8703   00382A  6E12               	movwf	setMotorPWM@posDuty^0,c
  8704   00382C                     
  8705                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8706   00382C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8707   003830  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8708   003834  50DF               	movf	indf2,w,c
  8709   003836  6E10               	movwf	??_setMotorPWM^0,c
  8710   003838  5010               	movf	??_setMotorPWM^0,w,c
  8711   00383A  6E01               	movwf	___wmul@multiplier^0,c
  8712   00383C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8713   00383E  EE20 F003          	lfsr	2,3
  8714   003842  500E               	movf	setMotorPWM@m^0,w,c
  8715   003844  26D9               	addwf	fsr2l,f,c
  8716   003846  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8717   003848  22DA               	addwfc	fsr2h,f,c
  8718   00384A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8719   00384E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8720   003852  ECD5  F026         	call	___wmul	;wreg free
  8721   003856  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8722   00385A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8723   00385E  0E00               	movlw	0
  8724   003860  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8725   003862  0E64               	movlw	100
  8726   003864  6E09               	movwf	___lwdiv@divisor^0,c
  8727   003866  ECED  F021         	call	___lwdiv	;wreg free
  8728   00386A  5007               	movf	?___lwdiv^0,w,c
  8729   00386C  6E13               	movwf	setMotorPWM@negDuty^0,c
  8730   00386E                     l3371:
  8731                           
  8732                           ;dc_motor.c: 81:     if (m->direction) {
  8733   00386E  EE20 F001          	lfsr	2,1
  8734   003872  500E               	movf	setMotorPWM@m^0,w,c
  8735   003874  26D9               	addwf	fsr2l,f,c
  8736   003876  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8737   003878  22DA               	addwfc	fsr2h,f,c
  8738   00387A  50DF               	movf	indf2,w,c
  8739   00387C  B4D8               	btfsc	status,2,c
  8740   00387E  EF43  F01C         	goto	u2561
  8741   003882  EF45  F01C         	goto	u2560
  8742   003886                     u2561:
  8743   003886  EF67  F01C         	goto	l3375
  8744   00388A                     u2560:
  8745   00388A                     
  8746                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
  8747   00388A  EE20 F005          	lfsr	2,5
  8748   00388E  500E               	movf	setMotorPWM@m^0,w,c
  8749   003890  26D9               	addwf	fsr2l,f,c
  8750   003892  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8751   003894  22DA               	addwfc	fsr2h,f,c
  8752   003896  CFDE F010          	movff	postinc2,??_setMotorPWM
  8753   00389A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8754   00389E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8755   0038A2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8756   0038A6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8757                           
  8758                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
  8759   0038AA  EE20 F007          	lfsr	2,7
  8760   0038AE  500E               	movf	setMotorPWM@m^0,w,c
  8761   0038B0  26D9               	addwf	fsr2l,f,c
  8762   0038B2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8763   0038B4  22DA               	addwfc	fsr2h,f,c
  8764   0038B6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8765   0038BA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8766   0038BE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8767   0038C2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8768   0038C6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8769                           
  8770                           ;dc_motor.c: 86:     } else {
  8771   0038CA  EF87  F01C         	goto	l510
  8772   0038CE                     l3375:
  8773                           
  8774                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  8775   0038CE  EE20 F005          	lfsr	2,5
  8776   0038D2  500E               	movf	setMotorPWM@m^0,w,c
  8777   0038D4  26D9               	addwf	fsr2l,f,c
  8778   0038D6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8779   0038D8  22DA               	addwfc	fsr2h,f,c
  8780   0038DA  CFDE F010          	movff	postinc2,??_setMotorPWM
  8781   0038DE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8782   0038E2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8783   0038E6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8784   0038EA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8785                           
  8786                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  8787   0038EE  EE20 F007          	lfsr	2,7
  8788   0038F2  500E               	movf	setMotorPWM@m^0,w,c
  8789   0038F4  26D9               	addwf	fsr2l,f,c
  8790   0038F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8791   0038F8  22DA               	addwfc	fsr2h,f,c
  8792   0038FA  CFDE F010          	movff	postinc2,??_setMotorPWM
  8793   0038FE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8794   003902  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8795   003906  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8796   00390A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8797   00390E                     l510:
  8798   00390E  0012               	return		;funcret
  8799   003910                     __end_of_setMotorPWM:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function ___wmul *****************
  8803 ;; Defined at:
  8804 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  multiplier      2    0[COMRAM] unsigned int 
  8807 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  product         2    4[COMRAM] unsigned int 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  2    0[COMRAM] unsigned int 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, prodl, prodh
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;Total ram usage:        6 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; Hardware stack levels required when called: 1
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_setMotorPWM
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text61
  8834   004DAA                     __ptext61:
  8835                           	callstack 0
  8836   004DAA                     ___wmul:
  8837                           	callstack 25
  8838   004DAA  5001               	movf	___wmul@multiplier^0,w,c
  8839   004DAC  0203               	mulwf	___wmul@multiplicand^0,c
  8840   004DAE  CFF3 F005          	movff	prodl,___wmul@product
  8841   004DB2  CFF4 F006          	movff	prodh,___wmul@product+1
  8842   004DB6  5001               	movf	___wmul@multiplier^0,w,c
  8843   004DB8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8844   004DBA  50F3               	movf	243,w,c
  8845   004DBC  2606               	addwf	(___wmul@product+1)^0,f,c
  8846   004DBE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8847   004DC0  0203               	mulwf	___wmul@multiplicand^0,c
  8848   004DC2  50F3               	movf	243,w,c
  8849   004DC4  2606               	addwf	(___wmul@product+1)^0,f,c
  8850   004DC6  C005  F001         	movff	___wmul@product,?___wmul
  8851   004DCA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8852   004DCE  0012               	return		;funcret
  8853   004DD0                     __end_of___wmul:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function ___lwdiv *****************
  8857 ;; Defined at:
  8858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  dividend        2    6[COMRAM] unsigned int 
  8861 ;;  divisor         2    8[COMRAM] unsigned int 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  quotient        2   10[COMRAM] unsigned int 
  8864 ;;  counter         1   12[COMRAM] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  2    6[COMRAM] unsigned int 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;Total ram usage:        7 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_setMotorPWM
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text62
  8889   0043DA                     __ptext62:
  8890                           	callstack 0
  8891   0043DA                     ___lwdiv:
  8892                           	callstack 25
  8893   0043DA  0E00               	movlw	0
  8894   0043DC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8895   0043DE  0E00               	movlw	0
  8896   0043E0  6E0B               	movwf	___lwdiv@quotient^0,c
  8897   0043E2  5009               	movf	___lwdiv@divisor^0,w,c
  8898   0043E4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8899   0043E6  B4D8               	btfsc	status,2,c
  8900   0043E8  EFF8  F021         	goto	u2511
  8901   0043EC  EFFA  F021         	goto	u2510
  8902   0043F0                     u2511:
  8903   0043F0  EF22  F022         	goto	l1204
  8904   0043F4                     u2510:
  8905   0043F4  0E01               	movlw	1
  8906   0043F6  6E0D               	movwf	___lwdiv@counter^0,c
  8907   0043F8  EF02  F022         	goto	l3339
  8908   0043FC                     l3337:
  8909   0043FC  90D8               	bcf	status,0,c
  8910   0043FE  3609               	rlcf	___lwdiv@divisor^0,f,c
  8911   004400  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8912   004402  2A0D               	incf	___lwdiv@counter^0,f,c
  8913   004404                     l3339:
  8914   004404  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8915   004406  EF07  F022         	goto	u2521
  8916   00440A  EF09  F022         	goto	u2520
  8917   00440E                     u2521:
  8918   00440E  EFFE  F021         	goto	l3337
  8919   004412                     u2520:
  8920   004412                     l3341:
  8921   004412  90D8               	bcf	status,0,c
  8922   004414  360B               	rlcf	___lwdiv@quotient^0,f,c
  8923   004416  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8924   004418  5009               	movf	___lwdiv@divisor^0,w,c
  8925   00441A  5C07               	subwf	___lwdiv@dividend^0,w,c
  8926   00441C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8927   00441E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8928   004420  A0D8               	btfss	status,0,c
  8929   004422  EF15  F022         	goto	u2531
  8930   004426  EF17  F022         	goto	u2530
  8931   00442A                     u2531:
  8932   00442A  EF1C  F022         	goto	l3349
  8933   00442E                     u2530:
  8934   00442E  5009               	movf	___lwdiv@divisor^0,w,c
  8935   004430  5E07               	subwf	___lwdiv@dividend^0,f,c
  8936   004432  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8937   004434  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8938   004436  800B               	bsf	___lwdiv@quotient^0,0,c
  8939   004438                     l3349:
  8940   004438  90D8               	bcf	status,0,c
  8941   00443A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8942   00443C  3209               	rrcf	___lwdiv@divisor^0,f,c
  8943   00443E  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8944   004440  EF09  F022         	goto	l3341
  8945   004444                     l1204:
  8946   004444  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8947   004448  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8948   00444C  0012               	return		;funcret
  8949   00444E                     __end_of___lwdiv:
  8950                           	callstack 0
  8951                           
  8952 ;; *************** function _Colour_decider *****************
  8953 ;; Defined at:
  8954 ;;		line 125 in file "color.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  vals            2   74[COMRAM] PTR struct RGB
  8957 ;;		 -> vals(8), 
  8958 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8959 ;;		 -> rel(12), 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  RGB_col        12    6[BANK0 ] float [3]
  8962 ;;  Hue             4   28[BANK0 ] float 
  8963 ;;  Cmin            4   22[BANK0 ] float 
  8964 ;;  Cmax            4   18[BANK0 ] float 
  8965 ;;  i               2   26[BANK0 ] int 
  8966 ;;  Cmax_i          2    4[BANK0 ] int 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  2   74[COMRAM] int 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;Total ram usage:       38 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 3
  8983 ;; This function calls:
  8984 ;;		___fladd
  8985 ;;		___fldiv
  8986 ;;		___fleq
  8987 ;;		___flge
  8988 ;;		___flmul
  8989 ;;		___flsub
  8990 ;;		___xxtofl
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text63
  8997   000E26                     __ptext63:
  8998                           	callstack 0
  8999   000E26                     _Colour_decider:
  9000                           	callstack 27
  9001   000E26                     
  9002                           ;color.c: 126:     float Cmax = 0;
  9003   000E26  0E00               	movlw	0
  9004   000E28  0100               	movlb	0	; () banked
  9005   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  9006   000E2C  0E00               	movlw	0
  9007   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  9008   000E30  0E00               	movlw	0
  9009   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  9010   000E34  0E00               	movlw	0
  9011   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  9012                           
  9013                           ;color.c: 127:     float Cmin= 100000;
  9014   000E38  0E00               	movlw	0
  9015   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  9016   000E3C  0E50               	movlw	80
  9017   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  9018   000E40  0EC3               	movlw	195
  9019   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  9020   000E44  0E47               	movlw	71
  9021   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  9022                           
  9023                           ;color.c: 128:     int Cmax_i =4;
  9024   000E48  0E00               	movlw	0
  9025   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  9026   000E4C  0E04               	movlw	4
  9027   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  9028   000E50                     
  9029                           ; BSR set to: 0
  9030                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  9031   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  9032   000E54  0E0B               	movlw	11
  9033   000E56                     u4051:
  9034   000E56  6ADE               	clrf	postinc2,c
  9035   000E58  06E8               	decf	wreg,f,c
  9036   000E5A  E2FD               	bc	u4051
  9037   000E5C                     
  9038                           ; BSR set to: 0
  9039   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  9040   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  9041   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  9042   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9043   000E6C  0E00               	movlw	0
  9044   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9045   000E70  0EFF               	movlw	-1
  9046   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  9047   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  9048   000E76  0E01               	movlw	1
  9049   000E78  EC34  F01A         	call	___xxtofl
  9050   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  9051   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  9052   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  9053   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  9054   000E8C  EE20 F002          	lfsr	2,2
  9055   000E90  504B               	movf	Colour_decider@vals^0,w,c
  9056   000E92  26D9               	addwf	fsr2l,f,c
  9057   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9058   000E96  22DA               	addwfc	fsr2h,f,c
  9059   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  9060   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9061   000EA0  0E00               	movlw	0
  9062   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9063   000EA4  0EFF               	movlw	-1
  9064   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  9065   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  9066   000EAA  0E01               	movlw	1
  9067   000EAC  EC34  F01A         	call	___xxtofl
  9068   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  9069   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  9070   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  9071   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  9072   000EC0  EE20 F004          	lfsr	2,4
  9073   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  9074   000EC6  26D9               	addwf	fsr2l,f,c
  9075   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9076   000ECA  22DA               	addwfc	fsr2h,f,c
  9077   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  9078   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9079   000ED4  0E00               	movlw	0
  9080   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9081   000ED8  0EFF               	movlw	-1
  9082   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  9083   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  9084   000EDE  0E01               	movlw	1
  9085   000EE0  EC34  F01A         	call	___xxtofl
  9086   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  9087   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  9088   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  9089   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  9090   000EF4                     
  9091                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  9092   000EF4  0E00               	movlw	0
  9093   000EF6  0100               	movlb	0	; () banked
  9094   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  9095   000EFA  0E00               	movlw	0
  9096   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  9097   000EFE                     l4413:
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  9101   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  9102   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  9103   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  9104   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  9105   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  9106   000F10  6E4F               	movwf	??_Colour_decider^0,c
  9107   000F12  0E00               	movlw	high Colour_decider@RGB_col
  9108   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  9109   000F16  90D8               	bcf	status,0,c
  9110   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9111   000F1A  6ED9               	movwf	fsr2l,c
  9112   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9113   000F1E  6EDA               	movwf	fsr2h,c
  9114   000F20  90D8               	bcf	status,0,c
  9115   000F22  36D9               	rlcf	fsr2l,f,c
  9116   000F24  36DA               	rlcf	fsr2h,f,c
  9117   000F26  504F               	movf	??_Colour_decider^0,w,c
  9118   000F28  26D9               	addwf	fsr2l,f,c
  9119   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  9120   000F2C  22DA               	addwfc	fsr2h,f,c
  9121   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  9122   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  9123   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  9124   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  9125   000F3E  ECE1  F01D         	call	___flge	;wreg free
  9126   000F42  B0D8               	btfsc	status,0,c
  9127   000F44  EFA6  F007         	goto	u4061
  9128   000F48  EFA8  F007         	goto	u4060
  9129   000F4C                     u4061:
  9130   000F4C  EFC5  F007         	goto	l4419
  9131   000F50                     u4060:
  9132   000F50                     
  9133                           ;color.c: 137:             Cmax=RGB_col[i];
  9134   000F50  0E66               	movlw	low Colour_decider@RGB_col
  9135   000F52  6E4F               	movwf	??_Colour_decider^0,c
  9136   000F54  0E00               	movlw	high Colour_decider@RGB_col
  9137   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  9138   000F58  90D8               	bcf	status,0,c
  9139   000F5A  0100               	movlb	0	; () banked
  9140   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9141   000F5E  6ED9               	movwf	fsr2l,c
  9142   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9143   000F62  6EDA               	movwf	fsr2h,c
  9144   000F64  90D8               	bcf	status,0,c
  9145   000F66  36D9               	rlcf	fsr2l,f,c
  9146   000F68  36DA               	rlcf	fsr2h,f,c
  9147   000F6A  504F               	movf	??_Colour_decider^0,w,c
  9148   000F6C  26D9               	addwf	fsr2l,f,c
  9149   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  9150   000F70  22DA               	addwfc	fsr2h,f,c
  9151   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  9152   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  9153   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  9154   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  9155   000F82                     
  9156                           ; BSR set to: 0
  9157                           ;color.c: 138:             Cmax_i=i;
  9158   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  9159   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  9160   000F8A                     l4419:
  9161                           
  9162                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  9163   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  9164   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  9165   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  9166   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  9167   000F92  90D8               	bcf	status,0,c
  9168   000F94  0100               	movlb	0	; () banked
  9169   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9170   000F98  6ED9               	movwf	fsr2l,c
  9171   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9172   000F9C  6EDA               	movwf	fsr2h,c
  9173   000F9E  90D8               	bcf	status,0,c
  9174   000FA0  36D9               	rlcf	fsr2l,f,c
  9175   000FA2  36DA               	rlcf	fsr2h,f,c
  9176   000FA4  504F               	movf	??_Colour_decider^0,w,c
  9177   000FA6  26D9               	addwf	fsr2l,f,c
  9178   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  9179   000FAA  22DA               	addwfc	fsr2h,f,c
  9180   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  9181   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9182   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9183   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9184   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  9185   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9186   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9187   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9188   000FCC  ECE1  F01D         	call	___flge	;wreg free
  9189   000FD0  B0D8               	btfsc	status,0,c
  9190   000FD2  EFED  F007         	goto	u4071
  9191   000FD6  EFEF  F007         	goto	u4070
  9192   000FDA                     u4071:
  9193   000FDA  EF08  F008         	goto	l4423
  9194   000FDE                     u4070:
  9195   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  9196   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  9197   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  9198   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9199   000FE6  90D8               	bcf	status,0,c
  9200   000FE8  0100               	movlb	0	; () banked
  9201   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9202   000FEC  6ED9               	movwf	fsr2l,c
  9203   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9204   000FF0  6EDA               	movwf	fsr2h,c
  9205   000FF2  90D8               	bcf	status,0,c
  9206   000FF4  36D9               	rlcf	fsr2l,f,c
  9207   000FF6  36DA               	rlcf	fsr2h,f,c
  9208   000FF8  504F               	movf	??_Colour_decider^0,w,c
  9209   000FFA  26D9               	addwf	fsr2l,f,c
  9210   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9211   000FFE  22DA               	addwfc	fsr2h,f,c
  9212   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9213   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9214   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9215   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9216   001010                     l4423:
  9217                           
  9218                           ;color.c: 141:     }
  9219   001010  0100               	movlb	0	; () banked
  9220   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9221   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9222   001016                     
  9223                           ; BSR set to: 0
  9224   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9225   001018  EF17  F008         	goto	u4081
  9226   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9227   00101E  E109               	bnz	u4080
  9228   001020  0E03               	movlw	3
  9229   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9230   001024  A0D8               	btfss	status,0,c
  9231   001026  EF17  F008         	goto	u4081
  9232   00102A  EF19  F008         	goto	u4080
  9233   00102E                     u4081:
  9234   00102E  EF7F  F007         	goto	l4413
  9235   001032                     u4080:
  9236   001032                     
  9237                           ; BSR set to: 0
  9238                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9239   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9240   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9241   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9242   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9243   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9244   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9245   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9246   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9247   001052  EC48  F025         	call	___flsub	;wreg free
  9248   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  9249   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  9250   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  9251   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  9252   001066  0E00               	movlw	0
  9253   001068  6E1D               	movwf	___fleq@ff2^0,c
  9254   00106A  0E00               	movlw	0
  9255   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  9256   00106E  0E00               	movlw	0
  9257   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  9258   001072  0E00               	movlw	0
  9259   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  9260   001076  EC1D  F01F         	call	___fleq	;wreg free
  9261   00107A  A0D8               	btfss	status,0,c
  9262   00107C  EF42  F008         	goto	u4091
  9263   001080  EF44  F008         	goto	u4090
  9264   001084                     u4091:
  9265   001084  EF4A  F008         	goto	l4433
  9266   001088                     u4090:
  9267   001088                     l4429:
  9268   001088  0E00               	movlw	0
  9269   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9270   00108C  0E00               	movlw	0
  9271   00108E  6E4B               	movwf	?_Colour_decider^0,c
  9272   001090  EF80  F00C         	goto	l76
  9273   001094                     l4433:
  9274                           
  9275                           ;color.c: 146:     if (Cmax_i==0){
  9276   001094  0100               	movlb	0	; () banked
  9277   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9278   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9279   00109A  A4D8               	btfss	status,2,c
  9280   00109C  EF52  F008         	goto	u4101
  9281   0010A0  EF54  F008         	goto	u4100
  9282   0010A4                     u4101:
  9283   0010A4  EFC8  F008         	goto	l4441
  9284   0010A8                     u4100:
  9285   0010A8                     
  9286                           ; BSR set to: 0
  9287                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9288   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9289   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9290   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9291   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9292   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9293   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9294   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9295   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9296   0010C8  EC48  F025         	call	___flsub	;wreg free
  9297   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  9298   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9299   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9300   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9301   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  9302   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9303   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9304   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9305   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  9306   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9307   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9308   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9309   0010FC  EC48  F025         	call	___flsub	;wreg free
  9310   001100  C011  F019         	movff	?___flsub,___fldiv@b
  9311   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9312   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9313   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9314   001110  EC98  F013         	call	___fldiv	;wreg free
  9315   001114  C019  F032         	movff	?___fldiv,___flmul@b
  9316   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9317   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9318   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9319   001124  0E00               	movlw	0
  9320   001126  6E36               	movwf	___flmul@a^0,c
  9321   001128  0E00               	movlw	0
  9322   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9323   00112C  0E70               	movlw	112
  9324   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9325   001130  0E42               	movlw	66
  9326   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9327   001134  EC83  F011         	call	___flmul	;wreg free
  9328   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9329   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9330   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9331   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9332   001148                     
  9333                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9334   001148  0100               	movlb	0	; () banked
  9335   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9336   00114C  EFAC  F008         	goto	u4110
  9337   001150  EFAA  F008         	goto	u4111
  9338   001154                     u4111:
  9339   001154  EFA7  F009         	goto	l4451
  9340   001158                     u4110:
  9341   001158                     
  9342                           ; BSR set to: 0
  9343   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9344   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9345   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9346   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9347   001168  0E00               	movlw	0
  9348   00116A  6E05               	movwf	___fladd@a^0,c
  9349   00116C  0E00               	movlw	0
  9350   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9351   001170  0EB4               	movlw	180
  9352   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9353   001174  0E43               	movlw	67
  9354   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9355   001178  EC23  F00F         	call	___fladd	;wreg free
  9356   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9357   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9358   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9359   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9360   00118C  EFA7  F009         	goto	l4451
  9361   001190                     l4441:
  9362                           
  9363                           ; BSR set to: 0
  9364   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9365   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9366   001194  A4D8               	btfss	status,2,c
  9367   001196  EFCF  F008         	goto	u4121
  9368   00119A  EFD1  F008         	goto	u4120
  9369   00119E                     u4121:
  9370   00119E  EF3D  F009         	goto	l4447
  9371   0011A2                     u4120:
  9372   0011A2                     
  9373                           ; BSR set to: 0
  9374                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9375   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9376   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9377   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9378   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9379   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9380   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9381   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9382   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9383   0011C2  EC48  F025         	call	___flsub	;wreg free
  9384   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9385   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9386   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9387   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9388   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9389   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9390   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9391   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9392   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9393   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9394   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9395   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9396   0011F6  EC48  F025         	call	___flsub	;wreg free
  9397   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9398   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9399   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9400   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9401   00120A  EC98  F013         	call	___fldiv	;wreg free
  9402   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$3027
  9403   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3027+1
  9404   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3027+2
  9405   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3027+3
  9406   00121E                     
  9407                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9408   00121E  0E00               	movlw	0
  9409   001220  6E05               	movwf	___fladd@a^0,c
  9410   001222  0E00               	movlw	0
  9411   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9412   001226  0E00               	movlw	0
  9413   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9414   00122A  0E40               	movlw	64
  9415   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9416   00122E  C060  F001         	movff	_Colour_decider$3027,___fladd@b
  9417   001232  C061  F002         	movff	_Colour_decider$3027+1,___fladd@b+1
  9418   001236  C062  F003         	movff	_Colour_decider$3027+2,___fladd@b+2
  9419   00123A  C063  F004         	movff	_Colour_decider$3027+3,___fladd@b+3
  9420   00123E  EC23  F00F         	call	___fladd	;wreg free
  9421   001242  C001  F032         	movff	?___fladd,___flmul@b
  9422   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9423   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9424   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9425   001252  0E00               	movlw	0
  9426   001254  6E36               	movwf	___flmul@a^0,c
  9427   001256  0E00               	movlw	0
  9428   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9429   00125A  0E70               	movlw	112
  9430   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9431   00125E  0E42               	movlw	66
  9432   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9433   001262  EC83  F011         	call	___flmul	;wreg free
  9434   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9435   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9436   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9437   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9438                           
  9439                           ;color.c: 155:     }
  9440   001276  EFA7  F009         	goto	l4451
  9441   00127A                     l4447:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9445   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9446   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9447   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9448   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9449   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9450   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9451   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9452   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9453   00129A  EC48  F025         	call	___flsub	;wreg free
  9454   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9455   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9456   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9457   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9458   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9459   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9460   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9461   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9462   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9463   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9464   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9465   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9466   0012CE  EC48  F025         	call	___flsub	;wreg free
  9467   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9468   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9469   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9470   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9471   0012E2  EC98  F013         	call	___fldiv	;wreg free
  9472   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$3027
  9473   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3027+1
  9474   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3027+2
  9475   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3027+3
  9476   0012F6                     
  9477                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9478   0012F6  0E00               	movlw	0
  9479   0012F8  6E05               	movwf	___fladd@a^0,c
  9480   0012FA  0E00               	movlw	0
  9481   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9482   0012FE  0E80               	movlw	128
  9483   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9484   001302  0E40               	movlw	64
  9485   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9486   001306  C060  F001         	movff	_Colour_decider$3027,___fladd@b
  9487   00130A  C061  F002         	movff	_Colour_decider$3027+1,___fladd@b+1
  9488   00130E  C062  F003         	movff	_Colour_decider$3027+2,___fladd@b+2
  9489   001312  C063  F004         	movff	_Colour_decider$3027+3,___fladd@b+3
  9490   001316  EC23  F00F         	call	___fladd	;wreg free
  9491   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9492   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9493   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9494   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9495   00132A  0E00               	movlw	0
  9496   00132C  6E36               	movwf	___flmul@a^0,c
  9497   00132E  0E00               	movlw	0
  9498   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9499   001332  0E70               	movlw	112
  9500   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9501   001336  0E42               	movlw	66
  9502   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9503   00133A  EC83  F011         	call	___flmul	;wreg free
  9504   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9505   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9506   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9507   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9508   00134E                     l4451:
  9509                           
  9510                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9511   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9512   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9513   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9514   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9515   00135E  0E00               	movlw	0
  9516   001360  6E05               	movwf	___flge@ff2^0,c
  9517   001362  0E00               	movlw	0
  9518   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9519   001366  0EA5               	movlw	165
  9520   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9521   00136A  0E43               	movlw	67
  9522   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9523   00136E  ECE1  F01D         	call	___flge	;wreg free
  9524   001372  A0D8               	btfss	status,0,c
  9525   001374  EFBE  F009         	goto	u4131
  9526   001378  EFC0  F009         	goto	u4130
  9527   00137C                     u4131:
  9528   00137C  EFDF  F009         	goto	l4461
  9529   001380                     u4130:
  9530   001380  0E00               	movlw	0
  9531   001382  6E01               	movwf	___flge@ff1^0,c
  9532   001384  0E00               	movlw	0
  9533   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9534   001388  0EB4               	movlw	180
  9535   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9536   00138C  0E43               	movlw	67
  9537   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9538   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9539   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9540   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9541   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9542   0013A0  ECE1  F01D         	call	___flge	;wreg free
  9543   0013A4  A0D8               	btfss	status,0,c
  9544   0013A6  EFD7  F009         	goto	u4141
  9545   0013AA  EFD9  F009         	goto	u4140
  9546   0013AE                     u4141:
  9547   0013AE  EFDF  F009         	goto	l4461
  9548   0013B2                     u4140:
  9549   0013B2                     
  9550                           ;color.c: 164:         return 1;
  9551   0013B2  0E00               	movlw	0
  9552   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9553   0013B6  0E01               	movlw	1
  9554   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9555   0013BA  EF80  F00C         	goto	l76
  9556   0013BE                     l4461:
  9557   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9558   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9559   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9560   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9561   0013CE  0E00               	movlw	0
  9562   0013D0  6E05               	movwf	___flge@ff2^0,c
  9563   0013D2  0E00               	movlw	0
  9564   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9565   0013D6  0EA0               	movlw	160
  9566   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9567   0013DA  0E40               	movlw	64
  9568   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9569   0013DE  ECE1  F01D         	call	___flge	;wreg free
  9570   0013E2  A0D8               	btfss	status,0,c
  9571   0013E4  EFF6  F009         	goto	u4151
  9572   0013E8  EFF8  F009         	goto	u4150
  9573   0013EC                     u4151:
  9574   0013EC  EF17  F00A         	goto	l4471
  9575   0013F0                     u4150:
  9576   0013F0  0E00               	movlw	0
  9577   0013F2  6E01               	movwf	___flge@ff1^0,c
  9578   0013F4  0E00               	movlw	0
  9579   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9580   0013F8  0E40               	movlw	64
  9581   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9582   0013FC  0E41               	movlw	65
  9583   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9584   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9585   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9586   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9587   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9588   001410  ECE1  F01D         	call	___flge	;wreg free
  9589   001414  A0D8               	btfss	status,0,c
  9590   001416  EF0F  F00A         	goto	u4161
  9591   00141A  EF11  F00A         	goto	u4160
  9592   00141E                     u4161:
  9593   00141E  EF17  F00A         	goto	l4471
  9594   001422                     u4160:
  9595   001422                     
  9596                           ;color.c: 168:         return 2;
  9597   001422  0E00               	movlw	0
  9598   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9599   001426  0E02               	movlw	2
  9600   001428  6E4B               	movwf	?_Colour_decider^0,c
  9601   00142A  EF80  F00C         	goto	l76
  9602   00142E                     l4471:
  9603   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9604   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9605   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9606   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9607   00143E  0E00               	movlw	0
  9608   001440  6E05               	movwf	___flge@ff2^0,c
  9609   001442  0E00               	movlw	0
  9610   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9611   001446  0EA0               	movlw	160
  9612   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9613   00144A  0E41               	movlw	65
  9614   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9615   00144E  ECE1  F01D         	call	___flge	;wreg free
  9616   001452  A0D8               	btfss	status,0,c
  9617   001454  EF2E  F00A         	goto	u4171
  9618   001458  EF30  F00A         	goto	u4170
  9619   00145C                     u4171:
  9620   00145C  EFB0  F00A         	goto	l4497
  9621   001460                     u4170:
  9622   001460  0E00               	movlw	0
  9623   001462  6E01               	movwf	___flge@ff1^0,c
  9624   001464  0E00               	movlw	0
  9625   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9626   001468  0EE8               	movlw	232
  9627   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9628   00146C  0E41               	movlw	65
  9629   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9630   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9631   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9632   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9633   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9634   001480  ECE1  F01D         	call	___flge	;wreg free
  9635   001484  A0D8               	btfss	status,0,c
  9636   001486  EF47  F00A         	goto	u4181
  9637   00148A  EF49  F00A         	goto	u4180
  9638   00148E                     u4181:
  9639   00148E  EFB0  F00A         	goto	l4497
  9640   001492                     u4180:
  9641   001492                     
  9642                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9643   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9644   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9645   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9646   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9647   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9648   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9649   0014AA  0ECD               	movlw	205
  9650   0014AC  6E05               	movwf	___flge@ff2^0,c
  9651   0014AE  0ECC               	movlw	204
  9652   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9653   0014B2  0E4C               	movlw	76
  9654   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9655   0014B6  0E3E               	movlw	62
  9656   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9657   0014BA  ECE1  F01D         	call	___flge	;wreg free
  9658   0014BE  A0D8               	btfss	status,0,c
  9659   0014C0  EF64  F00A         	goto	u4191
  9660   0014C4  EF66  F00A         	goto	u4190
  9661   0014C8                     u4191:
  9662   0014C8  EF85  F00A         	goto	l4485
  9663   0014CC                     u4190:
  9664   0014CC  0E00               	movlw	0
  9665   0014CE  6E01               	movwf	___flge@ff1^0,c
  9666   0014D0  0E00               	movlw	0
  9667   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9668   0014D4  0E80               	movlw	128
  9669   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9670   0014D8  0E3E               	movlw	62
  9671   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9672   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9673   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9674   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9675   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9676   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9677   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9678   0014F4  ECE1  F01D         	call	___flge	;wreg free
  9679   0014F8  A0D8               	btfss	status,0,c
  9680   0014FA  EF81  F00A         	goto	u4201
  9681   0014FE  EF83  F00A         	goto	u4200
  9682   001502                     u4201:
  9683   001502  EF85  F00A         	goto	l4485
  9684   001506                     u4200:
  9685   001506  EF44  F008         	goto	l4429
  9686   00150A                     l4485:
  9687   00150A  EE20 F008          	lfsr	2,8
  9688   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9689   001510  26D9               	addwf	fsr2l,f,c
  9690   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9691   001514  22DA               	addwfc	fsr2h,f,c
  9692   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9693   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9694   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9695   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9696   001526  0E29               	movlw	41
  9697   001528  6E05               	movwf	___flge@ff2^0,c
  9698   00152A  0E5C               	movlw	92
  9699   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9700   00152E  0E0F               	movlw	15
  9701   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9702   001532  0E3E               	movlw	62
  9703   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9704   001536  ECE1  F01D         	call	___flge	;wreg free
  9705   00153A  A0D8               	btfss	status,0,c
  9706   00153C  EFA2  F00A         	goto	u4211
  9707   001540  EFA4  F00A         	goto	u4210
  9708   001544                     u4211:
  9709   001544  EFAA  F00A         	goto	l4493
  9710   001548                     u4210:
  9711   001548                     l4487:
  9712                           
  9713                           ;color.c: 179:             return 4;
  9714   001548  0E00               	movlw	0
  9715   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9716   00154C  0E04               	movlw	4
  9717   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9718   001550  EF80  F00C         	goto	l76
  9719   001554                     l4493:
  9720                           
  9721                           ;color.c: 182:             return 3;
  9722   001554  0E00               	movlw	0
  9723   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9724   001558  0E03               	movlw	3
  9725   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9726   00155C  EF80  F00C         	goto	l76
  9727   001560                     l4497:
  9728   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9729   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9730   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9731   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9732   001570  0E00               	movlw	0
  9733   001572  6E05               	movwf	___flge@ff2^0,c
  9734   001574  0E00               	movlw	0
  9735   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9736   001578  0E34               	movlw	52
  9737   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9738   00157C  0E42               	movlw	66
  9739   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9740   001580  ECE1  F01D         	call	___flge	;wreg free
  9741   001584  A0D8               	btfss	status,0,c
  9742   001586  EFC7  F00A         	goto	u4221
  9743   00158A  EFC9  F00A         	goto	u4220
  9744   00158E                     u4221:
  9745   00158E  EF2E  F00B         	goto	l4521
  9746   001592                     u4220:
  9747   001592  0E00               	movlw	0
  9748   001594  6E01               	movwf	___flge@ff1^0,c
  9749   001596  0E00               	movlw	0
  9750   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9751   00159A  0EA0               	movlw	160
  9752   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9753   00159E  0E42               	movlw	66
  9754   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9755   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9756   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9757   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9758   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9759   0015B2  ECE1  F01D         	call	___flge	;wreg free
  9760   0015B6  A0D8               	btfss	status,0,c
  9761   0015B8  EFE0  F00A         	goto	u4231
  9762   0015BC  EFE2  F00A         	goto	u4230
  9763   0015C0                     u4231:
  9764   0015C0  EF2E  F00B         	goto	l4521
  9765   0015C4                     u4230:
  9766   0015C4                     
  9767                           ;color.c: 188:         if(0.15<=rel->B){
  9768   0015C4  EE20 F008          	lfsr	2,8
  9769   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9770   0015CA  26D9               	addwf	fsr2l,f,c
  9771   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9772   0015CE  22DA               	addwfc	fsr2h,f,c
  9773   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9774   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9775   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9776   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9777   0015E0  0E9A               	movlw	154
  9778   0015E2  6E05               	movwf	___flge@ff2^0,c
  9779   0015E4  0E99               	movlw	153
  9780   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9781   0015E8  0E19               	movlw	25
  9782   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9783   0015EC  0E3E               	movlw	62
  9784   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9785   0015F0  ECE1  F01D         	call	___flge	;wreg free
  9786   0015F4  A0D8               	btfss	status,0,c
  9787   0015F6  EFFF  F00A         	goto	u4241
  9788   0015FA  EF01  F00B         	goto	u4240
  9789   0015FE                     u4241:
  9790   0015FE  EF03  F00B         	goto	l4509
  9791   001602                     u4240:
  9792   001602  EFA4  F00A         	goto	l4487
  9793   001606                     l4509:
  9794   001606  EE20 F008          	lfsr	2,8
  9795   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9796   00160C  26D9               	addwf	fsr2l,f,c
  9797   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9798   001610  22DA               	addwfc	fsr2h,f,c
  9799   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9800   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9801   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9802   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9803   001622  0E8F               	movlw	143
  9804   001624  6E05               	movwf	___flge@ff2^0,c
  9805   001626  0EC2               	movlw	194
  9806   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9807   00162A  0EF5               	movlw	245
  9808   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9809   00162E  0E3D               	movlw	61
  9810   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9811   001632  ECE1  F01D         	call	___flge	;wreg free
  9812   001636  A0D8               	btfss	status,0,c
  9813   001638  EF20  F00B         	goto	u4251
  9814   00163C  EF22  F00B         	goto	u4250
  9815   001640                     u4251:
  9816   001640  EF28  F00B         	goto	l4517
  9817   001644                     u4250:
  9818   001644                     l4511:
  9819                           
  9820                           ;color.c: 192:             return 6;
  9821   001644  0E00               	movlw	0
  9822   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9823   001648  0E06               	movlw	6
  9824   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9825   00164C  EF80  F00C         	goto	l76
  9826   001650                     l4517:
  9827                           
  9828                           ;color.c: 195:             return 5;
  9829   001650  0E00               	movlw	0
  9830   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9831   001654  0E05               	movlw	5
  9832   001656  6E4B               	movwf	?_Colour_decider^0,c
  9833   001658  EF80  F00C         	goto	l76
  9834   00165C                     l4521:
  9835   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9836   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9837   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9838   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9839   00166C  0E00               	movlw	0
  9840   00166E  6E05               	movwf	___flge@ff2^0,c
  9841   001670  0E00               	movlw	0
  9842   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9843   001674  0EA2               	movlw	162
  9844   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9845   001678  0E42               	movlw	66
  9846   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9847   00167C  ECE1  F01D         	call	___flge	;wreg free
  9848   001680  A0D8               	btfss	status,0,c
  9849   001682  EF45  F00B         	goto	u4261
  9850   001686  EF47  F00B         	goto	u4260
  9851   00168A                     u4261:
  9852   00168A  EF81  F00B         	goto	l4537
  9853   00168E                     u4260:
  9854   00168E  0E00               	movlw	0
  9855   001690  6E01               	movwf	___flge@ff1^0,c
  9856   001692  0E00               	movlw	0
  9857   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9858   001696  0EE6               	movlw	230
  9859   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9860   00169A  0E42               	movlw	66
  9861   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9862   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9863   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9864   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9865   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9866   0016AE  ECE1  F01D         	call	___flge	;wreg free
  9867   0016B2  A0D8               	btfss	status,0,c
  9868   0016B4  EF5E  F00B         	goto	u4271
  9869   0016B8  EF60  F00B         	goto	u4270
  9870   0016BC                     u4271:
  9871   0016BC  EF81  F00B         	goto	l4537
  9872   0016C0                     u4270:
  9873   0016C0                     
  9874                           ;color.c: 201:         if(0.15<=rel->B){
  9875   0016C0  EE20 F008          	lfsr	2,8
  9876   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9877   0016C6  26D9               	addwf	fsr2l,f,c
  9878   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9879   0016CA  22DA               	addwfc	fsr2h,f,c
  9880   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9881   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9882   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9883   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9884   0016DC  0E9A               	movlw	154
  9885   0016DE  6E05               	movwf	___flge@ff2^0,c
  9886   0016E0  0E99               	movlw	153
  9887   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9888   0016E4  0E19               	movlw	25
  9889   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9890   0016E8  0E3E               	movlw	62
  9891   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9892   0016EC  ECE1  F01D         	call	___flge	;wreg free
  9893   0016F0  A0D8               	btfss	status,0,c
  9894   0016F2  EF7D  F00B         	goto	u4281
  9895   0016F6  EF7F  F00B         	goto	u4280
  9896   0016FA                     u4281:
  9897   0016FA  EF22  F00B         	goto	l4511
  9898   0016FE                     u4280:
  9899   0016FE  EFA4  F00A         	goto	l4487
  9900   001702                     l4537:
  9901   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9902   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9903   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9904   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9905   001712  0E00               	movlw	0
  9906   001714  6E05               	movwf	___flge@ff2^0,c
  9907   001716  0E00               	movlw	0
  9908   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9909   00171A  0EF0               	movlw	240
  9910   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9911   00171E  0E41               	movlw	65
  9912   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9913   001722  ECE1  F01D         	call	___flge	;wreg free
  9914   001726  A0D8               	btfss	status,0,c
  9915   001728  EF98  F00B         	goto	u4291
  9916   00172C  EF9A  F00B         	goto	u4290
  9917   001730                     u4291:
  9918   001730  EFB3  F00B         	goto	l4541
  9919   001734                     u4290:
  9920   001734  0E00               	movlw	0
  9921   001736  6E01               	movwf	___flge@ff1^0,c
  9922   001738  0E00               	movlw	0
  9923   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9924   00173C  0E68               	movlw	104
  9925   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9926   001740  0E42               	movlw	66
  9927   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9928   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9929   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9930   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9931   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9932   001754  ECE1  F01D         	call	___flge	;wreg free
  9933   001758  B0D8               	btfsc	status,0,c
  9934   00175A  EFB1  F00B         	goto	u4301
  9935   00175E  EFB3  F00B         	goto	u4300
  9936   001762                     u4301:
  9937   001762  EFA4  F00A         	goto	l4487
  9938   001766                     u4300:
  9939   001766                     l4541:
  9940   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9941   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9942   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9943   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9944   001776  0E00               	movlw	0
  9945   001778  6E05               	movwf	___flge@ff2^0,c
  9946   00177A  0E00               	movlw	0
  9947   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9948   00177E  0EF0               	movlw	240
  9949   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9950   001782  0E42               	movlw	66
  9951   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9952   001786  ECE1  F01D         	call	___flge	;wreg free
  9953   00178A  A0D8               	btfss	status,0,c
  9954   00178C  EFCA  F00B         	goto	u4311
  9955   001790  EFCC  F00B         	goto	u4310
  9956   001794                     u4311:
  9957   001794  EFE7  F00B         	goto	l4551
  9958   001798                     u4310:
  9959   001798  0E00               	movlw	0
  9960   00179A  6E01               	movwf	___flge@ff1^0,c
  9961   00179C  0E00               	movlw	0
  9962   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9963   0017A0  0E5C               	movlw	92
  9964   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9965   0017A4  0E43               	movlw	67
  9966   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9967   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9968   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9969   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9970   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9971   0017B8  ECE1  F01D         	call	___flge	;wreg free
  9972   0017BC  A0D8               	btfss	status,0,c
  9973   0017BE  EFE3  F00B         	goto	u4321
  9974   0017C2  EFE5  F00B         	goto	u4320
  9975   0017C6                     u4321:
  9976   0017C6  EFE7  F00B         	goto	l4551
  9977   0017CA                     u4320:
  9978   0017CA  EFA4  F00A         	goto	l4487
  9979   0017CE                     l4551:
  9980   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9981   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9982   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9983   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9984   0017DE  0E00               	movlw	0
  9985   0017E0  6E05               	movwf	___flge@ff2^0,c
  9986   0017E2  0E00               	movlw	0
  9987   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9988   0017E6  0E60               	movlw	96
  9989   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9990   0017EA  0E41               	movlw	65
  9991   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9992   0017EE  ECE1  F01D         	call	___flge	;wreg free
  9993   0017F2  A0D8               	btfss	status,0,c
  9994   0017F4  EFFE  F00B         	goto	u4331
  9995   0017F8  EF00  F00C         	goto	u4330
  9996   0017FC                     u4331:
  9997   0017FC  EF7C  F00C         	goto	l4577
  9998   001800                     u4330:
  9999   001800  0E00               	movlw	0
 10000   001802  6E01               	movwf	___flge@ff1^0,c
 10001   001804  0E00               	movlw	0
 10002   001806  6E02               	movwf	(___flge@ff1+1)^0,c
 10003   001808  0E98               	movlw	152
 10004   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
 10005   00180C  0E41               	movlw	65
 10006   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
 10007   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
 10008   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
 10009   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
 10010   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
 10011   001820  ECE1  F01D         	call	___flge	;wreg free
 10012   001824  A0D8               	btfss	status,0,c
 10013   001826  EF17  F00C         	goto	u4341
 10014   00182A  EF19  F00C         	goto	u4340
 10015   00182E                     u4341:
 10016   00182E  EF7C  F00C         	goto	l4577
 10017   001832                     u4340:
 10018   001832                     
 10019                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 10020   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10021   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10022   00183A  CFDE F001          	movff	postinc2,___flge@ff1
 10023   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10024   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
 10025   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
 10026   00184A  0ECD               	movlw	205
 10027   00184C  6E05               	movwf	___flge@ff2^0,c
 10028   00184E  0ECC               	movlw	204
 10029   001850  6E06               	movwf	(___flge@ff2+1)^0,c
 10030   001852  0E4C               	movlw	76
 10031   001854  6E07               	movwf	(___flge@ff2+2)^0,c
 10032   001856  0E3E               	movlw	62
 10033   001858  6E08               	movwf	(___flge@ff2+3)^0,c
 10034   00185A  ECE1  F01D         	call	___flge	;wreg free
 10035   00185E  A0D8               	btfss	status,0,c
 10036   001860  EF34  F00C         	goto	u4351
 10037   001864  EF36  F00C         	goto	u4350
 10038   001868                     u4351:
 10039   001868  EF55  F00C         	goto	l4565
 10040   00186C                     u4350:
 10041   00186C  0E1F               	movlw	31
 10042   00186E  6E01               	movwf	___flge@ff1^0,c
 10043   001870  0E85               	movlw	133
 10044   001872  6E02               	movwf	(___flge@ff1+1)^0,c
 10045   001874  0E6B               	movlw	107
 10046   001876  6E03               	movwf	(___flge@ff1+2)^0,c
 10047   001878  0E3E               	movlw	62
 10048   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
 10049   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10050   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10051   001884  CFDE F005          	movff	postinc2,___flge@ff2
 10052   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
 10053   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
 10054   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
 10055   001894  ECE1  F01D         	call	___flge	;wreg free
 10056   001898  A0D8               	btfss	status,0,c
 10057   00189A  EF51  F00C         	goto	u4361
 10058   00189E  EF53  F00C         	goto	u4360
 10059   0018A2                     u4361:
 10060   0018A2  EF55  F00C         	goto	l4565
 10061   0018A6                     u4360:
 10062   0018A6  EF44  F008         	goto	l4429
 10063   0018AA                     l4565:
 10064   0018AA  EE20 F008          	lfsr	2,8
 10065   0018AE  504D               	movf	Colour_decider@rel^0,w,c
 10066   0018B0  26D9               	addwf	fsr2l,f,c
 10067   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
 10068   0018B4  22DA               	addwfc	fsr2h,f,c
 10069   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
 10070   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10071   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10072   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10073   0018C6  0E9A               	movlw	154
 10074   0018C8  6E05               	movwf	___flge@ff2^0,c
 10075   0018CA  0E99               	movlw	153
 10076   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
 10077   0018CE  0E19               	movlw	25
 10078   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
 10079   0018D2  0E3E               	movlw	62
 10080   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
 10081   0018D6  ECE1  F01D         	call	___flge	;wreg free
 10082   0018DA  A0D8               	btfss	status,0,c
 10083   0018DC  EF72  F00C         	goto	u4371
 10084   0018E0  EF74  F00C         	goto	u4370
 10085   0018E4                     u4371:
 10086   0018E4  EF76  F00C         	goto	l4573
 10087   0018E8                     u4370:
 10088   0018E8  EFA4  F00A         	goto	l4487
 10089   0018EC                     l4573:
 10090                           
 10091                           ;color.c: 223:             return 7;
 10092   0018EC  0E00               	movlw	0
 10093   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10094   0018F0  0E07               	movlw	7
 10095   0018F2  6E4B               	movwf	?_Colour_decider^0,c
 10096   0018F4  EF80  F00C         	goto	l76
 10097   0018F8                     l4577:
 10098                           
 10099                           ;color.c: 227:         return 10;
 10100   0018F8  0E00               	movlw	0
 10101   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10102   0018FC  0E0A               	movlw	10
 10103   0018FE  6E4B               	movwf	?_Colour_decider^0,c
 10104   001900                     l76:
 10105   001900  0012               	return		;funcret
 10106   001902                     __end_of_Colour_decider:
 10107                           	callstack 0
 10108                           
 10109 ;; *************** function ___xxtofl *****************
 10110 ;; Defined at:
 10111 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  sign            1    wreg     unsigned char 
 10114 ;;  val             4    0[COMRAM] long 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  sign            1    8[COMRAM] unsigned char 
 10117 ;;  arg             4   10[COMRAM] unsigned long 
 10118 ;;  exp             1    9[COMRAM] unsigned char 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  4    0[COMRAM] unsigned char 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10131 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10132 ;;Total ram usage:       14 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; Hardware stack levels required when called: 1
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_colour_rel
 10139 ;;		_Colour_decider
 10140 ;;		_reverseOneBlock
 10141 ;;		_ForwardOneBlock
 10142 ;;		_Forwardhalfblock
 10143 ;;		_Backhalfblock
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text64
 10148   003468                     __ptext64:
 10149                           	callstack 0
 10150   003468                     ___xxtofl:
 10151                           	callstack 28
 10152                           
 10153                           ;incstack = 0
 10154                           ;___xxtofl@sign stored from wreg
 10155   003468  6E09               	movwf	___xxtofl@sign^0,c
 10156   00346A  5009               	movf	___xxtofl@sign^0,w,c
 10157   00346C  B4D8               	btfsc	status,2,c
 10158   00346E  EF3B  F01A         	goto	u3941
 10159   003472  EF3D  F01A         	goto	u3940
 10160   003476                     u3941:
 10161   003476  EF5F  F01A         	goto	l1368
 10162   00347A                     u3940:
 10163   00347A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10164   00347C  EF44  F01A         	goto	u3950
 10165   003480  EF42  F01A         	goto	u3951
 10166   003484                     u3951:
 10167   003484  EF5F  F01A         	goto	l1368
 10168   003488                     u3950:
 10169   003488  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10170   00348C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10171   003490  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10172   003494  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10173   003498  1E05               	comf	??___xxtofl^0,f,c
 10174   00349A  1E06               	comf	(??___xxtofl+1)^0,f,c
 10175   00349C  1E07               	comf	(??___xxtofl+2)^0,f,c
 10176   00349E  1E08               	comf	(??___xxtofl+3)^0,f,c
 10177   0034A0  2A05               	incf	??___xxtofl^0,f,c
 10178   0034A2  0E00               	movlw	0
 10179   0034A4  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10180   0034A6  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10181   0034A8  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10182   0034AA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10183   0034AE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10184   0034B2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10185   0034B6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10186   0034BA  EF67  F01A         	goto	l4299
 10187   0034BE                     l1368:
 10188   0034BE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10189   0034C2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10190   0034C6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10191   0034CA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10192   0034CE                     l4299:
 10193   0034CE  5001               	movf	___xxtofl@val^0,w,c
 10194   0034D0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10195   0034D2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10196   0034D4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10197   0034D6  A4D8               	btfss	status,2,c
 10198   0034D8  EF70  F01A         	goto	u3961
 10199   0034DC  EF72  F01A         	goto	u3960
 10200   0034E0                     u3961:
 10201   0034E0  EF7C  F01A         	goto	l4305
 10202   0034E4                     u3960:
 10203   0034E4  0E00               	movlw	0
 10204   0034E6  6E01               	movwf	?___xxtofl^0,c
 10205   0034E8  0E00               	movlw	0
 10206   0034EA  6E02               	movwf	(?___xxtofl+1)^0,c
 10207   0034EC  0E00               	movlw	0
 10208   0034EE  6E03               	movwf	(?___xxtofl+2)^0,c
 10209   0034F0  0E00               	movlw	0
 10210   0034F2  6E04               	movwf	(?___xxtofl+3)^0,c
 10211   0034F4  EF0D  F01B         	goto	l1371
 10212   0034F8                     l4305:
 10213   0034F8  0E96               	movlw	150
 10214   0034FA  6E0A               	movwf	___xxtofl@exp^0,c
 10215   0034FC  EF86  F01A         	goto	l4309
 10216   003500                     l4307:
 10217   003500  2A0A               	incf	___xxtofl@exp^0,f,c
 10218   003502  90D8               	bcf	status,0,c
 10219   003504  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10220   003506  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10221   003508  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10222   00350A  320B               	rrcf	___xxtofl@arg^0,f,c
 10223   00350C                     l4309:
 10224   00350C  0E00               	movlw	0
 10225   00350E  140B               	andwf	___xxtofl@arg^0,w,c
 10226   003510  6E05               	movwf	??___xxtofl^0,c
 10227   003512  0E00               	movlw	0
 10228   003514  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10229   003516  6E06               	movwf	(??___xxtofl+1)^0,c
 10230   003518  0E00               	movlw	0
 10231   00351A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10232   00351C  6E07               	movwf	(??___xxtofl+2)^0,c
 10233   00351E  0EFE               	movlw	254
 10234   003520  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10235   003522  6E08               	movwf	(??___xxtofl+3)^0,c
 10236   003524  5005               	movf	??___xxtofl^0,w,c
 10237   003526  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10238   003528  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10239   00352A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10240   00352C  A4D8               	btfss	status,2,c
 10241   00352E  EF9B  F01A         	goto	u3971
 10242   003532  EF9D  F01A         	goto	u3970
 10243   003536                     u3971:
 10244   003536  EF80  F01A         	goto	l4307
 10245   00353A                     u3970:
 10246   00353A  EFAB  F01A         	goto	l1375
 10247   00353E                     l4311:
 10248   00353E  2A0A               	incf	___xxtofl@exp^0,f,c
 10249   003540  0E01               	movlw	1
 10250   003542  260B               	addwf	___xxtofl@arg^0,f,c
 10251   003544  0E00               	movlw	0
 10252   003546  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10253   003548  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10254   00354A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10255   00354C  90D8               	bcf	status,0,c
 10256   00354E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10257   003550  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10258   003552  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10259   003554  320B               	rrcf	___xxtofl@arg^0,f,c
 10260   003556                     l1375:
 10261   003556  0E00               	movlw	0
 10262   003558  140B               	andwf	___xxtofl@arg^0,w,c
 10263   00355A  6E05               	movwf	??___xxtofl^0,c
 10264   00355C  0E00               	movlw	0
 10265   00355E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10266   003560  6E06               	movwf	(??___xxtofl+1)^0,c
 10267   003562  0E00               	movlw	0
 10268   003564  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10269   003566  6E07               	movwf	(??___xxtofl+2)^0,c
 10270   003568  0EFF               	movlw	255
 10271   00356A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10272   00356C  6E08               	movwf	(??___xxtofl+3)^0,c
 10273   00356E  5005               	movf	??___xxtofl^0,w,c
 10274   003570  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10275   003572  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10276   003574  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10277   003576  A4D8               	btfss	status,2,c
 10278   003578  EFC0  F01A         	goto	u3981
 10279   00357C  EFC2  F01A         	goto	u3980
 10280   003580                     u3981:
 10281   003580  EF9F  F01A         	goto	l4311
 10282   003584                     u3980:
 10283   003584  EFCA  F01A         	goto	l4319
 10284   003588                     l4317:
 10285   003588  060A               	decf	___xxtofl@exp^0,f,c
 10286   00358A  90D8               	bcf	status,0,c
 10287   00358C  360B               	rlcf	___xxtofl@arg^0,f,c
 10288   00358E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10289   003590  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10290   003592  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10291   003594                     l4319:
 10292   003594  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10293   003596  EFCF  F01A         	goto	u3991
 10294   00359A  EFD1  F01A         	goto	u3990
 10295   00359E                     u3991:
 10296   00359E  EFD9  F01A         	goto	l1382
 10297   0035A2                     u3990:
 10298   0035A2  0E02               	movlw	2
 10299   0035A4  600A               	cpfslt	___xxtofl@exp^0,c
 10300   0035A6  EFD7  F01A         	goto	u4001
 10301   0035AA  EFD9  F01A         	goto	u4000
 10302   0035AE                     u4001:
 10303   0035AE  EFC4  F01A         	goto	l4317
 10304   0035B2                     u4000:
 10305   0035B2                     l1382:
 10306   0035B2  B00A               	btfsc	___xxtofl@exp^0,0,c
 10307   0035B4  EFDE  F01A         	goto	u4011
 10308   0035B8  EFE0  F01A         	goto	u4010
 10309   0035BC                     u4011:
 10310   0035BC  EFE1  F01A         	goto	l4325
 10311   0035C0                     u4010:
 10312   0035C0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10313   0035C2                     l4325:
 10314   0035C2  90D8               	bcf	status,0,c
 10315   0035C4  320A               	rrcf	___xxtofl@exp^0,f,c
 10316   0035C6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10317   0035CA  6A06               	clrf	(??___xxtofl+1)^0,c
 10318   0035CC  6A07               	clrf	(??___xxtofl+2)^0,c
 10319   0035CE  6A08               	clrf	(??___xxtofl+3)^0,c
 10320   0035D0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10321   0035D4  6A07               	clrf	(??___xxtofl+2)^0,c
 10322   0035D6  6A06               	clrf	(??___xxtofl+1)^0,c
 10323   0035D8  6A05               	clrf	??___xxtofl^0,c
 10324   0035DA  5005               	movf	??___xxtofl^0,w,c
 10325   0035DC  120B               	iorwf	___xxtofl@arg^0,f,c
 10326   0035DE  5006               	movf	(??___xxtofl+1)^0,w,c
 10327   0035E0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10328   0035E2  5007               	movf	(??___xxtofl+2)^0,w,c
 10329   0035E4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10330   0035E6  5008               	movf	(??___xxtofl+3)^0,w,c
 10331   0035E8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10332   0035EA  5009               	movf	___xxtofl@sign^0,w,c
 10333   0035EC  B4D8               	btfsc	status,2,c
 10334   0035EE  EFFB  F01A         	goto	u4021
 10335   0035F2  EFFD  F01A         	goto	u4020
 10336   0035F6                     u4021:
 10337   0035F6  EF05  F01B         	goto	l4335
 10338   0035FA                     u4020:
 10339   0035FA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10340   0035FC  EF04  F01B         	goto	u4030
 10341   003600  EF02  F01B         	goto	u4031
 10342   003604                     u4031:
 10343   003604  EF05  F01B         	goto	l4335
 10344   003608                     u4030:
 10345   003608  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10346   00360A                     l4335:
 10347   00360A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10348   00360E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10349   003612  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10350   003616  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10351   00361A                     l1371:
 10352   00361A  0012               	return		;funcret
 10353   00361C                     __end_of___xxtofl:
 10354                           	callstack 0
 10355                           
 10356 ;; *************** function ___flsub *****************
 10357 ;; Defined at:
 10358 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  b               4   16[COMRAM] unsigned char 
 10361 ;;  a               4   20[COMRAM] unsigned char 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  4   16[COMRAM] unsigned char 
 10366 ;; Registers used:
 10367 ;;		wreg, status,2, status,0, cstack
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10373 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;Total ram usage:        8 bytes
 10378 ;; Hardware stack levels used: 1
 10379 ;; Hardware stack levels required when called: 2
 10380 ;; This function calls:
 10381 ;;		___fladd
 10382 ;; This function is called by:
 10383 ;;		_Colour_decider
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text65
 10388   004A90                     __ptext65:
 10389                           	callstack 0
 10390   004A90                     ___flsub:
 10391                           	callstack 27
 10392   004A90  0E00               	movlw	0
 10393   004A92  1A15               	xorwf	___flsub@a^0,f,c
 10394   004A94  0E00               	movlw	0
 10395   004A96  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10396   004A98  0E00               	movlw	0
 10397   004A9A  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10398   004A9C  0E80               	movlw	128
 10399   004A9E  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10400   004AA0  C011  F001         	movff	___flsub@b,___fladd@b
 10401   004AA4  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10402   004AA8  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10403   004AAC  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10404   004AB0  C015  F005         	movff	___flsub@a,___fladd@a
 10405   004AB4  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10406   004AB8  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10407   004ABC  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10408   004AC0  EC23  F00F         	call	___fladd	;wreg free
 10409   004AC4  C001  F011         	movff	?___fladd,?___flsub
 10410   004AC8  C002  F012         	movff	?___fladd+1,?___flsub+1
 10411   004ACC  C003  F013         	movff	?___fladd+2,?___flsub+2
 10412   004AD0  C004  F014         	movff	?___fladd+3,?___flsub+3
 10413   004AD4  0012               	return		;funcret
 10414   004AD6                     __end_of___flsub:
 10415                           	callstack 0
 10416                           
 10417 ;; *************** function ___fladd *****************
 10418 ;; Defined at:
 10419 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  b               4    0[COMRAM] unsigned char 
 10422 ;;  a               4    4[COMRAM] unsigned char 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  grs             1   15[COMRAM] unsigned char 
 10425 ;;  bexp            1   14[COMRAM] unsigned char 
 10426 ;;  aexp            1   13[COMRAM] unsigned char 
 10427 ;;  signs           1   12[COMRAM] unsigned char 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  4    0[COMRAM] unsigned char 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10437 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10440 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;Total ram usage:       16 bytes
 10442 ;; Hardware stack levels used: 1
 10443 ;; Hardware stack levels required when called: 1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_colour_rel
 10448 ;;		_Colour_decider
 10449 ;;		___flsub
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text66
 10454   001E46                     __ptext66:
 10455                           	callstack 0
 10456   001E46                     ___fladd:
 10457                           	callstack 28
 10458   001E46  5004               	movf	(___fladd@b+3)^0,w,c
 10459   001E48  0B80               	andlw	128
 10460   001E4A  6E0D               	movwf	___fladd@signs^0,c
 10461   001E4C  5004               	movf	(___fladd@b+3)^0,w,c
 10462   001E4E  2404               	addwf	(___fladd@b+3)^0,w,c
 10463   001E50  6E0F               	movwf	___fladd@bexp^0,c
 10464   001E52  AE03               	btfss	(___fladd@b+2)^0,7,c
 10465   001E54  EF2E  F00F         	goto	u2991
 10466   001E58  EF30  F00F         	goto	u2990
 10467   001E5C                     u2991:
 10468   001E5C  EF31  F00F         	goto	l3677
 10469   001E60                     u2990:
 10470   001E60  800F               	bsf	___fladd@bexp^0,0,c
 10471   001E62                     l3677:
 10472   001E62  500F               	movf	___fladd@bexp^0,w,c
 10473   001E64  B4D8               	btfsc	status,2,c
 10474   001E66  EF37  F00F         	goto	u3001
 10475   001E6A  EF39  F00F         	goto	u3000
 10476   001E6E                     u3001:
 10477   001E6E  EF4E  F00F         	goto	l3687
 10478   001E72                     u3000:
 10479   001E72  280F               	incf	___fladd@bexp^0,w,c
 10480   001E74  A4D8               	btfss	status,2,c
 10481   001E76  EF3F  F00F         	goto	u3011
 10482   001E7A  EF41  F00F         	goto	u3010
 10483   001E7E                     u3011:
 10484   001E7E  EF49  F00F         	goto	l3683
 10485   001E82                     u3010:
 10486   001E82  0E00               	movlw	0
 10487   001E84  6E01               	movwf	___fladd@b^0,c
 10488   001E86  0E00               	movlw	0
 10489   001E88  6E02               	movwf	(___fladd@b+1)^0,c
 10490   001E8A  0E00               	movlw	0
 10491   001E8C  6E03               	movwf	(___fladd@b+2)^0,c
 10492   001E8E  0E00               	movlw	0
 10493   001E90  6E04               	movwf	(___fladd@b+3)^0,c
 10494   001E92                     l3683:
 10495   001E92  8E03               	bsf	(___fladd@b+2)^0,7,c
 10496   001E94  0E00               	movlw	0
 10497   001E96  6E04               	movwf	(___fladd@b+3)^0,c
 10498   001E98  EF56  F00F         	goto	l3689
 10499   001E9C                     l3687:
 10500   001E9C  0E00               	movlw	0
 10501   001E9E  6E01               	movwf	___fladd@b^0,c
 10502   001EA0  0E00               	movlw	0
 10503   001EA2  6E02               	movwf	(___fladd@b+1)^0,c
 10504   001EA4  0E00               	movlw	0
 10505   001EA6  6E03               	movwf	(___fladd@b+2)^0,c
 10506   001EA8  0E00               	movlw	0
 10507   001EAA  6E04               	movwf	(___fladd@b+3)^0,c
 10508   001EAC                     l3689:
 10509   001EAC  5008               	movf	(___fladd@a+3)^0,w,c
 10510   001EAE  0B80               	andlw	128
 10511   001EB0  6E0E               	movwf	___fladd@aexp^0,c
 10512   001EB2  500D               	movf	___fladd@signs^0,w,c
 10513   001EB4  180E               	xorwf	___fladd@aexp^0,w,c
 10514   001EB6  B4D8               	btfsc	status,2,c
 10515   001EB8  EF60  F00F         	goto	u3021
 10516   001EBC  EF62  F00F         	goto	u3020
 10517   001EC0                     u3021:
 10518   001EC0  EF63  F00F         	goto	l3695
 10519   001EC4                     u3020:
 10520   001EC4  8C0D               	bsf	___fladd@signs^0,6,c
 10521   001EC6                     l3695:
 10522   001EC6  5008               	movf	(___fladd@a+3)^0,w,c
 10523   001EC8  2408               	addwf	(___fladd@a+3)^0,w,c
 10524   001ECA  6E0E               	movwf	___fladd@aexp^0,c
 10525   001ECC  AE07               	btfss	(___fladd@a+2)^0,7,c
 10526   001ECE  EF6B  F00F         	goto	u3031
 10527   001ED2  EF6D  F00F         	goto	u3030
 10528   001ED6                     u3031:
 10529   001ED6  EF6E  F00F         	goto	l3701
 10530   001EDA                     u3030:
 10531   001EDA  800E               	bsf	___fladd@aexp^0,0,c
 10532   001EDC                     l3701:
 10533   001EDC  500E               	movf	___fladd@aexp^0,w,c
 10534   001EDE  B4D8               	btfsc	status,2,c
 10535   001EE0  EF74  F00F         	goto	u3041
 10536   001EE4  EF76  F00F         	goto	u3040
 10537   001EE8                     u3041:
 10538   001EE8  EF8B  F00F         	goto	l3711
 10539   001EEC                     u3040:
 10540   001EEC  280E               	incf	___fladd@aexp^0,w,c
 10541   001EEE  A4D8               	btfss	status,2,c
 10542   001EF0  EF7C  F00F         	goto	u3051
 10543   001EF4  EF7E  F00F         	goto	u3050
 10544   001EF8                     u3051:
 10545   001EF8  EF86  F00F         	goto	l3707
 10546   001EFC                     u3050:
 10547   001EFC  0E00               	movlw	0
 10548   001EFE  6E05               	movwf	___fladd@a^0,c
 10549   001F00  0E00               	movlw	0
 10550   001F02  6E06               	movwf	(___fladd@a+1)^0,c
 10551   001F04  0E00               	movlw	0
 10552   001F06  6E07               	movwf	(___fladd@a+2)^0,c
 10553   001F08  0E00               	movlw	0
 10554   001F0A  6E08               	movwf	(___fladd@a+3)^0,c
 10555   001F0C                     l3707:
 10556   001F0C  8E07               	bsf	(___fladd@a+2)^0,7,c
 10557   001F0E  0E00               	movlw	0
 10558   001F10  6E08               	movwf	(___fladd@a+3)^0,c
 10559   001F12  EF93  F00F         	goto	l3713
 10560   001F16                     l3711:
 10561   001F16  0E00               	movlw	0
 10562   001F18  6E05               	movwf	___fladd@a^0,c
 10563   001F1A  0E00               	movlw	0
 10564   001F1C  6E06               	movwf	(___fladd@a+1)^0,c
 10565   001F1E  0E00               	movlw	0
 10566   001F20  6E07               	movwf	(___fladd@a+2)^0,c
 10567   001F22  0E00               	movlw	0
 10568   001F24  6E08               	movwf	(___fladd@a+3)^0,c
 10569   001F26                     l3713:
 10570   001F26  500F               	movf	___fladd@bexp^0,w,c
 10571   001F28  5C0E               	subwf	___fladd@aexp^0,w,c
 10572   001F2A  B0D8               	btfsc	status,0,c
 10573   001F2C  EF9A  F00F         	goto	u3061
 10574   001F30  EF9C  F00F         	goto	u3060
 10575   001F34                     u3061:
 10576   001F34  EFC3  F00F         	goto	l3749
 10577   001F38                     u3060:
 10578   001F38  AC0D               	btfss	___fladd@signs^0,6,c
 10579   001F3A  EFA1  F00F         	goto	u3071
 10580   001F3E  EFA3  F00F         	goto	u3070
 10581   001F42                     u3071:
 10582   001F42  EFA5  F00F         	goto	l3719
 10583   001F46                     u3070:
 10584   001F46  0E80               	movlw	128
 10585   001F48  1A0D               	xorwf	___fladd@signs^0,f,c
 10586   001F4A                     l3719:
 10587   001F4A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10588   001F4E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10589   001F52  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10590   001F56  C001  F010         	movff	___fladd@b,___fladd@grs
 10591   001F5A  C005  F001         	movff	___fladd@a,___fladd@b
 10592   001F5E  C010  F005         	movff	___fladd@grs,___fladd@a
 10593   001F62  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10594   001F66  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10595   001F6A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10596   001F6E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10597   001F72  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10598   001F76  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10599   001F7A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10600   001F7E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10601   001F82  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10602   001F86                     l3749:
 10603   001F86  0E00               	movlw	0
 10604   001F88  6E10               	movwf	___fladd@grs^0,c
 10605   001F8A  500F               	movf	___fladd@bexp^0,w,c
 10606   001F8C  C00E  F009         	movff	___fladd@aexp,??___fladd
 10607   001F90  6A0A               	clrf	(??___fladd+1)^0,c
 10608   001F92  5E09               	subwf	??___fladd^0,f,c
 10609   001F94  0E00               	movlw	0
 10610   001F96  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10611   001F98  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10612   001F9A  EFD8  F00F         	goto	u3081
 10613   001F9E  500A               	movf	(??___fladd+1)^0,w,c
 10614   001FA0  E109               	bnz	u3080
 10615   001FA2  0E1A               	movlw	26
 10616   001FA4  5C09               	subwf	??___fladd^0,w,c
 10617   001FA6  A0D8               	btfss	status,0,c
 10618   001FA8  EFD8  F00F         	goto	u3081
 10619   001FAC  EFDA  F00F         	goto	u3080
 10620   001FB0                     u3081:
 10621   001FB0  EF11  F010         	goto	l1242
 10622   001FB4                     u3080:
 10623   001FB4  5001               	movf	___fladd@b^0,w,c
 10624   001FB6  1002               	iorwf	(___fladd@b+1)^0,w,c
 10625   001FB8  1003               	iorwf	(___fladd@b+2)^0,w,c
 10626   001FBA  1004               	iorwf	(___fladd@b+3)^0,w,c
 10627   001FBC  A4D8               	btfss	status,2,c
 10628   001FBE  EFE3  F00F         	goto	u3091
 10629   001FC2  EFE6  F00F         	goto	u3090
 10630   001FC6                     u3091:
 10631   001FC6  0E01               	movlw	1
 10632   001FC8  EFE7  F00F         	goto	u3100
 10633   001FCC                     u3090:
 10634   001FCC  0E00               	movlw	0
 10635   001FCE                     u3100:
 10636   001FCE  6E10               	movwf	___fladd@grs^0,c
 10637   001FD0  0E00               	movlw	0
 10638   001FD2  6E01               	movwf	___fladd@b^0,c
 10639   001FD4  0E00               	movlw	0
 10640   001FD6  6E02               	movwf	(___fladd@b+1)^0,c
 10641   001FD8  0E00               	movlw	0
 10642   001FDA  6E03               	movwf	(___fladd@b+2)^0,c
 10643   001FDC  0E00               	movlw	0
 10644   001FDE  6E04               	movwf	(___fladd@b+3)^0,c
 10645   001FE0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10646   001FE4  EF1A  F010         	goto	l1241
 10647   001FE8                     l1243:
 10648   001FE8  A010               	btfss	___fladd@grs^0,0,c
 10649   001FEA  EFF9  F00F         	goto	u3111
 10650   001FEE  EFFB  F00F         	goto	u3110
 10651   001FF2                     u3111:
 10652   001FF2  EF01  F010         	goto	l3761
 10653   001FF6                     u3110:
 10654   001FF6  90D8               	bcf	status,0,c
 10655   001FF8  3010               	rrcf	___fladd@grs^0,w,c
 10656   001FFA  0901               	iorlw	1
 10657   001FFC  6E10               	movwf	___fladd@grs^0,c
 10658   001FFE  EF03  F010         	goto	l3763
 10659   002002                     l3761:
 10660   002002  90D8               	bcf	status,0,c
 10661   002004  3210               	rrcf	___fladd@grs^0,f,c
 10662   002006                     l3763:
 10663   002006  A001               	btfss	___fladd@b^0,0,c
 10664   002008  EF08  F010         	goto	u3121
 10665   00200C  EF0A  F010         	goto	u3120
 10666   002010                     u3121:
 10667   002010  EF0B  F010         	goto	l3767
 10668   002014                     u3120:
 10669   002014  8E10               	bsf	___fladd@grs^0,7,c
 10670   002016                     l3767:
 10671   002016  3404               	rlcf	(___fladd@b+3)^0,w,c
 10672   002018  3204               	rrcf	(___fladd@b+3)^0,f,c
 10673   00201A  3203               	rrcf	(___fladd@b+2)^0,f,c
 10674   00201C  3202               	rrcf	(___fladd@b+1)^0,f,c
 10675   00201E  3201               	rrcf	___fladd@b^0,f,c
 10676   002020  2A0F               	incf	___fladd@bexp^0,f,c
 10677   002022                     l1242:
 10678   002022  500E               	movf	___fladd@aexp^0,w,c
 10679   002024  5C0F               	subwf	___fladd@bexp^0,w,c
 10680   002026  A0D8               	btfss	status,0,c
 10681   002028  EF18  F010         	goto	u3131
 10682   00202C  EF1A  F010         	goto	u3130
 10683   002030                     u3131:
 10684   002030  EFF4  F00F         	goto	l1243
 10685   002034                     u3130:
 10686   002034                     l1241:
 10687   002034  BC0D               	btfsc	___fladd@signs^0,6,c
 10688   002036  EF1F  F010         	goto	u3141
 10689   00203A  EF21  F010         	goto	u3140
 10690   00203E                     u3141:
 10691   00203E  EF61  F010         	goto	l3795
 10692   002042                     u3140:
 10693   002042  500F               	movf	___fladd@bexp^0,w,c
 10694   002044  A4D8               	btfss	status,2,c
 10695   002046  EF27  F010         	goto	u3151
 10696   00204A  EF29  F010         	goto	u3150
 10697   00204E                     u3151:
 10698   00204E  EF33  F010         	goto	l3777
 10699   002052                     u3150:
 10700   002052  0E00               	movlw	0
 10701   002054  6E01               	movwf	?___fladd^0,c
 10702   002056  0E00               	movlw	0
 10703   002058  6E02               	movwf	(?___fladd+1)^0,c
 10704   00205A  0E00               	movlw	0
 10705   00205C  6E03               	movwf	(?___fladd+2)^0,c
 10706   00205E  0E00               	movlw	0
 10707   002060  6E04               	movwf	(?___fladd+3)^0,c
 10708   002062  EF82  F011         	goto	l1250
 10709   002066                     l3777:
 10710   002066  5005               	movf	___fladd@a^0,w,c
 10711   002068  2601               	addwf	___fladd@b^0,f,c
 10712   00206A  5006               	movf	(___fladd@a+1)^0,w,c
 10713   00206C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10714   00206E  5007               	movf	(___fladd@a+2)^0,w,c
 10715   002070  2203               	addwfc	(___fladd@b+2)^0,f,c
 10716   002072  5008               	movf	(___fladd@a+3)^0,w,c
 10717   002074  2204               	addwfc	(___fladd@b+3)^0,f,c
 10718   002076  A004               	btfss	(___fladd@b+3)^0,0,c
 10719   002078  EF40  F010         	goto	u3161
 10720   00207C  EF42  F010         	goto	u3160
 10721   002080                     u3161:
 10722   002080  EFEE  F010         	goto	l3831
 10723   002084                     u3160:
 10724   002084  A010               	btfss	___fladd@grs^0,0,c
 10725   002086  EF47  F010         	goto	u3171
 10726   00208A  EF49  F010         	goto	u3170
 10727   00208E                     u3171:
 10728   00208E  EF4F  F010         	goto	l3785
 10729   002092                     u3170:
 10730   002092  90D8               	bcf	status,0,c
 10731   002094  3010               	rrcf	___fladd@grs^0,w,c
 10732   002096  0901               	iorlw	1
 10733   002098  6E10               	movwf	___fladd@grs^0,c
 10734   00209A  EF51  F010         	goto	l3787
 10735   00209E                     l3785:
 10736   00209E  90D8               	bcf	status,0,c
 10737   0020A0  3210               	rrcf	___fladd@grs^0,f,c
 10738   0020A2                     l3787:
 10739   0020A2  A001               	btfss	___fladd@b^0,0,c
 10740   0020A4  EF56  F010         	goto	u3181
 10741   0020A8  EF58  F010         	goto	u3180
 10742   0020AC                     u3181:
 10743   0020AC  EF59  F010         	goto	l3791
 10744   0020B0                     u3180:
 10745   0020B0  8E10               	bsf	___fladd@grs^0,7,c
 10746   0020B2                     l3791:
 10747   0020B2  3404               	rlcf	(___fladd@b+3)^0,w,c
 10748   0020B4  3204               	rrcf	(___fladd@b+3)^0,f,c
 10749   0020B6  3203               	rrcf	(___fladd@b+2)^0,f,c
 10750   0020B8  3202               	rrcf	(___fladd@b+1)^0,f,c
 10751   0020BA  3201               	rrcf	___fladd@b^0,f,c
 10752   0020BC  2A0F               	incf	___fladd@bexp^0,f,c
 10753   0020BE  EFEE  F010         	goto	l3831
 10754   0020C2                     l3795:
 10755   0020C2  5005               	movf	___fladd@a^0,w,c
 10756   0020C4  5C01               	subwf	___fladd@b^0,w,c
 10757   0020C6  5006               	movf	(___fladd@a+1)^0,w,c
 10758   0020C8  5802               	subwfb	(___fladd@b+1)^0,w,c
 10759   0020CA  5007               	movf	(___fladd@a+2)^0,w,c
 10760   0020CC  5803               	subwfb	(___fladd@b+2)^0,w,c
 10761   0020CE  5004               	movf	(___fladd@b+3)^0,w,c
 10762   0020D0  0A80               	xorlw	128
 10763   0020D2  6E09               	movwf	??___fladd^0,c
 10764   0020D4  5008               	movf	(___fladd@a+3)^0,w,c
 10765   0020D6  0A80               	xorlw	128
 10766   0020D8  5809               	subwfb	??___fladd^0,w,c
 10767   0020DA  B0D8               	btfsc	status,0,c
 10768   0020DC  EF72  F010         	goto	u3191
 10769   0020E0  EF74  F010         	goto	u3190
 10770   0020E4                     u3191:
 10771   0020E4  EF9F  F010         	goto	l3805
 10772   0020E8                     u3190:
 10773   0020E8  5001               	movf	___fladd@b^0,w,c
 10774   0020EA  5C05               	subwf	___fladd@a^0,w,c
 10775   0020EC  6E09               	movwf	??___fladd^0,c
 10776   0020EE  5002               	movf	(___fladd@b+1)^0,w,c
 10777   0020F0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10778   0020F2  6E0A               	movwf	(??___fladd+1)^0,c
 10779   0020F4  5003               	movf	(___fladd@b+2)^0,w,c
 10780   0020F6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10781   0020F8  6E0B               	movwf	(??___fladd+2)^0,c
 10782   0020FA  5004               	movf	(___fladd@b+3)^0,w,c
 10783   0020FC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10784   0020FE  6E0C               	movwf	(??___fladd+3)^0,c
 10785   002100  0EFF               	movlw	255
 10786   002102  2409               	addwf	??___fladd^0,w,c
 10787   002104  6E01               	movwf	___fladd@b^0,c
 10788   002106  0EFF               	movlw	255
 10789   002108  200A               	addwfc	(??___fladd+1)^0,w,c
 10790   00210A  6E02               	movwf	(___fladd@b+1)^0,c
 10791   00210C  0EFF               	movlw	255
 10792   00210E  200B               	addwfc	(??___fladd+2)^0,w,c
 10793   002110  6E03               	movwf	(___fladd@b+2)^0,c
 10794   002112  0EFF               	movlw	255
 10795   002114  200C               	addwfc	(??___fladd+3)^0,w,c
 10796   002116  6E04               	movwf	(___fladd@b+3)^0,c
 10797   002118  0E80               	movlw	128
 10798   00211A  1A0D               	xorwf	___fladd@signs^0,f,c
 10799   00211C  6C10               	negf	___fladd@grs^0,c
 10800   00211E  5010               	movf	___fladd@grs^0,w,c
 10801   002120  A4D8               	btfss	status,2,c
 10802   002122  EF95  F010         	goto	u3201
 10803   002126  EF97  F010         	goto	u3200
 10804   00212A                     u3201:
 10805   00212A  EFA7  F010         	goto	l1258
 10806   00212E                     u3200:
 10807   00212E  0E01               	movlw	1
 10808   002130  2601               	addwf	___fladd@b^0,f,c
 10809   002132  0E00               	movlw	0
 10810   002134  2202               	addwfc	(___fladd@b+1)^0,f,c
 10811   002136  2203               	addwfc	(___fladd@b+2)^0,f,c
 10812   002138  2204               	addwfc	(___fladd@b+3)^0,f,c
 10813   00213A  EFA7  F010         	goto	l1258
 10814   00213E                     l3805:
 10815   00213E  5005               	movf	___fladd@a^0,w,c
 10816   002140  5E01               	subwf	___fladd@b^0,f,c
 10817   002142  5006               	movf	(___fladd@a+1)^0,w,c
 10818   002144  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10819   002146  5007               	movf	(___fladd@a+2)^0,w,c
 10820   002148  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10821   00214A  5008               	movf	(___fladd@a+3)^0,w,c
 10822   00214C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10823   00214E                     l1258:
 10824   00214E  5001               	movf	___fladd@b^0,w,c
 10825   002150  1002               	iorwf	(___fladd@b+1)^0,w,c
 10826   002152  1003               	iorwf	(___fladd@b+2)^0,w,c
 10827   002154  1004               	iorwf	(___fladd@b+3)^0,w,c
 10828   002156  A4D8               	btfss	status,2,c
 10829   002158  EFB0  F010         	goto	u3211
 10830   00215C  EFB2  F010         	goto	u3210
 10831   002160                     u3211:
 10832   002160  EFE7  F010         	goto	l3829
 10833   002164                     u3210:
 10834   002164  5010               	movf	___fladd@grs^0,w,c
 10835   002166  A4D8               	btfss	status,2,c
 10836   002168  EFB8  F010         	goto	u3221
 10837   00216C  EFBA  F010         	goto	u3220
 10838   002170                     u3221:
 10839   002170  EFE7  F010         	goto	l3829
 10840   002174                     u3220:
 10841   002174  0E00               	movlw	0
 10842   002176  6E01               	movwf	?___fladd^0,c
 10843   002178  0E00               	movlw	0
 10844   00217A  6E02               	movwf	(?___fladd+1)^0,c
 10845   00217C  0E00               	movlw	0
 10846   00217E  6E03               	movwf	(?___fladd+2)^0,c
 10847   002180  0E00               	movlw	0
 10848   002182  6E04               	movwf	(?___fladd+3)^0,c
 10849   002184  EF82  F011         	goto	l1250
 10850   002188                     l3813:
 10851   002188  90D8               	bcf	status,0,c
 10852   00218A  3601               	rlcf	___fladd@b^0,f,c
 10853   00218C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10854   00218E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10855   002190  3604               	rlcf	(___fladd@b+3)^0,f,c
 10856   002192  AE10               	btfss	___fladd@grs^0,7,c
 10857   002194  EFCE  F010         	goto	u3231
 10858   002198  EFD0  F010         	goto	u3230
 10859   00219C                     u3231:
 10860   00219C  EFD1  F010         	goto	l3819
 10861   0021A0                     u3230:
 10862   0021A0  8001               	bsf	___fladd@b^0,0,c
 10863   0021A2                     l3819:
 10864   0021A2  A010               	btfss	___fladd@grs^0,0,c
 10865   0021A4  EFD6  F010         	goto	u3241
 10866   0021A8  EFD8  F010         	goto	u3240
 10867   0021AC                     u3241:
 10868   0021AC  EFDC  F010         	goto	l3823
 10869   0021B0                     u3240:
 10870   0021B0  80D8               	bsf	status,0,c
 10871   0021B2  3610               	rlcf	___fladd@grs^0,f,c
 10872   0021B4  EFDE  F010         	goto	l3825
 10873   0021B8                     l3823:
 10874   0021B8  90D8               	bcf	status,0,c
 10875   0021BA  3610               	rlcf	___fladd@grs^0,f,c
 10876   0021BC                     l3825:
 10877   0021BC  500F               	movf	___fladd@bexp^0,w,c
 10878   0021BE  B4D8               	btfsc	status,2,c
 10879   0021C0  EFE4  F010         	goto	u3251
 10880   0021C4  EFE6  F010         	goto	u3250
 10881   0021C8                     u3251:
 10882   0021C8  EFE7  F010         	goto	l3829
 10883   0021CC                     u3250:
 10884   0021CC  060F               	decf	___fladd@bexp^0,f,c
 10885   0021CE                     l3829:
 10886   0021CE  AE03               	btfss	(___fladd@b+2)^0,7,c
 10887   0021D0  EFEC  F010         	goto	u3261
 10888   0021D4  EFEE  F010         	goto	u3260
 10889   0021D8                     u3261:
 10890   0021D8  EFC4  F010         	goto	l3813
 10891   0021DC                     u3260:
 10892   0021DC                     l3831:
 10893   0021DC  0E00               	movlw	0
 10894   0021DE  6E0E               	movwf	___fladd@aexp^0,c
 10895   0021E0  AE10               	btfss	___fladd@grs^0,7,c
 10896   0021E2  EFF5  F010         	goto	u3271
 10897   0021E6  EFF7  F010         	goto	u3270
 10898   0021EA                     u3271:
 10899   0021EA  EF0F  F011         	goto	l1267
 10900   0021EE                     u3270:
 10901   0021EE  C010  F009         	movff	___fladd@grs,??___fladd
 10902   0021F2  0E7F               	movlw	127
 10903   0021F4  1609               	andwf	??___fladd^0,f,c
 10904   0021F6  B4D8               	btfsc	status,2,c
 10905   0021F8  EF00  F011         	goto	u3281
 10906   0021FC  EF02  F011         	goto	u3280
 10907   002200                     u3281:
 10908   002200  EF06  F011         	goto	l1268
 10909   002204                     u3280:
 10910   002204                     l3837:
 10911   002204  0E01               	movlw	1
 10912   002206  6E0E               	movwf	___fladd@aexp^0,c
 10913   002208  EF0F  F011         	goto	l1267
 10914   00220C                     l1268:
 10915   00220C  A001               	btfss	___fladd@b^0,0,c
 10916   00220E  EF0B  F011         	goto	u3291
 10917   002212  EF0D  F011         	goto	u3290
 10918   002216                     u3291:
 10919   002216  EF0F  F011         	goto	l1267
 10920   00221A                     u3290:
 10921   00221A  EF02  F011         	goto	l3837
 10922   00221E                     l1267:
 10923   00221E  500E               	movf	___fladd@aexp^0,w,c
 10924   002220  B4D8               	btfsc	status,2,c
 10925   002222  EF15  F011         	goto	u3301
 10926   002226  EF17  F011         	goto	u3300
 10927   00222A                     u3301:
 10928   00222A  EF42  F011         	goto	l3849
 10929   00222E                     u3300:
 10930   00222E  0E01               	movlw	1
 10931   002230  2601               	addwf	___fladd@b^0,f,c
 10932   002232  0E00               	movlw	0
 10933   002234  2202               	addwfc	(___fladd@b+1)^0,f,c
 10934   002236  2203               	addwfc	(___fladd@b+2)^0,f,c
 10935   002238  2204               	addwfc	(___fladd@b+3)^0,f,c
 10936   00223A  A004               	btfss	(___fladd@b+3)^0,0,c
 10937   00223C  EF22  F011         	goto	u3311
 10938   002240  EF24  F011         	goto	u3310
 10939   002244                     u3311:
 10940   002244  EF42  F011         	goto	l3849
 10941   002248                     u3310:
 10942   002248  C001  F009         	movff	___fladd@b,??___fladd
 10943   00224C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10944   002250  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10945   002254  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10946   002258  340C               	rlcf	(??___fladd+3)^0,w,c
 10947   00225A  320C               	rrcf	(??___fladd+3)^0,f,c
 10948   00225C  320B               	rrcf	(??___fladd+2)^0,f,c
 10949   00225E  320A               	rrcf	(??___fladd+1)^0,f,c
 10950   002260  3209               	rrcf	??___fladd^0,f,c
 10951   002262  C009  F001         	movff	??___fladd,___fladd@b
 10952   002266  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10953   00226A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10954   00226E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10955   002272  280F               	incf	___fladd@bexp^0,w,c
 10956   002274  B4D8               	btfsc	status,2,c
 10957   002276  EF3F  F011         	goto	u3321
 10958   00227A  EF41  F011         	goto	u3320
 10959   00227E                     u3321:
 10960   00227E  EF42  F011         	goto	l3849
 10961   002282                     u3320:
 10962   002282  2A0F               	incf	___fladd@bexp^0,f,c
 10963   002284                     l3849:
 10964   002284  280F               	incf	___fladd@bexp^0,w,c
 10965   002286  B4D8               	btfsc	status,2,c
 10966   002288  EF48  F011         	goto	u3331
 10967   00228C  EF4A  F011         	goto	u3330
 10968   002290                     u3331:
 10969   002290  EF52  F011         	goto	l3853
 10970   002294                     u3330:
 10971   002294  500F               	movf	___fladd@bexp^0,w,c
 10972   002296  A4D8               	btfss	status,2,c
 10973   002298  EF50  F011         	goto	u3341
 10974   00229C  EF52  F011         	goto	u3340
 10975   0022A0                     u3341:
 10976   0022A0  EF64  F011         	goto	l3857
 10977   0022A4                     u3340:
 10978   0022A4                     l3853:
 10979   0022A4  0E00               	movlw	0
 10980   0022A6  6E01               	movwf	___fladd@b^0,c
 10981   0022A8  0E00               	movlw	0
 10982   0022AA  6E02               	movwf	(___fladd@b+1)^0,c
 10983   0022AC  0E00               	movlw	0
 10984   0022AE  6E03               	movwf	(___fladd@b+2)^0,c
 10985   0022B0  0E00               	movlw	0
 10986   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10987   0022B4  500F               	movf	___fladd@bexp^0,w,c
 10988   0022B6  A4D8               	btfss	status,2,c
 10989   0022B8  EF60  F011         	goto	u3351
 10990   0022BC  EF62  F011         	goto	u3350
 10991   0022C0                     u3351:
 10992   0022C0  EF64  F011         	goto	l3857
 10993   0022C4                     u3350:
 10994   0022C4  0E00               	movlw	0
 10995   0022C6  6E0D               	movwf	___fladd@signs^0,c
 10996   0022C8                     l3857:
 10997   0022C8  A00F               	btfss	___fladd@bexp^0,0,c
 10998   0022CA  EF69  F011         	goto	u3361
 10999   0022CE  EF6B  F011         	goto	u3360
 11000   0022D2                     u3361:
 11001   0022D2  EF6E  F011         	goto	l3861
 11002   0022D6                     u3360:
 11003   0022D6  8E03               	bsf	(___fladd@b+2)^0,7,c
 11004   0022D8  EF6F  F011         	goto	l3863
 11005   0022DC                     l3861:
 11006   0022DC  9E03               	bcf	(___fladd@b+2)^0,7,c
 11007   0022DE                     l3863:
 11008   0022DE  90D8               	bcf	status,0,c
 11009   0022E0  300F               	rrcf	___fladd@bexp^0,w,c
 11010   0022E2  6E04               	movwf	(___fladd@b+3)^0,c
 11011   0022E4  AE0D               	btfss	___fladd@signs^0,7,c
 11012   0022E6  EF77  F011         	goto	u3371
 11013   0022EA  EF79  F011         	goto	u3370
 11014   0022EE                     u3371:
 11015   0022EE  EF7A  F011         	goto	l3869
 11016   0022F2                     u3370:
 11017   0022F2  8E04               	bsf	(___fladd@b+3)^0,7,c
 11018   0022F4                     l3869:
 11019   0022F4  C001  F001         	movff	___fladd@b,?___fladd
 11020   0022F8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11021   0022FC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11022   002300  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11023   002304                     l1250:
 11024   002304  0012               	return		;funcret
 11025   002306                     __end_of___fladd:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function ___flmul *****************
 11029 ;; Defined at:
 11030 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  b               4   49[COMRAM] unsigned char 
 11033 ;;  a               4   53[COMRAM] unsigned char 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  prod            4   68[COMRAM] struct .
 11036 ;;  grs             4   62[COMRAM] unsigned long 
 11037 ;;  temp            2   72[COMRAM] struct .
 11038 ;;  bexp            1   67[COMRAM] unsigned char 
 11039 ;;  aexp            1   66[COMRAM] unsigned char 
 11040 ;;  sign            1   61[COMRAM] unsigned char 
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  4   49[COMRAM] unsigned char 
 11043 ;; Registers used:
 11044 ;;		wreg, status,2, status,0, prodl, prodh
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11050 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;Total ram usage:       25 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 1
 11057 ;; This function calls:
 11058 ;;		Nothing
 11059 ;; This function is called by:
 11060 ;;		_Colour_decider
 11061 ;;		_reverseOneBlock
 11062 ;;		_ForwardOneBlock
 11063 ;;		_Forwardhalfblock
 11064 ;;		_Backhalfblock
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text67
 11069   002306                     __ptext67:
 11070                           	callstack 0
 11071   002306                     ___flmul:
 11072                           	callstack 28
 11073   002306  5035               	movf	(___flmul@b+3)^0,w,c
 11074   002308  0B80               	andlw	128
 11075   00230A  6E3E               	movwf	___flmul@sign^0,c
 11076   00230C  5035               	movf	(___flmul@b+3)^0,w,c
 11077   00230E  2435               	addwf	(___flmul@b+3)^0,w,c
 11078   002310  6E44               	movwf	___flmul@bexp^0,c
 11079   002312  AE34               	btfss	(___flmul@b+2)^0,7,c
 11080   002314  EF8E  F011         	goto	u3671
 11081   002318  EF90  F011         	goto	u3670
 11082   00231C                     u3671:
 11083   00231C  EF91  F011         	goto	l4125
 11084   002320                     u3670:
 11085   002320  8044               	bsf	___flmul@bexp^0,0,c
 11086   002322                     l4125:
 11087   002322  5044               	movf	___flmul@bexp^0,w,c
 11088   002324  B4D8               	btfsc	status,2,c
 11089   002326  EF97  F011         	goto	u3681
 11090   00232A  EF99  F011         	goto	u3680
 11091   00232E                     u3681:
 11092   00232E  EFAC  F011         	goto	l4133
 11093   002332                     u3680:
 11094   002332  2844               	incf	___flmul@bexp^0,w,c
 11095   002334  A4D8               	btfss	status,2,c
 11096   002336  EF9F  F011         	goto	u3691
 11097   00233A  EFA1  F011         	goto	u3690
 11098   00233E                     u3691:
 11099   00233E  EFA9  F011         	goto	l4131
 11100   002342                     u3690:
 11101   002342  0E00               	movlw	0
 11102   002344  6E32               	movwf	___flmul@b^0,c
 11103   002346  0E00               	movlw	0
 11104   002348  6E33               	movwf	(___flmul@b+1)^0,c
 11105   00234A  0E00               	movlw	0
 11106   00234C  6E34               	movwf	(___flmul@b+2)^0,c
 11107   00234E  0E00               	movlw	0
 11108   002350  6E35               	movwf	(___flmul@b+3)^0,c
 11109   002352                     l4131:
 11110   002352  8E34               	bsf	(___flmul@b+2)^0,7,c
 11111   002354  EFB4  F011         	goto	l4135
 11112   002358                     l4133:
 11113   002358  0E00               	movlw	0
 11114   00235A  6E32               	movwf	___flmul@b^0,c
 11115   00235C  0E00               	movlw	0
 11116   00235E  6E33               	movwf	(___flmul@b+1)^0,c
 11117   002360  0E00               	movlw	0
 11118   002362  6E34               	movwf	(___flmul@b+2)^0,c
 11119   002364  0E00               	movlw	0
 11120   002366  6E35               	movwf	(___flmul@b+3)^0,c
 11121   002368                     l4135:
 11122   002368  5039               	movf	(___flmul@a+3)^0,w,c
 11123   00236A  0B80               	andlw	128
 11124   00236C  1A3E               	xorwf	___flmul@sign^0,f,c
 11125   00236E  5039               	movf	(___flmul@a+3)^0,w,c
 11126   002370  2439               	addwf	(___flmul@a+3)^0,w,c
 11127   002372  6E43               	movwf	___flmul@aexp^0,c
 11128   002374  AE38               	btfss	(___flmul@a+2)^0,7,c
 11129   002376  EFBF  F011         	goto	u3701
 11130   00237A  EFC1  F011         	goto	u3700
 11131   00237E                     u3701:
 11132   00237E  EFC2  F011         	goto	l4143
 11133   002382                     u3700:
 11134   002382  8043               	bsf	___flmul@aexp^0,0,c
 11135   002384                     l4143:
 11136   002384  5043               	movf	___flmul@aexp^0,w,c
 11137   002386  B4D8               	btfsc	status,2,c
 11138   002388  EFC8  F011         	goto	u3711
 11139   00238C  EFCA  F011         	goto	u3710
 11140   002390                     u3711:
 11141   002390  EFDD  F011         	goto	l4151
 11142   002394                     u3710:
 11143   002394  2843               	incf	___flmul@aexp^0,w,c
 11144   002396  A4D8               	btfss	status,2,c
 11145   002398  EFD0  F011         	goto	u3721
 11146   00239C  EFD2  F011         	goto	u3720
 11147   0023A0                     u3721:
 11148   0023A0  EFDA  F011         	goto	l4149
 11149   0023A4                     u3720:
 11150   0023A4  0E00               	movlw	0
 11151   0023A6  6E36               	movwf	___flmul@a^0,c
 11152   0023A8  0E00               	movlw	0
 11153   0023AA  6E37               	movwf	(___flmul@a+1)^0,c
 11154   0023AC  0E00               	movlw	0
 11155   0023AE  6E38               	movwf	(___flmul@a+2)^0,c
 11156   0023B0  0E00               	movlw	0
 11157   0023B2  6E39               	movwf	(___flmul@a+3)^0,c
 11158   0023B4                     l4149:
 11159   0023B4  8E38               	bsf	(___flmul@a+2)^0,7,c
 11160   0023B6  EFE5  F011         	goto	l1327
 11161   0023BA                     l4151:
 11162   0023BA  0E00               	movlw	0
 11163   0023BC  6E36               	movwf	___flmul@a^0,c
 11164   0023BE  0E00               	movlw	0
 11165   0023C0  6E37               	movwf	(___flmul@a+1)^0,c
 11166   0023C2  0E00               	movlw	0
 11167   0023C4  6E38               	movwf	(___flmul@a+2)^0,c
 11168   0023C6  0E00               	movlw	0
 11169   0023C8  6E39               	movwf	(___flmul@a+3)^0,c
 11170   0023CA                     l1327:
 11171   0023CA  5043               	movf	___flmul@aexp^0,w,c
 11172   0023CC  B4D8               	btfsc	status,2,c
 11173   0023CE  EFEB  F011         	goto	u3731
 11174   0023D2  EFED  F011         	goto	u3730
 11175   0023D6                     u3731:
 11176   0023D6  EFF5  F011         	goto	l4155
 11177   0023DA                     u3730:
 11178   0023DA  5044               	movf	___flmul@bexp^0,w,c
 11179   0023DC  A4D8               	btfss	status,2,c
 11180   0023DE  EFF3  F011         	goto	u3741
 11181   0023E2  EFF5  F011         	goto	u3740
 11182   0023E6                     u3741:
 11183   0023E6  EFFF  F011         	goto	l4159
 11184   0023EA                     u3740:
 11185   0023EA                     l4155:
 11186   0023EA  0E00               	movlw	0
 11187   0023EC  6E32               	movwf	?___flmul^0,c
 11188   0023EE  0E00               	movlw	0
 11189   0023F0  6E33               	movwf	(?___flmul+1)^0,c
 11190   0023F2  0E00               	movlw	0
 11191   0023F4  6E34               	movwf	(?___flmul+2)^0,c
 11192   0023F6  0E00               	movlw	0
 11193   0023F8  6E35               	movwf	(?___flmul+3)^0,c
 11194   0023FA  EF97  F013         	goto	l1331
 11195   0023FE                     l4159:
 11196   0023FE  5038               	movf	(___flmul@a+2)^0,w,c
 11197   002400  0232               	mulwf	___flmul@b^0,c
 11198   002402  CFF3 F049          	movff	prodl,___flmul@temp
 11199   002406  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11200   00240A  5049               	movf	___flmul@temp^0,w,c
 11201   00240C  6E3F               	movwf	___flmul@grs^0,c
 11202   00240E  6A40               	clrf	(___flmul@grs+1)^0,c
 11203   002410  6A41               	clrf	(___flmul@grs+2)^0,c
 11204   002412  6A42               	clrf	(___flmul@grs+3)^0,c
 11205   002414  504A               	movf	(___flmul@temp+1)^0,w,c
 11206   002416  6E45               	movwf	___flmul@prod^0,c
 11207   002418  6A46               	clrf	(___flmul@prod+1)^0,c
 11208   00241A  6A47               	clrf	(___flmul@prod+2)^0,c
 11209   00241C  6A48               	clrf	(___flmul@prod+3)^0,c
 11210   00241E  5037               	movf	(___flmul@a+1)^0,w,c
 11211   002420  0233               	mulwf	(___flmul@b+1)^0,c
 11212   002422  CFF3 F049          	movff	prodl,___flmul@temp
 11213   002426  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11214   00242A  5049               	movf	___flmul@temp^0,w,c
 11215   00242C  263F               	addwf	___flmul@grs^0,f,c
 11216   00242E  0E00               	movlw	0
 11217   002430  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11218   002432  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11219   002434  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11220   002436  504A               	movf	(___flmul@temp+1)^0,w,c
 11221   002438  2645               	addwf	___flmul@prod^0,f,c
 11222   00243A  0E00               	movlw	0
 11223   00243C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11224   00243E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11225   002440  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11226   002442  5036               	movf	___flmul@a^0,w,c
 11227   002444  0234               	mulwf	(___flmul@b+2)^0,c
 11228   002446  CFF3 F049          	movff	prodl,___flmul@temp
 11229   00244A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11230   00244E  5049               	movf	___flmul@temp^0,w,c
 11231   002450  263F               	addwf	___flmul@grs^0,f,c
 11232   002452  0E00               	movlw	0
 11233   002454  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11234   002456  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11235   002458  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11236   00245A  504A               	movf	(___flmul@temp+1)^0,w,c
 11237   00245C  2645               	addwf	___flmul@prod^0,f,c
 11238   00245E  0E00               	movlw	0
 11239   002460  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11240   002462  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11241   002464  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11242   002466  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11243   00246A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11244   00246E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11245   002472  6A3F               	clrf	___flmul@grs^0,c
 11246   002474  5036               	movf	___flmul@a^0,w,c
 11247   002476  0233               	mulwf	(___flmul@b+1)^0,c
 11248   002478  CFF3 F049          	movff	prodl,___flmul@temp
 11249   00247C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11250   002480  5049               	movf	___flmul@temp^0,w,c
 11251   002482  263F               	addwf	___flmul@grs^0,f,c
 11252   002484  504A               	movf	(___flmul@temp+1)^0,w,c
 11253   002486  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11254   002488  0E00               	movlw	0
 11255   00248A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11256   00248C  0E00               	movlw	0
 11257   00248E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11258   002490  5037               	movf	(___flmul@a+1)^0,w,c
 11259   002492  0232               	mulwf	___flmul@b^0,c
 11260   002494  CFF3 F049          	movff	prodl,___flmul@temp
 11261   002498  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11262   00249C  5049               	movf	___flmul@temp^0,w,c
 11263   00249E  263F               	addwf	___flmul@grs^0,f,c
 11264   0024A0  504A               	movf	(___flmul@temp+1)^0,w,c
 11265   0024A2  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11266   0024A4  0E00               	movlw	0
 11267   0024A6  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11268   0024A8  0E00               	movlw	0
 11269   0024AA  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11270   0024AC  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11271   0024B0  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11272   0024B4  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11273   0024B8  6A3F               	clrf	___flmul@grs^0,c
 11274   0024BA  5036               	movf	___flmul@a^0,w,c
 11275   0024BC  0232               	mulwf	___flmul@b^0,c
 11276   0024BE  CFF3 F049          	movff	prodl,___flmul@temp
 11277   0024C2  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11278   0024C6  5049               	movf	___flmul@temp^0,w,c
 11279   0024C8  263F               	addwf	___flmul@grs^0,f,c
 11280   0024CA  504A               	movf	(___flmul@temp+1)^0,w,c
 11281   0024CC  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11282   0024CE  0E00               	movlw	0
 11283   0024D0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11284   0024D2  0E00               	movlw	0
 11285   0024D4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11286   0024D6  5038               	movf	(___flmul@a+2)^0,w,c
 11287   0024D8  0233               	mulwf	(___flmul@b+1)^0,c
 11288   0024DA  CFF3 F049          	movff	prodl,___flmul@temp
 11289   0024DE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11290   0024E2  5049               	movf	___flmul@temp^0,w,c
 11291   0024E4  2645               	addwf	___flmul@prod^0,f,c
 11292   0024E6  504A               	movf	(___flmul@temp+1)^0,w,c
 11293   0024E8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11294   0024EA  0E00               	movlw	0
 11295   0024EC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11296   0024EE  0E00               	movlw	0
 11297   0024F0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11298   0024F2  5037               	movf	(___flmul@a+1)^0,w,c
 11299   0024F4  0234               	mulwf	(___flmul@b+2)^0,c
 11300   0024F6  CFF3 F049          	movff	prodl,___flmul@temp
 11301   0024FA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11302   0024FE  5049               	movf	___flmul@temp^0,w,c
 11303   002500  2645               	addwf	___flmul@prod^0,f,c
 11304   002502  504A               	movf	(___flmul@temp+1)^0,w,c
 11305   002504  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11306   002506  0E00               	movlw	0
 11307   002508  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11308   00250A  0E00               	movlw	0
 11309   00250C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11310   00250E  5038               	movf	(___flmul@a+2)^0,w,c
 11311   002510  0234               	mulwf	(___flmul@b+2)^0,c
 11312   002512  CFF3 F049          	movff	prodl,___flmul@temp
 11313   002516  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11314   00251A  5049               	movf	___flmul@temp^0,w,c
 11315   00251C  6E3A               	movwf	??___flmul^0,c
 11316   00251E  504A               	movf	(___flmul@temp+1)^0,w,c
 11317   002520  6E3B               	movwf	(??___flmul+1)^0,c
 11318   002522  6A3C               	clrf	(??___flmul+2)^0,c
 11319   002524  6A3D               	clrf	(??___flmul+3)^0,c
 11320   002526  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11321   00252A  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11322   00252E  C03A  F03B         	movff	??___flmul,??___flmul+1
 11323   002532  6A3A               	clrf	??___flmul^0,c
 11324   002534  503A               	movf	??___flmul^0,w,c
 11325   002536  2645               	addwf	___flmul@prod^0,f,c
 11326   002538  503B               	movf	(??___flmul+1)^0,w,c
 11327   00253A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11328   00253C  503C               	movf	(??___flmul+2)^0,w,c
 11329   00253E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11330   002540  503D               	movf	(??___flmul+3)^0,w,c
 11331   002542  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11332   002544  C03F  F03A         	movff	___flmul@grs,??___flmul
 11333   002548  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11334   00254C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11335   002550  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11336   002554  0E19               	movlw	25
 11337   002556  EFB2  F012         	goto	u3750
 11338   00255A                     u3755:
 11339   00255A  90D8               	bcf	status,0,c
 11340   00255C  323D               	rrcf	(??___flmul+3)^0,f,c
 11341   00255E  323C               	rrcf	(??___flmul+2)^0,f,c
 11342   002560  323B               	rrcf	(??___flmul+1)^0,f,c
 11343   002562  323A               	rrcf	??___flmul^0,f,c
 11344   002564                     u3750:
 11345   002564  2EE8               	decfsz	wreg,f,c
 11346   002566  EFAD  F012         	goto	u3755
 11347   00256A  503A               	movf	??___flmul^0,w,c
 11348   00256C  2645               	addwf	___flmul@prod^0,f,c
 11349   00256E  503B               	movf	(??___flmul+1)^0,w,c
 11350   002570  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11351   002572  503C               	movf	(??___flmul+2)^0,w,c
 11352   002574  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11353   002576  503D               	movf	(??___flmul+3)^0,w,c
 11354   002578  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11355   00257A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11356   00257E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11357   002582  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11358   002586  6A3F               	clrf	___flmul@grs^0,c
 11359   002588  5043               	movf	___flmul@aexp^0,w,c
 11360   00258A  C044  F03A         	movff	___flmul@bexp,??___flmul
 11361   00258E  6A3B               	clrf	(??___flmul+1)^0,c
 11362   002590  263A               	addwf	??___flmul^0,f,c
 11363   002592  0E00               	movlw	0
 11364   002594  223B               	addwfc	(??___flmul+1)^0,f,c
 11365   002596  0E82               	movlw	130
 11366   002598  243A               	addwf	??___flmul^0,w,c
 11367   00259A  6E49               	movwf	___flmul@temp^0,c
 11368   00259C  0EFF               	movlw	255
 11369   00259E  203B               	addwfc	(??___flmul+1)^0,w,c
 11370   0025A0  6E4A               	movwf	(___flmul@temp+1)^0,c
 11371   0025A2  EFE8  F012         	goto	l4207
 11372   0025A6                     l4201:
 11373   0025A6  90D8               	bcf	status,0,c
 11374   0025A8  3645               	rlcf	___flmul@prod^0,f,c
 11375   0025AA  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11376   0025AC  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11377   0025AE  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11378   0025B0  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11379   0025B2  EFDD  F012         	goto	u3761
 11380   0025B6  EFDF  F012         	goto	u3760
 11381   0025BA                     u3761:
 11382   0025BA  EFE0  F012         	goto	l1334
 11383   0025BE                     u3760:
 11384   0025BE  8045               	bsf	___flmul@prod^0,0,c
 11385   0025C0                     l1334:
 11386   0025C0  90D8               	bcf	status,0,c
 11387   0025C2  363F               	rlcf	___flmul@grs^0,f,c
 11388   0025C4  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11389   0025C6  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11390   0025C8  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11391   0025CA  0649               	decf	___flmul@temp^0,f,c
 11392   0025CC  A0D8               	btfss	status,0,c
 11393   0025CE  064A               	decf	(___flmul@temp+1)^0,f,c
 11394   0025D0                     l4207:
 11395   0025D0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11396   0025D2  EFED  F012         	goto	u3771
 11397   0025D6  EFEF  F012         	goto	u3770
 11398   0025DA                     u3771:
 11399   0025DA  EFD3  F012         	goto	l4201
 11400   0025DE                     u3770:
 11401   0025DE  0E00               	movlw	0
 11402   0025E0  6E43               	movwf	___flmul@aexp^0,c
 11403   0025E2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11404   0025E4  EFF6  F012         	goto	u3781
 11405   0025E8  EFF8  F012         	goto	u3780
 11406   0025EC                     u3781:
 11407   0025EC  EF1C  F013         	goto	l1336
 11408   0025F0                     u3780:
 11409   0025F0  0EFF               	movlw	255
 11410   0025F2  143F               	andwf	___flmul@grs^0,w,c
 11411   0025F4  6E3A               	movwf	??___flmul^0,c
 11412   0025F6  0EFF               	movlw	255
 11413   0025F8  1440               	andwf	(___flmul@grs+1)^0,w,c
 11414   0025FA  6E3B               	movwf	(??___flmul+1)^0,c
 11415   0025FC  0EFF               	movlw	255
 11416   0025FE  1441               	andwf	(___flmul@grs+2)^0,w,c
 11417   002600  6E3C               	movwf	(??___flmul+2)^0,c
 11418   002602  0E7F               	movlw	127
 11419   002604  1442               	andwf	(___flmul@grs+3)^0,w,c
 11420   002606  6E3D               	movwf	(??___flmul+3)^0,c
 11421   002608  503A               	movf	??___flmul^0,w,c
 11422   00260A  103B               	iorwf	(??___flmul+1)^0,w,c
 11423   00260C  103C               	iorwf	(??___flmul+2)^0,w,c
 11424   00260E  103D               	iorwf	(??___flmul+3)^0,w,c
 11425   002610  B4D8               	btfsc	status,2,c
 11426   002612  EF0D  F013         	goto	u3791
 11427   002616  EF0F  F013         	goto	u3790
 11428   00261A                     u3791:
 11429   00261A  EF13  F013         	goto	l1337
 11430   00261E                     u3790:
 11431   00261E                     l4215:
 11432   00261E  0E01               	movlw	1
 11433   002620  6E43               	movwf	___flmul@aexp^0,c
 11434   002622  EF1C  F013         	goto	l1336
 11435   002626                     l1337:
 11436   002626  A045               	btfss	___flmul@prod^0,0,c
 11437   002628  EF18  F013         	goto	u3801
 11438   00262C  EF1A  F013         	goto	u3800
 11439   002630                     u3801:
 11440   002630  EF1C  F013         	goto	l1336
 11441   002634                     u3800:
 11442   002634  EF0F  F013         	goto	l4215
 11443   002638                     l1336:
 11444   002638  5043               	movf	___flmul@aexp^0,w,c
 11445   00263A  B4D8               	btfsc	status,2,c
 11446   00263C  EF22  F013         	goto	u3811
 11447   002640  EF24  F013         	goto	u3810
 11448   002644                     u3811:
 11449   002644  EF48  F013         	goto	l4227
 11450   002648                     u3810:
 11451   002648  0E01               	movlw	1
 11452   00264A  2645               	addwf	___flmul@prod^0,f,c
 11453   00264C  0E00               	movlw	0
 11454   00264E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11455   002650  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11456   002652  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11457   002654  A048               	btfss	(___flmul@prod+3)^0,0,c
 11458   002656  EF2F  F013         	goto	u3821
 11459   00265A  EF31  F013         	goto	u3820
 11460   00265E                     u3821:
 11461   00265E  EF48  F013         	goto	l4227
 11462   002662                     u3820:
 11463   002662  C045  F03A         	movff	___flmul@prod,??___flmul
 11464   002666  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11465   00266A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11466   00266E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11467   002672  343D               	rlcf	(??___flmul+3)^0,w,c
 11468   002674  323D               	rrcf	(??___flmul+3)^0,f,c
 11469   002676  323C               	rrcf	(??___flmul+2)^0,f,c
 11470   002678  323B               	rrcf	(??___flmul+1)^0,f,c
 11471   00267A  323A               	rrcf	??___flmul^0,f,c
 11472   00267C  C03A  F045         	movff	??___flmul,___flmul@prod
 11473   002680  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11474   002684  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11475   002688  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11476   00268C  4A49               	infsnz	___flmul@temp^0,f,c
 11477   00268E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11478   002690                     l4227:
 11479   002690  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11480   002692  EF53  F013         	goto	u3831
 11481   002696  504A               	movf	(___flmul@temp+1)^0,w,c
 11482   002698  E108               	bnz	u3830
 11483   00269A  2849               	incf	___flmul@temp^0,w,c
 11484   00269C  A0D8               	btfss	status,0,c
 11485   00269E  EF53  F013         	goto	u3831
 11486   0026A2  EF55  F013         	goto	u3830
 11487   0026A6                     u3831:
 11488   0026A6  EF5F  F013         	goto	l4231
 11489   0026AA                     u3830:
 11490   0026AA  0E00               	movlw	0
 11491   0026AC  6E45               	movwf	___flmul@prod^0,c
 11492   0026AE  0E00               	movlw	0
 11493   0026B0  6E46               	movwf	(___flmul@prod+1)^0,c
 11494   0026B2  0E80               	movlw	128
 11495   0026B4  6E47               	movwf	(___flmul@prod+2)^0,c
 11496   0026B6  0E7F               	movlw	127
 11497   0026B8  6E48               	movwf	(___flmul@prod+3)^0,c
 11498   0026BA  EF8D  F013         	goto	l4243
 11499   0026BE                     l4231:
 11500   0026BE  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11501   0026C0  EF6C  F013         	goto	u3840
 11502   0026C4  504A               	movf	(___flmul@temp+1)^0,w,c
 11503   0026C6  E106               	bnz	u3841
 11504   0026C8  0449               	decf	___flmul@temp^0,w,c
 11505   0026CA  B0D8               	btfsc	status,0,c
 11506   0026CC  EF6A  F013         	goto	u3841
 11507   0026D0  EF6C  F013         	goto	u3840
 11508   0026D4                     u3841:
 11509   0026D4  EF78  F013         	goto	l1344
 11510   0026D8                     u3840:
 11511   0026D8  0E00               	movlw	0
 11512   0026DA  6E45               	movwf	___flmul@prod^0,c
 11513   0026DC  0E00               	movlw	0
 11514   0026DE  6E46               	movwf	(___flmul@prod+1)^0,c
 11515   0026E0  0E00               	movlw	0
 11516   0026E2  6E47               	movwf	(___flmul@prod+2)^0,c
 11517   0026E4  0E00               	movlw	0
 11518   0026E6  6E48               	movwf	(___flmul@prod+3)^0,c
 11519   0026E8  0E00               	movlw	0
 11520   0026EA  6E3E               	movwf	___flmul@sign^0,c
 11521   0026EC  EF8D  F013         	goto	l4243
 11522   0026F0                     l1344:
 11523   0026F0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11524   0026F4  0EFF               	movlw	255
 11525   0026F6  1645               	andwf	___flmul@prod^0,f,c
 11526   0026F8  0EFF               	movlw	255
 11527   0026FA  1646               	andwf	(___flmul@prod+1)^0,f,c
 11528   0026FC  0E7F               	movlw	127
 11529   0026FE  1647               	andwf	(___flmul@prod+2)^0,f,c
 11530   002700  0E00               	movlw	0
 11531   002702  1648               	andwf	(___flmul@prod+3)^0,f,c
 11532   002704  A044               	btfss	___flmul@bexp^0,0,c
 11533   002706  EF87  F013         	goto	u3851
 11534   00270A  EF89  F013         	goto	u3850
 11535   00270E                     u3851:
 11536   00270E  EF8A  F013         	goto	l4241
 11537   002712                     u3850:
 11538   002712  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11539   002714                     l4241:
 11540   002714  90D8               	bcf	status,0,c
 11541   002716  3044               	rrcf	___flmul@bexp^0,w,c
 11542   002718  6E48               	movwf	(___flmul@prod+3)^0,c
 11543   00271A                     l4243:
 11544   00271A  503E               	movf	___flmul@sign^0,w,c
 11545   00271C  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11546   00271E  C045  F032         	movff	___flmul@prod,?___flmul
 11547   002722  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11548   002726  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11549   00272A  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11550   00272E                     l1331:
 11551   00272E  0012               	return		;funcret
 11552   002730                     __end_of___flmul:
 11553                           	callstack 0
 11554                           
 11555 ;; *************** function ___flge *****************
 11556 ;; Defined at:
 11557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  ff1             4    0[COMRAM] unsigned char 
 11560 ;;  ff2             4    4[COMRAM] unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;		None               void
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11572 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11575 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11576 ;;Total ram usage:       12 bytes
 11577 ;; Hardware stack levels used: 1
 11578 ;; Hardware stack levels required when called: 1
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_Colour_decider
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text68
 11587   003BC2                     __ptext68:
 11588                           	callstack 0
 11589   003BC2                     ___flge:
 11590                           	callstack 28
 11591   003BC2  0E00               	movlw	0
 11592   003BC4  1401               	andwf	___flge@ff1^0,w,c
 11593   003BC6  6E09               	movwf	??___flge^0,c
 11594   003BC8  0E00               	movlw	0
 11595   003BCA  1402               	andwf	(___flge@ff1+1)^0,w,c
 11596   003BCC  6E0A               	movwf	(??___flge+1)^0,c
 11597   003BCE  0E80               	movlw	128
 11598   003BD0  1403               	andwf	(___flge@ff1+2)^0,w,c
 11599   003BD2  6E0B               	movwf	(??___flge+2)^0,c
 11600   003BD4  0E7F               	movlw	127
 11601   003BD6  1404               	andwf	(___flge@ff1+3)^0,w,c
 11602   003BD8  6E0C               	movwf	(??___flge+3)^0,c
 11603   003BDA  5009               	movf	??___flge^0,w,c
 11604   003BDC  100A               	iorwf	(??___flge+1)^0,w,c
 11605   003BDE  100B               	iorwf	(??___flge+2)^0,w,c
 11606   003BE0  100C               	iorwf	(??___flge+3)^0,w,c
 11607   003BE2  A4D8               	btfss	status,2,c
 11608   003BE4  EFF6  F01D         	goto	u3891
 11609   003BE8  EFF8  F01D         	goto	u3890
 11610   003BEC                     u3891:
 11611   003BEC  EF00  F01E         	goto	l4275
 11612   003BF0                     u3890:
 11613   003BF0  0E00               	movlw	0
 11614   003BF2  6E01               	movwf	___flge@ff1^0,c
 11615   003BF4  0E00               	movlw	0
 11616   003BF6  6E02               	movwf	(___flge@ff1+1)^0,c
 11617   003BF8  0E00               	movlw	0
 11618   003BFA  6E03               	movwf	(___flge@ff1+2)^0,c
 11619   003BFC  0E00               	movlw	0
 11620   003BFE  6E04               	movwf	(___flge@ff1+3)^0,c
 11621   003C00                     l4275:
 11622   003C00  0E00               	movlw	0
 11623   003C02  1405               	andwf	___flge@ff2^0,w,c
 11624   003C04  6E09               	movwf	??___flge^0,c
 11625   003C06  0E00               	movlw	0
 11626   003C08  1406               	andwf	(___flge@ff2+1)^0,w,c
 11627   003C0A  6E0A               	movwf	(??___flge+1)^0,c
 11628   003C0C  0E80               	movlw	128
 11629   003C0E  1407               	andwf	(___flge@ff2+2)^0,w,c
 11630   003C10  6E0B               	movwf	(??___flge+2)^0,c
 11631   003C12  0E7F               	movlw	127
 11632   003C14  1408               	andwf	(___flge@ff2+3)^0,w,c
 11633   003C16  6E0C               	movwf	(??___flge+3)^0,c
 11634   003C18  5009               	movf	??___flge^0,w,c
 11635   003C1A  100A               	iorwf	(??___flge+1)^0,w,c
 11636   003C1C  100B               	iorwf	(??___flge+2)^0,w,c
 11637   003C1E  100C               	iorwf	(??___flge+3)^0,w,c
 11638   003C20  A4D8               	btfss	status,2,c
 11639   003C22  EF15  F01E         	goto	u3901
 11640   003C26  EF17  F01E         	goto	u3900
 11641   003C2A                     u3901:
 11642   003C2A  EF1F  F01E         	goto	l4279
 11643   003C2E                     u3900:
 11644   003C2E  0E00               	movlw	0
 11645   003C30  6E05               	movwf	___flge@ff2^0,c
 11646   003C32  0E00               	movlw	0
 11647   003C34  6E06               	movwf	(___flge@ff2+1)^0,c
 11648   003C36  0E00               	movlw	0
 11649   003C38  6E07               	movwf	(___flge@ff2+2)^0,c
 11650   003C3A  0E00               	movlw	0
 11651   003C3C  6E08               	movwf	(___flge@ff2+3)^0,c
 11652   003C3E                     l4279:
 11653   003C3E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11654   003C40  EF24  F01E         	goto	u3911
 11655   003C44  EF26  F01E         	goto	u3910
 11656   003C48                     u3911:
 11657   003C48  EF2F  F01E         	goto	l4283
 11658   003C4C                     u3910:
 11659   003C4C  6C01               	negf	___flge@ff1^0,c
 11660   003C4E  1E02               	comf	(___flge@ff1+1)^0,f,c
 11661   003C50  B0D8               	btfsc	status,0,c
 11662   003C52  2A02               	incf	(___flge@ff1+1)^0,f,c
 11663   003C54  1E03               	comf	(___flge@ff1+2)^0,f,c
 11664   003C56  B0D8               	btfsc	status,0,c
 11665   003C58  2A03               	incf	(___flge@ff1+2)^0,f,c
 11666   003C5A  0E80               	movlw	128
 11667   003C5C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11668   003C5E                     l4283:
 11669   003C5E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11670   003C60  EF34  F01E         	goto	u3921
 11671   003C64  EF36  F01E         	goto	u3920
 11672   003C68                     u3921:
 11673   003C68  EF3F  F01E         	goto	l978
 11674   003C6C                     u3920:
 11675   003C6C  6C05               	negf	___flge@ff2^0,c
 11676   003C6E  1E06               	comf	(___flge@ff2+1)^0,f,c
 11677   003C70  B0D8               	btfsc	status,0,c
 11678   003C72  2A06               	incf	(___flge@ff2+1)^0,f,c
 11679   003C74  1E07               	comf	(___flge@ff2+2)^0,f,c
 11680   003C76  B0D8               	btfsc	status,0,c
 11681   003C78  2A07               	incf	(___flge@ff2+2)^0,f,c
 11682   003C7A  0E80               	movlw	128
 11683   003C7C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11684   003C7E                     l978:
 11685   003C7E  0E00               	movlw	0
 11686   003C80  1A01               	xorwf	___flge@ff1^0,f,c
 11687   003C82  0E00               	movlw	0
 11688   003C84  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11689   003C86  0E00               	movlw	0
 11690   003C88  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11691   003C8A  0E80               	movlw	128
 11692   003C8C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11693   003C8E  0E00               	movlw	0
 11694   003C90  1A05               	xorwf	___flge@ff2^0,f,c
 11695   003C92  0E00               	movlw	0
 11696   003C94  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11697   003C96  0E00               	movlw	0
 11698   003C98  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11699   003C9A  0E80               	movlw	128
 11700   003C9C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11701   003C9E  5005               	movf	___flge@ff2^0,w,c
 11702   003CA0  5C01               	subwf	___flge@ff1^0,w,c
 11703   003CA2  5006               	movf	(___flge@ff2+1)^0,w,c
 11704   003CA4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11705   003CA6  5007               	movf	(___flge@ff2+2)^0,w,c
 11706   003CA8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11707   003CAA  5008               	movf	(___flge@ff2+3)^0,w,c
 11708   003CAC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11709   003CAE  B0D8               	btfsc	status,0,c
 11710   003CB0  EF5C  F01E         	goto	u3931
 11711   003CB4  EF5E  F01E         	goto	u3930
 11712   003CB8                     u3931:
 11713   003CB8  EF61  F01E         	goto	l4289
 11714   003CBC                     u3930:
 11715   003CBC  90D8               	bcf	status,0,c
 11716   003CBE  EF62  F01E         	goto	l983
 11717   003CC2                     l4289:
 11718   003CC2  80D8               	bsf	status,0,c
 11719   003CC4                     l983:
 11720   003CC4  0012               	return		;funcret
 11721   003CC6                     __end_of___flge:
 11722                           	callstack 0
 11723                           
 11724 ;; *************** function ___fleq *****************
 11725 ;; Defined at:
 11726 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  ff1             4   24[COMRAM] unsigned char 
 11729 ;;  ff2             4   28[COMRAM] unsigned char 
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;		None
 11732 ;; Return value:  Size  Location     Type
 11733 ;;		None               void
 11734 ;; Registers used:
 11735 ;;		wreg, status,2, status,0
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11744 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11745 ;;Total ram usage:       12 bytes
 11746 ;; Hardware stack levels used: 1
 11747 ;; Hardware stack levels required when called: 1
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_Colour_decider
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text69
 11756   003E3A                     __ptext69:
 11757                           	callstack 0
 11758   003E3A                     ___fleq:
 11759                           	callstack 28
 11760   003E3A  0E00               	movlw	0
 11761   003E3C  1419               	andwf	___fleq@ff1^0,w,c
 11762   003E3E  6E21               	movwf	??___fleq^0,c
 11763   003E40  0E00               	movlw	0
 11764   003E42  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11765   003E44  6E22               	movwf	(??___fleq+1)^0,c
 11766   003E46  0E80               	movlw	128
 11767   003E48  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11768   003E4A  6E23               	movwf	(??___fleq+2)^0,c
 11769   003E4C  0E7F               	movlw	127
 11770   003E4E  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11771   003E50  6E24               	movwf	(??___fleq+3)^0,c
 11772   003E52  5021               	movf	??___fleq^0,w,c
 11773   003E54  1022               	iorwf	(??___fleq+1)^0,w,c
 11774   003E56  1023               	iorwf	(??___fleq+2)^0,w,c
 11775   003E58  1024               	iorwf	(??___fleq+3)^0,w,c
 11776   003E5A  A4D8               	btfss	status,2,c
 11777   003E5C  EF32  F01F         	goto	u3861
 11778   003E60  EF34  F01F         	goto	u3860
 11779   003E64                     u3861:
 11780   003E64  EF3C  F01F         	goto	l4259
 11781   003E68                     u3860:
 11782   003E68  0E00               	movlw	0
 11783   003E6A  6E19               	movwf	___fleq@ff1^0,c
 11784   003E6C  0E00               	movlw	0
 11785   003E6E  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11786   003E70  0E00               	movlw	0
 11787   003E72  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11788   003E74  0E00               	movlw	0
 11789   003E76  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11790   003E78                     l4259:
 11791   003E78  0E00               	movlw	0
 11792   003E7A  141D               	andwf	___fleq@ff2^0,w,c
 11793   003E7C  6E21               	movwf	??___fleq^0,c
 11794   003E7E  0E00               	movlw	0
 11795   003E80  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11796   003E82  6E22               	movwf	(??___fleq+1)^0,c
 11797   003E84  0E80               	movlw	128
 11798   003E86  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11799   003E88  6E23               	movwf	(??___fleq+2)^0,c
 11800   003E8A  0E7F               	movlw	127
 11801   003E8C  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11802   003E8E  6E24               	movwf	(??___fleq+3)^0,c
 11803   003E90  5021               	movf	??___fleq^0,w,c
 11804   003E92  1022               	iorwf	(??___fleq+1)^0,w,c
 11805   003E94  1023               	iorwf	(??___fleq+2)^0,w,c
 11806   003E96  1024               	iorwf	(??___fleq+3)^0,w,c
 11807   003E98  A4D8               	btfss	status,2,c
 11808   003E9A  EF51  F01F         	goto	u3871
 11809   003E9E  EF53  F01F         	goto	u3870
 11810   003EA2                     u3871:
 11811   003EA2  EF5B  F01F         	goto	l4263
 11812   003EA6                     u3870:
 11813   003EA6  0E00               	movlw	0
 11814   003EA8  6E1D               	movwf	___fleq@ff2^0,c
 11815   003EAA  0E00               	movlw	0
 11816   003EAC  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11817   003EAE  0E00               	movlw	0
 11818   003EB0  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11819   003EB2  0E00               	movlw	0
 11820   003EB4  6E20               	movwf	(___fleq@ff2+3)^0,c
 11821   003EB6                     l4263:
 11822   003EB6  501D               	movf	___fleq@ff2^0,w,c
 11823   003EB8  1819               	xorwf	___fleq@ff1^0,w,c
 11824   003EBA  E10F               	bnz	u3880
 11825   003EBC  501E               	movf	(___fleq@ff2+1)^0,w,c
 11826   003EBE  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11827   003EC0  E10C               	bnz	u3880
 11828   003EC2  501F               	movf	(___fleq@ff2+2)^0,w,c
 11829   003EC4  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11830   003EC6  E109               	bnz	u3880
 11831   003EC8  5020               	movf	(___fleq@ff2+3)^0,w,c
 11832   003ECA  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11833   003ECC  B4D8               	btfsc	status,2,c
 11834   003ECE  EF6B  F01F         	goto	u3881
 11835   003ED2  EF6D  F01F         	goto	u3880
 11836   003ED6                     u3881:
 11837   003ED6  EF70  F01F         	goto	l4267
 11838   003EDA                     u3880:
 11839   003EDA  90D8               	bcf	status,0,c
 11840   003EDC  EF71  F01F         	goto	l972
 11841   003EE0                     l4267:
 11842   003EE0  80D8               	bsf	status,0,c
 11843   003EE2                     l972:
 11844   003EE2  0012               	return		;funcret
 11845   003EE4                     __end_of___fleq:
 11846                           	callstack 0
 11847                           
 11848 ;; *************** function ___fldiv *****************
 11849 ;; Defined at:
 11850 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  b               4   24[COMRAM] unsigned char 
 11853 ;;  a               4   28[COMRAM] unsigned char 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  grs             4   43[COMRAM] unsigned long 
 11856 ;;  rem             4   36[COMRAM] unsigned long 
 11857 ;;  new_exp         2   41[COMRAM] short 
 11858 ;;  aexp            1   48[COMRAM] unsigned char 
 11859 ;;  bexp            1   47[COMRAM] unsigned char 
 11860 ;;  sign            1   40[COMRAM] unsigned char 
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  4   24[COMRAM] unsigned char 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2, status,0
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11870 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;Total ram usage:       25 bytes
 11875 ;; Hardware stack levels used: 1
 11876 ;; Hardware stack levels required when called: 1
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_colour_rel
 11881 ;;		_Colour_decider
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text70
 11886   002730                     __ptext70:
 11887                           	callstack 0
 11888   002730                     ___fldiv:
 11889                           	callstack 28
 11890   002730  501C               	movf	(___fldiv@b+3)^0,w,c
 11891   002732  0B80               	andlw	128
 11892   002734  6E29               	movwf	___fldiv@sign^0,c
 11893   002736  501C               	movf	(___fldiv@b+3)^0,w,c
 11894   002738  241C               	addwf	(___fldiv@b+3)^0,w,c
 11895   00273A  6E30               	movwf	___fldiv@bexp^0,c
 11896   00273C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11897   00273E  EFA3  F013         	goto	u3441
 11898   002742  EFA5  F013         	goto	u3440
 11899   002746                     u3441:
 11900   002746  EFA6  F013         	goto	l3987
 11901   00274A                     u3440:
 11902   00274A  8030               	bsf	___fldiv@bexp^0,0,c
 11903   00274C                     l3987:
 11904   00274C  5030               	movf	___fldiv@bexp^0,w,c
 11905   00274E  B4D8               	btfsc	status,2,c
 11906   002750  EFAC  F013         	goto	u3451
 11907   002754  EFAE  F013         	goto	u3450
 11908   002758                     u3451:
 11909   002758  EFC3  F013         	goto	l3997
 11910   00275C                     u3450:
 11911   00275C  2830               	incf	___fldiv@bexp^0,w,c
 11912   00275E  A4D8               	btfss	status,2,c
 11913   002760  EFB4  F013         	goto	u3461
 11914   002764  EFB6  F013         	goto	u3460
 11915   002768                     u3461:
 11916   002768  EFBE  F013         	goto	l3993
 11917   00276C                     u3460:
 11918   00276C  0E00               	movlw	0
 11919   00276E  6E19               	movwf	___fldiv@b^0,c
 11920   002770  0E00               	movlw	0
 11921   002772  6E1A               	movwf	(___fldiv@b+1)^0,c
 11922   002774  0E00               	movlw	0
 11923   002776  6E1B               	movwf	(___fldiv@b+2)^0,c
 11924   002778  0E00               	movlw	0
 11925   00277A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11926   00277C                     l3993:
 11927   00277C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11928   00277E  0E00               	movlw	0
 11929   002780  6E1C               	movwf	(___fldiv@b+3)^0,c
 11930   002782  EFCB  F013         	goto	l3999
 11931   002786                     l3997:
 11932   002786  0E00               	movlw	0
 11933   002788  6E19               	movwf	___fldiv@b^0,c
 11934   00278A  0E00               	movlw	0
 11935   00278C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11936   00278E  0E00               	movlw	0
 11937   002790  6E1B               	movwf	(___fldiv@b+2)^0,c
 11938   002792  0E00               	movlw	0
 11939   002794  6E1C               	movwf	(___fldiv@b+3)^0,c
 11940   002796                     l3999:
 11941   002796  5020               	movf	(___fldiv@a+3)^0,w,c
 11942   002798  0B80               	andlw	128
 11943   00279A  1A29               	xorwf	___fldiv@sign^0,f,c
 11944   00279C  5020               	movf	(___fldiv@a+3)^0,w,c
 11945   00279E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11946   0027A0  6E31               	movwf	___fldiv@aexp^0,c
 11947   0027A2  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11948   0027A4  EFD6  F013         	goto	u3471
 11949   0027A8  EFD8  F013         	goto	u3470
 11950   0027AC                     u3471:
 11951   0027AC  EFD9  F013         	goto	l4007
 11952   0027B0                     u3470:
 11953   0027B0  8031               	bsf	___fldiv@aexp^0,0,c
 11954   0027B2                     l4007:
 11955   0027B2  5031               	movf	___fldiv@aexp^0,w,c
 11956   0027B4  B4D8               	btfsc	status,2,c
 11957   0027B6  EFDF  F013         	goto	u3481
 11958   0027BA  EFE1  F013         	goto	u3480
 11959   0027BE                     u3481:
 11960   0027BE  EFF6  F013         	goto	l4017
 11961   0027C2                     u3480:
 11962   0027C2  2831               	incf	___fldiv@aexp^0,w,c
 11963   0027C4  A4D8               	btfss	status,2,c
 11964   0027C6  EFE7  F013         	goto	u3491
 11965   0027CA  EFE9  F013         	goto	u3490
 11966   0027CE                     u3491:
 11967   0027CE  EFF1  F013         	goto	l4013
 11968   0027D2                     u3490:
 11969   0027D2  0E00               	movlw	0
 11970   0027D4  6E1D               	movwf	___fldiv@a^0,c
 11971   0027D6  0E00               	movlw	0
 11972   0027D8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11973   0027DA  0E00               	movlw	0
 11974   0027DC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11975   0027DE  0E00               	movlw	0
 11976   0027E0  6E20               	movwf	(___fldiv@a+3)^0,c
 11977   0027E2                     l4013:
 11978   0027E2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11979   0027E4  0E00               	movlw	0
 11980   0027E6  6E20               	movwf	(___fldiv@a+3)^0,c
 11981   0027E8  EFFE  F013         	goto	l4019
 11982   0027EC                     l4017:
 11983   0027EC  0E00               	movlw	0
 11984   0027EE  6E1D               	movwf	___fldiv@a^0,c
 11985   0027F0  0E00               	movlw	0
 11986   0027F2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11987   0027F4  0E00               	movlw	0
 11988   0027F6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11989   0027F8  0E00               	movlw	0
 11990   0027FA  6E20               	movwf	(___fldiv@a+3)^0,c
 11991   0027FC                     l4019:
 11992   0027FC  501D               	movf	___fldiv@a^0,w,c
 11993   0027FE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11994   002800  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11995   002802  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11996   002804  A4D8               	btfss	status,2,c
 11997   002806  EF07  F014         	goto	u3501
 11998   00280A  EF09  F014         	goto	u3500
 11999   00280E                     u3501:
 12000   00280E  EF21  F014         	goto	l4031
 12001   002812                     u3500:
 12002   002812  0E00               	movlw	0
 12003   002814  6E19               	movwf	___fldiv@b^0,c
 12004   002816  0E00               	movlw	0
 12005   002818  6E1A               	movwf	(___fldiv@b+1)^0,c
 12006   00281A  0E00               	movlw	0
 12007   00281C  6E1B               	movwf	(___fldiv@b+2)^0,c
 12008   00281E  0E00               	movlw	0
 12009   002820  6E1C               	movwf	(___fldiv@b+3)^0,c
 12010   002822  0E80               	movlw	128
 12011   002824  121B               	iorwf	(___fldiv@b+2)^0,f,c
 12012   002826  0E7F               	movlw	127
 12013   002828  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12014   00282A                     l4025:
 12015   00282A  5029               	movf	___fldiv@sign^0,w,c
 12016   00282C  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12017   00282E  C019  F019         	movff	___fldiv@b,?___fldiv
 12018   002832  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 12019   002836  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 12020   00283A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 12021   00283E  EF64  F015         	goto	l1295
 12022   002842                     l4031:
 12023   002842  5030               	movf	___fldiv@bexp^0,w,c
 12024   002844  A4D8               	btfss	status,2,c
 12025   002846  EF27  F014         	goto	u3511
 12026   00284A  EF29  F014         	goto	u3510
 12027   00284E                     u3511:
 12028   00284E  EF33  F014         	goto	l4039
 12029   002852                     u3510:
 12030   002852  0E00               	movlw	0
 12031   002854  6E19               	movwf	?___fldiv^0,c
 12032   002856  0E00               	movlw	0
 12033   002858  6E1A               	movwf	(?___fldiv+1)^0,c
 12034   00285A  0E00               	movlw	0
 12035   00285C  6E1B               	movwf	(?___fldiv+2)^0,c
 12036   00285E  0E00               	movlw	0
 12037   002860  6E1C               	movwf	(?___fldiv+3)^0,c
 12038   002862  EF64  F015         	goto	l1295
 12039   002866                     l4039:
 12040   002866  5031               	movf	___fldiv@aexp^0,w,c
 12041   002868  C030  F021         	movff	___fldiv@bexp,??___fldiv
 12042   00286C  6A22               	clrf	(??___fldiv+1)^0,c
 12043   00286E  5E21               	subwf	??___fldiv^0,f,c
 12044   002870  0E00               	movlw	0
 12045   002872  5A22               	subwfb	(??___fldiv+1)^0,f,c
 12046   002874  0E7F               	movlw	127
 12047   002876  2421               	addwf	??___fldiv^0,w,c
 12048   002878  6E2A               	movwf	___fldiv@new_exp^0,c
 12049   00287A  0E00               	movlw	0
 12050   00287C  2022               	addwfc	(??___fldiv+1)^0,w,c
 12051   00287E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12052   002880  C019  F025         	movff	___fldiv@b,___fldiv@rem
 12053   002884  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 12054   002888  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 12055   00288C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 12056   002890  0E00               	movlw	0
 12057   002892  6E19               	movwf	___fldiv@b^0,c
 12058   002894  0E00               	movlw	0
 12059   002896  6E1A               	movwf	(___fldiv@b+1)^0,c
 12060   002898  0E00               	movlw	0
 12061   00289A  6E1B               	movwf	(___fldiv@b+2)^0,c
 12062   00289C  0E00               	movlw	0
 12063   00289E  6E1C               	movwf	(___fldiv@b+3)^0,c
 12064   0028A0  0E00               	movlw	0
 12065   0028A2  6E2C               	movwf	___fldiv@grs^0,c
 12066   0028A4  0E00               	movlw	0
 12067   0028A6  6E2D               	movwf	(___fldiv@grs+1)^0,c
 12068   0028A8  0E00               	movlw	0
 12069   0028AA  6E2E               	movwf	(___fldiv@grs+2)^0,c
 12070   0028AC  0E00               	movlw	0
 12071   0028AE  6E2F               	movwf	(___fldiv@grs+3)^0,c
 12072   0028B0  0E00               	movlw	0
 12073   0028B2  6E31               	movwf	___fldiv@aexp^0,c
 12074   0028B4  EF94  F014         	goto	l1297
 12075   0028B8                     l4049:
 12076   0028B8  5031               	movf	___fldiv@aexp^0,w,c
 12077   0028BA  B4D8               	btfsc	status,2,c
 12078   0028BC  EF62  F014         	goto	u3521
 12079   0028C0  EF64  F014         	goto	u3520
 12080   0028C4                     u3521:
 12081   0028C4  EF7B  F014         	goto	l4057
 12082   0028C8                     u3520:
 12083   0028C8  90D8               	bcf	status,0,c
 12084   0028CA  3625               	rlcf	___fldiv@rem^0,f,c
 12085   0028CC  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 12086   0028CE  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 12087   0028D0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 12088   0028D2  90D8               	bcf	status,0,c
 12089   0028D4  3619               	rlcf	___fldiv@b^0,f,c
 12090   0028D6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12091   0028D8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12092   0028DA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12093   0028DC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12094   0028DE  EF73  F014         	goto	u3531
 12095   0028E2  EF75  F014         	goto	u3530
 12096   0028E6                     u3531:
 12097   0028E6  EF76  F014         	goto	l1300
 12098   0028EA                     u3530:
 12099   0028EA  8019               	bsf	___fldiv@b^0,0,c
 12100   0028EC                     l1300:
 12101   0028EC  90D8               	bcf	status,0,c
 12102   0028EE  362C               	rlcf	___fldiv@grs^0,f,c
 12103   0028F0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12104   0028F2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12105   0028F4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12106   0028F6                     l4057:
 12107   0028F6  501D               	movf	___fldiv@a^0,w,c
 12108   0028F8  5C25               	subwf	___fldiv@rem^0,w,c
 12109   0028FA  501E               	movf	(___fldiv@a+1)^0,w,c
 12110   0028FC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 12111   0028FE  501F               	movf	(___fldiv@a+2)^0,w,c
 12112   002900  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 12113   002902  5020               	movf	(___fldiv@a+3)^0,w,c
 12114   002904  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 12115   002906  A0D8               	btfss	status,0,c
 12116   002908  EF88  F014         	goto	u3541
 12117   00290C  EF8A  F014         	goto	u3540
 12118   002910                     u3541:
 12119   002910  EF93  F014         	goto	l4063
 12120   002914                     u3540:
 12121   002914  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 12122   002916  501D               	movf	___fldiv@a^0,w,c
 12123   002918  5E25               	subwf	___fldiv@rem^0,f,c
 12124   00291A  501E               	movf	(___fldiv@a+1)^0,w,c
 12125   00291C  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 12126   00291E  501F               	movf	(___fldiv@a+2)^0,w,c
 12127   002920  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 12128   002922  5020               	movf	(___fldiv@a+3)^0,w,c
 12129   002924  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 12130   002926                     l4063:
 12131   002926  2A31               	incf	___fldiv@aexp^0,f,c
 12132   002928                     l1297:
 12133   002928  0E19               	movlw	25
 12134   00292A  6431               	cpfsgt	___fldiv@aexp^0,c
 12135   00292C  EF9A  F014         	goto	u3551
 12136   002930  EF9C  F014         	goto	u3550
 12137   002934                     u3551:
 12138   002934  EF5C  F014         	goto	l4049
 12139   002938                     u3550:
 12140   002938  5025               	movf	___fldiv@rem^0,w,c
 12141   00293A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 12142   00293C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 12143   00293E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 12144   002940  B4D8               	btfsc	status,2,c
 12145   002942  EFA5  F014         	goto	u3561
 12146   002946  EFA7  F014         	goto	u3560
 12147   00294A                     u3561:
 12148   00294A  EFBF  F014         	goto	l4075
 12149   00294E                     u3560:
 12150   00294E  802C               	bsf	___fldiv@grs^0,0,c
 12151   002950  EFBF  F014         	goto	l4075
 12152   002954                     l4069:
 12153   002954  90D8               	bcf	status,0,c
 12154   002956  3619               	rlcf	___fldiv@b^0,f,c
 12155   002958  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12156   00295A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12157   00295C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12158   00295E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12159   002960  EFB4  F014         	goto	u3571
 12160   002964  EFB6  F014         	goto	u3570
 12161   002968                     u3571:
 12162   002968  EFB7  F014         	goto	l1306
 12163   00296C                     u3570:
 12164   00296C  8019               	bsf	___fldiv@b^0,0,c
 12165   00296E                     l1306:
 12166   00296E  90D8               	bcf	status,0,c
 12167   002970  362C               	rlcf	___fldiv@grs^0,f,c
 12168   002972  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12169   002974  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12170   002976  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12171   002978  062A               	decf	___fldiv@new_exp^0,f,c
 12172   00297A  A0D8               	btfss	status,0,c
 12173   00297C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 12174   00297E                     l4075:
 12175   00297E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 12176   002980  EFC4  F014         	goto	u3581
 12177   002984  EFC6  F014         	goto	u3580
 12178   002988                     u3581:
 12179   002988  EFAA  F014         	goto	l4069
 12180   00298C                     u3580:
 12181   00298C  0E00               	movlw	0
 12182   00298E  6E31               	movwf	___fldiv@aexp^0,c
 12183   002990  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12184   002992  EFCD  F014         	goto	u3591
 12185   002996  EFCF  F014         	goto	u3590
 12186   00299A                     u3591:
 12187   00299A  EFF3  F014         	goto	l1308
 12188   00299E                     u3590:
 12189   00299E  0EFF               	movlw	255
 12190   0029A0  142C               	andwf	___fldiv@grs^0,w,c
 12191   0029A2  6E21               	movwf	??___fldiv^0,c
 12192   0029A4  0EFF               	movlw	255
 12193   0029A6  142D               	andwf	(___fldiv@grs+1)^0,w,c
 12194   0029A8  6E22               	movwf	(??___fldiv+1)^0,c
 12195   0029AA  0EFF               	movlw	255
 12196   0029AC  142E               	andwf	(___fldiv@grs+2)^0,w,c
 12197   0029AE  6E23               	movwf	(??___fldiv+2)^0,c
 12198   0029B0  0E7F               	movlw	127
 12199   0029B2  142F               	andwf	(___fldiv@grs+3)^0,w,c
 12200   0029B4  6E24               	movwf	(??___fldiv+3)^0,c
 12201   0029B6  5021               	movf	??___fldiv^0,w,c
 12202   0029B8  1022               	iorwf	(??___fldiv+1)^0,w,c
 12203   0029BA  1023               	iorwf	(??___fldiv+2)^0,w,c
 12204   0029BC  1024               	iorwf	(??___fldiv+3)^0,w,c
 12205   0029BE  B4D8               	btfsc	status,2,c
 12206   0029C0  EFE4  F014         	goto	u3601
 12207   0029C4  EFE6  F014         	goto	u3600
 12208   0029C8                     u3601:
 12209   0029C8  EFEA  F014         	goto	l1309
 12210   0029CC                     u3600:
 12211   0029CC                     l4083:
 12212   0029CC  0E01               	movlw	1
 12213   0029CE  6E31               	movwf	___fldiv@aexp^0,c
 12214   0029D0  EFF3  F014         	goto	l1308
 12215   0029D4                     l1309:
 12216   0029D4  A019               	btfss	___fldiv@b^0,0,c
 12217   0029D6  EFEF  F014         	goto	u3611
 12218   0029DA  EFF1  F014         	goto	u3610
 12219   0029DE                     u3611:
 12220   0029DE  EFF3  F014         	goto	l1308
 12221   0029E2                     u3610:
 12222   0029E2  EFE6  F014         	goto	l4083
 12223   0029E6                     l1308:
 12224   0029E6  5031               	movf	___fldiv@aexp^0,w,c
 12225   0029E8  B4D8               	btfsc	status,2,c
 12226   0029EA  EFF9  F014         	goto	u3621
 12227   0029EE  EFFB  F014         	goto	u3620
 12228   0029F2                     u3621:
 12229   0029F2  EF1F  F015         	goto	l4095
 12230   0029F6                     u3620:
 12231   0029F6  0E01               	movlw	1
 12232   0029F8  2619               	addwf	___fldiv@b^0,f,c
 12233   0029FA  0E00               	movlw	0
 12234   0029FC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 12235   0029FE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 12236   002A00  221C               	addwfc	(___fldiv@b+3)^0,f,c
 12237   002A02  A01C               	btfss	(___fldiv@b+3)^0,0,c
 12238   002A04  EF06  F015         	goto	u3631
 12239   002A08  EF08  F015         	goto	u3630
 12240   002A0C                     u3631:
 12241   002A0C  EF1F  F015         	goto	l4095
 12242   002A10                     u3630:
 12243   002A10  C019  F021         	movff	___fldiv@b,??___fldiv
 12244   002A14  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 12245   002A18  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 12246   002A1C  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 12247   002A20  3424               	rlcf	(??___fldiv+3)^0,w,c
 12248   002A22  3224               	rrcf	(??___fldiv+3)^0,f,c
 12249   002A24  3223               	rrcf	(??___fldiv+2)^0,f,c
 12250   002A26  3222               	rrcf	(??___fldiv+1)^0,f,c
 12251   002A28  3221               	rrcf	??___fldiv^0,f,c
 12252   002A2A  C021  F019         	movff	??___fldiv,___fldiv@b
 12253   002A2E  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 12254   002A32  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 12255   002A36  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 12256   002A3A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 12257   002A3C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 12258   002A3E                     l4095:
 12259   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12260   002A40  EF2A  F015         	goto	u3641
 12261   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12262   002A46  E108               	bnz	u3640
 12263   002A48  282A               	incf	___fldiv@new_exp^0,w,c
 12264   002A4A  A0D8               	btfss	status,0,c
 12265   002A4C  EF2A  F015         	goto	u3641
 12266   002A50  EF2C  F015         	goto	u3640
 12267   002A54                     u3641:
 12268   002A54  EF37  F015         	goto	l4099
 12269   002A58                     u3640:
 12270   002A58  0E00               	movlw	0
 12271   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12272   002A5C  682A               	setf	___fldiv@new_exp^0,c
 12273   002A5E  0E00               	movlw	0
 12274   002A60  6E19               	movwf	___fldiv@b^0,c
 12275   002A62  0E00               	movlw	0
 12276   002A64  6E1A               	movwf	(___fldiv@b+1)^0,c
 12277   002A66  0E00               	movlw	0
 12278   002A68  6E1B               	movwf	(___fldiv@b+2)^0,c
 12279   002A6A  0E00               	movlw	0
 12280   002A6C  6E1C               	movwf	(___fldiv@b+3)^0,c
 12281   002A6E                     l4099:
 12282   002A6E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12283   002A70  EF44  F015         	goto	u3650
 12284   002A74  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12285   002A76  E106               	bnz	u3651
 12286   002A78  042A               	decf	___fldiv@new_exp^0,w,c
 12287   002A7A  B0D8               	btfsc	status,0,c
 12288   002A7C  EF42  F015         	goto	u3651
 12289   002A80  EF44  F015         	goto	u3650
 12290   002A84                     u3651:
 12291   002A84  EF52  F015         	goto	l4103
 12292   002A88                     u3650:
 12293   002A88  0E00               	movlw	0
 12294   002A8A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12295   002A8C  0E00               	movlw	0
 12296   002A8E  6E2A               	movwf	___fldiv@new_exp^0,c
 12297   002A90  0E00               	movlw	0
 12298   002A92  6E19               	movwf	___fldiv@b^0,c
 12299   002A94  0E00               	movlw	0
 12300   002A96  6E1A               	movwf	(___fldiv@b+1)^0,c
 12301   002A98  0E00               	movlw	0
 12302   002A9A  6E1B               	movwf	(___fldiv@b+2)^0,c
 12303   002A9C  0E00               	movlw	0
 12304   002A9E  6E1C               	movwf	(___fldiv@b+3)^0,c
 12305   002AA0  0E00               	movlw	0
 12306   002AA2  6E29               	movwf	___fldiv@sign^0,c
 12307   002AA4                     l4103:
 12308   002AA4  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 12309   002AA8  A030               	btfss	___fldiv@bexp^0,0,c
 12310   002AAA  EF59  F015         	goto	u3661
 12311   002AAE  EF5B  F015         	goto	u3660
 12312   002AB2                     u3661:
 12313   002AB2  EF5E  F015         	goto	l4109
 12314   002AB6                     u3660:
 12315   002AB6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12316   002AB8  EF5F  F015         	goto	l4111
 12317   002ABC                     l4109:
 12318   002ABC  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12319   002ABE                     l4111:
 12320   002ABE  90D8               	bcf	status,0,c
 12321   002AC0  3030               	rrcf	___fldiv@bexp^0,w,c
 12322   002AC2  6E1C               	movwf	(___fldiv@b+3)^0,c
 12323   002AC4  EF15  F014         	goto	l4025
 12324   002AC8                     l1295:
 12325   002AC8  0012               	return		;funcret
 12326   002ACA                     __end_of___fldiv:
 12327                           	callstack 0
 12328                           
 12329 ;; *************** function _HighISR *****************
 12330 ;; Defined at:
 12331 ;;		line 59 in file "interrupts.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		None
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12349 ;;Total ram usage:        0 bytes
 12350 ;; Hardware stack levels used: 1
 12351 ;; This function calls:
 12352 ;;		Nothing
 12353 ;; This function is called by:
 12354 ;;		Interrupt level 2
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           	psect	intcode
 12359   000008                     __pintcode:
 12360                           	callstack 0
 12361   000008                     _HighISR:
 12362                           	callstack 22
 12363                           
 12364                           ;incstack = 0
 12365   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12366   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12367   00000C  0011               	retfie		f
 12368   00000E                     __end_of_HighISR:
 12369                           	callstack 0
 12370                           
 12371                           	psect	rparam
 12372   000000                     
 12373                           	psect	temp
 12374   00005F                     btemp:
 12375                           	callstack 0
 12376   00005F                     	ds	1
 12377   000000                     int$flags	set	btemp
 12378   000000                     wtemp8	set	btemp+1
 12379   000000                     ttemp5	set	btemp+1
 12380   000000                     ttemp6	set	btemp+4
 12381   000000                     ttemp7	set	btemp+8
 12382                           
 12383                           	psect	idloc
 12384                           
 12385                           ;Config register IDLOC0 @ 0x200000
 12386                           ;	unspecified, using default values
 12387   200000                     	org	2097152
 12388   200000  0FFF               	dw	4095
 12389                           
 12390                           ;Config register IDLOC1 @ 0x200002
 12391                           ;	unspecified, using default values
 12392   200002                     	org	2097154
 12393   200002  0FFF               	dw	4095
 12394                           
 12395                           ;Config register IDLOC2 @ 0x200004
 12396                           ;	unspecified, using default values
 12397   200004                     	org	2097156
 12398   200004  0FFF               	dw	4095
 12399                           
 12400                           ;Config register IDLOC3 @ 0x200006
 12401                           ;	unspecified, using default values
 12402   200006                     	org	2097158
 12403   200006  0FFF               	dw	4095
 12404                           
 12405                           ;Config register IDLOC4 @ 0x200008
 12406                           ;	unspecified, using default values
 12407   200008                     	org	2097160
 12408   200008  0FFF               	dw	4095
 12409                           
 12410                           ;Config register IDLOC5 @ 0x20000A
 12411                           ;	unspecified, using default values
 12412   20000A                     	org	2097162
 12413   20000A  0FFF               	dw	4095
 12414                           
 12415                           ;Config register IDLOC6 @ 0x20000C
 12416                           ;	unspecified, using default values
 12417   20000C                     	org	2097164
 12418   20000C  0FFF               	dw	4095
 12419                           
 12420                           ;Config register IDLOC7 @ 0x20000E
 12421                           ;	unspecified, using default values
 12422   20000E                     	org	2097166
 12423   20000E  0FFF               	dw	4095
 12424                           
 12425                           	psect	config
 12426                           
 12427                           ;Config register CONFIG1L @ 0x300000
 12428                           ;	External Oscillator mode Selection bits
 12429                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12430                           ;	Power-up default value for COSC bits
 12431                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12432   300000                     	org	3145728
 12433   300000  AA                 	db	170
 12434                           
 12435                           ;Config register CONFIG1H @ 0x300001
 12436                           ;	unspecified, using default values
 12437                           ;	Clock Out Enable bit
 12438                           ;	CLKOUTEN = 0x1, unprogrammed default
 12439                           ;	Clock Switch Enable bit
 12440                           ;	CSWEN = 0x1, unprogrammed default
 12441                           ;	Fail-Safe Clock Monitor Enable bit
 12442                           ;	FCMEN = 0x1, unprogrammed default
 12443   300001                     	org	3145729
 12444   300001  FF                 	db	255
 12445                           
 12446                           ;Config register CONFIG2L @ 0x300002
 12447                           ;	unspecified, using default values
 12448                           ;	Master Clear Enable bit
 12449                           ;	MCLRE = 0x1, unprogrammed default
 12450                           ;	Power-up Timer Enable bit
 12451                           ;	PWRTE = 0x1, unprogrammed default
 12452                           ;	Low-power BOR enable bit
 12453                           ;	LPBOREN = 0x1, unprogrammed default
 12454                           ;	Brown-out Reset Enable bits
 12455                           ;	BOREN = 0x3, unprogrammed default
 12456   300002                     	org	3145730
 12457   300002  FF                 	db	255
 12458                           
 12459                           ;Config register CONFIG2H @ 0x300003
 12460                           ;	unspecified, using default values
 12461                           ;	Brown Out Reset Voltage selection bits
 12462                           ;	BORV = 0x3, unprogrammed default
 12463                           ;	ZCD Disable bit
 12464                           ;	ZCD = 0x1, unprogrammed default
 12465                           ;	PPSLOCK bit One-Way Set Enable bit
 12466                           ;	PPS1WAY = 0x1, unprogrammed default
 12467                           ;	Stack Full/Underflow Reset Enable bit
 12468                           ;	STVREN = 0x1, unprogrammed default
 12469                           ;	Debugger Enable bit
 12470                           ;	DEBUG = 0x1, unprogrammed default
 12471                           ;	Extended Instruction Set Enable bit
 12472                           ;	XINST = 0x1, unprogrammed default
 12473   300003                     	org	3145731
 12474   300003  FF                 	db	255
 12475                           
 12476                           ;Config register CONFIG3L @ 0x300004
 12477                           ;	WDT Period Select bits
 12478                           ;	WDTCPS = 0x1F, unprogrammed default
 12479                           ;	WDT operating mode
 12480                           ;	WDTE = OFF, WDT Disabled
 12481   300004                     	org	3145732
 12482   300004  9F                 	db	159
 12483                           
 12484                           ;Config register CONFIG3H @ 0x300005
 12485                           ;	unspecified, using default values
 12486                           ;	WDT Window Select bits
 12487                           ;	WDTCWS = 0x7, unprogrammed default
 12488                           ;	WDT input clock selector
 12489                           ;	WDTCCS = 0x7, unprogrammed default
 12490   300005                     	org	3145733
 12491   300005  FF                 	db	255
 12492                           
 12493                           ;Config register CONFIG4L @ 0x300006
 12494                           ;	unspecified, using default values
 12495                           ;	Write Protection Block 0
 12496                           ;	WRT0 = 0x1, unprogrammed default
 12497                           ;	Write Protection Block 1
 12498                           ;	WRT1 = 0x1, unprogrammed default
 12499                           ;	Write Protection Block 2
 12500                           ;	WRT2 = 0x1, unprogrammed default
 12501                           ;	Write Protection Block 3
 12502                           ;	WRT3 = 0x1, unprogrammed default
 12503                           ;	Write Protection Block 3
 12504                           ;	WRT4 = 0x1, unprogrammed default
 12505                           ;	Write Protection Block 3
 12506                           ;	WRT5 = 0x1, unprogrammed default
 12507                           ;	Write Protection Block 3
 12508                           ;	WRT6 = 0x1, unprogrammed default
 12509                           ;	Write Protection Block 3
 12510                           ;	WRT7 = 0x1, unprogrammed default
 12511   300006                     	org	3145734
 12512   300006  FF                 	db	255
 12513                           
 12514                           ;Config register CONFIG4H @ 0x300007
 12515                           ;	unspecified, using default values
 12516                           ;	Configuration Register Write Protection bit
 12517                           ;	WRTC = 0x1, unprogrammed default
 12518                           ;	Boot Block Write Protection bit
 12519                           ;	WRTB = 0x1, unprogrammed default
 12520                           ;	Data EEPROM Write Protection bit
 12521                           ;	WRTD = 0x1, unprogrammed default
 12522                           ;	Scanner Enable bit
 12523                           ;	SCANE = 0x1, unprogrammed default
 12524                           ;	Low Voltage Programming Enable bit
 12525                           ;	LVP = 0x1, unprogrammed default
 12526   300007                     	org	3145735
 12527   300007  FF                 	db	255
 12528                           
 12529                           ;Config register CONFIG5L @ 0x300008
 12530                           ;	unspecified, using default values
 12531                           ;	UserNVM Program Memory Code Protection bit
 12532                           ;	CP = 0x1, unprogrammed default
 12533                           ;	DataNVM Memory Code Protection bit
 12534                           ;	CPD = 0x1, unprogrammed default
 12535   300008                     	org	3145736
 12536   300008  FF                 	db	255
 12537                           
 12538                           ;Config register CONFIG5H @ 0x300009
 12539                           ;	unspecified, using default values
 12540   300009                     	org	3145737
 12541   300009  FF                 	db	255
 12542                           
 12543                           ;Config register CONFIG6L @ 0x30000A
 12544                           ;	unspecified, using default values
 12545                           ;	Table Read Protection Block 0
 12546                           ;	EBTR0 = 0x1, unprogrammed default
 12547                           ;	Table Read Protection Block 1
 12548                           ;	EBTR1 = 0x1, unprogrammed default
 12549                           ;	Table Read Protection Block 2
 12550                           ;	EBTR2 = 0x1, unprogrammed default
 12551                           ;	Table Read Protection Block 3
 12552                           ;	EBTR3 = 0x1, unprogrammed default
 12553                           ;	Table Read Protection Block 4
 12554                           ;	EBTR4 = 0x1, unprogrammed default
 12555                           ;	Table Read Protection Block 5
 12556                           ;	EBTR5 = 0x1, unprogrammed default
 12557                           ;	Table Read Protection Block 6
 12558                           ;	EBTR6 = 0x1, unprogrammed default
 12559                           ;	Table Read Protection Block 7
 12560                           ;	EBTR7 = 0x1, unprogrammed default
 12561   30000A                     	org	3145738
 12562   30000A  FF                 	db	255
 12563                           
 12564                           ;Config register CONFIG6H @ 0x30000B
 12565                           ;	unspecified, using default values
 12566                           ;	Boot Block Table Read Protection bit
 12567                           ;	EBTRB = 0x1, unprogrammed default
 12568   30000B                     	org	3145739
 12569   30000B  FF                 	db	255
 12570                           tosu	equ	0xFFF
 12571                           tosh	equ	0xFFE
 12572                           tosl	equ	0xFFD
 12573                           stkptr	equ	0xFFC
 12574                           pclatu	equ	0xFFB
 12575                           pclath	equ	0xFFA
 12576                           pcl	equ	0xFF9
 12577                           tblptru	equ	0xFF8
 12578                           tblptrh	equ	0xFF7
 12579                           tblptrl	equ	0xFF6
 12580                           tablat	equ	0xFF5
 12581                           prodh	equ	0xFF4
 12582                           prodl	equ	0xFF3
 12583                           indf0	equ	0xFEF
 12584                           postinc0	equ	0xFEE
 12585                           postdec0	equ	0xFED
 12586                           preinc0	equ	0xFEC
 12587                           plusw0	equ	0xFEB
 12588                           fsr0h	equ	0xFEA
 12589                           fsr0l	equ	0xFE9
 12590                           wreg	equ	0xFE8
 12591                           indf1	equ	0xFE7
 12592                           postinc1	equ	0xFE6
 12593                           postdec1	equ	0xFE5
 12594                           preinc1	equ	0xFE4
 12595                           plusw1	equ	0xFE3
 12596                           fsr1h	equ	0xFE2
 12597                           fsr1l	equ	0xFE1
 12598                           bsr	equ	0xFE0
 12599                           indf2	equ	0xFDF
 12600                           postinc2	equ	0xFDE
 12601                           postdec2	equ	0xFDD
 12602                           preinc2	equ	0xFDC
 12603                           plusw2	equ	0xFDB
 12604                           fsr2h	equ	0xFDA
 12605                           fsr2l	equ	0xFD9
 12606                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        9
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2673$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2620$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2620$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  310234
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    8441
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  115164
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16403
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7960
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7658
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20955
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2592
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      60        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 23:50:35 2023

               _color_read_Red 48B6                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4866                   ___fldiv@sign 0029                _color_read_Blue 4956  
                           l51 48B4                             l60 49A4                             l45 47C0  
                           l54 4904                             l63 4510                             l48 4DEE  
                           l57 4954                             l66 2DF6                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 3294  
             _color_read_Green 4906                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 4E2C                            l140 4D5A                            l212 4E44  
                          l143 4D5C                            l152 4E5A                            l161 4B5A  
                          l209 4E30                            l146 4D82                            l218 4D30  
                          l410 19CE                            l155 4E64                            l149 4E6E  
                          l510 390E                            l158 4E50                            l503 41E2  
                          l415 1DE8                            l272 4E7C                            l440 1E42  
                          l432 1DE4                            l601 471C                            l610 4BD8  
                          l540 415A                            l516 42E2                            l524 401E  
                          l532 3F80                            l604 476E                            l701 4E0E  
                          l613 4C16                            l621 33C8                            l710 4CCA  
                          l607 4264                            l704 4DA8                            l616 3430  
                          l713 4DCE                            l617 32CC                            l562 4D00  
                          l571 461E                            l707 4CB4                            l580 4678  
                          l556 40BC                            l548 3E38                            l628 3466  
                          l565 4A40                            l574 45C4                            l559 4CE6  
                          l568 4A8E                            l592 44B2                            l672 3288  
                          l840 3A72                            l577 456A                            l586 4C54  
                          l595 4812                            l827 37A2                            l589 4C92  
                          l598 4864                            l678 3292                            l972 3EE2  
                          l983 3CC4                            l978 3C7E                            _abs 4B5C  
                          _pad 4360                            _rel 01B4                            wreg 000FE8  
                 ___flmul@aexp 0043                   ___flmul@bexp 0044                   ___flmul@sign 003E  
                 ___flmul@temp 0049                   ___flmul@prod 0045                Colour_decider@i 007A  
                         l1211 444C                           ?_abs 0013                           l1300 28EC  
                         l1204 4444                           l1241 2034                           l1306 296E  
                         l1250 2304                           l1242 2022                           l1331 272E  
                         l1243 1FE8                           l1308 29E6                           l1309 29D4  
                         l1413 4382                           l1334 25C0                           l1422 2E84  
                         l1327 23CA                           l1344 26F0                           l1336 2638  
                         l1424 2E8C                           l4001 279C                           l1337 2626  
                         l1417 43D8                           l1425 2ED2                           l1258 214E  
                         l4011 27D2                           l4003 27A2                           l1267 221E  
                         l1283 4AD4                           l1371 361A                           l1443 3BC0  
                         l1268 220C                           l1436 3072                           l4101 2A88  
                         l4021 2812                           l4013 27E2                           l4005 27B0  
                         l1453 4B92                           l1382 35B2                           l4111 2ABE  
                         l4103 2AA4                           l1295 2AC8                           l4023 2822  
                         l4031 2842                           l4015 27E4                           l4007 27B2  
                         l1375 3556                           l3311 3CC6                           l1391 46CA  
                         l1368 34BE                           l1456 4B9A                           l4105 2AA8  
                         l1297 2928                           l4041 2880                           l4033 2852  
                         l4025 282A                           l4009 27C2                           l4017 27EC  
                         l4201 25A6                           l4121 2312                           l3401 36D8  
                         l3321 3D48                           l3313 3CD8                           l1449 49F2  
                         l5001 1CCE                           l4107 2AB6                           l4051 28C8  
                         l4043 2890                           l4035 2852                           l4027 282E  
                         l4019 27FC                           l4211 25E2                           l4203 25B0  
                         l4131 2352                           l4123 2320                           l3331 43DA  
                         l3411 374C                           l3403 36EA                           l3315 3CEA  
                         l5003 1CE2                           l5011 1D14                           l1468 3D8E  
                         l1476 4B18                           l4109 2ABC                           l4061 2916  
                         l4053 28DC                           l4045 28A0                           l4221 2654  
                         l4213 25F0                           l4205 25BE                           l4141 2382  
                         l4133 2358                           l4125 2322                           l4301 34E4  
                         l3341 4412                           l3333 43E2                           l3325 4DAA  
                         l3501 429A                           l3405 3718                           l3413 3752  
                         l3421 3910                           l3317 3CF4                           l5013 1D28  
                         l5021 1D5A                           l5005 1CF6                           l4071 295E  
                         l4063 2926                           l4055 28EA                           l4047 28B0  
                         l4039 2866                           l4231 26BE                           l4223 2662  
                         l4215 261E                           l4207 25D0                           l4151 23BA  
                         l4143 2384                           l4135 2368                           l4127 2332  
                         l4119 2306                           l4311 353E                           l3351 443E  
                         l3343 4418                           l3335 43F4                           l3327 4DC6  
                         l3503 42B2                           l3511 3FBE                           l3415 3762  
                         l3407 3738                           l3431 3954                           l3423 3914  
                         l1479 4E7A                           l3319 3D12                           l5031 1DD6  
                         l5023 1D6E                           l5015 1D3C                           l5007 1CFA  
                         l4081 299E                           l4073 296C                           l4065 2938  
                         l4057 28F6                           l4049 28B8                           l4241 2714  
                         l4233 26D8                           l4225 268C                           l4209 25DE  
                         l4161 240A                           l4153 23DA                           l4145 2394  
                         l4137 236E                           l4129 2342                           l4321 35A2  
                         l4313 3540                           l4305 34F8                           l4401 0E5C  
                         l3345 442E                           l3337 43FC                           l3361 37A4  
                         l3505 42CA                           l3513 3FCA                           l3521 3EE4  
                         l3417 3782                           l3409 373A                           l3441 39BC  
                         l3433 3974                           l3425 3922                           l3353 4AD6  
                         l3601 3042                           l5033 1DF0                           l5025 1D86  
                         l5017 1D40                           l5009 1CFE                           l4091 2A10  
                         l4083 29CC                           l4067 294E                           l4075 297E  
                         l4059 2914                           l4235 26F4                           l4243 271A  
                         l4219 2648                           l4227 2690                           l4171 245A  
                         l4163 2414                           l4155 23EA                           l4147 23A4  
                         l4139 2374                           l4251 4AA0                           l4331 35FA  
                         l4323 35C0                           l4315 354C                           l4307 3500  
                         l4403 0E8C                           l3347 4436                           l3339 4404  
                         l3371 386E                           l3363 37C0                           l3515 3FD6  
                         l3507 3F82                           l3523 3F08                           l3531 3F50  
                         l3611 4E48                           l3451 3A32                           l3443 39EA  
                         l3435 3992                           l3427 3942                           l3355 4AE2  
                         l3603 3052                           l5035 1E22                           l5027 1D98  
                         l5019 1D44                           l4093 2A3A                           l4077 298C  
                         l4069 2954                           l4261 3EA6                           l4245 271E  
                         l4237 2704                           l4229 26AA                           l4181 249C  
                         l4173 2466                           l4165 242A                           l4149 23B4  
                         l3701 1EDC                           l4333 3608                           l4325 35C2  
                         l4317 3588                           l4309 350C                           l4501 15C4  
                         l4421 0FDE                           l4413 0EFE                           l4405 0EC0  
                         l3349 4438                           l3373 388A                           l3365 3814  
                         l3541 4068                           l3509 3FA6                           l3517 3FEE  
                         l3533 3F68                           l3525 3F20                           l3613 4E4C  
                         l3621 4E56                           l3381 362E                           l3453 3A52  
                         l3445 3A0A                           l3437 399A                           l3429 3946  
                         l3357 4AF4                           l3461 437A                           l4341 49B2  
                         l5029 1DAC                           l5037 1E2E                           l4087 29F6  
                         l4095 2A3E                           l4079 2990                           l4263 3EB6  
                         l4255 3E3A                           l4271 3BC2                           l4239 2712  
                         l4191 24FE                           l4183 24AC                           l4175 2474  
                         l4167 2436                           l4159 23FE                           l3703 1EEC  
                         l3711 1F16                           l4335 360A                           l4327 35C6  
                         l4319 3594                           l4511 1644                           l4423 1010  
                         l4415 0F50                           l4407 0EF4                           l3375 38CE  
                         l3367 3828                           l3543 4074                           l3535 4020  
                         l3551 4CD0                           l3519 4006                           l3527 3F2C  
                         l3607 4E66                           l3615 4E5C                           l4351 4774  
                         l3631 4B56                           l3623 4B1C                           l3391 3684  
                         l3383 364E                           l3447 3A1C                           l3439 39AE  
                         l3471 4B5C                           l3359 4AF8                           l3463 438E  
                         l4343 49CE                           l4097 2A58                           l4089 2A02  
                         l4265 3EDA                           l4257 3E68                           l4281 3C4C  
                         l4273 3BF0                           l4193 251A                           l4185 24C6  
                         l4177 2480                           l4169 244E                           l3801 211E  
                         l3721 1F4E                           l3713 1F26                           l3705 1EFC  
                         l4249 4A90                           l4329 35EA                           l4521 165C  
                         l4441 1190                           l4433 1094                           l4425 1016  
                         l4417 0F82                           l3369 382C                           l3481 40E2  
                         l3537 4044                           l3545 408C                           l3553 4CE0  
                         l3529 3F38                           l3609 4E6A                           l3617 4E60  
                         l4361 47AC                           l4353 477E                           l3641 4CB0  
                         l3633 4B58                           l3625 4B20                           l3393 3690  
                         l3385 3652                           l3377 361C                           l3449 3A22  
                         l3473 4B76                           l3465 43A2                           l3457 4360  
                         l3561 2E3C                           l4345 49EA                           l4099 2A6E  
                         l4267 3EE0                           l4259 3E78                           l4283 3C5E  
                         l4275 3C00                           l4195 2544                           l4187 24D6  
                         l4179 2490                           l3803 212E                           l3731 1F62  
                         l3723 1F52                           l3715 1F38                           l3707 1F0C  
                         l4523 168E                           l4443 11A2                           l4451 134E  
                         l4435 10A8                           l4427 1032                           l4419 0F8A  
                         l3491 4142                           l3483 40FA                           l3547 40A4  
                         l3539 405C                           l3651 4A42                           l3643 49F4  
                         l3475 4D5C                           l4371 47B6                           l4363 47AE  
                         l4355 478E                           l3627 4B28                           l3619 4E52  
                         l3395 36AE                           l3387 3660                           l3379 3620  
                         l3467 43A6                           l3459 436E                           l3571 2EAA  
                         l3563 2E5C                           l3555 2DF8                           l4339 49A6  
                         l4285 3C6C                           l4277 3C2E                           l4197 257A  
                         l4189 24F2                           l3821 21B0                           l3813 2188  
                         l3805 213E                           l3741 1F76                           l3733 1F66  
                         l3725 1F56                           l3717 1F46                           l3709 1F0E  
                         l4293 346A                           l4541 1766                           l4525 16C0  
                         l4517 1650                           l4509 1606                           l4453 1380  
                         l4461 13BE                           l4445 121E                           l4437 1148  
                         l4429 1088                           l3485 4106                           l3493 4266  
                         l4701 4634                           l3661 45DA                           l3549 4CCC  
                         l3653 4A56                           l4613 4DF0                           l3645 4A08  
                         l3477 4D6C                           l4373 47B8                           l4365 47B0  
                         l4357 4798                           l4349 4770                           l3637 4C94  
                         l4621 415C                           l3629 4B30                           l4381 44B4  
                         l3397 36B6                           l3389 3680                           l3469 43C4  
                         l3581 2EE2                           l3573 2EBA                           l3565 2E78  
                         l3557 2E18                           ?_pad 0011                           l4287 3CBC  
                         l4279 3C3E                           l4199 2588                           l3823 21B8  
                         l3815 2192                           l3807 2164                           l3831 21DC  
                         l3751 1F8A                           l3743 1F7A                           l3735 1F6A  
                         l3727 1F5A                           l3719 1F4A                           l3671 1E46  
                         l4295 347A                           l4543 1798                           l4551 17CE  
                         l4463 13F0                           l4471 142E                           l4455 13B2  
                         l4447 127A                           l4439 1158                           l3487 4112  
                         l3479 40BE                           l3495 426A                           l4703 464C  
                         l3663 45F2                           l3655 4A62                           l4615 4DF8  
                         l3647 4A14                           l3911 4D46                           l3903 4D32  
                         l4375 47BA                           l4367 47B2                           l4359 47A2  
                         l4391 2C92                           l4383 2ACA                           l3639 4CA0  
                         l4631 418A                           l4623 416E                           l3399 36CA  
                         l3583 2EE8                           l3591 2FDA                           l3575 2EC6  
                         l3567 2E94                           l3559 2E2C                           l4711 469C  
                         l4289 3CC2                           l3841 222E                           l3833 21E0  
                         l3825 21BC                           l3817 21A0                           l3809 2174  
                         l3761 2002                           l3753 1FB4                           l3745 1F7E  
                         l3737 1F6E                           l3729 1F5E                           l3681 1E82  
                         l3673 1E52                           l4297 3488                           l4553 1800  
                         l4537 1702                           l4473 1460                           l4465 1422  
                         l4449 12F6                           l3489 412A                           l3497 4282  
                         l3657 4A76                           l4721 41E4                           l4617 4E02  
                         l3649 4A28                           l3913 4D48                           l3905 4D3C  
                         l4377 47BC                           l4369 47B4                           l4393 2D2A  
                         l4385 2B96                           l3665 4512                           l4641 41C8  
                         l4633 418E                           l4625 4170                           l3593 2FF4  
                         l3585 2F6A                           l3577 2ECE                           l3569 2EA4  
                         l4713 46B8                           l4705 467A                           l3851 2294  
                         l3843 223A                           l3835 21EE                           l3827 21CC  
                         l3819 21A2                           l3771 2042                           l3763 2006  
                         l3755 1FD0                           l3747 1F82                           l3739 1F72  
                         l3691 1EB2                           l3683 1E92                           l3675 1E60  
                         l4299 34CE                           l4555 1832                           l4539 1734  
                         l4475 1492                           l3499 428E                           l3659 45C6  
                         l4723 41F8                           l4619 4E0C                           l3907 4D42  
                         l3915 4DD2                           l4379 47BE                           l4395 2D5E  
                         l4387 2BCA                           l3667 4526                           l4731 3074  
                         l4643 41CA                           l4635 41B2                           l4627 4172  
                         l3931 494C                           l3923 48B6                           l3595 3012  
                         l3587 2F70                           l3579 2EDA                           l4707 468C  
                         l4651 3294                           l3861 22DC                           l3853 22A4  
                         l3845 2248                           l3837 2204                           l3829 21CE  
                         l3781 2084                           l3773 2052                           l3765 2014  
                         l3757 1FE0                           l3749 1F86                           l3693 1EC4  
                         l3685 1E94                           l3677 1E62                           l4573 18EC  
                         l4557 186C                           l4565 18AA                           l4493 1554  
                         l4477 14CC                           l4485 150A                           l4397 0E26  
                         l4725 4210                           l4717 47C2                           l3909 4D44  
                         l4389 2C5E                           l3669 453E                           l4741 30E4  
                         l4733 307C                           l4645 41D4                           l4637 41BC  
                         l4629 4174                           l4581 4E10                           l3925 48FC  
                         l3917 4866                           l3941 4E30                           l3597 302C  
                         l3589 2F76                           l4709 4694                           l4661 3370  
                         l4653 3296                           l4901 19B6                           l4821 190E  
                         l3863 22DE                           l3855 22C4                           l3847 2282  
                         l3791 20B2                           l3783 2092                           l3767 2016  
                         l3759 1FF6                           l3695 1EC6                           l3679 1E72  
                         l3687 1E9C                           l4487 1548                           l4399 0E50  
                         l4719 4814                           l4727 4224                           l3951 4C56  
                         l4751 3180                           l4743 30FC                           l4647 41D6  
                         l4639 41BE                           l4591 4E2A                           l4583 4E1A  
                         l3935 4956                           l3919 48AC                           l3943 4E40  
                         l3599 303C                           l4671 339E                           l4663 3374  
                         l4655 32AE                           l4911 1A00                           l4903 19BA  
                         l4831 1926                           l4823 1912                           l4815 1902  
                         l3865 22E4                           l3857 22C8                           l3849 2284  
                         l3793 20BC                           l3785 209E                           l3777 2066  
                         l3769 2020                           l3697 1ECC                           l3689 1EAC  
                         l4577 18F8                           l4497 1560                           l4729 4238  
                         l3953 471E                           l3945 4C18                           l3961 3DD8  
                         l4761 322E                           l4753 31AA                           l4745 3126  
                         l4737 308E                           l4649 41E0                           l4585 4E1C  
                         l3937 499C                           l3929 4906                           l4593 4D02  
                         l3881 3AB8                           l3873 3A74                           l4681 33E0  
                         l4673 33A8                           l4665 338C                           l4657 32CE  
                         l4921 1A58                           l4913 1A14                           l4905 19DC  
                         l4841 1932                           l4833 1928                           l4825 1916  
                         l4817 1906                           l3867 22F2                           l3859 22D6  
                         l3787 20A2                           l3779 2076                           l3795 20C2  
                         l3699 1EDA                           l4499 1592                           l3971 456C  
                         l3947 46CC                           l3963 3DE4                           l3955 3D90  
                         l4763 3246                           l4755 31C2                           l4747 313E  
                         l4739 30BC                           l4587 4E26                           l4595 4D06  
                         l3883 3AC8                           l3875 3A98                           l4691 3418  
                         l4683 33E2                           l4675 33AA                           l4667 338E  
                         l4659 3322                           l4931 1ABC                           l4923 1A5C  
                         l4915 1A20                           l4907 19F4                           l4851 193C  
                         l4843 1934                           l4835 192A                           l4827 1922  
                         l4819 190A                           l3981 2730                           l3869 22F4  
                         l3797 20E8                           l3789 20B0                           l3973 4580  
                         l4693 4D84                           l3949 444E                           l3957 3DB4  
                         l3965 3DFC                           l4765 3270                           l4757 31EC  
                         l4749 3168                           l4589 4E28                           l4597 4D14  
                         l3893 3B86                           l3885 3AE4                           l3877 3AA6  
                         l4685 33FA                           l4677 33C2                           l4669 3390  
                         l4933 1AD6                           l4941 1B06                           l4925 1A70  
                         l4917 1A34                           l4909 19F8                           l4861 1946  
                         l4853 193E                           l4845 1936                           l4837 192E  
                         l4829 1924                           l3991 276C                           l3983 273C  
                         l3799 211C                           l3975 4598                           l4695 4D86  
                         l3967 3E14                           l3959 3DCC                           l4759 3204  
                         l4767 3288                           l4599 4D18                           l3887 3B00  
                         l3879 3AB4                           l4679 33D6                           l4687 33FC  
                         l4951 1B70                           l4943 1B24                           l4935 1ADE  
                         l4927 1A84                           l4919 1A52                           l4871 1950  
                         l4863 1948                           l4855 1940                           l4847 1938  
                         l4839 1930                           l3993 277C                           l3985 274A  
                         l4697 4D8C                           l3977 4B9C                           l3969 3E2C  
                         l3889 3B56                           l3897 3B98                           l4689 340A  
                         l4953 1B84                           l4961 1BB6                           l4945 1B2C  
                         l4937 1AE6                           l4929 1AA0                           l4881 196E  
                         l4873 1956                           l4865 194A                           l4857 1942  
                         l4849 193A                           l3995 277E                           l3987 274C  
                         l4699 4620                           l3979 4BDA                           l4963 1BCA  
                         l4971 1BFC                           l4955 1B98                           l4947 1B32  
                         l4939 1AEE                           l4891 198C                           l4883 1976  
                         l4875 195A                           l4867 194C                           l4859 1944  
                         l3989 275C                           l3997 2786                           l4973 1C10  
                         l4981 1C42                           l4965 1BDE                           l4957 1B9C  
                         l4949 1B64                           l4893 1994                           l4885 197C  
                         l4877 195E                           l4869 194E                           l3999 2796  
                         l4983 1C56                           l4991 1C88                           l4975 1C24  
                         l4967 1BE2                           l4959 1BA0                           l4895 199C  
                         l4887 1980                           l4879 1966                           l4993 1C9C  
                         l4985 1C6A                           l4977 1C28                           l4969 1BE6  
                         l4897 19A6                           l4889 1984                           l4995 1CB0  
                         l4987 1C6E                           l4979 1C2C                           l4899 19AE  
                         l4997 1CB4                           l4989 1C72                           l4999 1CB8  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 1E72                           u3001 1E6E  
                         u3010 1E82                           u3011 1E7E                           u3100 1FCE  
                         u3020 1EC4                           u3021 1EC0                           u3110 1FF6  
                         u3030 1EDA                           u3111 1FF2                           u3031 1ED6  
                         u3200 212E                           u3120 2014                           u3040 1EEC  
                         u4000 35B2                   _BAUD4CONbits 000EE9                           u3201 212A  
                         u3121 2010                           u3041 1EE8                           u4001 35AE  
                         u3210 2164                           u3130 2034                           u3050 1EFC  
                         u4010 35C0                           u3211 2160                           u3131 2030  
                         u3051 1EF8                           u4011 35BC                           u3300 222E  
                         u3220 2174                           u3140 2042                           u3060 1F38  
                         u4020 35FA                           u4100 10A8                           u2500 3D48  
                         u3301 222A                           u3221 2170                           u3141 203E  
                         u3061 1F34                           u4021 35F6                           u4101 10A4  
                         u2501 3D44                           u3310 2248                           u3230 21A0  
                         u3150 2052                           u3070 1F46                           u4030 3608  
                         u4110 1158                           u2510 43F4                           u3311 2244  
                         u3231 219C                           u3151 204E                           u3071 1F42  
                         u4031 3604                           u4111 1154                           u2511 43F0  
                         u3320 2282                           u3240 21B0                           u3160 2084  
                         u3080 1FB4                           u4200 1506                           u4120 11A2  
                         u2520 4412                           u2600 36AE                           u3400 3B00  
                         u4040 49EA                           u3321 227E                           u3241 21AC  
                         u3161 2080                           u3081 1FB0                           u4201 1502  
                         u4121 119E                           u2521 440E                           u2601 36AA  
                         u3401 3AFC                           u4041 49E6                           u3330 2294  
                         u3250 21CC                           u3170 2092                           u3090 1FCC  
                         u4210 1548                           u4130 1380                           u2530 442E  
                         u3410 4E40                           u2610 36D8                           _T2PR 000FBC  
                         u3331 2290                           u3251 21C8                           u3171 208E  
                         u3091 1FC6                           u4211 1544                           u4131 137C  
                         u4051 0E56                           u2531 442A                           u3411 4E3C  
                         u2611 36D4                           u3500 2812                           u3340 22A4  
                         u3260 21DC                           u3180 20B0                           u4300 1766  
                         u4220 1592                           u4140 13B2                           u4060 0F50  
                         u3420 3E14                           u2620 3718                           u2540 4B18  
                         u2700 436E                           u3501 280E                           u3341 22A0  
                         u3261 21D8                           u3181 20AC                           u4301 1762  
                         u4221 158E                           u4141 13AE                           u4061 0F4C  
                         u3421 3E10                           u2621 3714                           u2541 4B14  
                         u2701 436A                           u3510 2852                           u3350 22C4  
                         u3270 21EE                           u3190 20E8                           u4310 1798  
                         u4230 15C4                           u4150 13F0                           u4070 0FDE  
                         u2550 37C0                           u3430 3E2C                           u2630 3762  
                         u2470 3CD8                           u2710 43C4                           u3511 284E  
                         u3351 22C0                           u3271 21EA                           u3191 20E4  
                         u4311 1794                           u4231 15C0                           u4151 13EC  
                         u4071 0FDA                           u2551 37BC                           u3431 3E28  
                         u2631 375E                           u2471 3CD4                           u2711 43C0  
                         u5007 33EC                           u3600 29CC                           u3520 28C8  
                         u3440 274A                           u3360 22D6                           u3280 2204  
                         u4320 17CA                           u4240 1602                           u4160 1422  
                         u4080 1032                           u2560 388A                           u2800 401E  
                         u2640 3922                           u2720 4B76                           u2480 3CEA  
                         u3601 29C8                           u3521 28C4                           u3441 2746  
                         u3361 22D2                           u3281 2200                           u4321 17C6  
                         u4241 15FE                           u4161 141E                           u4081 102E  
                         u2561 3886                           u2801 401A                           u2641 391E  
                         u2721 4B72                           u2481 3CE6                           u5017 3422  
                         u3610 29E2                           u3530 28EA                           u3450 275C  
                         u3370 22F2                           u3290 221A                           u4330 1800  
                         u4250 1644                           u4170 1460                           u4090 1088  
                         u2810 3F68                           u2730 4D6C                           u2570 362E  
                         u2650 3954                           u2490 3D12                           u3611 29DE  
                         u3531 28E6                           u3451 2758                           u3371 22EE  
                         u3291 2216                           u4331 17FC                           u4251 1640  
                         u4171 145C                           u4091 1084                           u5107 4242  
                         u2811 3F64                           u2731 4D68                           u5027 3DEE  
                         u2571 362A                           u2651 3950                           u2491 3D0E  
                         u3620 29F6                           u3540 2914                           u3460 276C  
                         u3700 2382                           u4340 1832                           u4260 168E  
                         u4180 1492                           u2820 3F80                           u2740 4D82  
                         u2580 3660                           u2660 3992                           u2900 2EA4  
                         u3380 3A98                           u4500 3454                           u4420 334A  
                         u3621 29F2                           u3541 2910                           u3461 2768  
                         u3701 237E                           u4341 182E                           u4261 168A  
                         u4181 148E                           u5117 4A80                           u2821 3F7C  
                         u2741 4D7E                           u5037 4CA6                           u2581 365C  
                         u2661 398E                           u2901 2EA0                           u3381 3A94  
                         u4501 344E                           u4421 3344                           u3630 2A10  
                         u3550 2938                           u3470 27B0                           u3710 2394  
                         u4350 186C                           u4270 16C0                           u4190 14CC  
                         u2750 4142                           u2830 40A4                           u2670 39BC  
                         u2910 2EBA                           u3390 3AE4                           u4510 3466  
                         u4502 3456                           u4430 335E                           u4422 334C  
                         u3631 2A0C                           u3551 2934                           u3471 27AC  
                         u3711 2390                           u4351 1868                           u4271 16BC  
                         u4191 14C8                           u2751 413E                           u5207 466A  
                         u2831 40A0                           u5127 3FE0                           u5047 4530  
                         u2591 368A                           u2671 39B8                           u2911 2EB6  
                         u3391 3AE0                           u4511 3462                           u4431 3358  
                         u3640 2A58                           u3560 294E                           u3480 27C2  
                         u3800 2634                           u3720 23A4                           u4360 18A6  
                         u4280 16FE                           u2760 415A                           u2840 40BC  
                         u4520 308A                           u2680 39EA                           u2920 2FF4  
                         u4440 3370                           u4432 3360                           u3641 2A54  
                         u3561 294A                           u3481 27BE                           u3801 2630  
                         u3721 23A0                           u4361 18A2                           u4281 16FA  
                         u2761 4156                           u5217 42A4                           u2841 40B8  
                         u5137 4CD6                           u5057 455C                           u4521 3086  
                         u2681 39E6                           u2921 2FF0                           u4441 336C  
                         u3650 2A88                           u3570 296C                           u3490 27D2  
                         u3810 2648                           u3730 23DA                           u4370 18E8  
                         u4290 1734                           u2770 42CA                           u2850 4D00  
                         u4530 30E4                           u2690 3A32                           u2930 3012  
                         u4450 339E                           u3651 2A84                           u3571 2968  
                         u3491 27CE                           u3811 2644                           u3731 23D6  
                         u4371 18E4                           u4291 1730                           u5227 411C  
                         u2771 42C6                           u5147 458A                           u2851 4CFC  
                         u5067 4784                           u4531 30E0                           u2691 3A2E  
                         u2931 300E                           u4451 339A                           u3660 2AB6  
                         u3580 298C                           u3900 3C2E                           u3820 2662  
                         u3740 23EA                           u2780 42E2                           u4540 3126  
                         u4380 4D30                           u2940 302C                           u2860 2E28  
                         u4460 33D6                           u4700 1BCA                           u3661 2AB2  
                         u3581 2988                           u3901 3C2A                           u3821 265E  
                         u3741 23E6                           u2781 42DE                           u5157 45B6  
                         u5077 4A32                           u4541 3122                           u4381 4D2C  
                         u2941 3028                           u2861 2E22                           u4461 33D2  
                         u4701 1BC6                           u3590 299E                           u3910 3C4C  
                         u3830 26AA                           u3750 2564                           u3670 2320  
                         u2790 4006                           u4550 3168                           u2950 303C  
                         u2870 2E2A                           u4470 340A                           u4710 1C10  
                         u3591 299A                           u3911 3C48                           u3831 26A6  
                         u3671 231C                           u5167 45E4                           u2791 4002  
                         u5087 3F42                           u4551 3164                           u2951 3038  
                         u4471 3406                           u4711 1C0C                           u3920 3C6C  
                         u3840 26D8                           u3760 25BE                           u3680 2332  
                         u4560 31AA                           u2960 4B44                           u2880 2E3C  
                         u4480 3418                           u4720 1C56                           u3921 3C68  
                         u3841 26D4                           u3761 25BA                           u3681 232E  
                         u5177 4610                           u5097 4202                           u4561 31A6  
                         u2961 4B3C                           u2881 2E38                           u4481 3414  
                         u4721 1C52                           u3930 3CBC                           u3850 2712  
                         u3770 25DE                           u3690 2342                           u4570 31EC  
                         u2890 2E78                           u4490 3440                           u4730 1C9C  
                         u4650 19DC                           u3931 3CB8                           u3851 270E  
                         u3771 25DA                           u3755 255A                           u3691 233E  
                         u5187 407E                           u4571 31E8                           u2891 2E74  
                         u4491 343A                           u4731 1C98                           u4651 19D8  
                         u3860 3E68                           u3780 25F0                           u3940 347A  
                         u2980 4CCA                           u4580 322E                           u4492 3442  
                         u4740 1CE2                           u4660 1A52                           u3861 3E64  
                         u3781 25EC                           u3941 3476                           u5197 463E  
                         u2981 4CC6                           u4581 322A                           u4741 1CDE  
                         u4661 1A4E                           u3870 3EA6                           u3790 261E  
                         u2990 1E60                           u3950 3488                           u4590 3270  
                         u4750 1D28                           u4670 1AD6                           u3871 3EA2  
                         u3791 261A                           u2991 1E5C                           u3951 3484  
                         u4591 326C                           u4751 1D24                           u4671 1AD2  
                         u3880 3EDA                           u3960 34E4                           u4760 1D6E  
                         u4680 1B24                           u3881 3ED6                           u3961 34E0  
                         u4761 1D6A                           u4681 1B20                           u3890 3BF0  
                         u3970 353A                           u2978 4B46                           u4770 1D98  
                         u4690 1B84                           u3891 3BEC                           u3971 3536  
                         u4771 1D94                           u4691 1B80                           u3980 3584  
                         u4780 1E42                           u3981 3580                           u4781 1E3E  
                         u3990 35A2                           u3991 359E                           u4927 19E6  
                         u4937 1A8E                           u4947 1AF8                           u4957 32A0  
                         u4967 32BA                           u4977 332C                           u4987 337E  
                         u4997 33B4                  _LightBlueMove 471E                           abs@a 0013  
                         _dbuf 0194                           _main 1902                           _dtoa 2DF8  
                         _prec 015E                           _vals 01C9                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4266  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4906                __end_of_HighISR 000E  
       __end_of_color_read_lum 48B6                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 4C56                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 49F4  
              _RunOneBlockTime 01D3                __end_of___aodiv 37A4                __end_of___fladd 2306  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3A74  
              __end_of___fldiv 2ACA                __end_of___flmul 2730                __end_of___flsub 4AD6  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 444E  
                        i2l277 000A                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3294        __end_of_sendCharSerial4 4E46  
   __end_of_I2C_2_Master_Start 4E70     __end_of_I2C_2_Master_Write 4E52                   YellowMove@mL 0020  
                        _flags 00F2                   YellowMove@mR 0022                          _fputc 3CC6  
                        _fputs 4AD6                 delayed_ms@time 0001                          pad@fp 0011  
                        _power 01D5                          _width 015C                          _putch 4E7A  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                 main@run_flag 00E8                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 46CC        __end_of_color_read_Blue 49A6          _I2C_2_Master_RepStart 4E52  
             __end_of_BlueMove 44B4                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 42E4  
      __end_of_turnCalibration 3468                _reverseOneBlock 456C                   __end_of_main 1E46  
                 __end_of_dtoa 3074                   __end_of_stop 42E4                _colour_rel$3025 003A  
              _colour_rel$3026 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 4BDA               __end_of_PinkMove 4866                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 47C2  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 46CC  
             __end_of___xxtofl 361C                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3BC2                         ___fleq 3E3A                  main@temp_1304 00E6  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4DAA              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 4328                         clear_1 4334  
                       clear_2 4340                         _motorL 00F3                         _motorR 01C0  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 49F4  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 4020                     ___flge@ff1 0001  
                   _YellowMove 47C2                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 434E        __end_of_reverseOneBlock 45C6  
     __end_of_color_read_Green 4956         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4E7C                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 4020                   __pidataBANK0 4E76  
                 __pidataBANK1 4E70                  __end_of_fputc 3D90                  __end_of_fputs 4B1A  
                __end_of_putch 4E7C              __end_of_GreenMove 4C94            __end_of_Timer0_init 4E10  
          __end_of_ReversePink 4C18                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0150          __end_of_reverseDetect 4620  
                      ??_putch 0001                     __pbssBANK0 00F0                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 4620                     _getTMR0val 4D84  
            __end_of_RetryMove 4266                      ?_PinkMove 0020              _color_writetoaddr 4DD0  
                   _delayed_ms 4C94                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 001A  
            __end_of_TurnDelay 4D02          __end_of_timed_forward 3E3A            ??_color_writetoaddr 0004  
                colour_rel@rel 0034                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2ACA        __end_of_Interrupts_init 4E7E  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 00EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 4DF0                        _RedMove 4C18             _I2C_2_Master_Start 4E66  
                   ??_PinkMove 0024                     _initUSART4 4E10             _I2C_2_Master_Write 4E46  
                      __Hparam 0000                        _WayBack 0162                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4DF0                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4BDA                        ___aodiv 361C  
                      ___fladd 1E46                        ___aomod 3910                        ___fldiv 2730  
                      ___flmul 2306                        ___flsub 4A90            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 43DA            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 42E4                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3074                        __ptext0 1902                        __ptext1 3294  
                      __ptext2 467A                        __ptext3 49A6                        __ptext4 3A74  
                      __ptext5 2DF8                        __ptext6 4360                        __ptext7 4AD6  
                      __ptext8 3CC6                        __ptext9 4E7A                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005E  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 467A  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 434E  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F0  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BC2                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00FC                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 415C                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3F82                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 002C                    ___fldiv@rem 0025               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032  
             ?_Interrupts_init 0001                    ___flmul@grs 003F                    _CCP1CONbits 000FAB  
                   main@colour 00EC                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 4A42                 __end_of___flge 3CC6                 __end_of___fleq 3EE4  
               _fullSpeedAhead 40BE                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F                 __end_of___wmul 4DD0       __end_of_Forwardhalfblock 467A  
                    _GreenMove 4C56            start_initialization 42E4                    __end_of_abs 4B9C  
                  __end_of_pad 43DA                  _TxBufWriteCnt 005C          __end_of_LightBlueMove 4770  
                 ??_OrangeMove 0024            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 41E4  
                  vfprintf@fmt 0053         __end_of_fullSpeedAhead 415C                       ??___flge 0009  
                     ??___fleq 0021                      _RetryMove 41E4                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                    __pdataBANK0 00FC  
                  __pdataBANK1 01D1                _ForwardOneBlock 4512                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4B9C                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 471E                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                      _TurnDelay 4CCC                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2701 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$3027 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 4814           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 4512              _I2C_2_Master_Idle 4D5C  
            _I2C_2_Master_Init 4D32              _I2C_2_Master_Read 4B1A              _I2C_2_Master_Stop 4E5C  
                _low_threshold 0160                     ?_TurnDelay 0001                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060               getTMR0val@moving 0001  
               colour_rel@vals 0032              _sendStringSerial4 4D02            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 456C                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3A74  
    __end_of_I2C_2_Master_Idle 4D84      __end_of_I2C_2_Master_Init 4D5C      __end_of_I2C_2_Master_Read 4B5C  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4E66                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4DAA                   _TxBufReadCnt 005B  
                     _BlueMove 444E                      _turnRight 3EE4             __end_of_delayed_ms 4CCC  
            ??_turnCalibration 0024                      copy_data0 42F8      __end_of_sendStringSerial4 4D32  
                 ??_colour_rel 0036                  _reverseDetect 45C6  __end_of_I2C_2_Master_RepStart 4E5C  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 3910                   ??_initUSART4 0001  
                     _PinkMove 4814                       __Hrparam 0000         __end_of_Colour_decider 1902  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
        __end_of_fullSpeedBack 40BE                   __Lsmallconst 0E00                    ??_RetryMove 001E  
         TurnDelay@Turn45Delay 0001                    _readColours 44B4                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 003F                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 2DF8                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                _timed_forward 3D90                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 3468                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4E2E                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4B5C                       __ptext11 3910  
                     __ptext20 4E52                       __ptext12 361C                       __ptext21 4B1A  
                     __ptext13 4D02                       __ptext30 4C18                       __ptext22 4E10  
                     __ptext14 4E2E                       __ptext31 46CC                       __ptext23 415C  
                     __ptext15 44B4                       __ptext40 4E5C                       __ptext32 471E  
                     __ptext24 3074                       __ptext16 4866                       __ptext41 4E66  
                     __ptext33 4C56                       __ptext25 3D90                       __ptext17 48B6  
                     __ptext50 4A42                       __ptext42 4D5C                       __ptext34 444E  
                     __ptext26 4C94                       __ptext18 4906                       __ptext51 3F82  
                     __ptext43 4D32                       __ptext35 4D84                       __ptext27 4B9C  
                     __ptext19 4956                       __ptext60 37A4                       __ptext52 4CCC  
                     __ptext44 47C2                       __ptext36 2ACA                       __ptext28 4BDA  
                     __ptext61 4DAA                       __ptext53 456C                       __ptext45 49F4  
                     __ptext37 4770                       __ptext29 4512                       __ptext70 2730  
                     __ptext62 43DA                       __ptext54 45C6                       __ptext46 3EE4  
                     __ptext38 4DD0                       __ptext63 0E26                       __ptext55 4020  
                     __ptext47 4DF0                       __ptext39 4E46                       __ptext64 3468  
                     __ptext56 4E7C                       __ptext48 41E4                       __ptext65 4A90  
                     __ptext57 4620                       __ptext49 4814                       __ptext66 1E46  
                     __ptext58 4266                       __ptext67 2306                       __ptext59 40BE  
                     __ptext68 3BC2                       __ptext69 3E3A                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 49A6                  ??_turnRight45 001E  
                     main@temp 00E4                       _turnLeft 3F82               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 00EE                    _setMotorPWM 37A4                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 006C  
               _high_threshold 01D1               ??_fullSpeedAhead 0018                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 4770  
                     sprintf@f 006E                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 4A42                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 4A90  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 4E2E  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
